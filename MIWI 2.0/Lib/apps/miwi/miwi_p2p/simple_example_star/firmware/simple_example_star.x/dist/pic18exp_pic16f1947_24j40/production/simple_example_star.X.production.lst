

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 23:15:32 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	swtext1,local,class=CONST,delta=2
    35                           	psect	text32,local,class=CODE,merge=1,delta=2
    36                           	psect	text40,local,class=CODE,merge=1,delta=2
    37                           	psect	text42,local,class=CODE,merge=1,delta=2
    38                           	psect	text44,local,class=CODE,merge=1,delta=2
    39                           	psect	text45,local,class=CODE,merge=1,delta=2
    40                           	psect	text50,local,class=CODE,merge=1,delta=2
    41                           	psect	text51,local,class=CODE,merge=1,delta=2
    42                           	psect	text58,local,class=CODE,merge=1,delta=2
    43                           	psect	swtext2,local,class=CONST,delta=2
    44                           	psect	text79,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text87,local,class=CODE,merge=1,delta=2
    47                           	psect	text89,local,class=CODE,merge=1,delta=2
    48                           	psect	text93,local,class=CODE,merge=1,delta=2
    49                           	psect	pa_nodes,global,class=CODE,delta=2
    50                           	dabs	1,0x620,48
    51                           	dabs	1,0x5A0,80
    52                           	dabs	1,0x566,10
    53                           	dabs	1,0x2366,0,_RxBuffer
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0110                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  018C                     	;# 
   127  0190                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0219                     	;# 
   170  021A                     	;# 
   171  021B                     	;# 
   172  021C                     	;# 
   173  021D                     	;# 
   174  021E                     	;# 
   175  021F                     	;# 
   176  028C                     	;# 
   177  028D                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  029F                     	;# 
   196  030C                     	;# 
   197  030D                     	;# 
   198  0311                     	;# 
   199  0311                     	;# 
   200  0312                     	;# 
   201  0313                     	;# 
   202  0314                     	;# 
   203  0315                     	;# 
   204  0315                     	;# 
   205  0316                     	;# 
   206  0318                     	;# 
   207  0318                     	;# 
   208  0319                     	;# 
   209  031A                     	;# 
   210  031C                     	;# 
   211  031C                     	;# 
   212  031D                     	;# 
   213  031E                     	;# 
   214  038C                     	;# 
   215  038D                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  040C                     	;# 
   220  040D                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  048D                     	;# 
   228  0491                     	;# 
   229  0492                     	;# 
   230  0493                     	;# 
   231  0493                     	;# 
   232  0494                     	;# 
   233  0495                     	;# 
   234  0496                     	;# 
   235  0497                     	;# 
   236  0791                     	;# 
   237  0792                     	;# 
   238  0793                     	;# 
   239  0794                     	;# 
   240  0795                     	;# 
   241  0798                     	;# 
   242  0799                     	;# 
   243  079A                     	;# 
   244  079B                     	;# 
   245  079C                     	;# 
   246  079D                     	;# 
   247  07A0                     	;# 
   248  07A1                     	;# 
   249  07A2                     	;# 
   250  07A3                     	;# 
   251  07A4                     	;# 
   252  07A5                     	;# 
   253  07A6                     	;# 
   254  07A7                     	;# 
   255  07A8                     	;# 
   256  07A9                     	;# 
   257  07AA                     	;# 
   258  07AB                     	;# 
   259  07AC                     	;# 
   260  07AD                     	;# 
   261  07AE                     	;# 
   262  07AF                     	;# 
   263  07B0                     	;# 
   264  07B1                     	;# 
   265  07B2                     	;# 
   266  07B3                     	;# 
   267  07B4                     	;# 
   268  07B5                     	;# 
   269  07B6                     	;# 
   270  07B7                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  008F                     	;# 
   318  0090                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0110                     	;# 
   339  0111                     	;# 
   340  0112                     	;# 
   341  0113                     	;# 
   342  0114                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0117                     	;# 
   346  0118                     	;# 
   347  0119                     	;# 
   348  011A                     	;# 
   349  011B                     	;# 
   350  011D                     	;# 
   351  011E                     	;# 
   352  011F                     	;# 
   353  018C                     	;# 
   354  0190                     	;# 
   355  0191                     	;# 
   356  0191                     	;# 
   357  0192                     	;# 
   358  0193                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0194                     	;# 
   362  0195                     	;# 
   363  0196                     	;# 
   364  0199                     	;# 
   365  0199                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  020D                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0219                     	;# 
   397  021A                     	;# 
   398  021B                     	;# 
   399  021C                     	;# 
   400  021D                     	;# 
   401  021E                     	;# 
   402  021F                     	;# 
   403  028C                     	;# 
   404  028D                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  029B                     	;# 
   418  029C                     	;# 
   419  029C                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  030C                     	;# 
   424  030D                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0314                     	;# 
   430  0315                     	;# 
   431  0315                     	;# 
   432  0316                     	;# 
   433  0318                     	;# 
   434  0318                     	;# 
   435  0319                     	;# 
   436  031A                     	;# 
   437  031C                     	;# 
   438  031C                     	;# 
   439  031D                     	;# 
   440  031E                     	;# 
   441  038C                     	;# 
   442  038D                     	;# 
   443  0394                     	;# 
   444  0395                     	;# 
   445  0396                     	;# 
   446  040C                     	;# 
   447  040D                     	;# 
   448  0415                     	;# 
   449  0416                     	;# 
   450  0417                     	;# 
   451  041C                     	;# 
   452  041D                     	;# 
   453  041E                     	;# 
   454  048D                     	;# 
   455  0491                     	;# 
   456  0492                     	;# 
   457  0493                     	;# 
   458  0493                     	;# 
   459  0494                     	;# 
   460  0495                     	;# 
   461  0496                     	;# 
   462  0497                     	;# 
   463  0791                     	;# 
   464  0792                     	;# 
   465  0793                     	;# 
   466  0794                     	;# 
   467  0795                     	;# 
   468  0798                     	;# 
   469  0799                     	;# 
   470  079A                     	;# 
   471  079B                     	;# 
   472  079C                     	;# 
   473  079D                     	;# 
   474  07A0                     	;# 
   475  07A1                     	;# 
   476  07A2                     	;# 
   477  07A3                     	;# 
   478  07A4                     	;# 
   479  07A5                     	;# 
   480  07A6                     	;# 
   481  07A7                     	;# 
   482  07A8                     	;# 
   483  07A9                     	;# 
   484  07AA                     	;# 
   485  07AB                     	;# 
   486  07AC                     	;# 
   487  07AD                     	;# 
   488  07AE                     	;# 
   489  07AF                     	;# 
   490  07B0                     	;# 
   491  07B1                     	;# 
   492  07B2                     	;# 
   493  07B3                     	;# 
   494  07B4                     	;# 
   495  07B5                     	;# 
   496  07B6                     	;# 
   497  07B7                     	;# 
   498  0FE4                     	;# 
   499  0FE5                     	;# 
   500  0FE6                     	;# 
   501  0FE7                     	;# 
   502  0FE8                     	;# 
   503  0FE9                     	;# 
   504  0FEA                     	;# 
   505  0FEB                     	;# 
   506  0FED                     	;# 
   507  0FEE                     	;# 
   508  0FEF                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000D                     	;# 
   523  000E                     	;# 
   524  000F                     	;# 
   525  0010                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  008E                     	;# 
   544  008F                     	;# 
   545  0090                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0093                     	;# 
   549  0094                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0110                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011D                     	;# 
   578  011E                     	;# 
   579  011F                     	;# 
   580  018C                     	;# 
   581  0190                     	;# 
   582  0191                     	;# 
   583  0191                     	;# 
   584  0192                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0194                     	;# 
   589  0195                     	;# 
   590  0196                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019E                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  020D                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0216                     	;# 
   620  0216                     	;# 
   621  0217                     	;# 
   622  0217                     	;# 
   623  0219                     	;# 
   624  021A                     	;# 
   625  021B                     	;# 
   626  021C                     	;# 
   627  021D                     	;# 
   628  021E                     	;# 
   629  021F                     	;# 
   630  028C                     	;# 
   631  028D                     	;# 
   632  0291                     	;# 
   633  0291                     	;# 
   634  0292                     	;# 
   635  0293                     	;# 
   636  0294                     	;# 
   637  0295                     	;# 
   638  0295                     	;# 
   639  0296                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  029B                     	;# 
   645  029C                     	;# 
   646  029C                     	;# 
   647  029D                     	;# 
   648  029E                     	;# 
   649  029F                     	;# 
   650  030C                     	;# 
   651  030D                     	;# 
   652  0311                     	;# 
   653  0311                     	;# 
   654  0312                     	;# 
   655  0313                     	;# 
   656  0314                     	;# 
   657  0315                     	;# 
   658  0315                     	;# 
   659  0316                     	;# 
   660  0318                     	;# 
   661  0318                     	;# 
   662  0319                     	;# 
   663  031A                     	;# 
   664  031C                     	;# 
   665  031C                     	;# 
   666  031D                     	;# 
   667  031E                     	;# 
   668  038C                     	;# 
   669  038D                     	;# 
   670  0394                     	;# 
   671  0395                     	;# 
   672  0396                     	;# 
   673  040C                     	;# 
   674  040D                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  048D                     	;# 
   682  0491                     	;# 
   683  0492                     	;# 
   684  0493                     	;# 
   685  0493                     	;# 
   686  0494                     	;# 
   687  0495                     	;# 
   688  0496                     	;# 
   689  0497                     	;# 
   690  0791                     	;# 
   691  0792                     	;# 
   692  0793                     	;# 
   693  0794                     	;# 
   694  0795                     	;# 
   695  0798                     	;# 
   696  0799                     	;# 
   697  079A                     	;# 
   698  079B                     	;# 
   699  079C                     	;# 
   700  079D                     	;# 
   701  07A0                     	;# 
   702  07A1                     	;# 
   703  07A2                     	;# 
   704  07A3                     	;# 
   705  07A4                     	;# 
   706  07A5                     	;# 
   707  07A6                     	;# 
   708  07A7                     	;# 
   709  07A8                     	;# 
   710  07A9                     	;# 
   711  07AA                     	;# 
   712  07AB                     	;# 
   713  07AC                     	;# 
   714  07AD                     	;# 
   715  07AE                     	;# 
   716  07AF                     	;# 
   717  07B0                     	;# 
   718  07B1                     	;# 
   719  07B2                     	;# 
   720  07B3                     	;# 
   721  07B4                     	;# 
   722  07B5                     	;# 
   723  07B6                     	;# 
   724  07B7                     	;# 
   725  0FE4                     	;# 
   726  0FE5                     	;# 
   727  0FE6                     	;# 
   728  0FE7                     	;# 
   729  0FE8                     	;# 
   730  0FE9                     	;# 
   731  0FEA                     	;# 
   732  0FEB                     	;# 
   733  0FED                     	;# 
   734  0FEE                     	;# 
   735  0FEF                     	;# 
   736  0000                     	;# 
   737  0001                     	;# 
   738  0002                     	;# 
   739  0003                     	;# 
   740  0004                     	;# 
   741  0005                     	;# 
   742  0006                     	;# 
   743  0007                     	;# 
   744  0008                     	;# 
   745  0009                     	;# 
   746  000A                     	;# 
   747  000B                     	;# 
   748  000C                     	;# 
   749  000D                     	;# 
   750  000E                     	;# 
   751  000F                     	;# 
   752  0010                     	;# 
   753  0011                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0014                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0016                     	;# 
   760  0017                     	;# 
   761  0018                     	;# 
   762  0019                     	;# 
   763  001A                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001E                     	;# 
   767  001F                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  008E                     	;# 
   771  008F                     	;# 
   772  0090                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009A                     	;# 
   783  009B                     	;# 
   784  009B                     	;# 
   785  009C                     	;# 
   786  009D                     	;# 
   787  009E                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  010E                     	;# 
   791  010F                     	;# 
   792  0110                     	;# 
   793  0111                     	;# 
   794  0112                     	;# 
   795  0113                     	;# 
   796  0114                     	;# 
   797  0115                     	;# 
   798  0116                     	;# 
   799  0117                     	;# 
   800  0118                     	;# 
   801  0119                     	;# 
   802  011A                     	;# 
   803  011B                     	;# 
   804  011D                     	;# 
   805  011E                     	;# 
   806  011F                     	;# 
   807  018C                     	;# 
   808  0190                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0199                     	;# 
   819  0199                     	;# 
   820  019A                     	;# 
   821  019A                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019B                     	;# 
   826  019C                     	;# 
   827  019C                     	;# 
   828  019D                     	;# 
   829  019D                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  019F                     	;# 
   834  020D                     	;# 
   835  0211                     	;# 
   836  0211                     	;# 
   837  0212                     	;# 
   838  0212                     	;# 
   839  0213                     	;# 
   840  0213                     	;# 
   841  0214                     	;# 
   842  0214                     	;# 
   843  0215                     	;# 
   844  0215                     	;# 
   845  0215                     	;# 
   846  0216                     	;# 
   847  0216                     	;# 
   848  0217                     	;# 
   849  0217                     	;# 
   850  0219                     	;# 
   851  021A                     	;# 
   852  021B                     	;# 
   853  021C                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  028C                     	;# 
   858  028D                     	;# 
   859  0291                     	;# 
   860  0291                     	;# 
   861  0292                     	;# 
   862  0293                     	;# 
   863  0294                     	;# 
   864  0295                     	;# 
   865  0295                     	;# 
   866  0296                     	;# 
   867  0298                     	;# 
   868  0298                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029C                     	;# 
   874  029D                     	;# 
   875  029E                     	;# 
   876  029F                     	;# 
   877  030C                     	;# 
   878  030D                     	;# 
   879  0311                     	;# 
   880  0311                     	;# 
   881  0312                     	;# 
   882  0313                     	;# 
   883  0314                     	;# 
   884  0315                     	;# 
   885  0315                     	;# 
   886  0316                     	;# 
   887  0318                     	;# 
   888  0318                     	;# 
   889  0319                     	;# 
   890  031A                     	;# 
   891  031C                     	;# 
   892  031C                     	;# 
   893  031D                     	;# 
   894  031E                     	;# 
   895  038C                     	;# 
   896  038D                     	;# 
   897  0394                     	;# 
   898  0395                     	;# 
   899  0396                     	;# 
   900  040C                     	;# 
   901  040D                     	;# 
   902  0415                     	;# 
   903  0416                     	;# 
   904  0417                     	;# 
   905  041C                     	;# 
   906  041D                     	;# 
   907  041E                     	;# 
   908  048D                     	;# 
   909  0491                     	;# 
   910  0492                     	;# 
   911  0493                     	;# 
   912  0493                     	;# 
   913  0494                     	;# 
   914  0495                     	;# 
   915  0496                     	;# 
   916  0497                     	;# 
   917  0791                     	;# 
   918  0792                     	;# 
   919  0793                     	;# 
   920  0794                     	;# 
   921  0795                     	;# 
   922  0798                     	;# 
   923  0799                     	;# 
   924  079A                     	;# 
   925  079B                     	;# 
   926  079C                     	;# 
   927  079D                     	;# 
   928  07A0                     	;# 
   929  07A1                     	;# 
   930  07A2                     	;# 
   931  07A3                     	;# 
   932  07A4                     	;# 
   933  07A5                     	;# 
   934  07A6                     	;# 
   935  07A7                     	;# 
   936  07A8                     	;# 
   937  07A9                     	;# 
   938  07AA                     	;# 
   939  07AB                     	;# 
   940  07AC                     	;# 
   941  07AD                     	;# 
   942  07AE                     	;# 
   943  07AF                     	;# 
   944  07B0                     	;# 
   945  07B1                     	;# 
   946  07B2                     	;# 
   947  07B3                     	;# 
   948  07B4                     	;# 
   949  07B5                     	;# 
   950  07B6                     	;# 
   951  07B7                     	;# 
   952  0FE4                     	;# 
   953  0FE5                     	;# 
   954  0FE6                     	;# 
   955  0FE7                     	;# 
   956  0FE8                     	;# 
   957  0FE9                     	;# 
   958  0FEA                     	;# 
   959  0FEB                     	;# 
   960  0FED                     	;# 
   961  0FEE                     	;# 
   962  0FEF                     	;# 
   963  0000                     	;# 
   964  0001                     	;# 
   965  0002                     	;# 
   966  0003                     	;# 
   967  0004                     	;# 
   968  0005                     	;# 
   969  0006                     	;# 
   970  0007                     	;# 
   971  0008                     	;# 
   972  0009                     	;# 
   973  000A                     	;# 
   974  000B                     	;# 
   975  000C                     	;# 
   976  000D                     	;# 
   977  000E                     	;# 
   978  000F                     	;# 
   979  0010                     	;# 
   980  0011                     	;# 
   981  0012                     	;# 
   982  0013                     	;# 
   983  0014                     	;# 
   984  0015                     	;# 
   985  0016                     	;# 
   986  0016                     	;# 
   987  0017                     	;# 
   988  0018                     	;# 
   989  0019                     	;# 
   990  001A                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  001E                     	;# 
   994  001F                     	;# 
   995  008C                     	;# 
   996  008D                     	;# 
   997  008E                     	;# 
   998  008F                     	;# 
   999  0090                     	;# 
  1000  0091                     	;# 
  1001  0092                     	;# 
  1002  0093                     	;# 
  1003  0094                     	;# 
  1004  0095                     	;# 
  1005  0096                     	;# 
  1006  0097                     	;# 
  1007  0098                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  010F                     	;# 
  1019  0110                     	;# 
  1020  0111                     	;# 
  1021  0112                     	;# 
  1022  0113                     	;# 
  1023  0114                     	;# 
  1024  0115                     	;# 
  1025  0116                     	;# 
  1026  0117                     	;# 
  1027  0118                     	;# 
  1028  0119                     	;# 
  1029  011A                     	;# 
  1030  011B                     	;# 
  1031  011D                     	;# 
  1032  011E                     	;# 
  1033  011F                     	;# 
  1034  018C                     	;# 
  1035  0190                     	;# 
  1036  0191                     	;# 
  1037  0191                     	;# 
  1038  0192                     	;# 
  1039  0193                     	;# 
  1040  0193                     	;# 
  1041  0193                     	;# 
  1042  0194                     	;# 
  1043  0195                     	;# 
  1044  0196                     	;# 
  1045  0199                     	;# 
  1046  0199                     	;# 
  1047  019A                     	;# 
  1048  019A                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019B                     	;# 
  1052  019B                     	;# 
  1053  019C                     	;# 
  1054  019C                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  020D                     	;# 
  1062  0211                     	;# 
  1063  0211                     	;# 
  1064  0212                     	;# 
  1065  0212                     	;# 
  1066  0213                     	;# 
  1067  0213                     	;# 
  1068  0214                     	;# 
  1069  0214                     	;# 
  1070  0215                     	;# 
  1071  0215                     	;# 
  1072  0215                     	;# 
  1073  0216                     	;# 
  1074  0216                     	;# 
  1075  0217                     	;# 
  1076  0217                     	;# 
  1077  0219                     	;# 
  1078  021A                     	;# 
  1079  021B                     	;# 
  1080  021C                     	;# 
  1081  021D                     	;# 
  1082  021E                     	;# 
  1083  021F                     	;# 
  1084  028C                     	;# 
  1085  028D                     	;# 
  1086  0291                     	;# 
  1087  0291                     	;# 
  1088  0292                     	;# 
  1089  0293                     	;# 
  1090  0294                     	;# 
  1091  0295                     	;# 
  1092  0295                     	;# 
  1093  0296                     	;# 
  1094  0298                     	;# 
  1095  0298                     	;# 
  1096  0299                     	;# 
  1097  029A                     	;# 
  1098  029B                     	;# 
  1099  029C                     	;# 
  1100  029C                     	;# 
  1101  029D                     	;# 
  1102  029E                     	;# 
  1103  029F                     	;# 
  1104  030C                     	;# 
  1105  030D                     	;# 
  1106  0311                     	;# 
  1107  0311                     	;# 
  1108  0312                     	;# 
  1109  0313                     	;# 
  1110  0314                     	;# 
  1111  0315                     	;# 
  1112  0315                     	;# 
  1113  0316                     	;# 
  1114  0318                     	;# 
  1115  0318                     	;# 
  1116  0319                     	;# 
  1117  031A                     	;# 
  1118  031C                     	;# 
  1119  031C                     	;# 
  1120  031D                     	;# 
  1121  031E                     	;# 
  1122  038C                     	;# 
  1123  038D                     	;# 
  1124  0394                     	;# 
  1125  0395                     	;# 
  1126  0396                     	;# 
  1127  040C                     	;# 
  1128  040D                     	;# 
  1129  0415                     	;# 
  1130  0416                     	;# 
  1131  0417                     	;# 
  1132  041C                     	;# 
  1133  041D                     	;# 
  1134  041E                     	;# 
  1135  048D                     	;# 
  1136  0491                     	;# 
  1137  0492                     	;# 
  1138  0493                     	;# 
  1139  0493                     	;# 
  1140  0494                     	;# 
  1141  0495                     	;# 
  1142  0496                     	;# 
  1143  0497                     	;# 
  1144  0791                     	;# 
  1145  0792                     	;# 
  1146  0793                     	;# 
  1147  0794                     	;# 
  1148  0795                     	;# 
  1149  0798                     	;# 
  1150  0799                     	;# 
  1151  079A                     	;# 
  1152  079B                     	;# 
  1153  079C                     	;# 
  1154  079D                     	;# 
  1155  07A0                     	;# 
  1156  07A1                     	;# 
  1157  07A2                     	;# 
  1158  07A3                     	;# 
  1159  07A4                     	;# 
  1160  07A5                     	;# 
  1161  07A6                     	;# 
  1162  07A7                     	;# 
  1163  07A8                     	;# 
  1164  07A9                     	;# 
  1165  07AA                     	;# 
  1166  07AB                     	;# 
  1167  07AC                     	;# 
  1168  07AD                     	;# 
  1169  07AE                     	;# 
  1170  07AF                     	;# 
  1171  07B0                     	;# 
  1172  07B1                     	;# 
  1173  07B2                     	;# 
  1174  07B3                     	;# 
  1175  07B4                     	;# 
  1176  07B5                     	;# 
  1177  07B6                     	;# 
  1178  07B7                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  000F                     	;# 
  1206  0010                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001B                     	;# 
  1219  001C                     	;# 
  1220  001E                     	;# 
  1221  001F                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  008E                     	;# 
  1225  008F                     	;# 
  1226  0090                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0097                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0110                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  011A                     	;# 
  1257  011B                     	;# 
  1258  011D                     	;# 
  1259  011E                     	;# 
  1260  011F                     	;# 
  1261  018C                     	;# 
  1262  0190                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0199                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019C                     	;# 
  1281  019C                     	;# 
  1282  019D                     	;# 
  1283  019D                     	;# 
  1284  019E                     	;# 
  1285  019E                     	;# 
  1286  019F                     	;# 
  1287  019F                     	;# 
  1288  020D                     	;# 
  1289  0211                     	;# 
  1290  0211                     	;# 
  1291  0212                     	;# 
  1292  0212                     	;# 
  1293  0213                     	;# 
  1294  0213                     	;# 
  1295  0214                     	;# 
  1296  0214                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0216                     	;# 
  1301  0216                     	;# 
  1302  0217                     	;# 
  1303  0217                     	;# 
  1304  0219                     	;# 
  1305  021A                     	;# 
  1306  021B                     	;# 
  1307  021C                     	;# 
  1308  021D                     	;# 
  1309  021E                     	;# 
  1310  021F                     	;# 
  1311  028C                     	;# 
  1312  028D                     	;# 
  1313  0291                     	;# 
  1314  0291                     	;# 
  1315  0292                     	;# 
  1316  0293                     	;# 
  1317  0294                     	;# 
  1318  0295                     	;# 
  1319  0295                     	;# 
  1320  0296                     	;# 
  1321  0298                     	;# 
  1322  0298                     	;# 
  1323  0299                     	;# 
  1324  029A                     	;# 
  1325  029B                     	;# 
  1326  029C                     	;# 
  1327  029C                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  0311                     	;# 
  1334  0311                     	;# 
  1335  0312                     	;# 
  1336  0313                     	;# 
  1337  0314                     	;# 
  1338  0315                     	;# 
  1339  0315                     	;# 
  1340  0316                     	;# 
  1341  0318                     	;# 
  1342  0318                     	;# 
  1343  0319                     	;# 
  1344  031A                     	;# 
  1345  031C                     	;# 
  1346  031C                     	;# 
  1347  031D                     	;# 
  1348  031E                     	;# 
  1349  038C                     	;# 
  1350  038D                     	;# 
  1351  0394                     	;# 
  1352  0395                     	;# 
  1353  0396                     	;# 
  1354  040C                     	;# 
  1355  040D                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  041C                     	;# 
  1360  041D                     	;# 
  1361  041E                     	;# 
  1362  048D                     	;# 
  1363  0491                     	;# 
  1364  0492                     	;# 
  1365  0493                     	;# 
  1366  0493                     	;# 
  1367  0494                     	;# 
  1368  0495                     	;# 
  1369  0496                     	;# 
  1370  0497                     	;# 
  1371  0791                     	;# 
  1372  0792                     	;# 
  1373  0793                     	;# 
  1374  0794                     	;# 
  1375  0795                     	;# 
  1376  0798                     	;# 
  1377  0799                     	;# 
  1378  079A                     	;# 
  1379  079B                     	;# 
  1380  079C                     	;# 
  1381  079D                     	;# 
  1382  07A0                     	;# 
  1383  07A1                     	;# 
  1384  07A2                     	;# 
  1385  07A3                     	;# 
  1386  07A4                     	;# 
  1387  07A5                     	;# 
  1388  07A6                     	;# 
  1389  07A7                     	;# 
  1390  07A8                     	;# 
  1391  07A9                     	;# 
  1392  07AA                     	;# 
  1393  07AB                     	;# 
  1394  07AC                     	;# 
  1395  07AD                     	;# 
  1396  07AE                     	;# 
  1397  07AF                     	;# 
  1398  07B0                     	;# 
  1399  07B1                     	;# 
  1400  07B2                     	;# 
  1401  07B3                     	;# 
  1402  07B4                     	;# 
  1403  07B5                     	;# 
  1404  07B6                     	;# 
  1405  07B7                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000D                     	;# 
  1431  000E                     	;# 
  1432  000F                     	;# 
  1433  0010                     	;# 
  1434  0011                     	;# 
  1435  0012                     	;# 
  1436  0013                     	;# 
  1437  0014                     	;# 
  1438  0015                     	;# 
  1439  0016                     	;# 
  1440  0016                     	;# 
  1441  0017                     	;# 
  1442  0018                     	;# 
  1443  0019                     	;# 
  1444  001A                     	;# 
  1445  001B                     	;# 
  1446  001C                     	;# 
  1447  001E                     	;# 
  1448  001F                     	;# 
  1449  008C                     	;# 
  1450  008D                     	;# 
  1451  008E                     	;# 
  1452  008F                     	;# 
  1453  0090                     	;# 
  1454  0091                     	;# 
  1455  0092                     	;# 
  1456  0093                     	;# 
  1457  0094                     	;# 
  1458  0095                     	;# 
  1459  0096                     	;# 
  1460  0097                     	;# 
  1461  0098                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  010C                     	;# 
  1470  010D                     	;# 
  1471  010E                     	;# 
  1472  010F                     	;# 
  1473  0110                     	;# 
  1474  0111                     	;# 
  1475  0112                     	;# 
  1476  0113                     	;# 
  1477  0114                     	;# 
  1478  0115                     	;# 
  1479  0116                     	;# 
  1480  0117                     	;# 
  1481  0118                     	;# 
  1482  0119                     	;# 
  1483  011A                     	;# 
  1484  011B                     	;# 
  1485  011D                     	;# 
  1486  011E                     	;# 
  1487  011F                     	;# 
  1488  018C                     	;# 
  1489  0190                     	;# 
  1490  0191                     	;# 
  1491  0191                     	;# 
  1492  0192                     	;# 
  1493  0193                     	;# 
  1494  0193                     	;# 
  1495  0193                     	;# 
  1496  0194                     	;# 
  1497  0195                     	;# 
  1498  0196                     	;# 
  1499  0199                     	;# 
  1500  0199                     	;# 
  1501  019A                     	;# 
  1502  019A                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019B                     	;# 
  1507  019C                     	;# 
  1508  019C                     	;# 
  1509  019D                     	;# 
  1510  019D                     	;# 
  1511  019E                     	;# 
  1512  019E                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020D                     	;# 
  1516  0211                     	;# 
  1517  0211                     	;# 
  1518  0212                     	;# 
  1519  0212                     	;# 
  1520  0213                     	;# 
  1521  0213                     	;# 
  1522  0214                     	;# 
  1523  0214                     	;# 
  1524  0215                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0216                     	;# 
  1528  0216                     	;# 
  1529  0217                     	;# 
  1530  0217                     	;# 
  1531  0219                     	;# 
  1532  021A                     	;# 
  1533  021B                     	;# 
  1534  021C                     	;# 
  1535  021D                     	;# 
  1536  021E                     	;# 
  1537  021F                     	;# 
  1538  028C                     	;# 
  1539  028D                     	;# 
  1540  0291                     	;# 
  1541  0291                     	;# 
  1542  0292                     	;# 
  1543  0293                     	;# 
  1544  0294                     	;# 
  1545  0295                     	;# 
  1546  0295                     	;# 
  1547  0296                     	;# 
  1548  0298                     	;# 
  1549  0298                     	;# 
  1550  0299                     	;# 
  1551  029A                     	;# 
  1552  029B                     	;# 
  1553  029C                     	;# 
  1554  029C                     	;# 
  1555  029D                     	;# 
  1556  029E                     	;# 
  1557  029F                     	;# 
  1558  030C                     	;# 
  1559  030D                     	;# 
  1560  0311                     	;# 
  1561  0311                     	;# 
  1562  0312                     	;# 
  1563  0313                     	;# 
  1564  0314                     	;# 
  1565  0315                     	;# 
  1566  0315                     	;# 
  1567  0316                     	;# 
  1568  0318                     	;# 
  1569  0318                     	;# 
  1570  0319                     	;# 
  1571  031A                     	;# 
  1572  031C                     	;# 
  1573  031C                     	;# 
  1574  031D                     	;# 
  1575  031E                     	;# 
  1576  038C                     	;# 
  1577  038D                     	;# 
  1578  0394                     	;# 
  1579  0395                     	;# 
  1580  0396                     	;# 
  1581  040C                     	;# 
  1582  040D                     	;# 
  1583  0415                     	;# 
  1584  0416                     	;# 
  1585  0417                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  048D                     	;# 
  1590  0491                     	;# 
  1591  0492                     	;# 
  1592  0493                     	;# 
  1593  0493                     	;# 
  1594  0494                     	;# 
  1595  0495                     	;# 
  1596  0496                     	;# 
  1597  0497                     	;# 
  1598  0791                     	;# 
  1599  0792                     	;# 
  1600  0793                     	;# 
  1601  0794                     	;# 
  1602  0795                     	;# 
  1603  0798                     	;# 
  1604  0799                     	;# 
  1605  079A                     	;# 
  1606  079B                     	;# 
  1607  079C                     	;# 
  1608  079D                     	;# 
  1609  07A0                     	;# 
  1610  07A1                     	;# 
  1611  07A2                     	;# 
  1612  07A3                     	;# 
  1613  07A4                     	;# 
  1614  07A5                     	;# 
  1615  07A6                     	;# 
  1616  07A7                     	;# 
  1617  07A8                     	;# 
  1618  07A9                     	;# 
  1619  07AA                     	;# 
  1620  07AB                     	;# 
  1621  07AC                     	;# 
  1622  07AD                     	;# 
  1623  07AE                     	;# 
  1624  07AF                     	;# 
  1625  07B0                     	;# 
  1626  07B1                     	;# 
  1627  07B2                     	;# 
  1628  07B3                     	;# 
  1629  07B4                     	;# 
  1630  07B5                     	;# 
  1631  07B6                     	;# 
  1632  07B7                     	;# 
  1633  0FE4                     	;# 
  1634  0FE5                     	;# 
  1635  0FE6                     	;# 
  1636  0FE7                     	;# 
  1637  0FE8                     	;# 
  1638  0FE9                     	;# 
  1639  0FEA                     	;# 
  1640  0FEB                     	;# 
  1641  0FED                     	;# 
  1642  0FEE                     	;# 
  1643  0FEF                     	;# 
  1644  0000                     	;# 
  1645  0001                     	;# 
  1646  0002                     	;# 
  1647  0003                     	;# 
  1648  0004                     	;# 
  1649  0005                     	;# 
  1650  0006                     	;# 
  1651  0007                     	;# 
  1652  0008                     	;# 
  1653  0009                     	;# 
  1654  000A                     	;# 
  1655  000B                     	;# 
  1656  000C                     	;# 
  1657  000D                     	;# 
  1658  000E                     	;# 
  1659  000F                     	;# 
  1660  0010                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0014                     	;# 
  1665  0015                     	;# 
  1666  0016                     	;# 
  1667  0016                     	;# 
  1668  0017                     	;# 
  1669  0018                     	;# 
  1670  0019                     	;# 
  1671  001A                     	;# 
  1672  001B                     	;# 
  1673  001C                     	;# 
  1674  001E                     	;# 
  1675  001F                     	;# 
  1676  008C                     	;# 
  1677  008D                     	;# 
  1678  008E                     	;# 
  1679  008F                     	;# 
  1680  0090                     	;# 
  1681  0091                     	;# 
  1682  0092                     	;# 
  1683  0093                     	;# 
  1684  0094                     	;# 
  1685  0095                     	;# 
  1686  0096                     	;# 
  1687  0097                     	;# 
  1688  0098                     	;# 
  1689  0099                     	;# 
  1690  009A                     	;# 
  1691  009B                     	;# 
  1692  009B                     	;# 
  1693  009C                     	;# 
  1694  009D                     	;# 
  1695  009E                     	;# 
  1696  010C                     	;# 
  1697  010D                     	;# 
  1698  010E                     	;# 
  1699  010F                     	;# 
  1700  0110                     	;# 
  1701  0111                     	;# 
  1702  0112                     	;# 
  1703  0113                     	;# 
  1704  0114                     	;# 
  1705  0115                     	;# 
  1706  0116                     	;# 
  1707  0117                     	;# 
  1708  0118                     	;# 
  1709  0119                     	;# 
  1710  011A                     	;# 
  1711  011B                     	;# 
  1712  011D                     	;# 
  1713  011E                     	;# 
  1714  011F                     	;# 
  1715  018C                     	;# 
  1716  0190                     	;# 
  1717  0191                     	;# 
  1718  0191                     	;# 
  1719  0192                     	;# 
  1720  0193                     	;# 
  1721  0193                     	;# 
  1722  0193                     	;# 
  1723  0194                     	;# 
  1724  0195                     	;# 
  1725  0196                     	;# 
  1726  0199                     	;# 
  1727  0199                     	;# 
  1728  019A                     	;# 
  1729  019A                     	;# 
  1730  019B                     	;# 
  1731  019B                     	;# 
  1732  019B                     	;# 
  1733  019B                     	;# 
  1734  019C                     	;# 
  1735  019C                     	;# 
  1736  019D                     	;# 
  1737  019D                     	;# 
  1738  019E                     	;# 
  1739  019E                     	;# 
  1740  019F                     	;# 
  1741  019F                     	;# 
  1742  020D                     	;# 
  1743  0211                     	;# 
  1744  0211                     	;# 
  1745  0212                     	;# 
  1746  0212                     	;# 
  1747  0213                     	;# 
  1748  0213                     	;# 
  1749  0214                     	;# 
  1750  0214                     	;# 
  1751  0215                     	;# 
  1752  0215                     	;# 
  1753  0215                     	;# 
  1754  0216                     	;# 
  1755  0216                     	;# 
  1756  0217                     	;# 
  1757  0217                     	;# 
  1758  0219                     	;# 
  1759  021A                     	;# 
  1760  021B                     	;# 
  1761  021C                     	;# 
  1762  021D                     	;# 
  1763  021E                     	;# 
  1764  021F                     	;# 
  1765  028C                     	;# 
  1766  028D                     	;# 
  1767  0291                     	;# 
  1768  0291                     	;# 
  1769  0292                     	;# 
  1770  0293                     	;# 
  1771  0294                     	;# 
  1772  0295                     	;# 
  1773  0295                     	;# 
  1774  0296                     	;# 
  1775  0298                     	;# 
  1776  0298                     	;# 
  1777  0299                     	;# 
  1778  029A                     	;# 
  1779  029B                     	;# 
  1780  029C                     	;# 
  1781  029C                     	;# 
  1782  029D                     	;# 
  1783  029E                     	;# 
  1784  029F                     	;# 
  1785  030C                     	;# 
  1786  030D                     	;# 
  1787  0311                     	;# 
  1788  0311                     	;# 
  1789  0312                     	;# 
  1790  0313                     	;# 
  1791  0314                     	;# 
  1792  0315                     	;# 
  1793  0315                     	;# 
  1794  0316                     	;# 
  1795  0318                     	;# 
  1796  0318                     	;# 
  1797  0319                     	;# 
  1798  031A                     	;# 
  1799  031C                     	;# 
  1800  031C                     	;# 
  1801  031D                     	;# 
  1802  031E                     	;# 
  1803  038C                     	;# 
  1804  038D                     	;# 
  1805  0394                     	;# 
  1806  0395                     	;# 
  1807  0396                     	;# 
  1808  040C                     	;# 
  1809  040D                     	;# 
  1810  0415                     	;# 
  1811  0416                     	;# 
  1812  0417                     	;# 
  1813  041C                     	;# 
  1814  041D                     	;# 
  1815  041E                     	;# 
  1816  048D                     	;# 
  1817  0491                     	;# 
  1818  0492                     	;# 
  1819  0493                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0495                     	;# 
  1823  0496                     	;# 
  1824  0497                     	;# 
  1825  0791                     	;# 
  1826  0792                     	;# 
  1827  0793                     	;# 
  1828  0794                     	;# 
  1829  0795                     	;# 
  1830  0798                     	;# 
  1831  0799                     	;# 
  1832  079A                     	;# 
  1833  079B                     	;# 
  1834  079C                     	;# 
  1835  079D                     	;# 
  1836  07A0                     	;# 
  1837  07A1                     	;# 
  1838  07A2                     	;# 
  1839  07A3                     	;# 
  1840  07A4                     	;# 
  1841  07A5                     	;# 
  1842  07A6                     	;# 
  1843  07A7                     	;# 
  1844  07A8                     	;# 
  1845  07A9                     	;# 
  1846  07AA                     	;# 
  1847  07AB                     	;# 
  1848  07AC                     	;# 
  1849  07AD                     	;# 
  1850  07AE                     	;# 
  1851  07AF                     	;# 
  1852  07B0                     	;# 
  1853  07B1                     	;# 
  1854  07B2                     	;# 
  1855  07B3                     	;# 
  1856  07B4                     	;# 
  1857  07B5                     	;# 
  1858  07B6                     	;# 
  1859  07B7                     	;# 
  1860  0FE4                     	;# 
  1861  0FE5                     	;# 
  1862  0FE6                     	;# 
  1863  0FE7                     	;# 
  1864  0FE8                     	;# 
  1865  0FE9                     	;# 
  1866  0FEA                     	;# 
  1867  0FEB                     	;# 
  1868  0FED                     	;# 
  1869  0FEE                     	;# 
  1870  0FEF                     	;# 
  1871  0000                     	;# 
  1872  0001                     	;# 
  1873  0002                     	;# 
  1874  0003                     	;# 
  1875  0004                     	;# 
  1876  0005                     	;# 
  1877  0006                     	;# 
  1878  0007                     	;# 
  1879  0008                     	;# 
  1880  0009                     	;# 
  1881  000A                     	;# 
  1882  000B                     	;# 
  1883  000C                     	;# 
  1884  000D                     	;# 
  1885  000E                     	;# 
  1886  000F                     	;# 
  1887  0010                     	;# 
  1888  0011                     	;# 
  1889  0012                     	;# 
  1890  0013                     	;# 
  1891  0014                     	;# 
  1892  0015                     	;# 
  1893  0016                     	;# 
  1894  0016                     	;# 
  1895  0017                     	;# 
  1896  0018                     	;# 
  1897  0019                     	;# 
  1898  001A                     	;# 
  1899  001B                     	;# 
  1900  001C                     	;# 
  1901  001E                     	;# 
  1902  001F                     	;# 
  1903  008C                     	;# 
  1904  008D                     	;# 
  1905  008E                     	;# 
  1906  008F                     	;# 
  1907  0090                     	;# 
  1908  0091                     	;# 
  1909  0092                     	;# 
  1910  0093                     	;# 
  1911  0094                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0097                     	;# 
  1915  0098                     	;# 
  1916  0099                     	;# 
  1917  009A                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  010C                     	;# 
  1924  010D                     	;# 
  1925  010E                     	;# 
  1926  010F                     	;# 
  1927  0110                     	;# 
  1928  0111                     	;# 
  1929  0112                     	;# 
  1930  0113                     	;# 
  1931  0114                     	;# 
  1932  0115                     	;# 
  1933  0116                     	;# 
  1934  0117                     	;# 
  1935  0118                     	;# 
  1936  0119                     	;# 
  1937  011A                     	;# 
  1938  011B                     	;# 
  1939  011D                     	;# 
  1940  011E                     	;# 
  1941  011F                     	;# 
  1942  018C                     	;# 
  1943  0190                     	;# 
  1944  0191                     	;# 
  1945  0191                     	;# 
  1946  0192                     	;# 
  1947  0193                     	;# 
  1948  0193                     	;# 
  1949  0193                     	;# 
  1950  0194                     	;# 
  1951  0195                     	;# 
  1952  0196                     	;# 
  1953  0199                     	;# 
  1954  0199                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019E                     	;# 
  1966  019E                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  020D                     	;# 
  1970  0211                     	;# 
  1971  0211                     	;# 
  1972  0212                     	;# 
  1973  0212                     	;# 
  1974  0213                     	;# 
  1975  0213                     	;# 
  1976  0214                     	;# 
  1977  0214                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0215                     	;# 
  1981  0216                     	;# 
  1982  0216                     	;# 
  1983  0217                     	;# 
  1984  0217                     	;# 
  1985  0219                     	;# 
  1986  021A                     	;# 
  1987  021B                     	;# 
  1988  021C                     	;# 
  1989  021D                     	;# 
  1990  021E                     	;# 
  1991  021F                     	;# 
  1992  028C                     	;# 
  1993  028D                     	;# 
  1994  0291                     	;# 
  1995  0291                     	;# 
  1996  0292                     	;# 
  1997  0293                     	;# 
  1998  0294                     	;# 
  1999  0295                     	;# 
  2000  0295                     	;# 
  2001  0296                     	;# 
  2002  0298                     	;# 
  2003  0298                     	;# 
  2004  0299                     	;# 
  2005  029A                     	;# 
  2006  029B                     	;# 
  2007  029C                     	;# 
  2008  029C                     	;# 
  2009  029D                     	;# 
  2010  029E                     	;# 
  2011  029F                     	;# 
  2012  030C                     	;# 
  2013  030D                     	;# 
  2014  0311                     	;# 
  2015  0311                     	;# 
  2016  0312                     	;# 
  2017  0313                     	;# 
  2018  0314                     	;# 
  2019  0315                     	;# 
  2020  0315                     	;# 
  2021  0316                     	;# 
  2022  0318                     	;# 
  2023  0318                     	;# 
  2024  0319                     	;# 
  2025  031A                     	;# 
  2026  031C                     	;# 
  2027  031C                     	;# 
  2028  031D                     	;# 
  2029  031E                     	;# 
  2030  038C                     	;# 
  2031  038D                     	;# 
  2032  0394                     	;# 
  2033  0395                     	;# 
  2034  0396                     	;# 
  2035  040C                     	;# 
  2036  040D                     	;# 
  2037  0415                     	;# 
  2038  0416                     	;# 
  2039  0417                     	;# 
  2040  041C                     	;# 
  2041  041D                     	;# 
  2042  041E                     	;# 
  2043  048D                     	;# 
  2044  0491                     	;# 
  2045  0492                     	;# 
  2046  0493                     	;# 
  2047  0493                     	;# 
  2048  0494                     	;# 
  2049  0495                     	;# 
  2050  0496                     	;# 
  2051  0497                     	;# 
  2052  0791                     	;# 
  2053  0792                     	;# 
  2054  0793                     	;# 
  2055  0794                     	;# 
  2056  0795                     	;# 
  2057  0798                     	;# 
  2058  0799                     	;# 
  2059  079A                     	;# 
  2060  079B                     	;# 
  2061  079C                     	;# 
  2062  079D                     	;# 
  2063  07A0                     	;# 
  2064  07A1                     	;# 
  2065  07A2                     	;# 
  2066  07A3                     	;# 
  2067  07A4                     	;# 
  2068  07A5                     	;# 
  2069  07A6                     	;# 
  2070  07A7                     	;# 
  2071  07A8                     	;# 
  2072  07A9                     	;# 
  2073  07AA                     	;# 
  2074  07AB                     	;# 
  2075  07AC                     	;# 
  2076  07AD                     	;# 
  2077  07AE                     	;# 
  2078  07AF                     	;# 
  2079  07B0                     	;# 
  2080  07B1                     	;# 
  2081  07B2                     	;# 
  2082  07B3                     	;# 
  2083  07B4                     	;# 
  2084  07B5                     	;# 
  2085  07B6                     	;# 
  2086  07B7                     	;# 
  2087  0FE4                     	;# 
  2088  0FE5                     	;# 
  2089  0FE6                     	;# 
  2090  0FE7                     	;# 
  2091  0FE8                     	;# 
  2092  0FE9                     	;# 
  2093  0FEA                     	;# 
  2094  0FEB                     	;# 
  2095  0FED                     	;# 
  2096  0FEE                     	;# 
  2097  0FEF                     	;# 
  2098  0000                     	;# 
  2099  0001                     	;# 
  2100  0002                     	;# 
  2101  0003                     	;# 
  2102  0004                     	;# 
  2103  0005                     	;# 
  2104  0006                     	;# 
  2105  0007                     	;# 
  2106  0008                     	;# 
  2107  0009                     	;# 
  2108  000A                     	;# 
  2109  000B                     	;# 
  2110  000C                     	;# 
  2111  000D                     	;# 
  2112  000E                     	;# 
  2113  000F                     	;# 
  2114  0010                     	;# 
  2115  0011                     	;# 
  2116  0012                     	;# 
  2117  0013                     	;# 
  2118  0014                     	;# 
  2119  0015                     	;# 
  2120  0016                     	;# 
  2121  0016                     	;# 
  2122  0017                     	;# 
  2123  0018                     	;# 
  2124  0019                     	;# 
  2125  001A                     	;# 
  2126  001B                     	;# 
  2127  001C                     	;# 
  2128  001E                     	;# 
  2129  001F                     	;# 
  2130  008C                     	;# 
  2131  008D                     	;# 
  2132  008E                     	;# 
  2133  008F                     	;# 
  2134  0090                     	;# 
  2135  0091                     	;# 
  2136  0092                     	;# 
  2137  0093                     	;# 
  2138  0094                     	;# 
  2139  0095                     	;# 
  2140  0096                     	;# 
  2141  0097                     	;# 
  2142  0098                     	;# 
  2143  0099                     	;# 
  2144  009A                     	;# 
  2145  009B                     	;# 
  2146  009B                     	;# 
  2147  009C                     	;# 
  2148  009D                     	;# 
  2149  009E                     	;# 
  2150  010C                     	;# 
  2151  010D                     	;# 
  2152  010E                     	;# 
  2153  010F                     	;# 
  2154  0110                     	;# 
  2155  0111                     	;# 
  2156  0112                     	;# 
  2157  0113                     	;# 
  2158  0114                     	;# 
  2159  0115                     	;# 
  2160  0116                     	;# 
  2161  0117                     	;# 
  2162  0118                     	;# 
  2163  0119                     	;# 
  2164  011A                     	;# 
  2165  011B                     	;# 
  2166  011D                     	;# 
  2167  011E                     	;# 
  2168  011F                     	;# 
  2169  018C                     	;# 
  2170  0190                     	;# 
  2171  0191                     	;# 
  2172  0191                     	;# 
  2173  0192                     	;# 
  2174  0193                     	;# 
  2175  0193                     	;# 
  2176  0193                     	;# 
  2177  0194                     	;# 
  2178  0195                     	;# 
  2179  0196                     	;# 
  2180  0199                     	;# 
  2181  0199                     	;# 
  2182  019A                     	;# 
  2183  019A                     	;# 
  2184  019B                     	;# 
  2185  019B                     	;# 
  2186  019B                     	;# 
  2187  019B                     	;# 
  2188  019C                     	;# 
  2189  019C                     	;# 
  2190  019D                     	;# 
  2191  019D                     	;# 
  2192  019E                     	;# 
  2193  019E                     	;# 
  2194  019F                     	;# 
  2195  019F                     	;# 
  2196  020D                     	;# 
  2197  0211                     	;# 
  2198  0211                     	;# 
  2199  0212                     	;# 
  2200  0212                     	;# 
  2201  0213                     	;# 
  2202  0213                     	;# 
  2203  0214                     	;# 
  2204  0214                     	;# 
  2205  0215                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  0219                     	;# 
  2213  021A                     	;# 
  2214  021B                     	;# 
  2215  021C                     	;# 
  2216  021D                     	;# 
  2217  021E                     	;# 
  2218  021F                     	;# 
  2219  028C                     	;# 
  2220  028D                     	;# 
  2221  0291                     	;# 
  2222  0291                     	;# 
  2223  0292                     	;# 
  2224  0293                     	;# 
  2225  0294                     	;# 
  2226  0295                     	;# 
  2227  0295                     	;# 
  2228  0296                     	;# 
  2229  0298                     	;# 
  2230  0298                     	;# 
  2231  0299                     	;# 
  2232  029A                     	;# 
  2233  029B                     	;# 
  2234  029C                     	;# 
  2235  029C                     	;# 
  2236  029D                     	;# 
  2237  029E                     	;# 
  2238  029F                     	;# 
  2239  030C                     	;# 
  2240  030D                     	;# 
  2241  0311                     	;# 
  2242  0311                     	;# 
  2243  0312                     	;# 
  2244  0313                     	;# 
  2245  0314                     	;# 
  2246  0315                     	;# 
  2247  0315                     	;# 
  2248  0316                     	;# 
  2249  0318                     	;# 
  2250  0318                     	;# 
  2251  0319                     	;# 
  2252  031A                     	;# 
  2253  031C                     	;# 
  2254  031C                     	;# 
  2255  031D                     	;# 
  2256  031E                     	;# 
  2257  038C                     	;# 
  2258  038D                     	;# 
  2259  0394                     	;# 
  2260  0395                     	;# 
  2261  0396                     	;# 
  2262  040C                     	;# 
  2263  040D                     	;# 
  2264  0415                     	;# 
  2265  0416                     	;# 
  2266  0417                     	;# 
  2267  041C                     	;# 
  2268  041D                     	;# 
  2269  041E                     	;# 
  2270  048D                     	;# 
  2271  0491                     	;# 
  2272  0492                     	;# 
  2273  0493                     	;# 
  2274  0493                     	;# 
  2275  0494                     	;# 
  2276  0495                     	;# 
  2277  0496                     	;# 
  2278  0497                     	;# 
  2279  0791                     	;# 
  2280  0792                     	;# 
  2281  0793                     	;# 
  2282  0794                     	;# 
  2283  0795                     	;# 
  2284  0798                     	;# 
  2285  0799                     	;# 
  2286  079A                     	;# 
  2287  079B                     	;# 
  2288  079C                     	;# 
  2289  079D                     	;# 
  2290  07A0                     	;# 
  2291  07A1                     	;# 
  2292  07A2                     	;# 
  2293  07A3                     	;# 
  2294  07A4                     	;# 
  2295  07A5                     	;# 
  2296  07A6                     	;# 
  2297  07A7                     	;# 
  2298  07A8                     	;# 
  2299  07A9                     	;# 
  2300  07AA                     	;# 
  2301  07AB                     	;# 
  2302  07AC                     	;# 
  2303  07AD                     	;# 
  2304  07AE                     	;# 
  2305  07AF                     	;# 
  2306  07B0                     	;# 
  2307  07B1                     	;# 
  2308  07B2                     	;# 
  2309  07B3                     	;# 
  2310  07B4                     	;# 
  2311  07B5                     	;# 
  2312  07B6                     	;# 
  2313  07B7                     	;# 
  2314  0FE4                     	;# 
  2315  0FE5                     	;# 
  2316  0FE6                     	;# 
  2317  0FE7                     	;# 
  2318  0FE8                     	;# 
  2319  0FE9                     	;# 
  2320  0FEA                     	;# 
  2321  0FEB                     	;# 
  2322  0FED                     	;# 
  2323  0FEE                     	;# 
  2324  0FEF                     	;# 
  2325  0000                     	;# 
  2326  0001                     	;# 
  2327  0002                     	;# 
  2328  0003                     	;# 
  2329  0004                     	;# 
  2330  0005                     	;# 
  2331  0006                     	;# 
  2332  0007                     	;# 
  2333  0008                     	;# 
  2334  0009                     	;# 
  2335  000A                     	;# 
  2336  000B                     	;# 
  2337  000C                     	;# 
  2338  000D                     	;# 
  2339  000E                     	;# 
  2340  000F                     	;# 
  2341  0010                     	;# 
  2342  0011                     	;# 
  2343  0012                     	;# 
  2344  0013                     	;# 
  2345  0014                     	;# 
  2346  0015                     	;# 
  2347  0016                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0019                     	;# 
  2352  001A                     	;# 
  2353  001B                     	;# 
  2354  001C                     	;# 
  2355  001E                     	;# 
  2356  001F                     	;# 
  2357  008C                     	;# 
  2358  008D                     	;# 
  2359  008E                     	;# 
  2360  008F                     	;# 
  2361  0090                     	;# 
  2362  0091                     	;# 
  2363  0092                     	;# 
  2364  0093                     	;# 
  2365  0094                     	;# 
  2366  0095                     	;# 
  2367  0096                     	;# 
  2368  0097                     	;# 
  2369  0098                     	;# 
  2370  0099                     	;# 
  2371  009A                     	;# 
  2372  009B                     	;# 
  2373  009B                     	;# 
  2374  009C                     	;# 
  2375  009D                     	;# 
  2376  009E                     	;# 
  2377  010C                     	;# 
  2378  010D                     	;# 
  2379  010E                     	;# 
  2380  010F                     	;# 
  2381  0110                     	;# 
  2382  0111                     	;# 
  2383  0112                     	;# 
  2384  0113                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0117                     	;# 
  2389  0118                     	;# 
  2390  0119                     	;# 
  2391  011A                     	;# 
  2392  011B                     	;# 
  2393  011D                     	;# 
  2394  011E                     	;# 
  2395  011F                     	;# 
  2396  018C                     	;# 
  2397  0190                     	;# 
  2398  0191                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0193                     	;# 
  2404  0194                     	;# 
  2405  0195                     	;# 
  2406  0196                     	;# 
  2407  0199                     	;# 
  2408  0199                     	;# 
  2409  019A                     	;# 
  2410  019A                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019C                     	;# 
  2416  019C                     	;# 
  2417  019D                     	;# 
  2418  019D                     	;# 
  2419  019E                     	;# 
  2420  019E                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  020D                     	;# 
  2424  0211                     	;# 
  2425  0211                     	;# 
  2426  0212                     	;# 
  2427  0212                     	;# 
  2428  0213                     	;# 
  2429  0213                     	;# 
  2430  0214                     	;# 
  2431  0214                     	;# 
  2432  0215                     	;# 
  2433  0215                     	;# 
  2434  0215                     	;# 
  2435  0216                     	;# 
  2436  0216                     	;# 
  2437  0217                     	;# 
  2438  0217                     	;# 
  2439  0219                     	;# 
  2440  021A                     	;# 
  2441  021B                     	;# 
  2442  021C                     	;# 
  2443  021D                     	;# 
  2444  021E                     	;# 
  2445  021F                     	;# 
  2446  028C                     	;# 
  2447  028D                     	;# 
  2448  0291                     	;# 
  2449  0291                     	;# 
  2450  0292                     	;# 
  2451  0293                     	;# 
  2452  0294                     	;# 
  2453  0295                     	;# 
  2454  0295                     	;# 
  2455  0296                     	;# 
  2456  0298                     	;# 
  2457  0298                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029C                     	;# 
  2462  029C                     	;# 
  2463  029D                     	;# 
  2464  029E                     	;# 
  2465  029F                     	;# 
  2466  030C                     	;# 
  2467  030D                     	;# 
  2468  0311                     	;# 
  2469  0311                     	;# 
  2470  0312                     	;# 
  2471  0313                     	;# 
  2472  0314                     	;# 
  2473  0315                     	;# 
  2474  0315                     	;# 
  2475  0316                     	;# 
  2476  0318                     	;# 
  2477  0318                     	;# 
  2478  0319                     	;# 
  2479  031A                     	;# 
  2480  031C                     	;# 
  2481  031C                     	;# 
  2482  031D                     	;# 
  2483  031E                     	;# 
  2484  038C                     	;# 
  2485  038D                     	;# 
  2486  0394                     	;# 
  2487  0395                     	;# 
  2488  0396                     	;# 
  2489  040C                     	;# 
  2490  040D                     	;# 
  2491  0415                     	;# 
  2492  0416                     	;# 
  2493  0417                     	;# 
  2494  041C                     	;# 
  2495  041D                     	;# 
  2496  041E                     	;# 
  2497  048D                     	;# 
  2498  0491                     	;# 
  2499  0492                     	;# 
  2500  0493                     	;# 
  2501  0493                     	;# 
  2502  0494                     	;# 
  2503  0495                     	;# 
  2504  0496                     	;# 
  2505  0497                     	;# 
  2506  0791                     	;# 
  2507  0792                     	;# 
  2508  0793                     	;# 
  2509  0794                     	;# 
  2510  0795                     	;# 
  2511  0798                     	;# 
  2512  0799                     	;# 
  2513  079A                     	;# 
  2514  079B                     	;# 
  2515  079C                     	;# 
  2516  079D                     	;# 
  2517  07A0                     	;# 
  2518  07A1                     	;# 
  2519  07A2                     	;# 
  2520  07A3                     	;# 
  2521  07A4                     	;# 
  2522  07A5                     	;# 
  2523  07A6                     	;# 
  2524  07A7                     	;# 
  2525  07A8                     	;# 
  2526  07A9                     	;# 
  2527  07AA                     	;# 
  2528  07AB                     	;# 
  2529  07AC                     	;# 
  2530  07AD                     	;# 
  2531  07AE                     	;# 
  2532  07AF                     	;# 
  2533  07B0                     	;# 
  2534  07B1                     	;# 
  2535  07B2                     	;# 
  2536  07B3                     	;# 
  2537  07B4                     	;# 
  2538  07B5                     	;# 
  2539  07B6                     	;# 
  2540  07B7                     	;# 
  2541  0FE4                     	;# 
  2542  0FE5                     	;# 
  2543  0FE6                     	;# 
  2544  0FE7                     	;# 
  2545  0FE8                     	;# 
  2546  0FE9                     	;# 
  2547  0FEA                     	;# 
  2548  0FEB                     	;# 
  2549  0FED                     	;# 
  2550  0FEE                     	;# 
  2551  0FEF                     	;# 
  2552  0000                     	;# 
  2553  0001                     	;# 
  2554  0002                     	;# 
  2555  0003                     	;# 
  2556  0004                     	;# 
  2557  0005                     	;# 
  2558  0006                     	;# 
  2559  0007                     	;# 
  2560  0008                     	;# 
  2561  0009                     	;# 
  2562  000A                     	;# 
  2563  000B                     	;# 
  2564  000C                     	;# 
  2565  000D                     	;# 
  2566  000E                     	;# 
  2567  000F                     	;# 
  2568  0010                     	;# 
  2569  0011                     	;# 
  2570  0012                     	;# 
  2571  0013                     	;# 
  2572  0014                     	;# 
  2573  0015                     	;# 
  2574  0016                     	;# 
  2575  0016                     	;# 
  2576  0017                     	;# 
  2577  0018                     	;# 
  2578  0019                     	;# 
  2579  001A                     	;# 
  2580  001B                     	;# 
  2581  001C                     	;# 
  2582  001E                     	;# 
  2583  001F                     	;# 
  2584  008C                     	;# 
  2585  008D                     	;# 
  2586  008E                     	;# 
  2587  008F                     	;# 
  2588  0090                     	;# 
  2589  0091                     	;# 
  2590  0092                     	;# 
  2591  0093                     	;# 
  2592  0094                     	;# 
  2593  0095                     	;# 
  2594  0096                     	;# 
  2595  0097                     	;# 
  2596  0098                     	;# 
  2597  0099                     	;# 
  2598  009A                     	;# 
  2599  009B                     	;# 
  2600  009B                     	;# 
  2601  009C                     	;# 
  2602  009D                     	;# 
  2603  009E                     	;# 
  2604  010C                     	;# 
  2605  010D                     	;# 
  2606  010E                     	;# 
  2607  010F                     	;# 
  2608  0110                     	;# 
  2609  0111                     	;# 
  2610  0112                     	;# 
  2611  0113                     	;# 
  2612  0114                     	;# 
  2613  0115                     	;# 
  2614  0116                     	;# 
  2615  0117                     	;# 
  2616  0118                     	;# 
  2617  0119                     	;# 
  2618  011A                     	;# 
  2619  011B                     	;# 
  2620  011D                     	;# 
  2621  011E                     	;# 
  2622  011F                     	;# 
  2623  018C                     	;# 
  2624  0190                     	;# 
  2625  0191                     	;# 
  2626  0191                     	;# 
  2627  0192                     	;# 
  2628  0193                     	;# 
  2629  0193                     	;# 
  2630  0193                     	;# 
  2631  0194                     	;# 
  2632  0195                     	;# 
  2633  0196                     	;# 
  2634  0199                     	;# 
  2635  0199                     	;# 
  2636  019A                     	;# 
  2637  019A                     	;# 
  2638  019B                     	;# 
  2639  019B                     	;# 
  2640  019B                     	;# 
  2641  019B                     	;# 
  2642  019C                     	;# 
  2643  019C                     	;# 
  2644  019D                     	;# 
  2645  019D                     	;# 
  2646  019E                     	;# 
  2647  019E                     	;# 
  2648  019F                     	;# 
  2649  019F                     	;# 
  2650  020D                     	;# 
  2651  0211                     	;# 
  2652  0211                     	;# 
  2653  0212                     	;# 
  2654  0212                     	;# 
  2655  0213                     	;# 
  2656  0213                     	;# 
  2657  0214                     	;# 
  2658  0214                     	;# 
  2659  0215                     	;# 
  2660  0215                     	;# 
  2661  0215                     	;# 
  2662  0216                     	;# 
  2663  0216                     	;# 
  2664  0217                     	;# 
  2665  0217                     	;# 
  2666  0219                     	;# 
  2667  021A                     	;# 
  2668  021B                     	;# 
  2669  021C                     	;# 
  2670  021D                     	;# 
  2671  021E                     	;# 
  2672  021F                     	;# 
  2673  028C                     	;# 
  2674  028D                     	;# 
  2675  0291                     	;# 
  2676  0291                     	;# 
  2677  0292                     	;# 
  2678  0293                     	;# 
  2679  0294                     	;# 
  2680  0295                     	;# 
  2681  0295                     	;# 
  2682  0296                     	;# 
  2683  0298                     	;# 
  2684  0298                     	;# 
  2685  0299                     	;# 
  2686  029A                     	;# 
  2687  029B                     	;# 
  2688  029C                     	;# 
  2689  029C                     	;# 
  2690  029D                     	;# 
  2691  029E                     	;# 
  2692  029F                     	;# 
  2693  030C                     	;# 
  2694  030D                     	;# 
  2695  0311                     	;# 
  2696  0311                     	;# 
  2697  0312                     	;# 
  2698  0313                     	;# 
  2699  0314                     	;# 
  2700  0315                     	;# 
  2701  0315                     	;# 
  2702  0316                     	;# 
  2703  0318                     	;# 
  2704  0318                     	;# 
  2705  0319                     	;# 
  2706  031A                     	;# 
  2707  031C                     	;# 
  2708  031C                     	;# 
  2709  031D                     	;# 
  2710  031E                     	;# 
  2711  038C                     	;# 
  2712  038D                     	;# 
  2713  0394                     	;# 
  2714  0395                     	;# 
  2715  0396                     	;# 
  2716  040C                     	;# 
  2717  040D                     	;# 
  2718  0415                     	;# 
  2719  0416                     	;# 
  2720  0417                     	;# 
  2721  041C                     	;# 
  2722  041D                     	;# 
  2723  041E                     	;# 
  2724  048D                     	;# 
  2725  0491                     	;# 
  2726  0492                     	;# 
  2727  0493                     	;# 
  2728  0493                     	;# 
  2729  0494                     	;# 
  2730  0495                     	;# 
  2731  0496                     	;# 
  2732  0497                     	;# 
  2733  0791                     	;# 
  2734  0792                     	;# 
  2735  0793                     	;# 
  2736  0794                     	;# 
  2737  0795                     	;# 
  2738  0798                     	;# 
  2739  0799                     	;# 
  2740  079A                     	;# 
  2741  079B                     	;# 
  2742  079C                     	;# 
  2743  079D                     	;# 
  2744  07A0                     	;# 
  2745  07A1                     	;# 
  2746  07A2                     	;# 
  2747  07A3                     	;# 
  2748  07A4                     	;# 
  2749  07A5                     	;# 
  2750  07A6                     	;# 
  2751  07A7                     	;# 
  2752  07A8                     	;# 
  2753  07A9                     	;# 
  2754  07AA                     	;# 
  2755  07AB                     	;# 
  2756  07AC                     	;# 
  2757  07AD                     	;# 
  2758  07AE                     	;# 
  2759  07AF                     	;# 
  2760  07B0                     	;# 
  2761  07B1                     	;# 
  2762  07B2                     	;# 
  2763  07B3                     	;# 
  2764  07B4                     	;# 
  2765  07B5                     	;# 
  2766  07B6                     	;# 
  2767  07B7                     	;# 
  2768  0FE4                     	;# 
  2769  0FE5                     	;# 
  2770  0FE6                     	;# 
  2771  0FE7                     	;# 
  2772  0FE8                     	;# 
  2773  0FE9                     	;# 
  2774  0FEA                     	;# 
  2775  0FEB                     	;# 
  2776  0FED                     	;# 
  2777  0FEE                     	;# 
  2778  0FEF                     	;# 
  2779  0000                     	;# 
  2780  0001                     	;# 
  2781  0002                     	;# 
  2782  0003                     	;# 
  2783  0004                     	;# 
  2784  0005                     	;# 
  2785  0006                     	;# 
  2786  0007                     	;# 
  2787  0008                     	;# 
  2788  0009                     	;# 
  2789  000A                     	;# 
  2790  000B                     	;# 
  2791  000C                     	;# 
  2792  000D                     	;# 
  2793  000E                     	;# 
  2794  000F                     	;# 
  2795  0010                     	;# 
  2796  0011                     	;# 
  2797  0012                     	;# 
  2798  0013                     	;# 
  2799  0014                     	;# 
  2800  0015                     	;# 
  2801  0016                     	;# 
  2802  0016                     	;# 
  2803  0017                     	;# 
  2804  0018                     	;# 
  2805  0019                     	;# 
  2806  001A                     	;# 
  2807  001B                     	;# 
  2808  001C                     	;# 
  2809  001E                     	;# 
  2810  001F                     	;# 
  2811  008C                     	;# 
  2812  008D                     	;# 
  2813  008E                     	;# 
  2814  008F                     	;# 
  2815  0090                     	;# 
  2816  0091                     	;# 
  2817  0092                     	;# 
  2818  0093                     	;# 
  2819  0094                     	;# 
  2820  0095                     	;# 
  2821  0096                     	;# 
  2822  0097                     	;# 
  2823  0098                     	;# 
  2824  0099                     	;# 
  2825  009A                     	;# 
  2826  009B                     	;# 
  2827  009B                     	;# 
  2828  009C                     	;# 
  2829  009D                     	;# 
  2830  009E                     	;# 
  2831  010C                     	;# 
  2832  010D                     	;# 
  2833  010E                     	;# 
  2834  010F                     	;# 
  2835  0110                     	;# 
  2836  0111                     	;# 
  2837  0112                     	;# 
  2838  0113                     	;# 
  2839  0114                     	;# 
  2840  0115                     	;# 
  2841  0116                     	;# 
  2842  0117                     	;# 
  2843  0118                     	;# 
  2844  0119                     	;# 
  2845  011A                     	;# 
  2846  011B                     	;# 
  2847  011D                     	;# 
  2848  011E                     	;# 
  2849  011F                     	;# 
  2850  018C                     	;# 
  2851  0190                     	;# 
  2852  0191                     	;# 
  2853  0191                     	;# 
  2854  0192                     	;# 
  2855  0193                     	;# 
  2856  0193                     	;# 
  2857  0193                     	;# 
  2858  0194                     	;# 
  2859  0195                     	;# 
  2860  0196                     	;# 
  2861  0199                     	;# 
  2862  0199                     	;# 
  2863  019A                     	;# 
  2864  019A                     	;# 
  2865  019B                     	;# 
  2866  019B                     	;# 
  2867  019B                     	;# 
  2868  019B                     	;# 
  2869  019C                     	;# 
  2870  019C                     	;# 
  2871  019D                     	;# 
  2872  019D                     	;# 
  2873  019E                     	;# 
  2874  019E                     	;# 
  2875  019F                     	;# 
  2876  019F                     	;# 
  2877  020D                     	;# 
  2878  0211                     	;# 
  2879  0211                     	;# 
  2880  0212                     	;# 
  2881  0212                     	;# 
  2882  0213                     	;# 
  2883  0213                     	;# 
  2884  0214                     	;# 
  2885  0214                     	;# 
  2886  0215                     	;# 
  2887  0215                     	;# 
  2888  0215                     	;# 
  2889  0216                     	;# 
  2890  0216                     	;# 
  2891  0217                     	;# 
  2892  0217                     	;# 
  2893  0219                     	;# 
  2894  021A                     	;# 
  2895  021B                     	;# 
  2896  021C                     	;# 
  2897  021D                     	;# 
  2898  021E                     	;# 
  2899  021F                     	;# 
  2900  028C                     	;# 
  2901  028D                     	;# 
  2902  0291                     	;# 
  2903  0291                     	;# 
  2904  0292                     	;# 
  2905  0293                     	;# 
  2906  0294                     	;# 
  2907  0295                     	;# 
  2908  0295                     	;# 
  2909  0296                     	;# 
  2910  0298                     	;# 
  2911  0298                     	;# 
  2912  0299                     	;# 
  2913  029A                     	;# 
  2914  029B                     	;# 
  2915  029C                     	;# 
  2916  029C                     	;# 
  2917  029D                     	;# 
  2918  029E                     	;# 
  2919  029F                     	;# 
  2920  030C                     	;# 
  2921  030D                     	;# 
  2922  0311                     	;# 
  2923  0311                     	;# 
  2924  0312                     	;# 
  2925  0313                     	;# 
  2926  0314                     	;# 
  2927  0315                     	;# 
  2928  0315                     	;# 
  2929  0316                     	;# 
  2930  0318                     	;# 
  2931  0318                     	;# 
  2932  0319                     	;# 
  2933  031A                     	;# 
  2934  031C                     	;# 
  2935  031C                     	;# 
  2936  031D                     	;# 
  2937  031E                     	;# 
  2938  038C                     	;# 
  2939  038D                     	;# 
  2940  0394                     	;# 
  2941  0395                     	;# 
  2942  0396                     	;# 
  2943  040C                     	;# 
  2944  040D                     	;# 
  2945  0415                     	;# 
  2946  0416                     	;# 
  2947  0417                     	;# 
  2948  041C                     	;# 
  2949  041D                     	;# 
  2950  041E                     	;# 
  2951  048D                     	;# 
  2952  0491                     	;# 
  2953  0492                     	;# 
  2954  0493                     	;# 
  2955  0493                     	;# 
  2956  0494                     	;# 
  2957  0495                     	;# 
  2958  0496                     	;# 
  2959  0497                     	;# 
  2960  0791                     	;# 
  2961  0792                     	;# 
  2962  0793                     	;# 
  2963  0794                     	;# 
  2964  0795                     	;# 
  2965  0798                     	;# 
  2966  0799                     	;# 
  2967  079A                     	;# 
  2968  079B                     	;# 
  2969  079C                     	;# 
  2970  079D                     	;# 
  2971  07A0                     	;# 
  2972  07A1                     	;# 
  2973  07A2                     	;# 
  2974  07A3                     	;# 
  2975  07A4                     	;# 
  2976  07A5                     	;# 
  2977  07A6                     	;# 
  2978  07A7                     	;# 
  2979  07A8                     	;# 
  2980  07A9                     	;# 
  2981  07AA                     	;# 
  2982  07AB                     	;# 
  2983  07AC                     	;# 
  2984  07AD                     	;# 
  2985  07AE                     	;# 
  2986  07AF                     	;# 
  2987  07B0                     	;# 
  2988  07B1                     	;# 
  2989  07B2                     	;# 
  2990  07B3                     	;# 
  2991  07B4                     	;# 
  2992  07B5                     	;# 
  2993  07B6                     	;# 
  2994  07B7                     	;# 
  2995  0FE4                     	;# 
  2996  0FE5                     	;# 
  2997  0FE6                     	;# 
  2998  0FE7                     	;# 
  2999  0FE8                     	;# 
  3000  0FE9                     	;# 
  3001  0FEA                     	;# 
  3002  0FEB                     	;# 
  3003  0FED                     	;# 
  3004  0FEE                     	;# 
  3005  0FEF                     	;# 
  3006  0000                     	;# 
  3007  0001                     	;# 
  3008  0002                     	;# 
  3009  0003                     	;# 
  3010  0004                     	;# 
  3011  0005                     	;# 
  3012  0006                     	;# 
  3013  0007                     	;# 
  3014  0008                     	;# 
  3015  0009                     	;# 
  3016  000A                     	;# 
  3017  000B                     	;# 
  3018  000C                     	;# 
  3019  000D                     	;# 
  3020  000E                     	;# 
  3021  000F                     	;# 
  3022  0010                     	;# 
  3023  0011                     	;# 
  3024  0012                     	;# 
  3025  0013                     	;# 
  3026  0014                     	;# 
  3027  0015                     	;# 
  3028  0016                     	;# 
  3029  0016                     	;# 
  3030  0017                     	;# 
  3031  0018                     	;# 
  3032  0019                     	;# 
  3033  001A                     	;# 
  3034  001B                     	;# 
  3035  001C                     	;# 
  3036  001E                     	;# 
  3037  001F                     	;# 
  3038  008C                     	;# 
  3039  008D                     	;# 
  3040  008E                     	;# 
  3041  008F                     	;# 
  3042  0090                     	;# 
  3043  0091                     	;# 
  3044  0092                     	;# 
  3045  0093                     	;# 
  3046  0094                     	;# 
  3047  0095                     	;# 
  3048  0096                     	;# 
  3049  0097                     	;# 
  3050  0098                     	;# 
  3051  0099                     	;# 
  3052  009A                     	;# 
  3053  009B                     	;# 
  3054  009B                     	;# 
  3055  009C                     	;# 
  3056  009D                     	;# 
  3057  009E                     	;# 
  3058  010C                     	;# 
  3059  010D                     	;# 
  3060  010E                     	;# 
  3061  010F                     	;# 
  3062  0110                     	;# 
  3063  0111                     	;# 
  3064  0112                     	;# 
  3065  0113                     	;# 
  3066  0114                     	;# 
  3067  0115                     	;# 
  3068  0116                     	;# 
  3069  0117                     	;# 
  3070  0118                     	;# 
  3071  0119                     	;# 
  3072  011A                     	;# 
  3073  011B                     	;# 
  3074  011D                     	;# 
  3075  011E                     	;# 
  3076  011F                     	;# 
  3077  018C                     	;# 
  3078  0190                     	;# 
  3079  0191                     	;# 
  3080  0191                     	;# 
  3081  0192                     	;# 
  3082  0193                     	;# 
  3083  0193                     	;# 
  3084  0193                     	;# 
  3085  0194                     	;# 
  3086  0195                     	;# 
  3087  0196                     	;# 
  3088  0199                     	;# 
  3089  0199                     	;# 
  3090  019A                     	;# 
  3091  019A                     	;# 
  3092  019B                     	;# 
  3093  019B                     	;# 
  3094  019B                     	;# 
  3095  019B                     	;# 
  3096  019C                     	;# 
  3097  019C                     	;# 
  3098  019D                     	;# 
  3099  019D                     	;# 
  3100  019E                     	;# 
  3101  019E                     	;# 
  3102  019F                     	;# 
  3103  019F                     	;# 
  3104  020D                     	;# 
  3105  0211                     	;# 
  3106  0211                     	;# 
  3107  0212                     	;# 
  3108  0212                     	;# 
  3109  0213                     	;# 
  3110  0213                     	;# 
  3111  0214                     	;# 
  3112  0214                     	;# 
  3113  0215                     	;# 
  3114  0215                     	;# 
  3115  0215                     	;# 
  3116  0216                     	;# 
  3117  0216                     	;# 
  3118  0217                     	;# 
  3119  0217                     	;# 
  3120  0219                     	;# 
  3121  021A                     	;# 
  3122  021B                     	;# 
  3123  021C                     	;# 
  3124  021D                     	;# 
  3125  021E                     	;# 
  3126  021F                     	;# 
  3127  028C                     	;# 
  3128  028D                     	;# 
  3129  0291                     	;# 
  3130  0291                     	;# 
  3131  0292                     	;# 
  3132  0293                     	;# 
  3133  0294                     	;# 
  3134  0295                     	;# 
  3135  0295                     	;# 
  3136  0296                     	;# 
  3137  0298                     	;# 
  3138  0298                     	;# 
  3139  0299                     	;# 
  3140  029A                     	;# 
  3141  029B                     	;# 
  3142  029C                     	;# 
  3143  029C                     	;# 
  3144  029D                     	;# 
  3145  029E                     	;# 
  3146  029F                     	;# 
  3147  030C                     	;# 
  3148  030D                     	;# 
  3149  0311                     	;# 
  3150  0311                     	;# 
  3151  0312                     	;# 
  3152  0313                     	;# 
  3153  0314                     	;# 
  3154  0315                     	;# 
  3155  0315                     	;# 
  3156  0316                     	;# 
  3157  0318                     	;# 
  3158  0318                     	;# 
  3159  0319                     	;# 
  3160  031A                     	;# 
  3161  031C                     	;# 
  3162  031C                     	;# 
  3163  031D                     	;# 
  3164  031E                     	;# 
  3165  038C                     	;# 
  3166  038D                     	;# 
  3167  0394                     	;# 
  3168  0395                     	;# 
  3169  0396                     	;# 
  3170  040C                     	;# 
  3171  040D                     	;# 
  3172  0415                     	;# 
  3173  0416                     	;# 
  3174  0417                     	;# 
  3175  041C                     	;# 
  3176  041D                     	;# 
  3177  041E                     	;# 
  3178  048D                     	;# 
  3179  0491                     	;# 
  3180  0492                     	;# 
  3181  0493                     	;# 
  3182  0493                     	;# 
  3183  0494                     	;# 
  3184  0495                     	;# 
  3185  0496                     	;# 
  3186  0497                     	;# 
  3187  0791                     	;# 
  3188  0792                     	;# 
  3189  0793                     	;# 
  3190  0794                     	;# 
  3191  0795                     	;# 
  3192  0798                     	;# 
  3193  0799                     	;# 
  3194  079A                     	;# 
  3195  079B                     	;# 
  3196  079C                     	;# 
  3197  079D                     	;# 
  3198  07A0                     	;# 
  3199  07A1                     	;# 
  3200  07A2                     	;# 
  3201  07A3                     	;# 
  3202  07A4                     	;# 
  3203  07A5                     	;# 
  3204  07A6                     	;# 
  3205  07A7                     	;# 
  3206  07A8                     	;# 
  3207  07A9                     	;# 
  3208  07AA                     	;# 
  3209  07AB                     	;# 
  3210  07AC                     	;# 
  3211  07AD                     	;# 
  3212  07AE                     	;# 
  3213  07AF                     	;# 
  3214  07B0                     	;# 
  3215  07B1                     	;# 
  3216  07B2                     	;# 
  3217  07B3                     	;# 
  3218  07B4                     	;# 
  3219  07B5                     	;# 
  3220  07B6                     	;# 
  3221  07B7                     	;# 
  3222  0FE4                     	;# 
  3223  0FE5                     	;# 
  3224  0FE6                     	;# 
  3225  0FE7                     	;# 
  3226  0FE8                     	;# 
  3227  0FE9                     	;# 
  3228  0FEA                     	;# 
  3229  0FEB                     	;# 
  3230  0FED                     	;# 
  3231  0FEE                     	;# 
  3232  0FEF                     	;_RxBuffer
  3233                           
  3234                           	psect	idataBANK0
  3235  0000                     __pidataBANK0:	
  3236                           
  3237                           	psect	idataBANK1
  3238  0000                     __pidataBANK1:	
  3239                           
  3240                           	psect	idataBANK2
  3241  0000                     __pidataBANK2:	
  3242                           
  3243                           	psect	idataBANK3
  3244  0000                     __pidataBANK3:	
  3245                           
  3246                           	psect	stringtext
  3247  2800                     __pstringtext:	
  3248  2800                     _MiWi:	
  3249  2800  3420               	retlw	32
  3250  2801  34B2               	retlw	178
  3251  2802  3420               	retlw	32
  3252  2803  3420               	retlw	32
  3253  2804  3420               	retlw	32
  3254  2805  34B2               	retlw	178
  3255  2806  3420               	retlw	32
  3256  2807  3420               	retlw	32
  3257  2808  34B2               	retlw	178
  3258  2809  3420               	retlw	32
  3259  280A  34B2               	retlw	178
  3260  280B  3420               	retlw	32
  3261  280C  3420               	retlw	32
  3262  280D  3420               	retlw	32
  3263  280E  3420               	retlw	32
  3264  280F  3420               	retlw	32
  3265  2810  34B2               	retlw	178
  3266  2811  3420               	retlw	32
  3267  2812  34B2               	retlw	178
  3268  2813  340D               	retlw	13
  3269  2814  340A               	retlw	10
  3270  2815  34B2               	retlw	178
  3271  2816  3420               	retlw	32
  3272  2817  34B2               	retlw	178
  3273  2818  3420               	retlw	32
  3274  2819  34B2               	retlw	178
  3275  281A  3420               	retlw	32
  3276  281B  34B2               	retlw	178
  3277  281C  3420               	retlw	32
  3278  281D  3420               	retlw	32
  3279  281E  3420               	retlw	32
  3280  281F  34B2               	retlw	178
  3281  2820  3420               	retlw	32
  3282  2821  3420               	retlw	32
  3283  2822  34B2               	retlw	178
  3284  2823  3420               	retlw	32
  3285  2824  3420               	retlw	32
  3286  2825  34B2               	retlw	178
  3287  2826  3420               	retlw	32
  3288  2827  3420               	retlw	32
  3289  2828  340D               	retlw	13
  3290  2829  340A               	retlw	10
  3291  282A  34B2               	retlw	178
  3292  282B  3420               	retlw	32
  3293  282C  3420               	retlw	32
  3294  282D  34B2               	retlw	178
  3295  282E  3420               	retlw	32
  3296  282F  3420               	retlw	32
  3297  2830  34B2               	retlw	178
  3298  2831  3420               	retlw	32
  3299  2832  34B2               	retlw	178
  3300  2833  3420               	retlw	32
  3301  2834  34B2               	retlw	178
  3302  2835  3420               	retlw	32
  3303  2836  3420               	retlw	32
  3304  2837  34B2               	retlw	178
  3305  2838  3420               	retlw	32
  3306  2839  3420               	retlw	32
  3307  283A  34B2               	retlw	178
  3308  283B  3420               	retlw	32
  3309  283C  34B2               	retlw	178
  3310  283D  340D               	retlw	13
  3311  283E  340A               	retlw	10
  3312  283F  34B2               	retlw	178
  3313  2840  3420               	retlw	32
  3314  2841  3420               	retlw	32
  3315  2842  34B2               	retlw	178
  3316  2843  3420               	retlw	32
  3317  2844  3420               	retlw	32
  3318  2845  34B2               	retlw	178
  3319  2846  3420               	retlw	32
  3320  2847  34B2               	retlw	178
  3321  2848  3420               	retlw	32
  3322  2849  3420               	retlw	32
  3323  284A  34B2               	retlw	178
  3324  284B  3420               	retlw	32
  3325  284C  34B2               	retlw	178
  3326  284D  3420               	retlw	32
  3327  284E  34B2               	retlw	178
  3328  284F  3420               	retlw	32
  3329  2850  3420               	retlw	32
  3330  2851  34B2               	retlw	178
  3331  2852  340D               	retlw	13
  3332  2853  340A               	retlw	10
  3333  2854  34B2               	retlw	178
  3334  2855  3420               	retlw	32
  3335  2856  3420               	retlw	32
  3336  2857  34B2               	retlw	178
  3337  2858  3420               	retlw	32
  3338  2859  3420               	retlw	32
  3339  285A  34B2               	retlw	178
  3340  285B  3420               	retlw	32
  3341  285C  34B2               	retlw	178
  3342  285D  3420               	retlw	32
  3343  285E  3420               	retlw	32
  3344  285F  3420               	retlw	32
  3345  2860  34B2               	retlw	178
  3346  2861  3420               	retlw	32
  3347  2862  34B2               	retlw	178
  3348  2863  3420               	retlw	32
  3349  2864  3420               	retlw	32
  3350  2865  3420               	retlw	32
  3351  2866  34B2               	retlw	178
  3352  2867  340D               	retlw	13
  3353  2868  340A               	retlw	10
  3354  2869  3420               	retlw	32
  3355  286A  3420               	retlw	32
  3356  286B  3420               	retlw	32
  3357  286C  3420               	retlw	32
  3358  286D  3420               	retlw	32
  3359  286E  3420               	retlw	32
  3360  286F  3420               	retlw	32
  3361  2870  3420               	retlw	32
  3362  2871  3420               	retlw	32
  3363  2872  3420               	retlw	32
  3364  2873  3420               	retlw	32
  3365  2874  3420               	retlw	32
  3366  2875  3420               	retlw	32
  3367  2876  3420               	retlw	32
  3368  2877  3420               	retlw	32
  3369  2878  3420               	retlw	32
  3370  2879  3420               	retlw	32
  3371  287A  3420               	retlw	32
  3372  287B  3420               	retlw	32
  3373  287C  340D               	retlw	13
  3374  287D  340A               	retlw	10
  3375  287E                     __end_of_MiWi:	
  3376  287E                     _octpowers:	
  3377  287E  3401               	retlw	1
  3378  287F  3400               	retlw	0
  3379  2880  3408               	retlw	8
  3380  2881  3400               	retlw	0
  3381  2882  3440               	retlw	64
  3382  2883  3400               	retlw	0
  3383  2884  3400               	retlw	0
  3384  2885  3402               	retlw	2
  3385  2886  3400               	retlw	0
  3386  2887  3410               	retlw	16
  3387  2888  3400               	retlw	0
  3388  2889  3480               	retlw	128
  3389  288A                     __end_of_octpowers:	
  3390  288A                     _dpowers:	
  3391  288A  3401               	retlw	1
  3392  288B  3400               	retlw	0
  3393  288C  340A               	retlw	10
  3394  288D  3400               	retlw	0
  3395  288E  3464               	retlw	100
  3396  288F  3400               	retlw	0
  3397  2890  34E8               	retlw	232
  3398  2891  3403               	retlw	3
  3399  2892  3410               	retlw	16
  3400  2893  3427               	retlw	39
  3401  2894                     __end_of_dpowers:	
  3402  2894                     _hexpowers:	
  3403  2894  3401               	retlw	1
  3404  2895  3400               	retlw	0
  3405  2896  3410               	retlw	16
  3406  2897  3400               	retlw	0
  3407  2898  3400               	retlw	0
  3408  2899  3401               	retlw	1
  3409  289A  3400               	retlw	0
  3410  289B  3410               	retlw	16
  3411  289C                     __end_of_hexpowers:	
  3412  000B                     _INTCONbits	set	11
  3413  0011                     _PIR1bits	set	17
  3414  000C                     _PORTAbits	set	12
  3415  000D                     _PORTBbits	set	13
  3416  0018                     _T1CON	set	24
  3417  0018                     _T1CONbits	set	24
  3418  0017                     _TMR1H	set	23
  3419  0016                     _TMR1L	set	22
  3420  0099                     _OSCCON	set	153
  3421  0091                     _PIE1bits	set	145
  3422  008C                     _TRISA	set	140
  3423  008C                     _TRISAbits	set	140
  3424  008D                     _TRISB	set	141
  3425  008D                     _TRISBbits	set	141
  3426  008E                     _TRISC	set	142
  3427  008E                     _TRISCbits	set	142
  3428  008F                     _TRISD	set	143
  3429  008F                     _TRISDbits	set	143
  3430  010C                     _LATA	set	268
  3431  010C                     _LATAbits	set	268
  3432  010D                     _LATB	set	269
  3433  010D                     _LATBbits	set	269
  3434  010E                     _LATC	set	270
  3435  010E                     _LATCbits	set	270
  3436  010F                     _LATD	set	271
  3437  010F                     _LATDbits	set	271
  3438  0191                     _EEADR	set	401
  3439  018C                     _ANSELA	set	396
  3440  0192                     _EEADRH	set	402
  3441  0195                     _EECON1bits	set	405
  3442  0196                     _EECON2	set	406
  3443  0193                     _EEDATA	set	403
  3444  0211                     _SSP1BUF	set	529
  3445  0215                     _SSP1CON1	set	533
  3446  0215                     _SSP1CON1bits	set	533
  3447  0214                     _SSP1STAT	set	532
  3448  030C                     _TRISFbits	set	780
  3449  0396                     _IOCBFbits	set	918
  3450  0395                     _IOCBN	set	917
  3451  0395                     _IOCBNbits	set	917
  3452  0394                     _IOCBP	set	916
  3453  038C                     _LATFbits	set	908
  3454  289C                     STR_4:	
  3455  289C  3443               	retlw	67	;'C'
  3456  289D  346F               	retlw	111	;'o'
  3457  289E  346E               	retlw	110	;'n'
  3458  289F  346E               	retlw	110	;'n'
  3459  28A0  3465               	retlw	101	;'e'
  3460  28A1  3463               	retlw	99	;'c'
  3461  28A2  3474               	retlw	116	;'t'
  3462  28A3  3469               	retlw	105	;'i'
  3463  28A4  346E               	retlw	110	;'n'
  3464  28A5  3467               	retlw	103	;'g'
  3465  28A6  3420               	retlw	32	;' '
  3466  28A7  3450               	retlw	80	;'P'
  3467  28A8  3465               	retlw	101	;'e'
  3468  28A9  3465               	retlw	101	;'e'
  3469  28AA  3472               	retlw	114	;'r'
  3470  28AB  3420               	retlw	32	;' '
  3471  28AC  3420               	retlw	32	;' '
  3472  28AD  346F               	retlw	111	;'o'
  3473  28AE  346E               	retlw	110	;'n'
  3474  28AF  3420               	retlw	32	;' '
  3475  28B0  3443               	retlw	67	;'C'
  3476  28B1  3468               	retlw	104	;'h'
  3477  28B2  3461               	retlw	97	;'a'
  3478  28B3  346E               	retlw	110	;'n'
  3479  28B4  346E               	retlw	110	;'n'
  3480  28B5  3465               	retlw	101	;'e'
  3481  28B6  346C               	retlw	108	;'l'
  3482  28B7  3420               	retlw	32	;' '
  3483  28B8  3425               	retlw	37	;'%'
  3484  28B9  3464               	retlw	100	;'d'
  3485  28BA  3420               	retlw	32	;' '
  3486  28BB  3400               	retlw	0
  3487  28BC                     STR_5:	
  3488  28BC  3420               	retlw	32	;' '
  3489  28BD  3443               	retlw	67	;'C'
  3490  28BE  346F               	retlw	111	;'o'
  3491  28BF  346E               	retlw	110	;'n'
  3492  28C0  346E               	retlw	110	;'n'
  3493  28C1  3465               	retlw	101	;'e'
  3494  28C2  3463               	retlw	99	;'c'
  3495  28C3  3474               	retlw	116	;'t'
  3496  28C4  3465               	retlw	101	;'e'
  3497  28C5  3464               	retlw	100	;'d'
  3498  28C6  3420               	retlw	32	;' '
  3499  28C7  3450               	retlw	80	;'P'
  3500  28C8  3465               	retlw	101	;'e'
  3501  28C9  3465               	retlw	101	;'e'
  3502  28CA  3472               	retlw	114	;'r'
  3503  28CB  3420               	retlw	32	;' '
  3504  28CC  3420               	retlw	32	;' '
  3505  28CD  346F               	retlw	111	;'o'
  3506  28CE  346E               	retlw	110	;'n'
  3507  28CF  3420               	retlw	32	;' '
  3508  28D0  3443               	retlw	67	;'C'
  3509  28D1  3468               	retlw	104	;'h'
  3510  28D2  3461               	retlw	97	;'a'
  3511  28D3  346E               	retlw	110	;'n'
  3512  28D4  346E               	retlw	110	;'n'
  3513  28D5  3465               	retlw	101	;'e'
  3514  28D6  346C               	retlw	108	;'l'
  3515  28D7  3420               	retlw	32	;' '
  3516  28D8  3425               	retlw	37	;'%'
  3517  28D9  3464               	retlw	100	;'d'
  3518  28DA  3400               	retlw	0
  3519  28DB                     STR_3:	
  3520  28DB  3453               	retlw	83	;'S'
  3521  28DC  3469               	retlw	105	;'i'
  3522  28DD  346D               	retlw	109	;'m'
  3523  28DE  3470               	retlw	112	;'p'
  3524  28DF  346C               	retlw	108	;'l'
  3525  28E0  3465               	retlw	101	;'e'
  3526  28E1  3420               	retlw	32	;' '
  3527  28E2  3453               	retlw	83	;'S'
  3528  28E3  3454               	retlw	84	;'T'
  3529  28E4  3441               	retlw	65	;'A'
  3530  28E5  3452               	retlw	82	;'R'
  3531  28E6  3420               	retlw	32	;' '
  3532  28E7  3420               	retlw	32	;' '
  3533  28E8  3420               	retlw	32	;' '
  3534  28E9  3420               	retlw	32	;' '
  3535  28EA  3420               	retlw	32	;' '
  3536  28EB  344D               	retlw	77	;'M'
  3537  28EC  3452               	retlw	82	;'R'
  3538  28ED  3446               	retlw	70	;'F'
  3539  28EE  3432               	retlw	50	;'2'
  3540  28EF  3434               	retlw	52	;'4'
  3541  28F0  344A               	retlw	74	;'J'
  3542  28F1  3434               	retlw	52	;'4'
  3543  28F2  3430               	retlw	48	;'0'
  3544  28F3  3420               	retlw	32	;' '
  3545  28F4  344E               	retlw	78	;'N'
  3546  28F5  346F               	retlw	111	;'o'
  3547  28F6  3464               	retlw	100	;'d'
  3548  28F7  3465               	retlw	101	;'e'
  3549  28F8  3400               	retlw	0
  3550  28F9                     STR_9:	
  3551  28F9  3452               	retlw	82	;'R'
  3552  28FA  3442               	retlw	66	;'B'
  3553  28FB  3430               	retlw	48	;'0'
  3554  28FC  343A               	retlw	58	;':'
  3555  28FD  3425               	retlw	37	;'%'
  3556  28FE  3430               	retlw	48	;'0'
  3557  28FF  3432               	retlw	50	;'2'
  3558  2900  3464               	retlw	100	;'d'
  3559  2901  342D               	retlw	45	;'-'
  3560  2902  3425               	retlw	37	;'%'
  3561  2903  3430               	retlw	48	;'0'
  3562  2904  3432               	retlw	50	;'2'
  3563  2905  3478               	retlw	120	;'x'
  3564  2906  3425               	retlw	37	;'%'
  3565  2907  3430               	retlw	48	;'0'
  3566  2908  3432               	retlw	50	;'2'
  3567  2909  3478               	retlw	120	;'x'
  3568  290A  3425               	retlw	37	;'%'
  3569  290B  3430               	retlw	48	;'0'
  3570  290C  3432               	retlw	50	;'2'
  3571  290D  3478               	retlw	120	;'x'
  3572  290E  342D               	retlw	45	;'-'
  3573  290F  346D               	retlw	109	;'m'
  3574  2910  3465               	retlw	101	;'e'
  3575  2911  3400               	retlw	0
  3576  2912                     STR_10:	
  3577  2912  3452               	retlw	82	;'R'
  3578  2913  3442               	retlw	66	;'B'
  3579  2914  3430               	retlw	48	;'0'
  3580  2915  343A               	retlw	58	;':'
  3581  2916  3425               	retlw	37	;'%'
  3582  2917  3430               	retlw	48	;'0'
  3583  2918  3432               	retlw	50	;'2'
  3584  2919  3464               	retlw	100	;'d'
  3585  291A  342D               	retlw	45	;'-'
  3586  291B  3425               	retlw	37	;'%'
  3587  291C  3430               	retlw	48	;'0'
  3588  291D  3432               	retlw	50	;'2'
  3589  291E  3478               	retlw	120	;'x'
  3590  291F  3425               	retlw	37	;'%'
  3591  2920  3430               	retlw	48	;'0'
  3592  2921  3432               	retlw	50	;'2'
  3593  2922  3478               	retlw	120	;'x'
  3594  2923  3425               	retlw	37	;'%'
  3595  2924  3430               	retlw	48	;'0'
  3596  2925  3432               	retlw	50	;'2'
  3597  2926  3478               	retlw	120	;'x'
  3598  2927  3400               	retlw	0
  3599  2928                     STR_8:	
  3600  2928  3420               	retlw	32	;' '
  3601  2929  3441               	retlw	65	;'A'
  3602  292A  3464               	retlw	100	;'d'
  3603  292B  3464               	retlw	100	;'d'
  3604  292C  3472               	retlw	114	;'r'
  3605  292D  3465               	retlw	101	;'e'
  3606  292E  3473               	retlw	115	;'s'
  3607  292F  3473               	retlw	115	;'s'
  3608  2930  343A               	retlw	58	;':'
  3609  2931  3425               	retlw	37	;'%'
  3610  2932  3430               	retlw	48	;'0'
  3611  2933  3432               	retlw	50	;'2'
  3612  2934  3478               	retlw	120	;'x'
  3613  2935  3425               	retlw	37	;'%'
  3614  2936  3430               	retlw	48	;'0'
  3615  2937  3432               	retlw	50	;'2'
  3616  2938  3478               	retlw	120	;'x'
  3617  2939  3425               	retlw	37	;'%'
  3618  293A  3430               	retlw	48	;'0'
  3619  293B  3432               	retlw	50	;'2'
  3620  293C  3478               	retlw	120	;'x'
  3621  293D  3400               	retlw	0
  3622  293E                     STR_15:	
  3623  293E  3452               	retlw	82	;'R'
  3624  293F  3465               	retlw	101	;'e'
  3625  2940  3473               	retlw	115	;'s'
  3626  2941  3474               	retlw	116	;'t'
  3627  2942  346F               	retlw	111	;'o'
  3628  2943  3472               	retlw	114	;'r'
  3629  2944  3469               	retlw	105	;'i'
  3630  2945  346E               	retlw	110	;'n'
  3631  2946  3467               	retlw	103	;'g'
  3632  2947  3420               	retlw	32	;' '
  3633  2948  344E               	retlw	78	;'N'
  3634  2949  3465               	retlw	101	;'e'
  3635  294A  3474               	retlw	116	;'t'
  3636  294B  3477               	retlw	119	;'w'
  3637  294C  346F               	retlw	111	;'o'
  3638  294D  3472               	retlw	114	;'r'
  3639  294E  346B               	retlw	107	;'k'
  3640  294F  3420               	retlw	32	;' '
  3641  2950  3421               	retlw	33	;'!'
  3642  2951  3421               	retlw	33	;'!'
  3643  2952  3400               	retlw	0
  3644  2953                     STR_13:	
  3645  2953  3444               	retlw	68	;'D'
  3646  2954  3461               	retlw	97	;'a'
  3647  2955  3474               	retlw	116	;'t'
  3648  2956  3461               	retlw	97	;'a'
  3649  2957  345F               	retlw	95	;'_'
  3650  2958  3453               	retlw	83	;'S'
  3651  2959  3465               	retlw	101	;'e'
  3652  295A  346E               	retlw	110	;'n'
  3653  295B  3464               	retlw	100	;'d'
  3654  295C  3469               	retlw	105	;'i'
  3655  295D  346E               	retlw	110	;'n'
  3656  295E  3467               	retlw	103	;'g'
  3657  295F  345F               	retlw	95	;'_'
  3658  2960  3446               	retlw	70	;'F'
  3659  2961  3461               	retlw	97	;'a'
  3660  2962  3469               	retlw	105	;'i'
  3661  2963  346C               	retlw	108	;'l'
  3662  2964  3421               	retlw	33	;'!'
  3663  2965  3421               	retlw	33	;'!'
  3664  2966  3400               	retlw	0
  3665  2967                     STR_14:	
  3666  2967  3445               	retlw	69	;'E'
  3667  2968  344E               	retlw	78	;'N'
  3668  2969  3444               	retlw	68	;'D'
  3669  296A  345F               	retlw	95	;'_'
  3670  296B  3444               	retlw	68	;'D'
  3671  296C  3445               	retlw	69	;'E'
  3672  296D  3456               	retlw	86	;'V'
  3673  296E  3449               	retlw	73	;'I'
  3674  296F  3443               	retlw	67	;'C'
  3675  2970  3445               	retlw	69	;'E'
  3676  2971  3453               	retlw	83	;'S'
  3677  2972  3420               	retlw	32	;' '
  3678  2973  343A               	retlw	58	;':'
  3679  2974  3425               	retlw	37	;'%'
  3680  2975  3430               	retlw	48	;'0'
  3681  2976  3432               	retlw	50	;'2'
  3682  2977  3464               	retlw	100	;'d'
  3683  2978  3400               	retlw	0
  3684  2979                     STR_16:	
  3685  2979  3430               	retlw	48	;'0'
  3686  297A  3431               	retlw	49	;'1'
  3687  297B  3432               	retlw	50	;'2'
  3688  297C  3433               	retlw	51	;'3'
  3689  297D  3434               	retlw	52	;'4'
  3690  297E  3435               	retlw	53	;'5'
  3691  297F  3436               	retlw	54	;'6'
  3692  2980  3437               	retlw	55	;'7'
  3693  2981  3438               	retlw	56	;'8'
  3694  2982  3439               	retlw	57	;'9'
  3695  2983  3441               	retlw	65	;'A'
  3696  2984  3442               	retlw	66	;'B'
  3697  2985  3443               	retlw	67	;'C'
  3698  2986  3444               	retlw	68	;'D'
  3699  2987  3445               	retlw	69	;'E'
  3700  2988  3446               	retlw	70	;'F'
  3701  2989  3400               	retlw	0
  3702  298A                     STR_17:	
  3703  298A  3430               	retlw	48	;'0'
  3704  298B  3431               	retlw	49	;'1'
  3705  298C  3432               	retlw	50	;'2'
  3706  298D  3433               	retlw	51	;'3'
  3707  298E  3434               	retlw	52	;'4'
  3708  298F  3435               	retlw	53	;'5'
  3709  2990  3436               	retlw	54	;'6'
  3710  2991  3437               	retlw	55	;'7'
  3711  2992  3438               	retlw	56	;'8'
  3712  2993  3439               	retlw	57	;'9'
  3713  2994  3461               	retlw	97	;'a'
  3714  2995  3462               	retlw	98	;'b'
  3715  2996  3463               	retlw	99	;'c'
  3716  2997  3464               	retlw	100	;'d'
  3717  2998  3465               	retlw	101	;'e'
  3718  2999  3466               	retlw	102	;'f'
  3719  299A  3400               	retlw	0
  3720  299B                     STR_12:	
  3721  299B  3452               	retlw	82	;'R'
  3722  299C  3442               	retlw	66	;'B'
  3723  299D  3432               	retlw	50	;'2'
  3724  299E  343A               	retlw	58	;':'
  3725  299F  3420               	retlw	32	;' '
  3726  29A0  3443               	retlw	67	;'C'
  3727  29A1  3468               	retlw	104	;'h'
  3728  29A2  3461               	retlw	97	;'a'
  3729  29A3  346E               	retlw	110	;'n'
  3730  29A4  3467               	retlw	103	;'g'
  3731  29A5  3465               	retlw	101	;'e'
  3732  29A6  3420               	retlw	32	;' '
  3733  29A7  346E               	retlw	110	;'n'
  3734  29A8  346F               	retlw	111	;'o'
  3735  29A9  3464               	retlw	100	;'d'
  3736  29AA  3465               	retlw	101	;'e'
  3737  29AB  3400               	retlw	0
  3738  29AC                     STR_7:	
  3739  29AC  3444               	retlw	68	;'D'
  3740  29AD  3461               	retlw	97	;'a'
  3741  29AE  3474               	retlw	116	;'t'
  3742  29AF  3461               	retlw	97	;'a'
  3743  29B0  3420               	retlw	32	;' '
  3744  29B1  3450               	retlw	80	;'P'
  3745  29B2  3461               	retlw	97	;'a'
  3746  29B3  3463               	retlw	99	;'c'
  3747  29B4  346B               	retlw	107	;'k'
  3748  29B5  3465               	retlw	101	;'e'
  3749  29B6  3474               	retlw	116	;'t'
  3750  29B7  3420               	retlw	32	;' '
  3751  29B8  3466               	retlw	102	;'f'
  3752  29B9  3472               	retlw	114	;'r'
  3753  29BA  346F               	retlw	111	;'o'
  3754  29BB  346D               	retlw	109	;'m'
  3755  29BC  3400               	retlw	0
  3756  29BD                     STR_2:	
  3757  29BD  3452               	retlw	82	;'R'
  3758  29BE  3458               	retlw	88	;'X'
  3759  29BF  3420               	retlw	32	;' '
  3760  29C0  344D               	retlw	77	;'M'
  3761  29C1  3465               	retlw	101	;'e'
  3762  29C2  3473               	retlw	115	;'s'
  3763  29C3  3473               	retlw	115	;'s'
  3764  29C4  3461               	retlw	97	;'a'
  3765  29C5  3467               	retlw	103	;'g'
  3766  29C6  3465               	retlw	101	;'e'
  3767  29C7  3473               	retlw	115	;'s'
  3768  29C8  343A               	retlw	58	;':'
  3769  29C9  3420               	retlw	32	;' '
  3770  29CA  3425               	retlw	37	;'%'
  3771  29CB  3433               	retlw	51	;'3'
  3772  29CC  3464               	retlw	100	;'d'
  3773  29CD  3400               	retlw	0
  3774  29CE                     STR_1:	
  3775  29CE  3454               	retlw	84	;'T'
  3776  29CF  3458               	retlw	88	;'X'
  3777  29D0  3420               	retlw	32	;' '
  3778  29D1  344D               	retlw	77	;'M'
  3779  29D2  3465               	retlw	101	;'e'
  3780  29D3  3473               	retlw	115	;'s'
  3781  29D4  3473               	retlw	115	;'s'
  3782  29D5  3461               	retlw	97	;'a'
  3783  29D6  3467               	retlw	103	;'g'
  3784  29D7  3465               	retlw	101	;'e'
  3785  29D8  3473               	retlw	115	;'s'
  3786  29D9  343A               	retlw	58	;':'
  3787  29DA  3420               	retlw	32	;' '
  3788  29DB  3425               	retlw	37	;'%'
  3789  29DC  3433               	retlw	51	;'3'
  3790  29DD  3464               	retlw	100	;'d'
  3791  29DE  3400               	retlw	0
  3792  29DF                     STR_6:	
  3793  29DF  3420               	retlw	32	;' '
  3794  29E0  3455               	retlw	85	;'U'
  3795  29E1  346E               	retlw	110	;'n'
  3796  29E2  3469               	retlw	105	;'i'
  3797  29E3  3463               	retlw	99	;'c'
  3798  29E4  3461               	retlw	97	;'a'
  3799  29E5  3473               	retlw	115	;'s'
  3800  29E6  3474               	retlw	116	;'t'
  3801  29E7  3420               	retlw	32	;' '
  3802  29E8  3446               	retlw	70	;'F'
  3803  29E9  3461               	retlw	97	;'a'
  3804  29EA  3469               	retlw	105	;'i'
  3805  29EB  346C               	retlw	108	;'l'
  3806  29EC  3465               	retlw	101	;'e'
  3807  29ED  3464               	retlw	100	;'d'
  3808  29EE  3400               	retlw	0
  3809  2912                     
  3810                           ; #config settings
  3811  0000                     
  3812                           	psect	cinit
  3813  0801                     start_initialization:	
  3814  0801                     __initialization:		;BIGRAM
  3815                           
  3816                           ;initializer for _BankIndex
  3817  0801  30FF               	movlw	255
  3818  0802  00E6               	movwf	__pdataBANK0& (0+127)
  3819                           
  3820                           ; Initialize objects allocated to BANK1
  3821  0803  0021               	movlb	1	; select bank1
  3822                           
  3823                           ;initializer for _ConnMode
  3824  0804  3003               	movlw	3
  3825  0805  00EF               	movwf	__pdataBANK1& (0+127)
  3826                           
  3827                           ; Initialize objects allocated to BANK2
  3828  0806  0022               	movlb	2	; select bank2
  3829                           
  3830                           ;initializer for _AdditionalNodeID
  3831  0807  3001               	movlw	1
  3832  0808  00EF               	movwf	__pdataBANK2& (0+127)
  3833                           
  3834                           ; Initialize objects allocated to BANK3
  3835  0809  0023               	movlb	3	; select bank3
  3836                           
  3837                           ;initializer for _myLongAddress
  3838  080A  30FF               	movlw	255
  3839  080B  00E6               	movwf	__pdataBANK3& (0+127)
  3840  080C  3011               	movlw	17
  3841  080D  00E7               	movwf	(__pdataBANK3+1)& (0+127)
  3842  080E  3022               	movlw	34
  3843  080F  00E8               	movwf	(__pdataBANK3+2)& (0+127)
  3844  0810  3033               	movlw	51
  3845  0811  00E9               	movwf	(__pdataBANK3+3)& (0+127)
  3846  0812  3044               	movlw	68
  3847  0813  00EA               	movwf	(__pdataBANK3+4)& (0+127)
  3848  0814  3055               	movlw	85
  3849  0815  00EB               	movwf	(__pdataBANK3+5)& (0+127)
  3850  0816  3066               	movlw	102
  3851  0817  00EC               	movwf	(__pdataBANK3+6)& (0+127)
  3852  0818  3011               	movlw	17
  3853  0819  00ED               	movwf	(__pdataBANK3+7)& (0+127)
  3854                           
  3855                           ; Clear objects allocated to BIGRAM
  3856  081A  3066               	movlw	102
  3857  081B  0084               	movwf	4
  3858  081C  3023               	movlw	35
  3859  081D  0085               	movwf	5
  3860  081E  308A               	movlw	138
  3861  081F  00FE               	movwf	126
  3862  0820  01FF               	clrf	127
  3863  0821  3186  26F2  3188   	fcall	clear_ram0
  3864                           
  3865                           ; Clear objects allocated to COMMON
  3866  0824  01FC               	clrf	__pbssCOMMON& (0+127)
  3867  0825  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3868                           
  3869                           ; Clear objects allocated to BANK0
  3870  0826  0020               	movlb	0	; select bank0
  3871  0827  01DE               	clrf	__pbssBANK0& (0+127)
  3872  0828  01DF               	clrf	(__pbssBANK0+1)& (0+127)
  3873  0829  01E0               	clrf	(__pbssBANK0+2)& (0+127)
  3874  082A  01E1               	clrf	(__pbssBANK0+3)& (0+127)
  3875  082B  01E2               	clrf	(__pbssBANK0+4)& (0+127)
  3876  082C  01E3               	clrf	(__pbssBANK0+5)& (0+127)
  3877  082D  01E4               	clrf	(__pbssBANK0+6)& (0+127)
  3878  082E  01E5               	clrf	(__pbssBANK0+7)& (0+127)
  3879                           
  3880                           ; Clear objects allocated to BANK1
  3881  082F  0021               	movlb	1	; select bank1
  3882  0830  3020               	movlw	low __pbssBANK2
  3883  0831  01EB               	clrf	__pbssBANK1& (0+127)
  3884  0832  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  3885  0833  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  3886  0834  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  3887                           
  3888                           ; Clear objects allocated to BANK2
  3889  0835  0084               	movwf	4
  3890  0836  3001               	movlw	high __pbssBANK2
  3891  0837  0085               	movwf	5
  3892  0838  304D               	movlw	77
  3893  0839  00FE               	movwf	126
  3894  083A  3000               	movlw	0
  3895  083B  00FF               	movwf	127
  3896  083C  3186  26F2  3188   	fcall	clear_ram0
  3897                           
  3898                           ; Clear objects allocated to BANK3
  3899  083F  30A0               	movlw	low __pbssBANK3
  3900  0840  0084               	movwf	4
  3901  0841  3001               	movlw	high __pbssBANK3
  3902  0842  0085               	movwf	5
  3903  0843  3046               	movlw	70
  3904  0844  00FE               	movwf	126
  3905  0845  3000               	movlw	0
  3906  0846  00FF               	movwf	127
  3907  0847  3186  26F2  3188   	fcall	clear_ram0
  3908                           
  3909                           ; Clear objects allocated to BANK4
  3910  084A  3020               	movlw	low __pbssBANK4
  3911  084B  0084               	movwf	4
  3912  084C  3002               	movlw	high __pbssBANK4
  3913  084D  0085               	movwf	5
  3914  084E  3028               	movlw	40
  3915  084F  00FE               	movwf	126
  3916  0850  3000               	movlw	0
  3917  0851  00FF               	movwf	127
  3918  0852  3186  26F2  3188   	fcall	clear_ram0
  3919                           
  3920                           ; Clear objects allocated to BANK5
  3921  0855  30A0               	movlw	low __pbssBANK5
  3922  0856  0084               	movwf	4
  3923  0857  3002               	movlw	high __pbssBANK5
  3924  0858  0085               	movwf	5
  3925  0859  3046               	movlw	70
  3926  085A  00FE               	movwf	126
  3927  085B  3000               	movlw	0
  3928  085C  00FF               	movwf	127
  3929  085D  3186  26F2  3188   	fcall	clear_ram0
  3930  0860                     end_of_initialization:	
  3931                           ;End of C runtime variable initialization code
  3932                           
  3933  0860                     __end_of__initialization:	
  3934  0860  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3935  0861  0020               	movlb	0
  3936  0862  2863               	ljmp	_main	;jump to C main() function
  3937  0863                     __pmaintext:	
  3938                           ; 1 bytes @ 0x3E
  3939 ;;
  3940 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3941 ;;
  3942 ;; *************** function _main *****************
  3943 ;; Defined at:
  3944 ;;		line 56 in file "../src/main.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  freezer_enab    1   74[BANK1 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : B1F/0
  3955 ;;		On exit  : 1F/2
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;Total ram usage:        1 bytes
  3963 ;; Hardware stack levels required when called:   18
  3964 ;; This function calls:
  3965 ;;		_DemoOutput_Greeting
  3966 ;;		_InitSymbolTimer
  3967 ;;		_Initialize_Demo
  3968 ;;		_Run_Demo
  3969 ;;		_SYSTEM_Initialize
  3970 ;;		_freezer_feature
  3971 ;; This function is called by:
  3972 ;;		Startup code after reset
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _main
  3978  0863                     _main:	
  3979                           
  3980                           ;main.c: 60: SYSTEM_Initialize();
  3981                           
  3982                           ;incstack = 0
  3983 ;; hardware stack exceeded
  3984                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3985  0863  31A1  2147  3188   	fcall	_SYSTEM_Initialize
  3986                           
  3987                           ;main.c: 66: InitSymbolTimer ();
  3988  0866  207D  3188         	fcall	_InitSymbolTimer
  3989                           
  3990                           ;main.c: 68: DemoOutput_Greeting();
  3991  0868  2074               	fcall	_DemoOutput_Greeting
  3992                           
  3993                           ;main.c: 72: freezer_enable = freezer_feature();
  3994  0869  31A1  21D8  3188   	fcall	_freezer_feature
  3995  086C  0021               	movlb	1	; select bank1
  3996  086D  00EA               	movwf	main@freezer_enable^(0+128)
  3997                           
  3998                           ;main.c: 76: Initialize_Demo(freezer_enable);
  3999  086E  086A               	movf	main@freezer_enable^(0+128),w
  4000  086F  2088  3188         	fcall	_Initialize_Demo
  4001  0871                     l11386:	
  4002                           
  4003                           ;main.c: 78: {
  4004                           ;main.c: 80: Run_Demo();
  4005  0871  27DD  3188         	fcall	_Run_Demo
  4006  0873  2871               	goto	l11386
  4007  0874                     __end_of_main:	
  4008  0874                     __ptext67:	
  4009 ;; *************** function _DemoOutput_Greeting *****************
  4010 ;; Defined at:
  4011 ;;		line 63 in file "../src/demo_ouput.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 1F/2
  4022 ;;		On exit  : 1F/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    9
  4032 ;; This function calls:
  4033 ;;		_LCDDisplay
  4034 ;; This function is called by:
  4035 ;;		_main
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _DemoOutput_Greeting
  4041  0874                     _DemoOutput_Greeting:	
  4042                           
  4043                           ;demo_ouput.c: 83: LCDDisplay((char *)"Simple STAR     MRF24J40 Node", 0, 1);
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _DemoOutput_Greeting: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4047  0874  30DB               	movlw	low (STR_3| (0+32768))
  4048  0875  0020               	movlb	0	; select bank0
  4049  0876  00D7               	movwf	LCDDisplay@text
  4050  0877  30A8               	movlw	high (STR_3| (0+32768))
  4051  0878  00D8               	movwf	LCDDisplay@text+1
  4052  0879  01D9               	clrf	LCDDisplay@value
  4053  087A  01DA               	clrf	LCDDisplay@delay
  4054  087B  0ADA               	incf	LCDDisplay@delay,f
  4055  087C  28F7               	ljmp	l9494
  4056  087D                     __end_of_DemoOutput_Greeting:	
  4057  087D                     __ptext27:	
  4058 ;; *************** function _InitSymbolTimer *****************
  4059 ;; Defined at:
  4060 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_24j40/symbol.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2
  4069 ;; Tracked objects:
  4070 ;;		On entry : 1F/0
  4071 ;;		On exit  : 1F/2
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;Total ram usage:        0 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    4
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_MiApp_ProtocolInit
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _InitSymbolTimer
  4091  087D                     _InitSymbolTimer:	
  4092                           
  4093                           ;symbol.c: 70: T1CON = 0b00111000;
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _InitSymbolTimer: [wreg+status,2]
  4097  087D  3038               	movlw	56
  4098  087E  0098               	movwf	24	;volatile
  4099                           
  4100                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
  4101  087F  1011               	bcf	17,0	;volatile
  4102                           
  4103                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
  4104  0880  0021               	movlb	1	; select bank1
  4105  0881  1411               	bsf	17,0	;volatile
  4106                           
  4107                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
  4108  0882  0020               	movlb	0	; select bank0
  4109  0883  1418               	bsf	24,0	;volatile
  4110                           
  4111                           ;symbol.c: 75: timerExtension1 = 0;
  4112  0884  01FD               	clrf	_timerExtension1	;volatile
  4113                           
  4114                           ;symbol.c: 76: timerExtension2 = 0;
  4115  0885  0022               	movlb	2	; select bank2
  4116  0886  01DA               	clrf	_timerExtension2^(0+256)	;volatile
  4117  0887  0008               	return
  4118  0888                     __end_of_InitSymbolTimer:	
  4119  0888                     __ptext17:	
  4120 ;; *************** function _Initialize_Demo *****************
  4121 ;; Defined at:
  4122 ;;		line 89 in file "../src/task.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  freezer_enab    1    wreg     unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  freezer_enab    1    0[BANK2 ] unsigned char 
  4127 ;;  i               1    1[BANK2 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 1F/1
  4134 ;;		On exit  : 1D/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;Total ram usage:        2 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:   16
  4144 ;; This function calls:
  4145 ;;		_DemoOutput_Channel
  4146 ;;		_DemoOutput_ChannelError
  4147 ;;		_MiApp_ConnectionMode
  4148 ;;		_MiApp_EstablishConnection
  4149 ;;		_MiApp_ProtocolInit
  4150 ;;		_MiApp_SetChannel
  4151 ;;		_MiApp_StartConnection
  4152 ;;		_NVMWrite
  4153 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _Initialize_Demo
  4161  0888                     _Initialize_Demo:	
  4162                           
  4163                           ;incstack = 0
  4164 ;; hardware stack exceeded
  4165                           ; Regs used in _Initialize_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4166                           ;Initialize_Demo@freezer_enable stored from wreg
  4167  0888  0022               	movlb	2	; select bank2
  4168  0889  00ED               	movwf	Initialize_Demo@freezer_enable^(0+256)
  4169                           
  4170                           ;task.c: 91: uint8_t i;
  4171                           ;task.c: 93: if (freezer_enable)
  4172  088A  086D               	movf	Initialize_Demo@freezer_enable^(0+256),w
  4173  088B  1903               	btfsc	3,2
  4174  088C  2895               	goto	l1187
  4175                           
  4176                           ;task.c: 94: {
  4177                           ;task.c: 105: MiApp_ProtocolInit(1);
  4178  088D  3001               	movlw	1
  4179  088E  3190  2001  3188   	fcall	_MiApp_ProtocolInit
  4180                           
  4181                           ;task.c: 109: STAR_DEMO_OPTIONS_MESSAGE (role);
  4182  0891  0020               	movlb	0	; select bank0
  4183  0892  0865               	movf	_role,w
  4184  0893  3183  2B97         	ljmp	l990
  4185  0895                     l1187:	
  4186                           ;task.c: 112: }
  4187                           
  4188                           
  4189                           ;task.c: 113: else
  4190                           ;task.c: 114: {
  4191                           ;task.c: 115: LATDbits.LATD7 = 0;
  4192  0895  138F               	bcf	15,7	;volatile
  4193                           
  4194                           ;task.c: 116: LATDbits.LATD6 = 0;
  4195  0896  130F               	bcf	15,6	;volatile
  4196                           
  4197                           ;task.c: 128: MiApp_ProtocolInit(0);
  4198  0897  3000               	movlw	0
  4199  0898  3190  2001  3188   	fcall	_MiApp_ProtocolInit
  4200                           
  4201                           ;task.c: 131: if( MiApp_SetChannel(myChannel) == 0 )
  4202  089B  3019               	movlw	25
  4203  089C  277A  3188         	fcall	_MiApp_SetChannel
  4204  089E  3A00               	xorlw	0
  4205  089F  1D03               	skipz
  4206  08A0  28A4               	goto	l11350
  4207                           
  4208                           ;task.c: 132: {
  4209                           ;task.c: 133: DemoOutput_ChannelError(myChannel);
  4210  08A1  3019               	movlw	25
  4211  08A2  269B  3188         	fcall	_DemoOutput_ChannelError
  4212  08A4                     l11350:	
  4213                           
  4214                           ;task.c: 134: }
  4215                           ;task.c: 145: MiApp_ConnectionMode(0x00);
  4216  08A4  3000               	movlw	0
  4217  08A5  269C  3188         	fcall	_MiApp_ConnectionMode
  4218  08A7  3019               	movlw	25
  4219                           
  4220                           ;task.c: 146: DemoOutput_Channel(myChannel, 0);
  4221  08A8  01DC               	clrf	DemoOutput_Channel@Step
  4222  08A9  20E1  3188         	fcall	_DemoOutput_Channel
  4223                           
  4224                           ;task.c: 160: i = MiApp_EstablishConnection(0xFF, 0x00);
  4225  08AB  0021               	movlb	1	; select bank1
  4226  08AC  30FF               	movlw	255
  4227  08AD  01D9               	clrf	MiApp_EstablishConnection@Mode^(0+128)
  4228  08AE  26BE  3188         	fcall	_MiApp_EstablishConnection
  4229  08B0  0022               	movlb	2	; select bank2
  4230  08B1  00EE               	movwf	Initialize_Demo@i^(0+256)
  4231                           
  4232                           ;task.c: 165: if( i != 0xFF )
  4233  08B2  0A6E               	incf	Initialize_Demo@i^(0+256),w
  4234  08B3  1903               	btfsc	3,2
  4235  08B4  28BD               	goto	l11362
  4236                           
  4237                           ;task.c: 166: {
  4238                           ;task.c: 167: DemoOutput_Channel(myChannel, 1);
  4239  08B5  0020               	movlb	0	; select bank0
  4240  08B6  3019               	movlw	25
  4241  08B7  01DC               	clrf	DemoOutput_Channel@Step
  4242  08B8  0ADC               	incf	DemoOutput_Channel@Step,f
  4243  08B9  20E1  3188         	fcall	_DemoOutput_Channel
  4244                           
  4245                           ;task.c: 169: role = 0;
  4246  08BB  01E5               	clrf	_role
  4247                           
  4248                           ;task.c: 171: }
  4249  08BC  28C9               	goto	l11366
  4250  08BD                     l11362:	
  4251                           
  4252                           ;task.c: 172: else
  4253                           ;task.c: 173: {
  4254                           ;task.c: 204: MiApp_StartConnection(0x00, 10, 0);
  4255  08BD  300A               	movlw	10
  4256  08BE  0020               	movlb	0	; select bank0
  4257  08BF  00B3               	movwf	MiApp_StartConnection@ScanDuration
  4258  08C0  3000               	movlw	0
  4259  08C1  01B4               	clrf	MiApp_StartConnection@ChannelMap
  4260  08C2  01B5               	clrf	MiApp_StartConnection@ChannelMap+1
  4261  08C3  01B6               	clrf	MiApp_StartConnection@ChannelMap+2
  4262  08C4  01B7               	clrf	MiApp_StartConnection@ChannelMap+3
  4263  08C5  2797               	fcall	_MiApp_StartConnection
  4264                           
  4265                           ;task.c: 206: role = 1;
  4266  08C6  0020               	movlb	0	; select bank0
  4267  08C7  01E5               	clrf	_role
  4268  08C8  0AE5               	incf	_role,f
  4269  08C9                     l11366:	
  4270                           
  4271                           ;task.c: 208: }
  4272                           ;task.c: 210: NVMWrite((uint8_t *)&role, nvmRole, 1);
  4273  08C9  3065               	movlw	low _role
  4274  08CA  00B4               	movwf	NVMWrite@source
  4275  08CB  3000               	movlw	high _role
  4276  08CC  00B5               	movwf	NVMWrite@source+1
  4277  08CD  0022               	movlb	2	; select bank2
  4278  08CE  086A               	movf	(_nvmRole+1)^(0+256),w
  4279  08CF  0020               	movlb	0	; select bank0
  4280  08D0  00B7               	movwf	NVMWrite@addr+1
  4281  08D1  0022               	movlb	2	; select bank2
  4282  08D2  0869               	movf	_nvmRole^(0+256),w
  4283  08D3  0020               	movlb	0	; select bank0
  4284  08D4  00B6               	movwf	NVMWrite@addr
  4285  08D5  01B8               	clrf	NVMWrite@count
  4286  08D6  0AB8               	incf	NVMWrite@count,f
  4287  08D7  01B9               	clrf	NVMWrite@count+1
  4288  08D8  3197  270A  3188   	fcall	_NVMWrite
  4289                           
  4290                           ;task.c: 227: LATDbits.LATD7 = 1;
  4291  08DB  0022               	movlb	2	; select bank2
  4292  08DC  178F               	bsf	15,7	;volatile
  4293                           
  4294                           ;task.c: 231: STAR_DEMO_OPTIONS_MESSAGE (role);
  4295  08DD  0020               	movlb	0	; select bank0
  4296  08DE  0865               	movf	_role,w
  4297  08DF  3183  2B97         	ljmp	l990
  4298  08E1                     __end_of_Initialize_Demo:	
  4299  08E1                     __ptext66:	
  4300 ;; *************** function _DemoOutput_Channel *****************
  4301 ;; Defined at:
  4302 ;;		line 200 in file "../src/demo_ouput.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  channel         1    wreg     unsigned char 
  4305 ;;  Step            1   60[BANK0 ] unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  channel         1   61[BANK0 ] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 1F/0
  4314 ;;		On exit  : 1F/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    9
  4324 ;; This function calls:
  4325 ;;		_LCDDisplay
  4326 ;; This function is called by:
  4327 ;;		_Initialize_Demo
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _DemoOutput_Channel
  4333  08E1                     _DemoOutput_Channel:	
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _DemoOutput_Channel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4337                           ;DemoOutput_Channel@channel stored from wreg
  4338  08E1  00DD               	movwf	DemoOutput_Channel@channel
  4339                           
  4340                           ;demo_ouput.c: 202: if( Step == 0 )
  4341  08E2  085C               	movf	DemoOutput_Channel@Step,w
  4342  08E3  1D03               	btfss	3,2
  4343  08E4  28EE               	goto	l11082
  4344                           
  4345                           ;demo_ouput.c: 203: {
  4346                           ;demo_ouput.c: 204: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
  4347  08E5  309C               	movlw	low (STR_4| (0+32768))
  4348  08E6  00D7               	movwf	LCDDisplay@text
  4349  08E7  30A8               	movlw	high (STR_4| (0+32768))
  4350  08E8  00D8               	movwf	LCDDisplay@text+1
  4351  08E9  085D               	movf	DemoOutput_Channel@channel,w
  4352  08EA  00D9               	movwf	LCDDisplay@value
  4353  08EB  01DA               	clrf	LCDDisplay@delay
  4354  08EC  0ADA               	incf	LCDDisplay@delay,f
  4355  08ED  28F7               	ljmp	l9494
  4356  08EE                     l11082:	
  4357                           ;demo_ouput.c: 206: ;
  4358                           ;demo_ouput.c: 207: ;
  4359                           ;demo_ouput.c: 208: ;
  4360                           ;demo_ouput.c: 210: }
  4361                           
  4362                           
  4363                           ;demo_ouput.c: 211: else
  4364                           ;demo_ouput.c: 212: {
  4365                           ;demo_ouput.c: 213: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
  4366  08EE  30BC               	movlw	low (STR_5| (0+32768))
  4367  08EF  00D7               	movwf	LCDDisplay@text
  4368  08F0  30A8               	movlw	high (STR_5| (0+32768))
  4369  08F1  00D8               	movwf	LCDDisplay@text+1
  4370  08F2  085D               	movf	DemoOutput_Channel@channel,w
  4371  08F3  00D9               	movwf	LCDDisplay@value
  4372  08F4  01DA               	clrf	LCDDisplay@delay
  4373  08F5  0ADA               	incf	LCDDisplay@delay,f
  4374  08F6  28F7               	ljmp	l9494
  4375  08F7                     __end_of_DemoOutput_Channel:	
  4376  08F7                     __ptext68:	
  4377 ;; *************** function _LCDDisplay *****************
  4378 ;; Defined at:
  4379 ;;		line 376 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  text            2   55[BANK0 ] PTR unsigned char 
  4382 ;;		 -> STR_15(21), STR_13(20), STR_6(16), STR_5(31), 
  4383 ;;		 -> STR_4(32), STR_3(30), 
  4384 ;;  value           1   57[BANK0 ] unsigned char 
  4385 ;;  delay           1   58[BANK0 ] unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  i               1   59[BANK0 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 1F/0
  4394 ;;		On exit  : 1F/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:        5 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    8
  4404 ;; This function calls:
  4405 ;;		_DELAY_ms
  4406 ;;		_LCD_Erase
  4407 ;;		_LCD_Update
  4408 ;;		_sprintf
  4409 ;; This function is called by:
  4410 ;;		_DemoOutput_Greeting
  4411 ;;		_DemoOutput_Channel
  4412 ;;		_DemoOutput_UnicastFail
  4413 ;;		_run_star_demo
  4414 ;;		_freezer_feature
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _LCDDisplay
  4420  08F7                     _LCDDisplay:	
  4421  08F7                     l9494:	
  4422                           ;incstack = 0
  4423                           ; Regs used in _LCDDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4424                           
  4425                           
  4426                           ;lcd.c: 379: LCD_Erase();
  4427  08F7  2211  3188         	fcall	_LCD_Erase
  4428                           
  4429                           ;lcd.c: 380: DELAY_ms(5);
  4430  08F9  3005               	movlw	5
  4431  08FA  00B5               	movwf	DELAY_ms@ms
  4432  08FB  01B6               	clrf	DELAY_ms@ms+1
  4433  08FC  2157  3188         	fcall	_DELAY_ms
  4434                           
  4435                           ;lcd.c: 381: sprintf((char *)LCDText, (char*)text, value);
  4436  08FE  0858               	movf	LCDDisplay@text+1,w
  4437  08FF  00B6               	movwf	sprintf@f+1
  4438  0900  0857               	movf	LCDDisplay@text,w
  4439  0901  00B5               	movwf	sprintf@f
  4440  0902  0859               	movf	LCDDisplay@value,w
  4441  0903  00B7               	movwf	?_sprintf+2
  4442  0904  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
  4443  0905  01B8               	clrf	?_sprintf+3
  4444  0906  228E  3188         	fcall	_sprintf
  4445                           
  4446                           ;lcd.c: 382: LCD_Update();
  4447  0908  2220  3188         	fcall	_LCD_Update
  4448                           
  4449                           ;lcd.c: 385: if( delay )
  4450  090A  085A               	movf	LCDDisplay@delay,w
  4451  090B  1903               	btfsc	3,2
  4452  090C  0008               	return
  4453                           
  4454                           ;lcd.c: 386: {
  4455                           ;lcd.c: 387: uint8_t i;
  4456                           ;lcd.c: 388: for(i = 0; i < 8; i++)
  4457  090D  01DB               	clrf	LCDDisplay@i
  4458  090E                     l9510:	
  4459                           
  4460                           ;lcd.c: 389: {
  4461                           ;lcd.c: 390: DELAY_ms(250);
  4462  090E  30FA               	movlw	250
  4463  090F  00B5               	movwf	DELAY_ms@ms
  4464  0910  01B6               	clrf	DELAY_ms@ms+1
  4465  0911  2157  3188         	fcall	_DELAY_ms
  4466  0913  3008               	movlw	8
  4467  0914  0ADB               	incf	LCDDisplay@i,f
  4468  0915  025B               	subwf	LCDDisplay@i,w
  4469  0916  1803               	btfsc	3,0
  4470  0917  0008               	return
  4471  0918  290E               	goto	l9510
  4472  0919                     __end_of_LCDDisplay:	
  4473  0919                     __ptext3:	
  4474 ;; *************** function _LCD_Initialize *****************
  4475 ;; Defined at:
  4476 ;;		line 210 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : B1F/7
  4487 ;;		On exit  : 1F/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    7
  4497 ;; This function calls:
  4498 ;;		_DELAY_ms
  4499 ;;		_LCDInitPortA
  4500 ;;		_LCDInitPortB
  4501 ;;		_LCDInitSPI
  4502 ;;		_LCDInitWrite
  4503 ;;		_LCDWritePortA
  4504 ;; This function is called by:
  4505 ;;		_SYSTEM_Initialize
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function _LCD_Initialize
  4511  0919                     _LCD_Initialize:	
  4512  0919                     l11044:	
  4513                           ;incstack = 0
  4514                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4515                           
  4516                           
  4517                           ;lcd.c: 213: (TRISAbits.TRISA2) = 0;
  4518  0919  0021               	movlb	1	; select bank1
  4519  091A  110C               	bcf	12,2	;volatile
  4520                           
  4521                           ;lcd.c: 214: (LATAbits.LATA2) = 1;
  4522  091B  0022               	movlb	2	; select bank2
  4523  091C  150C               	bsf	12,2	;volatile
  4524                           
  4525                           ;lcd.c: 215: DELAY_ms(10);
  4526  091D  300A               	movlw	10
  4527  091E  0020               	movlb	0	; select bank0
  4528  091F  00B5               	movwf	DELAY_ms@ms
  4529  0920  01B6               	clrf	DELAY_ms@ms+1
  4530  0921  2157  3188         	fcall	_DELAY_ms
  4531                           
  4532                           ;lcd.c: 217: (TRISFbits.TRISF6) = 0;
  4533  0923  0026               	movlb	6	; select bank6
  4534  0924  130C               	bcf	12,6	;volatile
  4535                           
  4536                           ;lcd.c: 218: (LATFbits.LATF6) = 0;
  4537  0925  0027               	movlb	7	; select bank7
  4538  0926  130C               	bcf	12,6	;volatile
  4539                           
  4540                           ;lcd.c: 219: DELAY_ms(10);
  4541  0927  300A               	movlw	10
  4542  0928  0020               	movlb	0	; select bank0
  4543  0929  00B5               	movwf	DELAY_ms@ms
  4544  092A  01B6               	clrf	DELAY_ms@ms+1
  4545  092B  2157  3188         	fcall	_DELAY_ms
  4546                           
  4547                           ;lcd.c: 220: (LATFbits.LATF6) = 1;
  4548  092D  0027               	movlb	7	; select bank7
  4549  092E  170C               	bsf	12,6	;volatile
  4550                           
  4551                           ;lcd.c: 223: LCDInitSPI();
  4552  092F  27FA  3188         	fcall	_LCDInitSPI
  4553                           
  4554                           ;lcd.c: 226: LCDInitPortA();
  4555  0931  27DF               	fcall	_LCDInitPortA
  4556                           
  4557                           ;lcd.c: 229: LCDInitPortB();
  4558  0932  31A0  20CD  3188   	fcall	_LCDInitPortB
  4559                           
  4560                           ;lcd.c: 231: LCDWritePortA(0);
  4561  0935  3000               	movlw	0
  4562  0936  21B3  3188         	fcall	_LCDWritePortA
  4563                           
  4564                           ;lcd.c: 234: DELAY_ms(10);
  4565  0938  300A               	movlw	10
  4566  0939  00B5               	movwf	DELAY_ms@ms
  4567  093A  01B6               	clrf	DELAY_ms@ms+1
  4568  093B  2157  3188         	fcall	_DELAY_ms
  4569                           
  4570                           ;lcd.c: 235: LCDInitWrite(0x3C);
  4571  093D  303C               	movlw	60
  4572  093E  219A  3188         	fcall	_LCDInitWrite
  4573                           
  4574                           ;lcd.c: 237: DELAY_ms(10);
  4575  0940  300A               	movlw	10
  4576  0941  00B5               	movwf	DELAY_ms@ms
  4577  0942  01B6               	clrf	DELAY_ms@ms+1
  4578  0943  2157  3188         	fcall	_DELAY_ms
  4579                           
  4580                           ;lcd.c: 238: LCDInitWrite(0x0C);
  4581  0945  300C               	movlw	12
  4582  0946  219A  3188         	fcall	_LCDInitWrite
  4583                           
  4584                           ;lcd.c: 240: DELAY_ms(10);
  4585  0948  300A               	movlw	10
  4586  0949  00B5               	movwf	DELAY_ms@ms
  4587  094A  01B6               	clrf	DELAY_ms@ms+1
  4588  094B  2157  3188         	fcall	_DELAY_ms
  4589                           
  4590                           ;lcd.c: 241: LCDInitWrite(0x01);
  4591  094D  3001               	movlw	1
  4592  094E  219A  3188         	fcall	_LCDInitWrite
  4593                           
  4594                           ;lcd.c: 243: DELAY_ms(10);
  4595  0950  300A               	movlw	10
  4596  0951  00B5               	movwf	DELAY_ms@ms
  4597  0952  01B6               	clrf	DELAY_ms@ms+1
  4598  0953  2157  3188         	fcall	_DELAY_ms
  4599                           
  4600                           ;lcd.c: 244: LCDInitWrite(0x0C);
  4601  0955  300C               	movlw	12
  4602  0956  299A               	ljmp	_LCDInitWrite
  4603  0957                     __end_of_LCD_Initialize:	
  4604  0957                     __ptext84:	
  4605 ;; *************** function _DELAY_ms *****************
  4606 ;; Defined at:
  4607 ;;		line 109 in file "../src/system_config/pic18exp_pic16f1947_24j40/delay.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  ms              2   21[BANK0 ] unsigned int 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  cyclesRequir    4   23[BANK0 ] long 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 1F/0
  4618 ;;		On exit  : 1F/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;Total ram usage:        6 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    5
  4628 ;; This function calls:
  4629 ;;		___lmul
  4630 ;; This function is called by:
  4631 ;;		_LCD_i_write
  4632 ;;		_LCD_d_write
  4633 ;;		_LCD_Initialize
  4634 ;;		_LCD_Erase
  4635 ;;		_LCDTRXCount
  4636 ;;		_LCDDisplay
  4637 ;;		_Source_END_DEVICE_INFO
  4638 ;;		_Process_RxMessage
  4639 ;;		_run_star_demo
  4640 ;;		_freezer_feature
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function _DELAY_ms
  4646  0957                     _DELAY_ms:	
  4647  0957                     l8576:	
  4648                           ;incstack = 0
  4649                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  4650                           
  4651                           
  4652                           ;delay.c: 113: int32_t cyclesRequiredForEntireDelay;
  4653                           ;delay.c: 116: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
  4654  0957  0835               	movf	DELAY_ms@ms,w
  4655  0958  00A9               	movwf	___lmul@multiplier
  4656  0959  0836               	movf	DELAY_ms@ms+1,w
  4657  095A  00AA               	movwf	___lmul@multiplier+1
  4658  095B  3009               	movlw	9
  4659  095C  01AB               	clrf	___lmul@multiplier+2
  4660  095D  01AC               	clrf	___lmul@multiplier+3
  4661  095E  01B0               	clrf	___lmul@multiplicand+3
  4662  095F  01AF               	clrf	___lmul@multiplicand+2
  4663  0960  00AE               	movwf	___lmul@multiplicand+1
  4664  0961  30C4               	movlw	196
  4665  0962  00AD               	movwf	___lmul@multiplicand
  4666  0963  21D0  3188         	fcall	___lmul
  4667  0965  082C               	movf	?___lmul+3,w
  4668  0966  00BA               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+3
  4669  0967  082B               	movf	?___lmul+2,w
  4670  0968  00B9               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+2
  4671  0969  082A               	movf	?___lmul+1,w
  4672  096A  00B8               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+1
  4673  096B  0829               	movf	?___lmul,w
  4674  096C  00B7               	movwf	DELAY_ms@cyclesRequiredForEntireDelay
  4675                           
  4676                           ;delay.c: 120: cyclesRequiredForEntireDelay -= (148 + 22);
  4677  096D  3056               	movlw	86
  4678  096E  07B7               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f
  4679  096F  30FF               	movlw	255
  4680  0970  3DB8               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f
  4681  0971  3DB9               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f
  4682  0972  3DBA               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f
  4683                           
  4684                           ;delay.c: 122: if (cyclesRequiredForEntireDelay <= (170+25))
  4685  0973  1BBA               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7
  4686  0974  0008               	return
  4687  0975  083A               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w
  4688  0976  1D03               	btfss	3,2
  4689  0977  2982               	goto	l726
  4690  0978  0839               	movf	DELAY_ms@cyclesRequiredForEntireDelay+2,w
  4691  0979  1D03               	btfss	3,2
  4692  097A  2982               	goto	l726
  4693  097B  0838               	movf	DELAY_ms@cyclesRequiredForEntireDelay+1,w
  4694  097C  1D03               	btfss	3,2
  4695  097D  2982               	goto	l726
  4696  097E  30C4               	movlw	196
  4697  097F  0237               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w
  4698  0980  1C03               	btfss	3,0
  4699  0981  0008               	return
  4700  0982                     l726:	
  4701  0982  1BBA               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7
  4702  0983  0008               	return
  4703  0984  083A               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w
  4704  0985  1D03               	btfss	3,2
  4705  0986  2991               	goto	l727
  4706  0987  0839               	movf	DELAY_ms@cyclesRequiredForEntireDelay+2,w
  4707  0988  1D03               	btfss	3,2
  4708  0989  2991               	goto	l727
  4709  098A  0838               	movf	DELAY_ms@cyclesRequiredForEntireDelay+1,w
  4710  098B  1D03               	btfss	3,2
  4711  098C  2991               	goto	l727
  4712  098D  3001               	movlw	1
  4713  098E  0237               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w
  4714  098F  1C03               	btfss	3,0
  4715  0990  0008               	return
  4716  0991                     l727:	
  4717                           
  4718                           ;delay.c: 129: {
  4719                           ;delay.c: 131: __nop();
  4720  0991  0000               	nop
  4721                           
  4722                           ;delay.c: 132: cyclesRequiredForEntireDelay -= 39;
  4723  0992  30D9               	movlw	217
  4724  0993  0020               	movlb	0	; select bank0
  4725  0994  07B7               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f
  4726  0995  30FF               	movlw	255
  4727  0996  3DB8               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f
  4728  0997  3DB9               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f
  4729  0998  3DBA               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f
  4730  0999  2982               	goto	l726
  4731  099A                     __end_of_DELAY_ms:	
  4732  099A                     __ptext80:	
  4733 ;; *************** function _LCDInitWrite *****************
  4734 ;; Defined at:
  4735 ;;		line 96 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  v               1    wreg     unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  v               1   12[BANK0 ] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 19/0
  4746 ;;		On exit  : 1F/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    6
  4756 ;; This function calls:
  4757 ;;		_LCDWritePortA
  4758 ;;		_LCDWritePortB
  4759 ;; This function is called by:
  4760 ;;		_LCD_Initialize
  4761 ;;		_LCD_Erase
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _LCDInitWrite
  4767  099A                     _LCDInitWrite:	
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _LCDInitWrite: [wreg+status,2+status,0+pclath+cstack]
  4771                           ;LCDInitWrite@v stored from wreg
  4772  099A  0020               	movlb	0	; select bank0
  4773  099B  00AC               	movwf	LCDInitWrite@v
  4774                           
  4775                           ;lcd.c: 98: LCDWritePortA(0);
  4776  099C  3000               	movlw	0
  4777  099D  21B3  3188         	fcall	_LCDWritePortA
  4778                           
  4779                           ;lcd.c: 99: LCDWritePortB(v);
  4780  099F  082C               	movf	LCDInitWrite@v,w
  4781  09A0  21F5  3188         	fcall	_LCDWritePortB
  4782                           
  4783                           ;lcd.c: 103: __nop();
  4784  09A2  0000               	nop
  4785                           
  4786                           ;lcd.c: 104: __nop();
  4787  09A3  0000               	nop
  4788                           
  4789                           ;lcd.c: 105: __nop();
  4790  09A4  0000               	nop
  4791                           
  4792                           ;lcd.c: 107: LCDWritePortA(0x40);
  4793  09A5  3040               	movlw	64
  4794  09A6  21B3  3188         	fcall	_LCDWritePortA
  4795                           
  4796                           ;lcd.c: 117: __nop();
  4797  09A8  0000               	nop
  4798                           
  4799                           ;lcd.c: 118: __nop();
  4800  09A9  0000               	nop
  4801                           
  4802                           ;lcd.c: 119: __nop();
  4803  09AA  0000               	nop
  4804                           
  4805                           ;lcd.c: 120: __nop();
  4806  09AB  0000               	nop
  4807                           
  4808                           ;lcd.c: 121: __nop();
  4809  09AC  0000               	nop
  4810                           
  4811                           ;lcd.c: 122: __nop();
  4812  09AD  0000               	nop
  4813                           
  4814                           ;lcd.c: 123: __nop();
  4815  09AE  0000               	nop
  4816                           
  4817                           ;lcd.c: 124: __nop();
  4818  09AF  0000               	nop
  4819                           
  4820                           ;lcd.c: 125: __nop();
  4821  09B0  0000               	nop
  4822                           
  4823                           ;lcd.c: 127: LCDWritePortA(0);
  4824  09B1  3000               	movlw	0
  4825  09B2  29B3               	ljmp	_LCDWritePortA
  4826  09B3                     __end_of_LCDInitWrite:	
  4827  09B3                     __ptext82:	
  4828 ;; *************** function _LCDWritePortA *****************
  4829 ;; Defined at:
  4830 ;;		line 72 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  v               1    wreg     unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  v               1   10[BANK0 ] unsigned char 
  4835 ;;  preRFIE         1   11[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 1F/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;Total ram usage:        2 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    5
  4852 ;; This function calls:
  4853 ;;		_SPIPut
  4854 ;; This function is called by:
  4855 ;;		_LCDInitWrite
  4856 ;;		_LCD_i_write
  4857 ;;		_LCD_d_write
  4858 ;;		_LCD_Initialize
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _LCDWritePortA
  4864  09B3                     _LCDWritePortA:	
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _LCDWritePortA: [wreg+status,2+status,0+pclath+cstack]
  4868                           ;LCDWritePortA@v stored from wreg
  4869  09B3  0020               	movlb	0	; select bank0
  4870  09B4  00AA               	movwf	LCDWritePortA@v
  4871                           
  4872                           ;lcd.c: 74: uint8_t preRFIE = INTCONbits.IOCIE;
  4873  09B5  3000               	movlw	0
  4874  09B6  198B               	btfsc	11,3	;volatile
  4875  09B7  3001               	movlw	1
  4876  09B8  00AB               	movwf	LCDWritePortA@preRFIE
  4877                           
  4878                           ;lcd.c: 75: INTCONbits.IOCIE = 0;
  4879  09B9  118B               	bcf	11,3	;volatile
  4880                           
  4881                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
  4882  09BA  0022               	movlb	2	; select bank2
  4883  09BB  110C               	bcf	12,2	;volatile
  4884                           
  4885                           ;lcd.c: 77: SPIPut(0x40);
  4886  09BC  3040               	movlw	64
  4887  09BD  3197  27ED  3188   	fcall	_SPIPut
  4888                           
  4889                           ;lcd.c: 78: SPIPut(0x12);
  4890  09C0  3012               	movlw	18
  4891  09C1  3197  27ED  3188   	fcall	_SPIPut
  4892                           
  4893                           ;lcd.c: 79: SPIPut(v);
  4894  09C4  082A               	movf	LCDWritePortA@v,w
  4895  09C5  3197  27ED         	fcall	_SPIPut
  4896                           
  4897                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
  4898  09C7  0022               	movlb	2	; select bank2
  4899  09C8  150C               	bsf	12,2	;volatile
  4900                           
  4901                           ;lcd.c: 81: INTCONbits.IOCIE = preRFIE;
  4902  09C9  0020               	movlb	0	; select bank0
  4903  09CA  0C2B               	rrf	LCDWritePortA@preRFIE,w
  4904  09CB  1C03               	skipc
  4905  09CC  118B               	bcf	11,3	;volatile
  4906  09CD  1803               	skipnc
  4907  09CE  158B               	bsf	11,3	;volatile
  4908  09CF  0008               	return
  4909  09D0                     __end_of_LCDWritePortA:	
  4910  09D0                     __ptext85:	
  4911 ;; *************** function ___lmul *****************
  4912 ;; Defined at:
  4913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  multiplier      4    9[BANK0 ] unsigned long 
  4916 ;;  multiplicand    4   13[BANK0 ] unsigned long 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  product         4   17[BANK0 ] unsigned long 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  4    9[BANK0 ] unsigned long 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 1F/0
  4925 ;;		On exit  : 1F/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4928 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;Total ram usage:       12 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    4
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_DELAY_ms
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function ___lmul
  4944  09D0                     ___lmul:	
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4948  09D0  01B1               	clrf	___lmul@product
  4949  09D1  01B2               	clrf	___lmul@product+1
  4950  09D2  01B3               	clrf	___lmul@product+2
  4951  09D3  01B4               	clrf	___lmul@product+3
  4952  09D4                     l1435:	
  4953  09D4  1C29               	btfss	___lmul@multiplier,0
  4954  09D5  29DE               	goto	l8470
  4955  09D6  082D               	movf	___lmul@multiplicand,w
  4956  09D7  07B1               	addwf	___lmul@product,f
  4957  09D8  082E               	movf	___lmul@multiplicand+1,w
  4958  09D9  3DB2               	addwfc	___lmul@product+1,f
  4959  09DA  082F               	movf	___lmul@multiplicand+2,w
  4960  09DB  3DB3               	addwfc	___lmul@product+2,f
  4961  09DC  0830               	movf	___lmul@multiplicand+3,w
  4962  09DD  3DB4               	addwfc	___lmul@product+3,f
  4963  09DE                     l8470:	
  4964  09DE  35AD               	lslf	___lmul@multiplicand,f
  4965  09DF  0DAE               	rlf	___lmul@multiplicand+1,f
  4966  09E0  0DAF               	rlf	___lmul@multiplicand+2,f
  4967  09E1  0DB0               	rlf	___lmul@multiplicand+3,f
  4968  09E2  36AC               	lsrf	___lmul@multiplier+3,f
  4969  09E3  0CAB               	rrf	___lmul@multiplier+2,f
  4970  09E4  0CAA               	rrf	___lmul@multiplier+1,f
  4971  09E5  0CA9               	rrf	___lmul@multiplier,f
  4972  09E6  082C               	movf	___lmul@multiplier+3,w
  4973  09E7  042B               	iorwf	___lmul@multiplier+2,w
  4974  09E8  042A               	iorwf	___lmul@multiplier+1,w
  4975  09E9  0429               	iorwf	___lmul@multiplier,w
  4976  09EA  1D03               	skipz
  4977  09EB  29D4               	goto	l1435
  4978  09EC  0834               	movf	___lmul@product+3,w
  4979  09ED  00AC               	movwf	?___lmul+3
  4980  09EE  0833               	movf	___lmul@product+2,w
  4981  09EF  00AB               	movwf	?___lmul+2
  4982  09F0  0832               	movf	___lmul@product+1,w
  4983  09F1  00AA               	movwf	?___lmul+1
  4984  09F2  0831               	movf	___lmul@product,w
  4985  09F3  00A9               	movwf	?___lmul
  4986  09F4  0008               	return
  4987  09F5                     __end_of___lmul:	
  4988  09F5                     __ptext81:	
  4989 ;; *************** function _LCDWritePortB *****************
  4990 ;; Defined at:
  4991 ;;		line 84 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  v               1    wreg     unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  v               1   10[BANK0 ] unsigned char 
  4996 ;;  preRFIE         1   11[BANK0 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, pclath, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 1F/0
  5003 ;;		On exit  : 1F/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;Total ram usage:        2 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    5
  5013 ;; This function calls:
  5014 ;;		_SPIPut
  5015 ;; This function is called by:
  5016 ;;		_LCDInitWrite
  5017 ;;		_LCD_i_write
  5018 ;;		_LCD_d_write
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function _LCDWritePortB
  5024  09F5                     _LCDWritePortB:	
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _LCDWritePortB: [wreg+status,2+status,0+pclath+cstack]
  5028                           ;LCDWritePortB@v stored from wreg
  5029  09F5  00AA               	movwf	LCDWritePortB@v
  5030                           
  5031                           ;lcd.c: 86: uint8_t preRFIE = INTCONbits.IOCIE;
  5032  09F6  3000               	movlw	0
  5033  09F7  198B               	btfsc	11,3	;volatile
  5034  09F8  3001               	movlw	1
  5035  09F9  00AB               	movwf	LCDWritePortB@preRFIE
  5036                           
  5037                           ;lcd.c: 87: INTCONbits.IOCIE = 0;
  5038  09FA  118B               	bcf	11,3	;volatile
  5039                           
  5040                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
  5041  09FB  0022               	movlb	2	; select bank2
  5042  09FC  110C               	bcf	12,2	;volatile
  5043                           
  5044                           ;lcd.c: 89: SPIPut(0x40);
  5045  09FD  3040               	movlw	64
  5046  09FE  3197  27ED  3188   	fcall	_SPIPut
  5047                           
  5048                           ;lcd.c: 90: SPIPut(0x13);
  5049  0A01  3013               	movlw	19
  5050  0A02  3197  27ED  3188   	fcall	_SPIPut
  5051                           
  5052                           ;lcd.c: 91: SPIPut(v);
  5053  0A05  082A               	movf	LCDWritePortB@v,w
  5054  0A06  3197  27ED         	fcall	_SPIPut
  5055                           
  5056                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
  5057  0A08  0022               	movlb	2	; select bank2
  5058  0A09  150C               	bsf	12,2	;volatile
  5059                           
  5060                           ;lcd.c: 93: INTCONbits.IOCIE = preRFIE;
  5061  0A0A  0020               	movlb	0	; select bank0
  5062  0A0B  0C2B               	rrf	LCDWritePortB@preRFIE,w
  5063  0A0C  1C03               	skipc
  5064  0A0D  118B               	bcf	11,3	;volatile
  5065  0A0E  1803               	skipnc
  5066  0A0F  158B               	bsf	11,3	;volatile
  5067  0A10  0008               	return
  5068  0A11                     __end_of_LCDWritePortB:	
  5069  0A11                     __ptext78:	
  5070 ;; *************** function _LCD_Erase *****************
  5071 ;; Defined at:
  5072 ;;		line 313 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 19/4
  5083 ;;		On exit  : 1F/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;Total ram usage:        0 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    7
  5093 ;; This function calls:
  5094 ;;		_DELAY_ms
  5095 ;;		_LCDInitWrite
  5096 ;;		_memset
  5097 ;; This function is called by:
  5098 ;;		_LCDTRXCount
  5099 ;;		_LCDDisplay
  5100 ;;		_Source_END_DEVICE_INFO
  5101 ;;		_run_star_demo
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _LCD_Erase
  5107  0A11                     _LCD_Erase:	
  5108                           
  5109                           ;lcd.c: 316: LCDInitWrite(0x01);
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _LCD_Erase: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5113  0A11  3001               	movlw	1
  5114  0A12  219A  3188         	fcall	_LCDInitWrite
  5115                           
  5116                           ;lcd.c: 317: DELAY_ms(2);
  5117  0A14  3002               	movlw	2
  5118  0A15  00B5               	movwf	DELAY_ms@ms
  5119  0A16  01B6               	clrf	DELAY_ms@ms+1
  5120  0A17  2157               	fcall	_DELAY_ms
  5121                           
  5122                           ;lcd.c: 320: memset(LCDText, ' ', 32);
  5123  0A18  3020               	movlw	32
  5124  0A19  00A9               	movwf	memset@c
  5125  0A1A  01AA               	clrf	memset@c+1
  5126  0A1B  00AB               	movwf	memset@n
  5127  0A1C  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
  5128  0A1D  01AC               	clrf	memset@n+1
  5129  0A1E  31A0  28BA         	ljmp	_memset
  5130  0A20                     __end_of_LCD_Erase:	
  5131  0A20                     __ptext75:	
  5132 ;; *************** function _LCD_Update *****************
  5133 ;; Defined at:
  5134 ;;		line 267 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  i               1   28[BANK0 ] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 1F/0
  5145 ;;		On exit  : 1F/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    7
  5155 ;; This function calls:
  5156 ;;		_LCD_d_write
  5157 ;;		_LCD_i_write
  5158 ;; This function is called by:
  5159 ;;		_LCDTRXCount
  5160 ;;		_LCDDisplay
  5161 ;;		_Source_END_DEVICE_INFO
  5162 ;;		_run_star_demo
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function _LCD_Update
  5168  0A20                     _LCD_Update:	
  5169  0A20                     l9074:	
  5170                           ;incstack = 0
  5171                           ; Regs used in _LCD_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5172                           
  5173                           
  5174                           ;lcd.c: 269: uint8_t i;
  5175                           ;lcd.c: 271: LCD_i_write(0x80);
  5176  0A20  3080               	movlw	128
  5177  0A21  2273  3188         	fcall	_LCD_i_write
  5178                           
  5179                           ;lcd.c: 272: for(i = 0; i < 16; i++)
  5180  0A23  01BC               	clrf	LCD_Update@i
  5181  0A24                     l9082:	
  5182                           
  5183                           ;lcd.c: 273: {
  5184                           ;lcd.c: 274: if( LCDText[i] == 0 )
  5185  0A24  083C               	movf	LCD_Update@i,w
  5186  0A25  3EC5               	addlw	(low (_LCDText| (0+256)))& (0+255)
  5187  0A26  0086               	movwf	6
  5188  0A27  3001               	movlw	1	; select bank3/4
  5189  0A28  0087               	movwf	7
  5190  0A29  0801               	movf	1,w
  5191  0A2A  1D03               	btfss	3,2
  5192  0A2B  2A2E               	goto	l9086
  5193                           
  5194                           ;lcd.c: 275: {
  5195                           ;lcd.c: 276: LCD_d_write(' ');
  5196  0A2C  3020               	movlw	32
  5197  0A2D  2A34               	goto	L42
  5198  0A2E                     l9086:	
  5199                           ;lcd.c: 277: }
  5200                           
  5201                           
  5202                           ;lcd.c: 278: else
  5203                           ;lcd.c: 279: {
  5204                           ;lcd.c: 280: LCD_d_write(LCDText[i]);
  5205  0A2E  083C               	movf	LCD_Update@i,w
  5206  0A2F  3EC5               	addlw	(low (_LCDText| (0+256)))& (0+255)
  5207  0A30  0086               	movwf	6
  5208  0A31  3001               	movlw	1	; select bank3/4
  5209  0A32  0087               	movwf	7
  5210  0A33  0801               	movf	1,w
  5211  0A34                     L42:	
  5212  0A34  2258  3188         	fcall	_LCD_d_write
  5213  0A36  3010               	movlw	16
  5214  0A37  0ABC               	incf	LCD_Update@i,f
  5215  0A38  023C               	subwf	LCD_Update@i,w
  5216  0A39  1C03               	skipc
  5217  0A3A  2A24               	goto	l9082
  5218                           
  5219                           ;lcd.c: 281: }
  5220                           ;lcd.c: 282: }
  5221                           ;lcd.c: 283: LCD_i_write(0xC0);
  5222  0A3B  30C0               	movlw	192
  5223  0A3C  2273  3188         	fcall	_LCD_i_write
  5224                           
  5225                           ;lcd.c: 284: for(i = 16; i < 32; i++)
  5226  0A3E  3010               	movlw	16
  5227  0A3F  00BC               	movwf	LCD_Update@i
  5228  0A40                     l9100:	
  5229                           
  5230                           ;lcd.c: 285: {
  5231                           ;lcd.c: 286: if( LCDText[i] == 0 )
  5232  0A40  083C               	movf	LCD_Update@i,w
  5233  0A41  3EC5               	addlw	(low (_LCDText| (0+256)))& (0+255)
  5234  0A42  0086               	movwf	6
  5235  0A43  3001               	movlw	1	; select bank3/4
  5236  0A44  0087               	movwf	7
  5237  0A45  0801               	movf	1,w
  5238  0A46  1D03               	btfss	3,2
  5239  0A47  2A4A               	goto	l9104
  5240                           
  5241                           ;lcd.c: 287: {
  5242                           ;lcd.c: 288: LCD_d_write(' ');
  5243  0A48  3020               	movlw	32
  5244  0A49  2A50               	goto	L43
  5245  0A4A                     l9104:	
  5246                           ;lcd.c: 289: }
  5247                           
  5248                           
  5249                           ;lcd.c: 290: else
  5250                           ;lcd.c: 291: {
  5251                           ;lcd.c: 292: LCD_d_write(LCDText[i]);
  5252  0A4A  083C               	movf	LCD_Update@i,w
  5253  0A4B  3EC5               	addlw	(low (_LCDText| (0+256)))& (0+255)
  5254  0A4C  0086               	movwf	6
  5255  0A4D  3001               	movlw	1	; select bank3/4
  5256  0A4E  0087               	movwf	7
  5257  0A4F  0801               	movf	1,w
  5258  0A50                     L43:	
  5259  0A50  2258  3188         	fcall	_LCD_d_write
  5260  0A52  3020               	movlw	32
  5261  0A53  0ABC               	incf	LCD_Update@i,f
  5262  0A54  023C               	subwf	LCD_Update@i,w
  5263  0A55  1803               	btfsc	3,0
  5264  0A56  0008               	return
  5265  0A57  2A40               	goto	l9100
  5266  0A58                     __end_of_LCD_Update:	
  5267  0A58                     __ptext77:	
  5268 ;; *************** function _LCD_d_write *****************
  5269 ;; Defined at:
  5270 ;;		line 162 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  v               1    wreg     unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  v               1   27[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 1F/0
  5281 ;;		On exit  : 1F/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;Total ram usage:        1 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    6
  5291 ;; This function calls:
  5292 ;;		_DELAY_ms
  5293 ;;		_LCDWritePortA
  5294 ;;		_LCDWritePortB
  5295 ;; This function is called by:
  5296 ;;		_LCD_Update
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function _LCD_d_write
  5302  0A58                     _LCD_d_write:	
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _LCD_d_write: [wreg+status,2+status,0+pclath+cstack]
  5306                           ;LCD_d_write@v stored from wreg
  5307  0A58  00BB               	movwf	LCD_d_write@v
  5308                           
  5309                           ;lcd.c: 164: DELAY_ms(1);
  5310  0A59  01B5               	clrf	DELAY_ms@ms
  5311  0A5A  0AB5               	incf	DELAY_ms@ms,f
  5312  0A5B  01B6               	clrf	DELAY_ms@ms+1
  5313  0A5C  2157  3188         	fcall	_DELAY_ms
  5314                           
  5315                           ;lcd.c: 165: LCDWritePortA(0x80);
  5316  0A5E  3080               	movlw	128
  5317  0A5F  21B3  3188         	fcall	_LCDWritePortA
  5318                           
  5319                           ;lcd.c: 166: LCDWritePortB(v);
  5320  0A61  083B               	movf	LCD_d_write@v,w
  5321  0A62  21F5  3188         	fcall	_LCDWritePortB
  5322                           
  5323                           ;lcd.c: 171: __nop();
  5324  0A64  0000               	nop
  5325                           
  5326                           ;lcd.c: 172: __nop();
  5327  0A65  0000               	nop
  5328                           
  5329                           ;lcd.c: 173: __nop();
  5330  0A66  0000               	nop
  5331                           
  5332                           ;lcd.c: 174: __nop();
  5333  0A67  0000               	nop
  5334                           
  5335                           ;lcd.c: 175: LCDWritePortA(0xC0);
  5336  0A68  30C0               	movlw	192
  5337  0A69  21B3  3188         	fcall	_LCDWritePortA
  5338                           
  5339                           ;lcd.c: 182: __nop();
  5340  0A6B  0000               	nop
  5341                           
  5342                           ;lcd.c: 183: __nop();
  5343  0A6C  0000               	nop
  5344                           
  5345                           ;lcd.c: 184: __nop();
  5346  0A6D  0000               	nop
  5347                           
  5348                           ;lcd.c: 185: __nop();
  5349  0A6E  0000               	nop
  5350                           
  5351                           ;lcd.c: 186: __nop();
  5352  0A6F  0000               	nop
  5353                           
  5354                           ;lcd.c: 187: __nop();
  5355  0A70  0000               	nop
  5356                           
  5357                           ;lcd.c: 188: LCDWritePortA(0);
  5358  0A71  3000               	movlw	0
  5359  0A72  29B3               	ljmp	_LCDWritePortA
  5360  0A73                     __end_of_LCD_d_write:	
  5361  0A73                     __ptext76:	
  5362 ;; *************** function _LCD_i_write *****************
  5363 ;; Defined at:
  5364 ;;		line 130 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  v               1    wreg     unsigned char 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  v               1   27[BANK0 ] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 1F/0
  5375 ;;		On exit  : 1F/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        1 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    6
  5385 ;; This function calls:
  5386 ;;		_DELAY_ms
  5387 ;;		_LCDWritePortA
  5388 ;;		_LCDWritePortB
  5389 ;; This function is called by:
  5390 ;;		_LCD_Update
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function _LCD_i_write
  5396  0A73                     _LCD_i_write:	
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in _LCD_i_write: [wreg+status,2+status,0+pclath+cstack]
  5400                           ;LCD_i_write@v stored from wreg
  5401  0A73  00BB               	movwf	LCD_i_write@v
  5402                           
  5403                           ;lcd.c: 132: LCDWritePortA(0);
  5404  0A74  3000               	movlw	0
  5405  0A75  21B3  3188         	fcall	_LCDWritePortA
  5406                           
  5407                           ;lcd.c: 133: DELAY_ms(1);
  5408  0A77  01B5               	clrf	DELAY_ms@ms
  5409  0A78  0AB5               	incf	DELAY_ms@ms,f
  5410  0A79  01B6               	clrf	DELAY_ms@ms+1
  5411  0A7A  2157  3188         	fcall	_DELAY_ms
  5412                           
  5413                           ;lcd.c: 134: LCDWritePortB(v);
  5414  0A7C  083B               	movf	LCD_i_write@v,w
  5415  0A7D  21F5  3188         	fcall	_LCDWritePortB
  5416                           
  5417                           ;lcd.c: 139: __nop();
  5418  0A7F  0000               	nop
  5419                           
  5420                           ;lcd.c: 140: __nop();
  5421  0A80  0000               	nop
  5422                           
  5423                           ;lcd.c: 141: __nop();
  5424  0A81  0000               	nop
  5425                           
  5426                           ;lcd.c: 142: __nop();
  5427  0A82  0000               	nop
  5428                           
  5429                           ;lcd.c: 144: LCDWritePortA(0x40);
  5430  0A83  3040               	movlw	64
  5431  0A84  21B3  3188         	fcall	_LCDWritePortA
  5432                           
  5433                           ;lcd.c: 151: __nop();
  5434  0A86  0000               	nop
  5435                           
  5436                           ;lcd.c: 152: __nop();
  5437  0A87  0000               	nop
  5438                           
  5439                           ;lcd.c: 153: __nop();
  5440  0A88  0000               	nop
  5441                           
  5442                           ;lcd.c: 154: __nop();
  5443  0A89  0000               	nop
  5444                           
  5445                           ;lcd.c: 155: __nop();
  5446  0A8A  0000               	nop
  5447                           
  5448                           ;lcd.c: 156: __nop();
  5449  0A8B  0000               	nop
  5450                           
  5451                           ;lcd.c: 158: LCDWritePortA(0x00);
  5452  0A8C  3000               	movlw	0
  5453  0A8D  29B3               	ljmp	_LCDWritePortA
  5454  0A8E                     __end_of_LCD_i_write:	
  5455  0A8E                     __ptext69:	
  5456 ;; *************** function _sprintf *****************
  5457 ;; Defined at:
  5458 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  sp              1    wreg     PTR unsigned char 
  5461 ;;		 -> LCDText(33), 
  5462 ;;  f               2   21[BANK0 ] PTR const unsigned char 
  5463 ;;		 -> STR_15(21), STR_14(18), STR_13(20), STR_12(17), 
  5464 ;;		 -> STR_11(22), STR_10(22), STR_9(25), STR_8(22), 
  5465 ;;		 -> STR_7(17), STR_6(16), STR_5(31), STR_4(32), 
  5466 ;;		 -> STR_3(30), STR_2(17), STR_1(17), 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  sp              1   52[BANK0 ] PTR unsigned char 
  5469 ;;		 -> LCDText(33), 
  5470 ;;  idx             1   42[BANK0 ] unsigned char 
  5471 ;;  tmpval          4    0        struct .
  5472 ;;  flag            2   53[BANK0 ] unsigned short 
  5473 ;;  width           2   49[BANK0 ] int 
  5474 ;;  val             2   46[BANK0 ] unsigned int 
  5475 ;;  len             2   43[BANK0 ] unsigned int 
  5476 ;;  c               1   51[BANK0 ] char 
  5477 ;;  prec            1   48[BANK0 ] char 
  5478 ;;  ap              1   45[BANK0 ] PTR void [1]
  5479 ;;		 -> ?_sprintf(2), 
  5480 ;;  cp              1   41[BANK0 ] PTR const unsigned char 
  5481 ;;		 -> sprintf@c(1), 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  2   21[BANK0 ] int 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 1F/0
  5488 ;;		On exit  : 1F/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5491 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;Total ram usage:       34 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    5
  5498 ;; This function calls:
  5499 ;;		___bmul
  5500 ;;		___lwdiv
  5501 ;;		___lwmod
  5502 ;;		___wmul
  5503 ;;		_isdigit
  5504 ;; This function is called by:
  5505 ;;		_LCDTRXCount
  5506 ;;		_LCDDisplay
  5507 ;;		_Source_END_DEVICE_INFO
  5508 ;;		_run_star_demo
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _sprintf
  5514  0A8E                     _sprintf:	
  5515                           
  5516                           ;incstack = 0
  5517                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5518                           ;sprintf@sp stored from wreg
  5519  0A8E  00D4               	movwf	sprintf@sp
  5520                           
  5521                           ;doprnt.c: 494: va_list ap;
  5522                           ;doprnt.c: 499: signed char c;
  5523                           ;doprnt.c: 501: int width;
  5524                           ;doprnt.c: 506: signed char prec;
  5525                           ;doprnt.c: 508: unsigned short flag;
  5526                           ;doprnt.c: 523: union {
  5527                           ;doprnt.c: 524: unsigned long vd;
  5528                           ;doprnt.c: 525: double integ;
  5529                           ;doprnt.c: 526: } tmpval;
  5530                           ;doprnt.c: 528: unsigned int val;
  5531                           ;doprnt.c: 529: unsigned len;
  5532                           ;doprnt.c: 530: const char * cp;
  5533                           ;doprnt.c: 533: *ap = __va_start();
  5534  0A8F  3037               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5535  0A90  00CD               	movwf	sprintf@ap
  5536  0A91                     l9450:	
  5537                           ;doprnt.c: 536: while(c = *f++) {
  5538                           
  5539  0A91  0020               	movlb	0	; select bank0
  5540  0A92  0836               	movf	sprintf@f+1,w
  5541  0A93  00C0               	movwf	??_sprintf+1
  5542  0A94  0835               	movf	sprintf@f,w
  5543  0A95  00BF               	movwf	??_sprintf
  5544  0A96  0AB5               	incf	sprintf@f,f
  5545  0A97  1903               	skipnz
  5546  0A98  0AB6               	incf	sprintf@f+1,f
  5547  0A99  0084               	movwf	4
  5548  0A9A  0840               	movf	??_sprintf+1,w
  5549  0A9B  0085               	movwf	5
  5550  0A9C  0800               	movf	0,w	;code access
  5551  0A9D  00D3               	movwf	sprintf@c
  5552  0A9E  0853               	movf	sprintf@c,w
  5553  0A9F  1903               	btfsc	3,2
  5554  0AA0  2E42               	goto	l9452
  5555                           
  5556                           ;doprnt.c: 538: if(c != '%')
  5557  0AA1  3025               	movlw	37
  5558  0AA2  0653               	xorwf	sprintf@c,w
  5559  0AA3  1903               	btfsc	3,2
  5560  0AA4  2AAD               	goto	l9122
  5561                           
  5562                           ;doprnt.c: 540: {
  5563                           ;doprnt.c: 541: ((*sp++ = (c)));
  5564  0AA5  0854               	movf	sprintf@sp,w
  5565  0AA6  0086               	movwf	6
  5566  0AA7  3001               	movlw	1	; select bank2/3
  5567  0AA8  0087               	movwf	7
  5568  0AA9  0853               	movf	sprintf@c,w
  5569  0AAA  0081               	movwf	1
  5570  0AAB  0AD4               	incf	sprintf@sp,f
  5571                           
  5572                           ;doprnt.c: 542: continue;
  5573  0AAC  2A91               	goto	l9450
  5574  0AAD                     l9122:	
  5575                           
  5576                           ;doprnt.c: 543: }
  5577                           ;doprnt.c: 546: width = 0;
  5578  0AAD  01D1               	clrf	sprintf@width
  5579  0AAE  01D2               	clrf	sprintf@width+1
  5580                           
  5581                           ;doprnt.c: 548: flag = 0;
  5582  0AAF  01D5               	clrf	sprintf@flag
  5583  0AB0  01D6               	clrf	sprintf@flag+1
  5584  0AB1  2ABC               	goto	l9134
  5585  0AB2                     l1215:	
  5586                           ;doprnt.c: 553: case '-':
  5587                           
  5588                           
  5589                           ;doprnt.c: 554: flag |= 0x08;
  5590  0AB2  15D5               	bsf	sprintf@flag,3
  5591                           
  5592                           ;doprnt.c: 556: continue;
  5593  0AB3  2AB9               	goto	l9124
  5594  0AB4                     l1217:	
  5595                           ;doprnt.c: 560: case ' ':
  5596                           
  5597                           
  5598                           ;doprnt.c: 561: flag |= 0x01;
  5599  0AB4  1455               	bsf	sprintf@flag,0
  5600  0AB5  2AB9               	goto	l9124
  5601  0AB6                     l1218:	
  5602                           ;doprnt.c: 573: case '#':
  5603                           
  5604                           
  5605                           ;doprnt.c: 574: flag |= 0x800;
  5606  0AB6  15D6               	bsf	sprintf@flag+1,3
  5607  0AB7  2AB9               	goto	l9124
  5608  0AB8                     l1219:	
  5609                           ;doprnt.c: 579: case '0':
  5610                           
  5611                           
  5612                           ;doprnt.c: 580: flag |= 0x04;
  5613  0AB8  1555               	bsf	sprintf@flag,2
  5614  0AB9                     l9124:	
  5615                           
  5616                           ;doprnt.c: 555: f++;
  5617  0AB9  0AB5               	incf	sprintf@f,f
  5618  0ABA  1903               	skipnz
  5619  0ABB  0AB6               	incf	sprintf@f+1,f
  5620  0ABC                     l9134:	
  5621  0ABC  0835               	movf	sprintf@f,w
  5622  0ABD  0084               	movwf	4
  5623  0ABE  0836               	movf	sprintf@f+1,w
  5624  0ABF  0085               	movwf	5
  5625  0AC0  0800               	movf	0,w	;code access
  5626                           
  5627                           ; Switch size 1, requested type "speed"
  5628                           ; Number of cases is 4, Range of values is 32 to 48
  5629                           ; switch strategies available:
  5630                           ; Name         Instructions Cycles
  5631                           ; simple_byte           13     7 (average)
  5632                           ; direct_byte           43     9 (fixed)
  5633                           ; jumptable            263     9 (fixed)
  5634                           ;	Chosen strategy is simple_byte
  5635  0AC1  3A20               	xorlw	32	; case 32
  5636  0AC2  1903               	skipnz
  5637  0AC3  2AB4               	goto	l1217
  5638  0AC4  3A03               	xorlw	3	; case 35
  5639  0AC5  1903               	skipnz
  5640  0AC6  2AB6               	goto	l1218
  5641  0AC7  3A0E               	xorlw	14	; case 45
  5642  0AC8  1903               	skipnz
  5643  0AC9  2AB2               	goto	l1215
  5644  0ACA  3A1D               	xorlw	29	; case 48
  5645  0ACB  1903               	skipnz
  5646  0ACC  2AB8               	goto	l1219
  5647  0ACD  2ACE               	goto	l1221
  5648  0ACE                     l1221:	
  5649                           
  5650                           ;doprnt.c: 593: if(flag & 0x08)
  5651  0ACE  1DD5               	btfss	sprintf@flag,3
  5652  0ACF  2AD1               	goto	l9138
  5653                           
  5654                           ;doprnt.c: 594: flag &= ~0x04;
  5655  0AD0  1155               	bcf	sprintf@flag,2
  5656  0AD1                     l9138:	
  5657                           
  5658                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5659  0AD1  0835               	movf	sprintf@f,w
  5660  0AD2  0084               	movwf	4
  5661  0AD3  0836               	movf	sprintf@f+1,w
  5662  0AD4  0085               	movwf	5
  5663  0AD5  0800               	movf	0,w	;code access
  5664  0AD6  266D  3188         	fcall	_isdigit
  5665  0AD8  1C03               	btfss	3,0
  5666  0AD9  2B06               	goto	l9150
  5667                           
  5668                           ;doprnt.c: 598: width = 0;
  5669  0ADA  01D1               	clrf	sprintf@width
  5670  0ADB  01D2               	clrf	sprintf@width+1
  5671  0ADC                     l9142:	
  5672                           
  5673                           ;doprnt.c: 600: width *= 10;
  5674  0ADC  300A               	movlw	10
  5675  0ADD  00AE               	movwf	___wmul@multiplier
  5676  0ADE  01AF               	clrf	___wmul@multiplier+1
  5677  0ADF  0852               	movf	sprintf@width+1,w
  5678  0AE0  00B1               	movwf	___wmul@multiplicand+1
  5679  0AE1  0851               	movf	sprintf@width,w
  5680  0AE2  00B0               	movwf	___wmul@multiplicand
  5681  0AE3  319F  27EB  3188   	fcall	___wmul
  5682  0AE6  082F               	movf	?___wmul+1,w
  5683  0AE7  00D2               	movwf	sprintf@width+1
  5684  0AE8  082E               	movf	?___wmul,w
  5685  0AE9  00D1               	movwf	sprintf@width
  5686                           
  5687                           ;doprnt.c: 601: width += *f++ - '0';
  5688  0AEA  0835               	movf	sprintf@f,w
  5689  0AEB  0084               	movwf	4
  5690  0AEC  0836               	movf	sprintf@f+1,w
  5691  0AED  0085               	movwf	5
  5692  0AEE  0800               	movf	0,w	;code access
  5693  0AEF  3ED0               	addlw	208
  5694  0AF0  00BF               	movwf	??_sprintf
  5695  0AF1  30FF               	movlw	255
  5696  0AF2  1803               	skipnc
  5697  0AF3  3000               	movlw	0
  5698  0AF4  00C0               	movwf	??_sprintf+1
  5699  0AF5  083F               	movf	??_sprintf,w
  5700  0AF6  07D1               	addwf	sprintf@width,f
  5701  0AF7  0840               	movf	??_sprintf+1,w
  5702  0AF8  3DD2               	addwfc	sprintf@width+1,f
  5703  0AF9  0AB5               	incf	sprintf@f,f
  5704  0AFA  1903               	skipnz
  5705  0AFB  0AB6               	incf	sprintf@f+1,f
  5706                           
  5707                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5708  0AFC  0835               	movf	sprintf@f,w
  5709  0AFD  0084               	movwf	4
  5710  0AFE  0836               	movf	sprintf@f+1,w
  5711  0AFF  0085               	movwf	5
  5712  0B00  0800               	movf	0,w	;code access
  5713  0B01  266D  3188         	fcall	_isdigit
  5714  0B03  1C03               	btfss	3,0
  5715  0B04  2B1A               	goto	l9158
  5716  0B05  2ADC               	goto	l9142
  5717  0B06                     l9150:	
  5718  0B06  0835               	movf	sprintf@f,w
  5719  0B07  0084               	movwf	4
  5720  0B08  0836               	movf	sprintf@f+1,w
  5721  0B09  0085               	movwf	5
  5722  0B0A  0012               	moviw fsr0++
  5723  0B0B  3A2A               	xorlw	42
  5724  0B0C  1D03               	btfss	3,2
  5725  0B0D  2B1A               	goto	l9158
  5726                           
  5727                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  5728  0B0E  084D               	movf	sprintf@ap,w
  5729  0B0F  0086               	movwf	6
  5730  0B10  0187               	clrf	7
  5731  0B11  3F40               	moviw [0]fsr1
  5732  0B12  00D1               	movwf	sprintf@width
  5733  0B13  3F41               	moviw [1]fsr1
  5734  0B14  00D2               	movwf	sprintf@width+1
  5735  0B15  0ACD               	incf	sprintf@ap,f
  5736  0B16  0ACD               	incf	sprintf@ap,f
  5737                           
  5738                           ;doprnt.c: 606: f++;
  5739  0B17  0AB5               	incf	sprintf@f,f
  5740  0B18  1903               	skipnz
  5741  0B19  0AB6               	incf	sprintf@f+1,f
  5742  0B1A                     l9158:	
  5743                           
  5744                           ;doprnt.c: 608: }
  5745                           ;doprnt.c: 611: if(*f == '.') {
  5746  0B1A  0835               	movf	sprintf@f,w
  5747  0B1B  0084               	movwf	4
  5748  0B1C  0836               	movf	sprintf@f+1,w
  5749  0B1D  0085               	movwf	5
  5750  0B1E  0012               	moviw fsr0++
  5751  0B1F  3A2E               	xorlw	46
  5752  0B20  1D03               	btfss	3,2
  5753  0B21  2B56               	goto	l9180
  5754                           
  5755                           ;doprnt.c: 612: flag |= 0x4000;
  5756  0B22  1756               	bsf	sprintf@flag+1,6
  5757                           
  5758                           ;doprnt.c: 613: f++;
  5759  0B23  0AB5               	incf	sprintf@f,f
  5760  0B24  1903               	skipnz
  5761  0B25  0AB6               	incf	sprintf@f+1,f
  5762                           
  5763                           ;doprnt.c: 615: if(*f == '*') {
  5764  0B26  0835               	movf	sprintf@f,w
  5765  0B27  0084               	movwf	4
  5766  0B28  0836               	movf	sprintf@f+1,w
  5767  0B29  0085               	movwf	5
  5768  0B2A  0012               	moviw fsr0++
  5769  0B2B  3A2A               	xorlw	42
  5770  0B2C  1D03               	btfss	3,2
  5771  0B2D  2B39               	goto	l9172
  5772                           
  5773                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  5774  0B2E  084D               	movf	sprintf@ap,w
  5775  0B2F  0086               	movwf	6
  5776  0B30  0187               	clrf	7
  5777  0B31  0801               	movf	1,w
  5778  0B32  00D0               	movwf	sprintf@prec
  5779  0B33  0ACD               	incf	sprintf@ap,f
  5780  0B34  0ACD               	incf	sprintf@ap,f
  5781                           
  5782                           ;doprnt.c: 617: f++;
  5783  0B35  0AB5               	incf	sprintf@f,f
  5784  0B36  1903               	skipnz
  5785  0B37  0AB6               	incf	sprintf@f+1,f
  5786                           
  5787                           ;doprnt.c: 618: } else
  5788  0B38  2BCD               	goto	l9232
  5789  0B39                     l9172:	
  5790                           
  5791                           ;doprnt.c: 620: {
  5792                           ;doprnt.c: 621: prec = 0;
  5793  0B39  01D0               	clrf	sprintf@prec
  5794  0B3A                     l9178:	
  5795                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5796                           
  5797  0B3A  0835               	movf	sprintf@f,w
  5798  0B3B  0084               	movwf	4
  5799  0B3C  0836               	movf	sprintf@f+1,w
  5800  0B3D  0085               	movwf	5
  5801  0B3E  0800               	movf	0,w	;code access
  5802  0B3F  266D  3188         	fcall	_isdigit
  5803  0B41  1C03               	btfss	3,0
  5804  0B42  2BCD               	goto	l9232
  5805                           
  5806                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5807  0B43  0835               	movf	sprintf@f,w
  5808  0B44  0084               	movwf	4
  5809  0B45  0836               	movf	sprintf@f+1,w
  5810  0B46  0085               	movwf	5
  5811  0B47  0800               	movf	0,w	;code access
  5812  0B48  00BF               	movwf	??_sprintf
  5813  0B49  300A               	movlw	10
  5814  0B4A  00A9               	movwf	___bmul@multiplicand
  5815  0B4B  0850               	movf	sprintf@prec,w
  5816  0B4C  3196  26E6  3188   	fcall	___bmul
  5817  0B4F  073F               	addwf	??_sprintf,w
  5818  0B50  3ED0               	addlw	-48
  5819  0B51  00D0               	movwf	sprintf@prec
  5820  0B52  0AB5               	incf	sprintf@f,f
  5821  0B53  1903               	skipnz
  5822  0B54  0AB6               	incf	sprintf@f+1,f
  5823  0B55  2B3A               	goto	l9178
  5824  0B56                     l9180:	
  5825                           
  5826                           ;doprnt.c: 626: prec = 0;
  5827  0B56  01D0               	clrf	sprintf@prec
  5828  0B57  2BCD               	goto	l9232
  5829  0B58                     l1238:	
  5830                           ;doprnt.c: 689: case 'o':
  5831                           
  5832                           
  5833                           ;doprnt.c: 691: flag |= 0x40;
  5834  0B58  1755               	bsf	sprintf@flag,6
  5835                           
  5836                           ;doprnt.c: 693: break;
  5837  0B59  2BE2               	goto	l9234
  5838  0B5A                     l1242:	
  5839                           ;doprnt.c: 712: case 'X':
  5840                           
  5841                           
  5842                           ;doprnt.c: 714: flag |= 0x20;
  5843  0B5A  16D5               	bsf	sprintf@flag,5
  5844  0B5B                     l1243:	
  5845                           ;doprnt.c: 718: case 'x':
  5846                           
  5847                           
  5848                           ;doprnt.c: 721: flag |= 0x80;
  5849  0B5B  17D5               	bsf	sprintf@flag,7
  5850                           
  5851                           ;doprnt.c: 723: break;
  5852  0B5C  2BE2               	goto	l9234
  5853  0B5D                     l9182:	
  5854                           
  5855                           ;doprnt.c: 753: if(prec && prec < len)
  5856  0B5D  0850               	movf	sprintf@prec,w
  5857  0B5E  1903               	btfsc	3,2
  5858  0B5F  2B72               	goto	l9188
  5859  0B60  0850               	movf	sprintf@prec,w
  5860  0B61  00BF               	movwf	??_sprintf
  5861  0B62  01C0               	clrf	??_sprintf+1
  5862  0B63  1BBF               	btfsc	??_sprintf,7
  5863  0B64  03C0               	decf	??_sprintf+1,f
  5864  0B65  084C               	movf	sprintf@len+1,w
  5865  0B66  0240               	subwf	??_sprintf+1,w
  5866  0B67  1D03               	skipz
  5867  0B68  2B6B               	goto	u8325
  5868  0B69  084B               	movf	sprintf@len,w
  5869  0B6A  023F               	subwf	??_sprintf,w
  5870  0B6B                     u8325:	
  5871  0B6B  1803               	skipnc
  5872  0B6C  2B72               	goto	l9188
  5873                           
  5874                           ;doprnt.c: 754: len = prec;
  5875  0B6D  0850               	movf	sprintf@prec,w
  5876  0B6E  00CB               	movwf	sprintf@len
  5877  0B6F  01CC               	clrf	sprintf@len+1
  5878  0B70  1BCB               	btfsc	sprintf@len,7
  5879  0B71  03CC               	decf	sprintf@len+1,f
  5880  0B72                     l9188:	
  5881                           
  5882                           ;doprnt.c: 757: if(width > len)
  5883  0B72  0852               	movf	sprintf@width+1,w
  5884  0B73  024C               	subwf	sprintf@len+1,w
  5885  0B74  1D03               	skipz
  5886  0B75  2B78               	goto	u8335
  5887  0B76  0851               	movf	sprintf@width,w
  5888  0B77  024B               	subwf	sprintf@len,w
  5889  0B78                     u8335:	
  5890  0B78  1803               	skipnc
  5891  0B79  2B7F               	goto	l9192
  5892                           
  5893                           ;doprnt.c: 758: width -= len;
  5894  0B7A  084B               	movf	sprintf@len,w
  5895  0B7B  02D1               	subwf	sprintf@width,f
  5896  0B7C  084C               	movf	sprintf@len+1,w
  5897  0B7D  3BD2               	subwfb	sprintf@width+1,f
  5898  0B7E  2B81               	goto	l9194
  5899  0B7F                     l9192:	
  5900                           
  5901                           ;doprnt.c: 759: else
  5902                           ;doprnt.c: 760: width = 0;
  5903  0B7F  01D1               	clrf	sprintf@width
  5904  0B80  01D2               	clrf	sprintf@width+1
  5905  0B81                     l9194:	
  5906                           
  5907                           ;doprnt.c: 762: if(!(flag & 0x08))
  5908  0B81  1DD5               	btfss	sprintf@flag,3
  5909  0B82  2B8B               	goto	l9202
  5910  0B83  2BA0               	goto	l9210
  5911  0B84                     l9198:	
  5912                           
  5913                           ;doprnt.c: 765: ((*sp++ = (' ')));
  5914  0B84  0854               	movf	sprintf@sp,w
  5915  0B85  0086               	movwf	6
  5916  0B86  3001               	movlw	1	; select bank2/3
  5917  0B87  0087               	movwf	7
  5918  0B88  3020               	movlw	32
  5919  0B89  0081               	movwf	1
  5920  0B8A  0AD4               	incf	sprintf@sp,f
  5921  0B8B                     l9202:	
  5922  0B8B  30FF               	movlw	-1
  5923  0B8C  07D1               	addwf	sprintf@width,f
  5924  0B8D  1C03               	skipc
  5925  0B8E  03D2               	decf	sprintf@width+1,f
  5926  0B8F  0F51               	incfsz	sprintf@width,w
  5927  0B90  2B84               	goto	l9198
  5928  0B91  0A52               	incf	sprintf@width+1,w
  5929  0B92  1903               	btfsc	3,2
  5930  0B93  2BA0               	goto	l9210
  5931  0B94  2B84               	goto	l9198
  5932  0B95                     l9204:	
  5933                           
  5934                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  5935  0B95  0854               	movf	sprintf@sp,w
  5936  0B96  0086               	movwf	6
  5937  0B97  3001               	movlw	1	; select bank2/3
  5938  0B98  0087               	movwf	7
  5939  0B99  0849               	movf	sprintf@cp,w
  5940  0B9A  0084               	movwf	4
  5941  0B9B  0185               	clrf	5
  5942  0B9C  0800               	movf	0,w
  5943  0B9D  0081               	movwf	1
  5944  0B9E  0AC9               	incf	sprintf@cp,f
  5945  0B9F  0AD4               	incf	sprintf@sp,f
  5946  0BA0                     l9210:	
  5947  0BA0  3001               	movlw	1
  5948  0BA1  02CB               	subwf	sprintf@len,f
  5949  0BA2  3000               	movlw	0
  5950  0BA3  3BCC               	subwfb	sprintf@len+1,f
  5951  0BA4  0F4B               	incfsz	sprintf@len,w
  5952  0BA5  2B95               	goto	l9204
  5953  0BA6  0A4C               	incf	sprintf@len+1,w
  5954  0BA7  1D03               	btfss	3,2
  5955  0BA8  2B95               	goto	l9204
  5956                           
  5957                           ;doprnt.c: 770: if(flag & 0x08)
  5958  0BA9  19D5               	btfsc	sprintf@flag,3
  5959  0BAA  2BB3               	goto	l9218
  5960  0BAB  2A91               	goto	l9450
  5961  0BAC                     l9214:	
  5962                           
  5963                           ;doprnt.c: 772: ((*sp++ = (' ')));
  5964  0BAC  0854               	movf	sprintf@sp,w
  5965  0BAD  0086               	movwf	6
  5966  0BAE  3001               	movlw	1	; select bank2/3
  5967  0BAF  0087               	movwf	7
  5968  0BB0  3020               	movlw	32
  5969  0BB1  0081               	movwf	1
  5970  0BB2  0AD4               	incf	sprintf@sp,f
  5971  0BB3                     l9218:	
  5972  0BB3  30FF               	movlw	-1
  5973  0BB4  07D1               	addwf	sprintf@width,f
  5974  0BB5  1C03               	skipc
  5975  0BB6  03D2               	decf	sprintf@width+1,f
  5976  0BB7  0F51               	incfsz	sprintf@width,w
  5977  0BB8  2BAC               	goto	l9214
  5978  0BB9  0A52               	incf	sprintf@width+1,w
  5979  0BBA  1903               	btfsc	3,2
  5980  0BBB  2A91               	goto	l9450
  5981  0BBC  2BAC               	goto	l9214
  5982  0BBD                     l9220:	
  5983                           
  5984                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5985  0BBD  084D               	movf	sprintf@ap,w
  5986  0BBE  0086               	movwf	6
  5987  0BBF  0187               	clrf	7
  5988  0BC0  0801               	movf	1,w
  5989  0BC1  00D3               	movwf	sprintf@c
  5990  0BC2  0ACD               	incf	sprintf@ap,f
  5991  0BC3  0ACD               	incf	sprintf@ap,f
  5992  0BC4                     l9224:	
  5993                           
  5994                           ;doprnt.c: 805: cp = (char *)&c;
  5995  0BC4  3053               	movlw	(low (sprintf@c| 0))& (0+255)
  5996  0BC5  00C9               	movwf	sprintf@cp
  5997                           
  5998                           ;doprnt.c: 806: len = 1;
  5999  0BC6  01CB               	clrf	sprintf@len
  6000  0BC7  0ACB               	incf	sprintf@len,f
  6001  0BC8  01CC               	clrf	sprintf@len+1
  6002                           
  6003                           ;doprnt.c: 807: goto dostring;
  6004  0BC9  2B5D               	goto	l9182
  6005  0BCA                     l9228:	
  6006                           
  6007                           ;doprnt.c: 818: flag |= 0xC0;
  6008  0BCA  30C0               	movlw	192
  6009  0BCB  04D5               	iorwf	sprintf@flag,f
  6010                           
  6011                           ;doprnt.c: 819: break;
  6012  0BCC  2BE2               	goto	l9234
  6013  0BCD                     l9232:	
  6014  0BCD  0836               	movf	sprintf@f+1,w
  6015  0BCE  00C0               	movwf	??_sprintf+1
  6016  0BCF  0835               	movf	sprintf@f,w
  6017  0BD0  00BF               	movwf	??_sprintf
  6018  0BD1  0AB5               	incf	sprintf@f,f
  6019  0BD2  1903               	skipnz
  6020  0BD3  0AB6               	incf	sprintf@f+1,f
  6021  0BD4  0084               	movwf	4
  6022  0BD5  0840               	movf	??_sprintf+1,w
  6023  0BD6  0085               	movwf	5
  6024  0BD7  0800               	movf	0,w	;code access
  6025  0BD8  00D3               	movwf	sprintf@c
  6026                           
  6027                           ; Switch size 1, requested type "speed"
  6028                           ; Number of cases is 8, Range of values is 0 to 120
  6029                           ; switch strategies available:
  6030                           ; Name         Instructions Cycles
  6031                           ; direct_byte          248     6 (fixed)
  6032                           ; simple_byte           25    13 (average)
  6033                           ; jumptable            260     6 (fixed)
  6034                           ;	Chosen strategy is direct_byte
  6035  0BD9  0084               	movwf	4
  6036  0BDA  3079               	movlw	121
  6037  0BDB  0204               	subwf	4,w
  6038  0BDC  1803               	skipnc
  6039  0BDD  2BC4               	goto	l9224
  6040  0BDE  3186               	movlp	high S11452
  6041  0BDF  3504               	lslf	4,w
  6042  0BE0  3E00               	addlw	low S11452
  6043  0BE1  0082               	movwf	2
  6044  0BE2                     l9234:	
  6045                           
  6046                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  6047  0BE2  0855               	movf	sprintf@flag,w
  6048  0BE3  39C0               	andlw	192
  6049  0BE4  1D03               	btfss	3,2
  6050  0BE5  2BF9               	goto	l9246
  6051                           
  6052                           ;doprnt.c: 1253: {
  6053                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6054  0BE6  084D               	movf	sprintf@ap,w
  6055  0BE7  0086               	movwf	6
  6056  0BE8  0187               	clrf	7
  6057  0BE9  3F40               	moviw [0]fsr1
  6058  0BEA  00CE               	movwf	sprintf@val
  6059  0BEB  3F41               	moviw [1]fsr1
  6060  0BEC  00CF               	movwf	sprintf@val+1
  6061  0BED  0ACD               	incf	sprintf@ap,f
  6062  0BEE  0ACD               	incf	sprintf@ap,f
  6063                           
  6064                           ;doprnt.c: 1261: if((int)val < 0) {
  6065  0BEF  1FCF               	btfss	sprintf@val+1,7
  6066  0BF0  2C02               	goto	l9250
  6067                           
  6068                           ;doprnt.c: 1262: flag |= 0x03;
  6069  0BF1  3003               	movlw	3
  6070  0BF2  04D5               	iorwf	sprintf@flag,f
  6071                           
  6072                           ;doprnt.c: 1263: val = -val;
  6073  0BF3  09CE               	comf	sprintf@val,f
  6074  0BF4  09CF               	comf	sprintf@val+1,f
  6075  0BF5  0ACE               	incf	sprintf@val,f
  6076  0BF6  1903               	skipnz
  6077  0BF7  0ACF               	incf	sprintf@val+1,f
  6078  0BF8  2C02               	goto	l9250
  6079  0BF9                     l9246:	
  6080                           
  6081                           ;doprnt.c: 1268: else
  6082                           ;doprnt.c: 1273: {
  6083                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6084  0BF9  084D               	movf	sprintf@ap,w
  6085  0BFA  0086               	movwf	6
  6086  0BFB  0187               	clrf	7
  6087  0BFC  3F40               	moviw [0]fsr1
  6088  0BFD  00CE               	movwf	sprintf@val
  6089  0BFE  3F41               	moviw [1]fsr1
  6090  0BFF  00CF               	movwf	sprintf@val+1
  6091  0C00  0ACD               	incf	sprintf@ap,f
  6092  0C01  0ACD               	incf	sprintf@ap,f
  6093  0C02                     l9250:	
  6094                           
  6095                           ;doprnt.c: 1287: }
  6096                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6097  0C02  0850               	movf	sprintf@prec,w
  6098  0C03  1D03               	btfss	3,2
  6099  0C04  2C62               	goto	l9294
  6100  0C05  084E               	movf	sprintf@val,w
  6101  0C06  044F               	iorwf	sprintf@val+1,w
  6102  0C07  1D03               	btfss	3,2
  6103  0C08  2C62               	goto	l9294
  6104                           
  6105                           ;doprnt.c: 1291: prec++;
  6106  0C09  0AD0               	incf	sprintf@prec,f
  6107  0C0A  2C62               	goto	l9294
  6108  0C0B                     l1268:	
  6109                           
  6110                           ;doprnt.c: 1302: case 0xC0:
  6111                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6112  0C0B  01D3               	clrf	sprintf@c
  6113  0C0C                     L24:	
  6114  0C0C  3005               	movlw	5
  6115  0C0D  0AD3               	incf	sprintf@c,f
  6116  0C0E  0653               	xorwf	sprintf@c,w
  6117  0C0F  1903               	btfsc	3,2
  6118  0C10  2C70               	goto	l9296
  6119                           
  6120                           ;doprnt.c: 1306: if(val < dpowers[c])
  6121  0C11  0853               	movf	sprintf@c,w
  6122  0C12  00BF               	movwf	??_sprintf
  6123  0C13  308A               	movlw	low (_dpowers| (0+32768))
  6124  0C14  01C0               	clrf	??_sprintf+1
  6125  0C15  35BF               	lslf	??_sprintf,f
  6126  0C16  0DC0               	rlf	??_sprintf+1,f
  6127  0C17  073F               	addwf	??_sprintf,w
  6128  0C18  0084               	movwf	4
  6129  0C19  30A8               	movlw	high (_dpowers| (0+32768))
  6130  0C1A  3D40               	addwfc	??_sprintf+1,w
  6131  0C1B  0085               	movwf	5
  6132  0C1C  3F00               	moviw [0]fsr0
  6133  0C1D  00C1               	movwf	??_sprintf+2
  6134  0C1E  3F01               	moviw [1]fsr0
  6135  0C1F  00C2               	movwf	??_sprintf+3
  6136  0C20  024F               	subwf	sprintf@val+1,w
  6137  0C21  1D03               	skipz
  6138  0C22  2C25               	goto	u8445
  6139  0C23  0841               	movf	??_sprintf+2,w
  6140  0C24  024E               	subwf	sprintf@val,w
  6141  0C25                     u8445:	
  6142  0C25  1C03               	btfss	3,0
  6143  0C26  2C70               	goto	l9296
  6144  0C27  2C0C               	goto	L24
  6145  0C28                     l1273:	
  6146                           ;doprnt.c: 1314: case 0x80:
  6147                           
  6148                           
  6149                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6150  0C28  01D3               	clrf	sprintf@c
  6151  0C29                     L25:	
  6152  0C29  3004               	movlw	4
  6153  0C2A  0AD3               	incf	sprintf@c,f
  6154  0C2B  0653               	xorwf	sprintf@c,w
  6155  0C2C  1903               	btfsc	3,2
  6156  0C2D  2C70               	goto	l9296
  6157                           
  6158                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6159  0C2E  0853               	movf	sprintf@c,w
  6160  0C2F  00BF               	movwf	??_sprintf
  6161  0C30  3094               	movlw	low (_hexpowers| (0+32768))
  6162  0C31  01C0               	clrf	??_sprintf+1
  6163  0C32  35BF               	lslf	??_sprintf,f
  6164  0C33  0DC0               	rlf	??_sprintf+1,f
  6165  0C34  073F               	addwf	??_sprintf,w
  6166  0C35  0084               	movwf	4
  6167  0C36  30A8               	movlw	high (_hexpowers| (0+32768))
  6168  0C37  3D40               	addwfc	??_sprintf+1,w
  6169  0C38  0085               	movwf	5
  6170  0C39  3F00               	moviw [0]fsr0
  6171  0C3A  00C1               	movwf	??_sprintf+2
  6172  0C3B  3F01               	moviw [1]fsr0
  6173  0C3C  00C2               	movwf	??_sprintf+3
  6174  0C3D  024F               	subwf	sprintf@val+1,w
  6175  0C3E  1D03               	skipz
  6176  0C3F  2C42               	goto	u8465
  6177  0C40  0841               	movf	??_sprintf+2,w
  6178  0C41  024E               	subwf	sprintf@val,w
  6179  0C42                     u8465:	
  6180  0C42  1C03               	btfss	3,0
  6181  0C43  2C70               	goto	l9296
  6182  0C44  2C29               	goto	L25
  6183  0C45                     l1277:	
  6184                           ;doprnt.c: 1326: case 0x40:
  6185                           
  6186                           
  6187                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  6188  0C45  01D3               	clrf	sprintf@c
  6189  0C46                     L26:	
  6190  0C46  3006               	movlw	6
  6191  0C47  0AD3               	incf	sprintf@c,f
  6192  0C48  0653               	xorwf	sprintf@c,w
  6193  0C49  1903               	btfsc	3,2
  6194  0C4A  2C70               	goto	l9296
  6195                           
  6196                           ;doprnt.c: 1329: if(val < octpowers[c])
  6197  0C4B  0853               	movf	sprintf@c,w
  6198  0C4C  00BF               	movwf	??_sprintf
  6199  0C4D  307E               	movlw	low (_octpowers| (0+32768))
  6200  0C4E  01C0               	clrf	??_sprintf+1
  6201  0C4F  35BF               	lslf	??_sprintf,f
  6202  0C50  0DC0               	rlf	??_sprintf+1,f
  6203  0C51  073F               	addwf	??_sprintf,w
  6204  0C52  0084               	movwf	4
  6205  0C53  30A8               	movlw	high (_octpowers| (0+32768))
  6206  0C54  3D40               	addwfc	??_sprintf+1,w
  6207  0C55  0085               	movwf	5
  6208  0C56  3F00               	moviw [0]fsr0
  6209  0C57  00C1               	movwf	??_sprintf+2
  6210  0C58  3F01               	moviw [1]fsr0
  6211  0C59  00C2               	movwf	??_sprintf+3
  6212  0C5A  024F               	subwf	sprintf@val+1,w
  6213  0C5B  1D03               	skipz
  6214  0C5C  2C5F               	goto	u8485
  6215  0C5D  0841               	movf	??_sprintf+2,w
  6216  0C5E  024E               	subwf	sprintf@val,w
  6217  0C5F                     u8485:	
  6218  0C5F  1C03               	btfss	3,0
  6219  0C60  2C70               	goto	l9296
  6220  0C61  2C46               	goto	L26
  6221  0C62                     l9294:	
  6222  0C62  0855               	movf	sprintf@flag,w
  6223  0C63  39C0               	andlw	192
  6224                           
  6225                           ; Switch size 1, requested type "speed"
  6226                           ; Number of cases is 4, Range of values is 0 to 192
  6227                           ; switch strategies available:
  6228                           ; Name         Instructions Cycles
  6229                           ; simple_byte           13     7 (average)
  6230                           ; jumptable            260     6 (fixed)
  6231                           ;	Chosen strategy is simple_byte
  6232  0C64  1903               	skipnz
  6233  0C65  2C0B               	goto	l1268
  6234  0C66  3A40               	xorlw	64	; case 64
  6235  0C67  1903               	skipnz
  6236  0C68  2C45               	goto	l1277
  6237  0C69  3AC0               	xorlw	192	; case 128
  6238  0C6A  1903               	skipnz
  6239  0C6B  2C28               	goto	l1273
  6240  0C6C  3A40               	xorlw	64	; case 192
  6241  0C6D  1903               	skipnz
  6242  0C6E  2C0B               	goto	l1268
  6243  0C6F  2C70               	goto	l9296
  6244  0C70                     l9296:	
  6245                           
  6246                           ;doprnt.c: 1339: if(c < prec)
  6247  0C70  0853               	movf	sprintf@c,w
  6248  0C71  3A80               	xorlw	128
  6249  0C72  00BF               	movwf	??_sprintf
  6250  0C73  0850               	movf	sprintf@prec,w
  6251  0C74  3A80               	xorlw	128
  6252  0C75  02BF               	subwf	??_sprintf,f
  6253                           
  6254                           ;doprnt.c: 1340: c = prec;
  6255  0C76  0850               	movf	sprintf@prec,w
  6256  0C77  1803               	skipnc
  6257  0C78  2C7B               	goto	L39
  6258  0C79  00D3               	movwf	sprintf@c
  6259  0C7A  2C84               	goto	l9304
  6260  0C7B                     L39:	
  6261                           ;doprnt.c: 1341: else if(prec < c)
  6262                           
  6263  0C7B  3A80               	xorlw	128
  6264  0C7C  00BF               	movwf	??_sprintf
  6265  0C7D  0853               	movf	sprintf@c,w
  6266  0C7E  3A80               	xorlw	128
  6267  0C7F  02BF               	subwf	??_sprintf,f
  6268  0C80  1803               	skipnc
  6269  0C81  2C84               	goto	l9304
  6270                           
  6271                           ;doprnt.c: 1342: prec = c;
  6272  0C82  0853               	movf	sprintf@c,w
  6273  0C83  00D0               	movwf	sprintf@prec
  6274  0C84                     l9304:	
  6275                           
  6276                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6277  0C84  0851               	movf	sprintf@width,w
  6278  0C85  0452               	iorwf	sprintf@width+1,w
  6279  0C86  1903               	btfsc	3,2
  6280  0C87  2C90               	goto	l9310
  6281  0C88  0855               	movf	sprintf@flag,w
  6282  0C89  3903               	andlw	3
  6283  0C8A  1903               	btfsc	3,2
  6284  0C8B  2C90               	goto	l9310
  6285                           
  6286                           ;doprnt.c: 1346: width--;
  6287  0C8C  30FF               	movlw	-1
  6288  0C8D  07D1               	addwf	sprintf@width,f
  6289  0C8E  1C03               	skipc
  6290  0C8F  03D2               	decf	sprintf@width+1,f
  6291  0C90                     l9310:	
  6292                           
  6293                           ;doprnt.c: 1348: if(flag & 0x4000) {
  6294  0C90  1F56               	btfss	sprintf@flag+1,6
  6295  0C91  2CB0               	goto	l9318
  6296                           
  6297                           ;doprnt.c: 1349: if(width > prec)
  6298  0C92  0850               	movf	sprintf@prec,w
  6299  0C93  00BF               	movwf	??_sprintf
  6300  0C94  01C0               	clrf	??_sprintf+1
  6301  0C95  1BBF               	btfsc	??_sprintf,7
  6302  0C96  03C0               	decf	??_sprintf+1,f
  6303  0C97  0840               	movf	??_sprintf+1,w
  6304  0C98  3A80               	xorlw	128
  6305  0C99  00C1               	movwf	??_sprintf+2
  6306  0C9A  0852               	movf	sprintf@width+1,w
  6307  0C9B  3A80               	xorlw	128
  6308  0C9C  0241               	subwf	??_sprintf+2,w
  6309  0C9D  1D03               	skipz
  6310  0C9E  2CA1               	goto	u8545
  6311  0C9F  0851               	movf	sprintf@width,w
  6312  0CA0  023F               	subwf	??_sprintf,w
  6313  0CA1                     u8545:	
  6314  0CA1  1803               	skipnc
  6315  0CA2  2CAD               	goto	l9316
  6316                           
  6317                           ;doprnt.c: 1350: width -= prec;
  6318  0CA3  0020               	movlb	0	; select bank0
  6319  0CA4  0850               	movf	sprintf@prec,w
  6320  0CA5  00BF               	movwf	??_sprintf
  6321  0CA6  01C0               	clrf	??_sprintf+1
  6322  0CA7  1BBF               	btfsc	??_sprintf,7
  6323  0CA8  03C0               	decf	??_sprintf+1,f
  6324  0CA9  02D1               	subwf	sprintf@width,f
  6325  0CAA  0840               	movf	??_sprintf+1,w
  6326  0CAB  3BD2               	subwfb	sprintf@width+1,f
  6327  0CAC  2CB0               	goto	l9318
  6328  0CAD                     l9316:	
  6329                           
  6330                           ;doprnt.c: 1351: else
  6331                           ;doprnt.c: 1352: width = 0;
  6332  0CAD  0020               	movlb	0	; select bank0
  6333  0CAE  01D1               	clrf	sprintf@width
  6334  0CAF  01D2               	clrf	sprintf@width+1
  6335  0CB0                     l9318:	
  6336                           
  6337                           ;doprnt.c: 1353: }
  6338                           ;doprnt.c: 1357: if((flag & (
  6339                           ;doprnt.c: 1359: 0x04|
  6340                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
  6341  0CB0  30C4               	movlw	196
  6342  0CB1  0555               	andwf	sprintf@flag,w
  6343  0CB2  00BF               	movwf	??_sprintf
  6344  0CB3  3008               	movlw	8
  6345  0CB4  0556               	andwf	sprintf@flag+1,w
  6346  0CB5  00C0               	movwf	??_sprintf+1
  6347  0CB6  3040               	movlw	64
  6348  0CB7  063F               	xorwf	??_sprintf,w
  6349  0CB8  3008               	movlw	8
  6350  0CB9  1903               	skipnz
  6351  0CBA  0640               	xorwf	??_sprintf+1,w
  6352  0CBB  1D03               	btfss	3,2
  6353  0CBC  2CC3               	goto	l9324
  6354                           
  6355                           ;doprnt.c: 1362: if(width)
  6356  0CBD  0851               	movf	sprintf@width,w
  6357  0CBE  0452               	iorwf	sprintf@width+1,w
  6358  0CBF  1903               	btfsc	3,2
  6359  0CC0  2CE4               	goto	l9332
  6360                           
  6361                           ;doprnt.c: 1363: width--;
  6362  0CC1  30FF               	movlw	-1
  6363  0CC2  2CDD               	goto	L27
  6364  0CC3                     l9324:	
  6365                           
  6366                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  6367  0CC3  30C0               	movlw	192
  6368  0CC4  0555               	andwf	sprintf@flag,w
  6369  0CC5  00BF               	movwf	??_sprintf
  6370  0CC6  3008               	movlw	8
  6371  0CC7  0556               	andwf	sprintf@flag+1,w
  6372  0CC8  00C0               	movwf	??_sprintf+1
  6373  0CC9  3080               	movlw	128
  6374  0CCA  063F               	xorwf	??_sprintf,w
  6375  0CCB  3008               	movlw	8
  6376  0CCC  1903               	skipnz
  6377  0CCD  0640               	xorwf	??_sprintf+1,w
  6378  0CCE  1D03               	btfss	3,2
  6379  0CCF  2CE4               	goto	l9332
  6380                           
  6381                           ;doprnt.c: 1372: if(width > 2)
  6382  0CD0  0852               	movf	sprintf@width+1,w
  6383  0CD1  3A80               	xorlw	128
  6384  0CD2  00BF               	movwf	??_sprintf
  6385  0CD3  3080               	movlw	128
  6386  0CD4  023F               	subwf	??_sprintf,w
  6387  0CD5  1D03               	skipz
  6388  0CD6  2CD9               	goto	u8585
  6389  0CD7  3003               	movlw	3
  6390  0CD8  0251               	subwf	sprintf@width,w
  6391  0CD9                     u8585:	
  6392  0CD9  1C03               	skipc
  6393  0CDA  2CE1               	goto	l9330
  6394                           
  6395                           ;doprnt.c: 1373: width -= 2;
  6396  0CDB  30FE               	movlw	-2
  6397  0CDC  0020               	movlb	0	; select bank0
  6398  0CDD                     L27:	
  6399  0CDD  07D1               	addwf	sprintf@width,f
  6400  0CDE  1C03               	skipc
  6401  0CDF  03D2               	decf	sprintf@width+1,f
  6402  0CE0  2CE4               	goto	l9332
  6403  0CE1                     l9330:	
  6404                           
  6405                           ;doprnt.c: 1374: else
  6406                           ;doprnt.c: 1375: width = 0;
  6407  0CE1  0020               	movlb	0	; select bank0
  6408  0CE2  01D1               	clrf	sprintf@width
  6409  0CE3  01D2               	clrf	sprintf@width+1
  6410  0CE4                     l9332:	
  6411                           
  6412                           ;doprnt.c: 1376: }
  6413                           ;doprnt.c: 1381: if(width > c)
  6414  0CE4  0853               	movf	sprintf@c,w
  6415  0CE5  00BF               	movwf	??_sprintf
  6416  0CE6  01C0               	clrf	??_sprintf+1
  6417  0CE7  1BBF               	btfsc	??_sprintf,7
  6418  0CE8  03C0               	decf	??_sprintf+1,f
  6419  0CE9  0840               	movf	??_sprintf+1,w
  6420  0CEA  3A80               	xorlw	128
  6421  0CEB  00C1               	movwf	??_sprintf+2
  6422  0CEC  0852               	movf	sprintf@width+1,w
  6423  0CED  3A80               	xorlw	128
  6424  0CEE  0241               	subwf	??_sprintf+2,w
  6425  0CEF  1D03               	skipz
  6426  0CF0  2CF3               	goto	u8595
  6427  0CF1  0851               	movf	sprintf@width,w
  6428  0CF2  023F               	subwf	??_sprintf,w
  6429  0CF3                     u8595:	
  6430  0CF3  1803               	skipnc
  6431  0CF4  2CFF               	goto	l9336
  6432                           
  6433                           ;doprnt.c: 1382: width -= c;
  6434  0CF5  0020               	movlb	0	; select bank0
  6435  0CF6  0853               	movf	sprintf@c,w
  6436  0CF7  00BF               	movwf	??_sprintf
  6437  0CF8  01C0               	clrf	??_sprintf+1
  6438  0CF9  1BBF               	btfsc	??_sprintf,7
  6439  0CFA  03C0               	decf	??_sprintf+1,f
  6440  0CFB  02D1               	subwf	sprintf@width,f
  6441  0CFC  0840               	movf	??_sprintf+1,w
  6442  0CFD  3BD2               	subwfb	sprintf@width+1,f
  6443  0CFE  2D02               	goto	l9338
  6444  0CFF                     l9336:	
  6445                           
  6446                           ;doprnt.c: 1383: else
  6447                           ;doprnt.c: 1384: width = 0;
  6448  0CFF  0020               	movlb	0	; select bank0
  6449  0D00  01D1               	clrf	sprintf@width
  6450  0D01  01D2               	clrf	sprintf@width+1
  6451  0D02                     l9338:	
  6452                           
  6453                           ;doprnt.c: 1387: if(flag & 0x04) {
  6454  0D02  1D55               	btfss	sprintf@flag,2
  6455  0D03  2D48               	goto	l9374
  6456                           
  6457                           ;doprnt.c: 1392: if(flag & 0x03)
  6458  0D04  0855               	movf	sprintf@flag,w
  6459  0D05  3903               	andlw	3
  6460  0D06  1903               	btfsc	3,2
  6461  0D07  2D0E               	goto	l1297
  6462                           
  6463                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  6464  0D08  0854               	movf	sprintf@sp,w
  6465  0D09  0086               	movwf	6
  6466  0D0A  3001               	movlw	1	; select bank2/3
  6467  0D0B  0087               	movwf	7
  6468  0D0C  302D               	movlw	45
  6469  0D0D  2D36               	goto	L35
  6470  0D0E                     l1297:	
  6471                           
  6472                           ;doprnt.c: 1396: else
  6473                           ;doprnt.c: 1399: if(flag & 0x01)
  6474  0D0E  1C55               	btfss	sprintf@flag,0
  6475  0D0F  2D16               	goto	l9350
  6476                           
  6477                           ;doprnt.c: 1400: ((*sp++ = (' ')));
  6478  0D10  0854               	movf	sprintf@sp,w
  6479  0D11  0086               	movwf	6
  6480  0D12  3001               	movlw	1	; select bank2/3
  6481  0D13  0087               	movwf	7
  6482  0D14  3020               	movlw	32
  6483  0D15  2D36               	goto	L35
  6484  0D16                     l9350:	
  6485                           
  6486                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  6487  0D16  30C0               	movlw	192
  6488  0D17  0555               	andwf	sprintf@flag,w
  6489  0D18  00BF               	movwf	??_sprintf
  6490  0D19  3008               	movlw	8
  6491  0D1A  0556               	andwf	sprintf@flag+1,w
  6492  0D1B  00C0               	movwf	??_sprintf+1
  6493  0D1C  3080               	movlw	128
  6494  0D1D  063F               	xorwf	??_sprintf,w
  6495  0D1E  3008               	movlw	8
  6496  0D1F  1903               	skipnz
  6497  0D20  0640               	xorwf	??_sprintf+1,w
  6498  0D21  1D03               	btfss	3,2
  6499  0D22  2D38               	goto	l9366
  6500                           
  6501                           ;doprnt.c: 1404: ((*sp++ = ('0')));
  6502  0D23  0854               	movf	sprintf@sp,w
  6503  0D24  0086               	movwf	6
  6504  0D25  3001               	movlw	1	; select bank2/3
  6505  0D26  0087               	movwf	7
  6506  0D27  3030               	movlw	48
  6507  0D28  0081               	movwf	1
  6508  0D29  0AD4               	incf	sprintf@sp,f
  6509                           
  6510                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
  6511  0D2A  1AD5               	btfsc	sprintf@flag,5
  6512  0D2B  2D2E               	goto	l9360
  6513  0D2C  3078               	movlw	120
  6514  0D2D  2D2F               	goto	L29
  6515  0D2E                     l9360:	
  6516  0D2E  3058               	movlw	88
  6517  0D2F                     L29:	
  6518  0D2F  00C3               	movwf	_sprintf$2492
  6519  0D30  01C4               	clrf	_sprintf$2492+1
  6520  0D31  0854               	movf	sprintf@sp,w
  6521  0D32  0086               	movwf	6
  6522  0D33  3001               	movlw	1	; select bank2/3
  6523  0D34  0087               	movwf	7
  6524  0D35  0843               	movf	_sprintf$2492,w
  6525  0D36                     L35:	
  6526  0D36  0081               	movwf	1
  6527  0D37  0AD4               	incf	sprintf@sp,f
  6528  0D38                     l9366:	
  6529                           
  6530                           ;doprnt.c: 1412: }
  6531                           ;doprnt.c: 1415: if(width)
  6532  0D38  0851               	movf	sprintf@width,w
  6533  0D39  0452               	iorwf	sprintf@width+1,w
  6534  0D3A  1903               	btfsc	3,2
  6535  0D3B  2E21               	goto	l9440
  6536                           
  6537                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6538  0D3C  0854               	movf	sprintf@sp,w
  6539  0D3D  0086               	movwf	6
  6540  0D3E  3001               	movlw	1	; select bank2/3
  6541  0D3F  0087               	movwf	7
  6542  0D40  3030               	movlw	48
  6543  0D41  0081               	movwf	1
  6544  0D42  30FF               	movlw	-1
  6545  0D43  0AD4               	incf	sprintf@sp,f
  6546                           
  6547                           ;doprnt.c: 1418: while(--width);
  6548  0D44  07D1               	addwf	sprintf@width,f
  6549  0D45  1C03               	skipc
  6550  0D46  03D2               	decf	sprintf@width+1,f
  6551  0D47  2D38               	goto	l9366
  6552  0D48                     l9374:	
  6553                           
  6554                           ;doprnt.c: 1422: {
  6555                           ;doprnt.c: 1424: if(width
  6556                           ;doprnt.c: 1426: && !(flag & 0x08)
  6557                           ;doprnt.c: 1428: )
  6558  0D48  0851               	movf	sprintf@width,w
  6559  0D49  0452               	iorwf	sprintf@width+1,w
  6560  0D4A  1D03               	btfss	3,2
  6561  0D4B  19D5               	btfsc	sprintf@flag,3
  6562  0D4C  2D5C               	goto	l9384
  6563  0D4D                     l9378:	
  6564                           
  6565                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6566  0D4D  0854               	movf	sprintf@sp,w
  6567  0D4E  0086               	movwf	6
  6568  0D4F  3001               	movlw	1	; select bank2/3
  6569  0D50  0087               	movwf	7
  6570  0D51  3020               	movlw	32
  6571  0D52  0081               	movwf	1
  6572  0D53  30FF               	movlw	-1
  6573  0D54  0AD4               	incf	sprintf@sp,f
  6574                           
  6575                           ;doprnt.c: 1431: while(--width);
  6576  0D55  07D1               	addwf	sprintf@width,f
  6577  0D56  1C03               	skipc
  6578  0D57  03D2               	decf	sprintf@width+1,f
  6579  0D58  0851               	movf	sprintf@width,w
  6580  0D59  0452               	iorwf	sprintf@width+1,w
  6581  0D5A  1D03               	btfss	3,2
  6582  0D5B  2D4D               	goto	l9378
  6583  0D5C                     l9384:	
  6584                           
  6585                           ;doprnt.c: 1438: if(flag & 0x03)
  6586  0D5C  0855               	movf	sprintf@flag,w
  6587  0D5D  3903               	andlw	3
  6588  0D5E  1903               	btfsc	3,2
  6589  0D5F  2D66               	goto	l1313
  6590                           
  6591                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6592  0D60  0854               	movf	sprintf@sp,w
  6593  0D61  0086               	movwf	6
  6594  0D62  3001               	movlw	1	; select bank2/3
  6595  0D63  0087               	movwf	7
  6596  0D64  302D               	movlw	45
  6597  0D65  2D6D               	goto	L36
  6598  0D66                     l1313:	
  6599                           
  6600                           ;doprnt.c: 1443: else if(flag & 0x01)
  6601  0D66  1C55               	btfss	sprintf@flag,0
  6602  0D67  2D6F               	goto	l9394
  6603                           
  6604                           ;doprnt.c: 1444: ((*sp++ = (' ')));
  6605  0D68  0854               	movf	sprintf@sp,w
  6606  0D69  0086               	movwf	6
  6607  0D6A  3001               	movlw	1	; select bank2/3
  6608  0D6B  0087               	movwf	7
  6609  0D6C  3020               	movlw	32
  6610  0D6D                     L36:	
  6611  0D6D  0081               	movwf	1
  6612  0D6E  0AD4               	incf	sprintf@sp,f
  6613  0D6F                     l9394:	
  6614                           
  6615                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
  6616  0D6F  30C0               	movlw	192
  6617  0D70  0555               	andwf	sprintf@flag,w
  6618  0D71  00BF               	movwf	??_sprintf
  6619  0D72  3008               	movlw	8
  6620  0D73  0556               	andwf	sprintf@flag+1,w
  6621  0D74  00C0               	movwf	??_sprintf+1
  6622  0D75  3040               	movlw	64
  6623  0D76  063F               	xorwf	??_sprintf,w
  6624  0D77  3008               	movlw	8
  6625  0D78  1903               	skipnz
  6626  0D79  0640               	xorwf	??_sprintf+1,w
  6627  0D7A  1D03               	btfss	3,2
  6628  0D7B  2D82               	goto	l9400
  6629                           
  6630                           ;doprnt.c: 1449: ((*sp++ = ('0')));
  6631  0D7C  0854               	movf	sprintf@sp,w
  6632  0D7D  0086               	movwf	6
  6633  0D7E  3001               	movlw	1	; select bank2/3
  6634  0D7F  0087               	movwf	7
  6635  0D80  3030               	movlw	48
  6636  0D81  2E1F               	goto	L37
  6637  0D82                     l9400:	
  6638                           
  6639                           ;doprnt.c: 1450: else
  6640                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  6641  0D82  30C0               	movlw	192
  6642  0D83  0555               	andwf	sprintf@flag,w
  6643  0D84  00BF               	movwf	??_sprintf
  6644  0D85  3008               	movlw	8
  6645  0D86  0556               	andwf	sprintf@flag+1,w
  6646  0D87  00C0               	movwf	??_sprintf+1
  6647  0D88  3080               	movlw	128
  6648  0D89  063F               	xorwf	??_sprintf,w
  6649  0D8A  3008               	movlw	8
  6650  0D8B  1903               	skipnz
  6651  0D8C  0640               	xorwf	??_sprintf+1,w
  6652  0D8D  1D03               	btfss	3,2
  6653  0D8E  2E21               	goto	l9440
  6654                           
  6655                           ;doprnt.c: 1458: ((*sp++ = ('0')));
  6656  0D8F  0854               	movf	sprintf@sp,w
  6657  0D90  0086               	movwf	6
  6658  0D91  3001               	movlw	1	; select bank2/3
  6659  0D92  0087               	movwf	7
  6660  0D93  3030               	movlw	48
  6661  0D94  0081               	movwf	1
  6662  0D95  0AD4               	incf	sprintf@sp,f
  6663                           
  6664                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
  6665  0D96  1AD5               	btfsc	sprintf@flag,5
  6666  0D97  2D9A               	goto	l9410
  6667  0D98  3078               	movlw	120
  6668  0D99  2D9B               	goto	L30
  6669  0D9A                     l9410:	
  6670  0D9A  3058               	movlw	88
  6671  0D9B                     L30:	
  6672  0D9B  00C5               	movwf	_sprintf$2493
  6673  0D9C  01C6               	clrf	_sprintf$2493+1
  6674  0D9D  0854               	movf	sprintf@sp,w
  6675  0D9E  0086               	movwf	6
  6676  0D9F  3001               	movlw	1	; select bank2/3
  6677  0DA0  0087               	movwf	7
  6678  0DA1  0845               	movf	_sprintf$2493,w
  6679  0DA2  2E1F               	goto	L37
  6680  0DA3                     l9416:	
  6681                           ;doprnt.c: 1466: }
  6682                           ;doprnt.c: 1469: }
  6683                           ;doprnt.c: 1474: while(prec--) {
  6684                           
  6685                           
  6686                           ;doprnt.c: 1486: case 0xC0:
  6687                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6688  0DA3  300A               	movlw	10
  6689  0DA4  00B0               	movwf	___lwmod@divisor
  6690  0DA5  01B1               	clrf	___lwmod@divisor+1
  6691  0DA6  0850               	movf	sprintf@prec,w
  6692  0DA7  00BF               	movwf	??_sprintf
  6693  0DA8  308A               	movlw	low (_dpowers| (0+32768))
  6694  0DA9  01C0               	clrf	??_sprintf+1
  6695  0DAA  35BF               	lslf	??_sprintf,f
  6696  0DAB  0DC0               	rlf	??_sprintf+1,f
  6697  0DAC  073F               	addwf	??_sprintf,w
  6698  0DAD  0084               	movwf	4
  6699  0DAE  30A8               	movlw	high (_dpowers| (0+32768))
  6700  0DAF  3D40               	addwfc	??_sprintf+1,w
  6701  0DB0  0085               	movwf	5
  6702  0DB1  3F00               	moviw [0]fsr0
  6703  0DB2  00A9               	movwf	___lwdiv@divisor
  6704  0DB3  3F01               	moviw [1]fsr0
  6705  0DB4  00AA               	movwf	___lwdiv@divisor+1
  6706  0DB5  084F               	movf	sprintf@val+1,w
  6707  0DB6  00AC               	movwf	___lwdiv@dividend+1
  6708  0DB7  084E               	movf	sprintf@val,w
  6709  0DB8  00AB               	movwf	___lwdiv@dividend
  6710  0DB9  2648  3188         	fcall	___lwdiv
  6711  0DBB  082A               	movf	?___lwdiv+1,w
  6712  0DBC  00B3               	movwf	___lwmod@dividend+1
  6713  0DBD  0829               	movf	?___lwdiv,w
  6714  0DBE  00B2               	movwf	___lwmod@dividend
  6715  0DBF  267B  3188         	fcall	___lwmod
  6716  0DC1  0830               	movf	?___lwmod,w
  6717  0DC2  2E09               	goto	L38
  6718  0DC3                     l9418:	
  6719                           ;doprnt.c: 1491: break;
  6720                           
  6721                           
  6722                           ;doprnt.c: 1499: {
  6723                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6724  0DC3  084F               	movf	sprintf@val+1,w
  6725  0DC4  00AC               	movwf	___lwdiv@dividend+1
  6726  0DC5  084E               	movf	sprintf@val,w
  6727  0DC6  00AB               	movwf	___lwdiv@dividend
  6728  0DC7  0850               	movf	sprintf@prec,w
  6729  0DC8  00BF               	movwf	??_sprintf
  6730  0DC9  3094               	movlw	low (_hexpowers| (0+32768))
  6731  0DCA  01C0               	clrf	??_sprintf+1
  6732  0DCB  35BF               	lslf	??_sprintf,f
  6733  0DCC  0DC0               	rlf	??_sprintf+1,f
  6734  0DCD  073F               	addwf	??_sprintf,w
  6735  0DCE  0084               	movwf	4
  6736  0DCF  30A8               	movlw	high (_hexpowers| (0+32768))
  6737  0DD0  3D40               	addwfc	??_sprintf+1,w
  6738  0DD1  0085               	movwf	5
  6739  0DD2  3F00               	moviw [0]fsr0
  6740  0DD3  00A9               	movwf	___lwdiv@divisor
  6741  0DD4  3F01               	moviw [1]fsr0
  6742  0DD5  00AA               	movwf	___lwdiv@divisor+1
  6743  0DD6  2648  3188         	fcall	___lwdiv
  6744  0DD8  0829               	movf	?___lwdiv,w
  6745  0DD9  00CA               	movwf	sprintf@idx
  6746  0DDA  300F               	movlw	15
  6747  0DDB  05CA               	andwf	sprintf@idx,f
  6748                           
  6749                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  6750  0DDC  1AD5               	btfsc	sprintf@flag,5
  6751  0DDD  2DE2               	goto	l9426
  6752  0DDE  308A               	movlw	low (STR_17| (0+32768))
  6753  0DDF  00C7               	movwf	_sprintf$2499
  6754  0DE0  30A9               	movlw	high (STR_17| (0+32768))
  6755  0DE1  2DE5               	goto	L33
  6756  0DE2                     l9426:	
  6757  0DE2  3079               	movlw	low (STR_16| (0+32768))
  6758  0DE3  00C7               	movwf	_sprintf$2499
  6759  0DE4  30A9               	movlw	high (STR_16| (0+32768))
  6760  0DE5                     L33:	
  6761  0DE5  00C8               	movwf	_sprintf$2499+1
  6762  0DE6  00C0               	movwf	??_sprintf+1
  6763  0DE7  0847               	movf	_sprintf$2499,w
  6764  0DE8  00BF               	movwf	??_sprintf
  6765  0DE9  084A               	movf	sprintf@idx,w
  6766  0DEA  073F               	addwf	??_sprintf,w
  6767  0DEB  0084               	movwf	4
  6768  0DEC  0840               	movf	??_sprintf+1,w
  6769  0DED  1803               	skipnc
  6770  0DEE  0A40               	incf	??_sprintf+1,w
  6771  0DEF  0085               	movwf	5
  6772  0DF0  0800               	movf	0,w	;code access
  6773  0DF1  2E0A               	goto	L34
  6774  0DF2                     l9430:	
  6775                           ;doprnt.c: 1508: }
  6776                           ;doprnt.c: 1510: break;
  6777                           
  6778                           
  6779                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
  6780  0DF2  0850               	movf	sprintf@prec,w
  6781  0DF3  00BF               	movwf	??_sprintf
  6782  0DF4  307E               	movlw	low (_octpowers| (0+32768))
  6783  0DF5  01C0               	clrf	??_sprintf+1
  6784  0DF6  35BF               	lslf	??_sprintf,f
  6785  0DF7  0DC0               	rlf	??_sprintf+1,f
  6786  0DF8  073F               	addwf	??_sprintf,w
  6787  0DF9  0084               	movwf	4
  6788  0DFA  30A8               	movlw	high (_octpowers| (0+32768))
  6789  0DFB  3D40               	addwfc	??_sprintf+1,w
  6790  0DFC  0085               	movwf	5
  6791  0DFD  3F00               	moviw [0]fsr0
  6792  0DFE  00A9               	movwf	___lwdiv@divisor
  6793  0DFF  3F01               	moviw [1]fsr0
  6794  0E00  00AA               	movwf	___lwdiv@divisor+1
  6795  0E01  084F               	movf	sprintf@val+1,w
  6796  0E02  00AC               	movwf	___lwdiv@dividend+1
  6797  0E03  084E               	movf	sprintf@val,w
  6798  0E04  00AB               	movwf	___lwdiv@dividend
  6799  0E05  2648  3188         	fcall	___lwdiv
  6800  0E07  0829               	movf	?___lwdiv,w
  6801  0E08  3907               	andlw	7
  6802  0E09                     L38:	
  6803  0E09  3E30               	addlw	48
  6804  0E0A                     L34:	
  6805  0E0A  00D3               	movwf	sprintf@c
  6806                           
  6807                           ;doprnt.c: 1520: break;
  6808  0E0B  2E1A               	goto	l9436
  6809  0E0C                     l9434:	
  6810  0E0C  0855               	movf	sprintf@flag,w
  6811  0E0D  39C0               	andlw	192
  6812                           
  6813                           ; Switch size 1, requested type "speed"
  6814                           ; Number of cases is 4, Range of values is 0 to 192
  6815                           ; switch strategies available:
  6816                           ; Name         Instructions Cycles
  6817                           ; simple_byte           13     7 (average)
  6818                           ; jumptable            260     6 (fixed)
  6819                           ;	Chosen strategy is simple_byte
  6820  0E0E  1903               	skipnz
  6821  0E0F  2DA3               	goto	l9416
  6822  0E10  3A40               	xorlw	64	; case 64
  6823  0E11  1903               	skipnz
  6824  0E12  2DF2               	goto	l9430
  6825  0E13  3AC0               	xorlw	192	; case 128
  6826  0E14  1903               	skipnz
  6827  0E15  2DC3               	goto	l9418
  6828  0E16  3A40               	xorlw	64	; case 192
  6829  0E17  1903               	skipnz
  6830  0E18  2DA3               	goto	l9416
  6831  0E19  2E1A               	goto	l9436
  6832  0E1A                     l9436:	
  6833                           
  6834                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6835  0E1A  0854               	movf	sprintf@sp,w
  6836  0E1B  0086               	movwf	6
  6837  0E1C  3001               	movlw	1	; select bank2/3
  6838  0E1D  0087               	movwf	7
  6839  0E1E  0853               	movf	sprintf@c,w
  6840  0E1F                     L37:	
  6841  0E1F  0081               	movwf	1
  6842  0E20  0AD4               	incf	sprintf@sp,f
  6843  0E21                     l9440:	
  6844  0E21  03D0               	decf	sprintf@prec,f
  6845  0E22  0F50               	incfsz	sprintf@prec,w
  6846  0E23  2E0C               	goto	l9434
  6847                           
  6848                           ;doprnt.c: 1525: }
  6849                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
  6850  0E24  1DD5               	btfss	sprintf@flag,3
  6851  0E25  2A91               	goto	l9450
  6852  0E26  0852               	movf	sprintf@width+1,w
  6853  0E27  3A80               	xorlw	128
  6854  0E28  00BF               	movwf	??_sprintf
  6855  0E29  3080               	movlw	128
  6856  0E2A  023F               	subwf	??_sprintf,w
  6857  0E2B  1D03               	skipz
  6858  0E2C  2E2F               	goto	u8785
  6859  0E2D  3001               	movlw	1
  6860  0E2E  0251               	subwf	sprintf@width,w
  6861  0E2F                     u8785:	
  6862  0E2F  1C03               	skipc
  6863  0E30  2A91               	goto	l9450
  6864  0E31                     l9444:	
  6865                           
  6866                           ;doprnt.c: 1530: ((*sp++ = (' ')));
  6867  0E31  0020               	movlb	0	; select bank0
  6868  0E32  0854               	movf	sprintf@sp,w
  6869  0E33  0086               	movwf	6
  6870  0E34  3001               	movlw	1	; select bank2/3
  6871  0E35  0087               	movwf	7
  6872  0E36  3020               	movlw	32
  6873  0E37  0081               	movwf	1
  6874  0E38  30FF               	movlw	-1
  6875  0E39  0AD4               	incf	sprintf@sp,f
  6876                           
  6877                           ;doprnt.c: 1531: while(--width);
  6878  0E3A  07D1               	addwf	sprintf@width,f
  6879  0E3B  1C03               	skipc
  6880  0E3C  03D2               	decf	sprintf@width+1,f
  6881  0E3D  0851               	movf	sprintf@width,w
  6882  0E3E  0452               	iorwf	sprintf@width+1,w
  6883  0E3F  1903               	btfsc	3,2
  6884  0E40  2A91               	goto	l9450
  6885  0E41  2E31               	goto	l9444
  6886  0E42                     l9452:	
  6887                           
  6888                           ;doprnt.c: 1538: *sp = 0;
  6889  0E42  0854               	movf	sprintf@sp,w
  6890  0E43  0086               	movwf	6
  6891  0E44  3001               	movlw	1	; select bank2/3
  6892  0E45  0087               	movwf	7
  6893  0E46  0181               	clrf	1
  6894  0E47  0008               	return
  6895  0E48                     __end_of_sprintf:	
  6896  0E48                     __ptext73:	
  6897 ;; *************** function ___lwdiv *****************
  6898 ;; Defined at:
  6899 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  divisor         2    9[BANK0 ] unsigned int 
  6902 ;;  dividend        2   11[BANK0 ] unsigned int 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  quotient        2   14[BANK0 ] unsigned int 
  6905 ;;  counter         1   13[BANK0 ] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    9[BANK0 ] unsigned int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 1F/0
  6912 ;;		On exit  : 1F/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;Total ram usage:        7 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    4
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_sprintf
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           
  6930                           ;psect for function ___lwdiv
  6931  0E48                     ___lwdiv:	
  6932                           
  6933                           ;incstack = 0
  6934                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6935  0E48  01AE               	clrf	___lwdiv@quotient
  6936  0E49  01AF               	clrf	___lwdiv@quotient+1
  6937  0E4A  0829               	movf	___lwdiv@divisor,w
  6938  0E4B  042A               	iorwf	___lwdiv@divisor+1,w
  6939  0E4C  1903               	btfsc	3,2
  6940  0E4D  2E68               	goto	l9022
  6941  0E4E  01AD               	clrf	___lwdiv@counter
  6942  0E4F                     L41:	
  6943  0E4F  0AAD               	incf	___lwdiv@counter,f
  6944  0E50  1BAA               	btfsc	___lwdiv@divisor+1,7
  6945  0E51  2E55               	goto	l9010
  6946  0E52  35A9               	lslf	___lwdiv@divisor,f
  6947  0E53  0DAA               	rlf	___lwdiv@divisor+1,f
  6948  0E54  2E4F               	goto	L41
  6949  0E55                     l9010:	
  6950  0E55  35AE               	lslf	___lwdiv@quotient,f
  6951  0E56  0DAF               	rlf	___lwdiv@quotient+1,f
  6952  0E57  082A               	movf	___lwdiv@divisor+1,w
  6953  0E58  022C               	subwf	___lwdiv@dividend+1,w
  6954  0E59  1D03               	skipz
  6955  0E5A  2E5D               	goto	u8045
  6956  0E5B  0829               	movf	___lwdiv@divisor,w
  6957  0E5C  022B               	subwf	___lwdiv@dividend,w
  6958  0E5D                     u8045:	
  6959  0E5D  1C03               	skipc
  6960  0E5E  2E64               	goto	l9018
  6961  0E5F  0829               	movf	___lwdiv@divisor,w
  6962  0E60  02AB               	subwf	___lwdiv@dividend,f
  6963  0E61  082A               	movf	___lwdiv@divisor+1,w
  6964  0E62  3BAC               	subwfb	___lwdiv@dividend+1,f
  6965  0E63  142E               	bsf	___lwdiv@quotient,0
  6966  0E64                     l9018:	
  6967  0E64  36AA               	lsrf	___lwdiv@divisor+1,f
  6968  0E65  0CA9               	rrf	___lwdiv@divisor,f
  6969  0E66  0BAD               	decfsz	___lwdiv@counter,f
  6970  0E67  2E55               	goto	l9010
  6971  0E68                     l9022:	
  6972  0E68  082F               	movf	___lwdiv@quotient+1,w
  6973  0E69  00AA               	movwf	?___lwdiv+1
  6974  0E6A  082E               	movf	___lwdiv@quotient,w
  6975  0E6B  00A9               	movwf	?___lwdiv
  6976  0E6C  0008               	return
  6977  0E6D                     __end_of___lwdiv:	
  6978  0E6D                     __ptext70:	
  6979 ;; *************** function _isdigit *****************
  6980 ;; Defined at:
  6981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  c               1    wreg     unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  c               1   10[BANK0 ] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 1F/0
  6992 ;;		On exit  : 1F/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;Total ram usage:        2 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    4
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_sprintf
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           
  7010                           ;psect for function _isdigit
  7011  0E6D                     _isdigit:	
  7012                           
  7013                           ;incstack = 0
  7014                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7015                           ;isdigit@c stored from wreg
  7016  0E6D  00AA               	movwf	isdigit@c
  7017  0E6E  303A               	movlw	58
  7018  0E6F  01A9               	clrf	_isdigit$2685
  7019  0E70  022A               	subwf	isdigit@c,w
  7020  0E71  1803               	skipnc
  7021  0E72  2E79               	goto	l8928
  7022  0E73  3030               	movlw	48
  7023  0E74  022A               	subwf	isdigit@c,w
  7024  0E75  1C03               	skipc
  7025  0E76  2E79               	goto	l8928
  7026  0E77  01A9               	clrf	_isdigit$2685
  7027  0E78  0AA9               	incf	_isdigit$2685,f
  7028  0E79                     l8928:	
  7029  0E79  0C29               	rrf	_isdigit$2685,w
  7030  0E7A  0008               	return
  7031  0E7B                     __end_of_isdigit:	
  7032  0E7B                     __ptext72:	
  7033 ;; *************** function ___lwmod *****************
  7034 ;; Defined at:
  7035 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  divisor         2   16[BANK0 ] unsigned int 
  7038 ;;  dividend        2   18[BANK0 ] unsigned int 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  counter         1   20[BANK0 ] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  2   16[BANK0 ] unsigned int 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0
  7045 ;; Tracked objects:
  7046 ;;		On entry : 1F/0
  7047 ;;		On exit  : 1F/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;Total ram usage:        5 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    4
  7057 ;; This function calls:
  7058 ;;		Nothing
  7059 ;; This function is called by:
  7060 ;;		_sprintf
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           
  7065                           ;psect for function ___lwmod
  7066  0E7B                     ___lwmod:	
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7070  0E7B  0830               	movf	___lwmod@divisor,w
  7071  0E7C  0431               	iorwf	___lwmod@divisor+1,w
  7072  0E7D  1903               	btfsc	3,2
  7073  0E7E  2E96               	goto	l9042
  7074  0E7F  01B4               	clrf	___lwmod@counter
  7075  0E80                     L40:	
  7076  0E80  0AB4               	incf	___lwmod@counter,f
  7077  0E81  1BB1               	btfsc	___lwmod@divisor+1,7
  7078  0E82  2E86               	goto	l9034
  7079  0E83  35B0               	lslf	___lwmod@divisor,f
  7080  0E84  0DB1               	rlf	___lwmod@divisor+1,f
  7081  0E85  2E80               	goto	L40
  7082  0E86                     l9034:	
  7083  0E86  0831               	movf	___lwmod@divisor+1,w
  7084  0E87  0233               	subwf	___lwmod@dividend+1,w
  7085  0E88  1D03               	skipz
  7086  0E89  2E8C               	goto	u8085
  7087  0E8A  0830               	movf	___lwmod@divisor,w
  7088  0E8B  0232               	subwf	___lwmod@dividend,w
  7089  0E8C                     u8085:	
  7090  0E8C  1C03               	skipc
  7091  0E8D  2E92               	goto	l9038
  7092  0E8E  0830               	movf	___lwmod@divisor,w
  7093  0E8F  02B2               	subwf	___lwmod@dividend,f
  7094  0E90  0831               	movf	___lwmod@divisor+1,w
  7095  0E91  3BB3               	subwfb	___lwmod@dividend+1,f
  7096  0E92                     l9038:	
  7097  0E92  36B1               	lsrf	___lwmod@divisor+1,f
  7098  0E93  0CB0               	rrf	___lwmod@divisor,f
  7099  0E94  0BB4               	decfsz	___lwmod@counter,f
  7100  0E95  2E86               	goto	l9034
  7101  0E96                     l9042:	
  7102  0E96  0833               	movf	___lwmod@dividend+1,w
  7103  0E97  00B1               	movwf	?___lwmod+1
  7104  0E98  0832               	movf	___lwmod@dividend,w
  7105  0E99  00B0               	movwf	?___lwmod
  7106  0E9A  0008               	return
  7107  0E9B                     __end_of___lwmod:	
  7108  0E9B                     __ptext65:	
  7109 ;; *************** function _DemoOutput_ChannelError *****************
  7110 ;; Defined at:
  7111 ;;		line 283 in file "../src/demo_ouput.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  channel         1    wreg     unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  channel         1    0[COMMON] unsigned char 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg
  7120 ;; Tracked objects:
  7121 ;;		On entry : 1F/0
  7122 ;;		On exit  : 1F/0
  7123 ;;		Unchanged: 1F/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    4
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_Initialize_Demo
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _DemoOutput_ChannelError
  7141  0E9B                     _DemoOutput_ChannelError:	
  7142                           
  7143                           ;incstack = 0
  7144                           ; Regs used in _DemoOutput_ChannelError: [wreg]
  7145  0E9B  0008               	return
  7146  0E9C                     __end_of_DemoOutput_ChannelError:	
  7147  0E9C                     __ptext63:	
  7148 ;; *************** function _MiApp_ConnectionMode *****************
  7149 ;; Defined at:
  7150 ;;		line 3189 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  Mode            1    wreg     unsigned char 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  Mode            1   28[BANK0 ] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 1F/0
  7161 ;;		On exit  : 1F/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        2 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    5
  7171 ;; This function calls:
  7172 ;;		_NVMWrite
  7173 ;; This function is called by:
  7174 ;;		_Initialize_Demo
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           
  7179                           ;psect for function _MiApp_ConnectionMode
  7180  0E9C                     _MiApp_ConnectionMode:	
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _MiApp_ConnectionMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7184                           ;MiApp_ConnectionMode@Mode stored from wreg
  7185  0E9C  00BC               	movwf	MiApp_ConnectionMode@Mode
  7186                           
  7187                           ;miwi_p2p.c: 3191: if( Mode > 3 )
  7188  0E9D  3004               	movlw	4
  7189  0E9E  023C               	subwf	MiApp_ConnectionMode@Mode,w
  7190  0E9F  1803               	btfsc	3,0
  7191  0EA0  0008               	return
  7192                           
  7193                           ;miwi_p2p.c: 3194: }
  7194                           ;miwi_p2p.c: 3195: ConnMode = Mode;
  7195  0EA1  083C               	movf	MiApp_ConnectionMode@Mode,w
  7196  0EA2  0021               	movlb	1	; select bank1
  7197  0EA3  00EF               	movwf	_ConnMode^(0+128)
  7198                           
  7199                           ;miwi_p2p.c: 3196: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
  7200  0EA4  0020               	movlb	0	; select bank0
  7201  0EA5  00BB               	movwf	??_MiApp_ConnectionMode
  7202  0EA6  0E3B               	swapf	??_MiApp_ConnectionMode,w
  7203  0EA7  39F0               	andlw	240
  7204  0EA8  00BB               	movwf	??_MiApp_ConnectionMode
  7205  0EA9  087C               	movf	_P2PCapacityInfo,w
  7206  0EAA  390F               	andlw	15
  7207  0EAB  043B               	iorwf	??_MiApp_ConnectionMode,w
  7208  0EAC  00FC               	movwf	_P2PCapacityInfo
  7209                           
  7210                           ;miwi_p2p.c: 3199: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  7211  0EAD  30EF               	movlw	low _ConnMode
  7212  0EAE  00B4               	movwf	NVMWrite@source
  7213  0EAF  3000               	movlw	high _ConnMode
  7214  0EB0  00B5               	movwf	NVMWrite@source+1
  7215  0EB1  0022               	movlb	2	; select bank2
  7216  0EB2  0860               	movf	(_nvmConnMode+1)^(0+256),w
  7217  0EB3  0020               	movlb	0	; select bank0
  7218  0EB4  00B7               	movwf	NVMWrite@addr+1
  7219  0EB5  0022               	movlb	2	; select bank2
  7220  0EB6  085F               	movf	_nvmConnMode^(0+256),w
  7221  0EB7  0020               	movlb	0	; select bank0
  7222  0EB8  00B6               	movwf	NVMWrite@addr
  7223  0EB9  01B8               	clrf	NVMWrite@count
  7224  0EBA  0AB8               	incf	NVMWrite@count,f
  7225  0EBB  01B9               	clrf	NVMWrite@count+1
  7226  0EBC  3197  2F0A         	ljmp	l267
  7227  0EBE                     __end_of_MiApp_ConnectionMode:	
  7228  0EBE                     __ptext29:	
  7229 ;; *************** function _MiApp_EstablishConnection *****************
  7230 ;; Defined at:
  7231 ;;		line 2276 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  ActiveScanIn    1    wreg     unsigned char 
  7234 ;;  Mode            1   57[BANK1 ] unsigned char 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  ActiveScanIn    1    0[COMMON] unsigned char 
  7237 ;;  i               1   73[BANK1 ] unsigned char 
  7238 ;;  t2              4   69[BANK1 ] struct _MIWI_TICK
  7239 ;;  t1              4   64[BANK1 ] struct _MIWI_TICK
  7240 ;;  connectionIn    1   68[BANK1 ] unsigned char 
  7241 ;;  retry           1   63[BANK1 ] unsigned char 
  7242 ;;  tmpConnectio    1   62[BANK1 ] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      unsigned char 
  7245 ;; Registers used:
  7246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 1F/1
  7249 ;;		On exit  : 1C/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7252 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;Total ram usage:       17 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:   15
  7259 ;; This function calls:
  7260 ;;		_MiApp_DiscardMessage
  7261 ;;		_MiApp_MessageAvailable
  7262 ;;		_MiWi_TickGet
  7263 ;;		_SendPacket
  7264 ;; This function is called by:
  7265 ;;		_run_star_demo
  7266 ;;		_Initialize_Demo
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _MiApp_EstablishConnection
  7272  0EBE                     _MiApp_EstablishConnection:	
  7273                           
  7274                           ;miwi_p2p.c: 2278: uint8_t tmpConnectionMode = ConnMode;
  7275                           
  7276                           ;incstack = 0
  7277 ;; hardware stack exceeded
  7278                           ; Regs used in _MiApp_EstablishConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7279  0EBE  086F               	movf	_ConnMode^(0+128),w
  7280  0EBF  00DE               	movwf	MiApp_EstablishConnection@tmpConnectionMode^(0+128)
  7281                           
  7282                           ;miwi_p2p.c: 2279: uint8_t retry = 3;
  7283  0EC0  3003               	movlw	3
  7284  0EC1  00DF               	movwf	MiApp_EstablishConnection@retry^(0+128)
  7285                           
  7286                           ;miwi_p2p.c: 2280: uint8_t connectionInterval = 0;
  7287  0EC2  01E4               	clrf	MiApp_EstablishConnection@connectionInterval^(0+128)
  7288                           
  7289                           ;miwi_p2p.c: 2281: MIWI_TICK t1, t2;
  7290                           ;miwi_p2p.c: 2282: tick1 = MiWi_TickGet();
  7291  0EC3  3197  2789  3188   	fcall	_MiWi_TickGet
  7292  0EC6  082C               	movf	?_MiWi_TickGet+3,w
  7293  0EC7  0022               	movlb	2	; select bank2
  7294  0EC8  00C1               	movwf	(_tick1+3)^(0+256)
  7295  0EC9  0020               	movlb	0	; select bank0
  7296  0ECA  082B               	movf	?_MiWi_TickGet+2,w
  7297  0ECB  0022               	movlb	2	; select bank2
  7298  0ECC  00C0               	movwf	(_tick1+2)^(0+256)
  7299  0ECD  0020               	movlb	0	; select bank0
  7300  0ECE  082A               	movf	?_MiWi_TickGet+1,w
  7301  0ECF  0022               	movlb	2	; select bank2
  7302  0ED0  00BF               	movwf	(_tick1+1)^(0+256)
  7303  0ED1  0020               	movlb	0	; select bank0
  7304  0ED2  0829               	movf	?_MiWi_TickGet,w
  7305  0ED3  0022               	movlb	2	; select bank2
  7306  0ED4  00BE               	movwf	_tick1^(0+256)
  7307                           
  7308                           ;miwi_p2p.c: 2283: if( Mode == 0x01 )
  7309  0ED5  0021               	movlb	1	; select bank1
  7310  0ED6  0B59               	decfsz	MiApp_EstablishConnection@Mode^(0+128),w
  7311  0ED7  2ED9               	goto	l10734
  7312                           
  7313                           ;miwi_p2p.c: 2284: {
  7314                           ;miwi_p2p.c: 2285: return 0xFF;
  7315  0ED8  34FF               	retlw	255
  7316  0ED9                     l10734:	
  7317                           
  7318                           ;miwi_p2p.c: 2286: }
  7319                           ;miwi_p2p.c: 2288: t1 = MiWi_TickGet();
  7320  0ED9  3197  2789  3188   	fcall	_MiWi_TickGet
  7321  0EDC  082C               	movf	?_MiWi_TickGet+3,w
  7322  0EDD  0021               	movlb	1	; select bank1
  7323  0EDE  00E3               	movwf	(MiApp_EstablishConnection@t1+3)^(0+128)
  7324  0EDF  0020               	movlb	0	; select bank0
  7325  0EE0  082B               	movf	?_MiWi_TickGet+2,w
  7326  0EE1  0021               	movlb	1	; select bank1
  7327  0EE2  00E2               	movwf	(MiApp_EstablishConnection@t1+2)^(0+128)
  7328  0EE3  0020               	movlb	0	; select bank0
  7329  0EE4  082A               	movf	?_MiWi_TickGet+1,w
  7330  0EE5  0021               	movlb	1	; select bank1
  7331  0EE6  00E1               	movwf	(MiApp_EstablishConnection@t1+1)^(0+128)
  7332  0EE7  0020               	movlb	0	; select bank0
  7333  0EE8  0829               	movf	?_MiWi_TickGet,w
  7334  0EE9  0021               	movlb	1	; select bank1
  7335  0EEA  00E0               	movwf	MiApp_EstablishConnection@t1^(0+128)
  7336                           
  7337                           ;miwi_p2p.c: 2290: t1.Val -= (((uint32_t)(10000000)/32));
  7338  0EEB  30B4               	movlw	180
  7339  0EEC  02E0               	subwf	MiApp_EstablishConnection@t1^(0+128),f
  7340  0EED  30C4               	movlw	196
  7341  0EEE  3BE1               	subwfb	(MiApp_EstablishConnection@t1+1)^(0+128),f
  7342  0EEF  3004               	movlw	4
  7343  0EF0  3BE2               	subwfb	(MiApp_EstablishConnection@t1+2)^(0+128),f
  7344  0EF1  3000               	movlw	0
  7345  0EF2  3BE3               	subwfb	(MiApp_EstablishConnection@t1+3)^(0+128),f
  7346                           
  7347                           ;miwi_p2p.c: 2291: ConnMode = 0x00;
  7348  0EF3  01EF               	clrf	_ConnMode^(0+128)
  7349                           
  7350                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 1;
  7351  0EF4  166B               	bsf	_P2PStatus^(0+128),4	;volatile
  7352  0EF5                     l10792:	
  7353                           ;miwi_p2p.c: 2293: while( P2PStatus.bits.SearchConnection )
  7354                           
  7355  0EF5  0021               	movlb	1	; select bank1
  7356  0EF6  1E6B               	btfss	_P2PStatus^(0+128),4	;volatile
  7357  0EF7  2F75               	goto	l10794
  7358                           
  7359                           ;miwi_p2p.c: 2294: {
  7360                           ;miwi_p2p.c: 2295: t2 = MiWi_TickGet();
  7361  0EF8  3197  2789  3188   	fcall	_MiWi_TickGet
  7362  0EFB  082C               	movf	?_MiWi_TickGet+3,w
  7363  0EFC  0021               	movlb	1	; select bank1
  7364  0EFD  00E8               	movwf	(MiApp_EstablishConnection@t2+3)^(0+128)
  7365  0EFE  0020               	movlb	0	; select bank0
  7366  0EFF  082B               	movf	?_MiWi_TickGet+2,w
  7367  0F00  0021               	movlb	1	; select bank1
  7368  0F01  00E7               	movwf	(MiApp_EstablishConnection@t2+2)^(0+128)
  7369  0F02  0020               	movlb	0	; select bank0
  7370  0F03  082A               	movf	?_MiWi_TickGet+1,w
  7371  0F04  0021               	movlb	1	; select bank1
  7372  0F05  00E6               	movwf	(MiApp_EstablishConnection@t2+1)^(0+128)
  7373  0F06  0020               	movlb	0	; select bank0
  7374  0F07  0829               	movf	?_MiWi_TickGet,w
  7375  0F08  0021               	movlb	1	; select bank1
  7376  0F09  00E5               	movwf	MiApp_EstablishConnection@t2^(0+128)
  7377                           
  7378                           ;miwi_p2p.c: 2296: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
  7379  0F0A  0860               	movf	MiApp_EstablishConnection@t1^(0+128),w
  7380  0F0B  0265               	subwf	MiApp_EstablishConnection@t2^(0+128),w
  7381  0F0C  00DA               	movwf	??_MiApp_EstablishConnection^(0+128)
  7382  0F0D  0861               	movf	(MiApp_EstablishConnection@t1+1)^(0+128),w
  7383  0F0E  3B66               	subwfb	(MiApp_EstablishConnection@t2+1)^(0+128),w
  7384  0F0F  00DB               	movwf	(??_MiApp_EstablishConnection^(0+128)+1)
  7385  0F10  0862               	movf	(MiApp_EstablishConnection@t1+2)^(0+128),w
  7386  0F11  3B67               	subwfb	(MiApp_EstablishConnection@t2+2)^(0+128),w
  7387  0F12  00DC               	movwf	(??_MiApp_EstablishConnection^(0+128)+2)
  7388  0F13  0863               	movf	(MiApp_EstablishConnection@t1+3)^(0+128),w
  7389  0F14  3B68               	subwfb	(MiApp_EstablishConnection@t2+3)^(0+128),w
  7390  0F15  00DD               	movwf	(??_MiApp_EstablishConnection^(0+128)+3)
  7391  0F16  085D               	movf	(??_MiApp_EstablishConnection^(0+128)+3),w
  7392  0F17  1D03               	btfss	3,2
  7393  0F18  2F21               	goto	l10746
  7394  0F19  30B5               	movlw	181
  7395  0F1A  025A               	subwf	??_MiApp_EstablishConnection^(0+128),w
  7396  0F1B  30C4               	movlw	196
  7397  0F1C  3B5B               	subwfb	(??_MiApp_EstablishConnection^(0+128)+1),w
  7398  0F1D  3004               	movlw	4
  7399  0F1E  3B5C               	subwfb	(??_MiApp_EstablishConnection^(0+128)+2),w
  7400  0F1F  1C03               	btfss	3,0
  7401  0F20  2F6B               	goto	l635
  7402  0F21                     l10746:	
  7403                           
  7404                           ;miwi_p2p.c: 2297: {
  7405                           ;miwi_p2p.c: 2298: t1.Val = t2.Val;
  7406  0F21  0868               	movf	(MiApp_EstablishConnection@t2+3)^(0+128),w
  7407  0F22  00E3               	movwf	(MiApp_EstablishConnection@t1+3)^(0+128)
  7408  0F23  0867               	movf	(MiApp_EstablishConnection@t2+2)^(0+128),w
  7409  0F24  00E2               	movwf	(MiApp_EstablishConnection@t1+2)^(0+128)
  7410  0F25  0866               	movf	(MiApp_EstablishConnection@t2+1)^(0+128),w
  7411  0F26  00E1               	movwf	(MiApp_EstablishConnection@t1+1)^(0+128)
  7412  0F27  0865               	movf	MiApp_EstablishConnection@t2^(0+128),w
  7413  0F28  00E0               	movwf	MiApp_EstablishConnection@t1^(0+128)
  7414                           
  7415                           ;miwi_p2p.c: 2300: if( connectionInterval-- > 0 )
  7416  0F29  03E4               	decf	MiApp_EstablishConnection@connectionInterval^(0+128),f
  7417  0F2A  0F64               	incfsz	MiApp_EstablishConnection@connectionInterval^(0+128),w
  7418  0F2B  2EF5               	goto	l10792
  7419                           
  7420                           ;miwi_p2p.c: 2303: }
  7421                           ;miwi_p2p.c: 2304: connectionInterval = 2-1;
  7422  0F2C  01E4               	clrf	MiApp_EstablishConnection@connectionInterval^(0+128)
  7423  0F2D  0AE4               	incf	MiApp_EstablishConnection@connectionInterval^(0+128),f
  7424                           
  7425                           ;miwi_p2p.c: 2305: if( retry-- == 0 )
  7426  0F2E  03DF               	decf	MiApp_EstablishConnection@retry^(0+128),f
  7427  0F2F  0F5F               	incfsz	MiApp_EstablishConnection@retry^(0+128),w
  7428  0F30  2F33               	goto	l10760
  7429                           
  7430                           ;miwi_p2p.c: 2306: {
  7431                           ;miwi_p2p.c: 2308: P2PStatus.bits.SearchConnection = 0;
  7432  0F31  126B               	bcf	_P2PStatus^(0+128),4	;volatile
  7433  0F32  34FF               	retlw	255
  7434  0F33                     l10760:	
  7435                           
  7436                           ;miwi_p2p.c: 2310: }
  7437                           ;miwi_p2p.c: 2311: {TxData = 0;};
  7438  0F33  01EC               	clrf	_TxData^(0+128)
  7439                           
  7440                           ;miwi_p2p.c: 2312: TxBuffer[TxData++] = 0x81;
  7441  0F34  086C               	movf	_TxData^(0+128),w
  7442  0F35  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7443  0F36  0086               	movwf	6
  7444  0F37  3002               	movlw	2	; select bank4/5
  7445  0F38  0087               	movwf	7
  7446  0F39  3081               	movlw	129
  7447  0F3A  0081               	movwf	1
  7448  0F3B  0AEC               	incf	_TxData^(0+128),f
  7449                           
  7450                           ;miwi_p2p.c: 2313: TxBuffer[TxData++] = currentChannel;
  7451  0F3C  086C               	movf	_TxData^(0+128),w
  7452  0F3D  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7453  0F3E  0086               	movwf	6
  7454  0F3F  0020               	movlb	0	; select bank0
  7455  0F40  0863               	movf	_currentChannel,w
  7456  0F41  0081               	movwf	1
  7457  0F42  0021               	movlb	1	; select bank1
  7458  0F43  0AEC               	incf	_TxData^(0+128),f
  7459                           
  7460                           ;miwi_p2p.c: 2314: TxBuffer[TxData++] = P2PCapacityInfo;
  7461  0F44  086C               	movf	_TxData^(0+128),w
  7462  0F45  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7463  0F46  0086               	movwf	6
  7464  0F47  087C               	movf	_P2PCapacityInfo,w
  7465  0F48  0081               	movwf	1
  7466  0F49  0AEC               	incf	_TxData^(0+128),f
  7467                           
  7468                           ;miwi_p2p.c: 2321: {
  7469                           ;miwi_p2p.c: 2322: uint8_t i;
  7470                           ;miwi_p2p.c: 2324: for(i = 0; i < 1; i++)
  7471  0F4A  01E9               	clrf	MiApp_EstablishConnection@i^(0+128)
  7472  0F4B                     l10780:	
  7473                           
  7474                           ;miwi_p2p.c: 2325: {
  7475                           ;miwi_p2p.c: 2326: TxBuffer[TxData++] = AdditionalNodeID[i];
  7476  0F4B  086C               	movf	_TxData^(0+128),w
  7477  0F4C  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7478  0F4D  0086               	movwf	6
  7479  0F4E  3002               	movlw	2	; select bank4/5
  7480  0F4F  0087               	movwf	7
  7481  0F50  0869               	movf	MiApp_EstablishConnection@i^(0+128),w
  7482  0F51  3E6F               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
  7483  0F52  0084               	movwf	4
  7484  0F53  3001               	movlw	1	; select bank2/3
  7485  0F54  0085               	movwf	5
  7486  0F55  0800               	movf	0,w
  7487  0F56  0081               	movwf	1
  7488  0F57  0AEC               	incf	_TxData^(0+128),f
  7489  0F58  0AE9               	incf	MiApp_EstablishConnection@i^(0+128),f
  7490  0F59  1903               	btfsc	3,2
  7491  0F5A  2F4B               	goto	l10780
  7492                           
  7493                           ;miwi_p2p.c: 2327: }
  7494                           ;miwi_p2p.c: 2328: }
  7495                           ;miwi_p2p.c: 2343: SendPacket(1, myPANID, (0), 1, 0);
  7496  0F5B  086E               	movf	(_myPANID+1)^(0+128),w
  7497  0F5C  0020               	movlb	0	; select bank0
  7498  0F5D  00D4               	movwf	SendPacket@DestinationPANID+1
  7499  0F5E  0021               	movlb	1	; select bank1
  7500  0F5F  086D               	movf	_myPANID^(0+128),w
  7501  0F60  0020               	movlb	0	; select bank0
  7502  0F61  00D3               	movwf	SendPacket@DestinationPANID
  7503  0F62  3001               	movlw	1
  7504  0F63  01D5               	clrf	SendPacket@DestinationAddress
  7505  0F64  01D6               	clrf	SendPacket@DestinationAddress+1
  7506  0F65  01D7               	clrf	SendPacket@isCommand
  7507  0F66  0AD7               	incf	SendPacket@isCommand,f
  7508  0F67  01D8               	clrf	SendPacket@SecurityEnabled
  7509  0F68  3199  21DB  3188   	fcall	_SendPacket
  7510  0F6B                     l635:	
  7511                           
  7512                           ;miwi_p2p.c: 2360: }
  7513                           ;miwi_p2p.c: 2362: if( MiApp_MessageAvailable())
  7514  0F6B  3184  2456  3188   	fcall	_MiApp_MessageAvailable
  7515  0F6E  3A00               	xorlw	0
  7516  0F6F  1903               	skipnz
  7517  0F70  2EF5               	goto	l10792
  7518                           
  7519                           ;miwi_p2p.c: 2363: {
  7520                           ;miwi_p2p.c: 2364: MiApp_DiscardMessage();
  7521  0F71  3184  2435  3188   	fcall	_MiApp_DiscardMessage
  7522  0F74  2EF5               	goto	l10792
  7523  0F75                     l10794:	
  7524                           
  7525                           ;miwi_p2p.c: 2365: }
  7526                           ;miwi_p2p.c: 2367: }
  7527                           ;miwi_p2p.c: 2369: ConnMode = tmpConnectionMode;
  7528  0F75  085E               	movf	MiApp_EstablishConnection@tmpConnectionMode^(0+128),w
  7529  0F76  00EF               	movwf	_ConnMode^(0+128)
  7530                           
  7531                           ;miwi_p2p.c: 2374: return LatestConnection;
  7532  0F77  0022               	movlb	2	; select bank2
  7533  0F78  084D               	movf	_LatestConnection^(0+256),w
  7534  0F79  0008               	return
  7535  0F7A                     __end_of_MiApp_EstablishConnection:	
  7536  0F7A                     __ptext26:	
  7537 ;; *************** function _MiApp_SetChannel *****************
  7538 ;; Defined at:
  7539 ;;		line 2392 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  channel         1    wreg     unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  channel         1   27[BANK0 ] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      unsigned char 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 1E/0
  7550 ;;		On exit  : 1F/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;Total ram usage:        1 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    7
  7560 ;; This function calls:
  7561 ;;		_MiMAC_SetChannel
  7562 ;;		_NVMWrite
  7563 ;; This function is called by:
  7564 ;;		_MiApp_ProtocolInit
  7565 ;;		_Initialize_Demo
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function _MiApp_SetChannel
  7571  0F7A                     _MiApp_SetChannel:	
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in _MiApp_SetChannel: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7575                           ;MiApp_SetChannel@channel stored from wreg
  7576  0F7A  0020               	movlb	0	; select bank0
  7577  0F7B  00BB               	movwf	MiApp_SetChannel@channel
  7578                           
  7579                           ;miwi_p2p.c: 2394: if( MiMAC_SetChannel(channel, 0) )
  7580  0F7C  01B0               	clrf	MiMAC_SetChannel@offsetFreq
  7581  0F7D  31A7  27DF  3188   	fcall	_MiMAC_SetChannel
  7582  0F80  3A00               	xorlw	0
  7583  0F81  1903               	skipnz
  7584  0F82  3400               	retlw	0
  7585                           
  7586                           ;miwi_p2p.c: 2395: {
  7587                           ;miwi_p2p.c: 2396: currentChannel = channel;
  7588  0F83  083B               	movf	MiApp_SetChannel@channel,w
  7589  0F84  00E3               	movwf	_currentChannel
  7590                           
  7591                           ;miwi_p2p.c: 2398: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  7592  0F85  3063               	movlw	low _currentChannel
  7593  0F86  00B4               	movwf	NVMWrite@source
  7594  0F87  3000               	movlw	high _currentChannel
  7595  0F88  00B5               	movwf	NVMWrite@source+1
  7596  0F89  0022               	movlb	2	; select bank2
  7597  0F8A  0862               	movf	(_nvmCurrentChannel+1)^(0+256),w
  7598  0F8B  0020               	movlb	0	; select bank0
  7599  0F8C  00B7               	movwf	NVMWrite@addr+1
  7600  0F8D  0022               	movlb	2	; select bank2
  7601  0F8E  0861               	movf	_nvmCurrentChannel^(0+256),w
  7602  0F8F  0020               	movlb	0	; select bank0
  7603  0F90  00B6               	movwf	NVMWrite@addr
  7604  0F91  01B8               	clrf	NVMWrite@count
  7605  0F92  0AB8               	incf	NVMWrite@count,f
  7606  0F93  01B9               	clrf	NVMWrite@count+1
  7607  0F94  3197  270A         	fcall	_NVMWrite
  7608                           
  7609                           ;miwi_p2p.c: 2400: return 1;
  7610  0F96  3401               	retlw	1
  7611  0F97                     __end_of_MiApp_SetChannel:	
  7612                           ;miwi_p2p.c: 2401: }
  7613                           ;miwi_p2p.c: 2402: return 0;
  7614                           
  7615  0F97                     __ptext19:	
  7616 ;; *************** function _MiApp_StartConnection *****************
  7617 ;; Defined at:
  7618 ;;		line 2160 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  Mode            1    wreg     unsigned char 
  7621 ;;  ScanDuration    1   19[BANK0 ] unsigned char 
  7622 ;;  ChannelMap      4   20[BANK0 ] unsigned long 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;  Mode            1   24[BANK0 ] unsigned char 
  7625 ;;  tmp             2   25[BANK0 ] unsigned int 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      unsigned char 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 1F/0
  7632 ;;		On exit  : 1D/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7635 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;Total ram usage:        8 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    7
  7642 ;; This function calls:
  7643 ;;		_MiMAC_SetAltAddress
  7644 ;;		_MiWi_TickGet
  7645 ;; This function is called by:
  7646 ;;		_Initialize_Demo
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _MiApp_StartConnection
  7652  0F97                     _MiApp_StartConnection:	
  7653                           
  7654                           ;incstack = 0
  7655                           ; Regs used in _MiApp_StartConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7656                           ;MiApp_StartConnection@Mode stored from wreg
  7657  0F97  00B8               	movwf	MiApp_StartConnection@Mode
  7658                           
  7659                           ;miwi_p2p.c: 2162: switch(Mode)
  7660  0F98  2FD1               	goto	l11032
  7661  0F99                     l623:	
  7662                           ;miwi_p2p.c: 2163: {
  7663                           ;miwi_p2p.c: 2164: case 0x00:
  7664                           
  7665                           
  7666                           ;miwi_p2p.c: 2170: myPANID.Val = 0x1234;
  7667  0F99  3034               	movlw	52
  7668  0F9A  0021               	movlb	1	; select bank1
  7669  0F9B  00ED               	movwf	_myPANID^(0+128)
  7670  0F9C  3012               	movlw	18
  7671  0F9D  00EE               	movwf	(_myPANID^(0+128)+1)
  7672                           
  7673                           ;miwi_p2p.c: 2172: {
  7674                           ;miwi_p2p.c: 2173: uint16_t tmp = 0xFFFF;
  7675  0F9E  30FF               	movlw	255
  7676  0F9F  0020               	movlb	0	; select bank0
  7677  0FA0  00B9               	movwf	MiApp_StartConnection@tmp
  7678  0FA1  00BA               	movwf	MiApp_StartConnection@tmp+1
  7679                           
  7680                           ;miwi_p2p.c: 2174: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  7681  0FA2  3039               	movlw	low MiApp_StartConnection@tmp
  7682  0FA3  00AD               	movwf	MiMAC_SetAltAddress@Address
  7683  0FA4  3000               	movlw	high MiApp_StartConnection@tmp
  7684  0FA5  00AE               	movwf	MiMAC_SetAltAddress@Address+1
  7685  0FA6  30ED               	movlw	low _myPANID
  7686  0FA7  00AF               	movwf	MiMAC_SetAltAddress@PANID
  7687  0FA8  3000               	movlw	high _myPANID
  7688  0FA9  00B0               	movwf	MiMAC_SetAltAddress@PANID+1
  7689  0FAA  31A1  2109  3188   	fcall	_MiMAC_SetAltAddress
  7690                           
  7691                           ;miwi_p2p.c: 2175: }
  7692                           ;miwi_p2p.c: 2180: tick1 = MiWi_TickGet();
  7693  0FAD  3197  2789  3188   	fcall	_MiWi_TickGet
  7694  0FB0  082C               	movf	?_MiWi_TickGet+3,w
  7695  0FB1  0022               	movlb	2	; select bank2
  7696  0FB2  00C1               	movwf	(_tick1+3)^(0+256)
  7697  0FB3  0020               	movlb	0	; select bank0
  7698  0FB4  082B               	movf	?_MiWi_TickGet+2,w
  7699  0FB5  0022               	movlb	2	; select bank2
  7700  0FB6  00C0               	movwf	(_tick1+2)^(0+256)
  7701  0FB7  0020               	movlb	0	; select bank0
  7702  0FB8  082A               	movf	?_MiWi_TickGet+1,w
  7703  0FB9  0022               	movlb	2	; select bank2
  7704  0FBA  00BF               	movwf	(_tick1+1)^(0+256)
  7705  0FBB  0020               	movlb	0	; select bank0
  7706  0FBC  0829               	movf	?_MiWi_TickGet,w
  7707  0FBD  0022               	movlb	2	; select bank2
  7708  0FBE  00BE               	movwf	_tick1^(0+256)
  7709                           
  7710                           ;miwi_p2p.c: 2181: tick4 = MiWi_TickGet();
  7711  0FBF  3197  2789         	fcall	_MiWi_TickGet
  7712  0FC1  082C               	movf	?_MiWi_TickGet+3,w
  7713  0FC2  0022               	movlb	2	; select bank2
  7714  0FC3  00C5               	movwf	(_tick4+3)^(0+256)
  7715  0FC4  0020               	movlb	0	; select bank0
  7716  0FC5  082B               	movf	?_MiWi_TickGet+2,w
  7717  0FC6  0022               	movlb	2	; select bank2
  7718  0FC7  00C4               	movwf	(_tick4+2)^(0+256)
  7719  0FC8  0020               	movlb	0	; select bank0
  7720  0FC9  082A               	movf	?_MiWi_TickGet+1,w
  7721  0FCA  0022               	movlb	2	; select bank2
  7722  0FCB  00C3               	movwf	(_tick4+1)^(0+256)
  7723  0FCC  0020               	movlb	0	; select bank0
  7724  0FCD  0829               	movf	?_MiWi_TickGet,w
  7725  0FCE  0022               	movlb	2	; select bank2
  7726  0FCF  00C2               	movwf	_tick4^(0+256)
  7727  0FD0  0008               	return
  7728  0FD1                     l11032:	
  7729  0FD1  0838               	movf	MiApp_StartConnection@Mode,w
  7730                           
  7731                           ; Switch size 1, requested type "speed"
  7732                           ; Number of cases is 3, Range of values is 0 to 2
  7733                           ; switch strategies available:
  7734                           ; Name         Instructions Cycles
  7735                           ; simple_byte           10     6 (average)
  7736                           ; direct_byte           12     6 (fixed)
  7737                           ; jumptable            260     6 (fixed)
  7738                           ;	Chosen strategy is simple_byte
  7739  0FD2  3A00               	xorlw	0	; case 0
  7740  0FD3  1903               	skipnz
  7741  0FD4  2F99               	goto	l623
  7742  0FD5  3A01               	xorlw	1	; case 1
  7743  0FD6  1903               	skipnz
  7744  0FD7  2FDC               	goto	l624
  7745  0FD8  3A03               	xorlw	3	; case 2
  7746  0FD9  1903               	skipnz
  7747  0FDA  2FDC               	goto	l624
  7748  0FDB  2FDC               	goto	l624
  7749  0FDC                     l624:	
  7750  0FDC  0008               	return
  7751  0FDD                     __end_of_MiApp_StartConnection:	
  7752  0FDD                     __ptext7:	
  7753 ;; *************** function _Run_Demo *****************
  7754 ;; Defined at:
  7755 ;;		line 238 in file "../src/task.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 1D/0
  7766 ;;		On exit  : 1F/2
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:   17
  7776 ;; This function calls:
  7777 ;;		_run_star_demo
  7778 ;; This function is called by:
  7779 ;;		_main
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           
  7784                           ;psect for function _Run_Demo
  7785  0FDD                     _Run_Demo:	
  7786                           
  7787                           ;task.c: 244: run_star_demo();
  7788                           
  7789                           ;incstack = 0
  7790 ;; hardware stack exceeded
  7791                           ; Regs used in _Run_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7792  0FDD  3181  2913         	ljmp	l11084
  7793  0FDF                     __end_of_Run_Demo:	
  7794  0FDF                     __ptext6:	
  7795 ;; *************** function _LCDInitPortA *****************
  7796 ;; Defined at:
  7797 ;;		line 48 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  preRFIE         1   10[BANK0 ] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0, pclath, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 1F/0
  7808 ;;		On exit  : 1F/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;Total ram usage:        1 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    5
  7818 ;; This function calls:
  7819 ;;		_SPIPut
  7820 ;; This function is called by:
  7821 ;;		_LCD_Initialize
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function _LCDInitPortA
  7827  0FDF                     _LCDInitPortA:	
  7828                           
  7829                           ;lcd.c: 50: uint8_t preRFIE = INTCONbits.IOCIE;
  7830                           
  7831                           ;incstack = 0
  7832                           ; Regs used in _LCDInitPortA: [wreg+status,2+status,0+pclath+cstack]
  7833  0FDF  3000               	movlw	0
  7834  0FE0  198B               	btfsc	11,3	;volatile
  7835  0FE1  3001               	movlw	1
  7836  0FE2  00AA               	movwf	LCDInitPortA@preRFIE
  7837                           
  7838                           ;lcd.c: 51: INTCONbits.IOCIE = 0;
  7839  0FE3  118B               	bcf	11,3	;volatile
  7840                           
  7841                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  7842  0FE4  0022               	movlb	2	; select bank2
  7843  0FE5  110C               	bcf	12,2	;volatile
  7844                           
  7845                           ;lcd.c: 53: SPIPut(0x40);
  7846  0FE6  3040               	movlw	64
  7847  0FE7  3197  27ED  3188   	fcall	_SPIPut
  7848                           
  7849                           ;lcd.c: 54: SPIPut(0x00);
  7850  0FEA  3000               	movlw	0
  7851  0FEB  3197  27ED  3188   	fcall	_SPIPut
  7852                           
  7853                           ;lcd.c: 55: SPIPut(0x00);
  7854  0FEE  3000               	movlw	0
  7855  0FEF  3197  27ED         	fcall	_SPIPut
  7856                           
  7857                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  7858  0FF1  0022               	movlb	2	; select bank2
  7859  0FF2  150C               	bsf	12,2	;volatile
  7860                           
  7861                           ;lcd.c: 57: INTCONbits.IOCIE = preRFIE;
  7862  0FF3  0020               	movlb	0	; select bank0
  7863  0FF4  0C2A               	rrf	LCDInitPortA@preRFIE,w
  7864  0FF5  1C03               	skipc
  7865  0FF6  118B               	bcf	11,3	;volatile
  7866  0FF7  1803               	skipnc
  7867  0FF8  158B               	bsf	11,3	;volatile
  7868  0FF9  0008               	return
  7869  0FFA                     __end_of_LCDInitPortA:	
  7870  0FFA                     __ptext4:	
  7871 ;; *************** function _LCDInitSPI *****************
  7872 ;; Defined at:
  7873 ;;		line 41 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 1F/7
  7884 ;;		On exit  : 1F/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    4
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_LCD_Initialize
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function _LCDInitSPI
  7903  0FFA                     _LCDInitSPI:	
  7904                           
  7905                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
  7906                           
  7907                           ;incstack = 0
  7908                           ; Regs used in _LCDInitSPI: []
  7909  0FFA  0021               	movlb	1	; select bank1
  7910  0FFB  128E               	bcf	14,5	;volatile
  7911                           
  7912                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
  7913  0FFC  118E               	bcf	14,3	;volatile
  7914                           
  7915                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
  7916  0FFD  0020               	movlb	0	; select bank0
  7917  0FFE  1191               	bcf	17,3	;volatile
  7918  0FFF  0008               	return
  7919  1000                     __end_of_LCDInitSPI:	
  7920                           
  7921                           	psect	bssCOMMON
  7922  007C                     __pbssCOMMON:	
  7923  007C                     _P2PCapacityInfo:	
  7924  007C                     	ds	1
  7925  007D                     _timerExtension1:	
  7926  007D                     	ds	1
  7927                           
  7928                           	psect	bssBANK0
  7929  005E                     __pbssBANK0:	
  7930  005E                     _MRF24J40Status:	
  7931  005E                     	ds	1
  7932  005F                     _i:	
  7933  005F                     	ds	1
  7934  0060                     _nvmConnectionTable:	
  7935  0060                     	ds	2
  7936  0062                     _conn_size:	
  7937  0062                     	ds	1
  7938  0063                     _currentChannel:	
  7939  0063                     	ds	1
  7940  0064                     _myConnectionIndex_in_PanCo:	
  7941  0064                     	ds	1
  7942  0065                     _role:	
  7943  0065                     	ds	1
  7944                           
  7945                           	psect	dataBANK0
  7946  0066                     __pdataBANK0:	
  7947  0066                     _BankIndex:	
  7948  0066                     	ds	1
  7949                           
  7950                           	psect	bssBANK1
  7951  00EB                     __pbssBANK1:	
  7952  00EB                     _P2PStatus:	
  7953  00EB                     	ds	1
  7954  00EC                     _TxData:	
  7955  00EC                     	ds	1
  7956  00ED                     _myPANID:	
  7957  00ED                     	ds	2
  7958                           
  7959                           	psect	dataBANK1
  7960  00EF                     __pdataBANK1:	
  7961  00EF                     _ConnMode:	
  7962  00EF                     	ds	1
  7963                           
  7964                           	psect	bssBANK2
  7965  0120                     __pbssBANK2:	
  7966  0120                     _MACRxPacket:	
  7967  0120                     	ds	11
  7968  012B                     _rxMessage:	
  7969  012B                     	ds	10
  7970  0135                     _link_stat:	
  7971  0135                     	ds	5
  7972  013A                     _nvmDelayTick:	
  7973  013A                     	ds	4
  7974  013E                     _tick1:	
  7975  013E                     	ds	4
  7976  0142                     _tick4:	
  7977  0142                     	ds	4
  7978  0146                     _MACInitParams:	
  7979  0146                     	ds	2
  7980  0148                     _failureCounter:	
  7981  0148                     	ds	2
  7982  014A                     _nextEEPosition:	
  7983  014A                     	ds	2
  7984  014C                     _IEEESeqNum:	
  7985  014C                     	ds	1
  7986  014D                     _LatestConnection:	
  7987  014D                     	ds	1
  7988  014E                     _MACCurrentChannel:	
  7989  014E                     	ds	1
  7990  014F                     _MyindexinPC:	
  7991  014F                     	ds	1
  7992  0150                     _PUSH_BUTTON_pressed:	
  7993  0150                     	ds	1
  7994  0151                     _RxNum:	
  7995  0151                     	ds	1
  7996  0152                     _TxNum:	
  7997  0152                     	ds	1
  7998  0153                     _TxSynCount:	
  7999  0153                     	ds	1
  8000  0154                     _chk_sel_status:	
  8001  0154                     	ds	1
  8002  0155                     _display_connections:	
  8003  0155                     	ds	1
  8004  0156                     _end_nodes:	
  8005  0156                     	ds	1
  8006  0157                     _lost_connection:	
  8007  0157                     	ds	1
  8008  0158                     _rec_ack:	
  8009  0158                     	ds	1
  8010  0159                     _temp_bit:	
  8011  0159                     	ds	1
  8012  015A                     _timerExtension2:	
  8013  015A                     	ds	1
  8014  015B                     _MAC_PANID:	
  8015  015B                     	ds	2
  8016  015D                     _myNetworkAddress:	
  8017  015D                     	ds	2
  8018  015F                     _nvmConnMode:	
  8019  015F                     	ds	2
  8020  0161                     _nvmCurrentChannel:	
  8021  0161                     	ds	2
  8022  0163                     _nvmEdc:	
  8023  0163                     	ds	2
  8024  0165                     _nvmMyPANID:	
  8025  0165                     	ds	2
  8026  0167                     _nvmOutFrameCounter:	
  8027  0167                     	ds	2
  8028  0169                     _nvmRole:	
  8029  0169                     	ds	2
  8030  016B                     _nvmmyIndex:	
  8031  016B                     	ds	2
  8032                           
  8033                           	psect	dataBANK2
  8034  016F                     __pdataBANK2:	
  8035  016F                     _AdditionalNodeID:	
  8036  016F                     	ds	1
  8037                           
  8038                           	psect	bssBANK3
  8039  01A0                     __pbssBANK3:	
  8040  01A0                     _END_DEVICES_Short_Address:	
  8041  01A0                     	ds	20
  8042  01B4                     _permanent_connections:	
  8043  01B4                     	ds	5
  8044  01B9                     _PUSH_BUTTON_press_time:	
  8045  01B9                     	ds	4
  8046  01BD                     _t1:	
  8047  01BD                     	ds	4
  8048  01C1                     _t2:	
  8049  01C1                     	ds	4
  8050  01C5                     _LCDText:	
  8051  01C5                     	ds	33
  8052                           
  8053                           	psect	dataBANK3
  8054  01E6                     __pdataBANK3:	
  8055  01E6                     _myLongAddress:	
  8056  01E6                     	ds	8
  8057                           
  8058                           	psect	bssBANK4
  8059  0220                     __pbssBANK4:	
  8060  0220                     _TxBuffer:	
  8061  0220                     	ds	40
  8062                           
  8063                           	psect	bssBANK5
  8064  02A0                     __pbssBANK5:	
  8065  02A0                     _ConnectionTable:	
  8066  02A0                     	ds	70
  8067                           
  8068                           	psect	clrtext
  8069  06F2                     clear_ram0:	
  8070                           ;	Called with FSR0 containing the base address, and
  8071                           ;	btemp/btemp+1 has the size to clear
  8072                           
  8073  06F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  8074  06F3                     clrloop0:	
  8075  06F3  3001               	movlw	1
  8076  06F4  0180               	clrf	0	;clear RAM location pointed to by FSR
  8077  06F5  3101               	addfsr 0,1
  8078  06F6  02FE               	subwf	126,f
  8079  06F7  3000               	movlw	0
  8080  06F8  3BFF               	subwfb	127,f
  8081  06F9  087F               	movf	127,w
  8082  06FA  047E               	iorwf	126,w
  8083  06FB  1903               	btfsc	3,2
  8084  06FC  3400               	retlw	0	;all done for this memory range, return
  8085  06FD  2EF3               	goto	clrloop0	;have we reached the end yet?
  8086                           
  8087                           	psect	cstackBANK4
  8088  0248                     __pcstackBANK4:	
  8089  0248                     ??_run_star_demo:	
  8090                           
  8091                           ; 1 bytes @ 0x0
  8092  0248                     	ds	4
  8093  024C                     run_star_demo@sw_layer_ack_status:	
  8094                           
  8095                           ; 1 bytes @ 0x4
  8096  024C                     	ds	1
  8097  024D                     run_star_demo@update_ed:	
  8098                           
  8099                           ; 1 bytes @ 0x5
  8100  024D                     	ds	1
  8101  024E                     run_star_demo@PressedButton:	
  8102                           
  8103                           ; 1 bytes @ 0x6
  8104  024E                     	ds	1
  8105  024F                     run_star_demo@switch_val:	
  8106                           
  8107                           ; 1 bytes @ 0x7
  8108  024F                     	ds	1
  8109  0250                     run_star_demo@select_ed:	
  8110                           
  8111                           ; 1 bytes @ 0x8
  8112  0250                     	ds	1
  8113                           
  8114                           	psect	cstackBANK2
  8115  016D                     __pcstackBANK2:	
  8116  016D                     Initialize_Demo@freezer_enable:	
  8117                           
  8118                           ; 1 bytes @ 0x0
  8119  016D                     	ds	1
  8120  016E                     Initialize_Demo@i:	
  8121                           
  8122                           ; 1 bytes @ 0x1
  8123  016E                     	ds	1
  8124                           
  8125                           	psect	cstackBANK1
  8126  00A0                     __pcstackBANK1:	
  8127  00A0                     ??_freezer_feature:	
  8128  00A0                     MiMAC_SendPacket@t1:	
  8129                           ; 1 bytes @ 0x0
  8130                           
  8131                           
  8132                           ; 4 bytes @ 0x0
  8133  00A0                     	ds	4
  8134  00A4                     MiMAC_SendPacket@t2:	
  8135  00A4                     freezer_feature@tick1:	
  8136                           ; 4 bytes @ 0x4
  8137                           
  8138                           
  8139                           ; 4 bytes @ 0x4
  8140  00A4                     	ds	4
  8141  00A8                     MiMAC_SendPacket@IntraPAN:	
  8142  00A8                     freezer_feature@tick2:	
  8143                           ; 1 bytes @ 0x8
  8144                           
  8145                           
  8146                           ; 4 bytes @ 0x8
  8147  00A8                     	ds	1
  8148  00A9                     MiMAC_SendPacket@frameControl:	
  8149                           
  8150                           ; 1 bytes @ 0x9
  8151  00A9                     	ds	1
  8152  00AA                     MiMAC_SendPacket@headerLength:	
  8153                           
  8154                           ; 1 bytes @ 0xA
  8155  00AA                     	ds	1
  8156  00AB                     MiMAC_SendPacket@i:	
  8157                           
  8158                           ; 1 bytes @ 0xB
  8159  00AB                     	ds	1
  8160  00AC                     MiMAC_SendPacket@loc:	
  8161  00AC                     freezer_feature@switch_val:	
  8162                           ; 1 bytes @ 0xC
  8163                           
  8164                           
  8165                           ; 1 bytes @ 0xC
  8166  00AC                     	ds	1
  8167  00AD                     SendPacket@status:	
  8168                           
  8169                           ; 1 bytes @ 0xD
  8170  00AD                     	ds	1
  8171  00AE                     SendPacket@Broadcast:	
  8172                           
  8173                           ; 1 bytes @ 0xE
  8174  00AE                     	ds	1
  8175  00AF                     SendPacket@tParam:	
  8176                           
  8177                           ; 7 bytes @ 0xF
  8178  00AF                     	ds	7
  8179  00B6                     ??_MiApp_BroadcastConnectionTable:	
  8180  00B6                     ?_SW_Ack_SrED:	
  8181                           ; 1 bytes @ 0x16
  8182                           
  8183  00B6                     ?_MiApp_UnicastAddress:	
  8184                           ; 1 bytes @ 0x16
  8185                           
  8186  00B6                     MiApp_UnicastAddress@PermanentAddr:	
  8187                           ; 1 bytes @ 0x16
  8188                           
  8189  00B6                     SW_Ack_SrED@Dest_Addr:	
  8190                           ; 1 bytes @ 0x16
  8191                           
  8192  00B6                     MiApp_RemoveConnection@j:	
  8193                           ; 2 bytes @ 0x16
  8194                           
  8195                           
  8196                           ; 2 bytes @ 0x16
  8197  00B6                     	ds	1
  8198  00B7                     MiApp_UnicastAddress@SecEn:	
  8199                           
  8200                           ; 1 bytes @ 0x17
  8201  00B7                     	ds	1
  8202  00B8                     ?_MiApp_UnicastConnection:	
  8203  00B8                     MiApp_UnicastConnection@SecEn:	
  8204                           ; 1 bytes @ 0x18
  8205                           
  8206  00B8                     MiApp_RemoveConnection@j_1306:	
  8207                           ; 1 bytes @ 0x18
  8208                           
  8209                           
  8210                           ; 2 bytes @ 0x18
  8211  00B8                     	ds	1
  8212  00B9                     ?_Forward_Packet_PANCr_to_EDy:	
  8213  00B9                     Forward_Packet_PANCr_to_EDy@fw_payload:	
  8214                           ; 1 bytes @ 0x19
  8215                           
  8216                           
  8217                           ; 2 bytes @ 0x19
  8218  00B9                     	ds	1
  8219  00BA                     MiApp_RemoveConnection@ConnectionIndex:	
  8220                           
  8221                           ; 1 bytes @ 0x1A
  8222  00BA                     	ds	1
  8223  00BB                     Forward_Packet_PANCr_to_EDy@index:	
  8224  00BB                     MiApp_BroadcastConnectionTable@count:	
  8225                           ; 1 bytes @ 0x1B
  8226                           
  8227  00BB                     MiApp_RemoveConnection@i:	
  8228                           ; 1 bytes @ 0x1B
  8229                           
  8230                           
  8231                           ; 1 bytes @ 0x1B
  8232  00BB                     	ds	1
  8233  00BC                     MiApp_BroadcastConnectionTable@broadcast_count:	
  8234  00BC                     Forward_Packet_PANCr_to_EDy@EDxAddress:	
  8235                           ; 1 bytes @ 0x1C
  8236                           
  8237                           
  8238                           ; 2 bytes @ 0x1C
  8239  00BC                     	ds	1
  8240  00BD                     MiApp_BroadcastConnectionTable@k:	
  8241                           
  8242                           ; 1 bytes @ 0x1D
  8243  00BD                     	ds	1
  8244  00BE                     Forward_Packet_PANCr_to_EDy@status:	
  8245  00BE                     MiApp_BroadcastConnectionTable@i:	
  8246                           ; 1 bytes @ 0x1E
  8247                           
  8248                           
  8249                           ; 1 bytes @ 0x1E
  8250  00BE                     	ds	1
  8251  00BF                     Forward_Packet_PANCr_to_EDy@i:	
  8252  00BF                     MiApp_BroadcastConnectionTable@j:	
  8253                           ; 1 bytes @ 0x1F
  8254                           
  8255                           
  8256                           ; 1 bytes @ 0x1F
  8257  00BF                     	ds	1
  8258  00C0                     ??_P2PTasks:	
  8259                           
  8260                           ; 1 bytes @ 0x20
  8261  00C0                     	ds	4
  8262  00C4                     P2PTasks@tmpTick:	
  8263                           
  8264                           ; 4 bytes @ 0x24
  8265  00C4                     	ds	4
  8266  00C8                     P2PTasks@FW_Stat:	
  8267                           
  8268                           ; 1 bytes @ 0x28
  8269  00C8                     	ds	1
  8270  00C9                     P2PTasks@tmp:	
  8271                           
  8272                           ; 2 bytes @ 0x29
  8273  00C9                     	ds	2
  8274  00CB                     P2PTasks@tick2:	
  8275                           
  8276                           ; 4 bytes @ 0x2B
  8277  00CB                     	ds	4
  8278  00CF                     P2PTasks@final_index:	
  8279                           
  8280                           ; 1 bytes @ 0x2F
  8281  00CF                     	ds	1
  8282  00D0                     P2PTasks@tick3:	
  8283                           
  8284                           ; 4 bytes @ 0x30
  8285  00D0                     	ds	4
  8286  00D4                     P2PTasks@p:	
  8287                           
  8288                           ; 1 bytes @ 0x34
  8289  00D4                     	ds	1
  8290  00D5                     P2PTasks@p_1147:	
  8291                           
  8292                           ; 1 bytes @ 0x35
  8293  00D5                     	ds	1
  8294  00D6                     P2PTasks@status:	
  8295                           
  8296                           ; 1 bytes @ 0x36
  8297  00D6                     	ds	1
  8298  00D7                     P2PTasks@i:	
  8299                           
  8300                           ; 1 bytes @ 0x37
  8301  00D7                     	ds	1
  8302  00D8                     ??_MiApp_MessageAvailable:	
  8303                           
  8304                           ; 1 bytes @ 0x38
  8305  00D8                     	ds	1
  8306  00D9                     ??_MiApp_UnicastStar:	
  8307  00D9                     ?_MiApp_EstablishConnection:	
  8308                           ; 1 bytes @ 0x39
  8309                           
  8310  00D9                     MiApp_EstablishConnection@Mode:	
  8311                           ; 1 bytes @ 0x39
  8312                           
  8313  00D9                     Process_RxMessage@User_data_status:	
  8314                           ; 1 bytes @ 0x39
  8315                           
  8316                           
  8317                           ; 1 bytes @ 0x39
  8318  00D9                     	ds	1
  8319  00DA                     ??_MiApp_EstablishConnection:	
  8320                           
  8321                           ; 1 bytes @ 0x3A
  8322  00DA                     	ds	3
  8323  00DD                     MiApp_UnicastStar@t1:	
  8324                           
  8325                           ; 4 bytes @ 0x3D
  8326  00DD                     	ds	1
  8327  00DE                     MiApp_EstablishConnection@tmpConnectionMode:	
  8328                           
  8329                           ; 1 bytes @ 0x3E
  8330  00DE                     	ds	1
  8331  00DF                     MiApp_EstablishConnection@retry:	
  8332                           
  8333                           ; 1 bytes @ 0x3F
  8334  00DF                     	ds	1
  8335  00E0                     MiApp_EstablishConnection@t1:	
  8336                           
  8337                           ; 4 bytes @ 0x40
  8338  00E0                     	ds	1
  8339  00E1                     MiApp_UnicastStar@t2:	
  8340                           
  8341                           ; 4 bytes @ 0x41
  8342  00E1                     	ds	3
  8343  00E4                     MiApp_EstablishConnection@connectionInterval:	
  8344                           
  8345                           ; 1 bytes @ 0x44
  8346  00E4                     	ds	1
  8347  00E5                     MiApp_UnicastStar@SecEn:	
  8348  00E5                     MiApp_EstablishConnection@t2:	
  8349                           ; 1 bytes @ 0x45
  8350                           
  8351                           
  8352                           ; 4 bytes @ 0x45
  8353  00E5                     	ds	4
  8354  00E9                     MiApp_EstablishConnection@i:	
  8355                           
  8356                           ; 1 bytes @ 0x49
  8357  00E9                     	ds	1
  8358  00EA                     main@freezer_enable:	
  8359                           
  8360                           ; 1 bytes @ 0x4A
  8361  00EA                     	ds	1
  8362                           
  8363                           	psect	cstackCOMMON
  8364  0070                     __pcstackCOMMON:	
  8365  0070                     ?_isdigit:	
  8366  0070                     ?_SPIPut:	
  8367                           ; 1 bit 
  8368                           
  8369  0070                     ?_SPIGet:	
  8370                           ; 1 bytes @ 0x0
  8371                           
  8372  0070                     ?_MiMAC_DiscardPacket:	
  8373                           ; 1 bytes @ 0x0
  8374                           
  8375  0070                     ?_UserInterruptHandler:	
  8376                           ; 1 bytes @ 0x0
  8377                           
  8378  0070                     ??_UserInterruptHandler:	
  8379                           ; 1 bytes @ 0x0
  8380                           
  8381  0070                     ?_MacroNop:	
  8382                           ; 1 bytes @ 0x0
  8383                           
  8384  0070                     ?_Find_InActiveDevices:	
  8385                           ; 1 bytes @ 0x0
  8386                           
  8387  0070                     ?_send_link_status:	
  8388                           ; 1 bytes @ 0x0
  8389                           
  8390  0070                     ?_MiApp_BroadcastConnectionTable:	
  8391                           ; 1 bytes @ 0x0
  8392                           
  8393  0070                     ?_AddConnection:	
  8394                           ; 1 bytes @ 0x0
  8395                           
  8396  0070                     ?_InitSymbolTimer:	
  8397                           ; 1 bytes @ 0x0
  8398                           
  8399  0070                     ?_MiApp_SetChannel:	
  8400                           ; 1 bytes @ 0x0
  8401                           
  8402  0070                     ?_MiApp_MessageAvailable:	
  8403                           ; 1 bytes @ 0x0
  8404                           
  8405  0070                     ?_MiApp_RemoveConnection:	
  8406                           ; 1 bytes @ 0x0
  8407                           
  8408  0070                     ?_MiApp_DiscardMessage:	
  8409                           ; 1 bytes @ 0x0
  8410                           
  8411  0070                     ?_freezer_feature:	
  8412                           ; 1 bytes @ 0x0
  8413                           
  8414  0070                     ?_Initialize_Demo:	
  8415                           ; 1 bytes @ 0x0
  8416                           
  8417  0070                     ?_Run_Demo:	
  8418                           ; 1 bytes @ 0x0
  8419                           
  8420  0070                     ?_PHYGetShortRAMAddr:	
  8421                           ; 1 bytes @ 0x0
  8422                           
  8423  0070                     ?_InitMRF24J40:	
  8424                           ; 1 bytes @ 0x0
  8425                           
  8426  0070                     ?_MiMAC_ReceivedPacket:	
  8427                           ; 1 bytes @ 0x0
  8428                           
  8429  0070                     ?_high_isr:	
  8430                           ; 1 bytes @ 0x0
  8431                           
  8432  0070                     ?_NVMInit:	
  8433                           ; 1 bytes @ 0x0
  8434                           
  8435  0070                     ?_Total_Connections:	
  8436                           ; 1 bytes @ 0x0
  8437                           
  8438  0070                     ?_handle_lost_connection:	
  8439                           ; 1 bytes @ 0x0
  8440                           
  8441  0070                     ?_P2PTasks:	
  8442                           ; 1 bytes @ 0x0
  8443                           
  8444  0070                     ?_MiApp_ProtocolInit:	
  8445                           ; 1 bytes @ 0x0
  8446                           
  8447  0070                     ?_MiApp_BroadcastPacket:	
  8448                           ; 1 bytes @ 0x0
  8449                           
  8450  0070                     ?_MiApp_UnicastStar:	
  8451                           ; 1 bytes @ 0x0
  8452                           
  8453  0070                     ?_MiApp_ConnectionMode:	
  8454                           ; 1 bytes @ 0x0
  8455                           
  8456  0070                     ?_LCDInitSPI:	
  8457                           ; 1 bytes @ 0x0
  8458                           
  8459  0070                     ?_LCDInitPortA:	
  8460                           ; 1 bytes @ 0x0
  8461                           
  8462  0070                     ?_LCDInitPortB:	
  8463                           ; 1 bytes @ 0x0
  8464                           
  8465  0070                     ?_LCDWritePortA:	
  8466                           ; 1 bytes @ 0x0
  8467                           
  8468  0070                     ?_LCDWritePortB:	
  8469                           ; 1 bytes @ 0x0
  8470                           
  8471  0070                     ?_LCDInitWrite:	
  8472                           ; 1 bytes @ 0x0
  8473                           
  8474  0070                     ?_LCD_i_write:	
  8475                           ; 1 bytes @ 0x0
  8476                           
  8477  0070                     ?_LCD_d_write:	
  8478                           ; 1 bytes @ 0x0
  8479                           
  8480  0070                     ?_LCD_Initialize:	
  8481                           ; 1 bytes @ 0x0
  8482                           
  8483  0070                     ?_LCD_Update:	
  8484                           ; 1 bytes @ 0x0
  8485                           
  8486  0070                     ?_LCD_Erase:	
  8487                           ; 1 bytes @ 0x0
  8488                           
  8489  0070                     ?_SYSTEM_Initialize:	
  8490                           ; 1 bytes @ 0x0
  8491                           
  8492  0070                     ?_DemoOutput_Greeting:	
  8493                           ; 1 bytes @ 0x0
  8494                           
  8495  0070                     ?_DemoOutput_ChannelError:	
  8496                           ; 1 bytes @ 0x0
  8497                           
  8498  0070                     ?_STAR_DEMO_OPTIONS_MESSAGE:	
  8499                           ; 1 bytes @ 0x0
  8500                           
  8501  0070                     ?_ButtonPressed:	
  8502                           ; 1 bytes @ 0x0
  8503                           
  8504  0070                     ?_main:	
  8505                           ; 1 bytes @ 0x0
  8506                           
  8507  0070                     ?_Process_RxMessage:	
  8508                           ; 1 bytes @ 0x0
  8509                           
  8510  0070                     ?_run_star_demo:	
  8511                           ; 1 bytes @ 0x0
  8512                           
  8513  0070                     ?i1_PHYGetShortRAMAddr:	
  8514                           ; 1 bytes @ 0x0
  8515                           
  8516  0070                     ?i1_SPIPut:	
  8517                           ; 1 bytes @ 0x0
  8518                           
  8519  0070                     ??i1_SPIPut:	
  8520                           ; 1 bytes @ 0x0
  8521                           
  8522  0070                     ?i1_SPIGet:	
  8523                           ; 1 bytes @ 0x0
  8524                           
  8525  0070                     ?_DemoOutput_UnicastFail:	
  8526                           ; 1 bytes @ 0x0
  8527                           
  8528  0070                     ?i1___wmul:	
  8529                           ; 2 bytes @ 0x0
  8530                           
  8531  0070                     MiApp_EstablishConnection@ActiveScanIndex:	
  8532                           ; 2 bytes @ 0x0
  8533                           
  8534  0070                     DemoOutput_ChannelError@channel:	
  8535                           ; 1 bytes @ 0x0
  8536                           
  8537  0070                     i1SPIPut@v:	
  8538                           ; 1 bytes @ 0x0
  8539                           
  8540  0070                     i1___wmul@multiplier:	
  8541                           ; 1 bytes @ 0x0
  8542                           
  8543                           
  8544                           ; 2 bytes @ 0x0
  8545  0070                     	ds	1
  8546  0071                     ?i1_PHYSetShortRAMAddr:	
  8547  0071                     ??i1_PHYGetShortRAMAddr:	
  8548                           ; 1 bytes @ 0x1
  8549                           
  8550  0071                     ?i1_PHYGetLongRAMAddr:	
  8551                           ; 1 bytes @ 0x1
  8552                           
  8553  0071                     ??i1_SPIGet:	
  8554                           ; 1 bytes @ 0x1
  8555                           
  8556  0071                     i1PHYSetShortRAMAddr@value:	
  8557                           ; 1 bytes @ 0x1
  8558                           
  8559  0071                     i1PHYGetShortRAMAddr@address:	
  8560                           ; 1 bytes @ 0x1
  8561                           
  8562  0071                     i1PHYGetLongRAMAddr@address:	
  8563                           ; 1 bytes @ 0x1
  8564                           
  8565                           
  8566                           ; 2 bytes @ 0x1
  8567  0071                     	ds	1
  8568  0072                     ??i1_PHYSetShortRAMAddr:	
  8569  0072                     i1PHYSetShortRAMAddr@address:	
  8570                           ; 1 bytes @ 0x2
  8571                           
  8572  0072                     i1PHYGetShortRAMAddr@toReturn:	
  8573                           ; 1 bytes @ 0x2
  8574                           
  8575  0072                     i1___wmul@multiplicand:	
  8576                           ; 1 bytes @ 0x2
  8577                           
  8578                           
  8579                           ; 2 bytes @ 0x2
  8580  0072                     	ds	1
  8581  0073                     ??i1_PHYGetLongRAMAddr:	
  8582  0073                     i1PHYSetShortRAMAddr@tmpRFIE:	
  8583                           ; 1 bytes @ 0x3
  8584                           
  8585  0073                     i1PHYGetShortRAMAddr@tmpRFIE:	
  8586                           ; 1 bytes @ 0x3
  8587                           
  8588                           
  8589                           ; 1 bytes @ 0x3
  8590  0073                     	ds	1
  8591  0074                     ??i1___wmul:	
  8592  0074                     i1___wmul@product:	
  8593                           ; 1 bytes @ 0x4
  8594                           
  8595                           
  8596                           ; 2 bytes @ 0x4
  8597  0074                     	ds	1
  8598  0075                     i1PHYGetLongRAMAddr@toReturn:	
  8599                           
  8600                           ; 1 bytes @ 0x5
  8601  0075                     	ds	1
  8602  0076                     i1PHYGetLongRAMAddr@tmpRFIE:	
  8603                           
  8604                           ; 1 bytes @ 0x6
  8605  0076                     	ds	1
  8606  0077                     high_isr@results:	
  8607                           
  8608                           ; 1 bytes @ 0x7
  8609  0077                     	ds	1
  8610  0078                     high_isr@flags:	
  8611                           
  8612                           ; 2 bytes @ 0x8
  8613  0078                     	ds	2
  8614  007A                     high_isr@RxBank:	
  8615                           
  8616                           ; 1 bytes @ 0xA
  8617  007A                     	ds	1
  8618  007B                     high_isr@i:	
  8619                           
  8620                           ; 1 bytes @ 0xB
  8621  007B                     	ds	1
  8622                           
  8623                           	psect	cstackBANK0
  8624  0020                     __pcstackBANK0:	
  8625  0020                     ??_high_isr:	
  8626                           
  8627                           ; 1 bytes @ 0x0
  8628  0020                     	ds	9
  8629  0029                     ??_SPIPut:	
  8630  0029                     ??_MacroNop:	
  8631                           ; 1 bytes @ 0x9
  8632                           
  8633  0029                     ??_InitSymbolTimer:	
  8634                           ; 1 bytes @ 0x9
  8635                           
  8636  0029                     ?_memset:	
  8637                           ; 1 bytes @ 0x9
  8638                           
  8639  0029                     ??_isdigit:	
  8640                           ; 1 bytes @ 0x9
  8641                           
  8642  0029                     ?_NVMRead:	
  8643                           ; 1 bytes @ 0x9
  8644                           
  8645  0029                     ?_NVMalloc:	
  8646                           ; 1 bytes @ 0x9
  8647                           
  8648  0029                     ??_handle_lost_connection:	
  8649                           ; 1 bytes @ 0x9
  8650                           
  8651  0029                     ??_LCDInitSPI:	
  8652                           ; 1 bytes @ 0x9
  8653                           
  8654  0029                     ??_DemoOutput_ChannelError:	
  8655                           ; 1 bytes @ 0x9
  8656                           
  8657  0029                     ??_STAR_DEMO_OPTIONS_MESSAGE:	
  8658                           ; 1 bytes @ 0x9
  8659                           
  8660  0029                     ?___bmul:	
  8661                           ; 1 bytes @ 0x9
  8662                           
  8663  0029                     ?___lbmod:	
  8664                           ; 1 bytes @ 0x9
  8665                           
  8666  0029                     ?___awdiv:	
  8667                           ; 1 bytes @ 0x9
  8668                           
  8669  0029                     ?___awmod:	
  8670                           ; 2 bytes @ 0x9
  8671                           
  8672  0029                     ?___lwdiv:	
  8673                           ; 2 bytes @ 0x9
  8674                           
  8675  0029                     ?_MiWi_TickGet:	
  8676                           ; 2 bytes @ 0x9
  8677                           
  8678  0029                     ?___lmul:	
  8679                           ; 4 bytes @ 0x9
  8680                           
  8681  0029                     SPIPut@v:	
  8682                           ; 4 bytes @ 0x9
  8683                           
  8684  0029                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:	
  8685                           ; 1 bytes @ 0x9
  8686                           
  8687  0029                     ___bmul@multiplicand:	
  8688                           ; 1 bytes @ 0x9
  8689                           
  8690  0029                     _isdigit$2685:	
  8691                           ; 1 bytes @ 0x9
  8692                           
  8693  0029                     ___lbmod@divisor:	
  8694                           ; 1 bytes @ 0x9
  8695                           
  8696  0029                     NVMRead@dest:	
  8697                           ; 1 bytes @ 0x9
  8698                           
  8699  0029                     NVMalloc@size:	
  8700                           ; 2 bytes @ 0x9
  8701                           
  8702  0029                     ___awdiv@divisor:	
  8703                           ; 2 bytes @ 0x9
  8704                           
  8705  0029                     ___awmod@divisor:	
  8706                           ; 2 bytes @ 0x9
  8707                           
  8708  0029                     ___lwdiv@divisor:	
  8709                           ; 2 bytes @ 0x9
  8710                           
  8711  0029                     memset@c:	
  8712                           ; 2 bytes @ 0x9
  8713                           
  8714  0029                     ___lmul@multiplier:	
  8715                           ; 2 bytes @ 0x9
  8716                           
  8717                           
  8718                           ; 4 bytes @ 0x9
  8719  0029                     	ds	1
  8720  002A                     ??_SPIGet:	
  8721  002A                     ?_EEPROM_Read:	
  8722                           ; 1 bytes @ 0xA
  8723                           
  8724  002A                     ?_PHYSetLongRAMAddr:	
  8725                           ; 1 bytes @ 0xA
  8726                           
  8727  002A                     ?_PHYSetShortRAMAddr:	
  8728                           ; 1 bytes @ 0xA
  8729                           
  8730  002A                     ??_PHYGetShortRAMAddr:	
  8731                           ; 1 bytes @ 0xA
  8732                           
  8733  002A                     ?_PHYGetLongRAMAddr:	
  8734                           ; 1 bytes @ 0xA
  8735                           
  8736  002A                     ??_LCDInitPortA:	
  8737                           ; 1 bytes @ 0xA
  8738                           
  8739  002A                     ??_LCDInitPortB:	
  8740                           ; 1 bytes @ 0xA
  8741                           
  8742  002A                     ??_LCDWritePortA:	
  8743                           ; 1 bytes @ 0xA
  8744                           
  8745  002A                     ??_LCDWritePortB:	
  8746                           ; 1 bytes @ 0xA
  8747                           
  8748  002A                     ??___bmul:	
  8749                           ; 1 bytes @ 0xA
  8750                           
  8751  002A                     ??___lbmod:	
  8752                           ; 1 bytes @ 0xA
  8753                           
  8754  002A                     PHYSetShortRAMAddr@value:	
  8755                           ; 1 bytes @ 0xA
  8756                           
  8757  002A                     PHYGetShortRAMAddr@address:	
  8758                           ; 1 bytes @ 0xA
  8759                           
  8760  002A                     EEPROM_Read@addr:	
  8761                           ; 1 bytes @ 0xA
  8762                           
  8763  002A                     LCDInitPortA@preRFIE:	
  8764                           ; 1 bytes @ 0xA
  8765                           
  8766  002A                     LCDInitPortB@preRFIE:	
  8767                           ; 1 bytes @ 0xA
  8768                           
  8769  002A                     LCDWritePortA@v:	
  8770                           ; 1 bytes @ 0xA
  8771                           
  8772  002A                     LCDWritePortB@v:	
  8773                           ; 1 bytes @ 0xA
  8774                           
  8775  002A                     ___bmul@product:	
  8776                           ; 1 bytes @ 0xA
  8777                           
  8778  002A                     isdigit@c:	
  8779                           ; 1 bytes @ 0xA
  8780                           
  8781  002A                     PHYSetLongRAMAddr@address:	
  8782                           ; 1 bytes @ 0xA
  8783                           
  8784  002A                     PHYGetLongRAMAddr@address:	
  8785                           ; 2 bytes @ 0xA
  8786                           
  8787                           
  8788                           ; 2 bytes @ 0xA
  8789  002A                     	ds	1
  8790  002B                     ??_PHYSetShortRAMAddr:	
  8791  002B                     PHYSetShortRAMAddr@address:	
  8792                           ; 1 bytes @ 0xB
  8793                           
  8794  002B                     PHYGetShortRAMAddr@toReturn:	
  8795                           ; 1 bytes @ 0xB
  8796                           
  8797  002B                     handle_lost_connection@stat:	
  8798                           ; 1 bytes @ 0xB
  8799                           
  8800  002B                     EEPROM_Read@count:	
  8801                           ; 1 bytes @ 0xB
  8802                           
  8803  002B                     LCDWritePortA@preRFIE:	
  8804                           ; 1 bytes @ 0xB
  8805                           
  8806  002B                     LCDWritePortB@preRFIE:	
  8807                           ; 1 bytes @ 0xB
  8808                           
  8809  002B                     ___bmul@multiplier:	
  8810                           ; 1 bytes @ 0xB
  8811                           
  8812  002B                     ___lbmod@dividend:	
  8813                           ; 1 bytes @ 0xB
  8814                           
  8815  002B                     NVMRead@addr:	
  8816                           ; 1 bytes @ 0xB
  8817                           
  8818  002B                     NVMalloc@location:	
  8819                           ; 2 bytes @ 0xB
  8820                           
  8821  002B                     ___awdiv@dividend:	
  8822                           ; 2 bytes @ 0xB
  8823                           
  8824  002B                     ___awmod@dividend:	
  8825                           ; 2 bytes @ 0xB
  8826                           
  8827  002B                     ___lwdiv@dividend:	
  8828                           ; 2 bytes @ 0xB
  8829                           
  8830  002B                     memset@n:	
  8831                           ; 2 bytes @ 0xB
  8832                           
  8833                           
  8834                           ; 2 bytes @ 0xB
  8835  002B                     	ds	1
  8836  002C                     ?_isSameAddress:	
  8837  002C                     ??_EEPROM_Read:	
  8838                           ; 1 bytes @ 0xC
  8839                           
  8840  002C                     ??_PHYGetLongRAMAddr:	
  8841                           ; 1 bytes @ 0xC
  8842                           
  8843  002C                     ??_Total_Connections:	
  8844                           ; 1 bytes @ 0xC
  8845                           
  8846  002C                     ?_Find_Index:	
  8847                           ; 1 bytes @ 0xC
  8848                           
  8849  002C                     ??_LCDInitWrite:	
  8850                           ; 1 bytes @ 0xC
  8851                           
  8852  002C                     PHYSetLongRAMAddr@value:	
  8853                           ; 1 bytes @ 0xC
  8854                           
  8855  002C                     PHYSetShortRAMAddr@tmpRFIE:	
  8856                           ; 1 bytes @ 0xC
  8857                           
  8858  002C                     PHYGetShortRAMAddr@tmpRFIE:	
  8859                           ; 1 bytes @ 0xC
  8860                           
  8861  002C                     Total_Connections@count:	
  8862                           ; 1 bytes @ 0xC
  8863                           
  8864  002C                     handle_lost_connection@i:	
  8865                           ; 1 bytes @ 0xC
  8866                           
  8867  002C                     EEPROM_Read@dest:	
  8868                           ; 1 bytes @ 0xC
  8869                           
  8870  002C                     LCDInitWrite@v:	
  8871                           ; 1 bytes @ 0xC
  8872                           
  8873  002C                     ___lbmod@counter:	
  8874                           ; 1 bytes @ 0xC
  8875                           
  8876  002C                     Find_Index@DestAddr:	
  8877                           ; 1 bytes @ 0xC
  8878                           
  8879  002C                     isSameAddress@Address1:	
  8880                           ; 2 bytes @ 0xC
  8881                           
  8882                           
  8883                           ; 2 bytes @ 0xC
  8884  002C                     	ds	1
  8885  002D                     ??_MiWi_TickGet:	
  8886  002D                     ?_MiMAC_SetAltAddress:	
  8887                           ; 1 bytes @ 0xD
  8888                           
  8889  002D                     ??_memset:	
  8890                           ; 1 bytes @ 0xD
  8891                           
  8892  002D                     ??_PHYSetLongRAMAddr:	
  8893                           ; 1 bytes @ 0xD
  8894                           
  8895  002D                     ??_NVMalloc:	
  8896                           ; 1 bytes @ 0xD
  8897                           
  8898  002D                     ?_store_connection_tb:	
  8899                           ; 1 bytes @ 0xD
  8900                           
  8901  002D                     ??___awdiv:	
  8902                           ; 1 bytes @ 0xD
  8903                           
  8904  002D                     ??___awmod:	
  8905                           ; 1 bytes @ 0xD
  8906                           
  8907  002D                     ??___lwdiv:	
  8908                           ; 1 bytes @ 0xD
  8909                           
  8910  002D                     Total_Connections@i:	
  8911                           ; 1 bytes @ 0xD
  8912                           
  8913  002D                     MiWi_TickGet@IntFlag2:	
  8914                           ; 1 bytes @ 0xD
  8915                           
  8916  002D                     ___awdiv@counter:	
  8917                           ; 1 bytes @ 0xD
  8918                           
  8919  002D                     ___awmod@counter:	
  8920                           ; 1 bytes @ 0xD
  8921                           
  8922  002D                     ___lbmod@rem:	
  8923                           ; 1 bytes @ 0xD
  8924                           
  8925  002D                     ___lwdiv@counter:	
  8926                           ; 1 bytes @ 0xD
  8927                           
  8928  002D                     memset@p1:	
  8929                           ; 1 bytes @ 0xD
  8930                           
  8931  002D                     MiMAC_SetAltAddress@Address:	
  8932                           ; 1 bytes @ 0xD
  8933                           
  8934  002D                     NVMRead@count:	
  8935                           ; 2 bytes @ 0xD
  8936                           
  8937  002D                     store_connection_tb@payload:	
  8938                           ; 2 bytes @ 0xD
  8939                           
  8940  002D                     ___lmul@multiplicand:	
  8941                           ; 2 bytes @ 0xD
  8942                           
  8943                           
  8944                           ; 4 bytes @ 0xD
  8945  002D                     	ds	1
  8946  002E                     ??_Find_Index:	
  8947  002E                     ?___wmul:	
  8948                           ; 1 bytes @ 0xE
  8949                           
  8950  002E                     PHYGetLongRAMAddr@toReturn:	
  8951                           ; 2 bytes @ 0xE
  8952                           
  8953  002E                     Find_Index@i:	
  8954                           ; 1 bytes @ 0xE
  8955                           
  8956  002E                     isSameAddress@Address2:	
  8957                           ; 1 bytes @ 0xE
  8958                           
  8959  002E                     MiWi_TickGet@IntFlag1:	
  8960                           ; 1 bytes @ 0xE
  8961                           
  8962  002E                     ___awdiv@sign:	
  8963                           ; 1 bytes @ 0xE
  8964                           
  8965  002E                     ___awmod@sign:	
  8966                           ; 1 bytes @ 0xE
  8967                           
  8968  002E                     memset@p:	
  8969                           ; 1 bytes @ 0xE
  8970                           
  8971  002E                     ___wmul@multiplier:	
  8972                           ; 1 bytes @ 0xE
  8973                           
  8974  002E                     ___lwdiv@quotient:	
  8975                           ; 2 bytes @ 0xE
  8976                           
  8977                           
  8978                           ; 2 bytes @ 0xE
  8979  002E                     	ds	1
  8980  002F                     ??_isSameAddress:	
  8981  002F                     ??_NVMRead:	
  8982                           ; 1 bytes @ 0xF
  8983                           
  8984  002F                     ??_NVMInit:	
  8985                           ; 1 bytes @ 0xF
  8986                           
  8987  002F                     ??_store_connection_tb:	
  8988                           ; 1 bytes @ 0xF
  8989                           
  8990  002F                     PHYSetLongRAMAddr@tmpRFIE:	
  8991                           ; 1 bytes @ 0xF
  8992                           
  8993  002F                     PHYGetLongRAMAddr@tmpRFIE:	
  8994                           ; 1 bytes @ 0xF
  8995                           
  8996  002F                     NVMInit@result:	
  8997                           ; 1 bytes @ 0xF
  8998                           
  8999  002F                     MiMAC_SetAltAddress@PANID:	
  9000                           ; 1 bytes @ 0xF
  9001                           
  9002  002F                     ___awdiv@quotient:	
  9003                           ; 2 bytes @ 0xF
  9004                           
  9005  002F                     MiWi_TickGet@currentTime:	
  9006                           ; 2 bytes @ 0xF
  9007                           
  9008                           
  9009                           ; 4 bytes @ 0xF
  9010  002F                     	ds	1
  9011  0030                     ?_MiMAC_SetChannel:	
  9012  0030                     ?___lwmod:	
  9013                           ; 1 bytes @ 0x10
  9014                           
  9015  0030                     MiMAC_SetChannel@offsetFreq:	
  9016                           ; 2 bytes @ 0x10
  9017                           
  9018  0030                     ___wmul@multiplicand:	
  9019                           ; 1 bytes @ 0x10
  9020                           
  9021  0030                     ___lwmod@divisor:	
  9022                           ; 2 bytes @ 0x10
  9023                           
  9024                           
  9025                           ; 2 bytes @ 0x10
  9026  0030                     	ds	1
  9027  0031                     ??_MiMAC_SetChannel:	
  9028  0031                     ??_MiMAC_SetAltAddress:	
  9029                           ; 1 bytes @ 0x11
  9030                           
  9031  0031                     ??___lmul:	
  9032                           ; 1 bytes @ 0x11
  9033                           
  9034  0031                     MiMAC_SetChannel@channel:	
  9035                           ; 1 bytes @ 0x11
  9036                           
  9037  0031                     ___lmul@product:	
  9038                           ; 1 bytes @ 0x11
  9039                           
  9040                           
  9041                           ; 4 bytes @ 0x11
  9042  0031                     	ds	1
  9043  0032                     ??_InitMRF24J40:	
  9044  0032                     ??___wmul:	
  9045                           ; 1 bytes @ 0x12
  9046                           
  9047  0032                     isSameAddress@i:	
  9048                           ; 1 bytes @ 0x12
  9049                           
  9050  0032                     ___wmul@product:	
  9051                           ; 1 bytes @ 0x12
  9052                           
  9053  0032                     ___lwmod@dividend:	
  9054                           ; 2 bytes @ 0x12
  9055                           
  9056                           
  9057                           ; 2 bytes @ 0x12
  9058  0032                     	ds	1
  9059  0033                     ?_MiApp_StartConnection:	
  9060  0033                     ??_ButtonPressed:	
  9061                           ; 1 bytes @ 0x13
  9062                           
  9063  0033                     store_connection_tb@j:	
  9064                           ; 1 bytes @ 0x13
  9065                           
  9066  0033                     MiApp_StartConnection@ScanDuration:	
  9067                           ; 1 bytes @ 0x13
  9068                           
  9069  0033                     InitMRF24J40@_dcnt:	
  9070                           ; 1 bytes @ 0x13
  9071                           
  9072  0033                     ButtonPressed@t:	
  9073                           ; 4 bytes @ 0x13
  9074                           
  9075                           
  9076                           ; 4 bytes @ 0x13
  9077  0033                     	ds	1
  9078  0034                     ??_MiMAC_DiscardPacket:	
  9079  0034                     ?_NVMWrite:	
  9080                           ; 1 bytes @ 0x14
  9081                           
  9082  0034                     ??___lwmod:	
  9083                           ; 1 bytes @ 0x14
  9084                           
  9085  0034                     store_connection_tb@i:	
  9086                           ; 1 bytes @ 0x14
  9087                           
  9088  0034                     ___lwmod@counter:	
  9089                           ; 1 bytes @ 0x14
  9090                           
  9091  0034                     NVMWrite@source:	
  9092                           ; 1 bytes @ 0x14
  9093                           
  9094  0034                     MiApp_StartConnection@ChannelMap:	
  9095                           ; 2 bytes @ 0x14
  9096                           
  9097                           
  9098                           ; 4 bytes @ 0x14
  9099  0034                     	ds	1
  9100  0035                     ?_DELAY_ms:	
  9101  0035                     ?_sprintf:	
  9102                           ; 1 bytes @ 0x15
  9103                           
  9104  0035                     DELAY_ms@ms:	
  9105                           ; 2 bytes @ 0x15
  9106                           
  9107  0035                     sprintf@f:	
  9108                           ; 2 bytes @ 0x15
  9109                           
  9110                           
  9111                           ; 2 bytes @ 0x15
  9112  0035                     	ds	1
  9113  0036                     ??_MiApp_DiscardMessage:	
  9114  0036                     ??_MiMAC_ReceivedPacket:	
  9115                           ; 1 bytes @ 0x16
  9116                           
  9117  0036                     NVMWrite@addr:	
  9118                           ; 1 bytes @ 0x16
  9119                           
  9120                           
  9121                           ; 2 bytes @ 0x16
  9122  0036                     	ds	1
  9123  0037                     ??_DELAY_ms:	
  9124  0037                     InitMRF24J40@_dcnt_438:	
  9125                           ; 1 bytes @ 0x17
  9126                           
  9127  0037                     DELAY_ms@cyclesRequiredForEntireDelay:	
  9128                           ; 4 bytes @ 0x17
  9129                           
  9130  0037                     ButtonPressed@tickDifference:	
  9131                           ; 4 bytes @ 0x17
  9132                           
  9133                           
  9134                           ; 4 bytes @ 0x17
  9135  0037                     	ds	1
  9136  0038                     ??_MiApp_StartConnection:	
  9137  0038                     MiApp_StartConnection@Mode:	
  9138                           ; 1 bytes @ 0x18
  9139                           
  9140  0038                     NVMWrite@count:	
  9141                           ; 1 bytes @ 0x18
  9142                           
  9143                           
  9144                           ; 2 bytes @ 0x18
  9145  0038                     	ds	1
  9146  0039                     MiApp_StartConnection@tmp:	
  9147                           
  9148                           ; 2 bytes @ 0x19
  9149  0039                     	ds	1
  9150  003A                     ??_NVMWrite:	
  9151  003A                     NVMWrite@oldGIEH:	
  9152                           ; 1 bytes @ 0x1A
  9153                           
  9154                           
  9155                           ; 1 bytes @ 0x1A
  9156  003A                     	ds	1
  9157  003B                     ??_AddConnection:	
  9158  003B                     ??_MiApp_SetChannel:	
  9159                           ; 1 bytes @ 0x1B
  9160                           
  9161  003B                     ??_MiApp_ConnectionMode:	
  9162                           ; 1 bytes @ 0x1B
  9163                           
  9164  003B                     ??_LCD_i_write:	
  9165                           ; 1 bytes @ 0x1B
  9166                           
  9167  003B                     ??_LCD_d_write:	
  9168                           ; 1 bytes @ 0x1B
  9169                           
  9170  003B                     ??_LCD_Initialize:	
  9171                           ; 1 bytes @ 0x1B
  9172                           
  9173  003B                     ??_LCD_Erase:	
  9174                           ; 1 bytes @ 0x1B
  9175                           
  9176  003B                     ??_SYSTEM_Initialize:	
  9177                           ; 1 bytes @ 0x1B
  9178                           
  9179  003B                     MiApp_SetChannel@channel:	
  9180                           ; 1 bytes @ 0x1B
  9181                           
  9182  003B                     LCD_i_write@v:	
  9183                           ; 1 bytes @ 0x1B
  9184                           
  9185  003B                     LCD_d_write@v:	
  9186                           ; 1 bytes @ 0x1B
  9187                           
  9188  003B                     InitMRF24J40@_ms:	
  9189                           ; 1 bytes @ 0x1B
  9190                           
  9191                           
  9192                           ; 4 bytes @ 0x1B
  9193  003B                     	ds	1
  9194  003C                     ??_LCD_Update:	
  9195  003C                     MiApp_ConnectionMode@Mode:	
  9196                           ; 1 bytes @ 0x1C
  9197                           
  9198  003C                     LCD_Update@i:	
  9199                           ; 1 bytes @ 0x1C
  9200                           
  9201                           
  9202                           ; 1 bytes @ 0x1C
  9203  003C                     	ds	2
  9204  003E                     MiMAC_ReceivedPacket@addrMode:	
  9205                           
  9206                           ; 1 bytes @ 0x1E
  9207  003E                     	ds	1
  9208  003F                     ??_sprintf:	
  9209  003F                     MiMAC_ReceivedPacket@i:	
  9210                           ; 1 bytes @ 0x1F
  9211                           
  9212  003F                     InitMRF24J40@_ms_439:	
  9213                           ; 1 bytes @ 0x1F
  9214                           
  9215                           
  9216                           ; 4 bytes @ 0x1F
  9217  003F                     	ds	1
  9218  0040                     MiMAC_ReceivedPacket@bIntraPAN:	
  9219  0040                     AddConnection@status:	
  9220                           ; 1 bytes @ 0x20
  9221                           
  9222                           
  9223                           ; 1 bytes @ 0x20
  9224  0040                     	ds	1
  9225  0041                     AddConnection@connectionSlot:	
  9226                           
  9227                           ; 1 bytes @ 0x21
  9228  0041                     	ds	1
  9229  0042                     AddConnection@i:	
  9230                           
  9231                           ; 1 bytes @ 0x22
  9232  0042                     	ds	1
  9233  0043                     InitMRF24J40@j:	
  9234  0043                     _sprintf$2492:	
  9235                           ; 2 bytes @ 0x23
  9236                           
  9237                           
  9238                           ; 2 bytes @ 0x23
  9239  0043                     	ds	2
  9240  0045                     InitMRF24J40@i:	
  9241  0045                     _sprintf$2493:	
  9242                           ; 1 bytes @ 0x25
  9243                           
  9244                           
  9245                           ; 2 bytes @ 0x25
  9246  0045                     	ds	1
  9247  0046                     ?_MiMAC_SendPacket:	
  9248  0046                     ?_MiMAC_Init:	
  9249                           ; 1 bytes @ 0x26
  9250                           
  9251  0046                     MiMAC_Init@initValue:	
  9252                           ; 1 bytes @ 0x26
  9253                           
  9254  0046                     MiMAC_SendPacket@transParam:	
  9255                           ; 2 bytes @ 0x26
  9256                           
  9257                           
  9258                           ; 7 bytes @ 0x26
  9259  0046                     	ds	1
  9260  0047                     _sprintf$2499:	
  9261                           
  9262                           ; 2 bytes @ 0x27
  9263  0047                     	ds	1
  9264  0048                     ??_MiMAC_Init:	
  9265                           
  9266                           ; 1 bytes @ 0x28
  9267  0048                     	ds	1
  9268  0049                     sprintf@cp:	
  9269                           
  9270                           ; 1 bytes @ 0x29
  9271  0049                     	ds	1
  9272  004A                     MiMAC_Init@i:	
  9273  004A                     sprintf@idx:	
  9274                           ; 1 bytes @ 0x2A
  9275                           
  9276                           
  9277                           ; 1 bytes @ 0x2A
  9278  004A                     	ds	1
  9279  004B                     ??_MiApp_ProtocolInit:	
  9280  004B                     sprintf@len:	
  9281                           ; 1 bytes @ 0x2B
  9282                           
  9283                           
  9284                           ; 2 bytes @ 0x2B
  9285  004B                     	ds	1
  9286  004C                     MiApp_ProtocolInit@tmp:	
  9287                           
  9288                           ; 2 bytes @ 0x2C
  9289  004C                     	ds	1
  9290  004D                     MiMAC_SendPacket@MACPayload:	
  9291  004D                     sprintf@ap:	
  9292                           ; 1 bytes @ 0x2D
  9293                           
  9294                           
  9295                           ; 1 bytes @ 0x2D
  9296  004D                     	ds	1
  9297  004E                     MiMAC_SendPacket@MACPayloadLen:	
  9298  004E                     MiApp_ProtocolInit@bNetworkFreezer:	
  9299                           ; 1 bytes @ 0x2E
  9300                           
  9301  004E                     sprintf@val:	
  9302                           ; 1 bytes @ 0x2E
  9303                           
  9304                           
  9305                           ; 2 bytes @ 0x2E
  9306  004E                     	ds	1
  9307  004F                     ??_MiMAC_SendPacket:	
  9308  004F                     MiApp_ProtocolInit@initValue:	
  9309                           ; 1 bytes @ 0x2F
  9310                           
  9311                           
  9312                           ; 2 bytes @ 0x2F
  9313  004F                     	ds	1
  9314  0050                     sprintf@prec:	
  9315                           
  9316                           ; 1 bytes @ 0x30
  9317  0050                     	ds	1
  9318  0051                     MiApp_ProtocolInit@i:	
  9319  0051                     sprintf@width:	
  9320                           ; 1 bytes @ 0x31
  9321                           
  9322                           
  9323                           ; 2 bytes @ 0x31
  9324  0051                     	ds	2
  9325  0053                     ?_SendPacket:	
  9326  0053                     sprintf@c:	
  9327                           ; 1 bytes @ 0x33
  9328                           
  9329  0053                     SendPacket@DestinationPANID:	
  9330                           ; 1 bytes @ 0x33
  9331                           
  9332                           
  9333                           ; 2 bytes @ 0x33
  9334  0053                     	ds	1
  9335  0054                     sprintf@sp:	
  9336                           
  9337                           ; 1 bytes @ 0x34
  9338  0054                     	ds	1
  9339  0055                     SendPacket@DestinationAddress:	
  9340  0055                     sprintf@flag:	
  9341                           ; 2 bytes @ 0x35
  9342                           
  9343                           
  9344                           ; 2 bytes @ 0x35
  9345  0055                     	ds	2
  9346  0057                     ?_LCDTRXCount:	
  9347  0057                     ?_LCDDisplay:	
  9348                           ; 1 bytes @ 0x37
  9349                           
  9350  0057                     ?_Source_END_DEVICE_INFO:	
  9351                           ; 1 bytes @ 0x37
  9352                           
  9353  0057                     SendPacket@isCommand:	
  9354                           ; 1 bytes @ 0x37
  9355                           
  9356  0057                     LCDTRXCount@rxCount:	
  9357                           ; 1 bytes @ 0x37
  9358                           
  9359  0057                     LCDDisplay@text:	
  9360                           ; 1 bytes @ 0x37
  9361                           
  9362  0057                     Source_END_DEVICE_INFO@SrAddr:	
  9363                           ; 2 bytes @ 0x37
  9364                           
  9365                           
  9366                           ; 2 bytes @ 0x37
  9367  0057                     	ds	1
  9368  0058                     ??_LCDTRXCount:	
  9369  0058                     SendPacket@SecurityEnabled:	
  9370                           ; 1 bytes @ 0x38
  9371                           
  9372  0058                     LCDTRXCount@txCount:	
  9373                           ; 1 bytes @ 0x38
  9374                           
  9375                           
  9376                           ; 1 bytes @ 0x38
  9377  0058                     	ds	1
  9378  0059                     ??_SendPacket:	
  9379  0059                     ?_DemoOutput_UpdateTxRx:	
  9380                           ; 1 bytes @ 0x39
  9381                           
  9382  0059                     ??_Source_END_DEVICE_INFO:	
  9383                           ; 1 bytes @ 0x39
  9384                           
  9385  0059                     LCDDisplay@value:	
  9386                           ; 1 bytes @ 0x39
  9387                           
  9388  0059                     DemoOutput_UpdateTxRx@RxNum:	
  9389                           ; 1 bytes @ 0x39
  9390                           
  9391                           
  9392                           ; 1 bytes @ 0x39
  9393  0059                     	ds	1
  9394  005A                     ??_Find_InActiveDevices:	
  9395  005A                     ??_send_link_status:	
  9396                           ; 1 bytes @ 0x3A
  9397                           
  9398  005A                     ??_SW_Ack_SrED:	
  9399                           ; 1 bytes @ 0x3A
  9400                           
  9401  005A                     ??_MiApp_UnicastAddress:	
  9402                           ; 1 bytes @ 0x3A
  9403                           
  9404  005A                     ??_MiApp_RemoveConnection:	
  9405                           ; 1 bytes @ 0x3A
  9406                           
  9407  005A                     ??_MiApp_BroadcastPacket:	
  9408                           ; 1 bytes @ 0x3A
  9409                           
  9410  005A                     ??_DemoOutput_UpdateTxRx:	
  9411                           ; 1 bytes @ 0x3A
  9412                           
  9413  005A                     MiApp_BroadcastPacket@SecEn:	
  9414                           ; 1 bytes @ 0x3A
  9415                           
  9416  005A                     MiApp_UnicastAddress@DestinationAddress:	
  9417                           ; 1 bytes @ 0x3A
  9418                           
  9419  005A                     send_link_status@send_status:	
  9420                           ; 1 bytes @ 0x3A
  9421                           
  9422  005A                     Find_InActiveDevices@i:	
  9423                           ; 1 bytes @ 0x3A
  9424                           
  9425  005A                     LCDDisplay@delay:	
  9426                           ; 1 bytes @ 0x3A
  9427                           
  9428  005A                     DemoOutput_UpdateTxRx@TxNum:	
  9429                           ; 1 bytes @ 0x3A
  9430                           
  9431                           
  9432                           ; 1 bytes @ 0x3A
  9433  005A                     	ds	1
  9434  005B                     ??_MiApp_UnicastConnection:	
  9435  005B                     ??_LCDDisplay:	
  9436                           ; 1 bytes @ 0x3B
  9437                           
  9438  005B                     MiApp_UnicastConnection@ConnectionIndex:	
  9439                           ; 1 bytes @ 0x3B
  9440                           
  9441  005B                     LCDDisplay@i:	
  9442                           ; 1 bytes @ 0x3B
  9443                           
  9444                           
  9445                           ; 1 bytes @ 0x3B
  9446  005B                     	ds	1
  9447  005C                     ??_DemoOutput_UnicastFail:	
  9448  005C                     ??_Forward_Packet_PANCr_to_EDy:	
  9449                           ; 1 bytes @ 0x3C
  9450                           
  9451  005C                     ??_DemoOutput_Greeting:	
  9452                           ; 1 bytes @ 0x3C
  9453                           
  9454  005C                     ?_DemoOutput_Channel:	
  9455                           ; 1 bytes @ 0x3C
  9456                           
  9457  005C                     DemoOutput_Channel@Step:	
  9458                           ; 1 bytes @ 0x3C
  9459                           
  9460                           
  9461                           ; 1 bytes @ 0x3C
  9462  005C                     	ds	1
  9463  005D                     ??_DemoOutput_Channel:	
  9464  005D                     DemoOutput_Channel@channel:	
  9465                           ; 1 bytes @ 0x3D
  9466                           
  9467                           
  9468                           ; 1 bytes @ 0x3D
  9469  005D                     	ds	1
  9470  005E                     ??_Initialize_Demo:	
  9471  005E                     ??_Run_Demo:	
  9472                           ; 1 bytes @ 0x3E
  9473                           
  9474  005E                     ??_main:	
  9475                           ; 1 bytes @ 0x3E
  9476                           
  9477  005E                     ??_Process_RxMessage:	
  9478                           ; 1 bytes @ 0x3E
  9479                           
  9480                           
  9481                           	psect	text1
  9482  21D8                     __ptext1:	
  9483 ;; *************** function _freezer_feature *****************
  9484 ;; Defined at:
  9485 ;;		line 62 in file "../src/task.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  tick2           4    8[BANK1 ] struct _MIWI_TICK
  9490 ;;  tick1           4    4[BANK1 ] struct _MIWI_TICK
  9491 ;;  switch_val      1   12[BANK1 ] unsigned char 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      unsigned char 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 1F/0
  9498 ;;		On exit  : 1E/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;Total ram usage:       13 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    9
  9508 ;; This function calls:
  9509 ;;		_ButtonPressed
  9510 ;;		_DELAY_ms
  9511 ;;		_LCDDisplay
  9512 ;;		_MiWi_TickGet
  9513 ;; This function is called by:
  9514 ;;		_main
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           
  9519                           ;psect for function _freezer_feature
  9520  21D8                     _freezer_feature:	
  9521                           
  9522                           ;task.c: 64: MIWI_TICK tick1, tick2;
  9523                           ;task.c: 65: uint8_t switch_val;
  9524                           ;task.c: 66: tick1 = MiWi_TickGet();
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in _freezer_feature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9528  21D8  3197  2789  31A1   	fcall	_MiWi_TickGet
  9529  21DB  082C               	movf	?_MiWi_TickGet+3,w
  9530  21DC  0021               	movlb	1	; select bank1
  9531  21DD  00A7               	movwf	(freezer_feature@tick1+3)^(0+128)
  9532  21DE  0020               	movlb	0	; select bank0
  9533  21DF  082B               	movf	?_MiWi_TickGet+2,w
  9534  21E0  0021               	movlb	1	; select bank1
  9535  21E1  00A6               	movwf	(freezer_feature@tick1+2)^(0+128)
  9536  21E2  0020               	movlb	0	; select bank0
  9537  21E3  082A               	movf	?_MiWi_TickGet+1,w
  9538  21E4  0021               	movlb	1	; select bank1
  9539  21E5  00A5               	movwf	(freezer_feature@tick1+1)^(0+128)
  9540  21E6  0020               	movlb	0	; select bank0
  9541  21E7  0829               	movf	?_MiWi_TickGet,w
  9542  21E8  0021               	movlb	1	; select bank1
  9543  21E9  00A4               	movwf	freezer_feature@tick1^(0+128)
  9544                           
  9545                           ;task.c: 68: {
  9546                           ;task.c: 69: tick2 = MiWi_TickGet();
  9547                           
  9548                           ;task.c: 67: while(1)
  9549  21EA  3197  2789  31A1   	fcall	_MiWi_TickGet
  9550  21ED  082C               	movf	?_MiWi_TickGet+3,w
  9551  21EE  0021               	movlb	1	; select bank1
  9552  21EF  00AB               	movwf	(freezer_feature@tick2+3)^(0+128)
  9553  21F0  0020               	movlb	0	; select bank0
  9554  21F1  082B               	movf	?_MiWi_TickGet+2,w
  9555  21F2  0021               	movlb	1	; select bank1
  9556  21F3  00AA               	movwf	(freezer_feature@tick2+2)^(0+128)
  9557  21F4  0020               	movlb	0	; select bank0
  9558  21F5  082A               	movf	?_MiWi_TickGet+1,w
  9559  21F6  0021               	movlb	1	; select bank1
  9560  21F7  00A9               	movwf	(freezer_feature@tick2+1)^(0+128)
  9561  21F8  0020               	movlb	0	; select bank0
  9562  21F9  0829               	movf	?_MiWi_TickGet,w
  9563  21FA  0021               	movlb	1	; select bank1
  9564  21FB  00A8               	movwf	freezer_feature@tick2^(0+128)
  9565                           
  9566                           ;task.c: 70: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
  9567  21FC  0824               	movf	freezer_feature@tick1^(0+128),w
  9568  21FD  0228               	subwf	freezer_feature@tick2^(0+128),w
  9569  21FE  00A0               	movwf	??_freezer_feature^(0+128)
  9570  21FF  0825               	movf	(freezer_feature@tick1+1)^(0+128),w
  9571  2200  3B29               	subwfb	(freezer_feature@tick2+1)^(0+128),w
  9572  2201  00A1               	movwf	(??_freezer_feature^(0+128)+1)
  9573  2202  0826               	movf	(freezer_feature@tick1+2)^(0+128),w
  9574  2203  3B2A               	subwfb	(freezer_feature@tick2+2)^(0+128),w
  9575  2204  00A2               	movwf	(??_freezer_feature^(0+128)+2)
  9576  2205  0827               	movf	(freezer_feature@tick1+3)^(0+128),w
  9577  2206  3B2B               	subwfb	(freezer_feature@tick2+3)^(0+128),w
  9578  2207  00A3               	movwf	(??_freezer_feature^(0+128)+3)
  9579  2208  0823               	movf	(??_freezer_feature^(0+128)+3),w
  9580  2209  1D03               	btfss	3,2
  9581  220A  0008               	return
  9582  220B  30D1               	movlw	209
  9583  220C  0220               	subwf	??_freezer_feature^(0+128),w
  9584  220D  3012               	movlw	18
  9585  220E  3B21               	subwfb	(??_freezer_feature^(0+128)+1),w
  9586  220F  3013               	movlw	19
  9587  2210  3B22               	subwfb	(??_freezer_feature^(0+128)+2),w
  9588  2211  1803               	btfsc	3,0
  9589  2212  0008               	return
  9590                           
  9591                           ;task.c: 72: switch_val = ButtonPressed ();
  9592  2213  3183  2398  31A1   	fcall	_ButtonPressed
  9593  2216  0021               	movlb	1	; select bank1
  9594  2217  00AC               	movwf	freezer_feature@switch_val^(0+128)
  9595                           
  9596                           ;task.c: 73: if(switch_val == 2)
  9597  2218  3A02               	xorlw	2
  9598  2219  1D03               	btfss	3,2
  9599  221A  3400               	retlw	0
  9600                           
  9601                           ;task.c: 74: {
  9602                           ;task.c: 75: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  9603  221B  303E               	movlw	low (STR_15| (0+32768))
  9604  221C  0020               	movlb	0	; select bank0
  9605  221D  00D7               	movwf	LCDDisplay@text
  9606  221E  30A9               	movlw	high (STR_15| (0+32768))
  9607  221F  00D8               	movwf	LCDDisplay@text+1
  9608  2220  01D9               	clrf	LCDDisplay@value
  9609  2221  01DA               	clrf	LCDDisplay@delay
  9610  2222  3188  20F7  31A1   	fcall	_LCDDisplay
  9611                           
  9612                           ;task.c: 76: DELAY_ms(1000);
  9613  2225  30E8               	movlw	232
  9614  2226  00B5               	movwf	DELAY_ms@ms
  9615  2227  3003               	movlw	3
  9616  2228  00B6               	movwf	DELAY_ms@ms+1
  9617  2229  3189  2157         	fcall	_DELAY_ms
  9618                           
  9619                           ;task.c: 77: return 1;
  9620  222B  3401               	retlw	1
  9621  222C                     __end_of_freezer_feature:	
  9622                           ;task.c: 79: else
  9623                           ;task.c: 80: {
  9624                           ;task.c: 81: return 0;
  9625                           
  9626                           
  9627                           	psect	text2
  9628  2147                     __ptext2:	
  9629 ;; *************** function _SYSTEM_Initialize *****************
  9630 ;; Defined at:
  9631 ;;		line 67 in file "../src/system_config/pic18exp_pic16f1947_24j40/system.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : B1F/0
  9642 ;;		On exit  : 1F/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    8
  9652 ;; This function calls:
  9653 ;;		_LCD_Initialize
  9654 ;; This function is called by:
  9655 ;;		_main
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _SYSTEM_Initialize
  9661  2147                     _SYSTEM_Initialize:	
  9662                           
  9663                           ;system.c: 71: OSCCON = 0x70;
  9664                           
  9665                           ;incstack = 0
  9666                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9667  2147  3070               	movlw	112
  9668  2148  0021               	movlb	1	; select bank1
  9669  2149  0099               	movwf	25	;volatile
  9670                           
  9671                           ;system.c: 81: ANSELA = 0;
  9672  214A  0023               	movlb	3	; select bank3
  9673  214B  018C               	clrf	12	;volatile
  9674                           
  9675                           ;system.c: 84: TRISA = 0xFF;
  9676  214C  30FF               	movlw	255
  9677  214D  0021               	movlb	1	; select bank1
  9678  214E  008C               	movwf	12	;volatile
  9679                           
  9680                           ;system.c: 85: TRISB = 0xFF;
  9681  214F  008D               	movwf	13	;volatile
  9682                           
  9683                           ;system.c: 86: TRISC = 0xFF;
  9684  2150  008E               	movwf	14	;volatile
  9685                           
  9686                           ;system.c: 87: TRISD = 0x00;
  9687  2151  018F               	clrf	15	;volatile
  9688                           
  9689                           ;system.c: 89: LATA = 0;
  9690  2152  0022               	movlb	2	; select bank2
  9691  2153  018C               	clrf	12	;volatile
  9692                           
  9693                           ;system.c: 90: LATB = 0;
  9694  2154  018D               	clrf	13	;volatile
  9695                           
  9696                           ;system.c: 91: LATC = 0;
  9697  2155  018E               	clrf	14	;volatile
  9698                           
  9699                           ;system.c: 92: LATD = 0;
  9700  2156  018F               	clrf	15	;volatile
  9701                           
  9702                           ;system.c: 95: TRISBbits.TRISB0 = 1;
  9703  2157  0021               	movlb	1	; select bank1
  9704  2158  140D               	bsf	13,0	;volatile
  9705                           
  9706                           ;system.c: 96: TRISAbits.TRISA5 = 1;
  9707  2159  168C               	bsf	12,5	;volatile
  9708                           
  9709                           ;system.c: 97: TRISDbits.TRISD7 = 0;
  9710  215A  138F               	bcf	15,7	;volatile
  9711                           
  9712                           ;system.c: 98: TRISDbits.TRISD6 = 0;
  9713  215B  130F               	bcf	15,6	;volatile
  9714                           
  9715                           ;system.c: 101: TRISBbits.TRISB3 = 0;
  9716  215C  118D               	bcf	13,3	;volatile
  9717                           
  9718                           ;system.c: 102: LATBbits.LATB3 = 1;
  9719  215D  0022               	movlb	2	; select bank2
  9720  215E  158D               	bsf	13,3	;volatile
  9721                           
  9722                           ;system.c: 103: TRISBbits.TRISB5 = 0;
  9723  215F  0021               	movlb	1	; select bank1
  9724  2160  128D               	bcf	13,5	;volatile
  9725                           
  9726                           ;system.c: 104: LATBbits.LATB5 = 1;
  9727  2161  0022               	movlb	2	; select bank2
  9728  2162  168D               	bsf	13,5	;volatile
  9729                           
  9730                           ;system.c: 105: TRISBbits.TRISB1 = 1;
  9731  2163  0021               	movlb	1	; select bank1
  9732  2164  148D               	bsf	13,1	;volatile
  9733                           
  9734                           ;system.c: 112: TRISCbits.TRISC4 = 1;
  9735  2165  160E               	bsf	14,4	;volatile
  9736                           
  9737                           ;system.c: 113: TRISCbits.TRISC5 = 0;
  9738  2166  128E               	bcf	14,5	;volatile
  9739                           
  9740                           ;system.c: 114: TRISCbits.TRISC3 = 0;
  9741  2167  118E               	bcf	14,3	;volatile
  9742                           
  9743                           ;system.c: 117: IOCBN = 0;
  9744  2168  0027               	movlb	7	; select bank7
  9745  2169  0195               	clrf	21	;volatile
  9746                           
  9747                           ;system.c: 118: IOCBP = 0;
  9748  216A  0194               	clrf	20	;volatile
  9749                           
  9750                           ;system.c: 124: SSP1STAT = 0xC0;
  9751  216B  30C0               	movlw	192
  9752  216C  0024               	movlb	4	; select bank4
  9753  216D  0094               	movwf	20	;volatile
  9754                           
  9755                           ;system.c: 125: SSP1CON1 = 0x21;
  9756  216E  3021               	movlw	33
  9757  216F  0095               	movwf	21	;volatile
  9758                           
  9759                           ;system.c: 148: TRISBbits.TRISB4 = 0;
  9760  2170  0021               	movlb	1	; select bank1
  9761  2171  120D               	bcf	13,4	;volatile
  9762                           
  9763                           ;system.c: 149: LATBbits.LATB4 = 1;
  9764  2172  0022               	movlb	2	; select bank2
  9765  2173  160D               	bsf	13,4	;volatile
  9766                           
  9767                           ;system.c: 154: IOCBNbits.IOCBN1 = 1;
  9768  2174  0027               	movlb	7	; select bank7
  9769  2175  1495               	bsf	21,1	;volatile
  9770                           
  9771                           ;system.c: 200: TRISAbits.TRISA3 = 0;
  9772  2176  0021               	movlb	1	; select bank1
  9773  2177  118C               	bcf	12,3	;volatile
  9774                           
  9775                           ;system.c: 201: LATAbits.LATA3 = 1;
  9776  2178  0022               	movlb	2	; select bank2
  9777  2179  158C               	bsf	12,3	;volatile
  9778                           
  9779                           ;system.c: 207: TRISCbits.TRISC2 = 0;
  9780  217A  0021               	movlb	1	; select bank1
  9781  217B  110E               	bcf	14,2	;volatile
  9782                           
  9783                           ;system.c: 208: LATCbits.LATC2 = 1;
  9784  217C  0022               	movlb	2	; select bank2
  9785  217D  150E               	bsf	14,2	;volatile
  9786                           
  9787                           ;system.c: 215: INTCONbits.GIE = 1;
  9788  217E  178B               	bsf	11,7	;volatile
  9789                           
  9790                           ;system.c: 216: INTCONbits.PEIE = 1;
  9791  217F  170B               	bsf	11,6	;volatile
  9792                           
  9793                           ;system.c: 221: IOCBFbits.IOCBF1 = 0;
  9794  2180  0027               	movlb	7	; select bank7
  9795  2181  1096               	bcf	22,1	;volatile
  9796                           
  9797                           ;system.c: 224: INTCONbits.IOCIE = 1;
  9798  2182  158B               	bsf	11,3	;volatile
  9799                           
  9800                           ;system.c: 227: LCD_Initialize();
  9801  2183  3189  2919         	ljmp	l11044
  9802  2185                     __end_of_SYSTEM_Initialize:	
  9803                           
  9804                           	psect	text5
  9805  20CD                     __ptext5:	
  9806 ;; *************** function _LCDInitPortB *****************
  9807 ;; Defined at:
  9808 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  preRFIE         1   10[BANK0 ] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0, pclath, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 1F/0
  9819 ;;		On exit  : 1F/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;Total ram usage:        1 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    5
  9829 ;; This function calls:
  9830 ;;		_SPIPut
  9831 ;; This function is called by:
  9832 ;;		_LCD_Initialize
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _LCDInitPortB
  9838  20CD                     _LCDInitPortB:	
  9839                           
  9840                           ;lcd.c: 62: uint8_t preRFIE = INTCONbits.IOCIE;
  9841                           
  9842                           ;incstack = 0
  9843                           ; Regs used in _LCDInitPortB: [wreg+status,2+status,0+pclath+cstack]
  9844  20CD  3000               	movlw	0
  9845  20CE  198B               	btfsc	11,3	;volatile
  9846  20CF  3001               	movlw	1
  9847  20D0  00AA               	movwf	LCDInitPortB@preRFIE
  9848                           
  9849                           ;lcd.c: 63: INTCONbits.IOCIE = 0;
  9850  20D1  118B               	bcf	11,3	;volatile
  9851                           
  9852                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  9853  20D2  0022               	movlb	2	; select bank2
  9854  20D3  110C               	bcf	12,2	;volatile
  9855                           
  9856                           ;lcd.c: 65: SPIPut(0x40);
  9857  20D4  3040               	movlw	64
  9858  20D5  3197  27ED  31A0   	fcall	_SPIPut
  9859                           
  9860                           ;lcd.c: 66: SPIPut(0x01);
  9861  20D8  3001               	movlw	1
  9862  20D9  3197  27ED  31A0   	fcall	_SPIPut
  9863                           
  9864                           ;lcd.c: 67: SPIPut(0x00);
  9865  20DC  3000               	movlw	0
  9866  20DD  3197  27ED         	fcall	_SPIPut
  9867                           
  9868                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  9869  20DF  0022               	movlb	2	; select bank2
  9870  20E0  150C               	bsf	12,2	;volatile
  9871                           
  9872                           ;lcd.c: 69: INTCONbits.IOCIE = preRFIE;
  9873  20E1  0020               	movlb	0	; select bank0
  9874  20E2  0C2A               	rrf	LCDInitPortB@preRFIE,w
  9875  20E3  1C03               	skipc
  9876  20E4  118B               	bcf	11,3	;volatile
  9877  20E5  1803               	skipnc
  9878  20E6  158B               	bsf	11,3	;volatile
  9879  20E7  0008               	return
  9880  20E8                     __end_of_LCDInitPortB:	
  9881                           
  9882                           	psect	text8
  9883  0113                     __ptext8:	
  9884 ;; *************** function _run_star_demo *****************
  9885 ;; Defined at:
  9886 ;;		line 90 in file "../src/star_demo.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  switch_val      1    7[BANK4 ] unsigned char 
  9891 ;;  sw_layer_ack    1    4[BANK4 ] unsigned char 
  9892 ;;  mac_ack_stat    1    0        unsigned char 
  9893 ;;  select_ed       1    8[BANK4 ] unsigned char 
  9894 ;;  update_ed       1    5[BANK4 ] unsigned char 
  9895 ;;  PressedButto    1    6[BANK4 ] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 1D/0
  9902 ;;		On exit  : 1F/2
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:         0       0       0       0       0       9       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:        9 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:   16
  9912 ;; This function calls:
  9913 ;;		_ButtonPressed
  9914 ;;		_DELAY_ms
  9915 ;;		_DemoOutput_UpdateTxRx
  9916 ;;		_LCDDisplay
  9917 ;;		_LCD_Erase
  9918 ;;		_LCD_Update
  9919 ;;		_MiApp_BroadcastPacket
  9920 ;;		_MiApp_EstablishConnection
  9921 ;;		_MiApp_UnicastConnection
  9922 ;;		_MiApp_UnicastStar
  9923 ;;		_MiWi_TickGet
  9924 ;;		_Process_RxMessage
  9925 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  9926 ;;		___lbmod
  9927 ;;		___wmul
  9928 ;;		_sprintf
  9929 ;; This function is called by:
  9930 ;;		_Run_Demo
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           
  9935                           ;psect for function _run_star_demo
  9936  0113                     _run_star_demo:	
  9937  0113                     l11084:	
  9938                           ;incstack = 0
  9939 ;; hardware stack exceeded
  9940                           ; Regs used in _run_star_demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9941                           
  9942                           
  9943                           ;star_demo.c: 92: t1 = MiWi_TickGet ();
  9944  0113  3197  2789  3181   	fcall	_MiWi_TickGet
  9945  0116  082C               	movf	?_MiWi_TickGet+3,w
  9946  0117  0023               	movlb	3	; select bank3
  9947  0118  00C0               	movwf	(_t1+3)^(0+384)
  9948  0119  0020               	movlb	0	; select bank0
  9949  011A  082B               	movf	?_MiWi_TickGet+2,w
  9950  011B  0023               	movlb	3	; select bank3
  9951  011C  00BF               	movwf	(_t1+2)^(0+384)
  9952  011D  0020               	movlb	0	; select bank0
  9953  011E  082A               	movf	?_MiWi_TickGet+1,w
  9954  011F  0023               	movlb	3	; select bank3
  9955  0120  00BE               	movwf	(_t1+1)^(0+384)
  9956  0121  0020               	movlb	0	; select bank0
  9957  0122  0829               	movf	?_MiWi_TickGet,w
  9958  0123  0023               	movlb	3	; select bank3
  9959  0124  00BD               	movwf	_t1^(0+384)
  9960                           
  9961                           ;star_demo.c: 93: display_connections = 1;
  9962  0125  0022               	movlb	2	; select bank2
  9963  0126  01D5               	clrf	_display_connections^(0+256)
  9964  0127  0AD5               	incf	_display_connections^(0+256),f
  9965  0128                     l11250:	
  9966                           ;star_demo.c: 94: while(display_connections)
  9967                           
  9968  0128  0022               	movlb	2	; select bank2
  9969  0129  0855               	movf	_display_connections^(0+256),w
  9970  012A  1903               	btfsc	3,2
  9971  012B  0008               	return
  9972                           
  9973                           ;star_demo.c: 95: {
  9974                           ;star_demo.c: 97: if (Process_RxMessage ())
  9975  012C  2404  3181         	fcall	_Process_RxMessage
  9976  012E  3A00               	xorlw	0
  9977  012F  1D03               	btfss	3,2
  9978  0130  2B1D               	goto	l11224
  9979                           
  9980                           ;star_demo.c: 101: else
  9981                           ;star_demo.c: 102: {
  9982                           ;star_demo.c: 110: uint8_t PressedButton = ButtonPressed();
  9983  0131  2398  3181         	fcall	_ButtonPressed
  9984  0133  0024               	movlb	4	; select bank4
  9985  0134  00CE               	movwf	run_star_demo@PressedButton^(0+512)
  9986                           
  9987                           ;star_demo.c: 111: if ( PressedButton == 1 || PressedButton == 2)
  9988  0135  034E               	decf	run_star_demo@PressedButton^(0+512),w
  9989  0136  1903               	btfsc	3,2
  9990  0137  293C               	goto	l11098
  9991  0138  3002               	movlw	2
  9992  0139  064E               	xorwf	run_star_demo@PressedButton^(0+512),w
  9993  013A  1D03               	btfss	3,2
  9994  013B  2B1D               	goto	l11224
  9995  013C                     l11098:	
  9996                           
  9997                           ;star_demo.c: 112: {
  9998                           ;star_demo.c: 114: if (role)
  9999  013C  0020               	movlb	0	; select bank0
 10000  013D  0865               	movf	_role,w
 10001  013E  1903               	btfsc	3,2
 10002  013F  2989               	goto	l11120
 10003                           
 10004                           ;star_demo.c: 115: {
 10005                           ;star_demo.c: 123: {TxData = 0;};
 10006  0140  0021               	movlb	1	; select bank1
 10007  0141  01EC               	clrf	_TxData^(0+128)
 10008                           
 10009                           ;star_demo.c: 124: for(i = 0; i < 21; i++)
 10010  0142  0020               	movlb	0	; select bank0
 10011  0143  01DF               	clrf	_i
 10012  0144                     l11106:	
 10013                           
 10014                           ;star_demo.c: 125: {
 10015                           ;star_demo.c: 126: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
 10016  0144  0021               	movlb	1	; select bank1
 10017  0145  086C               	movf	_TxData^(0+128),w
 10018  0146  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10019  0147  0086               	movwf	6
 10020  0148  3002               	movlw	2	; select bank4/5
 10021  0149  0087               	movwf	7
 10022  014A  3006               	movlw	6
 10023  014B  0020               	movlb	0	; select bank0
 10024  014C  00A9               	movwf	___lbmod@divisor
 10025  014D  0022               	movlb	2	; select bank2
 10026  014E  0853               	movf	_TxSynCount^(0+256),w
 10027  014F  237E               	fcall	___lbmod
 10028  0150  00AE               	movwf	___wmul@multiplier
 10029  0151  3015               	movlw	21
 10030  0152  01AF               	clrf	___wmul@multiplier+1
 10031  0153  00B0               	movwf	___wmul@multiplicand
 10032  0154  01B1               	clrf	___wmul@multiplicand+1
 10033  0155  319F  27EB  3181   	fcall	___wmul
 10034  0158  3000               	movlw	low (_MiWi| (0+32768))
 10035  0159  0024               	movlb	4	; select bank4
 10036  015A  00C8               	movwf	??_run_star_demo^(0+512)
 10037  015B  30A8               	movlw	high (_MiWi| (0+32768))
 10038  015C  00C9               	movwf	(??_run_star_demo^(0+512)+1)
 10039  015D  0020               	movlb	0	; select bank0
 10040  015E  082E               	movf	?___wmul,w
 10041  015F  0024               	movlb	4	; select bank4
 10042  0160  0748               	addwf	??_run_star_demo^(0+512),w
 10043  0161  00CA               	movwf	(??_run_star_demo+2)^(0+512)
 10044  0162  0020               	movlb	0	; select bank0
 10045  0163  082F               	movf	?___wmul+1,w
 10046  0164  0024               	movlb	4	; select bank4
 10047  0165  3D49               	addwfc	(??_run_star_demo+1)^(0+512),w
 10048  0166  00CB               	movwf	(??_run_star_demo+3)^(0+512)
 10049  0167  0020               	movlb	0	; select bank0
 10050  0168  085F               	movf	_i,w
 10051  0169  0024               	movlb	4	; select bank4
 10052  016A  074A               	addwf	(??_run_star_demo+2)^(0+512),w
 10053  016B  0084               	movwf	4
 10054  016C  084B               	movf	((??_run_star_demo+2)^(0+512)+1),w
 10055  016D  1803               	skipnc
 10056  016E  0A4B               	incf	((??_run_star_demo+2)^(0+512)+1),w
 10057  016F  0085               	movwf	5
 10058  0170  0800               	movf	0,w	;code access
 10059  0171  0081               	movwf	1
 10060  0172  0021               	movlb	1	; select bank1
 10061  0173  0AEC               	incf	_TxData^(0+128),f
 10062  0174  0020               	movlb	0	; select bank0
 10063  0175  3015               	movlw	21
 10064  0176  0ADF               	incf	_i,f
 10065  0177  025F               	subwf	_i,w
 10066  0178  1C03               	skipc
 10067  0179  2944               	goto	l11106
 10068                           
 10069                           ;star_demo.c: 127: }
 10070                           ;star_demo.c: 128: TxSynCount++;
 10071  017A  0022               	movlb	2	; select bank2
 10072  017B  3000               	movlw	0
 10073  017C  0AD3               	incf	_TxSynCount^(0+256),f
 10074                           
 10075                           ;star_demo.c: 145: MiApp_BroadcastPacket (0);
 10076  017D  245F  3181         	fcall	_MiApp_BroadcastPacket
 10077                           
 10078                           ;star_demo.c: 148: DemoOutput_UpdateTxRx(++TxNum, RxNum);
 10079  017F  0022               	movlb	2	; select bank2
 10080  0180  0851               	movf	_RxNum^(0+256),w
 10081  0181  0020               	movlb	0	; select bank0
 10082  0182  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
 10083  0183  0022               	movlb	2	; select bank2
 10084  0184  0AD2               	incf	_TxNum^(0+256),f
 10085  0185  0852               	movf	_TxNum^(0+256),w
 10086  0186  23FD  3181         	fcall	_DemoOutput_UpdateTxRx
 10087                           
 10088                           ;star_demo.c: 150: }
 10089  0188  2B1D               	goto	l11224
 10090  0189                     l11120:	
 10091                           
 10092                           ;star_demo.c: 151: else
 10093                           ;star_demo.c: 152: {
 10094                           ;star_demo.c: 154: uint8_t select_ed = 0;
 10095  0189  0024               	movlb	4	; select bank4
 10096  018A  01D0               	clrf	run_star_demo@select_ed^(0+512)
 10097                           
 10098                           ;star_demo.c: 155: chk_sel_status = 1;
 10099  018B  0022               	movlb	2	; select bank2
 10100  018C  01D4               	clrf	_chk_sel_status^(0+256)
 10101  018D  0AD4               	incf	_chk_sel_status^(0+256),f
 10102                           
 10103                           ;star_demo.c: 156: bool update_ed = 1;
 10104  018E  0024               	movlb	4	; select bank4
 10105  018F  01CD               	clrf	run_star_demo@update_ed^(0+512)
 10106  0190  0ACD               	incf	run_star_demo@update_ed^(0+512),f
 10107  0191                     l11222:	
 10108                           ;star_demo.c: 157: while(update_ed == 1)
 10109                           
 10110  0191  0024               	movlb	4	; select bank4
 10111  0192  034D               	decf	run_star_demo@update_ed^(0+512),w
 10112  0193  1D03               	btfss	3,2
 10113  0194  2B1D               	goto	l11224
 10114                           
 10115                           ;star_demo.c: 158: {
 10116                           ;star_demo.c: 160: LCD_Erase();
 10117  0195  318A  2211  3181   	fcall	_LCD_Erase
 10118                           
 10119                           ;star_demo.c: 161: if (myConnectionIndex_in_PanCo == select_ed)
 10120  0198  0864               	movf	_myConnectionIndex_in_PanCo,w
 10121  0199  0024               	movlb	4	; select bank4
 10122  019A  0650               	xorwf	run_star_demo@select_ed^(0+512),w
 10123  019B  1D03               	skipz
 10124  019C  29A2               	goto	l11132
 10125                           
 10126                           ;star_demo.c: 162: {
 10127                           ;star_demo.c: 163: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
 10128                           ;star_demo.c: 164: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
 10129  019D  30F9               	movlw	low (STR_9| (0+32768))
 10130  019E  0020               	movlb	0	; select bank0
 10131  019F  00B5               	movwf	sprintf@f
 10132  01A0  30A8               	movlw	high (STR_9| (0+32768))
 10133  01A1  29A6               	goto	L1
 10134  01A2                     l11132:	
 10135                           ;star_demo.c: 165: }
 10136                           
 10137                           
 10138                           ;star_demo.c: 166: else
 10139                           ;star_demo.c: 167: {
 10140                           ;star_demo.c: 168: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
 10141                           ;star_demo.c: 169: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
 10142  01A2  3012               	movlw	low (STR_10| (0+32768))
 10143  01A3  0020               	movlb	0	; select bank0
 10144  01A4  00B5               	movwf	sprintf@f
 10145  01A5  30A9               	movlw	high (STR_10| (0+32768))
 10146  01A6                     L1:	
 10147  01A6  00B6               	movwf	sprintf@f+1
 10148  01A7  0024               	movlb	4	; select bank4
 10149  01A8  0850               	movf	run_star_demo@select_ed^(0+512),w
 10150  01A9  0709               	addwf	9,w
 10151  01AA  0709               	addwf	9,w
 10152  01AB  3EA3               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+3)))& (0+255)
 10153  01AC  0086               	movwf	6
 10154  01AD  3001               	movlw	1	; select bank3/4
 10155  01AE  0087               	movwf	7
 10156  01AF  0801               	movf	1,w
 10157  01B0  0020               	movlb	0	; select bank0
 10158  01B1  00B7               	movwf	?_sprintf+2
 10159  01B2  01B8               	clrf	?_sprintf+3
 10160  01B3  0024               	movlb	4	; select bank4
 10161  01B4  0850               	movf	run_star_demo@select_ed^(0+512),w
 10162  01B5  0709               	addwf	9,w
 10163  01B6  0709               	addwf	9,w
 10164  01B7  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+256)))& (0+255)
 10165  01B8  0086               	movwf	6
 10166  01B9  0801               	movf	1,w
 10167  01BA  0020               	movlb	0	; select bank0
 10168  01BB  00B9               	movwf	?_sprintf+4
 10169  01BC  01BA               	clrf	?_sprintf+5
 10170  01BD  0024               	movlb	4	; select bank4
 10171  01BE  0850               	movf	run_star_demo@select_ed^(0+512),w
 10172  01BF  0709               	addwf	9,w
 10173  01C0  0709               	addwf	9,w
 10174  01C1  3EA1               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+1)))& (0+255)
 10175  01C2  0086               	movwf	6
 10176  01C3  0801               	movf	1,w
 10177  01C4  0020               	movlb	0	; select bank0
 10178  01C5  00BB               	movwf	?_sprintf+6
 10179  01C6  01BC               	clrf	?_sprintf+7
 10180  01C7  0024               	movlb	4	; select bank4
 10181  01C8  0850               	movf	run_star_demo@select_ed^(0+512),w
 10182  01C9  0709               	addwf	9,w
 10183  01CA  0709               	addwf	9,w
 10184  01CB  3EA2               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+2)))& (0+255)
 10185  01CC  0086               	movwf	6
 10186  01CD  0801               	movf	1,w
 10187  01CE  0020               	movlb	0	; select bank0
 10188  01CF  00BD               	movwf	?_sprintf+8
 10189  01D0  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
 10190  01D1  01BE               	clrf	?_sprintf+9
 10191  01D2  318A  228E  3181   	fcall	_sprintf
 10192                           
 10193                           ;star_demo.c: 170: }
 10194                           ;star_demo.c: 171: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
 10195                           ;star_demo.c: 172: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
 10196  01D5  3012               	movlw	low (STR_10| (0+32768))
 10197  01D6  00B5               	movwf	sprintf@f
 10198  01D7  30A9               	movlw	high (STR_10| (0+32768))
 10199  01D8  00B6               	movwf	sprintf@f+1
 10200  01D9  0024               	movlb	4	; select bank4
 10201  01DA  0850               	movf	run_star_demo@select_ed^(0+512),w
 10202  01DB  0709               	addwf	9,w
 10203  01DC  0709               	addwf	9,w
 10204  01DD  3EA3               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+3)))& (0+255)
 10205  01DE  0086               	movwf	6
 10206  01DF  3001               	movlw	1	; select bank3/4
 10207  01E0  0087               	movwf	7
 10208  01E1  0801               	movf	1,w
 10209  01E2  0020               	movlb	0	; select bank0
 10210  01E3  00B7               	movwf	?_sprintf+2
 10211  01E4  01B8               	clrf	?_sprintf+3
 10212  01E5  0024               	movlb	4	; select bank4
 10213  01E6  0850               	movf	run_star_demo@select_ed^(0+512),w
 10214  01E7  0709               	addwf	9,w
 10215  01E8  0709               	addwf	9,w
 10216  01E9  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+256)))& (0+255)
 10217  01EA  0086               	movwf	6
 10218  01EB  0801               	movf	1,w
 10219  01EC  0020               	movlb	0	; select bank0
 10220  01ED  00B9               	movwf	?_sprintf+4
 10221  01EE  01BA               	clrf	?_sprintf+5
 10222  01EF  0024               	movlb	4	; select bank4
 10223  01F0  0850               	movf	run_star_demo@select_ed^(0+512),w
 10224  01F1  0709               	addwf	9,w
 10225  01F2  0709               	addwf	9,w
 10226  01F3  3EA1               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+1)))& (0+255)
 10227  01F4  0086               	movwf	6
 10228  01F5  0801               	movf	1,w
 10229  01F6  0020               	movlb	0	; select bank0
 10230  01F7  00BB               	movwf	?_sprintf+6
 10231  01F8  01BC               	clrf	?_sprintf+7
 10232  01F9  0024               	movlb	4	; select bank4
 10233  01FA  0850               	movf	run_star_demo@select_ed^(0+512),w
 10234  01FB  0709               	addwf	9,w
 10235  01FC  0709               	addwf	9,w
 10236  01FD  3EA2               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+2)))& (0+255)
 10237  01FE  0086               	movwf	6
 10238  01FF  0801               	movf	1,w
 10239  0200  0020               	movlb	0	; select bank0
 10240  0201  00BD               	movwf	?_sprintf+8
 10241  0202  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
 10242  0203  01BE               	clrf	?_sprintf+9
 10243  0204  318A  228E  3181   	fcall	_sprintf
 10244                           
 10245                           ;star_demo.c: 173: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
 10246  0207  309B               	movlw	low (STR_12| (0+32768))
 10247  0208  00B5               	movwf	sprintf@f
 10248  0209  30A9               	movlw	high (STR_12| (0+32768))
 10249  020A  00B6               	movwf	sprintf@f+1
 10250  020B  30D5               	movlw	(low ((_LCDText| (0+256)+16)))& (0+255)
 10251  020C  318A  228E  3181   	fcall	_sprintf
 10252                           
 10253                           ;star_demo.c: 174: LCD_Update();
 10254  020F  318A  2220  3181   	fcall	_LCD_Update
 10255                           
 10256                           ;star_demo.c: 175: chk_sel_status = 1;
 10257  0212  0022               	movlb	2	; select bank2
 10258  0213  01D4               	clrf	_chk_sel_status^(0+256)
 10259  0214  0AD4               	incf	_chk_sel_status^(0+256),f
 10260  0215                     l11220:	
 10261                           ;star_demo.c: 177: while(chk_sel_status)
 10262                           
 10263  0215  0022               	movlb	2	; select bank2
 10264  0216  0854               	movf	_chk_sel_status^(0+256),w
 10265  0217  1903               	btfsc	3,2
 10266  0218  2991               	goto	l11222
 10267                           
 10268                           ;star_demo.c: 178: {
 10269                           ;star_demo.c: 180: uint8_t switch_val = ButtonPressed();
 10270  0219  2398  3181         	fcall	_ButtonPressed
 10271  021B  0024               	movlb	4	; select bank4
 10272  021C  00CF               	movwf	run_star_demo@switch_val^(0+512)
 10273                           
 10274                           ;star_demo.c: 182: Process_RxMessage ();
 10275  021D  2404  3181         	fcall	_Process_RxMessage
 10276                           
 10277                           ;star_demo.c: 183: bool sw_layer_ack_status , mac_ack_status;
 10278                           ;star_demo.c: 184: if(switch_val == 1)
 10279  021F  0024               	movlb	4	; select bank4
 10280  0220  0B4F               	decfsz	run_star_demo@switch_val^(0+512),w
 10281  0221  2AFD               	goto	l11210
 10282                           
 10283                           ;star_demo.c: 185: {
 10284                           ;star_demo.c: 186: update_ed = 0;
 10285  0222  01CD               	clrf	run_star_demo@update_ed^(0+512)
 10286                           
 10287                           ;star_demo.c: 188: TxSynCount2++;
 10288  0223  0022               	movlb	2	; select bank2
 10289  0224  01D4               	clrf	_chk_sel_status^(0+256)
 10290                           
 10291                           ;star_demo.c: 189: if (myConnectionIndex_in_PanCo == select_ed)
 10292  0225  0020               	movlb	0	; select bank0
 10293  0226  0864               	movf	_myConnectionIndex_in_PanCo,w
 10294  0227  0024               	movlb	4	; select bank4
 10295  0228  0650               	xorwf	run_star_demo@select_ed^(0+512),w
 10296  0229  1D03               	skipz
 10297  022A  2A6D               	goto	l11166
 10298                           
 10299                           ;star_demo.c: 190: {
 10300                           ;star_demo.c: 191: {TxData = 0;};
 10301  022B  0021               	movlb	1	; select bank1
 10302  022C  01EC               	clrf	_TxData^(0+128)
 10303                           
 10304                           ;star_demo.c: 192: for (i = 0 ; i < 21 ; i++)
 10305  022D  0020               	movlb	0	; select bank0
 10306  022E  01DF               	clrf	_i
 10307  022F                     l11154:	
 10308                           
 10309                           ;star_demo.c: 193: {
 10310                           ;star_demo.c: 194: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
 10311  022F  0021               	movlb	1	; select bank1
 10312  0230  086C               	movf	_TxData^(0+128),w
 10313  0231  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10314  0232  0086               	movwf	6
 10315  0233  3002               	movlw	2	; select bank4/5
 10316  0234  0087               	movwf	7
 10317  0235  3006               	movlw	6
 10318  0236  0020               	movlb	0	; select bank0
 10319  0237  00A9               	movwf	___lbmod@divisor
 10320  0238  0022               	movlb	2	; select bank2
 10321  0239  0853               	movf	_TxSynCount^(0+256),w
 10322  023A  237E               	fcall	___lbmod
 10323  023B  00AE               	movwf	___wmul@multiplier
 10324  023C  3015               	movlw	21
 10325  023D  01AF               	clrf	___wmul@multiplier+1
 10326  023E  00B0               	movwf	___wmul@multiplicand
 10327  023F  01B1               	clrf	___wmul@multiplicand+1
 10328  0240  319F  27EB  3181   	fcall	___wmul
 10329  0243  3000               	movlw	low (_MiWi| (0+32768))
 10330  0244  0024               	movlb	4	; select bank4
 10331  0245  00C8               	movwf	??_run_star_demo^(0+512)
 10332  0246  30A8               	movlw	high (_MiWi| (0+32768))
 10333  0247  00C9               	movwf	(??_run_star_demo^(0+512)+1)
 10334  0248  0020               	movlb	0	; select bank0
 10335  0249  082E               	movf	?___wmul,w
 10336  024A  0024               	movlb	4	; select bank4
 10337  024B  0748               	addwf	??_run_star_demo^(0+512),w
 10338  024C  00CA               	movwf	(??_run_star_demo+2)^(0+512)
 10339  024D  0020               	movlb	0	; select bank0
 10340  024E  082F               	movf	?___wmul+1,w
 10341  024F  0024               	movlb	4	; select bank4
 10342  0250  3D49               	addwfc	(??_run_star_demo+1)^(0+512),w
 10343  0251  00CB               	movwf	(??_run_star_demo+3)^(0+512)
 10344  0252  0020               	movlb	0	; select bank0
 10345  0253  085F               	movf	_i,w
 10346  0254  0024               	movlb	4	; select bank4
 10347  0255  074A               	addwf	(??_run_star_demo+2)^(0+512),w
 10348  0256  0084               	movwf	4
 10349  0257  084B               	movf	((??_run_star_demo+2)^(0+512)+1),w
 10350  0258  1803               	skipnc
 10351  0259  0A4B               	incf	((??_run_star_demo+2)^(0+512)+1),w
 10352  025A  0085               	movwf	5
 10353  025B  0800               	movf	0,w	;code access
 10354  025C  0081               	movwf	1
 10355  025D  0021               	movlb	1	; select bank1
 10356  025E  0AEC               	incf	_TxData^(0+128),f
 10357  025F  0020               	movlb	0	; select bank0
 10358  0260  3015               	movlw	21
 10359  0261  0ADF               	incf	_i,f
 10360  0262  025F               	subwf	_i,w
 10361  0263  1C03               	skipc
 10362  0264  2A2F               	goto	l11154
 10363                           
 10364                           ;star_demo.c: 195: }
 10365                           ;star_demo.c: 202: mac_ack_status = MiApp_UnicastConnection (0, 0);
 10366  0265  0021               	movlb	1	; select bank1
 10367  0266  3000               	movlw	0
 10368  0267  01B8               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
 10369  0268  2439  3181         	fcall	_MiApp_UnicastConnection
 10370  026A                     l11164:	
 10371                           
 10372                           ;star_demo.c: 204: TxNum++;
 10373  026A  0022               	movlb	2	; select bank2
 10374  026B  0AD2               	incf	_TxNum^(0+256),f
 10375                           
 10376                           ;star_demo.c: 205: }
 10377  026C  2AEB               	goto	l1123
 10378  026D                     l11166:	
 10379                           
 10380                           ;star_demo.c: 207: else
 10381                           ;star_demo.c: 208: {
 10382                           ;star_demo.c: 213: {TxData = 0;};
 10383  026D  0021               	movlb	1	; select bank1
 10384  026E  01EC               	clrf	_TxData^(0+128)
 10385                           
 10386                           ;star_demo.c: 214: TxBuffer[TxData++] = 0xCC;
 10387  026F  086C               	movf	_TxData^(0+128),w
 10388  0270  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10389  0271  0086               	movwf	6
 10390  0272  3002               	movlw	2	; select bank4/5
 10391  0273  0087               	movwf	7
 10392  0274  30CC               	movlw	204
 10393  0275  0081               	movwf	1
 10394  0276  0AEC               	incf	_TxData^(0+128),f
 10395                           
 10396                           ;star_demo.c: 215: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
 10397  0277  086C               	movf	_TxData^(0+128),w
 10398  0278  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10399  0279  0086               	movwf	6
 10400  027A  0024               	movlb	4	; select bank4
 10401  027B  0850               	movf	run_star_demo@select_ed^(0+512),w
 10402  027C  0709               	addwf	9,w
 10403  027D  0709               	addwf	9,w
 10404  027E  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+256)))& (0+255)
 10405  027F  0084               	movwf	4
 10406  0280  3001               	movlw	1	; select bank3/4
 10407  0281  0085               	movwf	5
 10408  0282  0800               	movf	0,w
 10409  0283  0081               	movwf	1
 10410  0284  0021               	movlb	1	; select bank1
 10411  0285  0AEC               	incf	_TxData^(0+128),f
 10412                           
 10413                           ;star_demo.c: 216: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
 10414  0286  086C               	movf	_TxData^(0+128),w
 10415  0287  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10416  0288  0086               	movwf	6
 10417  0289  0024               	movlb	4	; select bank4
 10418  028A  0850               	movf	run_star_demo@select_ed^(0+512),w
 10419  028B  0709               	addwf	9,w
 10420  028C  0709               	addwf	9,w
 10421  028D  3EA1               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+1)))& (0+255)
 10422  028E  0084               	movwf	4
 10423  028F  0800               	movf	0,w
 10424  0290  0081               	movwf	1
 10425  0291  0021               	movlb	1	; select bank1
 10426  0292  0AEC               	incf	_TxData^(0+128),f
 10427                           
 10428                           ;star_demo.c: 217: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
 10429  0293  086C               	movf	_TxData^(0+128),w
 10430  0294  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10431  0295  0086               	movwf	6
 10432  0296  0024               	movlb	4	; select bank4
 10433  0297  0850               	movf	run_star_demo@select_ed^(0+512),w
 10434  0298  0709               	addwf	9,w
 10435  0299  0709               	addwf	9,w
 10436  029A  3EA2               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+2)))& (0+255)
 10437  029B  0084               	movwf	4
 10438  029C  0800               	movf	0,w
 10439  029D  0081               	movwf	1
 10440  029E  0021               	movlb	1	; select bank1
 10441  029F  3004               	movlw	4
 10442  02A0  0AEC               	incf	_TxData^(0+128),f
 10443                           
 10444                           ;star_demo.c: 218: for (i = 4 ; i < 25 ; i++)
 10445  02A1  0020               	movlb	0	; select bank0
 10446  02A2  00DF               	movwf	_i
 10447  02A3                     l11190:	
 10448                           
 10449                           ;star_demo.c: 219: {
 10450                           ;star_demo.c: 220: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
 10451  02A3  0021               	movlb	1	; select bank1
 10452  02A4  086C               	movf	_TxData^(0+128),w
 10453  02A5  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10454  02A6  0086               	movwf	6
 10455  02A7  3002               	movlw	2	; select bank4/5
 10456  02A8  0087               	movwf	7
 10457  02A9  3006               	movlw	6
 10458  02AA  0020               	movlb	0	; select bank0
 10459  02AB  00A9               	movwf	___lbmod@divisor
 10460  02AC  0022               	movlb	2	; select bank2
 10461  02AD  0853               	movf	_TxSynCount^(0+256),w
 10462  02AE  237E               	fcall	___lbmod
 10463  02AF  00AE               	movwf	___wmul@multiplier
 10464  02B0  3015               	movlw	21
 10465  02B1  01AF               	clrf	___wmul@multiplier+1
 10466  02B2  00B0               	movwf	___wmul@multiplicand
 10467  02B3  01B1               	clrf	___wmul@multiplicand+1
 10468  02B4  319F  27EB  3181   	fcall	___wmul
 10469  02B7  30FC               	movlw	low ((_MiWi| (0+32768)+65532))
 10470  02B8  0024               	movlb	4	; select bank4
 10471  02B9  00C8               	movwf	??_run_star_demo^(0+512)
 10472  02BA  30A7               	movlw	high ((_MiWi| (0+32768)+65532))
 10473  02BB  00C9               	movwf	(??_run_star_demo^(0+512)+1)
 10474  02BC  0020               	movlb	0	; select bank0
 10475  02BD  082E               	movf	?___wmul,w
 10476  02BE  0024               	movlb	4	; select bank4
 10477  02BF  0748               	addwf	??_run_star_demo^(0+512),w
 10478  02C0  00CA               	movwf	(??_run_star_demo+2)^(0+512)
 10479  02C1  0020               	movlb	0	; select bank0
 10480  02C2  082F               	movf	?___wmul+1,w
 10481  02C3  0024               	movlb	4	; select bank4
 10482  02C4  3D49               	addwfc	(??_run_star_demo+1)^(0+512),w
 10483  02C5  00CB               	movwf	(??_run_star_demo+3)^(0+512)
 10484  02C6  0020               	movlb	0	; select bank0
 10485  02C7  085F               	movf	_i,w
 10486  02C8  0024               	movlb	4	; select bank4
 10487  02C9  074A               	addwf	(??_run_star_demo+2)^(0+512),w
 10488  02CA  0084               	movwf	4
 10489  02CB  084B               	movf	((??_run_star_demo+2)^(0+512)+1),w
 10490  02CC  1803               	skipnc
 10491  02CD  0A4B               	incf	((??_run_star_demo+2)^(0+512)+1),w
 10492  02CE  0085               	movwf	5
 10493  02CF  0800               	movf	0,w	;code access
 10494  02D0  0081               	movwf	1
 10495  02D1  0021               	movlb	1	; select bank1
 10496  02D2  0AEC               	incf	_TxData^(0+128),f
 10497  02D3  0020               	movlb	0	; select bank0
 10498  02D4  3019               	movlw	25
 10499  02D5  0ADF               	incf	_i,f
 10500  02D6  025F               	subwf	_i,w
 10501  02D7  1C03               	skipc
 10502  02D8  2AA3               	goto	l11190
 10503                           
 10504                           ;star_demo.c: 221: }
 10505                           ;star_demo.c: 225: sw_layer_ack_status = MiApp_UnicastStar (0);
 10506  02D9  3000               	movlw	0
 10507  02DA  2471  3181         	fcall	_MiApp_UnicastStar
 10508  02DC  0024               	movlb	4	; select bank4
 10509  02DD  00CC               	movwf	run_star_demo@sw_layer_ack_status^(0+512)
 10510                           
 10511                           ;star_demo.c: 230: if (sw_layer_ack_status)
 10512  02DE  084C               	movf	run_star_demo@sw_layer_ack_status^(0+512),w
 10513  02DF  1D03               	btfss	3,2
 10514  02E0  2A6A               	goto	l11164
 10515                           
 10516                           ;star_demo.c: 234: else
 10517                           ;star_demo.c: 235: {
 10518                           ;star_demo.c: 236: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
 10519  02E1  3053               	movlw	low (STR_13| (0+32768))
 10520  02E2  0020               	movlb	0	; select bank0
 10521  02E3  00D7               	movwf	LCDDisplay@text
 10522  02E4  30A9               	movlw	high (STR_13| (0+32768))
 10523  02E5  00D8               	movwf	LCDDisplay@text+1
 10524  02E6  01D9               	clrf	LCDDisplay@value
 10525  02E7  01DA               	clrf	LCDDisplay@delay
 10526  02E8  3188  20F7  3181   	fcall	_LCDDisplay
 10527  02EB                     l1123:	
 10528                           
 10529                           ;star_demo.c: 237: }
 10530                           ;star_demo.c: 242: }
 10531                           ;star_demo.c: 243: DemoOutput_UpdateTxRx(TxNum, RxNum);
 10532  02EB  0022               	movlb	2	; select bank2
 10533  02EC  0851               	movf	_RxNum^(0+256),w
 10534  02ED  0020               	movlb	0	; select bank0
 10535  02EE  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
 10536  02EF  0022               	movlb	2	; select bank2
 10537  02F0  0852               	movf	_TxNum^(0+256),w
 10538  02F1  23FD               	fcall	_DemoOutput_UpdateTxRx
 10539                           
 10540                           ;star_demo.c: 244: DELAY_ms(1500);
 10541  02F2  30DC               	movlw	220
 10542  02F3  00B5               	movwf	DELAY_ms@ms
 10543  02F4  3005               	movlw	5
 10544  02F5  00B6               	movwf	DELAY_ms@ms+1
 10545  02F6  3189  2157  3181   	fcall	_DELAY_ms
 10546                           
 10547                           ;star_demo.c: 245: STAR_DEMO_OPTIONS_MESSAGE (role);
 10548  02F9  0865               	movf	_role,w
 10549  02FA  2397  3181         	fcall	_STAR_DEMO_OPTIONS_MESSAGE
 10550                           
 10551                           ;star_demo.c: 246: }
 10552  02FC  2A15               	goto	l11220
 10553  02FD                     l11210:	
 10554                           
 10555                           ;star_demo.c: 247: else if(switch_val == 2)
 10556  02FD  3002               	movlw	2
 10557  02FE  064F               	xorwf	run_star_demo@switch_val^(0+512),w
 10558  02FF  1D03               	btfss	3,2
 10559  0300  2A15               	goto	l11220
 10560                           
 10561                           ;star_demo.c: 248: {
 10562                           ;star_demo.c: 249: if (select_ed > end_nodes-1)
 10563  0301  0022               	movlb	2	; select bank2
 10564  0302  0856               	movf	_end_nodes^(0+256),w
 10565  0303  3EFF               	addlw	255
 10566  0304  0024               	movlb	4	; select bank4
 10567  0305  00C8               	movwf	??_run_star_demo^(0+512)
 10568  0306  30FF               	movlw	255
 10569  0307  1803               	skipnc
 10570  0308  3000               	movlw	0
 10571  0309  00C9               	movwf	(??_run_star_demo^(0+512)+1)
 10572  030A  0849               	movf	(??_run_star_demo+1)^(0+512),w
 10573  030B  3A80               	xorlw	128
 10574  030C  00CA               	movwf	(??_run_star_demo+2)^(0+512)
 10575  030D  3080               	movlw	128
 10576  030E  024A               	subwf	(??_run_star_demo+2)^(0+512),w
 10577  030F  1D03               	skipz
 10578  0310  2B13               	goto	u10715
 10579  0311  0850               	movf	run_star_demo@select_ed^(0+512),w
 10580  0312  0248               	subwf	??_run_star_demo^(0+512),w
 10581  0313                     u10715:	
 10582  0313  1803               	skipnc
 10583  0314  2B18               	goto	l11216
 10584                           
 10585                           ;star_demo.c: 250: {
 10586                           ;star_demo.c: 252: select_ed = 0;
 10587  0315  0024               	movlb	4	; select bank4
 10588  0316  01D0               	clrf	run_star_demo@select_ed^(0+512)
 10589                           
 10590                           ;star_demo.c: 253: }
 10591  0317  2B1A               	goto	l11218
 10592  0318                     l11216:	
 10593                           
 10594                           ;star_demo.c: 254: else
 10595                           ;star_demo.c: 255: {
 10596                           ;star_demo.c: 257: select_ed = select_ed+1;
 10597  0318  0024               	movlb	4	; select bank4
 10598  0319  0AD0               	incf	run_star_demo@select_ed^(0+512),f
 10599  031A                     l11218:	
 10600                           
 10601                           ;star_demo.c: 258: }
 10602                           ;star_demo.c: 259: chk_sel_status = 0;
 10603  031A  0022               	movlb	2	; select bank2
 10604  031B  01D4               	clrf	_chk_sel_status^(0+256)
 10605  031C  2A15               	goto	l11220
 10606  031D                     l11224:	
 10607                           
 10608                           ;star_demo.c: 261: }
 10609                           ;star_demo.c: 262: }
 10610                           ;star_demo.c: 264: }
 10611                           ;star_demo.c: 266: }
 10612                           ;star_demo.c: 267: }
 10613                           ;star_demo.c: 268: }
 10614                           ;star_demo.c: 272: if (lost_connection && !role)
 10615  031D  0022               	movlb	2	; select bank2
 10616  031E  0857               	movf	_lost_connection^(0+256),w
 10617  031F  1903               	btfsc	3,2
 10618  0320  2B2C               	goto	l11232
 10619  0321  0020               	movlb	0	; select bank0
 10620  0322  0865               	movf	_role,w
 10621  0323  1D03               	btfss	3,2
 10622  0324  2B2C               	goto	l11232
 10623                           
 10624                           ;star_demo.c: 273: {
 10625                           ;star_demo.c: 274: MiApp_EstablishConnection(0xFF, 0x00);
 10626  0325  0021               	movlb	1	; select bank1
 10627  0326  01D9               	clrf	MiApp_EstablishConnection@Mode^(0+128)
 10628  0327  318E  26BE  3181   	fcall	_MiApp_EstablishConnection
 10629                           
 10630                           ;star_demo.c: 275: lost_connection = 0;
 10631  032A  0022               	movlb	2	; select bank2
 10632  032B  01D7               	clrf	_lost_connection^(0+256)
 10633  032C                     l11232:	
 10634                           
 10635                           ;star_demo.c: 277: }
 10636                           ;star_demo.c: 279: t2 = MiWi_TickGet ();
 10637  032C  3197  2789  3181   	fcall	_MiWi_TickGet
 10638  032F  082C               	movf	?_MiWi_TickGet+3,w
 10639  0330  0023               	movlb	3	; select bank3
 10640  0331  00C4               	movwf	(_t2+3)^(0+384)
 10641  0332  0020               	movlb	0	; select bank0
 10642  0333  082B               	movf	?_MiWi_TickGet+2,w
 10643  0334  0023               	movlb	3	; select bank3
 10644  0335  00C3               	movwf	(_t2+2)^(0+384)
 10645  0336  0020               	movlb	0	; select bank0
 10646  0337  082A               	movf	?_MiWi_TickGet+1,w
 10647  0338  0023               	movlb	3	; select bank3
 10648  0339  00C2               	movwf	(_t2+1)^(0+384)
 10649  033A  0020               	movlb	0	; select bank0
 10650  033B  0829               	movf	?_MiWi_TickGet,w
 10651  033C  0023               	movlb	3	; select bank3
 10652  033D  00C1               	movwf	_t2^(0+384)
 10653                           
 10654                           ;star_demo.c: 281: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)*15) && role)
 10655  033E  083D               	movf	_t1^(0+384),w
 10656  033F  0241               	subwf	_t2^(0+384),w
 10657  0340  0024               	movlb	4	; select bank4
 10658  0341  00C8               	movwf	??_run_star_demo^(0+512)
 10659  0342  0023               	movlb	3	; select bank3
 10660  0343  083E               	movf	(_t1+1)^(0+384),w
 10661  0344  3B42               	subwfb	(_t2+1)^(0+384),w
 10662  0345  0024               	movlb	4	; select bank4
 10663  0346  00C9               	movwf	(??_run_star_demo^(0+512)+1)
 10664  0347  0023               	movlb	3	; select bank3
 10665  0348  083F               	movf	(_t1+2)^(0+384),w
 10666  0349  3B43               	subwfb	(_t2+2)^(0+384),w
 10667  034A  0024               	movlb	4	; select bank4
 10668  034B  00CA               	movwf	(??_run_star_demo^(0+512)+2)
 10669  034C  0023               	movlb	3	; select bank3
 10670  034D  0840               	movf	(_t1+3)^(0+384),w
 10671  034E  3B44               	subwfb	(_t2+3)^(0+384),w
 10672  034F  0024               	movlb	4	; select bank4
 10673  0350  00CB               	movwf	(??_run_star_demo^(0+512)+3)
 10674  0351  084B               	movf	(??_run_star_demo^(0+512)+3),w
 10675  0352  1D03               	btfss	3,2
 10676  0353  2B5C               	goto	l11236
 10677  0354  308D               	movlw	141
 10678  0355  0248               	subwf	??_run_star_demo^(0+512),w
 10679  0356  3086               	movlw	134
 10680  0357  3B49               	subwfb	(??_run_star_demo^(0+512)+1),w
 10681  0358  3047               	movlw	71
 10682  0359  3B4A               	subwfb	(??_run_star_demo^(0+512)+2),w
 10683  035A  1C03               	btfss	3,0
 10684  035B  2928               	goto	l11250
 10685  035C                     l11236:	
 10686  035C  0020               	movlb	0	; select bank0
 10687  035D  0865               	movf	_role,w
 10688  035E  1903               	btfsc	3,2
 10689  035F  2928               	goto	l11250
 10690                           
 10691                           ;star_demo.c: 282: {
 10692                           ;star_demo.c: 283: LCD_Erase();
 10693  0360  318A  2211  3181   	fcall	_LCD_Erase
 10694                           
 10695                           ;star_demo.c: 284: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
 10696  0363  3067               	movlw	low (STR_14| (0+32768))
 10697  0364  00B5               	movwf	sprintf@f
 10698  0365  30A9               	movlw	high (STR_14| (0+32768))
 10699  0366  00B6               	movwf	sprintf@f+1
 10700  0367  0862               	movf	_conn_size,w
 10701  0368  00B7               	movwf	?_sprintf+2
 10702  0369  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
 10703  036A  01B8               	clrf	?_sprintf+3
 10704  036B  318A  228E  3181   	fcall	_sprintf
 10705                           
 10706                           ;star_demo.c: 285: LCD_Update();
 10707  036E  318A  2220  3181   	fcall	_LCD_Update
 10708                           
 10709                           ;star_demo.c: 286: DELAY_ms(2000);
 10710  0371  30D0               	movlw	208
 10711  0372  00B5               	movwf	DELAY_ms@ms
 10712  0373  3007               	movlw	7
 10713  0374  00B6               	movwf	DELAY_ms@ms+1
 10714  0375  3189  2157  3181   	fcall	_DELAY_ms
 10715                           
 10716                           ;star_demo.c: 287: display_connections = 0;
 10717  0378  0022               	movlb	2	; select bank2
 10718  0379  3001               	movlw	1
 10719  037A  01D5               	clrf	_display_connections^(0+256)
 10720                           
 10721                           ;star_demo.c: 288: STAR_DEMO_OPTIONS_MESSAGE (1);
 10722  037B  2397  3181         	fcall	_STAR_DEMO_OPTIONS_MESSAGE
 10723  037D  2928               	goto	l11250
 10724  037E                     __end_of_run_star_demo:	
 10725  037E                     __ptext9:	
 10726 ;; *************** function ___lbmod *****************
 10727 ;; Defined at:
 10728 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  dividend        1    wreg     unsigned char 
 10731 ;;  divisor         1    9[BANK0 ] unsigned char 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  dividend        1   11[BANK0 ] unsigned char 
 10734 ;;  rem             1   13[BANK0 ] unsigned char 
 10735 ;;  counter         1   12[BANK0 ] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      unsigned char 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0
 10740 ;; Tracked objects:
 10741 ;;		On entry : 1F/2
 10742 ;;		On exit  : 1F/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10745 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;Total ram usage:        5 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    4
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_run_star_demo
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function ___lbmod
 10761  037E                     ___lbmod:	
 10762                           
 10763                           ;incstack = 0
 10764                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 10765                           ;___lbmod@dividend stored from wreg
 10766  037E  0020               	movlb	0	; select bank0
 10767  037F  00AB               	movwf	___lbmod@dividend
 10768  0380  3008               	movlw	8
 10769  0381  00AC               	movwf	___lbmod@counter
 10770  0382  01AD               	clrf	___lbmod@rem
 10771  0383                     l10896:	
 10772  0383  082B               	movf	___lbmod@dividend,w
 10773  0384  00AA               	movwf	??___lbmod
 10774  0385  3007               	movlw	7
 10775  0386                     u10485:	
 10776  0386  36AA               	lsrf	??___lbmod,f
 10777  0387  0B89               	decfsz	9,f
 10778  0388  2B86               	goto	u10485
 10779  0389  352D               	lslf	___lbmod@rem,w
 10780  038A  042A               	iorwf	??___lbmod,w
 10781  038B  00AD               	movwf	___lbmod@rem
 10782  038C  35AB               	lslf	___lbmod@dividend,f
 10783  038D  0829               	movf	___lbmod@divisor,w
 10784  038E  022D               	subwf	___lbmod@rem,w
 10785  038F  1C03               	skipc
 10786  0390  2B93               	goto	l10904
 10787  0391  0829               	movf	___lbmod@divisor,w
 10788  0392  02AD               	subwf	___lbmod@rem,f
 10789  0393                     l10904:	
 10790  0393  0BAC               	decfsz	___lbmod@counter,f
 10791  0394  2B83               	goto	l10896
 10792  0395  082D               	movf	___lbmod@rem,w
 10793  0396  0008               	return
 10794  0397                     __end_of___lbmod:	
 10795  0397                     __ptext18:	
 10796 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
 10797 ;; Defined at:
 10798 ;;		line 310 in file "../src/demo_ouput.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  NetworkRole     1    wreg     unsigned char 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  NetworkRole     1    9[BANK0 ] unsigned char 
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, status,2, status,0
 10807 ;; Tracked objects:
 10808 ;;		On entry : 1D/0
 10809 ;;		On exit  : 1D/0
 10810 ;;		Unchanged: 1D/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;Total ram usage:        1 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:    4
 10819 ;; This function calls:
 10820 ;;		Nothing
 10821 ;; This function is called by:
 10822 ;;		_Process_RxMessage
 10823 ;;		_run_star_demo
 10824 ;;		_Initialize_Demo
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           
 10829                           ;psect for function _STAR_DEMO_OPTIONS_MESSAGE
 10830  0397                     _STAR_DEMO_OPTIONS_MESSAGE:	
 10831  0397                     l990:	
 10832                           ;incstack = 0
 10833                           ; Regs used in _STAR_DEMO_OPTIONS_MESSAGE: [wreg+status,2+status,0]
 10834                           
 10835  0397  0008               	return
 10836  0398                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:	
 10837  0398                     __ptext16:	
 10838 ;; *************** function _ButtonPressed *****************
 10839 ;; Defined at:
 10840 ;;		line 357 in file "../src/demo_ouput.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  t               4   19[BANK0 ] struct _MIWI_TICK
 10845 ;;  tickDifferen    4   23[BANK0 ] struct _MIWI_TICK
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      unsigned char 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0, pclath, cstack
 10850 ;; Tracked objects:
 10851 ;;		On entry : 1C/1
 10852 ;;		On exit  : 1C/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        8 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    5
 10862 ;; This function calls:
 10863 ;;		_MiWi_TickGet
 10864 ;; This function is called by:
 10865 ;;		_run_star_demo
 10866 ;;		_freezer_feature
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           
 10871                           ;psect for function _ButtonPressed
 10872  0398                     _ButtonPressed:	
 10873                           
 10874                           ;demo_ouput.c: 359: MIWI_TICK tickDifference;
 10875                           ;demo_ouput.c: 361: if(PORTBbits.RB0 == 0)
 10876                           
 10877                           ;incstack = 0
 10878                           ; Regs used in _ButtonPressed: [wreg+status,2+status,0+pclath+cstack]
 10879  0398  0020               	movlb	0	; select bank0
 10880  0399  180D               	btfsc	13,0	;volatile
 10881  039A  2BB3               	goto	l993
 10882                           
 10883                           ;demo_ouput.c: 362: {
 10884                           ;demo_ouput.c: 364: if(PUSH_BUTTON_pressed == 0)
 10885  039B  0022               	movlb	2	; select bank2
 10886  039C  0850               	movf	_PUSH_BUTTON_pressed^(0+256),w
 10887  039D  1D03               	btfss	3,2
 10888  039E  3400               	retlw	0
 10889                           
 10890                           ;demo_ouput.c: 365: {
 10891                           ;demo_ouput.c: 366: PUSH_BUTTON_pressed = 1;
 10892  039F  01D0               	clrf	_PUSH_BUTTON_pressed^(0+256)
 10893  03A0  0AD0               	incf	_PUSH_BUTTON_pressed^(0+256),f
 10894                           
 10895                           ;demo_ouput.c: 367: PUSH_BUTTON_press_time = MiWi_TickGet();
 10896  03A1  3197  2789         	fcall	_MiWi_TickGet
 10897  03A3  082C               	movf	?_MiWi_TickGet+3,w
 10898  03A4  0023               	movlb	3	; select bank3
 10899  03A5  00BC               	movwf	(_PUSH_BUTTON_press_time+3)^(0+384)
 10900  03A6  0020               	movlb	0	; select bank0
 10901  03A7  082B               	movf	?_MiWi_TickGet+2,w
 10902  03A8  0023               	movlb	3	; select bank3
 10903  03A9  00BB               	movwf	(_PUSH_BUTTON_press_time+2)^(0+384)
 10904  03AA  0020               	movlb	0	; select bank0
 10905  03AB  082A               	movf	?_MiWi_TickGet+1,w
 10906  03AC  0023               	movlb	3	; select bank3
 10907  03AD  00BA               	movwf	(_PUSH_BUTTON_press_time+1)^(0+384)
 10908  03AE  0020               	movlb	0	; select bank0
 10909  03AF  0829               	movf	?_MiWi_TickGet,w
 10910  03B0  0023               	movlb	3	; select bank3
 10911  03B1  00B9               	movwf	_PUSH_BUTTON_press_time^(0+384)
 10912                           
 10913                           ;demo_ouput.c: 368: return 1;
 10914  03B2  3401               	retlw	1
 10915  03B3                     l993:	
 10916                           
 10917                           ;demo_ouput.c: 371: else if(PORTAbits.RA5 == 0)
 10918  03B3  1A8C               	btfsc	12,5	;volatile
 10919  03B4  2BCD               	goto	l10852
 10920                           
 10921                           ;demo_ouput.c: 372: {
 10922                           ;demo_ouput.c: 374: if(PUSH_BUTTON_pressed == 0)
 10923  03B5  0022               	movlb	2	; select bank2
 10924  03B6  0850               	movf	_PUSH_BUTTON_pressed^(0+256),w
 10925  03B7  1D03               	btfss	3,2
 10926  03B8  3400               	retlw	0
 10927                           
 10928                           ;demo_ouput.c: 375: {
 10929                           ;demo_ouput.c: 376: PUSH_BUTTON_pressed = 1;
 10930  03B9  01D0               	clrf	_PUSH_BUTTON_pressed^(0+256)
 10931  03BA  0AD0               	incf	_PUSH_BUTTON_pressed^(0+256),f
 10932                           
 10933                           ;demo_ouput.c: 377: PUSH_BUTTON_press_time = MiWi_TickGet();
 10934  03BB  3197  2789         	fcall	_MiWi_TickGet
 10935  03BD  082C               	movf	?_MiWi_TickGet+3,w
 10936  03BE  0023               	movlb	3	; select bank3
 10937  03BF  00BC               	movwf	(_PUSH_BUTTON_press_time+3)^(0+384)
 10938  03C0  0020               	movlb	0	; select bank0
 10939  03C1  082B               	movf	?_MiWi_TickGet+2,w
 10940  03C2  0023               	movlb	3	; select bank3
 10941  03C3  00BB               	movwf	(_PUSH_BUTTON_press_time+2)^(0+384)
 10942  03C4  0020               	movlb	0	; select bank0
 10943  03C5  082A               	movf	?_MiWi_TickGet+1,w
 10944  03C6  0023               	movlb	3	; select bank3
 10945  03C7  00BA               	movwf	(_PUSH_BUTTON_press_time+1)^(0+384)
 10946  03C8  0020               	movlb	0	; select bank0
 10947  03C9  0829               	movf	?_MiWi_TickGet,w
 10948  03CA  0023               	movlb	3	; select bank3
 10949  03CB  00B9               	movwf	_PUSH_BUTTON_press_time^(0+384)
 10950                           
 10951                           ;demo_ouput.c: 378: return 2;
 10952  03CC  3402               	retlw	2
 10953  03CD                     l10852:	
 10954                           
 10955                           ;demo_ouput.c: 381: else
 10956                           ;demo_ouput.c: 382: {
 10957                           ;demo_ouput.c: 384: MIWI_TICK t = MiWi_TickGet();
 10958  03CD  3197  2789  3181   	fcall	_MiWi_TickGet
 10959  03D0  082C               	movf	?_MiWi_TickGet+3,w
 10960  03D1  00B6               	movwf	ButtonPressed@t+3
 10961  03D2  082B               	movf	?_MiWi_TickGet+2,w
 10962  03D3  00B5               	movwf	ButtonPressed@t+2
 10963  03D4  082A               	movf	?_MiWi_TickGet+1,w
 10964  03D5  00B4               	movwf	ButtonPressed@t+1
 10965  03D6  0829               	movf	?_MiWi_TickGet,w
 10966  03D7  00B3               	movwf	ButtonPressed@t
 10967                           
 10968                           ;demo_ouput.c: 387: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
 10969  03D8  0836               	movf	ButtonPressed@t+3,w
 10970  03D9  00BA               	movwf	ButtonPressed@tickDifference+3
 10971  03DA  0835               	movf	ButtonPressed@t+2,w
 10972  03DB  00B9               	movwf	ButtonPressed@tickDifference+2
 10973  03DC  0834               	movf	ButtonPressed@t+1,w
 10974  03DD  00B8               	movwf	ButtonPressed@tickDifference+1
 10975  03DE  0833               	movf	ButtonPressed@t,w
 10976  03DF  00B7               	movwf	ButtonPressed@tickDifference
 10977  03E0  0023               	movlb	3	; select bank3
 10978  03E1  0839               	movf	_PUSH_BUTTON_press_time^(0+384),w
 10979  03E2  0020               	movlb	0	; select bank0
 10980  03E3  02B7               	subwf	ButtonPressed@tickDifference,f
 10981  03E4  0023               	movlb	3	; select bank3
 10982  03E5  083A               	movf	(_PUSH_BUTTON_press_time+1)^(0+384),w
 10983  03E6  0020               	movlb	0	; select bank0
 10984  03E7  3BB8               	subwfb	ButtonPressed@tickDifference+1,f
 10985  03E8  0023               	movlb	3	; select bank3
 10986  03E9  083B               	movf	(_PUSH_BUTTON_press_time+2)^(0+384),w
 10987  03EA  0020               	movlb	0	; select bank0
 10988  03EB  3BB9               	subwfb	ButtonPressed@tickDifference+2,f
 10989  03EC  0023               	movlb	3	; select bank3
 10990  03ED  083C               	movf	(_PUSH_BUTTON_press_time+3)^(0+384),w
 10991  03EE  0020               	movlb	0	; select bank0
 10992  03EF  3BBA               	subwfb	ButtonPressed@tickDifference+3,f
 10993                           
 10994                           ;demo_ouput.c: 390: if(tickDifference.Val > 0x00003FFF)
 10995  03F0  083A               	movf	ButtonPressed@tickDifference+3,w
 10996  03F1  1D03               	btfss	3,2
 10997  03F2  2BFA               	goto	l10860
 10998  03F3  0839               	movf	ButtonPressed@tickDifference+2,w
 10999  03F4  1D03               	btfss	3,2
 11000  03F5  2BFA               	goto	l10860
 11001  03F6  3040               	movlw	64
 11002  03F7  0238               	subwf	ButtonPressed@tickDifference+1,w
 11003  03F8  1C03               	btfss	3,0
 11004  03F9  3400               	retlw	0
 11005  03FA                     l10860:	
 11006                           
 11007                           ;demo_ouput.c: 391: {
 11008                           ;demo_ouput.c: 392: PUSH_BUTTON_pressed = 0;
 11009  03FA  0022               	movlb	2	; select bank2
 11010  03FB  01D0               	clrf	_PUSH_BUTTON_pressed^(0+256)
 11011                           
 11012                           ;demo_ouput.c: 393: }
 11013                           ;demo_ouput.c: 394: }
 11014                           ;demo_ouput.c: 396: return 0;
 11015  03FC  3400               	retlw	0
 11016  03FD                     __end_of_ButtonPressed:	
 11017  03FD                     __ptext12:	
 11018 ;; *************** function _DemoOutput_UpdateTxRx *****************
 11019 ;; Defined at:
 11020 ;;		line 278 in file "../src/demo_ouput.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  TxNum           1    wreg     unsigned char 
 11023 ;;  RxNum           1   57[BANK0 ] unsigned char 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;  TxNum           1   58[BANK0 ] unsigned char 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11030 ;; Tracked objects:
 11031 ;;		On entry : 1F/2
 11032 ;;		On exit  : 1F/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11035 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;Total ram usage:        2 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    9
 11042 ;; This function calls:
 11043 ;;		_LCDTRXCount
 11044 ;; This function is called by:
 11045 ;;		_Process_RxMessage
 11046 ;;		_run_star_demo
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           
 11051                           ;psect for function _DemoOutput_UpdateTxRx
 11052  03FD                     _DemoOutput_UpdateTxRx:	
 11053                           
 11054                           ;incstack = 0
 11055                           ; Regs used in _DemoOutput_UpdateTxRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11056                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
 11057  03FD  0020               	movlb	0	; select bank0
 11058  03FE  00DA               	movwf	DemoOutput_UpdateTxRx@TxNum
 11059                           
 11060                           ;demo_ouput.c: 280: LCDTRXCount(TxNum, RxNum);
 11061  03FF  0859               	movf	DemoOutput_UpdateTxRx@RxNum,w
 11062  0400  00D7               	movwf	LCDTRXCount@rxCount
 11063  0401  085A               	movf	DemoOutput_UpdateTxRx@TxNum,w
 11064  0402  31A0  28E8         	ljmp	_LCDTRXCount
 11065  0404                     __end_of_DemoOutput_UpdateTxRx:	
 11066  0404                     __ptext10:	
 11067 ;; *************** function _Process_RxMessage *****************
 11068 ;; Defined at:
 11069 ;;		line 44 in file "../src/star_demo.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;		None
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  User_data_st    1   57[BANK1 ] unsigned char 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      unsigned char 
 11076 ;; Registers used:
 11077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 19/2
 11080 ;;		On exit  : 1F/1
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;Total ram usage:        1 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:   15
 11090 ;; This function calls:
 11091 ;;		_DELAY_ms
 11092 ;;		_DemoOutput_UpdateTxRx
 11093 ;;		_MiApp_DiscardMessage
 11094 ;;		_MiApp_MessageAvailable
 11095 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 11096 ;;		_Source_END_DEVICE_INFO
 11097 ;; This function is called by:
 11098 ;;		_run_star_demo
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           
 11103                           ;psect for function _Process_RxMessage
 11104  0404                     _Process_RxMessage:	
 11105                           
 11106                           ;star_demo.c: 53: User_data_status = MiApp_MessageAvailable();
 11107                           
 11108                           ;incstack = 0
 11109 ;; hardware stack exceeded
 11110                           ; Regs used in _Process_RxMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11111  0404  2456  3181         	fcall	_MiApp_MessageAvailable
 11112  0406  00D9               	movwf	Process_RxMessage@User_data_status^(0+128)
 11113                           
 11114                           ;star_demo.c: 54: if(User_data_status)
 11115  0407  0859               	movf	Process_RxMessage@User_data_status^(0+128),w
 11116  0408  1903               	btfsc	3,2
 11117  0409  2C32               	goto	l10888
 11118                           
 11119                           ;star_demo.c: 55: {
 11120                           ;star_demo.c: 65: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
 11121  040A  0022               	movlb	2	; select bank2
 11122  040B  0AD1               	incf	_RxNum^(0+256),f
 11123  040C  0851               	movf	_RxNum^(0+256),w
 11124  040D  0020               	movlb	0	; select bank0
 11125  040E  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
 11126  040F  0022               	movlb	2	; select bank2
 11127  0410  0852               	movf	_TxNum^(0+256),w
 11128  0411  23FD               	fcall	_DemoOutput_UpdateTxRx
 11129                           
 11130                           ;star_demo.c: 66: DELAY_ms(2000);
 11131  0412  30D0               	movlw	208
 11132  0413  00B5               	movwf	DELAY_ms@ms
 11133  0414  3007               	movlw	7
 11134  0415  00B6               	movwf	DELAY_ms@ms+1
 11135  0416  3189  2157  3181   	fcall	_DELAY_ms
 11136                           
 11137                           ;star_demo.c: 68: LATDbits.LATD6 ^= 1;
 11138  0419  3040               	movlw	64
 11139  041A  0022               	movlb	2	; select bank2
 11140  041B  068F               	xorwf	15,f	;volatile
 11141                           
 11142                           ;star_demo.c: 72: if (!role && !rxMessage.flags.bits.broadcast)
 11143  041C  0020               	movlb	0	; select bank0
 11144  041D  0865               	movf	_role,w
 11145  041E  1D03               	btfss	3,2
 11146  041F  2C2E               	goto	l10884
 11147  0420  0022               	movlb	2	; select bank2
 11148  0421  082B               	movf	_rxMessage^(0+256),w
 11149  0422  3903               	andlw	3
 11150  0423  1D03               	skipz
 11151  0424  2C2E               	goto	l10884
 11152                           
 11153                           ;star_demo.c: 73: {
 11154                           ;star_demo.c: 74: Source_END_DEVICE_INFO(rxMessage.Payload);
 11155  0425  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 11156  0426  0020               	movlb	0	; select bank0
 11157  0427  00D8               	movwf	Source_END_DEVICE_INFO@SrAddr+1
 11158  0428  0022               	movlb	2	; select bank2
 11159  0429  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 11160  042A  0020               	movlb	0	; select bank0
 11161  042B  00D7               	movwf	Source_END_DEVICE_INFO@SrAddr
 11162  042C  24D3  3181         	fcall	_Source_END_DEVICE_INFO
 11163  042E                     l10884:	
 11164                           
 11165                           ;star_demo.c: 75: }
 11166                           ;star_demo.c: 83: MiApp_DiscardMessage();
 11167  042E  2435  3181         	fcall	_MiApp_DiscardMessage
 11168                           
 11169                           ;star_demo.c: 84: STAR_DEMO_OPTIONS_MESSAGE (role);
 11170  0430  0865               	movf	_role,w
 11171  0431  2397               	fcall	_STAR_DEMO_OPTIONS_MESSAGE
 11172  0432                     l10888:	
 11173                           
 11174                           ;star_demo.c: 86: }
 11175                           ;star_demo.c: 87: return User_data_status;
 11176  0432  0021               	movlb	1	; select bank1
 11177  0433  0859               	movf	Process_RxMessage@User_data_status^(0+128),w
 11178  0434  0008               	return
 11179  0435                     __end_of_Process_RxMessage:	
 11180  0435                     __ptext61:	
 11181 ;; *************** function _MiApp_DiscardMessage *****************
 11182 ;; Defined at:
 11183 ;;		line 2384 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11192 ;; Tracked objects:
 11193 ;;		On entry : 1C/0
 11194 ;;		On exit  : 1F/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;Total ram usage:        0 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    6
 11204 ;; This function calls:
 11205 ;;		_MiMAC_DiscardPacket
 11206 ;; This function is called by:
 11207 ;;		_MiApp_EstablishConnection
 11208 ;;		_Process_RxMessage
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           
 11213                           ;psect for function _MiApp_DiscardMessage
 11214  0435                     _MiApp_DiscardMessage:	
 11215                           
 11216                           ;miwi_p2p.c: 2386: P2PStatus.bits.RxHasUserData = 0;
 11217                           
 11218                           ;incstack = 0
 11219                           ; Regs used in _MiApp_DiscardMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11220  0435  0021               	movlb	1	; select bank1
 11221  0436  11EB               	bcf	_P2PStatus^(0+128),3	;volatile
 11222                           
 11223                           ;miwi_p2p.c: 2387: MiMAC_DiscardPacket();
 11224  0437  3197  2F70         	ljmp	l9516
 11225  0439                     __end_of_MiApp_DiscardMessage:	
 11226  0439                     __ptext41:	
 11227 ;; *************** function _MiApp_UnicastConnection *****************
 11228 ;; Defined at:
 11229 ;;		line 1780 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  ConnectionIn    1    wreg     unsigned char 
 11232 ;;  SecEn           1   24[BANK1 ] unsigned char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  ConnectionIn    1   59[BANK0 ] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      unsigned char 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 1F/1
 11241 ;;		On exit  : 1E/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11244 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;Total ram usage:        2 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:   11
 11251 ;; This function calls:
 11252 ;;		_MiApp_UnicastAddress
 11253 ;;		___bmul
 11254 ;; This function is called by:
 11255 ;;		_Forward_Packet_PANCr_to_EDy
 11256 ;;		_run_star_demo
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           
 11261                           ;psect for function _MiApp_UnicastConnection
 11262  0439                     _MiApp_UnicastConnection:	
 11263                           
 11264                           ;incstack = 0
 11265 ;; hardware stack exceeded
 11266                           ; Regs used in _MiApp_UnicastConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11267                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 11268  0439  0020               	movlb	0	; select bank0
 11269  043A  00DB               	movwf	MiApp_UnicastConnection@ConnectionIndex
 11270                           
 11271                           ;miwi_p2p.c: 1783: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 11272  043B  300E               	movlw	14
 11273  043C  00A9               	movwf	___bmul@multiplicand
 11274  043D  085B               	movf	MiApp_UnicastConnection@ConnectionIndex,w
 11275  043E  3196  26E6  3181   	fcall	___bmul
 11276  0441  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 11277  0442  0086               	movwf	6
 11278  0443  3002               	movlw	2	; select bank5/6
 11279  0444  0087               	movwf	7
 11280  0445  1F81               	btfss	1,7
 11281  0446  3400               	retlw	0
 11282                           
 11283                           ;miwi_p2p.c: 1784: {
 11284                           ;miwi_p2p.c: 1817: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 11285  0447  0021               	movlb	1	; select bank1
 11286  0448  01B6               	clrf	MiApp_UnicastAddress@PermanentAddr^(0+128)
 11287  0449  0AB6               	incf	MiApp_UnicastAddress@PermanentAddr^(0+128),f
 11288  044A  0838               	movf	MiApp_UnicastConnection@SecEn^(0+128),w
 11289  044B  00B7               	movwf	MiApp_UnicastAddress@SecEn^(0+128)
 11290  044C  300E               	movlw	14
 11291  044D  0020               	movlb	0	; select bank0
 11292  044E  00A9               	movwf	___bmul@multiplicand
 11293  044F  085B               	movf	MiApp_UnicastConnection@ConnectionIndex,w
 11294  0450  3196  26E6  3181   	fcall	___bmul
 11295  0453  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 11296  0454  3198  2815         	ljmp	_MiApp_UnicastAddress
 11297  0456                     __end_of_MiApp_UnicastConnection:	
 11298                           ;miwi_p2p.c: 1818: }
 11299                           ;miwi_p2p.c: 1819: return 0;
 11300                           
 11301  0456                     __ptext30:	
 11302 ;; *************** function _MiApp_MessageAvailable *****************
 11303 ;; Defined at:
 11304 ;;		line 2406 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      unsigned char 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 18/2
 11315 ;;		On exit  : 1F/1
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;Total ram usage:        1 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:   14
 11325 ;; This function calls:
 11326 ;;		_P2PTasks
 11327 ;; This function is called by:
 11328 ;;		_MiApp_UnicastStar
 11329 ;;		_MiApp_EstablishConnection
 11330 ;;		_Process_RxMessage
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           
 11335                           ;psect for function _MiApp_MessageAvailable
 11336  0456                     _MiApp_MessageAvailable:	
 11337                           
 11338                           ;miwi_p2p.c: 2408: P2PTasks();
 11339                           
 11340                           ;incstack = 0
 11341 ;; hardware stack exceeded
 11342                           ; Regs used in _MiApp_MessageAvailable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11343  0456  3192  2236         	fcall	_P2PTasks
 11344                           
 11345                           ;miwi_p2p.c: 2410: return P2PStatus.bits.RxHasUserData;
 11346  0458  0021               	movlb	1	; select bank1
 11347  0459  0C6B               	rrf	_P2PStatus^(0+128),w	;volatile
 11348  045A  00D8               	movwf	??_MiApp_MessageAvailable^(0+128)
 11349  045B  0CD8               	rrf	??_MiApp_MessageAvailable^(0+128),f
 11350  045C  0C58               	rrf	??_MiApp_MessageAvailable^(0+128),w
 11351  045D  3901               	andlw	1
 11352  045E  0008               	return
 11353  045F                     __end_of_MiApp_MessageAvailable:	
 11354  045F                     __ptext15:	
 11355 ;; *************** function _MiApp_BroadcastPacket *****************
 11356 ;; Defined at:
 11357 ;;		line 1709 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  SecEn           1    wreg     unsigned char 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  SecEn           1   58[BANK0 ] unsigned char 
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      unsigned char 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 1F/2
 11368 ;;		On exit  : 1F/1
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;Total ram usage:        1 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:   10
 11378 ;; This function calls:
 11379 ;;		_SendPacket
 11380 ;; This function is called by:
 11381 ;;		_run_star_demo
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           
 11386                           ;psect for function _MiApp_BroadcastPacket
 11387  045F                     _MiApp_BroadcastPacket:	
 11388                           
 11389                           ;incstack = 0
 11390                           ; Regs used in _MiApp_BroadcastPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11391                           ;MiApp_BroadcastPacket@SecEn stored from wreg
 11392  045F  0020               	movlb	0	; select bank0
 11393  0460  00DA               	movwf	MiApp_BroadcastPacket@SecEn
 11394                           
 11395                           ;miwi_p2p.c: 1737: return SendPacket(1, myPANID, (0), 0, SecEn);
 11396                           ;	Return value of _MiApp_BroadcastPacket is never used
 11397  0461  0021               	movlb	1	; select bank1
 11398  0462  086E               	movf	(_myPANID+1)^(0+128),w
 11399  0463  0020               	movlb	0	; select bank0
 11400  0464  00D4               	movwf	SendPacket@DestinationPANID+1
 11401  0465  0021               	movlb	1	; select bank1
 11402  0466  086D               	movf	_myPANID^(0+128),w
 11403  0467  0020               	movlb	0	; select bank0
 11404  0468  00D3               	movwf	SendPacket@DestinationPANID
 11405  0469  01D5               	clrf	SendPacket@DestinationAddress
 11406  046A  01D6               	clrf	SendPacket@DestinationAddress+1
 11407  046B  01D7               	clrf	SendPacket@isCommand
 11408  046C  085A               	movf	MiApp_BroadcastPacket@SecEn,w
 11409  046D  00D8               	movwf	SendPacket@SecurityEnabled
 11410  046E  3001               	movlw	1
 11411  046F  3199  29DB         	ljmp	_SendPacket
 11412  0471                     __end_of_MiApp_BroadcastPacket:	
 11413  0471                     __ptext14:	
 11414 ;; *************** function _MiApp_UnicastStar *****************
 11415 ;; Defined at:
 11416 ;;		line 1992 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  SecEn           1    wreg     unsigned char 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  SecEn           1   69[BANK1 ] unsigned char 
 11421 ;;  t2              4   65[BANK1 ] struct _MIWI_TICK
 11422 ;;  t1              4   61[BANK1 ] struct _MIWI_TICK
 11423 ;;  status          1    0        unsigned char 
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      unsigned char 
 11426 ;; Registers used:
 11427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11428 ;; Tracked objects:
 11429 ;;		On entry : 1F/0
 11430 ;;		On exit  : 1F/2
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;Total ram usage:       13 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; Hardware stack levels required when called:   15
 11440 ;; This function calls:
 11441 ;;		_MiApp_MessageAvailable
 11442 ;;		_MiWi_TickGet
 11443 ;;		_SendPacket
 11444 ;; This function is called by:
 11445 ;;		_run_star_demo
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function _MiApp_UnicastStar
 11451  0471                     _MiApp_UnicastStar:	
 11452                           
 11453                           ;incstack = 0
 11454 ;; hardware stack exceeded
 11455                           ; Regs used in _MiApp_UnicastStar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11456                           ;MiApp_UnicastStar@SecEn stored from wreg
 11457  0471  0021               	movlb	1	; select bank1
 11458  0472  00E5               	movwf	MiApp_UnicastStar@SecEn^(0+128)
 11459                           
 11460                           ;miwi_p2p.c: 1994: rec_ack = 0;
 11461  0473  0022               	movlb	2	; select bank2
 11462  0474  01D8               	clrf	_rec_ack^(0+256)
 11463                           
 11464                           ;miwi_p2p.c: 1995: bool status;
 11465                           ;miwi_p2p.c: 1998: status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, SecEn)
      +                          ;
 11466  0475  0021               	movlb	1	; select bank1
 11467  0476  086E               	movf	(_myPANID+1)^(0+128),w
 11468  0477  0020               	movlb	0	; select bank0
 11469  0478  00D4               	movwf	SendPacket@DestinationPANID+1
 11470  0479  0021               	movlb	1	; select bank1
 11471  047A  086D               	movf	_myPANID^(0+128),w
 11472  047B  0020               	movlb	0	; select bank0
 11473  047C  00D3               	movwf	SendPacket@DestinationPANID
 11474  047D  30A4               	movlw	low (_ConnectionTable+4)
 11475  047E  00D5               	movwf	SendPacket@DestinationAddress
 11476  047F  3002               	movlw	high (_ConnectionTable+4)
 11477  0480  00D6               	movwf	SendPacket@DestinationAddress+1
 11478  0481  01D7               	clrf	SendPacket@isCommand
 11479  0482  0AD7               	incf	SendPacket@isCommand,f
 11480  0483  0021               	movlb	1	; select bank1
 11481  0484  0865               	movf	MiApp_UnicastStar@SecEn^(0+128),w
 11482  0485  0020               	movlb	0	; select bank0
 11483  0486  00D8               	movwf	SendPacket@SecurityEnabled
 11484  0487  3000               	movlw	0
 11485  0488  3199  21DB  3181   	fcall	_SendPacket
 11486                           
 11487                           ;miwi_p2p.c: 2005: MIWI_TICK t1, t2;
 11488                           ;miwi_p2p.c: 2007: t1 = MiWi_TickGet();
 11489  048B  3197  2789  3181   	fcall	_MiWi_TickGet
 11490  048E  082C               	movf	?_MiWi_TickGet+3,w
 11491  048F  0021               	movlb	1	; select bank1
 11492  0490  00E0               	movwf	(MiApp_UnicastStar@t1+3)^(0+128)
 11493  0491  0020               	movlb	0	; select bank0
 11494  0492  082B               	movf	?_MiWi_TickGet+2,w
 11495  0493  0021               	movlb	1	; select bank1
 11496  0494  00DF               	movwf	(MiApp_UnicastStar@t1+2)^(0+128)
 11497  0495  0020               	movlb	0	; select bank0
 11498  0496  082A               	movf	?_MiWi_TickGet+1,w
 11499  0497  0021               	movlb	1	; select bank1
 11500  0498  00DE               	movwf	(MiApp_UnicastStar@t1+1)^(0+128)
 11501  0499  0020               	movlb	0	; select bank0
 11502  049A  0829               	movf	?_MiWi_TickGet,w
 11503  049B  0021               	movlb	1	; select bank1
 11504  049C  00DD               	movwf	MiApp_UnicastStar@t1^(0+128)
 11505  049D                     l10716:	
 11506                           ;miwi_p2p.c: 2008: while (!rec_ack)
 11507                           
 11508  049D  0022               	movlb	2	; select bank2
 11509  049E  0858               	movf	_rec_ack^(0+256),w
 11510  049F  1D03               	btfss	3,2
 11511  04A0  2CD1               	goto	l10718
 11512                           
 11513                           ;miwi_p2p.c: 2009: {
 11514                           ;miwi_p2p.c: 2010: t2 = MiWi_TickGet();
 11515  04A1  3197  2789  3181   	fcall	_MiWi_TickGet
 11516  04A4  082C               	movf	?_MiWi_TickGet+3,w
 11517  04A5  0021               	movlb	1	; select bank1
 11518  04A6  00E4               	movwf	(MiApp_UnicastStar@t2+3)^(0+128)
 11519  04A7  0020               	movlb	0	; select bank0
 11520  04A8  082B               	movf	?_MiWi_TickGet+2,w
 11521  04A9  0021               	movlb	1	; select bank1
 11522  04AA  00E3               	movwf	(MiApp_UnicastStar@t2+2)^(0+128)
 11523  04AB  0020               	movlb	0	; select bank0
 11524  04AC  082A               	movf	?_MiWi_TickGet+1,w
 11525  04AD  0021               	movlb	1	; select bank1
 11526  04AE  00E2               	movwf	(MiApp_UnicastStar@t2+1)^(0+128)
 11527  04AF  0020               	movlb	0	; select bank0
 11528  04B0  0829               	movf	?_MiWi_TickGet,w
 11529  04B1  0021               	movlb	1	; select bank1
 11530  04B2  00E1               	movwf	MiApp_UnicastStar@t2^(0+128)
 11531                           
 11532                           ;miwi_p2p.c: 2011: MiApp_MessageAvailable();
 11533  04B3  2456  3181         	fcall	_MiApp_MessageAvailable
 11534                           
 11535                           ;miwi_p2p.c: 2013: if((t2.Val - t1.Val) > ((((uint32_t)(10000000)/32)/10)*2))
 11536  04B5  085D               	movf	MiApp_UnicastStar@t1^(0+128),w
 11537  04B6  0261               	subwf	MiApp_UnicastStar@t2^(0+128),w
 11538  04B7  00D9               	movwf	??_MiApp_UnicastStar^(0+128)
 11539  04B8  085E               	movf	(MiApp_UnicastStar@t1+1)^(0+128),w
 11540  04B9  3B62               	subwfb	(MiApp_UnicastStar@t2+1)^(0+128),w
 11541  04BA  00DA               	movwf	(??_MiApp_UnicastStar^(0+128)+1)
 11542  04BB  085F               	movf	(MiApp_UnicastStar@t1+2)^(0+128),w
 11543  04BC  3B63               	subwfb	(MiApp_UnicastStar@t2+2)^(0+128),w
 11544  04BD  00DB               	movwf	(??_MiApp_UnicastStar^(0+128)+2)
 11545  04BE  0860               	movf	(MiApp_UnicastStar@t1+3)^(0+128),w
 11546  04BF  3B64               	subwfb	(MiApp_UnicastStar@t2+3)^(0+128),w
 11547  04C0  00DC               	movwf	(??_MiApp_UnicastStar^(0+128)+3)
 11548  04C1  085C               	movf	(??_MiApp_UnicastStar^(0+128)+3),w
 11549  04C2  1D03               	btfss	3,2
 11550  04C3  2CCD               	goto	l10712
 11551  04C4  085B               	movf	(??_MiApp_UnicastStar^(0+128)+2),w
 11552  04C5  1D03               	btfss	3,2
 11553  04C6  2CCD               	goto	l10712
 11554  04C7  3025               	movlw	37
 11555  04C8  0259               	subwf	??_MiApp_UnicastStar^(0+128),w
 11556  04C9  30F4               	movlw	244
 11557  04CA  3B5A               	subwfb	(??_MiApp_UnicastStar^(0+128)+1),w
 11558  04CB  1C03               	btfss	3,0
 11559  04CC  2C9D               	goto	l10716
 11560  04CD                     l10712:	
 11561                           
 11562                           ;miwi_p2p.c: 2014: {
 11563                           ;miwi_p2p.c: 2015: if (rec_ack != 1)
 11564  04CD  0022               	movlb	2	; select bank2
 11565  04CE  0358               	decf	_rec_ack^(0+256),w
 11566  04CF  1903               	btfsc	3,2
 11567  04D0  2C9D               	goto	l10716
 11568  04D1                     l10718:	
 11569                           
 11570                           ;miwi_p2p.c: 2018: }
 11571                           ;miwi_p2p.c: 2019: }
 11572                           ;miwi_p2p.c: 2020: }
 11573                           ;miwi_p2p.c: 2023: return rec_ack;
 11574  04D1  0858               	movf	_rec_ack^(0+256),w
 11575  04D2  0008               	return
 11576  04D3                     __end_of_MiApp_UnicastStar:	
 11577  04D3                     __ptext11:	
 11578 ;; *************** function _Source_END_DEVICE_INFO *****************
 11579 ;; Defined at:
 11580 ;;		line 301 in file "../src/demo_ouput.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  SrAddr          2   55[BANK0 ] PTR unsigned char 
 11583 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;		None
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : 1F/0
 11592 ;;		On exit  : 1F/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;Total ram usage:        2 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    8
 11602 ;; This function calls:
 11603 ;;		_DELAY_ms
 11604 ;;		_LCD_Erase
 11605 ;;		_LCD_Update
 11606 ;;		_sprintf
 11607 ;; This function is called by:
 11608 ;;		_Process_RxMessage
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           
 11613                           ;psect for function _Source_END_DEVICE_INFO
 11614  04D3                     _Source_END_DEVICE_INFO:	
 11615                           
 11616                           ;demo_ouput.c: 303: LCD_Erase();
 11617                           
 11618                           ;incstack = 0
 11619                           ; Regs used in _Source_END_DEVICE_INFO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11620  04D3  318A  2211  3181   	fcall	_LCD_Erase
 11621                           
 11622                           ;demo_ouput.c: 304: sprintf((char *)&(LCDText), (char*)"Data Packet from");
 11623  04D6  30AC               	movlw	low (STR_7| (0+32768))
 11624  04D7  00B5               	movwf	sprintf@f
 11625  04D8  30A9               	movlw	high (STR_7| (0+32768))
 11626  04D9  00B6               	movwf	sprintf@f+1
 11627  04DA  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
 11628  04DB  318A  228E  3181   	fcall	_sprintf
 11629                           
 11630                           ;demo_ouput.c: 305: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
 11631  04DE  3028               	movlw	low (STR_8| (0+32768))
 11632  04DF  00B5               	movwf	sprintf@f
 11633  04E0  30A9               	movlw	high (STR_8| (0+32768))
 11634  04E1  00B6               	movwf	sprintf@f+1
 11635  04E2  0857               	movf	Source_END_DEVICE_INFO@SrAddr,w
 11636  04E3  0086               	movwf	6
 11637  04E4  0858               	movf	Source_END_DEVICE_INFO@SrAddr+1,w
 11638  04E5  0087               	movwf	7
 11639  04E6  0801               	movf	1,w
 11640  04E7  00B7               	movwf	?_sprintf+2
 11641  04E8  01B8               	clrf	?_sprintf+3
 11642  04E9  0857               	movf	Source_END_DEVICE_INFO@SrAddr,w
 11643  04EA  0086               	movwf	6
 11644  04EB  0858               	movf	Source_END_DEVICE_INFO@SrAddr+1,w
 11645  04EC  0087               	movwf	7
 11646  04ED  3141               	addfsr 1,1
 11647  04EE  0801               	movf	1,w
 11648  04EF  00B9               	movwf	?_sprintf+4
 11649  04F0  01BA               	clrf	?_sprintf+5
 11650  04F1  0857               	movf	Source_END_DEVICE_INFO@SrAddr,w
 11651  04F2  0086               	movwf	6
 11652  04F3  0858               	movf	Source_END_DEVICE_INFO@SrAddr+1,w
 11653  04F4  0087               	movwf	7
 11654  04F5  3142               	addfsr 1,2
 11655  04F6  0801               	movf	1,w
 11656  04F7  00BB               	movwf	?_sprintf+6
 11657  04F8  30D5               	movlw	(low ((_LCDText| (0+256)+16)))& (0+255)
 11658  04F9  01BC               	clrf	?_sprintf+7
 11659  04FA  318A  228E  3181   	fcall	_sprintf
 11660                           
 11661                           ;demo_ouput.c: 306: LCD_Update();
 11662  04FD  318A  2220         	fcall	_LCD_Update
 11663                           
 11664                           ;demo_ouput.c: 307: DELAY_ms(1200);
 11665  04FF  30B0               	movlw	176
 11666  0500  00B5               	movwf	DELAY_ms@ms
 11667  0501  3004               	movlw	4
 11668  0502  00B6               	movwf	DELAY_ms@ms+1
 11669  0503  3189  2957         	ljmp	l8576
 11670  0505                     __end_of_Source_END_DEVICE_INFO:	
 11671                           
 11672                           	psect	text13
 11673  20E8                     __ptext13:	
 11674 ;; *************** function _LCDTRXCount *****************
 11675 ;; Defined at:
 11676 ;;		line 342 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  txCount         1    wreg     unsigned char 
 11679 ;;  rxCount         1   55[BANK0 ] unsigned char 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  txCount         1   56[BANK0 ] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 1F/0
 11688 ;;		On exit  : 1F/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11691 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;Total ram usage:        2 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    8
 11698 ;; This function calls:
 11699 ;;		_DELAY_ms
 11700 ;;		_LCD_Erase
 11701 ;;		_LCD_Update
 11702 ;;		_sprintf
 11703 ;; This function is called by:
 11704 ;;		_DemoOutput_UpdateTxRx
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           
 11709                           ;psect for function _LCDTRXCount
 11710  20E8                     _LCDTRXCount:	
 11711                           
 11712                           ;incstack = 0
 11713                           ; Regs used in _LCDTRXCount: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11714                           ;LCDTRXCount@txCount stored from wreg
 11715  20E8  00D8               	movwf	LCDTRXCount@txCount
 11716                           
 11717                           ;lcd.c: 345: LCD_Erase();
 11718  20E9  318A  2211  31A0   	fcall	_LCD_Erase
 11719                           
 11720                           ;lcd.c: 346: DELAY_ms(5);
 11721  20EC  3005               	movlw	5
 11722  20ED  00B5               	movwf	DELAY_ms@ms
 11723  20EE  01B6               	clrf	DELAY_ms@ms+1
 11724  20EF  3189  2157  31A0   	fcall	_DELAY_ms
 11725                           
 11726                           ;lcd.c: 347: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
 11727  20F2  30CE               	movlw	low (STR_1| (0+32768))
 11728  20F3  00B5               	movwf	sprintf@f
 11729  20F4  30A9               	movlw	high (STR_1| (0+32768))
 11730  20F5  00B6               	movwf	sprintf@f+1
 11731  20F6  0858               	movf	LCDTRXCount@txCount,w
 11732  20F7  00B7               	movwf	?_sprintf+2
 11733  20F8  30C5               	movlw	(low (_LCDText| (0+256)))& (0+255)
 11734  20F9  01B8               	clrf	?_sprintf+3
 11735  20FA  318A  228E  31A0   	fcall	_sprintf
 11736                           
 11737                           ;lcd.c: 348: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
 11738  20FD  30BD               	movlw	low (STR_2| (0+32768))
 11739  20FE  00B5               	movwf	sprintf@f
 11740  20FF  30A9               	movlw	high (STR_2| (0+32768))
 11741  2100  00B6               	movwf	sprintf@f+1
 11742  2101  0857               	movf	LCDTRXCount@rxCount,w
 11743  2102  00B7               	movwf	?_sprintf+2
 11744  2103  30D5               	movlw	(low ((_LCDText| (0+256)+16)))& (0+255)
 11745  2104  01B8               	clrf	?_sprintf+3
 11746  2105  318A  228E         	fcall	_sprintf
 11747                           
 11748                           ;lcd.c: 349: LCD_Update();
 11749  2107  318A  2A20         	ljmp	l9074
 11750  2109                     __end_of_LCDTRXCount:	
 11751                           
 11752                           	psect	text20
 11753  1001                     __ptext20:	
 11754 ;; *************** function _MiApp_ProtocolInit *****************
 11755 ;; Defined at:
 11756 ;;		line 1122 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  bNetworkFree    1    wreg     unsigned char 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  bNetworkFree    1   46[BANK0 ] unsigned char 
 11761 ;;  tmp             2   44[BANK0 ] unsigned int 
 11762 ;;  initValue       2   47[BANK0 ] struct .
 11763 ;;  i               1   49[BANK0 ] unsigned char 
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      unsigned char 
 11766 ;; Registers used:
 11767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 1F/2
 11770 ;;		On exit  : 1E/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;Total ram usage:        7 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    9
 11780 ;; This function calls:
 11781 ;;		_EEPROM_Read
 11782 ;;		_InitSymbolTimer
 11783 ;;		_MiApp_SetChannel
 11784 ;;		_MiMAC_Init
 11785 ;;		_MiMAC_SetAltAddress
 11786 ;;		_NVMInit
 11787 ;;		_NVMRead
 11788 ;;		_NVMWrite
 11789 ;;		___bmul
 11790 ;; This function is called by:
 11791 ;;		_Initialize_Demo
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           
 11796                           ;psect for function _MiApp_ProtocolInit
 11797  1001                     _MiApp_ProtocolInit:	
 11798                           
 11799                           ;incstack = 0
 11800                           ; Regs used in _MiApp_ProtocolInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11801                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 11802  1001  0020               	movlb	0	; select bank0
 11803  1002  00CE               	movwf	MiApp_ProtocolInit@bNetworkFreezer
 11804                           
 11805                           ;miwi_p2p.c: 1131: {
 11806                           ;miwi_p2p.c: 1132: for(i = 0; i < 3; i++)
 11807  1003  01D1               	clrf	MiApp_ProtocolInit@i
 11808  1004                     l10916:	
 11809                           
 11810                           ;miwi_p2p.c: 1133: {
 11811                           ;miwi_p2p.c: 1134: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
 11812  1004  0851               	movf	MiApp_ProtocolInit@i,w
 11813  1005  3EFA               	addlw	250
 11814  1006  00AA               	movwf	EEPROM_Read@addr
 11815  1007  30ED               	movlw	(low ((_myLongAddress| (0+256)+7)))& (0+255)
 11816  1008  01AB               	clrf	EEPROM_Read@count
 11817  1009  0AAB               	incf	EEPROM_Read@count,f
 11818  100A  00CB               	movwf	??_MiApp_ProtocolInit
 11819  100B  0851               	movf	MiApp_ProtocolInit@i,w
 11820  100C  024B               	subwf	??_MiApp_ProtocolInit,w
 11821  100D  27D2  3190         	fcall	_EEPROM_Read
 11822  100F  0020               	movlb	0	; select bank0
 11823  1010  3003               	movlw	3
 11824  1011  0AD1               	incf	MiApp_ProtocolInit@i,f
 11825  1012  0251               	subwf	MiApp_ProtocolInit@i,w
 11826  1013  1C03               	skipc
 11827  1014  2804               	goto	l10916
 11828                           
 11829                           ;miwi_p2p.c: 1137: if( 8 > 7 )
 11830  1015  30FF               	movlw	255
 11831  1016  0023               	movlb	3	; select bank3
 11832  1017  00EA               	movwf	(_myLongAddress^(0+384)+4)
 11833                           
 11834                           ;miwi_p2p.c: 1138: {
 11835                           ;miwi_p2p.c: 1139: myLongAddress[3] = 0xFE;
 11836  1018  30FE               	movlw	254
 11837  1019  00E9               	movwf	(_myLongAddress^(0+384)+3)
 11838                           
 11839                           ;miwi_p2p.c: 1140: }
 11840                           ;miwi_p2p.c: 1141: for(i = 0; i < 3; i++)
 11841  101A  0020               	movlb	0	; select bank0
 11842  101B  01D1               	clrf	MiApp_ProtocolInit@i
 11843  101C                     l10930:	
 11844                           
 11845                           ;miwi_p2p.c: 1142: {
 11846                           ;miwi_p2p.c: 1143: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
 11847  101C  0851               	movf	MiApp_ProtocolInit@i,w
 11848  101D  3EFD               	addlw	253
 11849  101E  00AA               	movwf	EEPROM_Read@addr
 11850  101F  30E8               	movlw	(low ((_myLongAddress| (0+256)+2)))& (0+255)
 11851  1020  01AB               	clrf	EEPROM_Read@count
 11852  1021  0AAB               	incf	EEPROM_Read@count,f
 11853  1022  00CB               	movwf	??_MiApp_ProtocolInit
 11854  1023  0851               	movf	MiApp_ProtocolInit@i,w
 11855  1024  024B               	subwf	??_MiApp_ProtocolInit,w
 11856  1025  27D2  3190         	fcall	_EEPROM_Read
 11857  1027  0020               	movlb	0	; select bank0
 11858  1028  3003               	movlw	3
 11859  1029  0AD1               	incf	MiApp_ProtocolInit@i,f
 11860  102A  0251               	subwf	MiApp_ProtocolInit@i,w
 11861  102B  1C03               	skipc
 11862  102C  281C               	goto	l10930
 11863                           
 11864                           ;miwi_p2p.c: 1151: }
 11865                           ;miwi_p2p.c: 1152: }
 11866                           ;miwi_p2p.c: 1158: NVMInit();
 11867  102D  31A2  22EE  3190   	fcall	_NVMInit
 11868                           
 11869                           ;miwi_p2p.c: 1162: P2PStatus.Val = 0;
 11870  1030  0021               	movlb	1	; select bank1
 11871  1031  01EB               	clrf	_P2PStatus^(0+128)	;volatile
 11872                           
 11873                           ;miwi_p2p.c: 1164: if (!bNetworkFreezer)
 11874  1032  0020               	movlb	0	; select bank0
 11875  1033  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 11876  1034  1D03               	btfss	3,2
 11877  1035  286E               	goto	l10970
 11878                           
 11879                           ;miwi_p2p.c: 1165: {
 11880                           ;miwi_p2p.c: 1166: for(i = 0; i < 5; i++)
 11881  1036  01D1               	clrf	MiApp_ProtocolInit@i
 11882  1037                     l10960:	
 11883                           
 11884                           ;miwi_p2p.c: 1167: {
 11885                           ;miwi_p2p.c: 1168: ConnectionTable[i].status.Val = 0;
 11886  1037  300E               	movlw	14
 11887  1038  00A9               	movwf	___bmul@multiplicand
 11888  1039  0851               	movf	MiApp_ProtocolInit@i,w
 11889  103A  26E6  3190         	fcall	___bmul
 11890  103C  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 11891  103D  0086               	movwf	6
 11892  103E  3002               	movlw	2	; select bank5/6
 11893  103F  0087               	movwf	7
 11894  1040  300E               	movlw	14
 11895  1041  0181               	clrf	1
 11896                           
 11897                           ;miwi_p2p.c: 1169: ConnectionTable[i].Address[0] = 0x00;
 11898  1042  00A9               	movwf	___bmul@multiplicand
 11899  1043  0851               	movf	MiApp_ProtocolInit@i,w
 11900  1044  26E6  3190         	fcall	___bmul
 11901  1046  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 11902  1047  0086               	movwf	6
 11903  1048  3002               	movlw	2	; select bank5/6
 11904  1049  0087               	movwf	7
 11905  104A  300E               	movlw	14
 11906  104B  0181               	clrf	1
 11907                           
 11908                           ;miwi_p2p.c: 1170: ConnectionTable[i].Address[1] = 0x00;
 11909  104C  00A9               	movwf	___bmul@multiplicand
 11910  104D  0851               	movf	MiApp_ProtocolInit@i,w
 11911  104E  26E6  3190         	fcall	___bmul
 11912  1050  3EA5               	addlw	(low ((_ConnectionTable| (0+512)+5)))& (0+255)
 11913  1051  0086               	movwf	6
 11914  1052  3002               	movlw	2	; select bank5/6
 11915  1053  0087               	movwf	7
 11916  1054  300E               	movlw	14
 11917  1055  0181               	clrf	1
 11918                           
 11919                           ;miwi_p2p.c: 1171: ConnectionTable[i].Address[2] = 0x00;
 11920  1056  00A9               	movwf	___bmul@multiplicand
 11921  1057  0851               	movf	MiApp_ProtocolInit@i,w
 11922  1058  26E6  3190         	fcall	___bmul
 11923  105A  3EA6               	addlw	(low ((_ConnectionTable| (0+512)+6)))& (0+255)
 11924  105B  0086               	movwf	6
 11925  105C  3002               	movlw	2	; select bank5/6
 11926  105D  0087               	movwf	7
 11927  105E  0181               	clrf	1
 11928                           
 11929                           ;miwi_p2p.c: 1173: link_stat[i] = 0x00;
 11930  105F  0851               	movf	MiApp_ProtocolInit@i,w
 11931  1060  3E35               	addlw	(low (_link_stat| (0+256)))& (0+255)
 11932  1061  0086               	movwf	6
 11933  1062  3001               	movlw	1	; select bank2/3
 11934  1063  0087               	movwf	7
 11935  1064  0181               	clrf	1
 11936                           
 11937                           ;miwi_p2p.c: 1174: permanent_connections[i] = 0x00;
 11938  1065  0851               	movf	MiApp_ProtocolInit@i,w
 11939  1066  3EB4               	addlw	(low (_permanent_connections| (0+256)))& (0+255)
 11940  1067  0086               	movwf	6
 11941  1068  3005               	movlw	5
 11942  1069  0181               	clrf	1
 11943  106A  0AD1               	incf	MiApp_ProtocolInit@i,f
 11944  106B  0251               	subwf	MiApp_ProtocolInit@i,w
 11945  106C  1C03               	skipc
 11946  106D  2837               	goto	l10960
 11947  106E                     l10970:	
 11948                           
 11949                           ;miwi_p2p.c: 1176: }
 11950                           ;miwi_p2p.c: 1177: }
 11951                           ;miwi_p2p.c: 1179: InitSymbolTimer();
 11952  106E  3188  207D  3190   	fcall	_InitSymbolTimer
 11953                           
 11954                           ;miwi_p2p.c: 1181: TxData = 0;
 11955  1071  0021               	movlb	1	; select bank1
 11956  1072  01EC               	clrf	_TxData^(0+128)
 11957                           
 11958                           ;miwi_p2p.c: 1198: if( bNetworkFreezer )
 11959  1073  0020               	movlb	0	; select bank0
 11960  1074  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 11961  1075  1903               	btfsc	3,2
 11962  1076  28EF               	goto	l10984
 11963                           
 11964                           ;miwi_p2p.c: 1199: {
 11965                           ;miwi_p2p.c: 1200: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 11966  1077  3063               	movlw	low _currentChannel
 11967  1078  00A9               	movwf	NVMRead@dest
 11968  1079  3000               	movlw	high _currentChannel
 11969  107A  00AA               	movwf	NVMRead@dest+1
 11970  107B  0022               	movlb	2	; select bank2
 11971  107C  0862               	movf	(_nvmCurrentChannel+1)^(0+256),w
 11972  107D  0020               	movlb	0	; select bank0
 11973  107E  00AC               	movwf	NVMRead@addr+1
 11974  107F  0022               	movlb	2	; select bank2
 11975  1080  0861               	movf	_nvmCurrentChannel^(0+256),w
 11976  1081  0020               	movlb	0	; select bank0
 11977  1082  00AB               	movwf	NVMRead@addr
 11978  1083  01AD               	clrf	NVMRead@count
 11979  1084  0AAD               	incf	NVMRead@count,f
 11980  1085  01AE               	clrf	NVMRead@count+1
 11981  1086  2748  3190         	fcall	_NVMRead
 11982                           
 11983                           ;miwi_p2p.c: 1201: if( currentChannel >= 32 )
 11984  1088  3020               	movlw	32
 11985  1089  0263               	subwf	_currentChannel,w
 11986  108A  1803               	btfsc	3,0
 11987  108B  0008               	return
 11988                           
 11989                           ;miwi_p2p.c: 1204: }
 11990                           ;miwi_p2p.c: 1207: NVMRead( (uint8_t *)myPANID.v, nvmMyPANID, 2);
 11991  108C  30ED               	movlw	low _myPANID
 11992  108D  00A9               	movwf	NVMRead@dest
 11993  108E  3000               	movlw	high _myPANID
 11994  108F  00AA               	movwf	NVMRead@dest+1
 11995  1090  0022               	movlb	2	; select bank2
 11996  1091  0866               	movf	(_nvmMyPANID+1)^(0+256),w
 11997  1092  0020               	movlb	0	; select bank0
 11998  1093  00AC               	movwf	NVMRead@addr+1
 11999  1094  0022               	movlb	2	; select bank2
 12000  1095  0865               	movf	_nvmMyPANID^(0+256),w
 12001  1096  0020               	movlb	0	; select bank0
 12002  1097  00AB               	movwf	NVMRead@addr
 12003  1098  3002               	movlw	2
 12004  1099  00AD               	movwf	NVMRead@count
 12005  109A  01AE               	clrf	NVMRead@count+1
 12006  109B  2748  3190         	fcall	_NVMRead
 12007                           
 12008                           ;miwi_p2p.c: 1209: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
 12009  109D  30EF               	movlw	low _ConnMode
 12010  109E  00A9               	movwf	NVMRead@dest
 12011  109F  3000               	movlw	high _ConnMode
 12012  10A0  00AA               	movwf	NVMRead@dest+1
 12013  10A1  0022               	movlb	2	; select bank2
 12014  10A2  0860               	movf	(_nvmConnMode+1)^(0+256),w
 12015  10A3  0020               	movlb	0	; select bank0
 12016  10A4  00AC               	movwf	NVMRead@addr+1
 12017  10A5  0022               	movlb	2	; select bank2
 12018  10A6  085F               	movf	_nvmConnMode^(0+256),w
 12019  10A7  0020               	movlb	0	; select bank0
 12020  10A8  00AB               	movwf	NVMRead@addr
 12021  10A9  01AD               	clrf	NVMRead@count
 12022  10AA  0AAD               	incf	NVMRead@count,f
 12023  10AB  01AE               	clrf	NVMRead@count+1
 12024  10AC  2748  3190         	fcall	_NVMRead
 12025                           
 12026                           ;miwi_p2p.c: 1210: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
 12027  10AE  30A0               	movlw	low _ConnectionTable
 12028  10AF  00A9               	movwf	NVMRead@dest
 12029  10B0  3002               	movlw	high _ConnectionTable
 12030  10B1  00AA               	movwf	NVMRead@dest+1
 12031  10B2  0861               	movf	_nvmConnectionTable+1,w
 12032  10B3  00AC               	movwf	NVMRead@addr+1
 12033  10B4  0860               	movf	_nvmConnectionTable,w
 12034  10B5  00AB               	movwf	NVMRead@addr
 12035  10B6  3046               	movlw	70
 12036  10B7  00AD               	movwf	NVMRead@count
 12037  10B8  01AE               	clrf	NVMRead@count+1
 12038  10B9  2748  3190         	fcall	_NVMRead
 12039                           
 12040                           ;miwi_p2p.c: 1213: NVMRead( (uint8_t *)&role, nvmRole, 1);
 12041  10BB  3065               	movlw	low _role
 12042  10BC  00A9               	movwf	NVMRead@dest
 12043  10BD  3000               	movlw	high _role
 12044  10BE  00AA               	movwf	NVMRead@dest+1
 12045  10BF  0022               	movlb	2	; select bank2
 12046  10C0  086A               	movf	(_nvmRole+1)^(0+256),w
 12047  10C1  0020               	movlb	0	; select bank0
 12048  10C2  00AC               	movwf	NVMRead@addr+1
 12049  10C3  0022               	movlb	2	; select bank2
 12050  10C4  0869               	movf	_nvmRole^(0+256),w
 12051  10C5  0020               	movlb	0	; select bank0
 12052  10C6  00AB               	movwf	NVMRead@addr
 12053  10C7  01AD               	clrf	NVMRead@count
 12054  10C8  0AAD               	incf	NVMRead@count,f
 12055  10C9  01AE               	clrf	NVMRead@count+1
 12056  10CA  2748  3190         	fcall	_NVMRead
 12057                           
 12058                           ;miwi_p2p.c: 1214: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
 12059  10CC  3064               	movlw	low _myConnectionIndex_in_PanCo
 12060  10CD  00A9               	movwf	NVMRead@dest
 12061  10CE  3000               	movlw	high _myConnectionIndex_in_PanCo
 12062  10CF  00AA               	movwf	NVMRead@dest+1
 12063  10D0  0022               	movlb	2	; select bank2
 12064  10D1  086C               	movf	(_nvmmyIndex+1)^(0+256),w
 12065  10D2  0020               	movlb	0	; select bank0
 12066  10D3  00AC               	movwf	NVMRead@addr+1
 12067  10D4  0022               	movlb	2	; select bank2
 12068  10D5  086B               	movf	_nvmmyIndex^(0+256),w
 12069  10D6  0020               	movlb	0	; select bank0
 12070  10D7  00AB               	movwf	NVMRead@addr
 12071  10D8  01AD               	clrf	NVMRead@count
 12072  10D9  0AAD               	incf	NVMRead@count,f
 12073  10DA  01AE               	clrf	NVMRead@count+1
 12074  10DB  2748  3190         	fcall	_NVMRead
 12075                           
 12076                           ;miwi_p2p.c: 1216: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
 12077  10DD  3062               	movlw	low _conn_size
 12078  10DE  00A9               	movwf	NVMRead@dest
 12079  10DF  3000               	movlw	high _conn_size
 12080  10E0  00AA               	movwf	NVMRead@dest+1
 12081  10E1  0022               	movlb	2	; select bank2
 12082  10E2  0864               	movf	(_nvmEdc+1)^(0+256),w
 12083  10E3  0020               	movlb	0	; select bank0
 12084  10E4  00AC               	movwf	NVMRead@addr+1
 12085  10E5  0022               	movlb	2	; select bank2
 12086  10E6  0863               	movf	_nvmEdc^(0+256),w
 12087  10E7  0020               	movlb	0	; select bank0
 12088  10E8  00AB               	movwf	NVMRead@addr
 12089  10E9  01AD               	clrf	NVMRead@count
 12090  10EA  0AAD               	incf	NVMRead@count,f
 12091  10EB  01AE               	clrf	NVMRead@count+1
 12092  10EC  2748  3190         	fcall	_NVMRead
 12093                           
 12094                           ;miwi_p2p.c: 1227: }
 12095  10EE  2934               	goto	l557
 12096  10EF                     l10984:	
 12097                           
 12098                           ;miwi_p2p.c: 1228: else
 12099                           ;miwi_p2p.c: 1229: {
 12100                           ;miwi_p2p.c: 1231: myPANID.Val = 0x1234;
 12101  10EF  3034               	movlw	52
 12102  10F0  0021               	movlb	1	; select bank1
 12103  10F1  00ED               	movwf	_myPANID^(0+128)
 12104  10F2  3012               	movlw	18
 12105  10F3  00EE               	movwf	(_myPANID^(0+128)+1)
 12106                           
 12107                           ;miwi_p2p.c: 1232: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
 12108  10F4  30ED               	movlw	low _myPANID
 12109  10F5  0020               	movlb	0	; select bank0
 12110  10F6  00B4               	movwf	NVMWrite@source
 12111  10F7  3000               	movlw	high _myPANID
 12112  10F8  00B5               	movwf	NVMWrite@source+1
 12113  10F9  0022               	movlb	2	; select bank2
 12114  10FA  0866               	movf	(_nvmMyPANID+1)^(0+256),w
 12115  10FB  0020               	movlb	0	; select bank0
 12116  10FC  00B7               	movwf	NVMWrite@addr+1
 12117  10FD  0022               	movlb	2	; select bank2
 12118  10FE  0865               	movf	_nvmMyPANID^(0+256),w
 12119  10FF  0020               	movlb	0	; select bank0
 12120  1100  00B6               	movwf	NVMWrite@addr
 12121  1101  3002               	movlw	2
 12122  1102  00B8               	movwf	NVMWrite@count
 12123  1103  01B9               	clrf	NVMWrite@count+1
 12124  1104  270A  3190         	fcall	_NVMWrite
 12125                           
 12126                           ;miwi_p2p.c: 1234: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 12127  1106  3063               	movlw	low _currentChannel
 12128  1107  00B4               	movwf	NVMWrite@source
 12129  1108  3000               	movlw	high _currentChannel
 12130  1109  00B5               	movwf	NVMWrite@source+1
 12131  110A  0022               	movlb	2	; select bank2
 12132  110B  0862               	movf	(_nvmCurrentChannel+1)^(0+256),w
 12133  110C  0020               	movlb	0	; select bank0
 12134  110D  00B7               	movwf	NVMWrite@addr+1
 12135  110E  0022               	movlb	2	; select bank2
 12136  110F  0861               	movf	_nvmCurrentChannel^(0+256),w
 12137  1110  0020               	movlb	0	; select bank0
 12138  1111  00B6               	movwf	NVMWrite@addr
 12139  1112  01B8               	clrf	NVMWrite@count
 12140  1113  0AB8               	incf	NVMWrite@count,f
 12141  1114  01B9               	clrf	NVMWrite@count+1
 12142  1115  270A  3190         	fcall	_NVMWrite
 12143                           
 12144                           ;miwi_p2p.c: 1235: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 12145  1117  30EF               	movlw	low _ConnMode
 12146  1118  00B4               	movwf	NVMWrite@source
 12147  1119  3000               	movlw	high _ConnMode
 12148  111A  00B5               	movwf	NVMWrite@source+1
 12149  111B  0022               	movlb	2	; select bank2
 12150  111C  0860               	movf	(_nvmConnMode+1)^(0+256),w
 12151  111D  0020               	movlb	0	; select bank0
 12152  111E  00B7               	movwf	NVMWrite@addr+1
 12153  111F  0022               	movlb	2	; select bank2
 12154  1120  085F               	movf	_nvmConnMode^(0+256),w
 12155  1121  0020               	movlb	0	; select bank0
 12156  1122  00B6               	movwf	NVMWrite@addr
 12157  1123  01B8               	clrf	NVMWrite@count
 12158  1124  0AB8               	incf	NVMWrite@count,f
 12159  1125  01B9               	clrf	NVMWrite@count+1
 12160  1126  270A  3190         	fcall	_NVMWrite
 12161                           
 12162                           ;miwi_p2p.c: 1236: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
 12163  1128  30A0               	movlw	low _ConnectionTable
 12164  1129  00B4               	movwf	NVMWrite@source
 12165  112A  3002               	movlw	high _ConnectionTable
 12166  112B  00B5               	movwf	NVMWrite@source+1
 12167  112C  0861               	movf	_nvmConnectionTable+1,w
 12168  112D  00B7               	movwf	NVMWrite@addr+1
 12169  112E  0860               	movf	_nvmConnectionTable,w
 12170  112F  00B6               	movwf	NVMWrite@addr
 12171  1130  3046               	movlw	70
 12172  1131  00B8               	movwf	NVMWrite@count
 12173  1132  01B9               	clrf	NVMWrite@count+1
 12174  1133  270A               	fcall	_NVMWrite
 12175  1134                     l557:	
 12176                           
 12177                           ;miwi_p2p.c: 1237: }
 12178                           ;miwi_p2p.c: 1244: initValue.PAddress = myLongAddress;
 12179  1134  30E6               	movlw	(low (_myLongAddress| (0+256)))& (0+255)
 12180  1135  00D0               	movwf	low ((MiApp_ProtocolInit@initValue| 0+1))
 12181                           
 12182                           ;miwi_p2p.c: 1245: initValue.actionFlags.bits.CCAEnable = 1;
 12183  1136  14CF               	bsf	MiApp_ProtocolInit@initValue,1
 12184                           
 12185                           ;miwi_p2p.c: 1246: initValue.actionFlags.bits.PAddrLength = 8;
 12186  1137  084F               	movf	MiApp_ProtocolInit@initValue,w
 12187  1138  3987               	andlw	-121
 12188  1139  3840               	iorlw	64
 12189  113A  00CF               	movwf	MiApp_ProtocolInit@initValue
 12190                           
 12191                           ;miwi_p2p.c: 1247: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 12192  113B  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 12193  113C  3901               	andlw	1
 12194  113D  114F               	bcf	MiApp_ProtocolInit@initValue,2
 12195  113E  1D03               	skipz
 12196  113F  154F               	bsf	MiApp_ProtocolInit@initValue,2
 12197                           
 12198                           ;miwi_p2p.c: 1248: initValue.actionFlags.bits.RepeaterMode = 0;
 12199  1140  104F               	bcf	MiApp_ProtocolInit@initValue,0
 12200                           
 12201                           ;miwi_p2p.c: 1250: MiMAC_Init(initValue);
 12202  1141  0850               	movf	MiApp_ProtocolInit@initValue+1,w
 12203  1142  00C7               	movwf	MiMAC_Init@initValue+1
 12204  1143  084F               	movf	MiApp_ProtocolInit@initValue,w
 12205  1144  00C6               	movwf	MiMAC_Init@initValue
 12206  1145  3198  2069  3190   	fcall	_MiMAC_Init
 12207                           
 12208                           ;miwi_p2p.c: 1253: {
 12209                           ;miwi_p2p.c: 1254: uint16_t tmp = 0xFFFF;
 12210  1148  30FF               	movlw	255
 12211  1149  00CC               	movwf	MiApp_ProtocolInit@tmp
 12212  114A  00CD               	movwf	MiApp_ProtocolInit@tmp+1
 12213                           
 12214                           ;miwi_p2p.c: 1255: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
 12215  114B  304C               	movlw	low MiApp_ProtocolInit@tmp
 12216  114C  00AD               	movwf	MiMAC_SetAltAddress@Address
 12217  114D  3000               	movlw	high MiApp_ProtocolInit@tmp
 12218  114E  00AE               	movwf	MiMAC_SetAltAddress@Address+1
 12219  114F  30ED               	movlw	low _myPANID
 12220  1150  00AF               	movwf	MiMAC_SetAltAddress@PANID
 12221  1151  3000               	movlw	high _myPANID
 12222  1152  00B0               	movwf	MiMAC_SetAltAddress@PANID+1
 12223  1153  31A1  2109  3190   	fcall	_MiMAC_SetAltAddress
 12224                           
 12225                           ;miwi_p2p.c: 1256: }
 12226                           ;miwi_p2p.c: 1259: MiApp_SetChannel(currentChannel);
 12227  1156  0863               	movf	_currentChannel,w
 12228  1157  318F  277A         	fcall	_MiApp_SetChannel
 12229                           
 12230                           ;miwi_p2p.c: 1270: P2PCapacityInfo = 0;
 12231  1159  01FC               	clrf	_P2PCapacityInfo
 12232                           
 12233                           ;miwi_p2p.c: 1272: P2PCapacityInfo |= 0x01;
 12234  115A  147C               	bsf	_P2PCapacityInfo,0
 12235                           
 12236                           ;miwi_p2p.c: 1277: P2PCapacityInfo |= (ConnMode << 4);
 12237  115B  0021               	movlb	1	; select bank1
 12238  115C  0E6F               	swapf	_ConnMode^(0+128),w
 12239  115D  39F0               	andlw	240
 12240  115E  04FC               	iorwf	_P2PCapacityInfo,f
 12241                           
 12242                           ;miwi_p2p.c: 1279: INTCONbits.IOCIE = 1;
 12243  115F  158B               	bsf	11,3	;volatile
 12244  1160  0008               	return
 12245  1161                     __end_of_MiApp_ProtocolInit:	
 12246  1161                     __ptext46:	
 12247 ;; *************** function _MiApp_RemoveConnection *****************
 12248 ;; Defined at:
 12249 ;;		line 3104 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;  ConnectionIn    1    wreg     unsigned char 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;  ConnectionIn    1   26[BANK1 ] unsigned char 
 12254 ;;  j               2   22[BANK1 ] unsigned int 
 12255 ;;  j               2   24[BANK1 ] unsigned int 
 12256 ;;  i               1   27[BANK1 ] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      void 
 12259 ;; Registers used:
 12260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12261 ;; Tracked objects:
 12262 ;;		On entry : 1F/0
 12263 ;;		On exit  : 1E/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;Total ram usage:        6 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:   10
 12273 ;; This function calls:
 12274 ;;		_NVMWrite
 12275 ;;		_SendPacket
 12276 ;;		___bmul
 12277 ;;		___wmul
 12278 ;; This function is called by:
 12279 ;;		_Find_InActiveDevices
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283                           
 12284                           ;psect for function _MiApp_RemoveConnection
 12285  1161                     _MiApp_RemoveConnection:	
 12286                           
 12287                           ;incstack = 0
 12288 ;; hardware stack exceeded
 12289                           ; Regs used in _MiApp_RemoveConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12290                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 12291  1161  0021               	movlb	1	; select bank1
 12292  1162  00BA               	movwf	MiApp_RemoveConnection@ConnectionIndex^(0+128)
 12293                           
 12294                           ;miwi_p2p.c: 3106: if( ConnectionIndex == 0xFF )
 12295  1163  0F3A               	incfsz	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12296  1164  29D2               	goto	l9626
 12297                           
 12298                           ;miwi_p2p.c: 3107: {
 12299                           ;miwi_p2p.c: 3108: uint8_t i;
 12300                           ;miwi_p2p.c: 3109: for(i = 0; i < 5; i++)
 12301  1165  01BB               	clrf	MiApp_RemoveConnection@i^(0+128)
 12302  1166                     l9600:	
 12303                           
 12304                           ;miwi_p2p.c: 3110: {
 12305                           ;miwi_p2p.c: 3111: uint16_t j;
 12306                           ;miwi_p2p.c: 3112: if( ConnectionTable[i].status.bits.isValid )
 12307  1166  300E               	movlw	14
 12308  1167  0020               	movlb	0	; select bank0
 12309  1168  00A9               	movwf	___bmul@multiplicand
 12310  1169  0021               	movlb	1	; select bank1
 12311  116A  083B               	movf	MiApp_RemoveConnection@i^(0+128),w
 12312  116B  26E6  3190         	fcall	___bmul
 12313  116D  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 12314  116E  0086               	movwf	6
 12315  116F  3002               	movlw	2	; select bank5/6
 12316  1170  0087               	movwf	7
 12317  1171  1F81               	btfss	1,7
 12318  1172  299E               	goto	l9620
 12319                           
 12320                           ;miwi_p2p.c: 3113: {
 12321                           ;miwi_p2p.c: 3114: {TxData = 0;};
 12322  1173  0021               	movlb	1	; select bank1
 12323  1174  01EC               	clrf	_TxData^(0+128)
 12324                           
 12325                           ;miwi_p2p.c: 3115: TxBuffer[TxData++] = 0x82;
 12326  1175  086C               	movf	_TxData^(0+128),w
 12327  1176  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12328  1177  0086               	movwf	6
 12329  1178  3082               	movlw	130
 12330  1179  0081               	movwf	1
 12331  117A  0AEC               	incf	_TxData^(0+128),f
 12332                           
 12333                           ;miwi_p2p.c: 3117: SendPacket(0, myPANID, ConnectionTable[i].Address, 1, 0);
 12334  117B  086E               	movf	(_myPANID+1)^(0+128),w
 12335  117C  0020               	movlb	0	; select bank0
 12336  117D  00D4               	movwf	SendPacket@DestinationPANID+1
 12337  117E  0021               	movlb	1	; select bank1
 12338  117F  086D               	movf	_myPANID^(0+128),w
 12339  1180  0020               	movlb	0	; select bank0
 12340  1181  00D3               	movwf	SendPacket@DestinationPANID
 12341  1182  300E               	movlw	14
 12342  1183  00A9               	movwf	___bmul@multiplicand
 12343  1184  0021               	movlb	1	; select bank1
 12344  1185  083B               	movf	MiApp_RemoveConnection@i^(0+128),w
 12345  1186  26E6               	fcall	___bmul
 12346  1187  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 12347  1188  00D5               	movwf	SendPacket@DestinationAddress
 12348  1189  3002               	movlw	2
 12349  118A  00D6               	movwf	SendPacket@DestinationAddress+1
 12350  118B  3000               	movlw	0
 12351  118C  01D7               	clrf	SendPacket@isCommand
 12352  118D  0AD7               	incf	SendPacket@isCommand,f
 12353  118E  01D8               	clrf	SendPacket@SecurityEnabled
 12354  118F  3199  21DB  3190   	fcall	_SendPacket
 12355                           
 12356                           ;miwi_p2p.c: 3121: for(j = 0; j < 0xFFF; j++) {}
 12357  1192  01B6               	clrf	MiApp_RemoveConnection@j^(0+128)
 12358  1193  01B7               	clrf	(MiApp_RemoveConnection@j+1)^(0+128)
 12359  1194                     l9616:	
 12360  1194  0AB6               	incf	MiApp_RemoveConnection@j^(0+128),f
 12361  1195  1903               	skipnz
 12362  1196  0AB7               	incf	(MiApp_RemoveConnection@j+1)^(0+128),f
 12363  1197  300F               	movlw	15
 12364  1198  0237               	subwf	(MiApp_RemoveConnection@j+1)^(0+128),w
 12365  1199  30FF               	movlw	255
 12366  119A  1903               	skipnz
 12367  119B  0236               	subwf	MiApp_RemoveConnection@j^(0+128),w
 12368  119C  1C03               	skipc
 12369  119D  2994               	goto	l9616
 12370  119E                     l9620:	
 12371                           
 12372                           ;miwi_p2p.c: 3122: }
 12373                           ;miwi_p2p.c: 3123: ConnectionTable[i].status.Val = 0;
 12374  119E  300E               	movlw	14
 12375  119F  0020               	movlb	0	; select bank0
 12376  11A0  00A9               	movwf	___bmul@multiplicand
 12377  11A1  0021               	movlb	1	; select bank1
 12378  11A2  083B               	movf	MiApp_RemoveConnection@i^(0+128),w
 12379  11A3  26E6               	fcall	___bmul
 12380  11A4  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 12381  11A5  0086               	movwf	6
 12382  11A6  3002               	movlw	2	; select bank5/6
 12383  11A7  0087               	movwf	7
 12384  11A8  0181               	clrf	1
 12385                           
 12386                           ;miwi_p2p.c: 3125: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint1
      +                          6_t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12387  11A9  0021               	movlb	1	; select bank1
 12388  11AA  083B               	movf	MiApp_RemoveConnection@i^(0+128),w
 12389  11AB  0020               	movlb	0	; select bank0
 12390  11AC  00AE               	movwf	___wmul@multiplier
 12391  11AD  300E               	movlw	14
 12392  11AE  01AF               	clrf	___wmul@multiplier+1
 12393  11AF  00B0               	movwf	___wmul@multiplicand
 12394  11B0  01B1               	clrf	___wmul@multiplicand+1
 12395  11B1  319F  27EB  3190   	fcall	___wmul
 12396  11B4  082F               	movf	?___wmul+1,w
 12397  11B5  00B7               	movwf	NVMWrite@addr+1
 12398  11B6  082E               	movf	?___wmul,w
 12399  11B7  00B6               	movwf	NVMWrite@addr
 12400  11B8  0860               	movf	_nvmConnectionTable,w
 12401  11B9  07B6               	addwf	NVMWrite@addr,f
 12402  11BA  0861               	movf	_nvmConnectionTable+1,w
 12403  11BB  3DB7               	addwfc	NVMWrite@addr+1,f
 12404  11BC  300E               	movlw	14
 12405  11BD  00A9               	movwf	___bmul@multiplicand
 12406  11BE  0021               	movlb	1	; select bank1
 12407  11BF  083B               	movf	MiApp_RemoveConnection@i^(0+128),w
 12408  11C0  26E6  3190         	fcall	___bmul
 12409  11C2  3EA0               	addlw	(low (_ConnectionTable| (0+512)))& (0+255)
 12410  11C3  00B4               	movwf	NVMWrite@source
 12411  11C4  3002               	movlw	2
 12412  11C5  00B5               	movwf	NVMWrite@source+1
 12413  11C6  300E               	movlw	14
 12414  11C7  00B8               	movwf	NVMWrite@count
 12415  11C8  01B9               	clrf	NVMWrite@count+1
 12416  11C9  270A  3190         	fcall	_NVMWrite
 12417  11CB  0021               	movlb	1	; select bank1
 12418  11CC  3005               	movlw	5
 12419  11CD  0ABB               	incf	MiApp_RemoveConnection@i^(0+128),f
 12420  11CE  023B               	subwf	MiApp_RemoveConnection@i^(0+128),w
 12421  11CF  1803               	btfsc	3,0
 12422  11D0  0008               	return
 12423  11D1  2966               	goto	l9600
 12424  11D2                     l9626:	
 12425                           
 12426                           ;miwi_p2p.c: 3129: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 12427  11D2  300E               	movlw	14
 12428  11D3  0020               	movlb	0	; select bank0
 12429  11D4  00A9               	movwf	___bmul@multiplicand
 12430  11D5  0021               	movlb	1	; select bank1
 12431  11D6  083A               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12432  11D7  26E6  3190         	fcall	___bmul
 12433  11D9  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 12434  11DA  0086               	movwf	6
 12435  11DB  3002               	movlw	2	; select bank5/6
 12436  11DC  0087               	movwf	7
 12437  11DD  1F81               	btfss	1,7
 12438  11DE  0008               	return
 12439                           
 12440                           ;miwi_p2p.c: 3130: {
 12441                           ;miwi_p2p.c: 3131: uint16_t j;
 12442                           ;miwi_p2p.c: 3133: {TxData = 0;};
 12443  11DF  0021               	movlb	1	; select bank1
 12444  11E0  01EC               	clrf	_TxData^(0+128)
 12445                           
 12446                           ;miwi_p2p.c: 3134: TxBuffer[TxData++] = 0x82;
 12447  11E1  086C               	movf	_TxData^(0+128),w
 12448  11E2  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12449  11E3  0086               	movwf	6
 12450  11E4  3082               	movlw	130
 12451  11E5  0081               	movwf	1
 12452  11E6  0AEC               	incf	_TxData^(0+128),f
 12453                           
 12454                           ;miwi_p2p.c: 3136: SendPacket(0, myPANID, ConnectionTable[ConnectionIndex].Address, 1, 0
      +                          );
 12455  11E7  086E               	movf	(_myPANID+1)^(0+128),w
 12456  11E8  0020               	movlb	0	; select bank0
 12457  11E9  00D4               	movwf	SendPacket@DestinationPANID+1
 12458  11EA  0021               	movlb	1	; select bank1
 12459  11EB  086D               	movf	_myPANID^(0+128),w
 12460  11EC  0020               	movlb	0	; select bank0
 12461  11ED  00D3               	movwf	SendPacket@DestinationPANID
 12462  11EE  300E               	movlw	14
 12463  11EF  00A9               	movwf	___bmul@multiplicand
 12464  11F0  0021               	movlb	1	; select bank1
 12465  11F1  083A               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12466  11F2  26E6               	fcall	___bmul
 12467  11F3  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 12468  11F4  00D5               	movwf	SendPacket@DestinationAddress
 12469  11F5  3002               	movlw	2
 12470  11F6  00D6               	movwf	SendPacket@DestinationAddress+1
 12471  11F7  3000               	movlw	0
 12472  11F8  01D7               	clrf	SendPacket@isCommand
 12473  11F9  0AD7               	incf	SendPacket@isCommand,f
 12474  11FA  01D8               	clrf	SendPacket@SecurityEnabled
 12475  11FB  3199  21DB  3190   	fcall	_SendPacket
 12476                           
 12477                           ;miwi_p2p.c: 3140: for(j = 0; j < 0xFFF; j++) {}
 12478  11FE  01B8               	clrf	MiApp_RemoveConnection@j_1306^(0+128)
 12479  11FF  01B9               	clrf	(MiApp_RemoveConnection@j_1306+1)^(0+128)
 12480  1200                     l9642:	
 12481  1200  0AB8               	incf	MiApp_RemoveConnection@j_1306^(0+128),f
 12482  1201  1903               	skipnz
 12483  1202  0AB9               	incf	(MiApp_RemoveConnection@j_1306+1)^(0+128),f
 12484  1203  300F               	movlw	15
 12485  1204  0239               	subwf	(MiApp_RemoveConnection@j_1306+1)^(0+128),w
 12486  1205  30FF               	movlw	255
 12487  1206  1903               	skipnz
 12488  1207  0238               	subwf	MiApp_RemoveConnection@j_1306^(0+128),w
 12489  1208  1C03               	skipc
 12490  1209  2A00               	goto	l9642
 12491                           
 12492                           ;miwi_p2p.c: 3141: ConnectionTable[ConnectionIndex].status.Val = 0;
 12493  120A  300E               	movlw	14
 12494  120B  0020               	movlb	0	; select bank0
 12495  120C  00A9               	movwf	___bmul@multiplicand
 12496  120D  0021               	movlb	1	; select bank1
 12497  120E  083A               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12498  120F  26E6               	fcall	___bmul
 12499  1210  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 12500  1211  0086               	movwf	6
 12501  1212  3002               	movlw	2	; select bank5/6
 12502  1213  0087               	movwf	7
 12503  1214  0181               	clrf	1
 12504                           
 12505                           ;miwi_p2p.c: 3143: NVMWrite((uint8_t *)&(ConnectionTable[ConnectionIndex]), nvmConnectio
      +                          nTable+((uint16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY))
      +                          ;
 12506  1215  0021               	movlb	1	; select bank1
 12507  1216  083A               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12508  1217  0020               	movlb	0	; select bank0
 12509  1218  00AE               	movwf	___wmul@multiplier
 12510  1219  300E               	movlw	14
 12511  121A  01AF               	clrf	___wmul@multiplier+1
 12512  121B  00B0               	movwf	___wmul@multiplicand
 12513  121C  01B1               	clrf	___wmul@multiplicand+1
 12514  121D  319F  27EB  3190   	fcall	___wmul
 12515  1220  082F               	movf	?___wmul+1,w
 12516  1221  00B7               	movwf	NVMWrite@addr+1
 12517  1222  082E               	movf	?___wmul,w
 12518  1223  00B6               	movwf	NVMWrite@addr
 12519  1224  0860               	movf	_nvmConnectionTable,w
 12520  1225  07B6               	addwf	NVMWrite@addr,f
 12521  1226  0861               	movf	_nvmConnectionTable+1,w
 12522  1227  3DB7               	addwfc	NVMWrite@addr+1,f
 12523  1228  300E               	movlw	14
 12524  1229  00A9               	movwf	___bmul@multiplicand
 12525  122A  0021               	movlb	1	; select bank1
 12526  122B  083A               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 12527  122C  26E6  3190         	fcall	___bmul
 12528  122E  3EA0               	addlw	(low (_ConnectionTable| (0+512)))& (0+255)
 12529  122F  00B4               	movwf	NVMWrite@source
 12530  1230  3002               	movlw	2
 12531  1231  00B5               	movwf	NVMWrite@source+1
 12532  1232  300E               	movlw	14
 12533  1233  00B8               	movwf	NVMWrite@count
 12534  1234  01B9               	clrf	NVMWrite@count+1
 12535  1235  2F0A               	ljmp	l267
 12536  1236                     __end_of_MiApp_RemoveConnection:	
 12537  1236                     __ptext31:	
 12538 ;; *************** function _P2PTasks *****************
 12539 ;; Defined at:
 12540 ;;		line 350 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;		None
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;  tmp             2   41[BANK1 ] unsigned int 
 12545 ;;  p               1   53[BANK1 ] unsigned char 
 12546 ;;  final_index     1   47[BANK1 ] unsigned char 
 12547 ;;  status          1   54[BANK1 ] unsigned char 
 12548 ;;  p               1   52[BANK1 ] unsigned char 
 12549 ;;  FW_Stat         1   40[BANK1 ] unsigned char 
 12550 ;;  tick3           4   48[BANK1 ] struct _MIWI_TICK
 12551 ;;  tick2           4   43[BANK1 ] struct _MIWI_TICK
 12552 ;;  tmpTick         4   36[BANK1 ] struct _MIWI_TICK
 12553 ;;  i               1   55[BANK1 ] unsigned char 
 12554 ;;  broadcast_st    1    0        unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12559 ;; Tracked objects:
 12560 ;;		On entry : 18/2
 12561 ;;		On exit  : 1C/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:       24 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:   13
 12571 ;; This function calls:
 12572 ;;		_AddConnection
 12573 ;;		_Find_InActiveDevices
 12574 ;;		_Find_Index
 12575 ;;		_Forward_Packet_PANCr_to_EDy
 12576 ;;		_MiApp_BroadcastConnectionTable
 12577 ;;		_MiMAC_DiscardPacket
 12578 ;;		_MiMAC_ReceivedPacket
 12579 ;;		_MiMAC_SetAltAddress
 12580 ;;		_MiWi_TickGet
 12581 ;;		_NVMWrite
 12582 ;;		_SW_Ack_SrED
 12583 ;;		_SendPacket
 12584 ;;		___bmul
 12585 ;;		___wmul
 12586 ;;		_isSameAddress
 12587 ;;		_send_link_status
 12588 ;;		_store_connection_tb
 12589 ;; This function is called by:
 12590 ;;		_MiApp_MessageAvailable
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           
 12595                           ;psect for function _P2PTasks
 12596  1236                     _P2PTasks:	
 12597                           
 12598                           ;miwi_p2p.c: 352: uint8_t i;
 12599                           ;miwi_p2p.c: 353: MIWI_TICK tmpTick ,tick2 , tick3 ;
 12600                           ;miwi_p2p.c: 354: bool broadcast_status;
 12601                           ;miwi_p2p.c: 357: tick2 = MiWi_TickGet();
 12602                           
 12603                           ;incstack = 0
 12604 ;; hardware stack exceeded
 12605                           ; Regs used in _P2PTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12606  1236  2789  3190         	fcall	_MiWi_TickGet
 12607  1238  082C               	movf	?_MiWi_TickGet+3,w
 12608  1239  0021               	movlb	1	; select bank1
 12609  123A  00CE               	movwf	(P2PTasks@tick2+3)^(0+128)
 12610  123B  0020               	movlb	0	; select bank0
 12611  123C  082B               	movf	?_MiWi_TickGet+2,w
 12612  123D  0021               	movlb	1	; select bank1
 12613  123E  00CD               	movwf	(P2PTasks@tick2+2)^(0+128)
 12614  123F  0020               	movlb	0	; select bank0
 12615  1240  082A               	movf	?_MiWi_TickGet+1,w
 12616  1241  0021               	movlb	1	; select bank1
 12617  1242  00CC               	movwf	(P2PTasks@tick2+1)^(0+128)
 12618  1243  0020               	movlb	0	; select bank0
 12619  1244  0829               	movf	?_MiWi_TickGet,w
 12620  1245  0021               	movlb	1	; select bank1
 12621  1246  00CB               	movwf	P2PTasks@tick2^(0+128)
 12622                           
 12623                           ;miwi_p2p.c: 358: tick3 = MiWi_TickGet();
 12624  1247  2789  3190         	fcall	_MiWi_TickGet
 12625  1249  082C               	movf	?_MiWi_TickGet+3,w
 12626  124A  0021               	movlb	1	; select bank1
 12627  124B  00D3               	movwf	(P2PTasks@tick3+3)^(0+128)
 12628  124C  0020               	movlb	0	; select bank0
 12629  124D  082B               	movf	?_MiWi_TickGet+2,w
 12630  124E  0021               	movlb	1	; select bank1
 12631  124F  00D2               	movwf	(P2PTasks@tick3+2)^(0+128)
 12632  1250  0020               	movlb	0	; select bank0
 12633  1251  082A               	movf	?_MiWi_TickGet+1,w
 12634  1252  0021               	movlb	1	; select bank1
 12635  1253  00D1               	movwf	(P2PTasks@tick3+1)^(0+128)
 12636  1254  0020               	movlb	0	; select bank0
 12637  1255  0829               	movf	?_MiWi_TickGet,w
 12638  1256  0021               	movlb	1	; select bank1
 12639  1257  00D0               	movwf	P2PTasks@tick3^(0+128)
 12640                           
 12641                           ;miwi_p2p.c: 360: if (role)
 12642  1258  0020               	movlb	0	; select bank0
 12643  1259  0865               	movf	_role,w
 12644  125A  1903               	btfsc	3,2
 12645  125B  2A8E               	goto	l10204
 12646                           
 12647                           ;miwi_p2p.c: 361: {
 12648                           ;miwi_p2p.c: 362: if( (tick3.Val - tick4.Val) > ((((uint32_t)(10000000)/32)*60)*10))
 12649  125C  0022               	movlb	2	; select bank2
 12650  125D  0842               	movf	_tick4^(0+256),w
 12651  125E  0021               	movlb	1	; select bank1
 12652  125F  0250               	subwf	P2PTasks@tick3^(0+128),w
 12653  1260  00C0               	movwf	??_P2PTasks^(0+128)
 12654  1261  0022               	movlb	2	; select bank2
 12655  1262  0843               	movf	(_tick4+1)^(0+256),w
 12656  1263  0021               	movlb	1	; select bank1
 12657  1264  3B51               	subwfb	(P2PTasks@tick3+1)^(0+128),w
 12658  1265  00C1               	movwf	(??_P2PTasks^(0+128)+1)
 12659  1266  0022               	movlb	2	; select bank2
 12660  1267  0844               	movf	(_tick4+2)^(0+256),w
 12661  1268  0021               	movlb	1	; select bank1
 12662  1269  3B52               	subwfb	(P2PTasks@tick3+2)^(0+128),w
 12663  126A  00C2               	movwf	(??_P2PTasks^(0+128)+2)
 12664  126B  0022               	movlb	2	; select bank2
 12665  126C  0845               	movf	(_tick4+3)^(0+256),w
 12666  126D  0021               	movlb	1	; select bank1
 12667  126E  3B53               	subwfb	(P2PTasks@tick3+3)^(0+128),w
 12668  126F  00C3               	movwf	(??_P2PTasks^(0+128)+3)
 12669  1270  30E1               	movlw	225
 12670  1271  0240               	subwf	??_P2PTasks^(0+128),w
 12671  1272  3005               	movlw	5
 12672  1273  3B41               	subwfb	(??_P2PTasks^(0+128)+1),w
 12673  1274  302D               	movlw	45
 12674  1275  3B42               	subwfb	(??_P2PTasks^(0+128)+2),w
 12675  1276  300B               	movlw	11
 12676  1277  3B43               	subwfb	(??_P2PTasks^(0+128)+3),w
 12677  1278  1C03               	btfss	3,0
 12678  1279  2AC0               	goto	l10210
 12679                           
 12680                           ;miwi_p2p.c: 363: {
 12681                           ;miwi_p2p.c: 364: Find_InActiveDevices ();
 12682  127A  3187  27C8  3190   	fcall	_Find_InActiveDevices
 12683                           
 12684                           ;miwi_p2p.c: 365: tick4 = tick3;
 12685  127D  0021               	movlb	1	; select bank1
 12686  127E  0853               	movf	(P2PTasks@tick3+3)^(0+128),w
 12687  127F  0022               	movlb	2	; select bank2
 12688  1280  00C5               	movwf	(_tick4+3)^(0+256)
 12689  1281  0021               	movlb	1	; select bank1
 12690  1282  0852               	movf	(P2PTasks@tick3+2)^(0+128),w
 12691  1283  0022               	movlb	2	; select bank2
 12692  1284  00C4               	movwf	(_tick4+2)^(0+256)
 12693  1285  0021               	movlb	1	; select bank1
 12694  1286  0851               	movf	(P2PTasks@tick3+1)^(0+128),w
 12695  1287  0022               	movlb	2	; select bank2
 12696  1288  00C3               	movwf	(_tick4+1)^(0+256)
 12697  1289  0021               	movlb	1	; select bank1
 12698  128A  0850               	movf	P2PTasks@tick3^(0+128),w
 12699  128B  0022               	movlb	2	; select bank2
 12700  128C  00C2               	movwf	_tick4^(0+256)
 12701  128D  2AC0               	goto	l10210
 12702  128E                     l10204:	
 12703                           
 12704                           ;miwi_p2p.c: 369: else
 12705                           ;miwi_p2p.c: 370: {
 12706                           ;miwi_p2p.c: 371: if( (tick3.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) )
 12707  128E  0022               	movlb	2	; select bank2
 12708  128F  083E               	movf	_tick1^(0+256),w
 12709  1290  0021               	movlb	1	; select bank1
 12710  1291  0250               	subwf	P2PTasks@tick3^(0+128),w
 12711  1292  00C0               	movwf	??_P2PTasks^(0+128)
 12712  1293  0022               	movlb	2	; select bank2
 12713  1294  083F               	movf	(_tick1+1)^(0+256),w
 12714  1295  0021               	movlb	1	; select bank1
 12715  1296  3B51               	subwfb	(P2PTasks@tick3+1)^(0+128),w
 12716  1297  00C1               	movwf	(??_P2PTasks^(0+128)+1)
 12717  1298  0022               	movlb	2	; select bank2
 12718  1299  0840               	movf	(_tick1+2)^(0+256),w
 12719  129A  0021               	movlb	1	; select bank1
 12720  129B  3B52               	subwfb	(P2PTasks@tick3+2)^(0+128),w
 12721  129C  00C2               	movwf	(??_P2PTasks^(0+128)+2)
 12722  129D  0022               	movlb	2	; select bank2
 12723  129E  0841               	movf	(_tick1+3)^(0+256),w
 12724  129F  0021               	movlb	1	; select bank1
 12725  12A0  3B53               	subwfb	(P2PTasks@tick3+3)^(0+128),w
 12726  12A1  00C3               	movwf	(??_P2PTasks^(0+128)+3)
 12727  12A2  0843               	movf	(??_P2PTasks^(0+128)+3),w
 12728  12A3  1D03               	btfss	3,2
 12729  12A4  2AAD               	goto	l10206
 12730  12A5  308D               	movlw	141
 12731  12A6  0240               	subwf	??_P2PTasks^(0+128),w
 12732  12A7  3086               	movlw	134
 12733  12A8  3B41               	subwfb	(??_P2PTasks^(0+128)+1),w
 12734  12A9  3047               	movlw	71
 12735  12AA  3B42               	subwfb	(??_P2PTasks^(0+128)+2),w
 12736  12AB  1C03               	btfss	3,0
 12737  12AC  2AC0               	goto	l10210
 12738  12AD                     l10206:	
 12739                           
 12740                           ;miwi_p2p.c: 372: {
 12741                           ;miwi_p2p.c: 373: send_link_status ();
 12742  12AD  3198  2046  3190   	fcall	_send_link_status
 12743                           
 12744                           ;miwi_p2p.c: 374: tick1 = tick3;
 12745  12B0  0021               	movlb	1	; select bank1
 12746  12B1  0853               	movf	(P2PTasks@tick3+3)^(0+128),w
 12747  12B2  0022               	movlb	2	; select bank2
 12748  12B3  00C1               	movwf	(_tick1+3)^(0+256)
 12749  12B4  0021               	movlb	1	; select bank1
 12750  12B5  0852               	movf	(P2PTasks@tick3+2)^(0+128),w
 12751  12B6  0022               	movlb	2	; select bank2
 12752  12B7  00C0               	movwf	(_tick1+2)^(0+256)
 12753  12B8  0021               	movlb	1	; select bank1
 12754  12B9  0851               	movf	(P2PTasks@tick3+1)^(0+128),w
 12755  12BA  0022               	movlb	2	; select bank2
 12756  12BB  00BF               	movwf	(_tick1+1)^(0+256)
 12757  12BC  0021               	movlb	1	; select bank1
 12758  12BD  0850               	movf	P2PTasks@tick3^(0+128),w
 12759  12BE  0022               	movlb	2	; select bank2
 12760  12BF  00BE               	movwf	_tick1^(0+256)
 12761  12C0                     l10210:	
 12762                           
 12763                           ;miwi_p2p.c: 375: }
 12764                           ;miwi_p2p.c: 376: }
 12765                           ;miwi_p2p.c: 380: if( (tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) && role)
 12766  12C0  0022               	movlb	2	; select bank2
 12767  12C1  083E               	movf	_tick1^(0+256),w
 12768  12C2  0021               	movlb	1	; select bank1
 12769  12C3  024B               	subwf	P2PTasks@tick2^(0+128),w
 12770  12C4  00C0               	movwf	??_P2PTasks^(0+128)
 12771  12C5  0022               	movlb	2	; select bank2
 12772  12C6  083F               	movf	(_tick1+1)^(0+256),w
 12773  12C7  0021               	movlb	1	; select bank1
 12774  12C8  3B4C               	subwfb	(P2PTasks@tick2+1)^(0+128),w
 12775  12C9  00C1               	movwf	(??_P2PTasks^(0+128)+1)
 12776  12CA  0022               	movlb	2	; select bank2
 12777  12CB  0840               	movf	(_tick1+2)^(0+256),w
 12778  12CC  0021               	movlb	1	; select bank1
 12779  12CD  3B4D               	subwfb	(P2PTasks@tick2+2)^(0+128),w
 12780  12CE  00C2               	movwf	(??_P2PTasks^(0+128)+2)
 12781  12CF  0022               	movlb	2	; select bank2
 12782  12D0  0841               	movf	(_tick1+3)^(0+256),w
 12783  12D1  0021               	movlb	1	; select bank1
 12784  12D2  3B4E               	subwfb	(P2PTasks@tick2+3)^(0+128),w
 12785  12D3  00C3               	movwf	(??_P2PTasks^(0+128)+3)
 12786  12D4  0843               	movf	(??_P2PTasks^(0+128)+3),w
 12787  12D5  1D03               	btfss	3,2
 12788  12D6  2ADF               	goto	l10212
 12789  12D7  308D               	movlw	141
 12790  12D8  0240               	subwf	??_P2PTasks^(0+128),w
 12791  12D9  3086               	movlw	134
 12792  12DA  3B41               	subwfb	(??_P2PTasks^(0+128)+1),w
 12793  12DB  3047               	movlw	71
 12794  12DC  3B42               	subwfb	(??_P2PTasks^(0+128)+2),w
 12795  12DD  1C03               	btfss	3,0
 12796  12DE  2AF5               	goto	l10218
 12797  12DF                     l10212:	
 12798  12DF  0020               	movlb	0	; select bank0
 12799  12E0  0865               	movf	_role,w
 12800  12E1  1903               	btfsc	3,2
 12801  12E2  2AF5               	goto	l10218
 12802                           
 12803                           ;miwi_p2p.c: 381: {
 12804                           ;miwi_p2p.c: 382: MiApp_BroadcastConnectionTable ();
 12805  12E3  3198  2094  3190   	fcall	_MiApp_BroadcastConnectionTable
 12806                           
 12807                           ;miwi_p2p.c: 383: tick1 = tick2;
 12808  12E6  084E               	movf	(P2PTasks@tick2+3)^(0+128),w
 12809  12E7  0022               	movlb	2	; select bank2
 12810  12E8  00C1               	movwf	(_tick1+3)^(0+256)
 12811  12E9  0021               	movlb	1	; select bank1
 12812  12EA  084D               	movf	(P2PTasks@tick2+2)^(0+128),w
 12813  12EB  0022               	movlb	2	; select bank2
 12814  12EC  00C0               	movwf	(_tick1+2)^(0+256)
 12815  12ED  0021               	movlb	1	; select bank1
 12816  12EE  084C               	movf	(P2PTasks@tick2+1)^(0+128),w
 12817  12EF  0022               	movlb	2	; select bank2
 12818  12F0  00BF               	movwf	(_tick1+1)^(0+256)
 12819  12F1  0021               	movlb	1	; select bank1
 12820  12F2  084B               	movf	P2PTasks@tick2^(0+128),w
 12821  12F3  0022               	movlb	2	; select bank2
 12822  12F4  00BE               	movwf	_tick1^(0+256)
 12823  12F5                     l10218:	
 12824                           
 12825                           ;miwi_p2p.c: 384: }
 12826                           ;miwi_p2p.c: 427: if( P2PStatus.bits.SaveConnection )
 12827  12F5  0021               	movlb	1	; select bank1
 12828  12F6  1CEB               	btfss	_P2PStatus^(0+128),1	;volatile
 12829  12F7  2B37               	goto	l10228
 12830                           
 12831                           ;miwi_p2p.c: 428: {
 12832                           ;miwi_p2p.c: 429: tmpTick = MiWi_TickGet();
 12833  12F8  2789  3190         	fcall	_MiWi_TickGet
 12834  12FA  082C               	movf	?_MiWi_TickGet+3,w
 12835  12FB  0021               	movlb	1	; select bank1
 12836  12FC  00C7               	movwf	(P2PTasks@tmpTick+3)^(0+128)
 12837  12FD  0020               	movlb	0	; select bank0
 12838  12FE  082B               	movf	?_MiWi_TickGet+2,w
 12839  12FF  0021               	movlb	1	; select bank1
 12840  1300  00C6               	movwf	(P2PTasks@tmpTick+2)^(0+128)
 12841  1301  0020               	movlb	0	; select bank0
 12842  1302  082A               	movf	?_MiWi_TickGet+1,w
 12843  1303  0021               	movlb	1	; select bank1
 12844  1304  00C5               	movwf	(P2PTasks@tmpTick+1)^(0+128)
 12845  1305  0020               	movlb	0	; select bank0
 12846  1306  0829               	movf	?_MiWi_TickGet,w
 12847  1307  0021               	movlb	1	; select bank1
 12848  1308  00C4               	movwf	P2PTasks@tmpTick^(0+128)
 12849                           
 12850                           ;miwi_p2p.c: 430: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
 12851  1309  0022               	movlb	2	; select bank2
 12852  130A  083A               	movf	_nvmDelayTick^(0+256),w
 12853  130B  0021               	movlb	1	; select bank1
 12854  130C  0244               	subwf	P2PTasks@tmpTick^(0+128),w
 12855  130D  00C0               	movwf	??_P2PTasks^(0+128)
 12856  130E  0022               	movlb	2	; select bank2
 12857  130F  083B               	movf	(_nvmDelayTick+1)^(0+256),w
 12858  1310  0021               	movlb	1	; select bank1
 12859  1311  3B45               	subwfb	(P2PTasks@tmpTick+1)^(0+128),w
 12860  1312  00C1               	movwf	(??_P2PTasks^(0+128)+1)
 12861  1313  0022               	movlb	2	; select bank2
 12862  1314  083C               	movf	(_nvmDelayTick+2)^(0+256),w
 12863  1315  0021               	movlb	1	; select bank1
 12864  1316  3B46               	subwfb	(P2PTasks@tmpTick+2)^(0+128),w
 12865  1317  00C2               	movwf	(??_P2PTasks^(0+128)+2)
 12866  1318  0022               	movlb	2	; select bank2
 12867  1319  083D               	movf	(_nvmDelayTick+3)^(0+256),w
 12868  131A  0021               	movlb	1	; select bank1
 12869  131B  3B47               	subwfb	(P2PTasks@tmpTick+3)^(0+128),w
 12870  131C  00C3               	movwf	(??_P2PTasks^(0+128)+3)
 12871  131D  0843               	movf	(??_P2PTasks^(0+128)+3),w
 12872  131E  1D03               	btfss	3,2
 12873  131F  2B28               	goto	l10224
 12874  1320  30B5               	movlw	181
 12875  1321  0240               	subwf	??_P2PTasks^(0+128),w
 12876  1322  30C4               	movlw	196
 12877  1323  3B41               	subwfb	(??_P2PTasks^(0+128)+1),w
 12878  1324  3004               	movlw	4
 12879  1325  3B42               	subwfb	(??_P2PTasks^(0+128)+2),w
 12880  1326  1C03               	btfss	3,0
 12881  1327  2B37               	goto	l10228
 12882  1328                     l10224:	
 12883                           
 12884                           ;miwi_p2p.c: 431: {
 12885                           ;miwi_p2p.c: 432: P2PStatus.bits.SaveConnection = 0;
 12886  1328  10EB               	bcf	_P2PStatus^(0+128),1	;volatile
 12887                           
 12888                           ;miwi_p2p.c: 433: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 *
      +                           sizeof(CONNECTION_ENTRY));
 12889  1329  30A0               	movlw	low _ConnectionTable
 12890  132A  0020               	movlb	0	; select bank0
 12891  132B  00B4               	movwf	NVMWrite@source
 12892  132C  3002               	movlw	high _ConnectionTable
 12893  132D  00B5               	movwf	NVMWrite@source+1
 12894  132E  0861               	movf	_nvmConnectionTable+1,w
 12895  132F  00B7               	movwf	NVMWrite@addr+1
 12896  1330  0860               	movf	_nvmConnectionTable,w
 12897  1331  00B6               	movwf	NVMWrite@addr
 12898  1332  3046               	movlw	70
 12899  1333  00B8               	movwf	NVMWrite@count
 12900  1334  01B9               	clrf	NVMWrite@count+1
 12901  1335  270A  3190         	fcall	_NVMWrite
 12902  1337                     l10228:	
 12903                           
 12904                           ;miwi_p2p.c: 435: }
 12905                           ;miwi_p2p.c: 436: }
 12906                           ;miwi_p2p.c: 453: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
 12907  1337  0021               	movlb	1	; select bank1
 12908  1338  19EB               	btfsc	_P2PStatus^(0+128),3	;volatile
 12909  1339  0008               	return
 12910  133A  319A  22B7  3190   	fcall	_MiMAC_ReceivedPacket
 12911  133D  3A00               	xorlw	0
 12912  133E  1903               	skipnz
 12913  133F  0008               	return
 12914                           
 12915                           ;miwi_p2p.c: 454: {
 12916                           ;miwi_p2p.c: 455: bool FW_Stat = 0;
 12917  1340  0021               	movlb	1	; select bank1
 12918  1341  01C8               	clrf	P2PTasks@FW_Stat^(0+128)
 12919                           
 12920                           ;miwi_p2p.c: 456: rxMessage.flags.Val = 0;
 12921  1342  0022               	movlb	2	; select bank2
 12922  1343  3000               	movlw	0
 12923  1344  01AB               	clrf	_rxMessage^(0+256)
 12924                           
 12925                           ;miwi_p2p.c: 459: temp_bit = MACRxPacket.flags.bits.broadcast;
 12926  1345  1920               	btfsc	_MACRxPacket^(0+256),2
 12927  1346  3001               	movlw	1
 12928  1347  00D9               	movwf	_temp_bit^(0+256)
 12929                           
 12930                           ;miwi_p2p.c: 460: rxMessage.flags.bits.broadcast = temp_bit;
 12931  1348  062B               	xorwf	_rxMessage^(0+256),w
 12932  1349  39FC               	andlw	-4
 12933  134A  0659               	xorwf	_temp_bit^(0+256),w
 12934  134B  00AB               	movwf	_rxMessage^(0+256)
 12935                           
 12936                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 12937  134C  11AB               	bcf	_rxMessage^(0+256),3
 12938  134D  19A0               	btfsc	_MACRxPacket^(0+256),3
 12939  134E  15AB               	bsf	_rxMessage^(0+256),3
 12940                           
 12941                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
 12942  134F  0022               	movlb	2	; select bank2
 12943  1350  0820               	movf	_MACRxPacket^(0+256),w
 12944  1351  3903               	andlw	3
 12945  1352  3A01               	xorlw	1
 12946  1353  1D03               	btfss	3,2
 12947  1354  2B58               	goto	u9780
 12948  1355  0022               	movlb	2	; select bank2
 12949  1356  16AB               	bsf	_rxMessage^(0+256),5
 12950  1357  2B5A               	goto	l10242
 12951  1358                     u9780:	
 12952  1358  0022               	movlb	2	; select bank2
 12953  1359  12AB               	bcf	_rxMessage^(0+256),5
 12954  135A                     l10242:	
 12955                           
 12956                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 12957  135A  132B               	bcf	_rxMessage^(0+256),6
 12958  135B  1BA0               	btfsc	_MACRxPacket^(0+256),7
 12959  135C  172B               	bsf	_rxMessage^(0+256),6
 12960                           
 12961                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
 12962  135D  0022               	movlb	2	; select bank2
 12963  135E  1FA0               	btfss	_MACRxPacket^(0+256),7
 12964  135F  2B64               	goto	l466
 12965                           
 12966                           ;miwi_p2p.c: 466: {
 12967                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 12968  1360  0822               	movf	((low ((_MACRxPacket| (0+256)+1))+1))^0,w
 12969  1361  00AF               	movwf	((low ((_rxMessage| (0+256)+3))+1))^0
 12970  1362  0821               	movf	(low ((_MACRxPacket| (0+256)+1)))^0,w
 12971  1363  00AE               	movwf	(low ((_rxMessage| (0+256)+3)))^0
 12972  1364                     l466:	
 12973                           
 12974                           ;miwi_p2p.c: 468: }
 12975                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
 12976  1364  082A               	movf	((_MACRxPacket+1)^(0+256)+9),w
 12977  1365  00AD               	movwf	((_rxMessage+1)^(0+256)+1)
 12978  1366  0829               	movf	(_MACRxPacket^(0+256)+9),w
 12979  1367  00AC               	movwf	(_rxMessage^(0+256)+1)
 12980                           
 12981                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
 12982  1368  0825               	movf	(_MACRxPacket^(0+256)+5),w
 12983  1369  00B2               	movwf	(_rxMessage^(0+256)+7)
 12984                           
 12985                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
 12986  136A  0824               	movf	((low ((_MACRxPacket| (0+256)+3))+1))^0,w
 12987  136B  00B1               	movwf	((low ((_rxMessage| (0+256)+5))+1))^0
 12988  136C  0823               	movf	(low ((_MACRxPacket| (0+256)+3)))^0,w
 12989  136D  00B0               	movwf	(low ((_rxMessage| (0+256)+5)))^0
 12990                           
 12991                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 12992  136E  0827               	movf	(_MACRxPacket^(0+256)+7),w
 12993  136F  00B4               	movwf	(_rxMessage^(0+256)+9)
 12994                           
 12995                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 12996  1370  0826               	movf	(_MACRxPacket^(0+256)+6),w
 12997  1371  00B3               	movwf	(_rxMessage^(0+256)+8)
 12998                           
 12999                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
 13000  1372  1AAB               	btfsc	_rxMessage^(0+256),5
 13001  1373  2EC6               	goto	l10532
 13002  1374  2ED8               	goto	l467
 13003  1375                     l10252:	
 13004                           
 13005                           ;miwi_p2p.c: 495: {
 13006                           ;miwi_p2p.c: 497: if(role)
 13007  1375  0020               	movlb	0	; select bank0
 13008  1376  0865               	movf	_role,w
 13009  1377  1903               	btfsc	3,2
 13010  1378  2B86               	goto	l10258
 13011                           
 13012                           ;miwi_p2p.c: 498: {
 13013                           ;miwi_p2p.c: 509: uint8_t status = 0x00;
 13014  1379  0021               	movlb	1	; select bank1
 13015  137A  01D6               	clrf	P2PTasks@status^(0+128)
 13016                           
 13017                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
 13018  137B  0022               	movlb	2	; select bank2
 13019  137C  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13020  137D  0086               	movwf	6
 13021  137E  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13022  137F  0087               	movwf	7
 13023  1380  3141               	addfsr 1,1
 13024  1381  0801               	movf	1,w
 13025  1382  0020               	movlb	0	; select bank0
 13026  1383  0663               	xorwf	_currentChannel,w
 13027  1384  1903               	skipnz
 13028  1385  2B89               	goto	l10260
 13029  1386                     l10258:	
 13030                           
 13031                           ;miwi_p2p.c: 514: {
 13032                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
 13033  1386  2770  3190         	fcall	_MiMAC_DiscardPacket
 13034                           
 13035                           ;miwi_p2p.c: 516: break;
 13036  1388  2EDA               	goto	l10534
 13037  1389                     l10260:	
 13038                           
 13039                           ;miwi_p2p.c: 517: }
 13040                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
 13041  1389  3003               	movlw	3
 13042  138A  0021               	movlb	1	; select bank1
 13043  138B  066F               	xorwf	_ConnMode^(0+128),w
 13044  138C  1903               	btfsc	3,2
 13045  138D  2B86               	goto	l10258
 13046                           
 13047                           ;miwi_p2p.c: 525: }
 13048                           ;miwi_p2p.c: 529: if( rxMessage.SourcePANID.Val != 0xFFFF &&
 13049                           ;miwi_p2p.c: 530: rxMessage.SourcePANID.Val != myPANID.Val &&
 13050                           ;miwi_p2p.c: 531: rxMessage.PayloadSize > 2)
 13051  138E  0022               	movlb	2	; select bank2
 13052  138F  0F2C               	incfsz	(_rxMessage^(0+256)+1),w
 13053  1390  2B94               	goto	l10266
 13054  1391  0A2D               	incf	((_rxMessage+1)^(0+256)+1),w
 13055  1392  1903               	btfsc	3,2
 13056  1393  2BA6               	goto	l10272
 13057  1394                     l10266:	
 13058  1394  0021               	movlb	1	; select bank1
 13059  1395  086E               	movf	(_myPANID+1)^(0+128),w
 13060  1396  0022               	movlb	2	; select bank2
 13061  1397  062D               	xorwf	((_rxMessage+1)^(0+256)+1),w
 13062  1398  1D03               	skipz
 13063  1399  2B9E               	goto	u9875
 13064  139A  0021               	movlb	1	; select bank1
 13065  139B  086D               	movf	_myPANID^(0+128),w
 13066  139C  0022               	movlb	2	; select bank2
 13067  139D  062C               	xorwf	(_rxMessage^(0+256)+1),w
 13068  139E                     u9875:	
 13069  139E  1903               	skipnz
 13070  139F  2BA6               	goto	l10272
 13071  13A0  3003               	movlw	3
 13072  13A1  0232               	subwf	(_rxMessage^(0+256)+7),w
 13073  13A2  1C03               	skipc
 13074  13A3  2BA6               	goto	l10272
 13075                           
 13076                           ;miwi_p2p.c: 532: {
 13077                           ;miwi_p2p.c: 533: status = 0xF2;
 13078  13A4  30F2               	movlw	242
 13079  13A5  2BA9               	goto	L2
 13080  13A6                     l10272:	
 13081                           ;miwi_p2p.c: 534: }
 13082                           
 13083                           
 13084                           ;miwi_p2p.c: 535: else
 13085                           ;miwi_p2p.c: 537: {
 13086                           ;miwi_p2p.c: 540: status = AddConnection();
 13087  13A6  3185  2505  3190   	fcall	_AddConnection
 13088  13A9                     L2:	
 13089  13A9  0021               	movlb	1	; select bank1
 13090  13AA  00D6               	movwf	P2PTasks@status^(0+128)
 13091                           
 13092                           ;miwi_p2p.c: 541: }
 13093                           ;miwi_p2p.c: 543: uint8_t p;
 13094                           ;miwi_p2p.c: 544: if (rxMessage.Payload[3] == 0xAA)
 13095  13AB  0022               	movlb	2	; select bank2
 13096  13AC  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13097  13AD  0086               	movwf	6
 13098  13AE  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13099  13AF  0087               	movwf	7
 13100  13B0  30AA               	movlw	170
 13101  13B1  3143               	addfsr 1,3
 13102  13B2  0601               	xorwf	1,w
 13103  13B3  1D03               	btfss	3,2
 13104  13B4  2BDB               	goto	l10290
 13105                           
 13106                           ;miwi_p2p.c: 545: {
 13107                           ;miwi_p2p.c: 547: for (p = 0 ;p <5;p++)
 13108  13B5  0021               	movlb	1	; select bank1
 13109  13B6  01D4               	clrf	P2PTasks@p^(0+128)
 13110  13B7                     l10278:	
 13111  13B7  3005               	movlw	5
 13112  13B8  0254               	subwf	P2PTasks@p^(0+128),w
 13113  13B9  1803               	btfsc	3,0
 13114  13BA  2BDB               	goto	l10290
 13115                           
 13116                           ;miwi_p2p.c: 548: {
 13117                           ;miwi_p2p.c: 549: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
 13118  13BB  0022               	movlb	2	; select bank2
 13119  13BC  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13120  13BD  0020               	movlb	0	; select bank0
 13121  13BE  00AD               	movwf	isSameAddress@Address1+1
 13122  13BF  0022               	movlb	2	; select bank2
 13123  13C0  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13124  13C1  0020               	movlb	0	; select bank0
 13125  13C2  00AC               	movwf	isSameAddress@Address1
 13126  13C3  300E               	movlw	14
 13127  13C4  00A9               	movwf	___bmul@multiplicand
 13128  13C5  0021               	movlb	1	; select bank1
 13129  13C6  0854               	movf	P2PTasks@p^(0+128),w
 13130  13C7  26E6  3190         	fcall	___bmul
 13131  13C9  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 13132  13CA  00AE               	movwf	isSameAddress@Address2
 13133  13CB  27B9  3190         	fcall	_isSameAddress
 13134  13CD  3A00               	xorlw	0
 13135  13CE  1903               	skipnz
 13136  13CF  2BD8               	goto	l10286
 13137                           
 13138                           ;miwi_p2p.c: 550: {
 13139                           ;miwi_p2p.c: 551: permanent_connections[p] = 0xFF;
 13140  13D0  0021               	movlb	1	; select bank1
 13141  13D1  0854               	movf	P2PTasks@p^(0+128),w
 13142  13D2  3EB4               	addlw	(low (_permanent_connections| (0+256)))& (0+255)
 13143  13D3  0086               	movwf	6
 13144  13D4  3001               	movlw	1	; select bank3/4
 13145  13D5  0087               	movwf	7
 13146  13D6  30FF               	movlw	255
 13147  13D7  0081               	movwf	1
 13148  13D8                     l10286:	
 13149  13D8  0021               	movlb	1	; select bank1
 13150  13D9  0AD4               	incf	P2PTasks@p^(0+128),f
 13151  13DA  2BB7               	goto	l10278
 13152  13DB                     l10290:	
 13153                           
 13154                           ;miwi_p2p.c: 553: }
 13155                           ;miwi_p2p.c: 555: }
 13156                           ;miwi_p2p.c: 556: }
 13157                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
 13158  13DB  0021               	movlb	1	; select bank1
 13159  13DC  0B6F               	decfsz	_ConnMode^(0+128),w
 13160  13DD  2BE7               	goto	l10306
 13161  13DE  0356               	decf	P2PTasks@status^(0+128),w
 13162  13DF  1903               	btfsc	3,2
 13163  13E0  2BE7               	goto	l10306
 13164  13E1  3002               	movlw	2
 13165  13E2  0656               	xorwf	P2PTasks@status^(0+128),w
 13166  13E3  1903               	btfsc	3,2
 13167  13E4  2BE7               	goto	l10306
 13168                           
 13169                           ;miwi_p2p.c: 559: {
 13170                           ;miwi_p2p.c: 560: status = 0xF3;
 13171  13E5  30F3               	movlw	243
 13172  13E6  00D6               	movwf	P2PTasks@status^(0+128)
 13173  13E7                     l10306:	
 13174                           
 13175                           ;miwi_p2p.c: 568: }
 13176                           ;miwi_p2p.c: 572: {TxData = 0;};
 13177  13E7  01EC               	clrf	_TxData^(0+128)
 13178                           
 13179                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
 13180  13E8  086C               	movf	_TxData^(0+128),w
 13181  13E9  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13182  13EA  0086               	movwf	6
 13183  13EB  3002               	movlw	2	; select bank4/5
 13184  13EC  0087               	movwf	7
 13185  13ED  3091               	movlw	145
 13186  13EE  0081               	movwf	1
 13187  13EF  0AEC               	incf	_TxData^(0+128),f
 13188                           
 13189                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
 13190  13F0  086C               	movf	_TxData^(0+128),w
 13191  13F1  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13192  13F2  0086               	movwf	6
 13193  13F3  0856               	movf	P2PTasks@status^(0+128),w
 13194  13F4  0081               	movwf	1
 13195  13F5  0AEC               	incf	_TxData^(0+128),f
 13196                           
 13197                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
 13198  13F6  086C               	movf	_TxData^(0+128),w
 13199  13F7  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13200  13F8  0086               	movwf	6
 13201  13F9  0022               	movlb	2	; select bank2
 13202  13FA  084F               	movf	_MyindexinPC^(0+256),w
 13203  13FB  0081               	movwf	1
 13204  13FC  0021               	movlb	1	; select bank1
 13205  13FD  0AEC               	incf	_TxData^(0+128),f
 13206                           
 13207                           ;miwi_p2p.c: 576: if( status == 0x00 ||
 13208                           ;miwi_p2p.c: 577: status == 0x01 )
 13209  13FE  0856               	movf	P2PTasks@status^(0+128),w
 13210  13FF  1903               	btfsc	3,2
 13211  1400  2C03               	goto	l10324
 13212  1401  0B56               	decfsz	P2PTasks@status^(0+128),w
 13213  1402  2C1E               	goto	l10342
 13214  1403                     l10324:	
 13215                           
 13216                           ;miwi_p2p.c: 578: {
 13217                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
 13218  1403  086C               	movf	_TxData^(0+128),w
 13219  1404  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13220  1405  0086               	movwf	6
 13221  1406  3002               	movlw	2	; select bank4/5
 13222  1407  0087               	movwf	7
 13223  1408  087C               	movf	_P2PCapacityInfo,w
 13224  1409  0081               	movwf	1
 13225  140A  0AEC               	incf	_TxData^(0+128),f
 13226                           
 13227                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
 13228  140B  01D7               	clrf	P2PTasks@i^(0+128)
 13229  140C                     l10330:	
 13230  140C  0857               	movf	P2PTasks@i^(0+128),w
 13231  140D  1D03               	btfss	3,2
 13232  140E  2C1E               	goto	l10342
 13233                           
 13234                           ;miwi_p2p.c: 582: {
 13235                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
 13236  140F  086C               	movf	_TxData^(0+128),w
 13237  1410  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13238  1411  0086               	movwf	6
 13239  1412  3002               	movlw	2	; select bank4/5
 13240  1413  0087               	movwf	7
 13241  1414  0857               	movf	P2PTasks@i^(0+128),w
 13242  1415  3E6F               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
 13243  1416  0084               	movwf	4
 13244  1417  3001               	movlw	1	; select bank2/3
 13245  1418  0085               	movwf	5
 13246  1419  0800               	movf	0,w
 13247  141A  0081               	movwf	1
 13248  141B  0AEC               	incf	_TxData^(0+128),f
 13249  141C  0AD7               	incf	P2PTasks@i^(0+128),f
 13250  141D  2C0C               	goto	l10330
 13251  141E                     l10342:	
 13252                           
 13253                           ;miwi_p2p.c: 584: }
 13254                           ;miwi_p2p.c: 586: }
 13255                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
 13256  141E  2770               	fcall	_MiMAC_DiscardPacket
 13257                           
 13258                           ;miwi_p2p.c: 600: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 13259  141F  0022               	movlb	2	; select bank2
 13260  1420  082D               	movf	((_rxMessage+1)^(0+256)+1),w
 13261  1421  0020               	movlb	0	; select bank0
 13262  1422  00D4               	movwf	SendPacket@DestinationPANID+1
 13263  1423  0022               	movlb	2	; select bank2
 13264  1424  082C               	movf	(_rxMessage^(0+256)+1),w
 13265  1425  0020               	movlb	0	; select bank0
 13266  1426  00D3               	movwf	SendPacket@DestinationPANID
 13267  1427  0022               	movlb	2	; select bank2
 13268  1428  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13269  1429  0020               	movlb	0	; select bank0
 13270  142A  00D6               	movwf	SendPacket@DestinationAddress+1
 13271  142B  0022               	movlb	2	; select bank2
 13272  142C  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13273  142D  0020               	movlb	0	; select bank0
 13274  142E  00D5               	movwf	SendPacket@DestinationAddress
 13275  142F  3000               	movlw	0
 13276  1430  01D7               	clrf	SendPacket@isCommand
 13277  1431  0AD7               	incf	SendPacket@isCommand,f
 13278  1432  0022               	movlb	2	; select bank2
 13279  1433  19AB               	btfsc	_rxMessage^(0+256),3
 13280  1434  3001               	movlw	1
 13281  1435  0020               	movlb	0	; select bank0
 13282  1436  00D8               	movwf	SendPacket@SecurityEnabled
 13283  1437  3000               	movlw	0
 13284  1438  3199  21DB  3190   	fcall	_SendPacket
 13285                           
 13286                           ;miwi_p2p.c: 607: MiApp_BroadcastConnectionTable ();
 13287  143B  3198  2094  3190   	fcall	_MiApp_BroadcastConnectionTable
 13288                           
 13289                           ;miwi_p2p.c: 610: if( status == 0x00 )
 13290  143E  0856               	movf	P2PTasks@status^(0+128),w
 13291  143F  1D03               	btfss	3,2
 13292  1440  2EDA               	goto	l10534
 13293                           
 13294                           ;miwi_p2p.c: 611: {
 13295                           ;miwi_p2p.c: 612: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
 13296  1441  0022               	movlb	2	; select bank2
 13297  1442  084D               	movf	_LatestConnection^(0+256),w
 13298  1443  0020               	movlb	0	; select bank0
 13299  1444  00AE               	movwf	___wmul@multiplier
 13300  1445  300E               	movlw	14
 13301  1446  01AF               	clrf	___wmul@multiplier+1
 13302  1447  00B0               	movwf	___wmul@multiplicand
 13303  1448  01B1               	clrf	___wmul@multiplicand+1
 13304  1449  319F  27EB  3190   	fcall	___wmul
 13305  144C  082F               	movf	?___wmul+1,w
 13306  144D  00B7               	movwf	NVMWrite@addr+1
 13307  144E  082E               	movf	?___wmul,w
 13308  144F  00B6               	movwf	NVMWrite@addr
 13309  1450  0860               	movf	_nvmConnectionTable,w
 13310  1451  07B6               	addwf	NVMWrite@addr,f
 13311  1452  0861               	movf	_nvmConnectionTable+1,w
 13312  1453  3DB7               	addwfc	NVMWrite@addr+1,f
 13313  1454  300E               	movlw	14
 13314  1455  00A9               	movwf	___bmul@multiplicand
 13315  1456  0022               	movlb	2	; select bank2
 13316  1457  084D               	movf	_LatestConnection^(0+256),w
 13317  1458  26E6  3190         	fcall	___bmul
 13318  145A  3EA0               	addlw	(low (_ConnectionTable| (0+512)))& (0+255)
 13319  145B  00B4               	movwf	NVMWrite@source
 13320  145C  3002               	movlw	2
 13321  145D  00B5               	movwf	NVMWrite@source+1
 13322  145E  300E               	movlw	14
 13323  145F  00B8               	movwf	NVMWrite@count
 13324  1460  01B9               	clrf	NVMWrite@count+1
 13325  1461  270A  3190         	fcall	_NVMWrite
 13326  1463  2EDA               	goto	l10534
 13327  1464                     l10354:	
 13328                           
 13329                           ;miwi_p2p.c: 631: {
 13330                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
 13331  1464  3003               	movlw	3
 13332  1465  0021               	movlb	1	; select bank1
 13333  1466  026F               	subwf	_ConnMode^(0+128),w
 13334  1467  1803               	btfsc	3,0
 13335  1468  2B86               	goto	l10258
 13336                           
 13337                           ;miwi_p2p.c: 636: }
 13338                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
 13339  1469  0022               	movlb	2	; select bank2
 13340  146A  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13341  146B  0086               	movwf	6
 13342  146C  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13343  146D  0087               	movwf	7
 13344  146E  3141               	addfsr 1,1
 13345  146F  0801               	movf	1,w
 13346  1470  0020               	movlb	0	; select bank0
 13347  1471  0663               	xorwf	_currentChannel,w
 13348  1472  1D03               	btfss	3,2
 13349  1473  2B86               	goto	l10258
 13350                           
 13351                           ;miwi_p2p.c: 641: }
 13352                           ;miwi_p2p.c: 643: {TxData = 0;};
 13353  1474  0021               	movlb	1	; select bank1
 13354  1475  01EC               	clrf	_TxData^(0+128)
 13355                           
 13356                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
 13357  1476  086C               	movf	_TxData^(0+128),w
 13358  1477  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13359  1478  0086               	movwf	6
 13360  1479  3002               	movlw	2	; select bank4/5
 13361  147A  0087               	movwf	7
 13362  147B  3097               	movlw	151
 13363  147C  0081               	movwf	1
 13364  147D  0AEC               	incf	_TxData^(0+128),f
 13365                           
 13366                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
 13367  147E  086C               	movf	_TxData^(0+128),w
 13368  147F  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13369  1480  0086               	movwf	6
 13370  1481  087C               	movf	_P2PCapacityInfo,w
 13371  1482  0081               	movwf	1
 13372  1483  0AEC               	incf	_TxData^(0+128),f
 13373                           
 13374                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
 13375  1484  01D7               	clrf	P2PTasks@i^(0+128)
 13376  1485                     l10372:	
 13377  1485  0857               	movf	P2PTasks@i^(0+128),w
 13378  1486  1D03               	btfss	3,2
 13379  1487  2C97               	goto	l10384
 13380                           
 13381                           ;miwi_p2p.c: 648: {
 13382                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
 13383  1488  086C               	movf	_TxData^(0+128),w
 13384  1489  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13385  148A  0086               	movwf	6
 13386  148B  3002               	movlw	2	; select bank4/5
 13387  148C  0087               	movwf	7
 13388  148D  0857               	movf	P2PTasks@i^(0+128),w
 13389  148E  3E6F               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
 13390  148F  0084               	movwf	4
 13391  1490  3001               	movlw	1	; select bank2/3
 13392  1491  0085               	movwf	5
 13393  1492  0800               	movf	0,w
 13394  1493  0081               	movwf	1
 13395  1494  0AEC               	incf	_TxData^(0+128),f
 13396  1495  0AD7               	incf	P2PTasks@i^(0+128),f
 13397  1496  2C85               	goto	l10372
 13398  1497                     l10384:	
 13399                           
 13400                           ;miwi_p2p.c: 650: }
 13401                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
 13402  1497  2770               	fcall	_MiMAC_DiscardPacket
 13403                           
 13404                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 13405  1498  0022               	movlb	2	; select bank2
 13406  1499  082D               	movf	((_rxMessage+1)^(0+256)+1),w
 13407  149A  0020               	movlb	0	; select bank0
 13408  149B  00D4               	movwf	SendPacket@DestinationPANID+1
 13409  149C  0022               	movlb	2	; select bank2
 13410  149D  082C               	movf	(_rxMessage^(0+256)+1),w
 13411  149E  0020               	movlb	0	; select bank0
 13412  149F  00D3               	movwf	SendPacket@DestinationPANID
 13413  14A0  0022               	movlb	2	; select bank2
 13414  14A1  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13415  14A2  0020               	movlb	0	; select bank0
 13416  14A3  00D6               	movwf	SendPacket@DestinationAddress+1
 13417  14A4  0022               	movlb	2	; select bank2
 13418  14A5  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13419  14A6  0020               	movlb	0	; select bank0
 13420  14A7  00D5               	movwf	SendPacket@DestinationAddress
 13421  14A8  3000               	movlw	0
 13422  14A9  01D7               	clrf	SendPacket@isCommand
 13423  14AA  0AD7               	incf	SendPacket@isCommand,f
 13424  14AB  0022               	movlb	2	; select bank2
 13425  14AC  19AB               	btfsc	_rxMessage^(0+256),3
 13426  14AD  3001               	movlw	1
 13427  14AE  0020               	movlb	0	; select bank0
 13428  14AF  00D8               	movwf	SendPacket@SecurityEnabled
 13429  14B0  3000               	movlw	0
 13430  14B1  3199  21DB  3190   	fcall	_SendPacket
 13431                           
 13432                           ;miwi_p2p.c: 668: }
 13433                           ;miwi_p2p.c: 669: break;
 13434  14B4  2EDA               	goto	l10534
 13435  14B5                     l10388:	
 13436                           
 13437                           ;miwi_p2p.c: 677: {
 13438                           ;miwi_p2p.c: 678: {TxData = 0;};
 13439  14B5  0021               	movlb	1	; select bank1
 13440  14B6  01EC               	clrf	_TxData^(0+128)
 13441                           
 13442                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
 13443  14B7  086C               	movf	_TxData^(0+128),w
 13444  14B8  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13445  14B9  0086               	movwf	6
 13446  14BA  3002               	movlw	2	; select bank4/5
 13447  14BB  0087               	movwf	7
 13448  14BC  3092               	movlw	146
 13449  14BD  0081               	movwf	1
 13450  14BE  0AEC               	incf	_TxData^(0+128),f
 13451                           
 13452                           ;miwi_p2p.c: 681: for(i = 0; i < 5; i++)
 13453  14BF  01D7               	clrf	P2PTasks@i^(0+128)
 13454                           
 13455                           ;miwi_p2p.c: 697: break;
 13456  14C0  2CC3               	goto	l10396
 13457  14C1                     l10410:	
 13458  14C1  0021               	movlb	1	; select bank1
 13459  14C2  0AD7               	incf	P2PTasks@i^(0+128),f
 13460  14C3                     l10396:	
 13461  14C3  3005               	movlw	5
 13462  14C4  0257               	subwf	P2PTasks@i^(0+128),w
 13463  14C5  1803               	btfsc	3,0
 13464  14C6  2D1D               	goto	l10414
 13465                           
 13466                           ;miwi_p2p.c: 682: {
 13467                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
 13468  14C7  300E               	movlw	14
 13469  14C8  0020               	movlb	0	; select bank0
 13470  14C9  00A9               	movwf	___bmul@multiplicand
 13471  14CA  0021               	movlb	1	; select bank1
 13472  14CB  0857               	movf	P2PTasks@i^(0+128),w
 13473  14CC  26E6  3190         	fcall	___bmul
 13474  14CE  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 13475  14CF  0086               	movwf	6
 13476  14D0  3002               	movlw	2	; select bank5/6
 13477  14D1  0087               	movwf	7
 13478  14D2  1F81               	btfss	1,7
 13479  14D3  2CC1               	goto	l10410
 13480                           
 13481                           ;miwi_p2p.c: 685: {
 13482                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 13483  14D4  0022               	movlb	2	; select bank2
 13484  14D5  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13485  14D6  0020               	movlb	0	; select bank0
 13486  14D7  00AD               	movwf	isSameAddress@Address1+1
 13487  14D8  0022               	movlb	2	; select bank2
 13488  14D9  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13489  14DA  0020               	movlb	0	; select bank0
 13490  14DB  00AC               	movwf	isSameAddress@Address1
 13491  14DC  300E               	movlw	14
 13492  14DD  00A9               	movwf	___bmul@multiplicand
 13493  14DE  0021               	movlb	1	; select bank1
 13494  14DF  0857               	movf	P2PTasks@i^(0+128),w
 13495  14E0  26E6  3190         	fcall	___bmul
 13496  14E2  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 13497  14E3  00AE               	movwf	isSameAddress@Address2
 13498  14E4  27B9  3190         	fcall	_isSameAddress
 13499  14E6  3A00               	xorlw	0
 13500  14E7  1903               	skipnz
 13501  14E8  2CC1               	goto	l10410
 13502                           
 13503                           ;miwi_p2p.c: 688: {
 13504                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
 13505  14E9  300E               	movlw	14
 13506  14EA  00A9               	movwf	___bmul@multiplicand
 13507  14EB  0021               	movlb	1	; select bank1
 13508  14EC  0857               	movf	P2PTasks@i^(0+128),w
 13509  14ED  26E6               	fcall	___bmul
 13510  14EE  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 13511  14EF  0086               	movwf	6
 13512  14F0  3002               	movlw	2	; select bank5/6
 13513  14F1  0087               	movwf	7
 13514  14F2  0181               	clrf	1
 13515                           
 13516                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 13517  14F3  0021               	movlb	1	; select bank1
 13518  14F4  0857               	movf	P2PTasks@i^(0+128),w
 13519  14F5  0020               	movlb	0	; select bank0
 13520  14F6  00AE               	movwf	___wmul@multiplier
 13521  14F7  300E               	movlw	14
 13522  14F8  01AF               	clrf	___wmul@multiplier+1
 13523  14F9  00B0               	movwf	___wmul@multiplicand
 13524  14FA  01B1               	clrf	___wmul@multiplicand+1
 13525  14FB  319F  27EB  3190   	fcall	___wmul
 13526  14FE  082F               	movf	?___wmul+1,w
 13527  14FF  00B7               	movwf	NVMWrite@addr+1
 13528  1500  082E               	movf	?___wmul,w
 13529  1501  00B6               	movwf	NVMWrite@addr
 13530  1502  0860               	movf	_nvmConnectionTable,w
 13531  1503  07B6               	addwf	NVMWrite@addr,f
 13532  1504  0861               	movf	_nvmConnectionTable+1,w
 13533  1505  3DB7               	addwfc	NVMWrite@addr+1,f
 13534  1506  300E               	movlw	14
 13535  1507  00A9               	movwf	___bmul@multiplicand
 13536  1508  0021               	movlb	1	; select bank1
 13537  1509  0857               	movf	P2PTasks@i^(0+128),w
 13538  150A  26E6  3190         	fcall	___bmul
 13539  150C  3EA0               	addlw	(low (_ConnectionTable| (0+512)))& (0+255)
 13540  150D  00B4               	movwf	NVMWrite@source
 13541  150E  3002               	movlw	2
 13542  150F  00B5               	movwf	NVMWrite@source+1
 13543  1510  300E               	movlw	14
 13544  1511  00B8               	movwf	NVMWrite@count
 13545  1512  01B9               	clrf	NVMWrite@count+1
 13546  1513  270A  3190         	fcall	_NVMWrite
 13547                           
 13548                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
 13549  1515  0021               	movlb	1	; select bank1
 13550  1516  086C               	movf	_TxData^(0+128),w
 13551  1517  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13552  1518  0086               	movwf	6
 13553  1519  3002               	movlw	2	; select bank4/5
 13554  151A  0087               	movwf	7
 13555  151B  0181               	clrf	1
 13556  151C  0AEC               	incf	_TxData^(0+128),f
 13557  151D                     l10414:	
 13558                           
 13559                           ;miwi_p2p.c: 698: }
 13560                           ;miwi_p2p.c: 699: }
 13561                           ;miwi_p2p.c: 700: }
 13562                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
 13563  151D  2770  3190         	fcall	_MiMAC_DiscardPacket
 13564                           
 13565                           ;miwi_p2p.c: 704: if( i == 5 )
 13566  151F  3005               	movlw	5
 13567  1520  0021               	movlb	1	; select bank1
 13568  1521  0657               	xorwf	P2PTasks@i^(0+128),w
 13569  1522  1D03               	btfss	3,2
 13570  1523  2D2C               	goto	l10422
 13571                           
 13572                           ;miwi_p2p.c: 705: {
 13573                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
 13574  1524  086C               	movf	_TxData^(0+128),w
 13575  1525  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 13576  1526  0086               	movwf	6
 13577  1527  3002               	movlw	2	; select bank4/5
 13578  1528  0087               	movwf	7
 13579  1529  30F0               	movlw	240
 13580  152A  0081               	movwf	1
 13581  152B  0AEC               	incf	_TxData^(0+128),f
 13582  152C                     l10422:	
 13583                           
 13584                           ;miwi_p2p.c: 708: }
 13585                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 13586  152C  0022               	movlb	2	; select bank2
 13587  152D  082D               	movf	((_rxMessage+1)^(0+256)+1),w
 13588  152E  0020               	movlb	0	; select bank0
 13589  152F  00D4               	movwf	SendPacket@DestinationPANID+1
 13590  1530  0022               	movlb	2	; select bank2
 13591  1531  082C               	movf	(_rxMessage^(0+256)+1),w
 13592  1532  0020               	movlb	0	; select bank0
 13593  1533  00D3               	movwf	SendPacket@DestinationPANID
 13594  1534  0022               	movlb	2	; select bank2
 13595  1535  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13596  1536  0020               	movlb	0	; select bank0
 13597  1537  00D6               	movwf	SendPacket@DestinationAddress+1
 13598  1538  0022               	movlb	2	; select bank2
 13599  1539  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13600  153A  0020               	movlb	0	; select bank0
 13601  153B  00D5               	movwf	SendPacket@DestinationAddress
 13602  153C  3000               	movlw	0
 13603  153D  01D7               	clrf	SendPacket@isCommand
 13604  153E  0AD7               	incf	SendPacket@isCommand,f
 13605  153F  0022               	movlb	2	; select bank2
 13606  1540  19AB               	btfsc	_rxMessage^(0+256),3
 13607  1541  3001               	movlw	1
 13608  1542  0020               	movlb	0	; select bank0
 13609  1543  00D8               	movwf	SendPacket@SecurityEnabled
 13610  1544  3000               	movlw	0
 13611  1545  3199  21DB  3190   	fcall	_SendPacket
 13612                           
 13613                           ;miwi_p2p.c: 723: }
 13614                           ;miwi_p2p.c: 724: break;
 13615  1548  2EDA               	goto	l10534
 13616  1549                     l10424:	
 13617                           
 13618                           ;miwi_p2p.c: 732: case 0x01:
 13619                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
 13620  1549  0021               	movlb	1	; select bank1
 13621  154A  0F6D               	incfsz	_myPANID^(0+128),w
 13622  154B  2D76               	goto	l10432
 13623  154C  0A6E               	incf	(_myPANID+1)^(0+128),w
 13624  154D  1D03               	btfss	3,2
 13625  154E  2D76               	goto	l10432
 13626                           
 13627                           ;miwi_p2p.c: 735: {
 13628                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
 13629  154F  0022               	movlb	2	; select bank2
 13630  1550  082D               	movf	((_rxMessage+1)^(0+256)+1),w
 13631  1551  0021               	movlb	1	; select bank1
 13632  1552  00EE               	movwf	(_myPANID+1)^(0+128)
 13633  1553  0022               	movlb	2	; select bank2
 13634  1554  082C               	movf	(_rxMessage^(0+256)+1),w
 13635  1555  0021               	movlb	1	; select bank1
 13636  1556  00ED               	movwf	_myPANID^(0+128)
 13637                           
 13638                           ;miwi_p2p.c: 737: {
 13639                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
 13640  1557  30FF               	movlw	255
 13641  1558  00C9               	movwf	P2PTasks@tmp^(0+128)
 13642  1559  00CA               	movwf	(P2PTasks@tmp^(0+128)+1)
 13643                           
 13644                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
 13645  155A  30C9               	movlw	low P2PTasks@tmp
 13646  155B  0020               	movlb	0	; select bank0
 13647  155C  00AD               	movwf	MiMAC_SetAltAddress@Address
 13648  155D  3000               	movlw	high P2PTasks@tmp
 13649  155E  00AE               	movwf	MiMAC_SetAltAddress@Address+1
 13650  155F  30ED               	movlw	low _myPANID
 13651  1560  00AF               	movwf	MiMAC_SetAltAddress@PANID
 13652  1561  3000               	movlw	high _myPANID
 13653  1562  00B0               	movwf	MiMAC_SetAltAddress@PANID+1
 13654  1563  31A1  2109  3190   	fcall	_MiMAC_SetAltAddress
 13655                           
 13656                           ;miwi_p2p.c: 740: }
 13657                           ;miwi_p2p.c: 742: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
 13658  1566  30ED               	movlw	low _myPANID
 13659  1567  00B4               	movwf	NVMWrite@source
 13660  1568  3000               	movlw	high _myPANID
 13661  1569  00B5               	movwf	NVMWrite@source+1
 13662  156A  0022               	movlb	2	; select bank2
 13663  156B  0866               	movf	(_nvmMyPANID+1)^(0+256),w
 13664  156C  0020               	movlb	0	; select bank0
 13665  156D  00B7               	movwf	NVMWrite@addr+1
 13666  156E  0022               	movlb	2	; select bank2
 13667  156F  0865               	movf	_nvmMyPANID^(0+256),w
 13668  1570  0020               	movlb	0	; select bank0
 13669  1571  00B6               	movwf	NVMWrite@addr
 13670  1572  3002               	movlw	2
 13671  1573  00B8               	movwf	NVMWrite@count
 13672  1574  01B9               	clrf	NVMWrite@count+1
 13673  1575  270A               	fcall	_NVMWrite
 13674  1576                     l10432:	
 13675                           
 13676                           ;miwi_p2p.c: 744: }
 13677                           ;miwi_p2p.c: 746: AddConnection();
 13678  1576  3185  2505  3190   	fcall	_AddConnection
 13679                           
 13680                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
 13681  1579  0022               	movlb	2	; select bank2
 13682  157A  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13683  157B  0086               	movwf	6
 13684  157C  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13685  157D  0087               	movwf	7
 13686  157E  3142               	addfsr 1,2
 13687  157F  0801               	movf	1,w
 13688  1580  0020               	movlb	0	; select bank0
 13689  1581  00E4               	movwf	_myConnectionIndex_in_PanCo
 13690                           
 13691                           ;miwi_p2p.c: 749: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
 13692  1582  3064               	movlw	low _myConnectionIndex_in_PanCo
 13693  1583  00B4               	movwf	NVMWrite@source
 13694  1584  3000               	movlw	high _myConnectionIndex_in_PanCo
 13695  1585  00B5               	movwf	NVMWrite@source+1
 13696  1586  0022               	movlb	2	; select bank2
 13697  1587  086C               	movf	(_nvmmyIndex+1)^(0+256),w
 13698  1588  0020               	movlb	0	; select bank0
 13699  1589  00B7               	movwf	NVMWrite@addr+1
 13700  158A  0022               	movlb	2	; select bank2
 13701  158B  086B               	movf	_nvmmyIndex^(0+256),w
 13702  158C  0020               	movlb	0	; select bank0
 13703  158D  00B6               	movwf	NVMWrite@addr
 13704  158E  01B8               	clrf	NVMWrite@count
 13705  158F  0AB8               	incf	NVMWrite@count,f
 13706  1590  01B9               	clrf	NVMWrite@count+1
 13707  1591  270A  3190         	fcall	_NVMWrite
 13708                           
 13709                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
 13710  1593  0021               	movlb	1	; select bank1
 13711  1594  14EB               	bsf	_P2PStatus^(0+128),1	;volatile
 13712                           
 13713                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
 13714  1595  2789  3190         	fcall	_MiWi_TickGet
 13715  1597  082C               	movf	?_MiWi_TickGet+3,w
 13716  1598  0022               	movlb	2	; select bank2
 13717  1599  00BD               	movwf	(_nvmDelayTick+3)^(0+256)
 13718  159A  0020               	movlb	0	; select bank0
 13719  159B  082B               	movf	?_MiWi_TickGet+2,w
 13720  159C  0022               	movlb	2	; select bank2
 13721  159D  00BC               	movwf	(_nvmDelayTick+2)^(0+256)
 13722  159E  0020               	movlb	0	; select bank0
 13723  159F  082A               	movf	?_MiWi_TickGet+1,w
 13724  15A0  0022               	movlb	2	; select bank2
 13725  15A1  00BB               	movwf	(_nvmDelayTick+1)^(0+256)
 13726  15A2  0020               	movlb	0	; select bank0
 13727  15A3  0829               	movf	?_MiWi_TickGet,w
 13728  15A4  0022               	movlb	2	; select bank2
 13729  15A5  00BA               	movwf	_nvmDelayTick^(0+256)
 13730                           
 13731                           ;miwi_p2p.c: 756: break;
 13732  15A6  2B86               	goto	l10258
 13733  15A7                     l10444:	
 13734  15A7  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13735  15A8  0086               	movwf	6
 13736  15A9  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13737  15AA  0087               	movwf	7
 13738  15AB  3141               	addfsr 1,1
 13739  15AC  0801               	movf	1,w
 13740                           
 13741                           ; Switch size 1, requested type "speed"
 13742                           ; Number of cases is 2, Range of values is 0 to 1
 13743                           ; switch strategies available:
 13744                           ; Name         Instructions Cycles
 13745                           ; simple_byte            7     4 (average)
 13746                           ; direct_byte           10     6 (fixed)
 13747                           ; jumptable            260     6 (fixed)
 13748                           ;	Chosen strategy is simple_byte
 13749  15AD  3A00               	xorlw	0	; case 0
 13750  15AE  1903               	skipnz
 13751  15AF  2D49               	goto	l10424
 13752  15B0  3A01               	xorlw	1	; case 1
 13753  15B1  1903               	skipnz
 13754  15B2  2D49               	goto	l10424
 13755  15B3  2B86               	goto	l10258
 13756  15B4                     l509:	
 13757                           ;miwi_p2p.c: 765: case 0x97:
 13758                           
 13759                           
 13760                           ;miwi_p2p.c: 766: {
 13761                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
 13762  15B4  0021               	movlb	1	; select bank1
 13763  15B5  1EEB               	btfss	_P2PStatus^(0+128),5	;volatile
 13764  15B6  2B86               	goto	l10258
 13765                           
 13766                           ;miwi_p2p.c: 768: {
 13767                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
 13768  15B7  12EB               	bcf	_P2PStatus^(0+128),5	;volatile
 13769  15B8  2B86               	goto	l10258
 13770  15B9                     l10452:	
 13771                           
 13772                           ;miwi_p2p.c: 817: {
 13773                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
 13774  15B9  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13775  15BA  0086               	movwf	6
 13776  15BB  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13777  15BC  0087               	movwf	7
 13778  15BD  3141               	addfsr 1,1
 13779  15BE  0801               	movf	1,w
 13780  15BF  1D03               	btfss	3,2
 13781  15C0  2B86               	goto	l10258
 13782                           
 13783                           ;miwi_p2p.c: 819: {
 13784                           ;miwi_p2p.c: 820: for(i = 0; i < 5; i++)
 13785  15C1  0021               	movlb	1	; select bank1
 13786  15C2  01D7               	clrf	P2PTasks@i^(0+128)
 13787  15C3                     l10456:	
 13788  15C3  3005               	movlw	5
 13789  15C4  0257               	subwf	P2PTasks@i^(0+128),w
 13790  15C5  1803               	btfsc	3,0
 13791  15C6  2B86               	goto	l10258
 13792                           
 13793                           ;miwi_p2p.c: 821: {
 13794                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
 13795  15C7  300E               	movlw	14
 13796  15C8  0020               	movlb	0	; select bank0
 13797  15C9  00A9               	movwf	___bmul@multiplicand
 13798  15CA  0021               	movlb	1	; select bank1
 13799  15CB  0857               	movf	P2PTasks@i^(0+128),w
 13800  15CC  26E6  3190         	fcall	___bmul
 13801  15CE  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 13802  15CF  0086               	movwf	6
 13803  15D0  3002               	movlw	2	; select bank5/6
 13804  15D1  0087               	movwf	7
 13805  15D2  1F81               	btfss	1,7
 13806  15D3  2E16               	goto	l10466
 13807                           
 13808                           ;miwi_p2p.c: 824: {
 13809                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 13810  15D4  0022               	movlb	2	; select bank2
 13811  15D5  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13812  15D6  0020               	movlb	0	; select bank0
 13813  15D7  00AD               	movwf	isSameAddress@Address1+1
 13814  15D8  0022               	movlb	2	; select bank2
 13815  15D9  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13816  15DA  0020               	movlb	0	; select bank0
 13817  15DB  00AC               	movwf	isSameAddress@Address1
 13818  15DC  300E               	movlw	14
 13819  15DD  00A9               	movwf	___bmul@multiplicand
 13820  15DE  0021               	movlb	1	; select bank1
 13821  15DF  0857               	movf	P2PTasks@i^(0+128),w
 13822  15E0  26E6  3190         	fcall	___bmul
 13823  15E2  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 13824  15E3  00AE               	movwf	isSameAddress@Address2
 13825  15E4  27B9  3190         	fcall	_isSameAddress
 13826  15E6  3A00               	xorlw	0
 13827  15E7  1903               	skipnz
 13828  15E8  2E16               	goto	l10466
 13829                           
 13830                           ;miwi_p2p.c: 827: {
 13831                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
 13832  15E9  300E               	movlw	14
 13833  15EA  00A9               	movwf	___bmul@multiplicand
 13834  15EB  0021               	movlb	1	; select bank1
 13835  15EC  0857               	movf	P2PTasks@i^(0+128),w
 13836  15ED  26E6               	fcall	___bmul
 13837  15EE  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 13838  15EF  0086               	movwf	6
 13839  15F0  3002               	movlw	2	; select bank5/6
 13840  15F1  0087               	movwf	7
 13841  15F2  0181               	clrf	1
 13842                           
 13843                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 13844  15F3  0021               	movlb	1	; select bank1
 13845  15F4  0857               	movf	P2PTasks@i^(0+128),w
 13846  15F5  0020               	movlb	0	; select bank0
 13847  15F6  00AE               	movwf	___wmul@multiplier
 13848  15F7  300E               	movlw	14
 13849  15F8  01AF               	clrf	___wmul@multiplier+1
 13850  15F9  00B0               	movwf	___wmul@multiplicand
 13851  15FA  01B1               	clrf	___wmul@multiplicand+1
 13852  15FB  319F  27EB  3190   	fcall	___wmul
 13853  15FE  082F               	movf	?___wmul+1,w
 13854  15FF  00B7               	movwf	NVMWrite@addr+1
 13855  1600  082E               	movf	?___wmul,w
 13856  1601  00B6               	movwf	NVMWrite@addr
 13857  1602  0860               	movf	_nvmConnectionTable,w
 13858  1603  07B6               	addwf	NVMWrite@addr,f
 13859  1604  0861               	movf	_nvmConnectionTable+1,w
 13860  1605  3DB7               	addwfc	NVMWrite@addr+1,f
 13861  1606  300E               	movlw	14
 13862  1607  00A9               	movwf	___bmul@multiplicand
 13863  1608  0021               	movlb	1	; select bank1
 13864  1609  0857               	movf	P2PTasks@i^(0+128),w
 13865  160A  26E6  3190         	fcall	___bmul
 13866  160C  3EA0               	addlw	(low (_ConnectionTable| (0+512)))& (0+255)
 13867  160D  00B4               	movwf	NVMWrite@source
 13868  160E  3002               	movlw	2
 13869  160F  00B5               	movwf	NVMWrite@source+1
 13870  1610  300E               	movlw	14
 13871  1611  00B8               	movwf	NVMWrite@count
 13872  1612  01B9               	clrf	NVMWrite@count+1
 13873  1613  270A  3190         	fcall	_NVMWrite
 13874                           
 13875                           ;miwi_p2p.c: 833: break;
 13876  1615  2B86               	goto	l10258
 13877  1616                     l10466:	
 13878  1616  0021               	movlb	1	; select bank1
 13879  1617  0AD7               	incf	P2PTasks@i^(0+128),f
 13880  1618  2DC3               	goto	l10456
 13881  1619                     l10472:	
 13882                           
 13883                           ;miwi_p2p.c: 1016: {
 13884                           ;miwi_p2p.c: 1017: if (!role)
 13885  1619  0020               	movlb	0	; select bank0
 13886  161A  0865               	movf	_role,w
 13887  161B  1D03               	btfss	3,2
 13888  161C  2B86               	goto	l10258
 13889                           
 13890                           ;miwi_p2p.c: 1018: {
 13891                           ;miwi_p2p.c: 1019: rec_ack = 1;
 13892  161D  0022               	movlb	2	; select bank2
 13893  161E  01D8               	clrf	_rec_ack^(0+256)
 13894  161F  0AD8               	incf	_rec_ack^(0+256),f
 13895  1620  2B86               	goto	l10258
 13896  1621                     l10480:	
 13897                           
 13898                           ;miwi_p2p.c: 1029: {
 13899                           ;miwi_p2p.c: 1030: if (!role)
 13900  1621  0020               	movlb	0	; select bank0
 13901  1622  0865               	movf	_role,w
 13902  1623  1D03               	btfss	3,2
 13903  1624  2B86               	goto	l10258
 13904                           
 13905                           ;miwi_p2p.c: 1031: {
 13906                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
 13907  1625  0022               	movlb	2	; select bank2
 13908  1626  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13909  1627  0086               	movwf	6
 13910  1628  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13911  1629  0087               	movwf	7
 13912  162A  3141               	addfsr 1,1
 13913  162B  0801               	movf	1,w
 13914  162C  3EFF               	addlw	255
 13915  162D  00D6               	movwf	_end_nodes^(0+256)
 13916                           
 13917                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
 13918  162E  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13919  162F  0020               	movlb	0	; select bank0
 13920  1630  00AE               	movwf	store_connection_tb@payload+1
 13921  1631  0022               	movlb	2	; select bank2
 13922  1632  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13923  1633  0020               	movlb	0	; select bank0
 13924  1634  00AD               	movwf	store_connection_tb@payload
 13925  1635  31A3  236F  3190   	fcall	_store_connection_tb
 13926  1638  2B86               	goto	l10258
 13927  1639                     l10490:	
 13928                           
 13929                           ;miwi_p2p.c: 1043: {
 13930                           ;miwi_p2p.c: 1044: if (role)
 13931  1639  0020               	movlb	0	; select bank0
 13932  163A  0865               	movf	_role,w
 13933  163B  1903               	btfsc	3,2
 13934  163C  2B86               	goto	l10258
 13935                           
 13936                           ;miwi_p2p.c: 1045: {
 13937                           ;miwi_p2p.c: 1047: uint8_t final_index;
 13938                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
 13939  163D  0022               	movlb	2	; select bank2
 13940  163E  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13941  163F  0020               	movlb	0	; select bank0
 13942  1640  00AD               	movwf	Find_Index@DestAddr+1
 13943  1641  0022               	movlb	2	; select bank2
 13944  1642  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13945  1643  0020               	movlb	0	; select bank0
 13946  1644  00AC               	movwf	Find_Index@DestAddr
 13947  1645  31A1  2185  3190   	fcall	_Find_Index
 13948  1648  0021               	movlb	1	; select bank1
 13949  1649  00CF               	movwf	P2PTasks@final_index^(0+128)
 13950                           
 13951                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
 13952  164A  0A4F               	incf	P2PTasks@final_index^(0+128),w
 13953  164B  1903               	btfsc	3,2
 13954  164C  2E63               	goto	l10498
 13955                           
 13956                           ;miwi_p2p.c: 1050: {
 13957                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
 13958  164D  0022               	movlb	2	; select bank2
 13959  164E  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 13960  164F  0021               	movlb	1	; select bank1
 13961  1650  00BA               	movwf	(Forward_Packet_PANCr_to_EDy@fw_payload+1)^(0+128)
 13962  1651  0022               	movlb	2	; select bank2
 13963  1652  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 13964  1653  0021               	movlb	1	; select bank1
 13965  1654  00B9               	movwf	Forward_Packet_PANCr_to_EDy@fw_payload^(0+128)
 13966  1655  084F               	movf	P2PTasks@final_index^(0+128),w
 13967  1656  00BB               	movwf	Forward_Packet_PANCr_to_EDy@index^(0+128)
 13968  1657  0022               	movlb	2	; select bank2
 13969  1658  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13970  1659  0021               	movlb	1	; select bank1
 13971  165A  00BD               	movwf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+128)
 13972  165B  0022               	movlb	2	; select bank2
 13973  165C  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13974  165D  0021               	movlb	1	; select bank1
 13975  165E  00BC               	movwf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+128)
 13976  165F  31A2  222C  3190   	fcall	_Forward_Packet_PANCr_to_EDy
 13977  1662  00C8               	movwf	P2PTasks@FW_Stat^(0+128)
 13978  1663                     l10498:	
 13979                           
 13980                           ;miwi_p2p.c: 1052: }
 13981                           ;miwi_p2p.c: 1054: if (FW_Stat)
 13982  1663  0848               	movf	P2PTasks@FW_Stat^(0+128),w
 13983  1664  1903               	btfsc	3,2
 13984  1665  2B86               	goto	l10258
 13985                           
 13986                           ;miwi_p2p.c: 1055: {
 13987                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
 13988  1666  0022               	movlb	2	; select bank2
 13989  1667  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 13990  1668  0021               	movlb	1	; select bank1
 13991  1669  00B7               	movwf	(SW_Ack_SrED@Dest_Addr+1)^(0+128)
 13992  166A  0022               	movlb	2	; select bank2
 13993  166B  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 13994  166C  0021               	movlb	1	; select bank1
 13995  166D  00B6               	movwf	SW_Ack_SrED@Dest_Addr^(0+128)
 13996  166E  3198  2029  3190   	fcall	_SW_Ack_SrED
 13997  1671  2B86               	goto	l10258
 13998  1672                     l10506:	
 13999                           
 14000                           ;miwi_p2p.c: 1068: {
 14001                           ;miwi_p2p.c: 1069: if (role)
 14002  1672  0020               	movlb	0	; select bank0
 14003  1673  0865               	movf	_role,w
 14004  1674  1903               	btfsc	3,2
 14005  1675  2B86               	goto	l10258
 14006                           
 14007                           ;miwi_p2p.c: 1070: {
 14008                           ;miwi_p2p.c: 1072: uint8_t p;
 14009                           ;miwi_p2p.c: 1073: for (p=0 ; p < 5 ; p++)
 14010  1676  0021               	movlb	1	; select bank1
 14011  1677  01D5               	clrf	P2PTasks@p_1147^(0+128)
 14012  1678                     l10510:	
 14013  1678  3005               	movlw	5
 14014  1679  0255               	subwf	P2PTasks@p_1147^(0+128),w
 14015  167A  1803               	btfsc	3,0
 14016  167B  2B86               	goto	l10258
 14017                           
 14018                           ;miwi_p2p.c: 1074: {
 14019                           ;miwi_p2p.c: 1075: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
 14020                           ;miwi_p2p.c: 1076: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
 14021  167C  0022               	movlb	2	; select bank2
 14022  167D  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14023  167E  0086               	movwf	6
 14024  167F  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14025  1680  0087               	movwf	7
 14026  1681  300E               	movlw	14
 14027  1682  0020               	movlb	0	; select bank0
 14028  1683  00A9               	movwf	___bmul@multiplicand
 14029  1684  0021               	movlb	1	; select bank1
 14030  1685  0855               	movf	P2PTasks@p_1147^(0+128),w
 14031  1686  26E6  3190         	fcall	___bmul
 14032  1688  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 14033  1689  0084               	movwf	4
 14034  168A  3002               	movlw	2	; select bank5/6
 14035  168B  0085               	movwf	5
 14036  168C  0800               	movf	0,w
 14037  168D  0601               	xorwf	1,w
 14038  168E  1D03               	skipz
 14039  168F  2EC2               	goto	l10522
 14040  1690  0022               	movlb	2	; select bank2
 14041  1691  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14042  1692  0086               	movwf	6
 14043  1693  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14044  1694  0087               	movwf	7
 14045  1695  300E               	movlw	14
 14046  1696  3141               	addfsr 1,1
 14047  1697  0020               	movlb	0	; select bank0
 14048  1698  00A9               	movwf	___bmul@multiplicand
 14049  1699  0021               	movlb	1	; select bank1
 14050  169A  0855               	movf	P2PTasks@p_1147^(0+128),w
 14051  169B  26E6  3190         	fcall	___bmul
 14052  169D  3EA5               	addlw	(low ((_ConnectionTable| (0+512)+5)))& (0+255)
 14053  169E  0084               	movwf	4
 14054  169F  3002               	movlw	2	; select bank5/6
 14055  16A0  0085               	movwf	5
 14056  16A1  0800               	movf	0,w
 14057  16A2  0601               	xorwf	1,w
 14058  16A3  1D03               	skipz
 14059  16A4  2EC2               	goto	l10522
 14060  16A5  0022               	movlb	2	; select bank2
 14061  16A6  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14062  16A7  0086               	movwf	6
 14063  16A8  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14064  16A9  0087               	movwf	7
 14065  16AA  300E               	movlw	14
 14066  16AB  3142               	addfsr 1,2
 14067  16AC  0020               	movlb	0	; select bank0
 14068  16AD  00A9               	movwf	___bmul@multiplicand
 14069  16AE  0021               	movlb	1	; select bank1
 14070  16AF  0855               	movf	P2PTasks@p_1147^(0+128),w
 14071  16B0  26E6  3190         	fcall	___bmul
 14072  16B2  3EA6               	addlw	(low ((_ConnectionTable| (0+512)+6)))& (0+255)
 14073  16B3  0084               	movwf	4
 14074  16B4  3002               	movlw	2	; select bank5/6
 14075  16B5  0085               	movwf	5
 14076  16B6  0800               	movf	0,w
 14077  16B7  0601               	xorwf	1,w
 14078  16B8  1D03               	skipz
 14079  16B9  2EC2               	goto	l10522
 14080                           
 14081                           ;miwi_p2p.c: 1077: {
 14082                           ;miwi_p2p.c: 1078: link_stat[p]++;
 14083  16BA  0021               	movlb	1	; select bank1
 14084  16BB  0855               	movf	P2PTasks@p_1147^(0+128),w
 14085  16BC  3E35               	addlw	(low (_link_stat| (0+256)))& (0+255)
 14086  16BD  0086               	movwf	6
 14087  16BE  3001               	movlw	1	; select bank2/3
 14088  16BF  0087               	movwf	7
 14089  16C0  0A81               	incf	1,f
 14090                           
 14091                           ;miwi_p2p.c: 1079: break;
 14092  16C1  2B86               	goto	l10258
 14093  16C2                     l10522:	
 14094  16C2  0021               	movlb	1	; select bank1
 14095  16C3  0AD5               	incf	P2PTasks@p_1147^(0+128),f
 14096  16C4  2E78               	goto	l10510
 14097  16C5                     l534:	
 14098                           ;miwi_p2p.c: 1095: default:
 14099                           
 14100  16C5  2ED8               	goto	l467
 14101  16C6                     l10532:	
 14102                           ;miwi_p2p.c: 1098: break;
 14103                           
 14104                           ;miwi_p2p.c: 1097: P2PStatus.bits.RxHasUserData = 1;
 14105                           
 14106  16C6  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 14107  16C7  0086               	movwf	6
 14108  16C8  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 14109  16C9  0087               	movwf	7
 14110  16CA  0801               	movf	1,w
 14111                           
 14112                           ; Switch size 1, requested type "speed"
 14113                           ; Number of cases is 10, Range of values is 119 to 218
 14114                           ; switch strategies available:
 14115                           ; Name         Instructions Cycles
 14116                           ; direct_byte          209     9 (fixed)
 14117                           ; simple_byte           31    16 (average)
 14118                           ; jumptable            263     9 (fixed)
 14119                           ;	Chosen strategy is direct_byte
 14120  16CB  3E89               	addlw	-119
 14121  16CC  1C03               	skipc
 14122  16CD  2ED8               	goto	l467
 14123  16CE  0084               	movwf	4
 14124  16CF  3064               	movlw	100
 14125  16D0  0204               	subwf	4,w
 14126  16D1  1803               	skipnc
 14127  16D2  2ED8               	goto	l467
 14128  16D3  3187               	movlp	high S11448
 14129  16D4  3504               	lslf	4,w
 14130  16D5  3E00               	addlw	low S11448
 14131  16D6  0082               	movwf	2
 14132                           
 14133                           ;miwi_p2p.c: 1100: }
 14134  16D7  2EDA               	goto	l10534
 14135  16D8                     l467:	
 14136                           
 14137                           ;miwi_p2p.c: 1101: else
 14138                           ;miwi_p2p.c: 1102: {
 14139                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
 14140  16D8  0021               	movlb	1	; select bank1
 14141  16D9  15EB               	bsf	_P2PStatus^(0+128),3	;volatile
 14142  16DA                     l10534:	
 14143                           
 14144                           ;miwi_p2p.c: 1104: }
 14145                           ;miwi_p2p.c: 1112: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
 14146  16DA  0022               	movlb	2	; select bank2
 14147  16DB  0832               	movf	(_rxMessage^(0+256)+7),w
 14148  16DC  1903               	btfsc	3,2
 14149  16DD  2EE3               	goto	l538
 14150  16DE  0021               	movlb	1	; select bank1
 14151  16DF  1A6B               	btfsc	_P2PStatus^(0+128),4	;volatile
 14152  16E0  2EE3               	goto	l538
 14153  16E1  1EEB               	btfss	_P2PStatus^(0+128),5	;volatile
 14154  16E2  0008               	return
 14155  16E3                     l538:	
 14156                           
 14157                           ;miwi_p2p.c: 1113: {
 14158                           ;miwi_p2p.c: 1114: P2PStatus.bits.RxHasUserData = 0;
 14159  16E3  0021               	movlb	1	; select bank1
 14160  16E4  11EB               	bcf	_P2PStatus^(0+128),3	;volatile
 14161                           
 14162                           ;miwi_p2p.c: 1115: MiMAC_DiscardPacket();
 14163  16E5  2F70               	ljmp	l9516
 14164  16E6                     __end_of_P2PTasks:	
 14165  16E6                     __ptext74:	
 14166 ;; *************** function ___bmul *****************
 14167 ;; Defined at:
 14168 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;  multiplier      1    wreg     unsigned char 
 14171 ;;  multiplicand    1    9[BANK0 ] unsigned char 
 14172 ;; Auto vars:     Size  Location     Type
 14173 ;;  multiplier      1   11[BANK0 ] unsigned char 
 14174 ;;  product         1   10[BANK0 ] unsigned char 
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      unsigned char 
 14177 ;; Registers used:
 14178 ;;		wreg, status,2, status,0
 14179 ;; Tracked objects:
 14180 ;;		On entry : 1C/0
 14181 ;;		On exit  : 1F/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14184 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14187 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;Total ram usage:        3 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    4
 14191 ;; This function calls:
 14192 ;;		Nothing
 14193 ;; This function is called by:
 14194 ;;		_Total_Connections
 14195 ;;		_Find_Index
 14196 ;;		_P2PTasks
 14197 ;;		_MiApp_ProtocolInit
 14198 ;;		_MiApp_UnicastConnection
 14199 ;;		_MiApp_BroadcastConnectionTable
 14200 ;;		_Find_InActiveDevices
 14201 ;;		_AddConnection
 14202 ;;		_MiApp_RemoveConnection
 14203 ;;		_sprintf
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           
 14208                           ;psect for function ___bmul
 14209  16E6                     ___bmul:	
 14210                           
 14211                           ;incstack = 0
 14212                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 14213                           ;___bmul@multiplier stored from wreg
 14214  16E6  0020               	movlb	0	; select bank0
 14215  16E7  00AB               	movwf	___bmul@multiplier
 14216  16E8  01AA               	clrf	___bmul@product
 14217  16E9  0829               	movf	___bmul@multiplicand,w
 14218  16EA  182B               	btfsc	___bmul@multiplier,0
 14219  16EB  07AA               	addwf	___bmul@product,f
 14220  16EC  35A9               	lslf	___bmul@multiplicand,f
 14221  16ED  0829               	movf	___bmul@multiplicand,w
 14222  16EE  18AB               	btfsc	___bmul@multiplier,1
 14223  16EF  07AA               	addwf	___bmul@product,f
 14224  16F0  35A9               	lslf	___bmul@multiplicand,f
 14225  16F1  0829               	movf	___bmul@multiplicand,w
 14226  16F2  192B               	btfsc	___bmul@multiplier,2
 14227  16F3  07AA               	addwf	___bmul@product,f
 14228  16F4  35A9               	lslf	___bmul@multiplicand,f
 14229  16F5  0829               	movf	___bmul@multiplicand,w
 14230  16F6  19AB               	btfsc	___bmul@multiplier,3
 14231  16F7  07AA               	addwf	___bmul@product,f
 14232  16F8  35A9               	lslf	___bmul@multiplicand,f
 14233  16F9  0829               	movf	___bmul@multiplicand,w
 14234  16FA  1A2B               	btfsc	___bmul@multiplier,4
 14235  16FB  07AA               	addwf	___bmul@product,f
 14236  16FC  35A9               	lslf	___bmul@multiplicand,f
 14237  16FD  0829               	movf	___bmul@multiplicand,w
 14238  16FE  1AAB               	btfsc	___bmul@multiplier,5
 14239  16FF  07AA               	addwf	___bmul@product,f
 14240  1700  35A9               	lslf	___bmul@multiplicand,f
 14241  1701  0829               	movf	___bmul@multiplicand,w
 14242  1702  1B2B               	btfsc	___bmul@multiplier,6
 14243  1703  07AA               	addwf	___bmul@product,f
 14244  1704  35A9               	lslf	___bmul@multiplicand,f
 14245  1705  0829               	movf	___bmul@multiplicand,w
 14246  1706  1BAB               	btfsc	___bmul@multiplier,7
 14247  1707  07AA               	addwf	___bmul@product,f
 14248  1708  082A               	movf	___bmul@product,w
 14249  1709  0008               	return
 14250  170A                     __end_of___bmul:	
 14251  170A                     __ptext64:	
 14252 ;; *************** function _NVMWrite *****************
 14253 ;; Defined at:
 14254 ;;		line 656 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;  source          2   20[BANK0 ] PTR unsigned char 
 14257 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
 14258 ;;		 -> role(1), conn_size(1), ConnectionTable(70), 
 14259 ;;  addr            2   22[BANK0 ] unsigned int 
 14260 ;;  count           2   24[BANK0 ] unsigned int 
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;  oldGIEH         1   26[BANK0 ] unsigned char 
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  1    wreg      void 
 14265 ;; Registers used:
 14266 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14267 ;; Tracked objects:
 14268 ;;		On entry : 1F/0
 14269 ;;		On exit  : 1F/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14275 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14276 ;;Total ram usage:        7 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    4
 14279 ;; This function calls:
 14280 ;;		Nothing
 14281 ;; This function is called by:
 14282 ;;		_P2PTasks
 14283 ;;		_MiApp_ProtocolInit
 14284 ;;		_MiApp_SetChannel
 14285 ;;		_AddConnection
 14286 ;;		_MiApp_RemoveConnection
 14287 ;;		_MiApp_ConnectionMode
 14288 ;;		_Initialize_Demo
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           
 14293                           ;psect for function _NVMWrite
 14294  170A                     _NVMWrite:	
 14295  170A                     l267:	
 14296                           ;miwi_nvm.c: 658: uint8_t oldGIEH;
 14297                           ;miwi_nvm.c: 664: while(count)
 14298                           
 14299                           ;incstack = 0
 14300                           ; Regs used in _NVMWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 14301                           
 14302  170A  0838               	movf	NVMWrite@count,w
 14303  170B  0439               	iorwf	NVMWrite@count+1,w
 14304  170C  1903               	btfsc	3,2
 14305  170D  0008               	return
 14306                           
 14307                           ;miwi_nvm.c: 665: {
 14308                           ;miwi_nvm.c: 666: EEADRH = addr >> 8;
 14309  170E  0837               	movf	NVMWrite@addr+1,w
 14310  170F  0023               	movlb	3	; select bank3
 14311  1710  0092               	movwf	18	;volatile
 14312                           
 14313                           ;miwi_nvm.c: 667: EEADR = addr;
 14314  1711  0020               	movlb	0	; select bank0
 14315  1712  0837               	movf	NVMWrite@addr+1,w
 14316  1713  0023               	movlb	3	; select bank3
 14317  1714  0092               	movwf	18	;volatile
 14318  1715  0020               	movlb	0	; select bank0
 14319  1716  0836               	movf	NVMWrite@addr,w
 14320  1717  0023               	movlb	3	; select bank3
 14321  1718  0091               	movwf	17	;volatile
 14322                           
 14323                           ;miwi_nvm.c: 668: EEDATA = *source++;
 14324  1719  0020               	movlb	0	; select bank0
 14325  171A  0834               	movf	NVMWrite@source,w
 14326  171B  0086               	movwf	6
 14327  171C  0835               	movf	NVMWrite@source+1,w
 14328  171D  0087               	movwf	7
 14329  171E  0801               	movf	1,w
 14330  171F  0023               	movlb	3	; select bank3
 14331  1720  0093               	movwf	19	;volatile
 14332  1721  0020               	movlb	0	; select bank0
 14333  1722  0AB4               	incf	NVMWrite@source,f
 14334  1723  1903               	skipnz
 14335  1724  0AB5               	incf	NVMWrite@source+1,f
 14336                           
 14337                           ;miwi_nvm.c: 669: EECON1bits.EEPGD = 0;
 14338  1725  0023               	movlb	3	; select bank3
 14339  1726  1395               	bcf	21,7	;volsfr
 14340                           
 14341                           ;miwi_nvm.c: 670: EECON1bits.CFGS = 0;
 14342  1727  1315               	bcf	21,6	;volsfr
 14343                           
 14344                           ;miwi_nvm.c: 671: EECON1bits.WREN = 1;
 14345  1728  1515               	bsf	21,2	;volsfr
 14346                           
 14347                           ;miwi_nvm.c: 672: oldGIEH = INTCONbits.GIE;
 14348  1729  3000               	movlw	0
 14349  172A  1B8B               	btfsc	11,7	;volatile
 14350  172B  3001               	movlw	1
 14351  172C  0020               	movlb	0	; select bank0
 14352  172D  00BA               	movwf	NVMWrite@oldGIEH
 14353                           
 14354                           ;miwi_nvm.c: 673: INTCONbits.GIE = 0;
 14355  172E  138B               	bcf	11,7	;volatile
 14356                           
 14357                           ;miwi_nvm.c: 674: EECON2 = 0x55;
 14358  172F  3055               	movlw	85
 14359  1730  0023               	movlb	3	; select bank3
 14360  1731  0096               	movwf	22	;volsfr
 14361                           
 14362                           ;miwi_nvm.c: 675: EECON2 = 0xAA;
 14363  1732  30AA               	movlw	170
 14364  1733  0096               	movwf	22	;volsfr
 14365                           
 14366                           ;miwi_nvm.c: 676: EECON1bits.WR = 1;
 14367  1734  1495               	bsf	21,1	;volsfr
 14368                           
 14369                           ;miwi_nvm.c: 677: INTCONbits.GIE = oldGIEH;
 14370  1735  0020               	movlb	0	; select bank0
 14371  1736  0C3A               	rrf	NVMWrite@oldGIEH,w
 14372  1737  1C03               	skipc
 14373  1738  138B               	bcf	11,7	;volatile
 14374  1739  1803               	skipnc
 14375  173A  178B               	bsf	11,7	;volatile
 14376  173B                     l269:	
 14377                           ;miwi_nvm.c: 678: while(EECON1bits.WR) ;
 14378                           
 14379  173B  0023               	movlb	3	; select bank3
 14380  173C  1895               	btfsc	21,1	;volsfr
 14381  173D  2F3B               	goto	l269
 14382                           
 14383                           ;miwi_nvm.c: 679: EECON1bits.WREN = 0;
 14384  173E  1115               	bcf	21,2	;volsfr
 14385                           
 14386                           ;miwi_nvm.c: 680: count--;
 14387  173F  3001               	movlw	1
 14388  1740  0020               	movlb	0	; select bank0
 14389  1741  02B8               	subwf	NVMWrite@count,f
 14390  1742  3000               	movlw	0
 14391  1743  3BB9               	subwfb	NVMWrite@count+1,f
 14392                           
 14393                           ;miwi_nvm.c: 681: addr++;
 14394  1744  0AB6               	incf	NVMWrite@addr,f
 14395  1745  1903               	skipnz
 14396  1746  0AB7               	incf	NVMWrite@addr+1,f
 14397  1747  2F0A               	goto	l267
 14398  1748                     __end_of_NVMWrite:	
 14399  1748                     __ptext21:	
 14400 ;; *************** function _NVMRead *****************
 14401 ;; Defined at:
 14402 ;;		line 640 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 14405 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
 14406 ;;		 -> role(1), conn_size(1), ConnectionTable(70), 
 14407 ;;  addr            2   11[BANK0 ] unsigned int 
 14408 ;;  count           2   13[BANK0 ] unsigned int 
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;		None
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  1    wreg      void 
 14413 ;; Registers used:
 14414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 1F/0
 14417 ;;		On exit  : 1F/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14420 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;Total ram usage:        6 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    5
 14427 ;; This function calls:
 14428 ;;		_MacroNop
 14429 ;; This function is called by:
 14430 ;;		_MiApp_ProtocolInit
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           
 14435                           ;psect for function _NVMRead
 14436  1748                     _NVMRead:	
 14437  1748                     l10634:	
 14438                           ;miwi_nvm.c: 642: while( count )
 14439                           
 14440                           ;incstack = 0
 14441                           ; Regs used in _NVMRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14442                           
 14443  1748  082D               	movf	NVMRead@count,w
 14444  1749  042E               	iorwf	NVMRead@count+1,w
 14445  174A  1903               	btfsc	3,2
 14446  174B  0008               	return
 14447                           
 14448                           ;miwi_nvm.c: 643: {
 14449                           ;miwi_nvm.c: 644: EEADRH = addr >> 8;
 14450  174C  082C               	movf	NVMRead@addr+1,w
 14451  174D  0023               	movlb	3	; select bank3
 14452  174E  0092               	movwf	18	;volatile
 14453                           
 14454                           ;miwi_nvm.c: 645: EEADR = addr;
 14455  174F  0020               	movlb	0	; select bank0
 14456  1750  082C               	movf	NVMRead@addr+1,w
 14457  1751  0023               	movlb	3	; select bank3
 14458  1752  0092               	movwf	18	;volatile
 14459  1753  0020               	movlb	0	; select bank0
 14460  1754  082B               	movf	NVMRead@addr,w
 14461  1755  0023               	movlb	3	; select bank3
 14462  1756  0091               	movwf	17	;volatile
 14463                           
 14464                           ;miwi_nvm.c: 646: EECON1bits.EEPGD = 0;
 14465  1757  1395               	bcf	21,7	;volsfr
 14466                           
 14467                           ;miwi_nvm.c: 647: EECON1bits.CFGS = 0;
 14468  1758  1315               	bcf	21,6	;volsfr
 14469                           
 14470                           ;miwi_nvm.c: 648: EECON1bits.RD = 1;
 14471  1759  1415               	bsf	21,0	;volsfr
 14472                           
 14473                           ;miwi_nvm.c: 649: MacroNop();
 14474  175A  27FE  3190         	fcall	_MacroNop
 14475                           
 14476                           ;miwi_nvm.c: 650: *dest++ = EEDATA;
 14477  175C  0020               	movlb	0	; select bank0
 14478  175D  0829               	movf	NVMRead@dest,w
 14479  175E  0086               	movwf	6
 14480  175F  082A               	movf	NVMRead@dest+1,w
 14481  1760  0087               	movwf	7
 14482  1761  0023               	movlb	3	; select bank3
 14483  1762  0813               	movf	19,w	;volatile
 14484  1763  0081               	movwf	1
 14485  1764  0020               	movlb	0	; select bank0
 14486  1765  0AA9               	incf	NVMRead@dest,f
 14487  1766  1903               	skipnz
 14488  1767  0AAA               	incf	NVMRead@dest+1,f
 14489                           
 14490                           ;miwi_nvm.c: 651: count--;
 14491  1768  3001               	movlw	1
 14492  1769  02AD               	subwf	NVMRead@count,f
 14493  176A  3000               	movlw	0
 14494  176B  3BAE               	subwfb	NVMRead@count+1,f
 14495                           
 14496                           ;miwi_nvm.c: 652: addr++;
 14497  176C  0AAB               	incf	NVMRead@addr,f
 14498  176D  1903               	skipnz
 14499  176E  0AAC               	incf	NVMRead@addr+1,f
 14500  176F  2F48               	goto	l10634
 14501  1770                     __end_of_NVMRead:	
 14502  1770                     __ptext62:	
 14503 ;; *************** function _MiMAC_DiscardPacket *****************
 14504 ;; Defined at:
 14505 ;;		line 693 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;		None
 14508 ;; Auto vars:     Size  Location     Type
 14509 ;;		None
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  1    wreg      void 
 14512 ;; Registers used:
 14513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14514 ;; Tracked objects:
 14515 ;;		On entry : 18/0
 14516 ;;		On exit  : 1F/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;Total ram usage:        2 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    5
 14526 ;; This function calls:
 14527 ;;		___wmul
 14528 ;; This function is called by:
 14529 ;;		_MiMAC_ReceivedPacket
 14530 ;;		_P2PTasks
 14531 ;;		_MiApp_DiscardMessage
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535                           
 14536                           ;psect for function _MiMAC_DiscardPacket
 14537  1770                     _MiMAC_DiscardPacket:	
 14538  1770                     l9516:	
 14539                           ;incstack = 0
 14540                           ; Regs used in _MiMAC_DiscardPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14541                           
 14542                           
 14543                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 14544  1770  3002               	movlw	2
 14545  1771  0020               	movlb	0	; select bank0
 14546  1772  0266               	subwf	_BankIndex,w
 14547  1773  1803               	skipnc
 14548  1774  0008               	return
 14549                           
 14550                           ;drv_mrf_miwi_24j40.c: 698: {
 14551                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 14552  1775  0866               	movf	_BankIndex,w
 14553  1776  00AE               	movwf	___wmul@multiplier
 14554  1777  3045               	movlw	69
 14555  1778  01AF               	clrf	___wmul@multiplier+1
 14556  1779  00B0               	movwf	___wmul@multiplicand
 14557  177A  01B1               	clrf	___wmul@multiplicand+1
 14558  177B  319F  27EB         	fcall	___wmul
 14559  177D  3066               	movlw	102
 14560  177E  00B4               	movwf	??_MiMAC_DiscardPacket
 14561  177F  3023               	movlw	35
 14562  1780  00B5               	movwf	??_MiMAC_DiscardPacket+1
 14563  1781  082E               	movf	?___wmul,w
 14564  1782  0734               	addwf	??_MiMAC_DiscardPacket,w
 14565  1783  0086               	movwf	6
 14566  1784  082F               	movf	?___wmul+1,w
 14567  1785  3D35               	addwfc	??_MiMAC_DiscardPacket+1,w
 14568  1786  0087               	movwf	7
 14569  1787  0181               	clrf	1
 14570  1788  0008               	return
 14571  1789                     __end_of_MiMAC_DiscardPacket:	
 14572  1789                     __ptext49:	
 14573 ;; *************** function _MiWi_TickGet *****************
 14574 ;; Defined at:
 14575 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_24j40/symbol.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;		None
 14578 ;; Auto vars:     Size  Location     Type
 14579 ;;  currentTime     4   15[BANK0 ] struct _MIWI_TICK
 14580 ;;  IntFlag1        1   14[BANK0 ] unsigned char 
 14581 ;;  IntFlag2        1   13[BANK0 ] unsigned char 
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  4    9[BANK0 ] struct _MIWI_TICK
 14584 ;; Registers used:
 14585 ;;		wreg, status,2, status,0
 14586 ;; Tracked objects:
 14587 ;;		On entry : 18/0
 14588 ;;		On exit  : 1F/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;Total ram usage:       10 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; Hardware stack levels required when called:    4
 14598 ;; This function calls:
 14599 ;;		Nothing
 14600 ;; This function is called by:
 14601 ;;		_MiMAC_SendPacket
 14602 ;;		_P2PTasks
 14603 ;;		_MiApp_UnicastStar
 14604 ;;		_MiApp_StartConnection
 14605 ;;		_MiApp_EstablishConnection
 14606 ;;		_ButtonPressed
 14607 ;;		_run_star_demo
 14608 ;;		_freezer_feature
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           
 14613                           ;psect for function _MiWi_TickGet
 14614  1789                     _MiWi_TickGet:	
 14615                           
 14616                           ;symbol.c: 108: MIWI_TICK currentTime;
 14617                           ;symbol.c: 109: uint8_t IntFlag1;
 14618                           ;symbol.c: 110: uint8_t IntFlag2;
 14619                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 14620                           
 14621                           ;incstack = 0
 14622                           ; Regs used in _MiWi_TickGet: [wreg+status,2+status,0]
 14623  1789  0020               	movlb	0	; select bank0
 14624  178A  01B1               	clrf	MiWi_TickGet@currentTime+2
 14625                           
 14626                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 14627  178B  01B2               	clrf	MiWi_TickGet@currentTime+3
 14628                           
 14629                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 14630  178C  0021               	movlb	1	; select bank1
 14631  178D  1011               	bcf	17,0	;volatile
 14632  178E                     l8538:	
 14633                           
 14634                           ;symbol.c: 120: {
 14635                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 14636  178E  3000               	movlw	0
 14637  178F  0020               	movlb	0	; select bank0
 14638  1790  1811               	btfsc	17,0	;volatile
 14639  1791  3001               	movlw	1
 14640  1792  00AE               	movwf	MiWi_TickGet@IntFlag1
 14641                           
 14642                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 14643  1793  0816               	movf	22,w	;volatile
 14644  1794  00AF               	movwf	MiWi_TickGet@currentTime
 14645                           
 14646                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 14647  1795  0817               	movf	23,w	;volatile
 14648  1796  00B0               	movwf	MiWi_TickGet@currentTime+1
 14649                           
 14650                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 14651  1797  3000               	movlw	0
 14652  1798  1811               	btfsc	17,0	;volatile
 14653  1799  3001               	movlw	1
 14654  179A  00AD               	movwf	MiWi_TickGet@IntFlag2
 14655                           
 14656                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 14657  179B  062E               	xorwf	MiWi_TickGet@IntFlag1,w
 14658  179C  1D03               	skipz
 14659  179D  2F8E               	goto	l8538
 14660                           
 14661                           ;symbol.c: 127: if( IntFlag1 > 0 )
 14662  179E  082E               	movf	MiWi_TickGet@IntFlag1,w
 14663  179F  1903               	btfsc	3,2
 14664  17A0  2FA6               	goto	l8554
 14665                           
 14666                           ;symbol.c: 128: {
 14667                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 14668  17A1  1011               	bcf	17,0	;volatile
 14669                           
 14670                           ;symbol.c: 130: timerExtension1++;
 14671  17A2  0FFD               	incfsz	_timerExtension1,f	;volatile
 14672                           
 14673                           ;symbol.c: 131: if(timerExtension1 == 0)
 14674  17A3  2FA6               	goto	l8554
 14675                           
 14676                           ;symbol.c: 132: {
 14677                           ;symbol.c: 133: timerExtension2++;
 14678  17A4  0022               	movlb	2	; select bank2
 14679  17A5  0ADA               	incf	_timerExtension2^(0+256),f	;volatile
 14680  17A6                     l8554:	
 14681                           
 14682                           ;symbol.c: 134: }
 14683                           ;symbol.c: 135: }
 14684                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 14685  17A6  087D               	movf	_timerExtension1,w	;volatile
 14686  17A7  0020               	movlb	0	; select bank0
 14687  17A8  07B1               	addwf	MiWi_TickGet@currentTime+2,f
 14688                           
 14689                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 14690  17A9  0022               	movlb	2	; select bank2
 14691  17AA  085A               	movf	_timerExtension2^(0+256),w	;volatile
 14692  17AB  0020               	movlb	0	; select bank0
 14693  17AC  07B2               	addwf	MiWi_TickGet@currentTime+3,f
 14694                           
 14695                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 14696  17AD  0021               	movlb	1	; select bank1
 14697  17AE  1411               	bsf	17,0	;volatile
 14698                           
 14699                           ;symbol.c: 143: return currentTime;
 14700  17AF  0020               	movlb	0	; select bank0
 14701  17B0  0832               	movf	MiWi_TickGet@currentTime+3,w
 14702  17B1  00AC               	movwf	?_MiWi_TickGet+3
 14703  17B2  0831               	movf	MiWi_TickGet@currentTime+2,w
 14704  17B3  00AB               	movwf	?_MiWi_TickGet+2
 14705  17B4  0830               	movf	MiWi_TickGet@currentTime+1,w
 14706  17B5  00AA               	movwf	?_MiWi_TickGet+1
 14707  17B6  082F               	movf	MiWi_TickGet@currentTime,w
 14708  17B7  00A9               	movwf	?_MiWi_TickGet
 14709  17B8  0008               	return
 14710  17B9                     __end_of_MiWi_TickGet:	
 14711  17B9                     __ptext59:	
 14712 ;; *************** function _isSameAddress *****************
 14713 ;; Defined at:
 14714 ;;		line 2144 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;  Address1        2   12[BANK0 ] PTR unsigned char 
 14717 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 14718 ;;  Address2        1   14[BANK0 ] PTR unsigned char 
 14719 ;;		 -> ConnectionTable(70), 
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;  i               1   18[BANK0 ] unsigned char 
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      unsigned char 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14726 ;; Tracked objects:
 14727 ;;		On entry : 1F/0
 14728 ;;		On exit  : 1F/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14731 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;Total ram usage:        7 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    4
 14738 ;; This function calls:
 14739 ;;		Nothing
 14740 ;; This function is called by:
 14741 ;;		_P2PTasks
 14742 ;;		_AddConnection
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function _isSameAddress
 14748  17B9                     _isSameAddress:	
 14749                           
 14750                           ;miwi_p2p.c: 2146: uint8_t i;
 14751                           ;miwi_p2p.c: 2148: for(i = 0; i < 8; i++)
 14752                           
 14753                           ;incstack = 0
 14754                           ; Regs used in _isSameAddress: [wreg-fsr1h+status,2+status,0]
 14755  17B9  01B2               	clrf	isSameAddress@i
 14756  17BA                     l9578:	
 14757                           
 14758                           ;miwi_p2p.c: 2149: {
 14759                           ;miwi_p2p.c: 2150: if( Address1[i] != Address2[i] )
 14760  17BA  0832               	movf	isSameAddress@i,w
 14761  17BB  072E               	addwf	isSameAddress@Address2,w
 14762  17BC  00AF               	movwf	??_isSameAddress
 14763  17BD  0086               	movwf	6
 14764  17BE  3002               	movlw	2	; select bank4/5
 14765  17BF  0087               	movwf	7
 14766  17C0  0832               	movf	isSameAddress@i,w
 14767  17C1  00B0               	movwf	??_isSameAddress+1
 14768  17C2  01B1               	clrf	??_isSameAddress+2
 14769  17C3  072C               	addwf	isSameAddress@Address1,w
 14770  17C4  0084               	movwf	4
 14771  17C5  0831               	movf	??_isSameAddress+2,w
 14772  17C6  3D2D               	addwfc	isSameAddress@Address1+1,w
 14773  17C7  0085               	movwf	5
 14774  17C8  0800               	movf	0,w
 14775  17C9  0601               	xorwf	1,w
 14776  17CA  1D03               	btfss	3,2
 14777                           
 14778                           ;miwi_p2p.c: 2151: {
 14779                           ;miwi_p2p.c: 2152: return 0;
 14780  17CB  3400               	retlw	0
 14781  17CC  3008               	movlw	8
 14782  17CD  0AB2               	incf	isSameAddress@i,f
 14783  17CE  0232               	subwf	isSameAddress@i,w
 14784  17CF  1803               	btfsc	3,0
 14785                           
 14786                           ;miwi_p2p.c: 2153: }
 14787                           ;miwi_p2p.c: 2154: }
 14788                           ;miwi_p2p.c: 2155: return 1;
 14789  17D0  3401               	retlw	1
 14790  17D1  2FBA               	goto	l9578
 14791  17D2                     __end_of_isSameAddress:	
 14792  17D2                     __ptext28:	
 14793 ;; *************** function _EEPROM_Read *****************
 14794 ;; Defined at:
 14795 ;;		line 28 in file "../src/system_config/pic18exp_pic16f1947_24j40/eeprom.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;  dest            1    wreg     PTR unsigned char 
 14798 ;;		 -> myLongAddress(8), 
 14799 ;;  addr            1   10[BANK0 ] unsigned char 
 14800 ;;  count           1   11[BANK0 ] unsigned char 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  dest            1   12[BANK0 ] PTR unsigned char 
 14803 ;;		 -> myLongAddress(8), 
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  1    wreg      void 
 14806 ;; Registers used:
 14807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14808 ;; Tracked objects:
 14809 ;;		On entry : 1F/0
 14810 ;;		On exit  : 1F/2
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;Total ram usage:        3 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:    6
 14820 ;; This function calls:
 14821 ;;		_SPIGet
 14822 ;;		_SPIPut
 14823 ;; This function is called by:
 14824 ;;		_MiApp_ProtocolInit
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           
 14828                           
 14829                           ;psect for function _EEPROM_Read
 14830  17D2                     _EEPROM_Read:	
 14831                           
 14832                           ;incstack = 0
 14833                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14834                           ;EEPROM_Read@dest stored from wreg
 14835  17D2  00AC               	movwf	EEPROM_Read@dest
 14836                           
 14837                           ;eeprom.c: 36: LATCbits.LATC2 = 0;
 14838  17D3  0022               	movlb	2	; select bank2
 14839  17D4  110E               	bcf	14,2	;volatile
 14840                           
 14841                           ;eeprom.c: 37: SPIPut(0x03);
 14842  17D5  3003               	movlw	3
 14843  17D6  27ED  3190         	fcall	_SPIPut
 14844                           
 14845                           ;eeprom.c: 38: SPIPut(addr);
 14846  17D8  082A               	movf	EEPROM_Read@addr,w
 14847  17D9  27ED  3190         	fcall	_SPIPut
 14848  17DB                     l10668:	
 14849                           ;eeprom.c: 39: while( count )
 14850                           
 14851  17DB  082B               	movf	EEPROM_Read@count,w
 14852  17DC  1903               	btfsc	3,2
 14853  17DD  2FEA               	goto	l739
 14854                           
 14855                           ;eeprom.c: 40: {
 14856                           ;eeprom.c: 41: *dest++ = SPIGet();
 14857  17DE  082C               	movf	EEPROM_Read@dest,w
 14858  17DF  0086               	movwf	6
 14859  17E0  3001               	movlw	1	; select bank2/3
 14860  17E1  0087               	movwf	7
 14861  17E2  31A7  27D9  3190   	fcall	_SPIGet
 14862  17E5  0081               	movwf	1
 14863  17E6  0020               	movlb	0	; select bank0
 14864  17E7  0AAC               	incf	EEPROM_Read@dest,f
 14865                           
 14866                           ;eeprom.c: 42: count--;
 14867  17E8  03AB               	decf	EEPROM_Read@count,f
 14868  17E9  2FDB               	goto	l10668
 14869  17EA                     l739:	
 14870                           
 14871                           ;eeprom.c: 43: }
 14872                           ;eeprom.c: 44: LATCbits.LATC2 = 1;
 14873  17EA  0022               	movlb	2	; select bank2
 14874  17EB  150E               	bsf	14,2	;volatile
 14875  17EC  0008               	return
 14876  17ED                     __end_of_EEPROM_Read:	
 14877  17ED                     __ptext83:	
 14878 ;; *************** function _SPIPut *****************
 14879 ;; Defined at:
 14880 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;  v               1    wreg     unsigned char 
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;  v               1    9[BANK0 ] unsigned char 
 14885 ;;  i               1    0        unsigned char 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  1    wreg      void 
 14888 ;; Registers used:
 14889 ;;		wreg
 14890 ;; Tracked objects:
 14891 ;;		On entry : 1D/2
 14892 ;;		On exit  : 1F/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;Total ram usage:        1 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    4
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_PHYSetLongRAMAddr
 14906 ;;		_PHYSetShortRAMAddr
 14907 ;;		_PHYGetShortRAMAddr
 14908 ;;		_PHYGetLongRAMAddr
 14909 ;;		_EEPROM_Read
 14910 ;;		_LCDInitPortA
 14911 ;;		_LCDInitPortB
 14912 ;;		_LCDWritePortA
 14913 ;;		_LCDWritePortB
 14914 ;;		_SPIGet
 14915 ;; This function uses a non-reentrant model
 14916 ;;
 14917                           
 14918                           
 14919                           ;psect for function _SPIPut
 14920  17ED                     _SPIPut:	
 14921                           
 14922                           ;incstack = 0
 14923                           ; Regs used in _SPIPut: [wreg]
 14924                           ;SPIPut@v stored from wreg
 14925  17ED  0020               	movlb	0	; select bank0
 14926  17EE  00A9               	movwf	SPIPut@v
 14927                           
 14928                           ;spi.c: 47: uint8_t i;
 14929                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 14930  17EF  1191               	bcf	17,3	;volatile
 14931                           
 14932                           ;spi.c: 64: i = SSP1BUF;
 14933  17F0  0024               	movlb	4	; select bank4
 14934  17F1  0811               	movf	17,w	;volatile
 14935  17F2                     l8368:	
 14936                           
 14937                           ;spi.c: 67: {
 14938                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 14939  17F2  1395               	bcf	21,7	;volatile
 14940                           
 14941                           ;spi.c: 69: SSP1BUF = v;
 14942  17F3  0020               	movlb	0	; select bank0
 14943  17F4  0829               	movf	SPIPut@v,w
 14944  17F5  0024               	movlb	4	; select bank4
 14945  17F6  0091               	movwf	17	;volatile
 14946                           
 14947                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 14948  17F7  1B95               	btfsc	21,7	;volatile
 14949  17F8  2FF2               	goto	l8368
 14950  17F9                     l827:	
 14951  17F9  0020               	movlb	0	; select bank0
 14952  17FA  1D91               	btfss	17,3	;volatile
 14953  17FB  2FF9               	goto	l827
 14954                           
 14955                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 14956  17FC  1191               	bcf	17,3	;volatile
 14957  17FD  0008               	return
 14958  17FE                     __end_of_SPIPut:	
 14959  17FE                     __ptext22:	
 14960 ;; *************** function _MacroNop *****************
 14961 ;; Defined at:
 14962 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;		None
 14965 ;; Auto vars:     Size  Location     Type
 14966 ;;		None
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  1    wreg      void 
 14969 ;; Registers used:
 14970 ;;		None
 14971 ;; Tracked objects:
 14972 ;;		On entry : 1F/3
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;Total ram usage:        0 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:    4
 14983 ;; This function calls:
 14984 ;;		Nothing
 14985 ;; This function is called by:
 14986 ;;		_NVMRead
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           
 14991                           ;psect for function _MacroNop
 14992  17FE                     _MacroNop:	
 14993                           
 14994                           ;miwi_p2p.c: 327: __nop();
 14995                           
 14996                           ;incstack = 0
 14997                           ; Regs used in _MacroNop: []
 14998  17FE  0000               	nop
 14999  17FF  0008               	return
 15000  1800                     __end_of_MacroNop:	
 15001                           
 15002                           	psect	text23
 15003  22EE                     __ptext23:	
 15004 ;; *************** function _NVMInit *****************
 15005 ;; Defined at:
 15006 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 15007 ;; Parameters:    Size  Location     Type
 15008 ;;		None
 15009 ;; Auto vars:     Size  Location     Type
 15010 ;;  result          1   15[BANK0 ] unsigned char 
 15011 ;; Return value:  Size  Location     Type
 15012 ;;                  1    wreg      unsigned char 
 15013 ;; Registers used:
 15014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15015 ;; Tracked objects:
 15016 ;;		On entry : 1F/0
 15017 ;;		On exit  : 1F/0
 15018 ;;		Unchanged: 0/0
 15019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;Total ram usage:        1 bytes
 15025 ;; Hardware stack levels used:    1
 15026 ;; Hardware stack levels required when called:    5
 15027 ;; This function calls:
 15028 ;;		_NVMalloc
 15029 ;; This function is called by:
 15030 ;;		_MiApp_ProtocolInit
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _NVMInit
 15036  22EE                     _NVMInit:	
 15037                           
 15038                           ;miwi_nvm.c: 709: bool result = 1;
 15039                           
 15040                           ;incstack = 0
 15041                           ; Regs used in _NVMInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15042  22EE  01AF               	clrf	NVMInit@result
 15043  22EF  0AAF               	incf	NVMInit@result,f
 15044                           
 15045                           ;miwi_nvm.c: 711: nextEEPosition = 0;
 15046  22F0  0022               	movlb	2	; select bank2
 15047  22F1  3002               	movlw	2
 15048  22F2  01CA               	clrf	_nextEEPosition^(0+256)
 15049  22F3  01CB               	clrf	(_nextEEPosition+1)^(0+256)
 15050                           
 15051                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
 15052  22F4  0020               	movlb	0	; select bank0
 15053  22F5  00A9               	movwf	NVMalloc@size
 15054  22F6  3065               	movlw	low _nvmMyPANID
 15055  22F7  01AA               	clrf	NVMalloc@size+1
 15056  22F8  00AB               	movwf	NVMalloc@location
 15057  22F9  3001               	movlw	high _nvmMyPANID
 15058  22FA  00AC               	movwf	NVMalloc@location+1
 15059  22FB  234C  31A2         	fcall	_NVMalloc
 15060  22FD  0020               	movlb	0	; select bank0
 15061  22FE  05AF               	andwf	NVMInit@result,f
 15062  22FF  3061               	movlw	low _nvmCurrentChannel
 15063                           
 15064                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
 15065  2300  01A9               	clrf	NVMalloc@size
 15066  2301  0AA9               	incf	NVMalloc@size,f
 15067  2302  01AA               	clrf	NVMalloc@size+1
 15068  2303  00AB               	movwf	NVMalloc@location
 15069  2304  3001               	movlw	high _nvmCurrentChannel
 15070  2305  00AC               	movwf	NVMalloc@location+1
 15071  2306  234C  31A2         	fcall	_NVMalloc
 15072  2308  0020               	movlb	0	; select bank0
 15073  2309  05AF               	andwf	NVMInit@result,f
 15074  230A  305F               	movlw	low _nvmConnMode
 15075                           
 15076                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
 15077  230B  01A9               	clrf	NVMalloc@size
 15078  230C  0AA9               	incf	NVMalloc@size,f
 15079  230D  01AA               	clrf	NVMalloc@size+1
 15080  230E  00AB               	movwf	NVMalloc@location
 15081  230F  3001               	movlw	high _nvmConnMode
 15082  2310  00AC               	movwf	NVMalloc@location+1
 15083  2311  234C  31A2         	fcall	_NVMalloc
 15084  2313  0020               	movlb	0	; select bank0
 15085  2314  05AF               	andwf	NVMInit@result,f
 15086                           
 15087                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 5, &nvmConnectionTable);
 15088  2315  3046               	movlw	70
 15089  2316  00A9               	movwf	NVMalloc@size
 15090  2317  3060               	movlw	low _nvmConnectionTable
 15091  2318  01AA               	clrf	NVMalloc@size+1
 15092  2319  00AB               	movwf	NVMalloc@location
 15093  231A  3000               	movlw	high _nvmConnectionTable
 15094  231B  00AC               	movwf	NVMalloc@location+1
 15095  231C  234C  31A2         	fcall	_NVMalloc
 15096  231E  0020               	movlb	0	; select bank0
 15097  231F  05AF               	andwf	NVMInit@result,f
 15098                           
 15099                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
 15100  2320  3004               	movlw	4
 15101  2321  00A9               	movwf	NVMalloc@size
 15102  2322  3067               	movlw	low _nvmOutFrameCounter
 15103  2323  01AA               	clrf	NVMalloc@size+1
 15104  2324  00AB               	movwf	NVMalloc@location
 15105  2325  3001               	movlw	high _nvmOutFrameCounter
 15106  2326  00AC               	movwf	NVMalloc@location+1
 15107  2327  234C  31A2         	fcall	_NVMalloc
 15108  2329  0020               	movlb	0	; select bank0
 15109  232A  05AF               	andwf	NVMInit@result,f
 15110  232B  3063               	movlw	low _nvmEdc
 15111                           
 15112                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
 15113  232C  01A9               	clrf	NVMalloc@size
 15114  232D  0AA9               	incf	NVMalloc@size,f
 15115  232E  01AA               	clrf	NVMalloc@size+1
 15116  232F  00AB               	movwf	NVMalloc@location
 15117  2330  3001               	movlw	high _nvmEdc
 15118  2331  00AC               	movwf	NVMalloc@location+1
 15119  2332  234C  31A2         	fcall	_NVMalloc
 15120  2334  0020               	movlb	0	; select bank0
 15121  2335  05AF               	andwf	NVMInit@result,f
 15122  2336  3069               	movlw	low _nvmRole
 15123                           
 15124                           ;miwi_nvm.c: 721: result &= NVMalloc(1,&nvmRole);
 15125  2337  01A9               	clrf	NVMalloc@size
 15126  2338  0AA9               	incf	NVMalloc@size,f
 15127  2339  01AA               	clrf	NVMalloc@size+1
 15128  233A  00AB               	movwf	NVMalloc@location
 15129  233B  3001               	movlw	high _nvmRole
 15130  233C  00AC               	movwf	NVMalloc@location+1
 15131  233D  234C  31A2         	fcall	_NVMalloc
 15132  233F  0020               	movlb	0	; select bank0
 15133  2340  05AF               	andwf	NVMInit@result,f
 15134  2341  306B               	movlw	low _nvmmyIndex
 15135                           
 15136                           ;miwi_nvm.c: 722: result &= NVMalloc(1,&nvmmyIndex);
 15137  2342  01A9               	clrf	NVMalloc@size
 15138  2343  0AA9               	incf	NVMalloc@size,f
 15139  2344  01AA               	clrf	NVMalloc@size+1
 15140  2345  00AB               	movwf	NVMalloc@location
 15141  2346  3001               	movlw	high _nvmmyIndex
 15142  2347  00AC               	movwf	NVMalloc@location+1
 15143  2348  234C               	fcall	_NVMalloc
 15144  2349  0020               	movlb	0	; select bank0
 15145  234A  05AF               	andwf	NVMInit@result,f
 15146  234B  0008               	return
 15147  234C                     __end_of_NVMInit:	
 15148  234C                     __ptext24:	
 15149 ;; *************** function _NVMalloc *****************
 15150 ;; Defined at:
 15151 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;  size            2    9[BANK0 ] unsigned int 
 15154 ;;  location        2   11[BANK0 ] PTR unsigned int 
 15155 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
 15156 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;		None
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      unsigned char 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15163 ;; Tracked objects:
 15164 ;;		On entry : 1F/0
 15165 ;;		On exit  : 1D/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;Total ram usage:        6 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    4
 15175 ;; This function calls:
 15176 ;;		Nothing
 15177 ;; This function is called by:
 15178 ;;		_NVMInit
 15179 ;; This function uses a non-reentrant model
 15180 ;;
 15181                           
 15182                           
 15183                           ;psect for function _NVMalloc
 15184  234C                     _NVMalloc:	
 15185                           
 15186                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 1024)
 15187                           
 15188                           ;incstack = 0
 15189                           ; Regs used in _NVMalloc: [wreg+fsr1l+fsr1h+status,2+status,0]
 15190  234C  0829               	movf	NVMalloc@size,w
 15191  234D  0022               	movlb	2	; select bank2
 15192  234E  074A               	addwf	_nextEEPosition^(0+256),w
 15193  234F  0020               	movlb	0	; select bank0
 15194  2350  00AD               	movwf	??_NVMalloc
 15195  2351  082A               	movf	NVMalloc@size+1,w
 15196  2352  0022               	movlb	2	; select bank2
 15197  2353  3D4B               	addwfc	(_nextEEPosition+1)^(0+256),w
 15198  2354  0020               	movlb	0	; select bank0
 15199  2355  00AE               	movwf	??_NVMalloc+1
 15200  2356  3004               	movlw	4
 15201  2357  022E               	subwf	??_NVMalloc+1,w
 15202  2358  3001               	movlw	1
 15203  2359  1903               	skipnz
 15204  235A  022D               	subwf	??_NVMalloc,w
 15205  235B  1803               	btfsc	3,0
 15206                           
 15207                           ;miwi_nvm.c: 697: {
 15208                           ;miwi_nvm.c: 698: return 0;
 15209  235C  3400               	retlw	0
 15210                           
 15211                           ;miwi_nvm.c: 699: }
 15212                           ;miwi_nvm.c: 701: *location = nextEEPosition;
 15213  235D  082B               	movf	NVMalloc@location,w
 15214  235E  0086               	movwf	6
 15215  235F  082C               	movf	NVMalloc@location+1,w
 15216  2360  0087               	movwf	7
 15217  2361  0022               	movlb	2	; select bank2
 15218  2362  084A               	movf	_nextEEPosition^(0+256),w
 15219  2363  3FC0               	movwi [0]fsr1
 15220  2364  084B               	movf	(_nextEEPosition+1)^(0+256),w
 15221  2365  3FC1               	movwi [1]fsr1
 15222                           
 15223                           ;miwi_nvm.c: 702: nextEEPosition += size;
 15224  2366  0020               	movlb	0	; select bank0
 15225  2367  0829               	movf	NVMalloc@size,w
 15226  2368  0022               	movlb	2	; select bank2
 15227  2369  07CA               	addwf	_nextEEPosition^(0+256),f
 15228  236A  0020               	movlb	0	; select bank0
 15229  236B  082A               	movf	NVMalloc@size+1,w
 15230  236C  0022               	movlb	2	; select bank2
 15231  236D  3DCB               	addwfc	(_nextEEPosition+1)^(0+256),f
 15232                           
 15233                           ;miwi_nvm.c: 703: return 1;
 15234  236E  3401               	retlw	1
 15235  236F                     __end_of_NVMalloc:	
 15236                           
 15237                           	psect	swtext1
 15238  0700                     __pswtext1:	
 15239  0700                     S11448:	
 15240  0700  3196  2E21         	ljmp	l10480
 15241  0702  3196  2EC5         	ljmp	l534
 15242  0704  3196  2EC5         	ljmp	l534
 15243  0706  3196  2E72         	ljmp	l10506
 15244  0708  3196  2EC5         	ljmp	l534
 15245  070A  3196  2EC5         	ljmp	l534
 15246  070C  3196  2EC5         	ljmp	l534
 15247  070E  3196  2EC5         	ljmp	l534
 15248  0710  3196  2EC5         	ljmp	l534
 15249  0712  3196  2EC5         	ljmp	l534
 15250  0714  3193  2B75         	ljmp	l10252
 15251  0716  3194  2CB5         	ljmp	l10388
 15252  0718  3196  2EC5         	ljmp	l534
 15253  071A  3196  2EC5         	ljmp	l534
 15254  071C  3196  2EC5         	ljmp	l534
 15255  071E  3196  2EC5         	ljmp	l534
 15256  0720  3194  2C64         	ljmp	l10354
 15257  0722  3196  2EC5         	ljmp	l534
 15258  0724  3196  2EC5         	ljmp	l534
 15259  0726  3196  2EC5         	ljmp	l534
 15260  0728  3196  2EC5         	ljmp	l534
 15261  072A  3196  2EC5         	ljmp	l534
 15262  072C  3196  2EC5         	ljmp	l534
 15263  072E  3196  2EC5         	ljmp	l534
 15264  0730  3196  2EC5         	ljmp	l534
 15265  0732  3196  2EC5         	ljmp	l534
 15266  0734  3195  2DA7         	ljmp	l10444
 15267  0736  3195  2DB9         	ljmp	l10452
 15268  0738  3196  2EC5         	ljmp	l534
 15269  073A  3196  2EC5         	ljmp	l534
 15270  073C  3196  2EC5         	ljmp	l534
 15271  073E  3196  2EC5         	ljmp	l534
 15272  0740  3195  2DB4         	ljmp	l509
 15273  0742  3196  2EC5         	ljmp	l534
 15274  0744  3196  2EC5         	ljmp	l534
 15275  0746  3196  2EC5         	ljmp	l534
 15276  0748  3196  2EC5         	ljmp	l534
 15277  074A  3196  2EC5         	ljmp	l534
 15278  074C  3196  2EC5         	ljmp	l534
 15279  074E  3196  2EC5         	ljmp	l534
 15280  0750  3196  2EC5         	ljmp	l534
 15281  0752  3196  2EC5         	ljmp	l534
 15282  0754  3196  2EC5         	ljmp	l534
 15283  0756  3196  2EC5         	ljmp	l534
 15284  0758  3196  2EC5         	ljmp	l534
 15285  075A  3196  2EC5         	ljmp	l534
 15286  075C  3196  2EC5         	ljmp	l534
 15287  075E  3196  2EC5         	ljmp	l534
 15288  0760  3196  2EC5         	ljmp	l534
 15289  0762  3196  2EC5         	ljmp	l534
 15290  0764  3196  2EC5         	ljmp	l534
 15291  0766  3196  2EC5         	ljmp	l534
 15292  0768  3196  2EC5         	ljmp	l534
 15293  076A  3196  2EC5         	ljmp	l534
 15294  076C  3196  2EC5         	ljmp	l534
 15295  076E  3196  2EC5         	ljmp	l534
 15296  0770  3196  2EC5         	ljmp	l534
 15297  0772  3196  2EC5         	ljmp	l534
 15298  0774  3196  2EC5         	ljmp	l534
 15299  0776  3196  2EC5         	ljmp	l534
 15300  0778  3196  2EC5         	ljmp	l534
 15301  077A  3196  2EC5         	ljmp	l534
 15302  077C  3196  2EC5         	ljmp	l534
 15303  077E  3196  2EC5         	ljmp	l534
 15304  0780  3196  2EC5         	ljmp	l534
 15305  0782  3196  2EC5         	ljmp	l534
 15306  0784  3196  2EC5         	ljmp	l534
 15307  0786  3196  2EC5         	ljmp	l534
 15308  0788  3196  2EC5         	ljmp	l534
 15309  078A  3196  2EC5         	ljmp	l534
 15310  078C  3196  2EC5         	ljmp	l534
 15311  078E  3196  2EC5         	ljmp	l534
 15312  0790  3196  2EC5         	ljmp	l534
 15313  0792  3196  2EC5         	ljmp	l534
 15314  0794  3196  2EC5         	ljmp	l534
 15315  0796  3196  2EC5         	ljmp	l534
 15316  0798  3196  2EC5         	ljmp	l534
 15317  079A  3196  2EC5         	ljmp	l534
 15318  079C  3196  2EC5         	ljmp	l534
 15319  079E  3196  2EC5         	ljmp	l534
 15320  07A0  3196  2EC5         	ljmp	l534
 15321  07A2  3196  2EC5         	ljmp	l534
 15322  07A4  3196  2EC5         	ljmp	l534
 15323  07A6  3196  2EC5         	ljmp	l534
 15324  07A8  3196  2EC5         	ljmp	l534
 15325  07AA  3196  2E39         	ljmp	l10490
 15326  07AC  3196  2EC5         	ljmp	l534
 15327  07AE  3196  2EC5         	ljmp	l534
 15328  07B0  3196  2EC5         	ljmp	l534
 15329  07B2  3196  2EC5         	ljmp	l534
 15330  07B4  3196  2EC5         	ljmp	l534
 15331  07B6  3196  2EC5         	ljmp	l534
 15332  07B8  3196  2EC5         	ljmp	l534
 15333  07BA  3196  2EC5         	ljmp	l534
 15334  07BC  3196  2EC5         	ljmp	l534
 15335  07BE  3196  2EC5         	ljmp	l534
 15336  07C0  3196  2EC5         	ljmp	l534
 15337  07C2  3196  2EC5         	ljmp	l534
 15338  07C4  3196  2EC5         	ljmp	l534
 15339  07C6  3196  2E19         	ljmp	l10472
 15340                           
 15341                           	psect	text32
 15342  236F                     __ptext32:	
 15343 ;; *************** function _store_connection_tb *****************
 15344 ;; Defined at:
 15345 ;;		line 154 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;  payload         2   13[BANK0 ] PTR unsigned char 
 15348 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;  i               1   20[BANK0 ] unsigned char 
 15351 ;;  j               1   19[BANK0 ] unsigned char 
 15352 ;;  connections_    1    0        unsigned char 
 15353 ;;  k               1    0        unsigned char 
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  1    wreg      void 
 15356 ;; Registers used:
 15357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15358 ;; Tracked objects:
 15359 ;;		On entry : 1F/0
 15360 ;;		On exit  : 1D/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;Total ram usage:        8 bytes
 15368 ;; Hardware stack levels used:    1
 15369 ;; Hardware stack levels required when called:    5
 15370 ;; This function calls:
 15371 ;;		_handle_lost_connection
 15372 ;; This function is called by:
 15373 ;;		_P2PTasks
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           
 15378                           ;psect for function _store_connection_tb
 15379  236F                     _store_connection_tb:	
 15380                           
 15381                           ;miwi_p2p.c: 158: for (i=4; i < 40; i++)
 15382                           
 15383                           ;incstack = 0
 15384                           ; Regs used in _store_connection_tb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15385  236F  3004               	movlw	4
 15386  2370  00B4               	movwf	store_connection_tb@i
 15387  2371                     l9930:	
 15388                           
 15389                           ;miwi_p2p.c: 159: {
 15390                           ;miwi_p2p.c: 160: if (i % 4 == 0 && (i+3) < 40)
 15391  2371  0834               	movf	store_connection_tb@i,w
 15392  2372  3903               	andlw	3
 15393  2373  1D03               	btfss	3,2
 15394  2374  2BD7               	goto	l9942
 15395  2375  0834               	movf	store_connection_tb@i,w
 15396  2376  3E03               	addlw	3
 15397  2377  00AF               	movwf	??_store_connection_tb
 15398  2378  3000               	movlw	0
 15399  2379  1803               	skipnc
 15400  237A  3001               	movlw	1
 15401  237B  00B0               	movwf	??_store_connection_tb+1
 15402  237C  3A80               	xorlw	128
 15403  237D  00B1               	movwf	??_store_connection_tb+2
 15404  237E  3080               	movlw	128
 15405  237F  0231               	subwf	??_store_connection_tb+2,w
 15406  2380  1D03               	skipz
 15407  2381  2B84               	goto	u9435
 15408  2382  3028               	movlw	40
 15409  2383  022F               	subwf	??_store_connection_tb,w
 15410  2384                     u9435:	
 15411  2384  1803               	skipnc
 15412  2385  2BD7               	goto	l9942
 15413                           
 15414                           ;miwi_p2p.c: 161: {
 15415                           ;miwi_p2p.c: 162: j = payload[i+3];
 15416  2386  0020               	movlb	0	; select bank0
 15417  2387  0834               	movf	store_connection_tb@i,w
 15418  2388  00AF               	movwf	??_store_connection_tb
 15419  2389  01B0               	clrf	??_store_connection_tb+1
 15420  238A  072D               	addwf	store_connection_tb@payload,w
 15421  238B  00B1               	movwf	??_store_connection_tb+2
 15422  238C  0830               	movf	??_store_connection_tb+1,w
 15423  238D  3D2E               	addwfc	store_connection_tb@payload+1,w
 15424  238E  00B2               	movwf	??_store_connection_tb+3
 15425  238F  0831               	movf	??_store_connection_tb+2,w
 15426  2390  0086               	movwf	6
 15427  2391  0832               	movf	??_store_connection_tb+3,w
 15428  2392  0087               	movwf	7
 15429  2393  3143               	addfsr 1,3
 15430  2394  0801               	movf	1,w
 15431  2395  00B3               	movwf	store_connection_tb@j
 15432                           
 15433                           ;miwi_p2p.c: 163: END_DEVICES_Short_Address[j].connection_slot = j;
 15434  2396  0709               	addwf	9,w
 15435  2397  0709               	addwf	9,w
 15436  2398  3EA3               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+3)))& (0+255)
 15437  2399  0086               	movwf	6
 15438  239A  3001               	movlw	1	; select bank3/4
 15439  239B  0087               	movwf	7
 15440  239C  0833               	movf	store_connection_tb@j,w
 15441  239D  0081               	movwf	1
 15442                           
 15443                           ;miwi_p2p.c: 164: END_DEVICES_Short_Address[j].Address[0] = payload[i];
 15444  239E  0833               	movf	store_connection_tb@j,w
 15445  239F  0709               	addwf	9,w
 15446  23A0  0709               	addwf	9,w
 15447  23A1  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+256)))& (0+255)
 15448  23A2  0086               	movwf	6
 15449  23A3  0834               	movf	store_connection_tb@i,w
 15450  23A4  00AF               	movwf	??_store_connection_tb
 15451  23A5  01B0               	clrf	??_store_connection_tb+1
 15452  23A6  072D               	addwf	store_connection_tb@payload,w
 15453  23A7  0084               	movwf	4
 15454  23A8  0830               	movf	??_store_connection_tb+1,w
 15455  23A9  3D2E               	addwfc	store_connection_tb@payload+1,w
 15456  23AA  0085               	movwf	5
 15457  23AB  0800               	movf	0,w
 15458  23AC  0081               	movwf	1
 15459                           
 15460                           ;miwi_p2p.c: 165: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
 15461  23AD  0833               	movf	store_connection_tb@j,w
 15462  23AE  0709               	addwf	9,w
 15463  23AF  0709               	addwf	9,w
 15464  23B0  3EA1               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+1)))& (0+255)
 15465  23B1  0086               	movwf	6
 15466  23B2  0834               	movf	store_connection_tb@i,w
 15467  23B3  00AF               	movwf	??_store_connection_tb
 15468  23B4  01B0               	clrf	??_store_connection_tb+1
 15469  23B5  072D               	addwf	store_connection_tb@payload,w
 15470  23B6  00B1               	movwf	??_store_connection_tb+2
 15471  23B7  0830               	movf	??_store_connection_tb+1,w
 15472  23B8  3D2E               	addwfc	store_connection_tb@payload+1,w
 15473  23B9  00B2               	movwf	??_store_connection_tb+3
 15474  23BA  0831               	movf	??_store_connection_tb+2,w
 15475  23BB  0084               	movwf	4
 15476  23BC  0832               	movf	??_store_connection_tb+3,w
 15477  23BD  0085               	movwf	5
 15478  23BE  3101               	addfsr 0,1
 15479  23BF  0800               	movf	0,w
 15480  23C0  0081               	movwf	1
 15481                           
 15482                           ;miwi_p2p.c: 166: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
 15483  23C1  0833               	movf	store_connection_tb@j,w
 15484  23C2  0709               	addwf	9,w
 15485  23C3  0709               	addwf	9,w
 15486  23C4  3EA2               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+2)))& (0+255)
 15487  23C5  0086               	movwf	6
 15488  23C6  3001               	movlw	1	; select bank3/4
 15489  23C7  0087               	movwf	7
 15490  23C8  0834               	movf	store_connection_tb@i,w
 15491  23C9  00AF               	movwf	??_store_connection_tb
 15492  23CA  01B0               	clrf	??_store_connection_tb+1
 15493  23CB  072D               	addwf	store_connection_tb@payload,w
 15494  23CC  00B1               	movwf	??_store_connection_tb+2
 15495  23CD  0830               	movf	??_store_connection_tb+1,w
 15496  23CE  3D2E               	addwfc	store_connection_tb@payload+1,w
 15497  23CF  00B2               	movwf	??_store_connection_tb+3
 15498  23D0  0831               	movf	??_store_connection_tb+2,w
 15499  23D1  0084               	movwf	4
 15500  23D2  0832               	movf	??_store_connection_tb+3,w
 15501  23D3  0085               	movwf	5
 15502  23D4  3102               	addfsr 0,2
 15503  23D5  0800               	movf	0,w
 15504  23D6  0081               	movwf	1
 15505  23D7                     l9942:	
 15506  23D7  0020               	movlb	0	; select bank0
 15507  23D8  3028               	movlw	40
 15508  23D9  0AB4               	incf	store_connection_tb@i,f
 15509  23DA  0234               	subwf	store_connection_tb@i,w
 15510  23DB  1C03               	skipc
 15511  23DC  2B71               	goto	l9930
 15512                           
 15513                           ;miwi_p2p.c: 169: }
 15514                           ;miwi_p2p.c: 172: }
 15515                           ;miwi_p2p.c: 173: handle_lost_connection();
 15516  23DD  2BDE               	ljmp	l9540
 15517  23DE                     __end_of_store_connection_tb:	
 15518  23DE                     __ptext33:	
 15519 ;; *************** function _handle_lost_connection *****************
 15520 ;; Defined at:
 15521 ;;		line 131 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;		None
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;  i               1   12[BANK0 ] unsigned char 
 15526 ;;  stat            1   11[BANK0 ] unsigned char 
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15531 ;; Tracked objects:
 15532 ;;		On entry : 1F/0
 15533 ;;		On exit  : 1D/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15540 ;;Total ram usage:        4 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:    4
 15543 ;; This function calls:
 15544 ;;		Nothing
 15545 ;; This function is called by:
 15546 ;;		_store_connection_tb
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550                           
 15551                           ;psect for function _handle_lost_connection
 15552  23DE                     _handle_lost_connection:	
 15553  23DE                     l9540:	
 15554                           ;incstack = 0
 15555                           ; Regs used in _handle_lost_connection: [wreg+fsr1l+fsr1h+status,2+status,0]
 15556                           
 15557                           
 15558                           ;miwi_p2p.c: 133: uint8_t i ;
 15559                           ;miwi_p2p.c: 134: bool stat = 0;
 15560  23DE  01AB               	clrf	handle_lost_connection@stat
 15561                           
 15562                           ;miwi_p2p.c: 135: if (!role)
 15563  23DF  0865               	movf	_role,w
 15564  23E0  1D03               	btfss	3,2
 15565  23E1  0008               	return
 15566                           
 15567                           ;miwi_p2p.c: 136: {
 15568                           ;miwi_p2p.c: 137: for (i=0;i<end_nodes+1;i++)
 15569  23E2  01AC               	clrf	handle_lost_connection@i
 15570  23E3                     l9554:	
 15571  23E3  0022               	movlb	2	; select bank2
 15572  23E4  0856               	movf	_end_nodes^(0+256),w
 15573  23E5  3E01               	addlw	1
 15574  23E6  0020               	movlb	0	; select bank0
 15575  23E7  00A9               	movwf	??_handle_lost_connection
 15576  23E8  3000               	movlw	0
 15577  23E9  1803               	skipnc
 15578  23EA  3001               	movlw	1
 15579  23EB  00AA               	movwf	??_handle_lost_connection+1
 15580  23EC  3A80               	xorlw	128
 15581  23ED  3C80               	sublw	128
 15582  23EE  1D03               	skipz
 15583  23EF  2BF2               	goto	u8935
 15584  23F0  0829               	movf	??_handle_lost_connection,w
 15585  23F1  022C               	subwf	handle_lost_connection@i,w
 15586  23F2                     u8935:	
 15587  23F2  1803               	btfsc	3,0
 15588  23F3  2C12               	goto	l9556
 15589                           
 15590                           ;miwi_p2p.c: 138: {
 15591                           ;miwi_p2p.c: 139: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
 15592  23F4  0020               	movlb	0	; select bank0
 15593  23F5  082C               	movf	handle_lost_connection@i,w
 15594  23F6  0709               	addwf	9,w
 15595  23F7  0709               	addwf	9,w
 15596  23F8  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+256)))& (0+255)
 15597  23F9  0086               	movwf	6
 15598  23FA  3001               	movlw	1	; select bank3/4
 15599  23FB  0087               	movwf	7
 15600  23FC  0801               	movf	1,w
 15601  23FD  0023               	movlb	3	; select bank3
 15602  23FE  0666               	xorwf	_myLongAddress^(0+384),w
 15603  23FF  1D03               	skipz
 15604  2400  2C0F               	goto	l9552
 15605  2401  0020               	movlb	0	; select bank0
 15606  2402  082C               	movf	handle_lost_connection@i,w
 15607  2403  0709               	addwf	9,w
 15608  2404  0709               	addwf	9,w
 15609  2405  3EA1               	addlw	(low ((_END_DEVICES_Short_Address| (0+256)+1)))& (0+255)
 15610  2406  0086               	movwf	6
 15611  2407  0023               	movlb	3	; select bank3
 15612  2408  0867               	movf	(_myLongAddress^(0+384)+1),w
 15613  2409  0601               	xorwf	1,w
 15614  240A  1D03               	skipz
 15615  240B  2C0F               	goto	l9552
 15616                           
 15617                           ;miwi_p2p.c: 140: {
 15618                           ;miwi_p2p.c: 141: stat = 1;
 15619  240C  0020               	movlb	0	; select bank0
 15620  240D  01AB               	clrf	handle_lost_connection@stat
 15621  240E  0AAB               	incf	handle_lost_connection@stat,f
 15622  240F                     l9552:	
 15623  240F  0020               	movlb	0	; select bank0
 15624  2410  0AAC               	incf	handle_lost_connection@i,f
 15625  2411  2BE3               	goto	l9554
 15626  2412                     l9556:	
 15627                           
 15628                           ;miwi_p2p.c: 142: }
 15629                           ;miwi_p2p.c: 143: }
 15630                           ;miwi_p2p.c: 144: if (!stat)
 15631  2412  0020               	movlb	0	; select bank0
 15632  2413  082B               	movf	handle_lost_connection@stat,w
 15633  2414  1D03               	btfss	3,2
 15634  2415  0008               	return
 15635                           
 15636                           ;miwi_p2p.c: 145: {
 15637                           ;miwi_p2p.c: 146: lost_connection = 1;
 15638  2416  0022               	movlb	2	; select bank2
 15639  2417  01D7               	clrf	_lost_connection^(0+256)
 15640  2418  0AD7               	incf	_lost_connection^(0+256),f
 15641  2419  0008               	return
 15642  241A                     __end_of_handle_lost_connection:	
 15643                           
 15644                           	psect	text40
 15645  222C                     __ptext40:	
 15646 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 15647 ;; Defined at:
 15648 ;;		line 182 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;  fw_payload      2   25[BANK1 ] PTR unsigned char 
 15651 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 15652 ;;  index           1   27[BANK1 ] unsigned char 
 15653 ;;  EDxAddress      2   28[BANK1 ] PTR unsigned char 
 15654 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;  i               1   31[BANK1 ] unsigned char 
 15657 ;;  status          1   30[BANK1 ] unsigned char 
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      unsigned char 
 15660 ;; Registers used:
 15661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15662 ;; Tracked objects:
 15663 ;;		On entry : 1F/1
 15664 ;;		On exit  : 1F/1
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15667 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15670 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15671 ;;Total ram usage:        9 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; Hardware stack levels required when called:   12
 15674 ;; This function calls:
 15675 ;;		_DemoOutput_UnicastFail
 15676 ;;		_MiApp_UnicastConnection
 15677 ;; This function is called by:
 15678 ;;		_P2PTasks
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           
 15683                           ;psect for function _Forward_Packet_PANCr_to_EDy
 15684  222C                     _Forward_Packet_PANCr_to_EDy:	
 15685                           
 15686                           ;miwi_p2p.c: 184: uint8_t i;
 15687                           ;miwi_p2p.c: 185: bool status;
 15688                           ;miwi_p2p.c: 186: {TxData = 0;};
 15689                           
 15690                           ;incstack = 0
 15691 ;; hardware stack exceeded
 15692                           ; Regs used in _Forward_Packet_PANCr_to_EDy: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15693  222C  01EC               	clrf	_TxData^(0+128)
 15694                           
 15695                           ;miwi_p2p.c: 187: TxBuffer[TxData++] = EDxAddress[0];
 15696  222D  086C               	movf	_TxData^(0+128),w
 15697  222E  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15698  222F  0086               	movwf	6
 15699  2230  3002               	movlw	2	; select bank4/5
 15700  2231  0087               	movwf	7
 15701  2232  083C               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+128),w
 15702  2233  0084               	movwf	4
 15703  2234  083D               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+128),w
 15704  2235  0085               	movwf	5
 15705  2236  0800               	movf	0,w
 15706  2237  0081               	movwf	1
 15707  2238  0AEC               	incf	_TxData^(0+128),f
 15708                           
 15709                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = EDxAddress[1];
 15710  2239  086C               	movf	_TxData^(0+128),w
 15711  223A  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15712  223B  0086               	movwf	6
 15713  223C  083C               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+128),w
 15714  223D  0084               	movwf	4
 15715  223E  083D               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+128),w
 15716  223F  0085               	movwf	5
 15717  2240  3101               	addfsr 0,1
 15718  2241  0800               	movf	0,w
 15719  2242  0081               	movwf	1
 15720  2243  0AEC               	incf	_TxData^(0+128),f
 15721                           
 15722                           ;miwi_p2p.c: 189: TxBuffer[TxData++] = EDxAddress[2];
 15723  2244  086C               	movf	_TxData^(0+128),w
 15724  2245  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15725  2246  0086               	movwf	6
 15726  2247  3002               	movlw	2	; select bank4/5
 15727  2248  0087               	movwf	7
 15728  2249  083C               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+128),w
 15729  224A  0084               	movwf	4
 15730  224B  083D               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+128),w
 15731  224C  0085               	movwf	5
 15732  224D  3102               	addfsr 0,2
 15733  224E  0800               	movf	0,w
 15734  224F  0081               	movwf	1
 15735  2250  3003               	movlw	3
 15736  2251  0AEC               	incf	_TxData^(0+128),f
 15737                           
 15738                           ;miwi_p2p.c: 190: for(i = 3; i < 40; i++)
 15739  2252  00BF               	movwf	Forward_Packet_PANCr_to_EDy@i^(0+128)
 15740  2253                     l9968:	
 15741                           
 15742                           ;miwi_p2p.c: 191: {
 15743                           ;miwi_p2p.c: 192: TxBuffer[TxData++] = fw_payload[i];
 15744  2253  086C               	movf	_TxData^(0+128),w
 15745  2254  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15746  2255  0086               	movwf	6
 15747  2256  3002               	movlw	2	; select bank4/5
 15748  2257  0087               	movwf	7
 15749  2258  083F               	movf	Forward_Packet_PANCr_to_EDy@i^(0+128),w
 15750  2259  0020               	movlb	0	; select bank0
 15751  225A  00DC               	movwf	??_Forward_Packet_PANCr_to_EDy
 15752  225B  01DD               	clrf	??_Forward_Packet_PANCr_to_EDy+1
 15753  225C  0021               	movlb	1	; select bank1
 15754  225D  0739               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload^(0+128),w
 15755  225E  0084               	movwf	4
 15756  225F  0020               	movlb	0	; select bank0
 15757  2260  085D               	movf	??_Forward_Packet_PANCr_to_EDy+1,w
 15758  2261  0021               	movlb	1	; select bank1
 15759  2262  3D3A               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)^(0+128),w
 15760  2263  0085               	movwf	5
 15761  2264  0800               	movf	0,w
 15762  2265  0081               	movwf	1
 15763  2266  3028               	movlw	40
 15764  2267  0AEC               	incf	_TxData^(0+128),f
 15765  2268  0ABF               	incf	Forward_Packet_PANCr_to_EDy@i^(0+128),f
 15766  2269  023F               	subwf	Forward_Packet_PANCr_to_EDy@i^(0+128),w
 15767  226A  1C03               	skipc
 15768  226B  2A53               	goto	l9968
 15769                           
 15770                           ;miwi_p2p.c: 193: }
 15771                           ;miwi_p2p.c: 197: status = MiApp_UnicastConnection (index,0) ;
 15772  226C  01B8               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
 15773  226D  083B               	movf	Forward_Packet_PANCr_to_EDy@index^(0+128),w
 15774  226E  3184  2439  31A2   	fcall	_MiApp_UnicastConnection
 15775  2271  0021               	movlb	1	; select bank1
 15776  2272  00BE               	movwf	Forward_Packet_PANCr_to_EDy@status^(0+128)
 15777                           
 15778                           ;miwi_p2p.c: 200: if(!status)
 15779  2273  083E               	movf	Forward_Packet_PANCr_to_EDy@status^(0+128),w
 15780  2274  1D03               	btfss	3,2
 15781  2275  2A77               	goto	l9982
 15782                           
 15783                           ;miwi_p2p.c: 201: {
 15784                           ;miwi_p2p.c: 202: DemoOutput_UnicastFail();
 15785  2276  227A               	fcall	_DemoOutput_UnicastFail
 15786  2277                     l9982:	
 15787                           
 15788                           ;miwi_p2p.c: 203: }
 15789                           ;miwi_p2p.c: 204: return status;
 15790  2277  0021               	movlb	1	; select bank1
 15791  2278  083E               	movf	Forward_Packet_PANCr_to_EDy@status^(0+128),w
 15792  2279  0008               	return
 15793  227A                     __end_of_Forward_Packet_PANCr_to_EDy:	
 15794  227A                     __ptext43:	
 15795 ;; *************** function _DemoOutput_UnicastFail *****************
 15796 ;; Defined at:
 15797 ;;		line 292 in file "../src/demo_ouput.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;		None
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;		None
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  2  292[None  ] int 
 15804 ;; Registers used:
 15805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15806 ;; Tracked objects:
 15807 ;;		On entry : 1F/1
 15808 ;;		On exit  : 1F/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15815 ;;Total ram usage:        0 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; Hardware stack levels required when called:    9
 15818 ;; This function calls:
 15819 ;;		_LCDDisplay
 15820 ;; This function is called by:
 15821 ;;		_Forward_Packet_PANCr_to_EDy
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function _DemoOutput_UnicastFail
 15827  227A                     _DemoOutput_UnicastFail:	
 15828                           
 15829                           ;demo_ouput.c: 297: LCDDisplay((char *)" Unicast Failed", 0, 1);
 15830                           
 15831                           ;incstack = 0
 15832                           ; Regs used in _DemoOutput_UnicastFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15833  227A  30DF               	movlw	low (STR_6| (0+32768))
 15834  227B  0020               	movlb	0	; select bank0
 15835  227C  00D7               	movwf	LCDDisplay@text
 15836  227D  30A9               	movlw	high (STR_6| (0+32768))
 15837  227E  00D8               	movwf	LCDDisplay@text+1
 15838  227F  01D9               	clrf	LCDDisplay@value
 15839  2280  01DA               	clrf	LCDDisplay@delay
 15840  2281  0ADA               	incf	LCDDisplay@delay,f
 15841  2282  3188  28F7         	ljmp	l9494
 15842  2284                     __end_of_DemoOutput_UnicastFail:	
 15843                           
 15844                           	psect	text42
 15845  1815                     __ptext42:	
 15846 ;; *************** function _MiApp_UnicastAddress *****************
 15847 ;; Defined at:
 15848 ;;		line 1859 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15849 ;; Parameters:    Size  Location     Type
 15850 ;;  DestinationA    1    wreg     PTR unsigned char 
 15851 ;;		 -> ConnectionTable(70), 
 15852 ;;  PermanentAdd    1   22[BANK1 ] unsigned char 
 15853 ;;  SecEn           1   23[BANK1 ] unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  DestinationA    1   58[BANK0 ] PTR unsigned char 
 15856 ;;		 -> ConnectionTable(70), 
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  1    wreg      unsigned char 
 15859 ;; Registers used:
 15860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15861 ;; Tracked objects:
 15862 ;;		On entry : 1F/0
 15863 ;;		On exit  : 1F/1
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15866 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;Total ram usage:        3 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; Hardware stack levels required when called:   10
 15873 ;; This function calls:
 15874 ;;		_SendPacket
 15875 ;; This function is called by:
 15876 ;;		_MiApp_UnicastConnection
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           
 15881                           ;psect for function _MiApp_UnicastAddress
 15882  1815                     _MiApp_UnicastAddress:	
 15883                           
 15884                           ;incstack = 0
 15885 ;; hardware stack exceeded
 15886                           ; Regs used in _MiApp_UnicastAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15887                           ;MiApp_UnicastAddress@DestinationAddress stored from wreg
 15888  1815  00DA               	movwf	MiApp_UnicastAddress@DestinationAddress
 15889                           
 15890                           ;miwi_p2p.c: 1890: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
 15891  1816  0021               	movlb	1	; select bank1
 15892  1817  086E               	movf	(_myPANID+1)^(0+128),w
 15893  1818  0020               	movlb	0	; select bank0
 15894  1819  00D4               	movwf	SendPacket@DestinationPANID+1
 15895  181A  0021               	movlb	1	; select bank1
 15896  181B  086D               	movf	_myPANID^(0+128),w
 15897  181C  0020               	movlb	0	; select bank0
 15898  181D  00D3               	movwf	SendPacket@DestinationPANID
 15899  181E  085A               	movf	MiApp_UnicastAddress@DestinationAddress,w
 15900  181F  00D5               	movwf	SendPacket@DestinationAddress
 15901  1820  3002               	movlw	2
 15902  1821  00D6               	movwf	SendPacket@DestinationAddress+1
 15903  1822  01D7               	clrf	SendPacket@isCommand
 15904  1823  0021               	movlb	1	; select bank1
 15905  1824  0837               	movf	MiApp_UnicastAddress@SecEn^(0+128),w
 15906  1825  0020               	movlb	0	; select bank0
 15907  1826  00D8               	movwf	SendPacket@SecurityEnabled
 15908  1827  3000               	movlw	0
 15909  1828  29DB               	ljmp	_SendPacket
 15910  1829                     __end_of_MiApp_UnicastAddress:	
 15911  1829                     __ptext35:	
 15912 ;; *************** function _SW_Ack_SrED *****************
 15913 ;; Defined at:
 15914 ;;		line 2109 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;  Dest_Addr       2   22[BANK1 ] PTR unsigned char 
 15917 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1    wreg      unsigned char 
 15922 ;; Registers used:
 15923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15924 ;; Tracked objects:
 15925 ;;		On entry : 1F/1
 15926 ;;		On exit  : 1F/1
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15929 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;Total ram usage:        2 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:   10
 15936 ;; This function calls:
 15937 ;;		_SendPacket
 15938 ;; This function is called by:
 15939 ;;		_P2PTasks
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           
 15944                           ;psect for function _SW_Ack_SrED
 15945  1829                     _SW_Ack_SrED:	
 15946                           
 15947                           ;miwi_p2p.c: 2111: {TxData = 0;};
 15948                           
 15949                           ;incstack = 0
 15950                           ; Regs used in _SW_Ack_SrED: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15951  1829  01EC               	clrf	_TxData^(0+128)
 15952                           
 15953                           ;miwi_p2p.c: 2112: TxBuffer[TxData++] = 0xDA;
 15954  182A  086C               	movf	_TxData^(0+128),w
 15955  182B  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15956  182C  0086               	movwf	6
 15957  182D  3002               	movlw	2	; select bank4/5
 15958  182E  0087               	movwf	7
 15959  182F  30DA               	movlw	218
 15960  1830  0081               	movwf	1
 15961  1831  0AEC               	incf	_TxData^(0+128),f
 15962                           
 15963                           ;miwi_p2p.c: 2114: return SendPacket(0, myPANID, Dest_Addr, 1, 0);
 15964                           ;	Return value of _SW_Ack_SrED is never used
 15965  1832  086E               	movf	(_myPANID+1)^(0+128),w
 15966  1833  0020               	movlb	0	; select bank0
 15967  1834  00D4               	movwf	SendPacket@DestinationPANID+1
 15968  1835  0021               	movlb	1	; select bank1
 15969  1836  086D               	movf	_myPANID^(0+128),w
 15970  1837  0020               	movlb	0	; select bank0
 15971  1838  00D3               	movwf	SendPacket@DestinationPANID
 15972  1839  0021               	movlb	1	; select bank1
 15973  183A  0837               	movf	(SW_Ack_SrED@Dest_Addr+1)^(0+128),w
 15974  183B  0020               	movlb	0	; select bank0
 15975  183C  00D6               	movwf	SendPacket@DestinationAddress+1
 15976  183D  0021               	movlb	1	; select bank1
 15977  183E  0836               	movf	SW_Ack_SrED@Dest_Addr^(0+128),w
 15978  183F  0020               	movlb	0	; select bank0
 15979  1840  00D5               	movwf	SendPacket@DestinationAddress
 15980  1841  3000               	movlw	0
 15981  1842  01D7               	clrf	SendPacket@isCommand
 15982  1843  0AD7               	incf	SendPacket@isCommand,f
 15983  1844  01D8               	clrf	SendPacket@SecurityEnabled
 15984  1845  29DB               	ljmp	_SendPacket
 15985  1846                     __end_of_SW_Ack_SrED:	
 15986  1846                     __ptext34:	
 15987 ;; *************** function _send_link_status *****************
 15988 ;; Defined at:
 15989 ;;		line 2044 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;		None
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;  send_status     1   58[BANK0 ] unsigned char 
 15994 ;; Return value:  Size  Location     Type
 15995 ;;                  1    wreg      void 
 15996 ;; Registers used:
 15997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15998 ;; Tracked objects:
 15999 ;;		On entry : 1F/1
 16000 ;;		On exit  : 1D/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;Total ram usage:        1 bytes
 16008 ;; Hardware stack levels used:    1
 16009 ;; Hardware stack levels required when called:   10
 16010 ;; This function calls:
 16011 ;;		_SendPacket
 16012 ;; This function is called by:
 16013 ;;		_P2PTasks
 16014 ;; This function uses a non-reentrant model
 16015 ;;
 16016                           
 16017                           
 16018                           ;psect for function _send_link_status
 16019  1846                     _send_link_status:	
 16020                           
 16021                           ;miwi_p2p.c: 2046: bool send_status;
 16022                           ;miwi_p2p.c: 2047: {TxData = 0;};
 16023                           
 16024                           ;incstack = 0
 16025                           ; Regs used in _send_link_status: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16026  1846  01EC               	clrf	_TxData^(0+128)
 16027                           
 16028                           ;miwi_p2p.c: 2048: TxBuffer[TxData++] = 0x7A;
 16029  1847  086C               	movf	_TxData^(0+128),w
 16030  1848  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16031  1849  0086               	movwf	6
 16032  184A  3002               	movlw	2	; select bank4/5
 16033  184B  0087               	movwf	7
 16034  184C  307A               	movlw	122
 16035  184D  0081               	movwf	1
 16036  184E  0AEC               	incf	_TxData^(0+128),f
 16037                           
 16038                           ;miwi_p2p.c: 2052: send_status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, 0
      +                          );
 16039  184F  086E               	movf	(_myPANID+1)^(0+128),w
 16040  1850  0020               	movlb	0	; select bank0
 16041  1851  00D4               	movwf	SendPacket@DestinationPANID+1
 16042  1852  0021               	movlb	1	; select bank1
 16043  1853  086D               	movf	_myPANID^(0+128),w
 16044  1854  0020               	movlb	0	; select bank0
 16045  1855  00D3               	movwf	SendPacket@DestinationPANID
 16046  1856  30A4               	movlw	low (_ConnectionTable+4)
 16047  1857  00D5               	movwf	SendPacket@DestinationAddress
 16048  1858  3002               	movlw	high (_ConnectionTable+4)
 16049  1859  00D6               	movwf	SendPacket@DestinationAddress+1
 16050  185A  3000               	movlw	0
 16051  185B  01D7               	clrf	SendPacket@isCommand
 16052  185C  0AD7               	incf	SendPacket@isCommand,f
 16053  185D  01D8               	clrf	SendPacket@SecurityEnabled
 16054  185E  21DB  3198         	fcall	_SendPacket
 16055  1860  0020               	movlb	0	; select bank0
 16056  1861  00DA               	movwf	send_link_status@send_status
 16057                           
 16058                           ;miwi_p2p.c: 2056: if(!send_status)
 16059  1862  085A               	movf	send_link_status@send_status,w
 16060  1863  1D03               	btfss	3,2
 16061  1864  0008               	return
 16062                           
 16063                           ;miwi_p2p.c: 2057: {
 16064                           ;miwi_p2p.c: 2058: lost_connection = 1;
 16065  1865  0022               	movlb	2	; select bank2
 16066  1866  01D7               	clrf	_lost_connection^(0+256)
 16067  1867  0AD7               	incf	_lost_connection^(0+256),f
 16068  1868  0008               	return
 16069  1869                     __end_of_send_link_status:	
 16070  1869                     __ptext25:	
 16071 ;; *************** function _MiMAC_Init *****************
 16072 ;; Defined at:
 16073 ;;		line 1465 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;  initValue       2   38[BANK0 ] struct .
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;  i               1   42[BANK0 ] unsigned char 
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      unsigned char 
 16080 ;; Registers used:
 16081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16082 ;; Tracked objects:
 16083 ;;		On entry : 1F/0
 16084 ;;		On exit  : 1F/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;Total ram usage:        5 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    8
 16094 ;; This function calls:
 16095 ;;		_InitMRF24J40
 16096 ;;		___wmul
 16097 ;; This function is called by:
 16098 ;;		_MiApp_ProtocolInit
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           
 16103                           ;psect for function _MiMAC_Init
 16104  1869                     _MiMAC_Init:	
 16105                           
 16106                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
 16107                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
 16108                           
 16109                           ;incstack = 0
 16110                           ; Regs used in _MiMAC_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16111  1869  0847               	movf	MiMAC_Init@initValue+1,w
 16112  186A  0022               	movlb	2	; select bank2
 16113  186B  00C7               	movwf	(_MACInitParams+1)^(0+256)
 16114  186C  0020               	movlb	0	; select bank0
 16115  186D  0846               	movf	MiMAC_Init@initValue,w
 16116  186E  0022               	movlb	2	; select bank2
 16117  186F  00C6               	movwf	_MACInitParams^(0+256)
 16118                           
 16119                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR1L;
 16120  1870  0020               	movlb	0	; select bank0
 16121  1871  0816               	movf	22,w	;volatile
 16122  1872  0022               	movlb	2	; select bank2
 16123  1873  00CC               	movwf	_IEEESeqNum^(0+256)
 16124                           
 16125                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
 16126  1874  300B               	movlw	11
 16127  1875  00CE               	movwf	_MACCurrentChannel^(0+256)
 16128                           
 16129                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
 16130  1876  31A4  241A  3198   	fcall	_InitMRF24J40
 16131                           
 16132                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
 16133  1879  01DE               	clrf	_MRF24J40Status	;volatile
 16134                           
 16135                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
 16136  187A  01CA               	clrf	MiMAC_Init@i
 16137  187B                     l10608:	
 16138                           
 16139                           ;drv_mrf_miwi_24j40.c: 1480: {
 16140                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
 16141  187B  084A               	movf	MiMAC_Init@i,w
 16142  187C  00AE               	movwf	___wmul@multiplier
 16143  187D  3045               	movlw	69
 16144  187E  01AF               	clrf	___wmul@multiplier+1
 16145  187F  00B0               	movwf	___wmul@multiplicand
 16146  1880  01B1               	clrf	___wmul@multiplicand+1
 16147  1881  27EB  3198         	fcall	___wmul
 16148  1883  3066               	movlw	102
 16149  1884  00C8               	movwf	??_MiMAC_Init
 16150  1885  3023               	movlw	35
 16151  1886  00C9               	movwf	??_MiMAC_Init+1
 16152  1887  082E               	movf	?___wmul,w
 16153  1888  0748               	addwf	??_MiMAC_Init,w
 16154  1889  0086               	movwf	6
 16155  188A  082F               	movf	?___wmul+1,w
 16156  188B  3D49               	addwfc	??_MiMAC_Init+1,w
 16157  188C  0087               	movwf	7
 16158  188D  3002               	movlw	2
 16159  188E  0181               	clrf	1
 16160  188F  0ACA               	incf	MiMAC_Init@i,f
 16161  1890  024A               	subwf	MiMAC_Init@i,w
 16162  1891  1803               	btfsc	3,0
 16163  1892  0008               	return
 16164  1893  287B               	goto	l10608
 16165  1894                     __end_of_MiMAC_Init:	
 16166  1894                     __ptext37:	
 16167 ;; *************** function _MiApp_BroadcastConnectionTable *****************
 16168 ;; Defined at:
 16169 ;;		line 1919 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;		None
 16172 ;; Auto vars:     Size  Location     Type
 16173 ;;  j               1   31[BANK1 ] unsigned char 
 16174 ;;  i               1   30[BANK1 ] unsigned char 
 16175 ;;  k               1   29[BANK1 ] unsigned char 
 16176 ;;  broadcast_co    1   28[BANK1 ] unsigned char 
 16177 ;;  count           1   27[BANK1 ] unsigned char 
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1    wreg      void 
 16180 ;; Registers used:
 16181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16182 ;; Tracked objects:
 16183 ;;		On entry : 1E/0
 16184 ;;		On exit  : 1F/1
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16190 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 16191 ;;Total ram usage:       10 bytes
 16192 ;; Hardware stack levels used:    1
 16193 ;; Hardware stack levels required when called:   10
 16194 ;; This function calls:
 16195 ;;		_SendPacket
 16196 ;;		___awdiv
 16197 ;;		___awmod
 16198 ;;		___bmul
 16199 ;;		___wmul
 16200 ;; This function is called by:
 16201 ;;		_P2PTasks
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           
 16206                           ;psect for function _MiApp_BroadcastConnectionTable
 16207  1894                     _MiApp_BroadcastConnectionTable:	
 16208                           
 16209                           ;miwi_p2p.c: 1926: if ((conn_size * 4 ) + 4 < 40)
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _MiApp_BroadcastConnectionTable: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 16213  1894  0020               	movlb	0	; select bank0
 16214  1895  0862               	movf	_conn_size,w
 16215  1896  0021               	movlb	1	; select bank1
 16216  1897  00B6               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 16217  1898  01B7               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 16218  1899  35B6               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 16219  189A  0DB7               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 16220  189B  35B6               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 16221  189C  0DB7               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 16222  189D  0836               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 16223  189E  3E04               	addlw	4
 16224  189F  00B8               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 16225  18A0  3000               	movlw	0
 16226  18A1  3D37               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 16227  18A2  00B9               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 16228  18A3  3A80               	xorlw	128
 16229  18A4  00BA               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 16230  18A5  3080               	movlw	128
 16231  18A6  023A               	subwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 16232  18A7  1D03               	skipz
 16233  18A8  28AB               	goto	u9525
 16234  18A9  3028               	movlw	40
 16235  18AA  0238               	subwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 16236  18AB                     u9525:	
 16237  18AB  1803               	skipnc
 16238  18AC  28B1               	goto	l10024
 16239                           
 16240                           ;miwi_p2p.c: 1927: {
 16241                           ;miwi_p2p.c: 1928: broadcast_count = 1;
 16242  18AD  0021               	movlb	1	; select bank1
 16243  18AE  01BC               	clrf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 16244  18AF  0ABC               	incf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),f
 16245                           
 16246                           ;miwi_p2p.c: 1929: }
 16247  18B0  28EC               	goto	l10030
 16248  18B1                     l10024:	
 16249                           
 16250                           ;miwi_p2p.c: 1930: else
 16251                           ;miwi_p2p.c: 1931: {
 16252                           ;miwi_p2p.c: 1932: broadcast_count = ((conn_size * 4) + 4 )/ 40;
 16253  18B1  0020               	movlb	0	; select bank0
 16254  18B2  0862               	movf	_conn_size,w
 16255  18B3  00AB               	movwf	___awdiv@dividend
 16256  18B4  3004               	movlw	4
 16257  18B5  01AC               	clrf	___awdiv@dividend+1
 16258  18B6  35AB               	lslf	___awdiv@dividend,f
 16259  18B7  0DAC               	rlf	___awdiv@dividend+1,f
 16260  18B8  35AB               	lslf	___awdiv@dividend,f
 16261  18B9  0DAC               	rlf	___awdiv@dividend+1,f
 16262  18BA  07AB               	addwf	___awdiv@dividend,f
 16263  18BB  1803               	skipnc
 16264  18BC  0AAC               	incf	___awdiv@dividend+1,f
 16265  18BD  3028               	movlw	40
 16266  18BE  00A9               	movwf	___awdiv@divisor
 16267  18BF  01AA               	clrf	___awdiv@divisor+1
 16268  18C0  223E  3198         	fcall	___awdiv
 16269  18C2  0829               	movf	?___awdiv,w
 16270  18C3  0021               	movlb	1	; select bank1
 16271  18C4  00BC               	movwf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 16272                           
 16273                           ;miwi_p2p.c: 1933: if ((conn_size *4) + 4 % 40 != 0)
 16274  18C5  0020               	movlb	0	; select bank0
 16275  18C6  0862               	movf	_conn_size,w
 16276  18C7  0021               	movlb	1	; select bank1
 16277  18C8  00B6               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 16278  18C9  01B7               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 16279  18CA  35B6               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 16280  18CB  0DB7               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 16281  18CC  35B6               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 16282  18CD  0DB7               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 16283  18CE  0836               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 16284  18CF  3E04               	addlw	4
 16285  18D0  00B8               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 16286  18D1  3000               	movlw	0
 16287  18D2  3D37               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 16288  18D3  00B9               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 16289  18D4  0838               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 16290  18D5  0439               	iorwf	((??_MiApp_BroadcastConnectionTable+2)^(0+128)+1),w
 16291  18D6  1903               	btfsc	3,2
 16292  18D7  28EC               	goto	l10030
 16293                           
 16294                           ;miwi_p2p.c: 1934: {
 16295                           ;miwi_p2p.c: 1935: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 40;
 16296  18D8  0020               	movlb	0	; select bank0
 16297  18D9  0862               	movf	_conn_size,w
 16298  18DA  00AB               	movwf	___awmod@dividend
 16299  18DB  3004               	movlw	4
 16300  18DC  01AC               	clrf	___awmod@dividend+1
 16301  18DD  35AB               	lslf	___awmod@dividend,f
 16302  18DE  0DAC               	rlf	___awmod@dividend+1,f
 16303  18DF  35AB               	lslf	___awmod@dividend,f
 16304  18E0  0DAC               	rlf	___awmod@dividend+1,f
 16305  18E1  07AB               	addwf	___awmod@dividend,f
 16306  18E2  1803               	skipnc
 16307  18E3  0AAC               	incf	___awmod@dividend+1,f
 16308  18E4  3028               	movlw	40
 16309  18E5  00A9               	movwf	___awmod@divisor
 16310  18E6  01AA               	clrf	___awmod@divisor+1
 16311  18E7  227E  3198         	fcall	___awmod
 16312  18E9  0829               	movf	?___awmod,w
 16313  18EA  0021               	movlb	1	; select bank1
 16314  18EB  07BC               	addwf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),f
 16315  18EC                     l10030:	
 16316                           
 16317                           ;miwi_p2p.c: 1936: }
 16318                           ;miwi_p2p.c: 1938: }
 16319                           ;miwi_p2p.c: 1940: for (i = 0 ; i < broadcast_count ; i++)
 16320  18EC  01BE               	clrf	MiApp_BroadcastConnectionTable@i^(0+128)
 16321  18ED                     l10106:	
 16322  18ED  083C               	movf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),w
 16323  18EE  023E               	subwf	MiApp_BroadcastConnectionTable@i^(0+128),w
 16324  18EF  1803               	btfsc	3,0
 16325  18F0  0008               	return
 16326                           
 16327                           ;miwi_p2p.c: 1941: {
 16328                           ;miwi_p2p.c: 1942: {TxData = 0;};
 16329  18F1  01EC               	clrf	_TxData^(0+128)
 16330                           
 16331                           ;miwi_p2p.c: 1943: TxBuffer[TxData++] = 0x77;
 16332  18F2  086C               	movf	_TxData^(0+128),w
 16333  18F3  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16334  18F4  0086               	movwf	6
 16335  18F5  3002               	movlw	2	; select bank4/5
 16336  18F6  0087               	movwf	7
 16337  18F7  3077               	movlw	119
 16338  18F8  0081               	movwf	1
 16339  18F9  0AEC               	incf	_TxData^(0+128),f
 16340                           
 16341                           ;miwi_p2p.c: 1944: TxBuffer[TxData++] = conn_size;
 16342  18FA  086C               	movf	_TxData^(0+128),w
 16343  18FB  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16344  18FC  0086               	movwf	6
 16345  18FD  0020               	movlb	0	; select bank0
 16346  18FE  0862               	movf	_conn_size,w
 16347  18FF  0081               	movwf	1
 16348  1900  0021               	movlb	1	; select bank1
 16349  1901  0AEC               	incf	_TxData^(0+128),f
 16350                           
 16351                           ;miwi_p2p.c: 1945: TxBuffer[TxData++] = ((40-4)/4)*i;
 16352  1902  086C               	movf	_TxData^(0+128),w
 16353  1903  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16354  1904  0086               	movwf	6
 16355  1905  3009               	movlw	9
 16356  1906  0020               	movlb	0	; select bank0
 16357  1907  00A9               	movwf	___bmul@multiplicand
 16358  1908  0021               	movlb	1	; select bank1
 16359  1909  083E               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 16360  190A  3196  26E6  3198   	fcall	___bmul
 16361  190D  0081               	movwf	1
 16362  190E  0021               	movlb	1	; select bank1
 16363  190F  0AEC               	incf	_TxData^(0+128),f
 16364                           
 16365                           ;miwi_p2p.c: 1946: TxBuffer[TxData++] = ((40-4)/4)*(i+1);
 16366  1910  086C               	movf	_TxData^(0+128),w
 16367  1911  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16368  1912  0086               	movwf	6
 16369  1913  3002               	movlw	2	; select bank4/5
 16370  1914  0087               	movwf	7
 16371  1915  3009               	movlw	9
 16372  1916  0020               	movlb	0	; select bank0
 16373  1917  00A9               	movwf	___bmul@multiplicand
 16374  1918  0021               	movlb	1	; select bank1
 16375  1919  083E               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 16376  191A  3E01               	addlw	1
 16377  191B  3196  26E6  3198   	fcall	___bmul
 16378  191E  0081               	movwf	1
 16379  191F  0021               	movlb	1	; select bank1
 16380  1920  3004               	movlw	4
 16381  1921  0AEC               	incf	_TxData^(0+128),f
 16382                           
 16383                           ;miwi_p2p.c: 1947: count = 4;
 16384  1922  00BB               	movwf	MiApp_BroadcastConnectionTable@count^(0+128)
 16385                           
 16386                           ;miwi_p2p.c: 1948: for (j= ((40-4)/4)*i ;j<((40-4)/4)*(i+1);j++)
 16387  1923  3009               	movlw	9
 16388  1924  0020               	movlb	0	; select bank0
 16389  1925  00A9               	movwf	___bmul@multiplicand
 16390  1926  0021               	movlb	1	; select bank1
 16391  1927  083E               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 16392  1928  3196  26E6  3198   	fcall	___bmul
 16393  192B  0021               	movlb	1	; select bank1
 16394  192C  00BF               	movwf	MiApp_BroadcastConnectionTable@j^(0+128)
 16395  192D                     l10088:	
 16396  192D  083E               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 16397  192E  0020               	movlb	0	; select bank0
 16398  192F  00AE               	movwf	___wmul@multiplier
 16399  1930  01AF               	clrf	___wmul@multiplier+1
 16400  1931  0AAE               	incf	___wmul@multiplier,f
 16401  1932  1903               	skipnz
 16402  1933  0AAF               	incf	___wmul@multiplier+1,f
 16403  1934  3009               	movlw	9
 16404  1935  00B0               	movwf	___wmul@multiplicand
 16405  1936  01B1               	clrf	___wmul@multiplicand+1
 16406  1937  27EB  3198         	fcall	___wmul
 16407  1939  082F               	movf	?___wmul+1,w
 16408  193A  3A80               	xorlw	128
 16409  193B  3C80               	sublw	128
 16410  193C  1D03               	skipz
 16411  193D  2941               	goto	u9565
 16412  193E  082E               	movf	?___wmul,w
 16413  193F  0021               	movlb	1	; select bank1
 16414  1940  023F               	subwf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16415  1941                     u9565:	
 16416  1941  1803               	btfsc	3,0
 16417  1942  29B6               	goto	l10090
 16418                           
 16419                           ;miwi_p2p.c: 1949: {
 16420                           ;miwi_p2p.c: 1950: if (j < conn_size)
 16421  1943  0020               	movlb	0	; select bank0
 16422  1944  0862               	movf	_conn_size,w
 16423  1945  0021               	movlb	1	; select bank1
 16424  1946  023F               	subwf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16425  1947  1803               	skipnc
 16426  1948  29B4               	goto	l10086
 16427                           
 16428                           ;miwi_p2p.c: 1951: {
 16429                           ;miwi_p2p.c: 1952: if (ConnectionTable[j].status.bits.isValid)
 16430  1949  300E               	movlw	14
 16431  194A  0020               	movlb	0	; select bank0
 16432  194B  00A9               	movwf	___bmul@multiplicand
 16433  194C  0021               	movlb	1	; select bank1
 16434  194D  083F               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16435  194E  3196  26E6  3198   	fcall	___bmul
 16436  1951  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 16437  1952  0086               	movwf	6
 16438  1953  3002               	movlw	2	; select bank5/6
 16439  1954  0087               	movwf	7
 16440  1955  1F81               	btfss	1,7
 16441  1956  2995               	goto	l10072
 16442                           
 16443                           ;miwi_p2p.c: 1953: {
 16444                           ;miwi_p2p.c: 1955: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
 16445  1957  0021               	movlb	1	; select bank1
 16446  1958  086C               	movf	_TxData^(0+128),w
 16447  1959  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16448  195A  0086               	movwf	6
 16449  195B  300E               	movlw	14
 16450  195C  0020               	movlb	0	; select bank0
 16451  195D  00A9               	movwf	___bmul@multiplicand
 16452  195E  0021               	movlb	1	; select bank1
 16453  195F  083F               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16454  1960  3196  26E6  3198   	fcall	___bmul
 16455  1963  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 16456  1964  0084               	movwf	4
 16457  1965  3002               	movlw	2	; select bank5/6
 16458  1966  0085               	movwf	5
 16459  1967  0800               	movf	0,w
 16460  1968  0081               	movwf	1
 16461  1969  0021               	movlb	1	; select bank1
 16462  196A  0AEC               	incf	_TxData^(0+128),f
 16463                           
 16464                           ;miwi_p2p.c: 1956: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
 16465  196B  086C               	movf	_TxData^(0+128),w
 16466  196C  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16467  196D  0086               	movwf	6
 16468  196E  3002               	movlw	2	; select bank4/5
 16469  196F  0087               	movwf	7
 16470  1970  300E               	movlw	14
 16471  1971  0020               	movlb	0	; select bank0
 16472  1972  00A9               	movwf	___bmul@multiplicand
 16473  1973  0021               	movlb	1	; select bank1
 16474  1974  083F               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16475  1975  3196  26E6  3198   	fcall	___bmul
 16476  1978  3EA5               	addlw	(low ((_ConnectionTable| (0+512)+5)))& (0+255)
 16477  1979  0084               	movwf	4
 16478  197A  3002               	movlw	2	; select bank5/6
 16479  197B  0085               	movwf	5
 16480  197C  0800               	movf	0,w
 16481  197D  0081               	movwf	1
 16482  197E  0021               	movlb	1	; select bank1
 16483  197F  0AEC               	incf	_TxData^(0+128),f
 16484                           
 16485                           ;miwi_p2p.c: 1957: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
 16486  1980  086C               	movf	_TxData^(0+128),w
 16487  1981  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16488  1982  0086               	movwf	6
 16489  1983  3002               	movlw	2	; select bank4/5
 16490  1984  0087               	movwf	7
 16491  1985  300E               	movlw	14
 16492  1986  0020               	movlb	0	; select bank0
 16493  1987  00A9               	movwf	___bmul@multiplicand
 16494  1988  0021               	movlb	1	; select bank1
 16495  1989  083F               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16496  198A  3196  26E6  3198   	fcall	___bmul
 16497  198D  3EA6               	addlw	(low ((_ConnectionTable| (0+512)+6)))& (0+255)
 16498  198E  0084               	movwf	4
 16499  198F  3002               	movlw	2	; select bank5/6
 16500  1990  0085               	movwf	5
 16501  1991  0800               	movf	0,w
 16502  1992  0081               	movwf	1
 16503  1993  0021               	movlb	1	; select bank1
 16504  1994  29A9               	goto	L13
 16505  1995                     l10072:	
 16506                           ;miwi_p2p.c: 1960: }
 16507                           
 16508                           ;miwi_p2p.c: 1958: TxBuffer[TxData++] = j;
 16509                           
 16510                           
 16511                           ;miwi_p2p.c: 1962: else
 16512                           ;miwi_p2p.c: 1963: {
 16513                           ;miwi_p2p.c: 1965: TxBuffer[TxData++] = 0xff;
 16514  1995  0021               	movlb	1	; select bank1
 16515  1996  086C               	movf	_TxData^(0+128),w
 16516  1997  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16517  1998  0086               	movwf	6
 16518  1999  3002               	movlw	2	; select bank4/5
 16519  199A  0087               	movwf	7
 16520  199B  30FF               	movlw	255
 16521  199C  0081               	movwf	1
 16522  199D  0AEC               	incf	_TxData^(0+128),f
 16523                           
 16524                           ;miwi_p2p.c: 1966: TxBuffer[TxData++] = 0xff;
 16525  199E  086C               	movf	_TxData^(0+128),w
 16526  199F  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16527  19A0  0086               	movwf	6
 16528  19A1  30FF               	movlw	255
 16529  19A2  0081               	movwf	1
 16530  19A3  0AEC               	incf	_TxData^(0+128),f
 16531                           
 16532                           ;miwi_p2p.c: 1967: TxBuffer[TxData++] = 0xff;
 16533  19A4  086C               	movf	_TxData^(0+128),w
 16534  19A5  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16535  19A6  0086               	movwf	6
 16536  19A7  30FF               	movlw	255
 16537  19A8  0081               	movwf	1
 16538  19A9                     L13:	
 16539  19A9  0AEC               	incf	_TxData^(0+128),f
 16540                           
 16541                           ;miwi_p2p.c: 1968: TxBuffer[TxData++] = j;
 16542  19AA  086C               	movf	_TxData^(0+128),w
 16543  19AB  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16544  19AC  0086               	movwf	6
 16545  19AD  3002               	movlw	2	; select bank4/5
 16546  19AE  0087               	movwf	7
 16547  19AF  083F               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 16548  19B0  0081               	movwf	1
 16549  19B1  3004               	movlw	4
 16550  19B2  0AEC               	incf	_TxData^(0+128),f
 16551                           
 16552                           ;miwi_p2p.c: 1969: }
 16553                           ;miwi_p2p.c: 1970: count = count + 4;
 16554  19B3  07BB               	addwf	MiApp_BroadcastConnectionTable@count^(0+128),f
 16555  19B4                     l10086:	
 16556  19B4  0ABF               	incf	MiApp_BroadcastConnectionTable@j^(0+128),f
 16557  19B5  292D               	goto	l10088
 16558  19B6                     l10090:	
 16559                           
 16560                           ;miwi_p2p.c: 1971: }
 16561                           ;miwi_p2p.c: 1972: }
 16562                           ;miwi_p2p.c: 1974: for (k=count;k<40;k++)
 16563  19B6  0021               	movlb	1	; select bank1
 16564  19B7  083B               	movf	MiApp_BroadcastConnectionTable@count^(0+128),w
 16565  19B8  00BD               	movwf	MiApp_BroadcastConnectionTable@k^(0+128)
 16566  19B9  3028               	movlw	40
 16567  19BA  023D               	subwf	MiApp_BroadcastConnectionTable@k^(0+128),w
 16568  19BB  1803               	btfsc	3,0
 16569  19BC  29CA               	goto	l10102
 16570  19BD                     l10094:	
 16571                           
 16572                           ;miwi_p2p.c: 1975: {
 16573                           ;miwi_p2p.c: 1976: TxBuffer[TxData++] = 0x11;
 16574  19BD  086C               	movf	_TxData^(0+128),w
 16575  19BE  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16576  19BF  0086               	movwf	6
 16577  19C0  3002               	movlw	2	; select bank4/5
 16578  19C1  0087               	movwf	7
 16579  19C2  3011               	movlw	17
 16580  19C3  0081               	movwf	1
 16581  19C4  3028               	movlw	40
 16582  19C5  0AEC               	incf	_TxData^(0+128),f
 16583  19C6  0ABD               	incf	MiApp_BroadcastConnectionTable@k^(0+128),f
 16584  19C7  023D               	subwf	MiApp_BroadcastConnectionTable@k^(0+128),w
 16585  19C8  1C03               	skipc
 16586  19C9  29BD               	goto	l10094
 16587  19CA                     l10102:	
 16588                           
 16589                           ;miwi_p2p.c: 1977: }
 16590                           ;miwi_p2p.c: 1983: SendPacket(1, myPANID, (0), 1, 0);
 16591  19CA  086E               	movf	(_myPANID+1)^(0+128),w
 16592  19CB  0020               	movlb	0	; select bank0
 16593  19CC  00D4               	movwf	SendPacket@DestinationPANID+1
 16594  19CD  0021               	movlb	1	; select bank1
 16595  19CE  086D               	movf	_myPANID^(0+128),w
 16596  19CF  0020               	movlb	0	; select bank0
 16597  19D0  00D3               	movwf	SendPacket@DestinationPANID
 16598  19D1  3001               	movlw	1
 16599  19D2  01D5               	clrf	SendPacket@DestinationAddress
 16600  19D3  01D6               	clrf	SendPacket@DestinationAddress+1
 16601  19D4  01D7               	clrf	SendPacket@isCommand
 16602  19D5  0AD7               	incf	SendPacket@isCommand,f
 16603  19D6  01D8               	clrf	SendPacket@SecurityEnabled
 16604  19D7  21DB  3198         	fcall	_SendPacket
 16605  19D9  0ABE               	incf	MiApp_BroadcastConnectionTable@i^(0+128),f
 16606  19DA  28ED               	goto	l10106
 16607  19DB                     __end_of_MiApp_BroadcastConnectionTable:	
 16608  19DB                     __ptext47:	
 16609 ;; *************** function _SendPacket *****************
 16610 ;; Defined at:
 16611 ;;		line 1621 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;  Broadcast       1    wreg     unsigned char 
 16614 ;;  DestinationP    2   51[BANK0 ] struct .
 16615 ;;  DestinationA    2   53[BANK0 ] PTR unsigned char 
 16616 ;;		 -> NULL(0), ConnectionTable(70), RxBuffer.Payload(68), RxBuffer(138), 
 16617 ;;  isCommand       1   55[BANK0 ] unsigned char 
 16618 ;;  SecurityEnab    1   56[BANK0 ] unsigned char 
 16619 ;; Auto vars:     Size  Location     Type
 16620 ;;  Broadcast       1   14[BANK1 ] unsigned char 
 16621 ;;  tParam          7   15[BANK1 ] struct .
 16622 ;;  status          1   13[BANK1 ] unsigned char 
 16623 ;; Return value:  Size  Location     Type
 16624 ;;                  1    wreg      unsigned char 
 16625 ;; Registers used:
 16626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16627 ;; Tracked objects:
 16628 ;;		On entry : 1F/0
 16629 ;;		On exit  : 1F/1
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16632 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16636 ;;Total ram usage:       16 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:    9
 16639 ;; This function calls:
 16640 ;;		_MiMAC_SendPacket
 16641 ;; This function is called by:
 16642 ;;		_P2PTasks
 16643 ;;		_MiApp_BroadcastPacket
 16644 ;;		_MiApp_UnicastAddress
 16645 ;;		_MiApp_BroadcastConnectionTable
 16646 ;;		_MiApp_UnicastStar
 16647 ;;		_send_link_status
 16648 ;;		_SW_Ack_SrED
 16649 ;;		_MiApp_EstablishConnection
 16650 ;;		_MiApp_RemoveConnection
 16651 ;; This function uses a non-reentrant model
 16652 ;;
 16653                           
 16654                           
 16655                           ;psect for function _SendPacket
 16656  19DB                     _SendPacket:	
 16657                           
 16658                           ;incstack = 0
 16659                           ; Regs used in _SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16660                           ;SendPacket@Broadcast stored from wreg
 16661  19DB  0021               	movlb	1	; select bank1
 16662  19DC  00AE               	movwf	SendPacket@Broadcast^(0+128)
 16663                           
 16664                           ;miwi_p2p.c: 1633: MAC_TRANS_PARAM tParam;
 16665                           ;miwi_p2p.c: 1634: bool status;
 16666                           ;miwi_p2p.c: 1636: tParam.flags.Val = 0;
 16667  19DD  01AF               	clrf	SendPacket@tParam^(0+128)
 16668                           
 16669                           ;miwi_p2p.c: 1637: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 16670  19DE  0020               	movlb	0	; select bank0
 16671  19DF  0857               	movf	SendPacket@isCommand,w
 16672  19E0  1903               	btfsc	3,2
 16673  19E1  29E4               	goto	u8100
 16674  19E2  3001               	movlw	1
 16675  19E3  29E5               	goto	u8110
 16676  19E4                     u8100:	
 16677  19E4  3000               	movlw	0
 16678  19E5                     u8110:	
 16679  19E5  00D9               	movwf	??_SendPacket
 16680  19E6  0021               	movlb	1	; select bank1
 16681  19E7  082F               	movf	SendPacket@tParam^(0+128),w
 16682  19E8  0020               	movlb	0	; select bank0
 16683  19E9  0659               	xorwf	??_SendPacket,w
 16684  19EA  39FC               	andlw	-4
 16685  19EB  0659               	xorwf	??_SendPacket,w
 16686  19EC  0021               	movlb	1	; select bank1
 16687  19ED  00AF               	movwf	SendPacket@tParam^(0+128)
 16688                           
 16689                           ;miwi_p2p.c: 1638: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 16690  19EE  082E               	movf	SendPacket@Broadcast^(0+128),w
 16691  19EF  1D03               	btfss	3,2
 16692  19F0  29F4               	goto	u8120
 16693  19F1  0021               	movlb	1	; select bank1
 16694  19F2  16AF               	bsf	SendPacket@tParam^(0+128),5
 16695  19F3  29F6               	goto	l9052
 16696  19F4                     u8120:	
 16697  19F4  0021               	movlb	1	; select bank1
 16698  19F5  12AF               	bcf	SendPacket@tParam^(0+128),5
 16699  19F6                     l9052:	
 16700                           
 16701                           ;miwi_p2p.c: 1639: tParam.flags.bits.broadcast = Broadcast;
 16702  19F6  082E               	movf	SendPacket@Broadcast^(0+128),w
 16703  19F7  3901               	andlw	1
 16704  19F8  112F               	bcf	SendPacket@tParam^(0+128),2
 16705  19F9  1D03               	skipz
 16706  19FA  152F               	bsf	SendPacket@tParam^(0+128),2
 16707                           
 16708                           ;miwi_p2p.c: 1640: tParam.flags.bits.secEn = SecurityEnabled;
 16709  19FB  0020               	movlb	0	; select bank0
 16710  19FC  0858               	movf	SendPacket@SecurityEnabled,w
 16711  19FD  3901               	andlw	1
 16712  19FE  0021               	movlb	1	; select bank1
 16713  19FF  11AF               	bcf	SendPacket@tParam^(0+128),3
 16714  1A00  1D03               	skipz
 16715  1A01  15AF               	bsf	SendPacket@tParam^(0+128),3
 16716                           
 16717                           ;miwi_p2p.c: 1642: tParam.altSrcAddr = 0;
 16718  1A02  01B3               	clrf	(SendPacket@tParam^(0+128)+4)
 16719                           
 16720                           ;miwi_p2p.c: 1643: tParam.altDestAddr = (Broadcast) ? 1 : 0;
 16721  1A03  082E               	movf	SendPacket@Broadcast^(0+128),w
 16722  1A04  1903               	btfsc	3,2
 16723  1A05  2A08               	goto	u8140
 16724  1A06  3001               	movlw	1
 16725  1A07  2A09               	goto	u8150
 16726  1A08                     u8140:	
 16727  1A08  3000               	movlw	0
 16728  1A09                     u8150:	
 16729  1A09  00B2               	movwf	(SendPacket@tParam^(0+128)+3)
 16730                           
 16731                           ;miwi_p2p.c: 1649: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 16732  1A0A  082E               	movf	SendPacket@Broadcast^(0+128),w
 16733  1A0B  1D03               	btfss	3,2
 16734  1A0C  2A10               	goto	u8160
 16735  1A0D  0021               	movlb	1	; select bank1
 16736  1A0E  172F               	bsf	SendPacket@tParam^(0+128),6
 16737  1A0F  2A12               	goto	l9060
 16738  1A10                     u8160:	
 16739  1A10  0021               	movlb	1	; select bank1
 16740  1A11  132F               	bcf	SendPacket@tParam^(0+128),6
 16741  1A12                     l9060:	
 16742                           
 16743                           ;miwi_p2p.c: 1662: tParam.flags.bits.sourcePrsnt = 1;
 16744  1A12  17AF               	bsf	SendPacket@tParam^(0+128),7
 16745                           
 16746                           ;miwi_p2p.c: 1665: tParam.DestAddress = DestinationAddress;
 16747  1A13  0020               	movlb	0	; select bank0
 16748  1A14  0856               	movf	SendPacket@DestinationAddress+1,w
 16749  1A15  0021               	movlb	1	; select bank1
 16750  1A16  00B1               	movwf	((low ((SendPacket@tParam| 0+1))+1))^(0+128)
 16751  1A17  0020               	movlb	0	; select bank0
 16752  1A18  0855               	movf	SendPacket@DestinationAddress,w
 16753  1A19  0021               	movlb	1	; select bank1
 16754  1A1A  00B0               	movwf	(low ((SendPacket@tParam| 0+1)))^(0+128)
 16755                           
 16756                           ;miwi_p2p.c: 1668: tParam.DestPANID.Val = DestinationPANID.Val;
 16757  1A1B  0020               	movlb	0	; select bank0
 16758  1A1C  0854               	movf	SendPacket@DestinationPANID+1,w
 16759  1A1D  0021               	movlb	1	; select bank1
 16760  1A1E  00B5               	movwf	((SendPacket@tParam+1)^(0+128)+5)
 16761  1A1F  0020               	movlb	0	; select bank0
 16762  1A20  0853               	movf	SendPacket@DestinationPANID,w
 16763  1A21  0021               	movlb	1	; select bank1
 16764  1A22  00B4               	movwf	(SendPacket@tParam^(0+128)+5)
 16765                           
 16766                           ;miwi_p2p.c: 1671: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 16767  1A23  30AF               	movlw	low SendPacket@tParam
 16768  1A24  0086               	movwf	6
 16769  1A25  3000               	movlw	high SendPacket@tParam
 16770  1A26  0087               	movwf	7
 16771  1A27  3046               	movlw	low MiMAC_SendPacket@transParam
 16772  1A28  0084               	movwf	4
 16773  1A29  3000               	movlw	high MiMAC_SendPacket@transParam
 16774  1A2A  0085               	movwf	5
 16775  1A2B  3007               	movlw	7
 16776  1A2C  0020               	movlb	0	; select bank0
 16777  1A2D  00D9               	movwf	??_SendPacket
 16778  1A2E                     u8180:	
 16779  1A2E  0016               	moviw fsr1++
 16780  1A2F  001A               	movwi fsr0++
 16781  1A30  0BD9               	decfsz	??_SendPacket,f
 16782  1A31  2A2E               	goto	u8180
 16783  1A32  3020               	movlw	(low (_TxBuffer| (0+512)))& (0+255)
 16784  1A33  00CD               	movwf	MiMAC_SendPacket@MACPayload
 16785  1A34  0021               	movlb	1	; select bank1
 16786  1A35  086C               	movf	_TxData^(0+128),w
 16787  1A36  0020               	movlb	0	; select bank0
 16788  1A37  00CE               	movwf	MiMAC_SendPacket@MACPayloadLen
 16789  1A38  31A5  253A         	fcall	_MiMAC_SendPacket
 16790  1A3A  0021               	movlb	1	; select bank1
 16791  1A3B  00AD               	movwf	SendPacket@status^(0+128)
 16792                           
 16793                           ;miwi_p2p.c: 1672: TxData = 0;
 16794  1A3C  01EC               	clrf	_TxData^(0+128)
 16795                           
 16796                           ;miwi_p2p.c: 1674: return status;
 16797  1A3D  0008               	return
 16798  1A3E                     __end_of_SendPacket:	
 16799  1A3E                     __ptext39:	
 16800 ;; *************** function ___awdiv *****************
 16801 ;; Defined at:
 16802 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;  divisor         2    9[BANK0 ] int 
 16805 ;;  dividend        2   11[BANK0 ] int 
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;  quotient        2   15[BANK0 ] int 
 16808 ;;  sign            1   14[BANK0 ] unsigned char 
 16809 ;;  counter         1   13[BANK0 ] unsigned char 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  2    9[BANK0 ] int 
 16812 ;; Registers used:
 16813 ;;		wreg, status,2, status,0
 16814 ;; Tracked objects:
 16815 ;;		On entry : 1F/0
 16816 ;;		On exit  : 1F/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16823 ;;Total ram usage:        8 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:    4
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_MiApp_BroadcastConnectionTable
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           
 16834                           ;psect for function ___awdiv
 16835  1A3E                     ___awdiv:	
 16836                           
 16837                           ;incstack = 0
 16838                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16839  1A3E  01AE               	clrf	___awdiv@sign
 16840  1A3F  1FAA               	btfss	___awdiv@divisor+1,7
 16841  1A40  2A48               	goto	l9656
 16842  1A41  09A9               	comf	___awdiv@divisor,f
 16843  1A42  09AA               	comf	___awdiv@divisor+1,f
 16844  1A43  0AA9               	incf	___awdiv@divisor,f
 16845  1A44  1903               	skipnz
 16846  1A45  0AAA               	incf	___awdiv@divisor+1,f
 16847  1A46  01AE               	clrf	___awdiv@sign
 16848  1A47  0AAE               	incf	___awdiv@sign,f
 16849  1A48                     l9656:	
 16850  1A48  1FAC               	btfss	___awdiv@dividend+1,7
 16851  1A49  2A51               	goto	l9662
 16852  1A4A  09AB               	comf	___awdiv@dividend,f
 16853  1A4B  09AC               	comf	___awdiv@dividend+1,f
 16854  1A4C  0AAB               	incf	___awdiv@dividend,f
 16855  1A4D  1903               	skipnz
 16856  1A4E  0AAC               	incf	___awdiv@dividend+1,f
 16857  1A4F  3001               	movlw	1
 16858  1A50  06AE               	xorwf	___awdiv@sign,f
 16859  1A51                     l9662:	
 16860  1A51  01AF               	clrf	___awdiv@quotient
 16861  1A52  01B0               	clrf	___awdiv@quotient+1
 16862  1A53  0829               	movf	___awdiv@divisor,w
 16863  1A54  042A               	iorwf	___awdiv@divisor+1,w
 16864  1A55  1903               	btfsc	3,2
 16865  1A56  2A71               	goto	l9684
 16866  1A57  01AD               	clrf	___awdiv@counter
 16867  1A58                     L15:	
 16868  1A58  0AAD               	incf	___awdiv@counter,f
 16869  1A59  1BAA               	btfsc	___awdiv@divisor+1,7
 16870  1A5A  2A5E               	goto	l9672
 16871  1A5B  35A9               	lslf	___awdiv@divisor,f
 16872  1A5C  0DAA               	rlf	___awdiv@divisor+1,f
 16873  1A5D  2A58               	goto	L15
 16874  1A5E                     l9672:	
 16875  1A5E  35AF               	lslf	___awdiv@quotient,f
 16876  1A5F  0DB0               	rlf	___awdiv@quotient+1,f
 16877  1A60  082A               	movf	___awdiv@divisor+1,w
 16878  1A61  022C               	subwf	___awdiv@dividend+1,w
 16879  1A62  1D03               	skipz
 16880  1A63  2A66               	goto	u9085
 16881  1A64  0829               	movf	___awdiv@divisor,w
 16882  1A65  022B               	subwf	___awdiv@dividend,w
 16883  1A66                     u9085:	
 16884  1A66  1C03               	skipc
 16885  1A67  2A6D               	goto	l9680
 16886  1A68  0829               	movf	___awdiv@divisor,w
 16887  1A69  02AB               	subwf	___awdiv@dividend,f
 16888  1A6A  082A               	movf	___awdiv@divisor+1,w
 16889  1A6B  3BAC               	subwfb	___awdiv@dividend+1,f
 16890  1A6C  142F               	bsf	___awdiv@quotient,0
 16891  1A6D                     l9680:	
 16892  1A6D  36AA               	lsrf	___awdiv@divisor+1,f
 16893  1A6E  0CA9               	rrf	___awdiv@divisor,f
 16894  1A6F  0BAD               	decfsz	___awdiv@counter,f
 16895  1A70  2A5E               	goto	l9672
 16896  1A71                     l9684:	
 16897  1A71  082E               	movf	___awdiv@sign,w
 16898  1A72  1903               	btfsc	3,2
 16899  1A73  2A79               	goto	l9688
 16900  1A74  09AF               	comf	___awdiv@quotient,f
 16901  1A75  09B0               	comf	___awdiv@quotient+1,f
 16902  1A76  0AAF               	incf	___awdiv@quotient,f
 16903  1A77  1903               	skipnz
 16904  1A78  0AB0               	incf	___awdiv@quotient+1,f
 16905  1A79                     l9688:	
 16906  1A79  0830               	movf	___awdiv@quotient+1,w
 16907  1A7A  00AA               	movwf	?___awdiv+1
 16908  1A7B  082F               	movf	___awdiv@quotient,w
 16909  1A7C  00A9               	movwf	?___awdiv
 16910  1A7D  0008               	return
 16911  1A7E                     __end_of___awdiv:	
 16912  1A7E                     __ptext38:	
 16913 ;; *************** function ___awmod *****************
 16914 ;; Defined at:
 16915 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  divisor         2    9[BANK0 ] int 
 16918 ;;  dividend        2   11[BANK0 ] int 
 16919 ;; Auto vars:     Size  Location     Type
 16920 ;;  sign            1   14[BANK0 ] unsigned char 
 16921 ;;  counter         1   13[BANK0 ] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  2    9[BANK0 ] int 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2, status,0
 16926 ;; Tracked objects:
 16927 ;;		On entry : 1F/0
 16928 ;;		On exit  : 1F/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16934 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;Total ram usage:        6 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:    4
 16938 ;; This function calls:
 16939 ;;		Nothing
 16940 ;; This function is called by:
 16941 ;;		_MiApp_BroadcastConnectionTable
 16942 ;; This function uses a non-reentrant model
 16943 ;;
 16944                           
 16945                           
 16946                           ;psect for function ___awmod
 16947  1A7E                     ___awmod:	
 16948                           
 16949                           ;incstack = 0
 16950                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 16951  1A7E  01AE               	clrf	___awmod@sign
 16952  1A7F  1FAC               	btfss	___awmod@dividend+1,7
 16953  1A80  2A88               	goto	l9700
 16954  1A81  09AB               	comf	___awmod@dividend,f
 16955  1A82  09AC               	comf	___awmod@dividend+1,f
 16956  1A83  0AAB               	incf	___awmod@dividend,f
 16957  1A84  1903               	skipnz
 16958  1A85  0AAC               	incf	___awmod@dividend+1,f
 16959  1A86  01AE               	clrf	___awmod@sign
 16960  1A87  0AAE               	incf	___awmod@sign,f
 16961  1A88                     l9700:	
 16962  1A88  1FAA               	btfss	___awmod@divisor+1,7
 16963  1A89  2A8F               	goto	l9704
 16964  1A8A  09A9               	comf	___awmod@divisor,f
 16965  1A8B  09AA               	comf	___awmod@divisor+1,f
 16966  1A8C  0AA9               	incf	___awmod@divisor,f
 16967  1A8D  1903               	skipnz
 16968  1A8E  0AAA               	incf	___awmod@divisor+1,f
 16969  1A8F                     l9704:	
 16970  1A8F  0829               	movf	___awmod@divisor,w
 16971  1A90  042A               	iorwf	___awmod@divisor+1,w
 16972  1A91  1903               	btfsc	3,2
 16973  1A92  2AAA               	goto	l9720
 16974  1A93  01AD               	clrf	___awmod@counter
 16975  1A94                     L14:	
 16976  1A94  0AAD               	incf	___awmod@counter,f
 16977  1A95  1BAA               	btfsc	___awmod@divisor+1,7
 16978  1A96  2A9A               	goto	l9712
 16979  1A97  35A9               	lslf	___awmod@divisor,f
 16980  1A98  0DAA               	rlf	___awmod@divisor+1,f
 16981  1A99  2A94               	goto	L14
 16982  1A9A                     l9712:	
 16983  1A9A  082A               	movf	___awmod@divisor+1,w
 16984  1A9B  022C               	subwf	___awmod@dividend+1,w
 16985  1A9C  1D03               	skipz
 16986  1A9D  2AA0               	goto	u9155
 16987  1A9E  0829               	movf	___awmod@divisor,w
 16988  1A9F  022B               	subwf	___awmod@dividend,w
 16989  1AA0                     u9155:	
 16990  1AA0  1C03               	skipc
 16991  1AA1  2AA6               	goto	l9716
 16992  1AA2  0829               	movf	___awmod@divisor,w
 16993  1AA3  02AB               	subwf	___awmod@dividend,f
 16994  1AA4  082A               	movf	___awmod@divisor+1,w
 16995  1AA5  3BAC               	subwfb	___awmod@dividend+1,f
 16996  1AA6                     l9716:	
 16997  1AA6  36AA               	lsrf	___awmod@divisor+1,f
 16998  1AA7  0CA9               	rrf	___awmod@divisor,f
 16999  1AA8  0BAD               	decfsz	___awmod@counter,f
 17000  1AA9  2A9A               	goto	l9712
 17001  1AAA                     l9720:	
 17002  1AAA  082E               	movf	___awmod@sign,w
 17003  1AAB  1903               	btfsc	3,2
 17004  1AAC  2AB2               	goto	l9724
 17005  1AAD  09AB               	comf	___awmod@dividend,f
 17006  1AAE  09AC               	comf	___awmod@dividend+1,f
 17007  1AAF  0AAB               	incf	___awmod@dividend,f
 17008  1AB0  1903               	skipnz
 17009  1AB1  0AAC               	incf	___awmod@dividend+1,f
 17010  1AB2                     l9724:	
 17011  1AB2  082C               	movf	___awmod@dividend+1,w
 17012  1AB3  00AA               	movwf	?___awmod+1
 17013  1AB4  082B               	movf	___awmod@dividend,w
 17014  1AB5  00A9               	movwf	?___awmod
 17015  1AB6  0008               	return
 17016  1AB7                     __end_of___awmod:	
 17017  1AB7                     __ptext36:	
 17018 ;; *************** function _MiMAC_ReceivedPacket *****************
 17019 ;; Defined at:
 17020 ;;		line 366 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 17021 ;; Parameters:    Size  Location     Type
 17022 ;;		None
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;  bIntraPAN       1   32[BANK0 ] unsigned char 
 17025 ;;  addrMode        1   30[BANK0 ] unsigned char 
 17026 ;;  i               1   31[BANK0 ] unsigned char 
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      unsigned char 
 17029 ;; Registers used:
 17030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17031 ;; Tracked objects:
 17032 ;;		On entry : 1F/1
 17033 ;;		On exit  : 1D/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;Total ram usage:       11 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:    6
 17043 ;; This function calls:
 17044 ;;		_MiMAC_DiscardPacket
 17045 ;;		___wmul
 17046 ;; This function is called by:
 17047 ;;		_P2PTasks
 17048 ;; This function uses a non-reentrant model
 17049 ;;
 17050                           
 17051                           
 17052                           ;psect for function _MiMAC_ReceivedPacket
 17053  1AB7                     _MiMAC_ReceivedPacket:	
 17054                           
 17055                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
 17056                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB1 == 0)
 17057                           
 17058                           ;incstack = 0
 17059                           ; Regs used in _MiMAC_ReceivedPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17060  1AB7  0020               	movlb	0	; select bank0
 17061  1AB8  188D               	btfsc	13,1	;volatile
 17062  1AB9  2ABC               	goto	l90
 17063                           
 17064                           ;drv_mrf_miwi_24j40.c: 372: {
 17065                           ;drv_mrf_miwi_24j40.c: 373: IOCBFbits.IOCBF1 = 1;
 17066  1ABA  0027               	movlb	7	; select bank7
 17067  1ABB  1496               	bsf	22,1	;volatile
 17068  1ABC                     l90:	
 17069                           
 17070                           ;drv_mrf_miwi_24j40.c: 374: }
 17071                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
 17072  1ABC  0020               	movlb	0	; select bank0
 17073  1ABD  1C5E               	btfss	_MRF24J40Status,0	;volatile
 17074  1ABE  2ACF               	goto	l9740
 17075                           
 17076                           ;drv_mrf_miwi_24j40.c: 380: {
 17077                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((10000000)/4)/1000
      +                          000)))
 17078  1ABF  3000               	movlw	0
 17079  1AC0  0022               	movlb	2	; select bank2
 17080  1AC1  0249               	subwf	(_failureCounter+1)^(0+256),w	;volatile
 17081  1AC2  3040               	movlw	64
 17082  1AC3  1903               	skipnz
 17083  1AC4  0248               	subwf	_failureCounter^(0+256),w	;volatile
 17084  1AC5  1C03               	skipc
 17085  1AC6  2ACC               	goto	l9738
 17086                           
 17087                           ;drv_mrf_miwi_24j40.c: 382: {
 17088                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
 17089  1AC7  01C8               	clrf	_failureCounter^(0+256)	;volatile
 17090  1AC8  01C9               	clrf	(_failureCounter+1)^(0+256)	;volatile
 17091                           
 17092                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
 17093  1AC9  0020               	movlb	0	; select bank0
 17094  1ACA  105E               	bcf	_MRF24J40Status,0	;volatile
 17095                           
 17096                           ;drv_mrf_miwi_24j40.c: 385: } else
 17097  1ACB  2ACF               	goto	l9740
 17098  1ACC                     l9738:	
 17099                           
 17100                           ;drv_mrf_miwi_24j40.c: 386: {
 17101                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
 17102  1ACC  0AC8               	incf	_failureCounter^(0+256),f	;volatile
 17103  1ACD  1903               	skipnz
 17104  1ACE  0AC9               	incf	(_failureCounter+1)^(0+256),f	;volatile
 17105  1ACF                     l9740:	
 17106                           
 17107                           ;drv_mrf_miwi_24j40.c: 388: }
 17108                           ;drv_mrf_miwi_24j40.c: 389: }
 17109                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
 17110  1ACF  30FF               	movlw	255
 17111  1AD0  0020               	movlb	0	; select bank0
 17112  1AD1  00E6               	movwf	_BankIndex
 17113                           
 17114                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
 17115  1AD2  01BF               	clrf	MiMAC_ReceivedPacket@i
 17116  1AD3                     l9748:	
 17117                           
 17118                           ;drv_mrf_miwi_24j40.c: 393: {
 17119                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
 17120  1AD3  083F               	movf	MiMAC_ReceivedPacket@i,w
 17121  1AD4  00AE               	movwf	___wmul@multiplier
 17122  1AD5  3045               	movlw	69
 17123  1AD6  01AF               	clrf	___wmul@multiplier+1
 17124  1AD7  00B0               	movwf	___wmul@multiplicand
 17125  1AD8  01B1               	clrf	___wmul@multiplicand+1
 17126  1AD9  27EB  3198         	fcall	___wmul
 17127  1ADB  3066               	movlw	102
 17128  1ADC  00B6               	movwf	??_MiMAC_ReceivedPacket
 17129  1ADD  3023               	movlw	35
 17130  1ADE  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17131  1ADF  082E               	movf	?___wmul,w
 17132  1AE0  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17133  1AE1  0086               	movwf	6
 17134  1AE2  082F               	movf	?___wmul+1,w
 17135  1AE3  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17136  1AE4  0087               	movwf	7
 17137  1AE5  0801               	movf	1,w
 17138  1AE6  1903               	btfsc	3,2
 17139  1AE7  2AEB               	goto	l9752
 17140                           
 17141                           ;drv_mrf_miwi_24j40.c: 395: {
 17142                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
 17143  1AE8  083F               	movf	MiMAC_ReceivedPacket@i,w
 17144  1AE9  00E6               	movwf	_BankIndex
 17145                           
 17146                           ;drv_mrf_miwi_24j40.c: 397: break;
 17147  1AEA  2AF0               	goto	l9756
 17148  1AEB                     l9752:	
 17149  1AEB  3002               	movlw	2
 17150  1AEC  0ABF               	incf	MiMAC_ReceivedPacket@i,f
 17151  1AED  023F               	subwf	MiMAC_ReceivedPacket@i,w
 17152  1AEE  1C03               	skipc
 17153  1AEF  2AD3               	goto	l9748
 17154  1AF0                     l9756:	
 17155                           
 17156                           ;drv_mrf_miwi_24j40.c: 398: }
 17157                           ;drv_mrf_miwi_24j40.c: 399: }
 17158                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
 17159  1AF0  3002               	movlw	2
 17160  1AF1  0266               	subwf	_BankIndex,w
 17161  1AF2  1803               	skipnc
 17162  1AF3  3400               	retlw	0
 17163                           
 17164                           ;drv_mrf_miwi_24j40.c: 403: {
 17165                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
 17166                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
 17167  1AF4  01C0               	clrf	MiMAC_ReceivedPacket@bIntraPAN
 17168  1AF5  0AC0               	incf	MiMAC_ReceivedPacket@bIntraPAN,f
 17169                           
 17170                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
 17171  1AF6  0866               	movf	_BankIndex,w
 17172  1AF7  00AE               	movwf	___wmul@multiplier
 17173  1AF8  3045               	movlw	69
 17174  1AF9  01AF               	clrf	___wmul@multiplier+1
 17175  1AFA  00B0               	movwf	___wmul@multiplicand
 17176  1AFB  01B1               	clrf	___wmul@multiplicand+1
 17177  1AFC  27EB  3198         	fcall	___wmul
 17178  1AFE  3067               	movlw	103
 17179  1AFF  00B6               	movwf	??_MiMAC_ReceivedPacket
 17180  1B00  3023               	movlw	35
 17181  1B01  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17182  1B02  082E               	movf	?___wmul,w
 17183  1B03  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17184  1B04  0086               	movwf	6
 17185  1B05  082F               	movf	?___wmul+1,w
 17186  1B06  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17187  1B07  0087               	movwf	7
 17188  1B08  1F01               	btfss	1,6
 17189                           
 17190                           ;drv_mrf_miwi_24j40.c: 409: {
 17191                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
 17192  1B09  01C0               	clrf	MiMAC_ReceivedPacket@bIntraPAN
 17193                           
 17194                           ;drv_mrf_miwi_24j40.c: 411: }
 17195                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
 17196  1B0A  0022               	movlb	2	; select bank2
 17197  1B0B  3045               	movlw	69
 17198  1B0C  01A0               	clrf	_MACRxPacket^(0+256)
 17199                           
 17200                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
 17201  1B0D  01A8               	clrf	(_MACRxPacket^(0+256)+8)
 17202                           
 17203                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
 17204  1B0E  0020               	movlb	0	; select bank0
 17205  1B0F  00B0               	movwf	___wmul@multiplicand
 17206  1B10  01B1               	clrf	___wmul@multiplicand+1
 17207  1B11  0866               	movf	_BankIndex,w
 17208  1B12  00AE               	movwf	___wmul@multiplier
 17209  1B13  01AF               	clrf	___wmul@multiplier+1
 17210  1B14  27EB  3198         	fcall	___wmul
 17211  1B16  3068               	movlw	104
 17212  1B17  00B6               	movwf	??_MiMAC_ReceivedPacket
 17213  1B18  3023               	movlw	35
 17214  1B19  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17215  1B1A  082E               	movf	?___wmul,w
 17216  1B1B  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17217  1B1C  0086               	movwf	6
 17218  1B1D  082F               	movf	?___wmul+1,w
 17219  1B1E  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17220  1B1F  0087               	movwf	7
 17221  1B20  0801               	movf	1,w
 17222  1B21  00BE               	movwf	MiMAC_ReceivedPacket@addrMode
 17223  1B22  30CC               	movlw	204
 17224  1B23  05BE               	andwf	MiMAC_ReceivedPacket@addrMode,f
 17225                           
 17226                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
 17227  1B24  2F2B               	goto	l9860
 17228  1B25                     l9768:	
 17229                           
 17230                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
 17231  1B25  0866               	movf	_BankIndex,w
 17232  1B26  00AE               	movwf	___wmul@multiplier
 17233  1B27  3045               	movlw	69
 17234  1B28  01AF               	clrf	___wmul@multiplier+1
 17235  1B29  00B0               	movwf	___wmul@multiplicand
 17236  1B2A  01B1               	clrf	___wmul@multiplicand+1
 17237  1B2B  27EB  3198         	fcall	___wmul
 17238  1B2D  306C               	movlw	108
 17239  1B2E  00B6               	movwf	??_MiMAC_ReceivedPacket
 17240  1B2F  3023               	movlw	35
 17241  1B30  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17242  1B31  082E               	movf	?___wmul,w
 17243  1B32  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17244  1B33  0086               	movwf	6
 17245  1B34  082F               	movf	?___wmul+1,w
 17246  1B35  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17247  1B36  0087               	movwf	7
 17248  1B37  0F01               	incfsz	1,w
 17249  1B38  2B4F               	goto	l101
 17250  1B39  0866               	movf	_BankIndex,w
 17251  1B3A  00AE               	movwf	___wmul@multiplier
 17252  1B3B  3045               	movlw	69
 17253  1B3C  01AF               	clrf	___wmul@multiplier+1
 17254  1B3D  00B0               	movwf	___wmul@multiplicand
 17255  1B3E  01B1               	clrf	___wmul@multiplicand+1
 17256  1B3F  27EB  3198         	fcall	___wmul
 17257  1B41  306D               	movlw	109
 17258  1B42  00B6               	movwf	??_MiMAC_ReceivedPacket
 17259  1B43  3023               	movlw	35
 17260  1B44  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17261  1B45  082E               	movf	?___wmul,w
 17262  1B46  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17263  1B47  0086               	movwf	6
 17264  1B48  082F               	movf	?___wmul+1,w
 17265  1B49  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17266  1B4A  0087               	movwf	7
 17267  1B4B  0F01               	incfsz	1,w
 17268  1B4C  2B4F               	goto	l101
 17269                           
 17270                           ;drv_mrf_miwi_24j40.c: 423: {
 17271                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
 17272  1B4D  0022               	movlb	2	; select bank2
 17273  1B4E  1520               	bsf	_MACRxPacket^(0+256),2
 17274  1B4F                     l101:	
 17275                           
 17276                           ;drv_mrf_miwi_24j40.c: 425: }
 17277                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
 17278  1B4F  0022               	movlb	2	; select bank2
 17279  1B50  17A0               	bsf	_MACRxPacket^(0+256),7
 17280                           
 17281                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
 17282  1B51  0020               	movlb	0	; select bank0
 17283  1B52  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
 17284  1B53  1903               	btfsc	3,2
 17285  1B54  2BBC               	goto	l9782
 17286                           
 17287                           ;drv_mrf_miwi_24j40.c: 431: {
 17288                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
 17289  1B55  0866               	movf	_BankIndex,w
 17290  1B56  00AE               	movwf	___wmul@multiplier
 17291  1B57  3045               	movlw	69
 17292  1B58  01AF               	clrf	___wmul@multiplier+1
 17293  1B59  00B0               	movwf	___wmul@multiplicand
 17294  1B5A  01B1               	clrf	___wmul@multiplicand+1
 17295  1B5B  27EB  3198         	fcall	___wmul
 17296  1B5D  306A               	movlw	106
 17297  1B5E  00B6               	movwf	??_MiMAC_ReceivedPacket
 17298  1B5F  3023               	movlw	35
 17299  1B60  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17300  1B61  082E               	movf	?___wmul,w
 17301  1B62  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17302  1B63  0086               	movwf	6
 17303  1B64  082F               	movf	?___wmul+1,w
 17304  1B65  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17305  1B66  0087               	movwf	7
 17306  1B67  0801               	movf	1,w
 17307  1B68  0022               	movlb	2	; select bank2
 17308  1B69  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17309                           
 17310                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
 17311  1B6A  0020               	movlb	0	; select bank0
 17312  1B6B  0866               	movf	_BankIndex,w
 17313  1B6C  00AE               	movwf	___wmul@multiplier
 17314  1B6D  3045               	movlw	69
 17315  1B6E  01AF               	clrf	___wmul@multiplier+1
 17316  1B6F  00B0               	movwf	___wmul@multiplicand
 17317  1B70  01B1               	clrf	___wmul@multiplicand+1
 17318  1B71  27EB  3198         	fcall	___wmul
 17319  1B73  306B               	movlw	107
 17320  1B74  00B6               	movwf	??_MiMAC_ReceivedPacket
 17321  1B75  3023               	movlw	35
 17322  1B76  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17323  1B77  082E               	movf	?___wmul,w
 17324  1B78  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17325  1B79  0086               	movwf	6
 17326  1B7A  082F               	movf	?___wmul+1,w
 17327  1B7B  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17328  1B7C  0087               	movwf	7
 17329  1B7D  0801               	movf	1,w
 17330  1B7E  0022               	movlb	2	; select bank2
 17331  1B7F  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17332                           
 17333                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
 17334  1B80  0020               	movlb	0	; select bank0
 17335  1B81  0866               	movf	_BankIndex,w
 17336  1B82  00AE               	movwf	___wmul@multiplier
 17337  1B83  3045               	movlw	69
 17338  1B84  01AF               	clrf	___wmul@multiplier+1
 17339  1B85  00B0               	movwf	___wmul@multiplicand
 17340  1B86  01B1               	clrf	___wmul@multiplicand+1
 17341  1B87  27EB  3198         	fcall	___wmul
 17342  1B89  306E               	movlw	110
 17343  1B8A                     L10:	
 17344  1B8A  00B6               	movwf	??_MiMAC_ReceivedPacket
 17345  1B8B  3023               	movlw	35
 17346  1B8C  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17347  1B8D  082E               	movf	?___wmul,w
 17348  1B8E  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17349  1B8F  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17350  1B90  082F               	movf	?___wmul+1,w
 17351  1B91  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17352  1B92  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17353  1B93  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17354  1B94  0022               	movlb	2	; select bank2
 17355  1B95  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17356  1B96  0020               	movlb	0	; select bank0
 17357  1B97  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17358  1B98  0022               	movlb	2	; select bank2
 17359  1B99  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17360                           
 17361                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
 17362  1B9A  0020               	movlb	0	; select bank0
 17363  1B9B  0866               	movf	_BankIndex,w
 17364  1B9C  00AE               	movwf	___wmul@multiplier
 17365  1B9D  3045               	movlw	69
 17366  1B9E  01AF               	clrf	___wmul@multiplier+1
 17367  1B9F  00B0               	movwf	___wmul@multiplicand
 17368  1BA0  01B1               	clrf	___wmul@multiplicand+1
 17369  1BA1  27EB  3198         	fcall	___wmul
 17370  1BA3  3066               	movlw	102
 17371  1BA4  00B6               	movwf	??_MiMAC_ReceivedPacket
 17372  1BA5  3023               	movlw	35
 17373  1BA6  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17374  1BA7  082E               	movf	?___wmul,w
 17375  1BA8  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17376  1BA9  0086               	movwf	6
 17377  1BAA  082F               	movf	?___wmul+1,w
 17378  1BAB  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17379  1BAC  0087               	movwf	7
 17380  1BAD  0801               	movf	1,w
 17381  1BAE  3EED               	addlw	237
 17382  1BAF  0022               	movlb	2	; select bank2
 17383  1BB0  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 17384                           
 17385                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
 17386  1BB1  0020               	movlb	0	; select bank0
 17387  1BB2  0866               	movf	_BankIndex,w
 17388  1BB3  00AE               	movwf	___wmul@multiplier
 17389  1BB4  3045               	movlw	69
 17390  1BB5  01AF               	clrf	___wmul@multiplier+1
 17391  1BB6  00B0               	movwf	___wmul@multiplicand
 17392  1BB7  01B1               	clrf	___wmul@multiplicand+1
 17393  1BB8  27EB  3198         	fcall	___wmul
 17394  1BBA  3076               	movlw	118
 17395  1BBB  2F17               	goto	L9
 17396  1BBC                     l9782:	
 17397                           ;drv_mrf_miwi_24j40.c: 440: }
 17398                           
 17399                           
 17400                           ;drv_mrf_miwi_24j40.c: 442: else
 17401                           ;drv_mrf_miwi_24j40.c: 443: {
 17402                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
 17403  1BBC  0866               	movf	_BankIndex,w
 17404  1BBD  00AE               	movwf	___wmul@multiplier
 17405  1BBE  3045               	movlw	69
 17406  1BBF  01AF               	clrf	___wmul@multiplier+1
 17407  1BC0  00B0               	movwf	___wmul@multiplicand
 17408  1BC1  01B1               	clrf	___wmul@multiplicand+1
 17409  1BC2  27EB  3198         	fcall	___wmul
 17410  1BC4  306E               	movlw	110
 17411  1BC5  00B6               	movwf	??_MiMAC_ReceivedPacket
 17412  1BC6  3023               	movlw	35
 17413  1BC7  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17414  1BC8  082E               	movf	?___wmul,w
 17415  1BC9  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17416  1BCA  0086               	movwf	6
 17417  1BCB  082F               	movf	?___wmul+1,w
 17418  1BCC  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17419  1BCD  0087               	movwf	7
 17420  1BCE  0801               	movf	1,w
 17421  1BCF  0022               	movlb	2	; select bank2
 17422  1BD0  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17423                           
 17424                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
 17425  1BD1  0020               	movlb	0	; select bank0
 17426  1BD2  0866               	movf	_BankIndex,w
 17427  1BD3  00AE               	movwf	___wmul@multiplier
 17428  1BD4  3045               	movlw	69
 17429  1BD5  01AF               	clrf	___wmul@multiplier+1
 17430  1BD6  00B0               	movwf	___wmul@multiplicand
 17431  1BD7  01B1               	clrf	___wmul@multiplicand+1
 17432  1BD8  27EB  3198         	fcall	___wmul
 17433  1BDA  306F               	movlw	111
 17434  1BDB  00B6               	movwf	??_MiMAC_ReceivedPacket
 17435  1BDC  3023               	movlw	35
 17436  1BDD  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17437  1BDE  082E               	movf	?___wmul,w
 17438  1BDF  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17439  1BE0  0086               	movwf	6
 17440  1BE1  082F               	movf	?___wmul+1,w
 17441  1BE2  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17442  1BE3  0087               	movwf	7
 17443  1BE4  0801               	movf	1,w
 17444  1BE5  0022               	movlb	2	; select bank2
 17445  1BE6  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17446                           
 17447                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
 17448  1BE7  0020               	movlb	0	; select bank0
 17449  1BE8  0866               	movf	_BankIndex,w
 17450  1BE9  00AE               	movwf	___wmul@multiplier
 17451  1BEA  3045               	movlw	69
 17452  1BEB  01AF               	clrf	___wmul@multiplier+1
 17453  1BEC  00B0               	movwf	___wmul@multiplicand
 17454  1BED  01B1               	clrf	___wmul@multiplicand+1
 17455  1BEE  27EB  3198         	fcall	___wmul
 17456  1BF0  3070               	movlw	112
 17457  1BF1                     L11:	
 17458  1BF1  00B6               	movwf	??_MiMAC_ReceivedPacket
 17459  1BF2  3023               	movlw	35
 17460  1BF3  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17461  1BF4  082E               	movf	?___wmul,w
 17462  1BF5  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17463  1BF6  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17464  1BF7  082F               	movf	?___wmul+1,w
 17465  1BF8  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17466  1BF9  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17467  1BFA  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17468  1BFB  0022               	movlb	2	; select bank2
 17469  1BFC  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17470  1BFD  0020               	movlb	0	; select bank0
 17471  1BFE  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17472  1BFF  0022               	movlb	2	; select bank2
 17473  1C00  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17474                           
 17475                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
 17476  1C01  0020               	movlb	0	; select bank0
 17477  1C02  0866               	movf	_BankIndex,w
 17478  1C03  00AE               	movwf	___wmul@multiplier
 17479  1C04  3045               	movlw	69
 17480  1C05  01AF               	clrf	___wmul@multiplier+1
 17481  1C06  00B0               	movwf	___wmul@multiplicand
 17482  1C07  01B1               	clrf	___wmul@multiplicand+1
 17483  1C08  27EB  3198         	fcall	___wmul
 17484  1C0A  3066               	movlw	102
 17485  1C0B  00B6               	movwf	??_MiMAC_ReceivedPacket
 17486  1C0C  3023               	movlw	35
 17487  1C0D  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17488  1C0E  082E               	movf	?___wmul,w
 17489  1C0F  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17490  1C10  0086               	movwf	6
 17491  1C11  082F               	movf	?___wmul+1,w
 17492  1C12  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17493  1C13  0087               	movwf	7
 17494  1C14  0801               	movf	1,w
 17495  1C15  3EEB               	addlw	235
 17496  1C16  0022               	movlb	2	; select bank2
 17497  1C17  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 17498                           
 17499                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
 17500  1C18  0020               	movlb	0	; select bank0
 17501  1C19  0866               	movf	_BankIndex,w
 17502  1C1A  00AE               	movwf	___wmul@multiplier
 17503  1C1B  3045               	movlw	69
 17504  1C1C  01AF               	clrf	___wmul@multiplier+1
 17505  1C1D  00B0               	movwf	___wmul@multiplicand
 17506  1C1E  01B1               	clrf	___wmul@multiplicand+1
 17507  1C1F  27EB  3198         	fcall	___wmul
 17508  1C21  3078               	movlw	120
 17509  1C22  2F17               	goto	L9
 17510  1C23                     l105:	
 17511                           ;drv_mrf_miwi_24j40.c: 454: case 0xCC:
 17512                           
 17513                           
 17514                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
 17515  1C23  0022               	movlb	2	; select bank2
 17516  1C24  17A0               	bsf	_MACRxPacket^(0+256),7
 17517                           
 17518                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
 17519  1C25  0020               	movlb	0	; select bank0
 17520  1C26  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
 17521  1C27  1903               	btfsc	3,2
 17522  1C28  2C90               	goto	l9796
 17523                           
 17524                           ;drv_mrf_miwi_24j40.c: 459: {
 17525                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
 17526  1C29  0866               	movf	_BankIndex,w
 17527  1C2A  00AE               	movwf	___wmul@multiplier
 17528  1C2B  3045               	movlw	69
 17529  1C2C  01AF               	clrf	___wmul@multiplier+1
 17530  1C2D  00B0               	movwf	___wmul@multiplicand
 17531  1C2E  01B1               	clrf	___wmul@multiplicand+1
 17532  1C2F  27EB  3198         	fcall	___wmul
 17533  1C31  306A               	movlw	106
 17534  1C32  00B6               	movwf	??_MiMAC_ReceivedPacket
 17535  1C33  3023               	movlw	35
 17536  1C34  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17537  1C35  082E               	movf	?___wmul,w
 17538  1C36  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17539  1C37  0086               	movwf	6
 17540  1C38  082F               	movf	?___wmul+1,w
 17541  1C39  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17542  1C3A  0087               	movwf	7
 17543  1C3B  0801               	movf	1,w
 17544  1C3C  0022               	movlb	2	; select bank2
 17545  1C3D  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17546                           
 17547                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
 17548  1C3E  0020               	movlb	0	; select bank0
 17549  1C3F  0866               	movf	_BankIndex,w
 17550  1C40  00AE               	movwf	___wmul@multiplier
 17551  1C41  3045               	movlw	69
 17552  1C42  01AF               	clrf	___wmul@multiplier+1
 17553  1C43  00B0               	movwf	___wmul@multiplicand
 17554  1C44  01B1               	clrf	___wmul@multiplicand+1
 17555  1C45  27EB  3198         	fcall	___wmul
 17556  1C47  306B               	movlw	107
 17557  1C48  00B6               	movwf	??_MiMAC_ReceivedPacket
 17558  1C49  3023               	movlw	35
 17559  1C4A  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17560  1C4B  082E               	movf	?___wmul,w
 17561  1C4C  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17562  1C4D  0086               	movwf	6
 17563  1C4E  082F               	movf	?___wmul+1,w
 17564  1C4F  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17565  1C50  0087               	movwf	7
 17566  1C51  0801               	movf	1,w
 17567  1C52  0022               	movlb	2	; select bank2
 17568  1C53  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17569                           
 17570                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
 17571  1C54  0020               	movlb	0	; select bank0
 17572  1C55  0866               	movf	_BankIndex,w
 17573  1C56  00AE               	movwf	___wmul@multiplier
 17574  1C57  3045               	movlw	69
 17575  1C58  01AF               	clrf	___wmul@multiplier+1
 17576  1C59  00B0               	movwf	___wmul@multiplicand
 17577  1C5A  01B1               	clrf	___wmul@multiplicand+1
 17578  1C5B  27EB  3198         	fcall	___wmul
 17579  1C5D  3074               	movlw	116
 17580  1C5E  00B6               	movwf	??_MiMAC_ReceivedPacket
 17581  1C5F  3023               	movlw	35
 17582  1C60  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17583  1C61  082E               	movf	?___wmul,w
 17584  1C62  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17585  1C63  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17586  1C64  082F               	movf	?___wmul+1,w
 17587  1C65  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17588  1C66  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17589  1C67  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17590  1C68  0022               	movlb	2	; select bank2
 17591  1C69  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17592  1C6A  0020               	movlb	0	; select bank0
 17593  1C6B  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17594  1C6C  0022               	movlb	2	; select bank2
 17595  1C6D  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17596                           
 17597                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
 17598  1C6E  0020               	movlb	0	; select bank0
 17599  1C6F  0866               	movf	_BankIndex,w
 17600  1C70  00AE               	movwf	___wmul@multiplier
 17601  1C71  3045               	movlw	69
 17602  1C72  01AF               	clrf	___wmul@multiplier+1
 17603  1C73  00B0               	movwf	___wmul@multiplicand
 17604  1C74  01B1               	clrf	___wmul@multiplicand+1
 17605  1C75  27EB  3198         	fcall	___wmul
 17606  1C77  3066               	movlw	102
 17607  1C78  00B6               	movwf	??_MiMAC_ReceivedPacket
 17608  1C79  3023               	movlw	35
 17609  1C7A  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17610  1C7B  082E               	movf	?___wmul,w
 17611  1C7C  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17612  1C7D  0086               	movwf	6
 17613  1C7E  082F               	movf	?___wmul+1,w
 17614  1C7F  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17615  1C80  0087               	movwf	7
 17616  1C81  0801               	movf	1,w
 17617  1C82  3EE7               	addlw	231
 17618  1C83  0022               	movlb	2	; select bank2
 17619  1C84  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 17620                           
 17621                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
 17622  1C85  0020               	movlb	0	; select bank0
 17623  1C86  0866               	movf	_BankIndex,w
 17624  1C87  00AE               	movwf	___wmul@multiplier
 17625  1C88  3045               	movlw	69
 17626  1C89  01AF               	clrf	___wmul@multiplier+1
 17627  1C8A  00B0               	movwf	___wmul@multiplicand
 17628  1C8B  01B1               	clrf	___wmul@multiplicand+1
 17629  1C8C  27EB  3198         	fcall	___wmul
 17630  1C8E  307C               	movlw	124
 17631  1C8F  2F17               	goto	L9
 17632  1C90                     l9796:	
 17633                           ;drv_mrf_miwi_24j40.c: 468: }
 17634                           
 17635                           
 17636                           ;drv_mrf_miwi_24j40.c: 470: else
 17637                           ;drv_mrf_miwi_24j40.c: 471: {
 17638                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
 17639  1C90  0866               	movf	_BankIndex,w
 17640  1C91  00AE               	movwf	___wmul@multiplier
 17641  1C92  3045               	movlw	69
 17642  1C93  01AF               	clrf	___wmul@multiplier+1
 17643  1C94  00B0               	movwf	___wmul@multiplicand
 17644  1C95  01B1               	clrf	___wmul@multiplicand+1
 17645  1C96  27EB  3198         	fcall	___wmul
 17646  1C98  3074               	movlw	116
 17647  1C99  00B6               	movwf	??_MiMAC_ReceivedPacket
 17648  1C9A  3023               	movlw	35
 17649  1C9B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17650  1C9C  082E               	movf	?___wmul,w
 17651  1C9D  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17652  1C9E  0086               	movwf	6
 17653  1C9F  082F               	movf	?___wmul+1,w
 17654  1CA0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17655  1CA1  0087               	movwf	7
 17656  1CA2  0801               	movf	1,w
 17657  1CA3  0022               	movlb	2	; select bank2
 17658  1CA4  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17659                           
 17660                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
 17661  1CA5  0020               	movlb	0	; select bank0
 17662  1CA6  0866               	movf	_BankIndex,w
 17663  1CA7  00AE               	movwf	___wmul@multiplier
 17664  1CA8  3045               	movlw	69
 17665  1CA9  01AF               	clrf	___wmul@multiplier+1
 17666  1CAA  00B0               	movwf	___wmul@multiplicand
 17667  1CAB  01B1               	clrf	___wmul@multiplicand+1
 17668  1CAC  27EB  3198         	fcall	___wmul
 17669  1CAE  3075               	movlw	117
 17670  1CAF  00B6               	movwf	??_MiMAC_ReceivedPacket
 17671  1CB0  3023               	movlw	35
 17672  1CB1  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17673  1CB2  082E               	movf	?___wmul,w
 17674  1CB3  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17675  1CB4  0086               	movwf	6
 17676  1CB5  082F               	movf	?___wmul+1,w
 17677  1CB6  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17678  1CB7  0087               	movwf	7
 17679  1CB8  0801               	movf	1,w
 17680  1CB9  0022               	movlb	2	; select bank2
 17681  1CBA  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17682                           
 17683                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
 17684  1CBB  0020               	movlb	0	; select bank0
 17685  1CBC  0866               	movf	_BankIndex,w
 17686  1CBD  00AE               	movwf	___wmul@multiplier
 17687  1CBE  3045               	movlw	69
 17688  1CBF  01AF               	clrf	___wmul@multiplier+1
 17689  1CC0  00B0               	movwf	___wmul@multiplicand
 17690  1CC1  01B1               	clrf	___wmul@multiplicand+1
 17691  1CC2  27EB  3198         	fcall	___wmul
 17692  1CC4  3076               	movlw	118
 17693  1CC5  00B6               	movwf	??_MiMAC_ReceivedPacket
 17694  1CC6  3023               	movlw	35
 17695  1CC7  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17696  1CC8  082E               	movf	?___wmul,w
 17697  1CC9  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17698  1CCA  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17699  1CCB  082F               	movf	?___wmul+1,w
 17700  1CCC  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17701  1CCD  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17702  1CCE  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17703  1CCF  0022               	movlb	2	; select bank2
 17704  1CD0  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17705  1CD1  0020               	movlb	0	; select bank0
 17706  1CD2  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17707  1CD3  0022               	movlb	2	; select bank2
 17708  1CD4  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17709                           
 17710                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
 17711  1CD5  0020               	movlb	0	; select bank0
 17712  1CD6  0866               	movf	_BankIndex,w
 17713  1CD7  00AE               	movwf	___wmul@multiplier
 17714  1CD8  3045               	movlw	69
 17715  1CD9  01AF               	clrf	___wmul@multiplier+1
 17716  1CDA  00B0               	movwf	___wmul@multiplicand
 17717  1CDB  01B1               	clrf	___wmul@multiplicand+1
 17718  1CDC  27EB  3198         	fcall	___wmul
 17719  1CDE  3066               	movlw	102
 17720  1CDF  00B6               	movwf	??_MiMAC_ReceivedPacket
 17721  1CE0  3023               	movlw	35
 17722  1CE1  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17723  1CE2  082E               	movf	?___wmul,w
 17724  1CE3  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17725  1CE4  0086               	movwf	6
 17726  1CE5  082F               	movf	?___wmul+1,w
 17727  1CE6  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17728  1CE7  0087               	movwf	7
 17729  1CE8  0801               	movf	1,w
 17730  1CE9  3EE5               	addlw	229
 17731  1CEA  0022               	movlb	2	; select bank2
 17732  1CEB  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 17733                           
 17734                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
 17735  1CEC  0020               	movlb	0	; select bank0
 17736  1CED  0866               	movf	_BankIndex,w
 17737  1CEE  00AE               	movwf	___wmul@multiplier
 17738  1CEF  3045               	movlw	69
 17739  1CF0  01AF               	clrf	___wmul@multiplier+1
 17740  1CF1  00B0               	movwf	___wmul@multiplicand
 17741  1CF2  01B1               	clrf	___wmul@multiplicand+1
 17742  1CF3  27EB  3198         	fcall	___wmul
 17743  1CF5  307E               	movlw	126
 17744  1CF6  2F17               	goto	L9
 17745  1CF7                     l108:	
 17746                           ;drv_mrf_miwi_24j40.c: 481: case 0x80:
 17747                           
 17748                           
 17749                           ;drv_mrf_miwi_24j40.c: 482: {
 17750                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
 17751  1CF7  0022               	movlb	2	; select bank2
 17752  1CF8  1520               	bsf	_MACRxPacket^(0+256),2
 17753                           
 17754                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
 17755  1CF9  17A0               	bsf	_MACRxPacket^(0+256),7
 17756                           
 17757                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
 17758  1CFA  01A8               	clrf	(_MACRxPacket^(0+256)+8)
 17759  1CFB  0AA8               	incf	(_MACRxPacket^(0+256)+8),f
 17760                           
 17761                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
 17762  1CFC  0020               	movlb	0	; select bank0
 17763  1CFD  0866               	movf	_BankIndex,w
 17764  1CFE  00AE               	movwf	___wmul@multiplier
 17765  1CFF  3045               	movlw	69
 17766  1D00  01AF               	clrf	___wmul@multiplier+1
 17767  1D01  00B0               	movwf	___wmul@multiplicand
 17768  1D02  01B1               	clrf	___wmul@multiplicand+1
 17769  1D03  27EB  3198         	fcall	___wmul
 17770  1D05  306A               	movlw	106
 17771  1D06  00B6               	movwf	??_MiMAC_ReceivedPacket
 17772  1D07  3023               	movlw	35
 17773  1D08  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17774  1D09  082E               	movf	?___wmul,w
 17775  1D0A  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17776  1D0B  0086               	movwf	6
 17777  1D0C  082F               	movf	?___wmul+1,w
 17778  1D0D  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17779  1D0E  0087               	movwf	7
 17780  1D0F  0801               	movf	1,w
 17781  1D10  0022               	movlb	2	; select bank2
 17782  1D11  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17783                           
 17784                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
 17785  1D12  0020               	movlb	0	; select bank0
 17786  1D13  0866               	movf	_BankIndex,w
 17787  1D14  00AE               	movwf	___wmul@multiplier
 17788  1D15  3045               	movlw	69
 17789  1D16  01AF               	clrf	___wmul@multiplier+1
 17790  1D17  00B0               	movwf	___wmul@multiplicand
 17791  1D18  01B1               	clrf	___wmul@multiplicand+1
 17792  1D19  27EB  3198         	fcall	___wmul
 17793  1D1B  306B               	movlw	107
 17794  1D1C  00B6               	movwf	??_MiMAC_ReceivedPacket
 17795  1D1D  3023               	movlw	35
 17796  1D1E  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17797  1D1F  082E               	movf	?___wmul,w
 17798  1D20  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17799  1D21  0086               	movwf	6
 17800  1D22  082F               	movf	?___wmul+1,w
 17801  1D23  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17802  1D24  0087               	movwf	7
 17803  1D25  0801               	movf	1,w
 17804  1D26  0022               	movlb	2	; select bank2
 17805  1D27  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17806                           
 17807                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
 17808  1D28  0020               	movlb	0	; select bank0
 17809  1D29  0866               	movf	_BankIndex,w
 17810  1D2A  00AE               	movwf	___wmul@multiplier
 17811  1D2B  3045               	movlw	69
 17812  1D2C  01AF               	clrf	___wmul@multiplier+1
 17813  1D2D  00B0               	movwf	___wmul@multiplicand
 17814  1D2E  01B1               	clrf	___wmul@multiplicand+1
 17815  1D2F  27EB  3198         	fcall	___wmul
 17816  1D31  306C               	movlw	108
 17817  1D32  00B6               	movwf	??_MiMAC_ReceivedPacket
 17818  1D33  3023               	movlw	35
 17819  1D34  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17820  1D35  082E               	movf	?___wmul,w
 17821  1D36  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17822  1D37  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17823  1D38  082F               	movf	?___wmul+1,w
 17824  1D39  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17825  1D3A  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17826  1D3B  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17827  1D3C  0022               	movlb	2	; select bank2
 17828  1D3D  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17829  1D3E  0020               	movlb	0	; select bank0
 17830  1D3F  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17831  1D40  0022               	movlb	2	; select bank2
 17832  1D41  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17833                           
 17834                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
 17835  1D42  0020               	movlb	0	; select bank0
 17836  1D43  0866               	movf	_BankIndex,w
 17837  1D44  00AE               	movwf	___wmul@multiplier
 17838  1D45  3045               	movlw	69
 17839  1D46  01AF               	clrf	___wmul@multiplier+1
 17840  1D47  00B0               	movwf	___wmul@multiplicand
 17841  1D48  01B1               	clrf	___wmul@multiplicand+1
 17842  1D49  27EB  3198         	fcall	___wmul
 17843  1D4B  3066               	movlw	102
 17844  1D4C  00B6               	movwf	??_MiMAC_ReceivedPacket
 17845  1D4D  3023               	movlw	35
 17846  1D4E  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17847  1D4F  082E               	movf	?___wmul,w
 17848  1D50  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17849  1D51  0086               	movwf	6
 17850  1D52  082F               	movf	?___wmul+1,w
 17851  1D53  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17852  1D54  0087               	movwf	7
 17853  1D55  0801               	movf	1,w
 17854  1D56  3EF5               	addlw	245
 17855  1D57  2F0B               	goto	L12
 17856  1D58                     l9808:	
 17857                           ;drv_mrf_miwi_24j40.c: 491: }
 17858                           ;drv_mrf_miwi_24j40.c: 492: break;
 17859                           
 17860                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
 17861                           
 17862                           
 17863                           ;drv_mrf_miwi_24j40.c: 495: {
 17864                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
 17865  1D58  0866               	movf	_BankIndex,w
 17866  1D59  00AE               	movwf	___wmul@multiplier
 17867  1D5A  3045               	movlw	69
 17868  1D5B  01AF               	clrf	___wmul@multiplier+1
 17869  1D5C  00B0               	movwf	___wmul@multiplicand
 17870  1D5D  01B1               	clrf	___wmul@multiplicand+1
 17871  1D5E  27EB  3198         	fcall	___wmul
 17872  1D60  306C               	movlw	108
 17873  1D61  00B6               	movwf	??_MiMAC_ReceivedPacket
 17874  1D62  3023               	movlw	35
 17875  1D63  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17876  1D64  082E               	movf	?___wmul,w
 17877  1D65  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17878  1D66  0086               	movwf	6
 17879  1D67  082F               	movf	?___wmul+1,w
 17880  1D68  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17881  1D69  0087               	movwf	7
 17882  1D6A  0F01               	incfsz	1,w
 17883  1D6B  2D82               	goto	l110
 17884  1D6C  0866               	movf	_BankIndex,w
 17885  1D6D  00AE               	movwf	___wmul@multiplier
 17886  1D6E  3045               	movlw	69
 17887  1D6F  01AF               	clrf	___wmul@multiplier+1
 17888  1D70  00B0               	movwf	___wmul@multiplicand
 17889  1D71  01B1               	clrf	___wmul@multiplicand+1
 17890  1D72  27EB  3198         	fcall	___wmul
 17891  1D74  306D               	movlw	109
 17892  1D75  00B6               	movwf	??_MiMAC_ReceivedPacket
 17893  1D76  3023               	movlw	35
 17894  1D77  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17895  1D78  082E               	movf	?___wmul,w
 17896  1D79  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17897  1D7A  0086               	movwf	6
 17898  1D7B  082F               	movf	?___wmul+1,w
 17899  1D7C  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17900  1D7D  0087               	movwf	7
 17901  1D7E  0F01               	incfsz	1,w
 17902  1D7F  2D82               	goto	l110
 17903                           
 17904                           ;drv_mrf_miwi_24j40.c: 497: {
 17905                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
 17906  1D80  0022               	movlb	2	; select bank2
 17907  1D81  1520               	bsf	_MACRxPacket^(0+256),2
 17908  1D82                     l110:	
 17909                           
 17910                           ;drv_mrf_miwi_24j40.c: 499: }
 17911                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
 17912  1D82  0022               	movlb	2	; select bank2
 17913  1D83  17A0               	bsf	_MACRxPacket^(0+256),7
 17914                           
 17915                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
 17916  1D84  01A8               	clrf	(_MACRxPacket^(0+256)+8)
 17917  1D85  0AA8               	incf	(_MACRxPacket^(0+256)+8),f
 17918                           
 17919                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
 17920  1D86  0020               	movlb	0	; select bank0
 17921  1D87  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
 17922  1D88  1D03               	btfss	3,2
 17923  1D89  2DF1               	goto	l9822
 17924                           
 17925                           ;drv_mrf_miwi_24j40.c: 504: {
 17926                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
 17927  1D8A  0866               	movf	_BankIndex,w
 17928  1D8B  00AE               	movwf	___wmul@multiplier
 17929  1D8C  3045               	movlw	69
 17930  1D8D  01AF               	clrf	___wmul@multiplier+1
 17931  1D8E  00B0               	movwf	___wmul@multiplicand
 17932  1D8F  01B1               	clrf	___wmul@multiplicand+1
 17933  1D90  27EB  3198         	fcall	___wmul
 17934  1D92  306E               	movlw	110
 17935  1D93  00B6               	movwf	??_MiMAC_ReceivedPacket
 17936  1D94  3023               	movlw	35
 17937  1D95  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17938  1D96  082E               	movf	?___wmul,w
 17939  1D97  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17940  1D98  0086               	movwf	6
 17941  1D99  082F               	movf	?___wmul+1,w
 17942  1D9A  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17943  1D9B  0087               	movwf	7
 17944  1D9C  0801               	movf	1,w
 17945  1D9D  0022               	movlb	2	; select bank2
 17946  1D9E  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 17947                           
 17948                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
 17949  1D9F  0020               	movlb	0	; select bank0
 17950  1DA0  0866               	movf	_BankIndex,w
 17951  1DA1  00AE               	movwf	___wmul@multiplier
 17952  1DA2  3045               	movlw	69
 17953  1DA3  01AF               	clrf	___wmul@multiplier+1
 17954  1DA4  00B0               	movwf	___wmul@multiplicand
 17955  1DA5  01B1               	clrf	___wmul@multiplicand+1
 17956  1DA6  27EB  3198         	fcall	___wmul
 17957  1DA8  306F               	movlw	111
 17958  1DA9  00B6               	movwf	??_MiMAC_ReceivedPacket
 17959  1DAA  3023               	movlw	35
 17960  1DAB  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17961  1DAC  082E               	movf	?___wmul,w
 17962  1DAD  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17963  1DAE  0086               	movwf	6
 17964  1DAF  082F               	movf	?___wmul+1,w
 17965  1DB0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17966  1DB1  0087               	movwf	7
 17967  1DB2  0801               	movf	1,w
 17968  1DB3  0022               	movlb	2	; select bank2
 17969  1DB4  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 17970                           
 17971                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
 17972  1DB5  0020               	movlb	0	; select bank0
 17973  1DB6  0866               	movf	_BankIndex,w
 17974  1DB7  00AE               	movwf	___wmul@multiplier
 17975  1DB8  3045               	movlw	69
 17976  1DB9  01AF               	clrf	___wmul@multiplier+1
 17977  1DBA  00B0               	movwf	___wmul@multiplicand
 17978  1DBB  01B1               	clrf	___wmul@multiplicand+1
 17979  1DBC  27EB  3198         	fcall	___wmul
 17980  1DBE  3070               	movlw	112
 17981  1DBF  00B6               	movwf	??_MiMAC_ReceivedPacket
 17982  1DC0  3023               	movlw	35
 17983  1DC1  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 17984  1DC2  082E               	movf	?___wmul,w
 17985  1DC3  0736               	addwf	??_MiMAC_ReceivedPacket,w
 17986  1DC4  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 17987  1DC5  082F               	movf	?___wmul+1,w
 17988  1DC6  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 17989  1DC7  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 17990  1DC8  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 17991  1DC9  0022               	movlb	2	; select bank2
 17992  1DCA  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 17993  1DCB  0020               	movlb	0	; select bank0
 17994  1DCC  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 17995  1DCD  0022               	movlb	2	; select bank2
 17996  1DCE  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 17997                           
 17998                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
 17999  1DCF  0020               	movlb	0	; select bank0
 18000  1DD0  0866               	movf	_BankIndex,w
 18001  1DD1  00AE               	movwf	___wmul@multiplier
 18002  1DD2  3045               	movlw	69
 18003  1DD3  01AF               	clrf	___wmul@multiplier+1
 18004  1DD4  00B0               	movwf	___wmul@multiplicand
 18005  1DD5  01B1               	clrf	___wmul@multiplicand+1
 18006  1DD6  27EB  3198         	fcall	___wmul
 18007  1DD8  3066               	movlw	102
 18008  1DD9  00B6               	movwf	??_MiMAC_ReceivedPacket
 18009  1DDA  3023               	movlw	35
 18010  1DDB  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18011  1DDC  082E               	movf	?___wmul,w
 18012  1DDD  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18013  1DDE  0086               	movwf	6
 18014  1DDF  082F               	movf	?___wmul+1,w
 18015  1DE0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18016  1DE1  0087               	movwf	7
 18017  1DE2  0801               	movf	1,w
 18018  1DE3  3EF1               	addlw	241
 18019  1DE4  0022               	movlb	2	; select bank2
 18020  1DE5  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 18021                           
 18022                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
 18023  1DE6  0020               	movlb	0	; select bank0
 18024  1DE7  0866               	movf	_BankIndex,w
 18025  1DE8  00AE               	movwf	___wmul@multiplier
 18026  1DE9  3045               	movlw	69
 18027  1DEA  01AF               	clrf	___wmul@multiplier+1
 18028  1DEB  00B0               	movwf	___wmul@multiplicand
 18029  1DEC  01B1               	clrf	___wmul@multiplicand+1
 18030  1DED  27EB  3198         	fcall	___wmul
 18031  1DEF  3072               	movlw	114
 18032  1DF0  2F17               	goto	L9
 18033  1DF1                     l9822:	
 18034                           ;drv_mrf_miwi_24j40.c: 510: } else
 18035                           
 18036                           
 18037                           ;drv_mrf_miwi_24j40.c: 512: {
 18038                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
 18039  1DF1  0866               	movf	_BankIndex,w
 18040  1DF2  00AE               	movwf	___wmul@multiplier
 18041  1DF3  3045               	movlw	69
 18042  1DF4  01AF               	clrf	___wmul@multiplier+1
 18043  1DF5  00B0               	movwf	___wmul@multiplicand
 18044  1DF6  01B1               	clrf	___wmul@multiplicand+1
 18045  1DF7  27EB  3198         	fcall	___wmul
 18046  1DF9  306A               	movlw	106
 18047  1DFA  00B6               	movwf	??_MiMAC_ReceivedPacket
 18048  1DFB  3023               	movlw	35
 18049  1DFC  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18050  1DFD  082E               	movf	?___wmul,w
 18051  1DFE  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18052  1DFF  0086               	movwf	6
 18053  1E00  082F               	movf	?___wmul+1,w
 18054  1E01  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18055  1E02  0087               	movwf	7
 18056  1E03  0801               	movf	1,w
 18057  1E04  0022               	movlb	2	; select bank2
 18058  1E05  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 18059                           
 18060                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
 18061  1E06  0020               	movlb	0	; select bank0
 18062  1E07  0866               	movf	_BankIndex,w
 18063  1E08  00AE               	movwf	___wmul@multiplier
 18064  1E09  3045               	movlw	69
 18065  1E0A  01AF               	clrf	___wmul@multiplier+1
 18066  1E0B  00B0               	movwf	___wmul@multiplicand
 18067  1E0C  01B1               	clrf	___wmul@multiplicand+1
 18068  1E0D  27EB  3198         	fcall	___wmul
 18069  1E0F  306B               	movlw	107
 18070  1E10  00B6               	movwf	??_MiMAC_ReceivedPacket
 18071  1E11  3023               	movlw	35
 18072  1E12  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18073  1E13  082E               	movf	?___wmul,w
 18074  1E14  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18075  1E15  0086               	movwf	6
 18076  1E16  082F               	movf	?___wmul+1,w
 18077  1E17  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18078  1E18  0087               	movwf	7
 18079  1E19  0801               	movf	1,w
 18080  1E1A  0022               	movlb	2	; select bank2
 18081  1E1B  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 18082                           
 18083                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
 18084  1E1C  0020               	movlb	0	; select bank0
 18085  1E1D  0866               	movf	_BankIndex,w
 18086  1E1E  00AE               	movwf	___wmul@multiplier
 18087  1E1F  3045               	movlw	69
 18088  1E20  01AF               	clrf	___wmul@multiplier+1
 18089  1E21  00B0               	movwf	___wmul@multiplicand
 18090  1E22  01B1               	clrf	___wmul@multiplicand+1
 18091  1E23  27EB  3198         	fcall	___wmul
 18092  1E25  306E               	movlw	110
 18093  1E26  00B6               	movwf	??_MiMAC_ReceivedPacket
 18094  1E27  3023               	movlw	35
 18095  1E28  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18096  1E29  082E               	movf	?___wmul,w
 18097  1E2A  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18098  1E2B  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 18099  1E2C  082F               	movf	?___wmul+1,w
 18100  1E2D  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18101  1E2E  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 18102  1E2F  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 18103  1E30  0022               	movlb	2	; select bank2
 18104  1E31  00A1               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 18105  1E32  0020               	movlb	0	; select bank0
 18106  1E33  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 18107  1E34  0022               	movlb	2	; select bank2
 18108  1E35  00A2               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 18109                           
 18110                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
 18111  1E36  0020               	movlb	0	; select bank0
 18112  1E37  0866               	movf	_BankIndex,w
 18113  1E38  00AE               	movwf	___wmul@multiplier
 18114  1E39  3045               	movlw	69
 18115  1E3A  01AF               	clrf	___wmul@multiplier+1
 18116  1E3B  00B0               	movwf	___wmul@multiplicand
 18117  1E3C  01B1               	clrf	___wmul@multiplicand+1
 18118  1E3D  27EB  3198         	fcall	___wmul
 18119  1E3F  3066               	movlw	102
 18120  1E40  00B6               	movwf	??_MiMAC_ReceivedPacket
 18121  1E41  3023               	movlw	35
 18122  1E42  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18123  1E43  082E               	movf	?___wmul,w
 18124  1E44  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18125  1E45  0086               	movwf	6
 18126  1E46  082F               	movf	?___wmul+1,w
 18127  1E47  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18128  1E48  0087               	movwf	7
 18129  1E49  0801               	movf	1,w
 18130  1E4A  3EF3               	addlw	243
 18131  1E4B  0022               	movlb	2	; select bank2
 18132  1E4C  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 18133                           
 18134                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
 18135  1E4D  0020               	movlb	0	; select bank0
 18136  1E4E  0866               	movf	_BankIndex,w
 18137  1E4F  00AE               	movwf	___wmul@multiplier
 18138  1E50  3045               	movlw	69
 18139  1E51  01AF               	clrf	___wmul@multiplier+1
 18140  1E52  00B0               	movwf	___wmul@multiplicand
 18141  1E53  01B1               	clrf	___wmul@multiplicand+1
 18142  1E54  27EB  3198         	fcall	___wmul
 18143  1E56  3070               	movlw	112
 18144  1E57  2F17               	goto	L9
 18145  1E58                     l113:	
 18146                           ;drv_mrf_miwi_24j40.c: 522: case 0x8C:
 18147                           
 18148                           
 18149                           ;drv_mrf_miwi_24j40.c: 523: {
 18150                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
 18151  1E58  0022               	movlb	2	; select bank2
 18152  1E59  17A0               	bsf	_MACRxPacket^(0+256),7
 18153                           
 18154                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
 18155  1E5A  01A8               	clrf	(_MACRxPacket^(0+256)+8)
 18156  1E5B  0AA8               	incf	(_MACRxPacket^(0+256)+8),f
 18157                           
 18158                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
 18159  1E5C  0020               	movlb	0	; select bank0
 18160  1E5D  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
 18161  1E5E  1903               	btfsc	3,2
 18162  1E5F  2E96               	goto	l9836
 18163                           
 18164                           ;drv_mrf_miwi_24j40.c: 529: {
 18165                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
 18166  1E60  0866               	movf	_BankIndex,w
 18167  1E61  00AE               	movwf	___wmul@multiplier
 18168  1E62  3045               	movlw	69
 18169  1E63  01AF               	clrf	___wmul@multiplier+1
 18170  1E64  00B0               	movwf	___wmul@multiplicand
 18171  1E65  01B1               	clrf	___wmul@multiplicand+1
 18172  1E66  27EB  3198         	fcall	___wmul
 18173  1E68  306A               	movlw	106
 18174  1E69  00B6               	movwf	??_MiMAC_ReceivedPacket
 18175  1E6A  3023               	movlw	35
 18176  1E6B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18177  1E6C  082E               	movf	?___wmul,w
 18178  1E6D  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18179  1E6E  0086               	movwf	6
 18180  1E6F  082F               	movf	?___wmul+1,w
 18181  1E70  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18182  1E71  0087               	movwf	7
 18183  1E72  0801               	movf	1,w
 18184  1E73  0022               	movlb	2	; select bank2
 18185  1E74  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 18186                           
 18187                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
 18188  1E75  0020               	movlb	0	; select bank0
 18189  1E76  0866               	movf	_BankIndex,w
 18190  1E77  00AE               	movwf	___wmul@multiplier
 18191  1E78  3045               	movlw	69
 18192  1E79  01AF               	clrf	___wmul@multiplier+1
 18193  1E7A  00B0               	movwf	___wmul@multiplicand
 18194  1E7B  01B1               	clrf	___wmul@multiplicand+1
 18195  1E7C  27EB  3198         	fcall	___wmul
 18196  1E7E  306B               	movlw	107
 18197  1E7F  00B6               	movwf	??_MiMAC_ReceivedPacket
 18198  1E80  3023               	movlw	35
 18199  1E81  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18200  1E82  082E               	movf	?___wmul,w
 18201  1E83  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18202  1E84  0086               	movwf	6
 18203  1E85  082F               	movf	?___wmul+1,w
 18204  1E86  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18205  1E87  0087               	movwf	7
 18206  1E88  0801               	movf	1,w
 18207  1E89  0022               	movlb	2	; select bank2
 18208  1E8A  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 18209                           
 18210                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
 18211  1E8B  0020               	movlb	0	; select bank0
 18212  1E8C  0866               	movf	_BankIndex,w
 18213  1E8D  00AE               	movwf	___wmul@multiplier
 18214  1E8E  3045               	movlw	69
 18215  1E8F  01AF               	clrf	___wmul@multiplier+1
 18216  1E90  00B0               	movwf	___wmul@multiplicand
 18217  1E91  01B1               	clrf	___wmul@multiplicand+1
 18218  1E92  27EB  3198         	fcall	___wmul
 18219  1E94  3073               	movlw	115
 18220  1E95  2B8A               	goto	L10
 18221  1E96                     l9836:	
 18222                           
 18223                           ;drv_mrf_miwi_24j40.c: 540: else
 18224                           ;drv_mrf_miwi_24j40.c: 541: {
 18225                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
 18226  1E96  0866               	movf	_BankIndex,w
 18227  1E97  00AE               	movwf	___wmul@multiplier
 18228  1E98  3045               	movlw	69
 18229  1E99  01AF               	clrf	___wmul@multiplier+1
 18230  1E9A  00B0               	movwf	___wmul@multiplicand
 18231  1E9B  01B1               	clrf	___wmul@multiplicand+1
 18232  1E9C  27EB  3198         	fcall	___wmul
 18233  1E9E  3073               	movlw	115
 18234  1E9F  00B6               	movwf	??_MiMAC_ReceivedPacket
 18235  1EA0  3023               	movlw	35
 18236  1EA1  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18237  1EA2  082E               	movf	?___wmul,w
 18238  1EA3  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18239  1EA4  0086               	movwf	6
 18240  1EA5  082F               	movf	?___wmul+1,w
 18241  1EA6  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18242  1EA7  0087               	movwf	7
 18243  1EA8  0801               	movf	1,w
 18244  1EA9  0022               	movlb	2	; select bank2
 18245  1EAA  00A9               	movwf	(_MACRxPacket^(0+256)+9)
 18246                           
 18247                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
 18248  1EAB  0020               	movlb	0	; select bank0
 18249  1EAC  0866               	movf	_BankIndex,w
 18250  1EAD  00AE               	movwf	___wmul@multiplier
 18251  1EAE  3045               	movlw	69
 18252  1EAF  01AF               	clrf	___wmul@multiplier+1
 18253  1EB0  00B0               	movwf	___wmul@multiplicand
 18254  1EB1  01B1               	clrf	___wmul@multiplicand+1
 18255  1EB2  27EB  3198         	fcall	___wmul
 18256  1EB4  3074               	movlw	116
 18257  1EB5  00B6               	movwf	??_MiMAC_ReceivedPacket
 18258  1EB6  3023               	movlw	35
 18259  1EB7  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18260  1EB8  082E               	movf	?___wmul,w
 18261  1EB9  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18262  1EBA  0086               	movwf	6
 18263  1EBB  082F               	movf	?___wmul+1,w
 18264  1EBC  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18265  1EBD  0087               	movwf	7
 18266  1EBE  0801               	movf	1,w
 18267  1EBF  0022               	movlb	2	; select bank2
 18268  1EC0  00AA               	movwf	(_MACRxPacket^(0+256)+10)
 18269                           
 18270                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
 18271  1EC1  0020               	movlb	0	; select bank0
 18272  1EC2  0866               	movf	_BankIndex,w
 18273  1EC3  00AE               	movwf	___wmul@multiplier
 18274  1EC4  3045               	movlw	69
 18275  1EC5  01AF               	clrf	___wmul@multiplier+1
 18276  1EC6  00B0               	movwf	___wmul@multiplicand
 18277  1EC7  01B1               	clrf	___wmul@multiplicand+1
 18278  1EC8  27EB  3198         	fcall	___wmul
 18279  1ECA  3075               	movlw	117
 18280  1ECB  2BF1               	goto	L11
 18281  1ECC                     l9842:	
 18282                           
 18283                           ;drv_mrf_miwi_24j40.c: 554: {
 18284                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
 18285  1ECC  0866               	movf	_BankIndex,w
 18286  1ECD  00AE               	movwf	___wmul@multiplier
 18287  1ECE  3045               	movlw	69
 18288  1ECF  01AF               	clrf	___wmul@multiplier+1
 18289  1ED0  00B0               	movwf	___wmul@multiplicand
 18290  1ED1  01B1               	clrf	___wmul@multiplicand+1
 18291  1ED2  27EB  3198         	fcall	___wmul
 18292  1ED4  306C               	movlw	108
 18293  1ED5  00B6               	movwf	??_MiMAC_ReceivedPacket
 18294  1ED6  3023               	movlw	35
 18295  1ED7  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18296  1ED8  082E               	movf	?___wmul,w
 18297  1ED9  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18298  1EDA  0086               	movwf	6
 18299  1EDB  082F               	movf	?___wmul+1,w
 18300  1EDC  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18301  1EDD  0087               	movwf	7
 18302  1EDE  0F01               	incfsz	1,w
 18303  1EDF  2EF6               	goto	l9848
 18304  1EE0  0866               	movf	_BankIndex,w
 18305  1EE1  00AE               	movwf	___wmul@multiplier
 18306  1EE2  3045               	movlw	69
 18307  1EE3  01AF               	clrf	___wmul@multiplier+1
 18308  1EE4  00B0               	movwf	___wmul@multiplicand
 18309  1EE5  01B1               	clrf	___wmul@multiplicand+1
 18310  1EE6  27EB  3198         	fcall	___wmul
 18311  1EE8  306D               	movlw	109
 18312  1EE9  00B6               	movwf	??_MiMAC_ReceivedPacket
 18313  1EEA  3023               	movlw	35
 18314  1EEB  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18315  1EEC  082E               	movf	?___wmul,w
 18316  1EED  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18317  1EEE  0086               	movwf	6
 18318  1EEF  082F               	movf	?___wmul+1,w
 18319  1EF0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18320  1EF1  0087               	movwf	7
 18321  1EF2  0F01               	incfsz	1,w
 18322  1EF3  2EF6               	goto	l9848
 18323                           
 18324                           ;drv_mrf_miwi_24j40.c: 556: {
 18325                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
 18326  1EF4  0022               	movlb	2	; select bank2
 18327  1EF5  1520               	bsf	_MACRxPacket^(0+256),2
 18328  1EF6                     l9848:	
 18329                           
 18330                           ;drv_mrf_miwi_24j40.c: 558: }
 18331                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
 18332  1EF6  0020               	movlb	0	; select bank0
 18333  1EF7  0866               	movf	_BankIndex,w
 18334  1EF8  00AE               	movwf	___wmul@multiplier
 18335  1EF9  3045               	movlw	69
 18336  1EFA  01AF               	clrf	___wmul@multiplier+1
 18337  1EFB  00B0               	movwf	___wmul@multiplicand
 18338  1EFC  01B1               	clrf	___wmul@multiplicand+1
 18339  1EFD  27EB  3198         	fcall	___wmul
 18340  1EFF  3066               	movlw	102
 18341  1F00  00B6               	movwf	??_MiMAC_ReceivedPacket
 18342  1F01  3023               	movlw	35
 18343  1F02  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18344  1F03  082E               	movf	?___wmul,w
 18345  1F04  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18346  1F05  0086               	movwf	6
 18347  1F06  082F               	movf	?___wmul+1,w
 18348  1F07  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18349  1F08  0087               	movwf	7
 18350  1F09  0801               	movf	1,w
 18351  1F0A  3EF6               	addlw	246
 18352  1F0B                     L12:	
 18353  1F0B  0022               	movlb	2	; select bank2
 18354  1F0C  00A5               	movwf	(_MACRxPacket^(0+256)+5)
 18355                           
 18356                           ;drv_mrf_miwi_24j40.c: 560: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
 18357  1F0D  0020               	movlb	0	; select bank0
 18358  1F0E  0866               	movf	_BankIndex,w
 18359  1F0F  00AE               	movwf	___wmul@multiplier
 18360  1F10  3045               	movlw	69
 18361  1F11  01AF               	clrf	___wmul@multiplier+1
 18362  1F12  00B0               	movwf	___wmul@multiplicand
 18363  1F13  01B1               	clrf	___wmul@multiplicand+1
 18364  1F14  27EB  3198         	fcall	___wmul
 18365  1F16  306E               	movlw	110
 18366  1F17                     L9:	
 18367  1F17  00B6               	movwf	??_MiMAC_ReceivedPacket
 18368  1F18  3023               	movlw	35
 18369  1F19  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18370  1F1A  082E               	movf	?___wmul,w
 18371  1F1B  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18372  1F1C  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 18373  1F1D  082F               	movf	?___wmul+1,w
 18374  1F1E  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18375  1F1F  00B9               	movwf	??_MiMAC_ReceivedPacket+3
 18376  1F20  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 18377  1F21  0022               	movlb	2	; select bank2
 18378  1F22  00A3               	movwf	(low ((_MACRxPacket| (0+256)+3)))^0
 18379  1F23  0020               	movlb	0	; select bank0
 18380  1F24  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 18381  1F25  0022               	movlb	2	; select bank2
 18382  1F26  00A4               	movwf	((low ((_MACRxPacket| (0+256)+3))+1))^0
 18383                           
 18384                           ;drv_mrf_miwi_24j40.c: 561: }
 18385                           ;drv_mrf_miwi_24j40.c: 562: break;
 18386  1F27  2F3F               	goto	l9862
 18387  1F28                     l9852:	
 18388                           
 18389                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
 18390  1F28  3197  2770         	fcall	_MiMAC_DiscardPacket
 18391                           
 18392                           ;drv_mrf_miwi_24j40.c: 568: return 0;
 18393  1F2A  3400               	retlw	0
 18394  1F2B                     l9860:	
 18395  1F2B  083E               	movf	MiMAC_ReceivedPacket@addrMode,w
 18396                           
 18397                           ; Switch size 1, requested type "speed"
 18398                           ; Number of cases is 6, Range of values is 8 to 204
 18399                           ; switch strategies available:
 18400                           ; Name         Instructions Cycles
 18401                           ; simple_byte           19    10 (average)
 18402                           ; jumptable            263     9 (fixed)
 18403                           ;	Chosen strategy is simple_byte
 18404  1F2C  3A08               	xorlw	8	; case 8
 18405  1F2D  1903               	skipnz
 18406  1F2E  2ECC               	goto	l9842
 18407  1F2F  3A88               	xorlw	136	; case 128
 18408  1F30  1903               	skipnz
 18409  1F31  2CF7               	goto	l108
 18410  1F32  3A08               	xorlw	8	; case 136
 18411  1F33  1903               	skipnz
 18412  1F34  2D58               	goto	l9808
 18413  1F35  3A04               	xorlw	4	; case 140
 18414  1F36  1903               	skipnz
 18415  1F37  2E58               	goto	l113
 18416  1F38  3A44               	xorlw	68	; case 200
 18417  1F39  1903               	skipnz
 18418  1F3A  2B25               	goto	l9768
 18419  1F3B  3A04               	xorlw	4	; case 204
 18420  1F3C  1903               	skipnz
 18421  1F3D  2C23               	goto	l105
 18422  1F3E  2F28               	goto	l9852
 18423  1F3F                     l9862:	
 18424                           
 18425                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
 18426  1F3F  0020               	movlb	0	; select bank0
 18427  1F40  0866               	movf	_BankIndex,w
 18428  1F41  00AE               	movwf	___wmul@multiplier
 18429  1F42  3045               	movlw	69
 18430  1F43  01AF               	clrf	___wmul@multiplier+1
 18431  1F44  00B0               	movwf	___wmul@multiplicand
 18432  1F45  01B1               	clrf	___wmul@multiplicand+1
 18433  1F46  27EB  3198         	fcall	___wmul
 18434  1F48  3067               	movlw	103
 18435  1F49  00B6               	movwf	??_MiMAC_ReceivedPacket
 18436  1F4A  3023               	movlw	35
 18437  1F4B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18438  1F4C  082E               	movf	?___wmul,w
 18439  1F4D  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18440  1F4E  0086               	movwf	6
 18441  1F4F  082F               	movf	?___wmul+1,w
 18442  1F50  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18443  1F51  0087               	movwf	7
 18444  1F52  1981               	btfsc	1,3
 18445  1F53  2F28               	goto	l9852
 18446  1F54  2F63               	goto	l9884
 18447  1F55                     l9870:	
 18448                           
 18449                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
 18450  1F55  30FC               	movlw	-4
 18451  1F56  0022               	movlb	2	; select bank2
 18452  1F57  05A0               	andwf	_MACRxPacket^(0+256),f
 18453                           
 18454                           ;drv_mrf_miwi_24j40.c: 636: break;
 18455  1F58  2F89               	goto	l9886
 18456  1F59                     l9872:	
 18457                           
 18458                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
 18459  1F59  0022               	movlb	2	; select bank2
 18460  1F5A  0820               	movf	_MACRxPacket^(0+256),w
 18461  1F5B  39FC               	andlw	-4
 18462  1F5C  3801               	iorlw	1
 18463  1F5D  00A0               	movwf	_MACRxPacket^(0+256)
 18464                           
 18465                           ;drv_mrf_miwi_24j40.c: 639: break;
 18466  1F5E  2F89               	goto	l9886
 18467  1F5F                     l9874:	
 18468                           
 18469                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
 18470  1F5F  3003               	movlw	3
 18471  1F60  0022               	movlb	2	; select bank2
 18472  1F61  04A0               	iorwf	_MACRxPacket^(0+256),f
 18473                           
 18474                           ;drv_mrf_miwi_24j40.c: 643: break;
 18475  1F62  2F89               	goto	l9886
 18476  1F63                     l9884:	
 18477  1F63  0866               	movf	_BankIndex,w
 18478  1F64  00AE               	movwf	___wmul@multiplier
 18479  1F65  3045               	movlw	69
 18480  1F66  01AF               	clrf	___wmul@multiplier+1
 18481  1F67  00B0               	movwf	___wmul@multiplicand
 18482  1F68  01B1               	clrf	___wmul@multiplicand+1
 18483  1F69  27EB  3198         	fcall	___wmul
 18484  1F6B  3067               	movlw	103
 18485  1F6C  00B6               	movwf	??_MiMAC_ReceivedPacket
 18486  1F6D  3023               	movlw	35
 18487  1F6E  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18488  1F6F  082E               	movf	?___wmul,w
 18489  1F70  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18490  1F71  0086               	movwf	6
 18491  1F72  082F               	movf	?___wmul+1,w
 18492  1F73  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18493  1F74  0087               	movwf	7
 18494  1F75  0801               	movf	1,w
 18495  1F76  3907               	andlw	7
 18496  1F77  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 18497  1F78  01B9               	clrf	??_MiMAC_ReceivedPacket+3
 18498                           
 18499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18500                           ; Switch size 1, requested type "speed"
 18501                           ; Number of cases is 1, Range of values is 0 to 0
 18502                           ; switch strategies available:
 18503                           ; Name         Instructions Cycles
 18504                           ; simple_byte            4     3 (average)
 18505                           ; direct_byte            8     6 (fixed)
 18506                           ; jumptable            260     6 (fixed)
 18507                           ;	Chosen strategy is simple_byte
 18508  1F79  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 18509  1F7A  3A00               	xorlw	0	; case 0
 18510  1F7B  1903               	skipnz
 18511  1F7C  2F7E               	goto	l11450
 18512  1F7D  2F28               	goto	l9852
 18513  1F7E                     l11450:	
 18514                           
 18515                           ; Switch size 1, requested type "speed"
 18516                           ; Number of cases is 3, Range of values is 0 to 3
 18517                           ; switch strategies available:
 18518                           ; Name         Instructions Cycles
 18519                           ; simple_byte           10     6 (average)
 18520                           ; direct_byte           14     6 (fixed)
 18521                           ; jumptable            260     6 (fixed)
 18522                           ;	Chosen strategy is simple_byte
 18523  1F7E  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 18524  1F7F  3A00               	xorlw	0	; case 0
 18525  1F80  1903               	skipnz
 18526  1F81  2F5F               	goto	l9874
 18527  1F82  3A01               	xorlw	1	; case 1
 18528  1F83  1903               	skipnz
 18529  1F84  2F55               	goto	l9870
 18530  1F85  3A02               	xorlw	2	; case 3
 18531  1F86  1903               	skipnz
 18532  1F87  2F59               	goto	l9872
 18533  1F88  2F28               	goto	l9852
 18534  1F89                     l9886:	
 18535                           
 18536                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
 18537  1F89  0020               	movlb	0	; select bank0
 18538  1F8A  0866               	movf	_BankIndex,w
 18539  1F8B  00AE               	movwf	___wmul@multiplier
 18540  1F8C  3045               	movlw	69
 18541  1F8D  01AF               	clrf	___wmul@multiplier+1
 18542  1F8E  00B0               	movwf	___wmul@multiplicand
 18543  1F8F  01B1               	clrf	___wmul@multiplicand+1
 18544  1F90  27EB  3198         	fcall	___wmul
 18545  1F92  3066               	movlw	102
 18546  1F93  00B6               	movwf	??_MiMAC_ReceivedPacket
 18547  1F94  3023               	movlw	35
 18548  1F95  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18549  1F96  082E               	movf	?___wmul,w
 18550  1F97  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18551  1F98  0086               	movwf	6
 18552  1F99  082F               	movf	?___wmul+1,w
 18553  1F9A  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18554  1F9B  0087               	movwf	7
 18555  1F9C  0801               	movf	1,w
 18556  1F9D  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 18557  1F9E  01B9               	clrf	??_MiMAC_ReceivedPacket+3
 18558  1F9F  0866               	movf	_BankIndex,w
 18559  1FA0  00AE               	movwf	___wmul@multiplier
 18560  1FA1  3045               	movlw	69
 18561  1FA2  01AF               	clrf	___wmul@multiplier+1
 18562  1FA3  00B0               	movwf	___wmul@multiplicand
 18563  1FA4  01B1               	clrf	___wmul@multiplicand+1
 18564  1FA5  27EB  3198         	fcall	___wmul
 18565  1FA7  3065               	movlw	101
 18566  1FA8  00BA               	movwf	??_MiMAC_ReceivedPacket+4
 18567  1FA9  3023               	movlw	35
 18568  1FAA  00BB               	movwf	??_MiMAC_ReceivedPacket+5
 18569  1FAB  082E               	movf	?___wmul,w
 18570  1FAC  073A               	addwf	??_MiMAC_ReceivedPacket+4,w
 18571  1FAD  00BC               	movwf	??_MiMAC_ReceivedPacket+6
 18572  1FAE  082F               	movf	?___wmul+1,w
 18573  1FAF  3D3B               	addwfc	??_MiMAC_ReceivedPacket+5,w
 18574  1FB0  00BD               	movwf	??_MiMAC_ReceivedPacket+7
 18575  1FB1  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 18576  1FB2  073C               	addwf	??_MiMAC_ReceivedPacket+6,w
 18577  1FB3  0086               	movwf	6
 18578  1FB4  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 18579  1FB5  3D3D               	addwfc	??_MiMAC_ReceivedPacket+7,w
 18580  1FB6  0087               	movwf	7
 18581  1FB7  0801               	movf	1,w
 18582  1FB8  0022               	movlb	2	; select bank2
 18583  1FB9  00A7               	movwf	(_MACRxPacket^(0+256)+7)
 18584                           
 18585                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
 18586  1FBA  0020               	movlb	0	; select bank0
 18587  1FBB  0866               	movf	_BankIndex,w
 18588  1FBC  00AE               	movwf	___wmul@multiplier
 18589  1FBD  3045               	movlw	69
 18590  1FBE  01AF               	clrf	___wmul@multiplier+1
 18591  1FBF  00B0               	movwf	___wmul@multiplicand
 18592  1FC0  01B1               	clrf	___wmul@multiplicand+1
 18593  1FC1  27EB  3198         	fcall	___wmul
 18594  1FC3  3066               	movlw	102
 18595  1FC4  00B6               	movwf	??_MiMAC_ReceivedPacket
 18596  1FC5  3023               	movlw	35
 18597  1FC6  00B7               	movwf	??_MiMAC_ReceivedPacket+1
 18598  1FC7  082E               	movf	?___wmul,w
 18599  1FC8  0736               	addwf	??_MiMAC_ReceivedPacket,w
 18600  1FC9  0086               	movwf	6
 18601  1FCA  082F               	movf	?___wmul+1,w
 18602  1FCB  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
 18603  1FCC  0087               	movwf	7
 18604  1FCD  0801               	movf	1,w
 18605  1FCE  00B8               	movwf	??_MiMAC_ReceivedPacket+2
 18606  1FCF  01B9               	clrf	??_MiMAC_ReceivedPacket+3
 18607  1FD0  0866               	movf	_BankIndex,w
 18608  1FD1  00AE               	movwf	___wmul@multiplier
 18609  1FD2  3045               	movlw	69
 18610  1FD3  01AF               	clrf	___wmul@multiplier+1
 18611  1FD4  00B0               	movwf	___wmul@multiplicand
 18612  1FD5  01B1               	clrf	___wmul@multiplicand+1
 18613  1FD6  27EB               	fcall	___wmul
 18614  1FD7  3066               	movlw	102
 18615  1FD8  00BA               	movwf	??_MiMAC_ReceivedPacket+4
 18616  1FD9  3023               	movlw	35
 18617  1FDA  00BB               	movwf	??_MiMAC_ReceivedPacket+5
 18618  1FDB  082E               	movf	?___wmul,w
 18619  1FDC  073A               	addwf	??_MiMAC_ReceivedPacket+4,w
 18620  1FDD  00BC               	movwf	??_MiMAC_ReceivedPacket+6
 18621  1FDE  082F               	movf	?___wmul+1,w
 18622  1FDF  3D3B               	addwfc	??_MiMAC_ReceivedPacket+5,w
 18623  1FE0  00BD               	movwf	??_MiMAC_ReceivedPacket+7
 18624  1FE1  0838               	movf	??_MiMAC_ReceivedPacket+2,w
 18625  1FE2  073C               	addwf	??_MiMAC_ReceivedPacket+6,w
 18626  1FE3  0086               	movwf	6
 18627  1FE4  0839               	movf	??_MiMAC_ReceivedPacket+3,w
 18628  1FE5  3D3D               	addwfc	??_MiMAC_ReceivedPacket+7,w
 18629  1FE6  0087               	movwf	7
 18630  1FE7  0801               	movf	1,w
 18631  1FE8  0022               	movlb	2	; select bank2
 18632  1FE9  00A6               	movwf	(_MACRxPacket^(0+256)+6)
 18633                           
 18634                           ;drv_mrf_miwi_24j40.c: 653: return 1;
 18635  1FEA  3401               	retlw	1
 18636  1FEB                     __end_of_MiMAC_ReceivedPacket:	
 18637  1FEB                     __ptext71:	
 18638 ;; *************** function ___wmul *****************
 18639 ;; Defined at:
 18640 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;  multiplier      2   14[BANK0 ] unsigned int 
 18643 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 18644 ;; Auto vars:     Size  Location     Type
 18645 ;;  product         2   18[BANK0 ] unsigned int 
 18646 ;; Return value:  Size  Location     Type
 18647 ;;                  2   14[BANK0 ] unsigned int 
 18648 ;; Registers used:
 18649 ;;		wreg, status,2, status,0
 18650 ;; Tracked objects:
 18651 ;;		On entry : 1F/0
 18652 ;;		On exit  : 1F/0
 18653 ;;		Unchanged: 0/0
 18654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18655 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18659 ;;Total ram usage:        6 bytes
 18660 ;; Hardware stack levels used:    1
 18661 ;; Hardware stack levels required when called:    4
 18662 ;; This function calls:
 18663 ;;		Nothing
 18664 ;; This function is called by:
 18665 ;;		_MiMAC_ReceivedPacket
 18666 ;;		_MiMAC_DiscardPacket
 18667 ;;		_MiMAC_Init
 18668 ;;		_P2PTasks
 18669 ;;		_MiApp_BroadcastConnectionTable
 18670 ;;		_MiApp_RemoveConnection
 18671 ;;		_run_star_demo
 18672 ;;		_sprintf
 18673 ;; This function uses a non-reentrant model
 18674 ;;
 18675                           
 18676                           
 18677                           ;psect for function ___wmul
 18678  1FEB                     ___wmul:	
 18679                           
 18680                           ;incstack = 0
 18681                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18682  1FEB  01B2               	clrf	___wmul@product
 18683  1FEC  01B3               	clrf	___wmul@product+1
 18684  1FED                     l8934:	
 18685  1FED  1C2E               	btfss	___wmul@multiplier,0
 18686  1FEE  2FF3               	goto	l8938
 18687  1FEF  0830               	movf	___wmul@multiplicand,w
 18688  1FF0  07B2               	addwf	___wmul@product,f
 18689  1FF1  0831               	movf	___wmul@multiplicand+1,w
 18690  1FF2  3DB3               	addwfc	___wmul@product+1,f
 18691  1FF3                     l8938:	
 18692  1FF3  35B0               	lslf	___wmul@multiplicand,f
 18693  1FF4  0DB1               	rlf	___wmul@multiplicand+1,f
 18694  1FF5  36AF               	lsrf	___wmul@multiplier+1,f
 18695  1FF6  0CAE               	rrf	___wmul@multiplier,f
 18696  1FF7  082E               	movf	___wmul@multiplier,w
 18697  1FF8  042F               	iorwf	___wmul@multiplier+1,w
 18698  1FF9  1D03               	btfss	3,2
 18699  1FFA  2FED               	goto	l8934
 18700  1FFB  0833               	movf	___wmul@product+1,w
 18701  1FFC  00AF               	movwf	?___wmul+1
 18702  1FFD  0832               	movf	___wmul@product,w
 18703  1FFE  00AE               	movwf	?___wmul
 18704  1FFF  0008               	return
 18705  2000                     __end_of___wmul:	
 18706                           
 18707                           	psect	text44
 18708  2185                     __ptext44:	
 18709 ;; *************** function _Find_Index *****************
 18710 ;; Defined at:
 18711 ;;		line 109 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 18712 ;; Parameters:    Size  Location     Type
 18713 ;;  DestAddr        2   12[BANK0 ] PTR unsigned char 
 18714 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 18715 ;; Auto vars:     Size  Location     Type
 18716 ;;  i               1   14[BANK0 ] unsigned char 
 18717 ;; Return value:  Size  Location     Type
 18718 ;;                  1    wreg      unsigned char 
 18719 ;; Registers used:
 18720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18721 ;; Tracked objects:
 18722 ;;		On entry : 1F/0
 18723 ;;		On exit  : 1F/0
 18724 ;;		Unchanged: 0/0
 18725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18730 ;;Total ram usage:        3 bytes
 18731 ;; Hardware stack levels used:    1
 18732 ;; Hardware stack levels required when called:    5
 18733 ;; This function calls:
 18734 ;;		___bmul
 18735 ;; This function is called by:
 18736 ;;		_P2PTasks
 18737 ;; This function uses a non-reentrant model
 18738 ;;
 18739                           
 18740                           
 18741                           ;psect for function _Find_Index
 18742  2185                     _Find_Index:	
 18743                           
 18744                           ;miwi_p2p.c: 111: uint8_t i;
 18745                           ;miwi_p2p.c: 112: for (i=0;i<conn_size;i++)
 18746                           
 18747                           ;incstack = 0
 18748                           ; Regs used in _Find_Index: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18749  2185  01AE               	clrf	Find_Index@i
 18750  2186                     l9918:	
 18751  2186  0862               	movf	_conn_size,w
 18752  2187  022E               	subwf	Find_Index@i,w
 18753  2188  1803               	btfsc	3,0
 18754  2189  29D3               	goto	l9920
 18755                           
 18756                           ;miwi_p2p.c: 113: {
 18757                           ;miwi_p2p.c: 114: if (ConnectionTable[i].status.bits.isValid)
 18758  218A  300E               	movlw	14
 18759  218B  00A9               	movwf	___bmul@multiplicand
 18760  218C  082E               	movf	Find_Index@i,w
 18761  218D  3196  26E6  31A1   	fcall	___bmul
 18762  2190  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 18763  2191  0086               	movwf	6
 18764  2192  3002               	movlw	2	; select bank5/6
 18765  2193  0087               	movwf	7
 18766  2194  1F81               	btfss	1,7
 18767  2195  29D1               	goto	l9916
 18768                           
 18769                           ;miwi_p2p.c: 115: {
 18770                           ;miwi_p2p.c: 116: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 18771  2196  300E               	movlw	14
 18772  2197  00A9               	movwf	___bmul@multiplicand
 18773  2198  082E               	movf	Find_Index@i,w
 18774  2199  3196  26E6  31A1   	fcall	___bmul
 18775  219C  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 18776  219D  0086               	movwf	6
 18777  219E  3002               	movlw	2	; select bank5/6
 18778  219F  0087               	movwf	7
 18779  21A0  082C               	movf	Find_Index@DestAddr,w
 18780  21A1  0084               	movwf	4
 18781  21A2  082D               	movf	Find_Index@DestAddr+1,w
 18782  21A3  0085               	movwf	5
 18783  21A4  3101               	addfsr 0,1
 18784  21A5  0800               	movf	0,w
 18785  21A6  0601               	xorwf	1,w
 18786  21A7  1D03               	skipz
 18787  21A8  29D1               	goto	l9916
 18788  21A9  300E               	movlw	14
 18789  21AA  00A9               	movwf	___bmul@multiplicand
 18790  21AB  082E               	movf	Find_Index@i,w
 18791  21AC  3196  26E6  31A1   	fcall	___bmul
 18792  21AF  3EA5               	addlw	(low ((_ConnectionTable| (0+512)+5)))& (0+255)
 18793  21B0  0086               	movwf	6
 18794  21B1  3002               	movlw	2	; select bank5/6
 18795  21B2  0087               	movwf	7
 18796  21B3  082C               	movf	Find_Index@DestAddr,w
 18797  21B4  0084               	movwf	4
 18798  21B5  082D               	movf	Find_Index@DestAddr+1,w
 18799  21B6  0085               	movwf	5
 18800  21B7  3102               	addfsr 0,2
 18801  21B8  0800               	movf	0,w
 18802  21B9  0601               	xorwf	1,w
 18803  21BA  1D03               	skipz
 18804  21BB  29D1               	goto	l9916
 18805  21BC  300E               	movlw	14
 18806  21BD  00A9               	movwf	___bmul@multiplicand
 18807  21BE  082E               	movf	Find_Index@i,w
 18808  21BF  3196  26E6  31A1   	fcall	___bmul
 18809  21C2  3EA6               	addlw	(low ((_ConnectionTable| (0+512)+6)))& (0+255)
 18810  21C3  0086               	movwf	6
 18811  21C4  3002               	movlw	2	; select bank5/6
 18812  21C5  0087               	movwf	7
 18813  21C6  082C               	movf	Find_Index@DestAddr,w
 18814  21C7  0084               	movwf	4
 18815  21C8  082D               	movf	Find_Index@DestAddr+1,w
 18816  21C9  0085               	movwf	5
 18817  21CA  3103               	addfsr 0,3
 18818  21CB  0800               	movf	0,w
 18819  21CC  0601               	xorwf	1,w
 18820  21CD  1D03               	skipz
 18821  21CE  29D1               	goto	l9916
 18822                           
 18823                           ;miwi_p2p.c: 117: {
 18824                           ;miwi_p2p.c: 118: return i;
 18825  21CF  082E               	movf	Find_Index@i,w
 18826  21D0  0008               	return
 18827  21D1                     l9916:	
 18828  21D1  0AAE               	incf	Find_Index@i,f
 18829  21D2  2986               	goto	l9918
 18830  21D3                     l9920:	
 18831                           
 18832                           ;miwi_p2p.c: 120: }
 18833                           ;miwi_p2p.c: 122: }
 18834                           ;miwi_p2p.c: 123: }
 18835                           ;miwi_p2p.c: 124: if (i==conn_size)
 18836  21D3  082E               	movf	Find_Index@i,w
 18837  21D4  0662               	xorwf	_conn_size,w
 18838  21D5  1903               	btfsc	3,2
 18839                           
 18840                           ;miwi_p2p.c: 125: {
 18841                           ;miwi_p2p.c: 126: return 0xff;
 18842  21D6  30FF               	movlw	255
 18843  21D7  0008               	return
 18844  21D8                     __end_of_Find_Index:	
 18845                           
 18846                           	psect	text45
 18847  07C8                     __ptext45:	
 18848 ;; *************** function _Find_InActiveDevices *****************
 18849 ;; Defined at:
 18850 ;;		line 2063 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 18851 ;; Parameters:    Size  Location     Type
 18852 ;;		None
 18853 ;; Auto vars:     Size  Location     Type
 18854 ;;  i               1   58[BANK0 ] unsigned char 
 18855 ;; Return value:  Size  Location     Type
 18856 ;;                  1    wreg      void 
 18857 ;; Registers used:
 18858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18859 ;; Tracked objects:
 18860 ;;		On entry : 1F/1
 18861 ;;		On exit  : 1F/0
 18862 ;;		Unchanged: 0/0
 18863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18868 ;;Total ram usage:        1 bytes
 18869 ;; Hardware stack levels used:    1
 18870 ;; Hardware stack levels required when called:   11
 18871 ;; This function calls:
 18872 ;;		_MiApp_RemoveConnection
 18873 ;;		___bmul
 18874 ;; This function is called by:
 18875 ;;		_P2PTasks
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879                           
 18880                           ;psect for function _Find_InActiveDevices
 18881  07C8                     _Find_InActiveDevices:	
 18882                           
 18883                           ;miwi_p2p.c: 2065: uint8_t i;
 18884                           ;miwi_p2p.c: 2066: for (i=0;i<5;i++)
 18885                           
 18886                           ;incstack = 0
 18887 ;; hardware stack exceeded
 18888                           ; Regs used in _Find_InActiveDevices: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18889  07C8  0020               	movlb	0	; select bank0
 18890  07C9  01DA               	clrf	Find_InActiveDevices@i
 18891  07CA                     l9992:	
 18892                           
 18893                           ;miwi_p2p.c: 2067: {
 18894                           ;miwi_p2p.c: 2068: if (ConnectionTable[i].status.bits.isValid)
 18895  07CA  300E               	movlw	14
 18896  07CB  00A9               	movwf	___bmul@multiplicand
 18897  07CC  085A               	movf	Find_InActiveDevices@i,w
 18898  07CD  3196  26E6  3187   	fcall	___bmul
 18899  07D0  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 18900  07D1  0086               	movwf	6
 18901  07D2  3002               	movlw	2	; select bank5/6
 18902  07D3  0087               	movwf	7
 18903  07D4  1F81               	btfss	1,7
 18904  07D5  2FEF               	goto	l10002
 18905                           
 18906                           ;miwi_p2p.c: 2069: {
 18907                           ;miwi_p2p.c: 2070: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 18908  07D6  085A               	movf	Find_InActiveDevices@i,w
 18909  07D7  3E35               	addlw	(low (_link_stat| (0+256)))& (0+255)
 18910  07D8  0086               	movwf	6
 18911  07D9  3001               	movlw	1	; select bank2/3
 18912  07DA  0087               	movwf	7
 18913  07DB  0801               	movf	1,w
 18914  07DC  1D03               	btfss	3,2
 18915  07DD  2FE9               	goto	l10000
 18916  07DE  085A               	movf	Find_InActiveDevices@i,w
 18917  07DF  3EB4               	addlw	(low (_permanent_connections| (0+256)))& (0+255)
 18918  07E0  0086               	movwf	6
 18919  07E1  0A01               	incf	1,w
 18920  07E2  1903               	btfsc	3,2
 18921  07E3  2FE9               	goto	l10000
 18922                           
 18923                           ;miwi_p2p.c: 2071: {
 18924                           ;miwi_p2p.c: 2072: MiApp_RemoveConnection(i);
 18925  07E4  085A               	movf	Find_InActiveDevices@i,w
 18926  07E5  3191  2161  3187   	fcall	_MiApp_RemoveConnection
 18927                           
 18928                           ;miwi_p2p.c: 2073: }
 18929  07E8  2FEF               	goto	l10002
 18930  07E9                     l10000:	
 18931                           
 18932                           ;miwi_p2p.c: 2074: else
 18933                           ;miwi_p2p.c: 2075: {
 18934                           ;miwi_p2p.c: 2076: link_stat[i] = 0;
 18935  07E9  085A               	movf	Find_InActiveDevices@i,w
 18936  07EA  3E35               	addlw	(low (_link_stat| (0+256)))& (0+255)
 18937  07EB  0086               	movwf	6
 18938  07EC  3001               	movlw	1	; select bank2/3
 18939  07ED  0087               	movwf	7
 18940  07EE  0181               	clrf	1
 18941  07EF                     l10002:	
 18942  07EF  0020               	movlb	0	; select bank0
 18943  07F0  3005               	movlw	5
 18944  07F1  0ADA               	incf	Find_InActiveDevices@i,f
 18945  07F2  025A               	subwf	Find_InActiveDevices@i,w
 18946  07F3  1803               	btfsc	3,0
 18947  07F4  0008               	return
 18948  07F5  2FCA               	goto	l9992
 18949  07F6                     __end_of_Find_InActiveDevices:	
 18950                           
 18951                           	psect	text50
 18952  2109                     __ptext50:	
 18953 ;; *************** function _MiMAC_SetAltAddress *****************
 18954 ;; Defined at:
 18955 ;;		line 1421 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;  Address         2   13[BANK0 ] PTR unsigned char 
 18958 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 18959 ;;  PANID           2   15[BANK0 ] PTR unsigned char 
 18960 ;;		 -> myPANID(2), MAC_PANID(2), 
 18961 ;; Auto vars:     Size  Location     Type
 18962 ;;		None
 18963 ;; Return value:  Size  Location     Type
 18964 ;;                  1    wreg      unsigned char 
 18965 ;; Registers used:
 18966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18967 ;; Tracked objects:
 18968 ;;		On entry : 1F/0
 18969 ;;		On exit  : 1F/0
 18970 ;;		Unchanged: 0/0
 18971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18976 ;;Total ram usage:        4 bytes
 18977 ;; Hardware stack levels used:    1
 18978 ;; Hardware stack levels required when called:    6
 18979 ;; This function calls:
 18980 ;;		_PHYSetShortRAMAddr
 18981 ;; This function is called by:
 18982 ;;		_MiMAC_SendPacket
 18983 ;;		_P2PTasks
 18984 ;;		_MiApp_ProtocolInit
 18985 ;;		_MiApp_StartConnection
 18986 ;; This function uses a non-reentrant model
 18987 ;;
 18988                           
 18989                           
 18990                           ;psect for function _MiMAC_SetAltAddress
 18991  2109                     _MiMAC_SetAltAddress:	
 18992                           
 18993                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 18994                           
 18995                           ;incstack = 0
 18996                           ; Regs used in _MiMAC_SetAltAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18997  2109  082D               	movf	MiMAC_SetAltAddress@Address,w
 18998  210A  0086               	movwf	6
 18999  210B  082E               	movf	MiMAC_SetAltAddress@Address+1,w
 19000  210C  0087               	movwf	7
 19001  210D  0801               	movf	1,w
 19002  210E  0022               	movlb	2	; select bank2
 19003  210F  00DD               	movwf	_myNetworkAddress^(0+256)
 19004                           
 19005                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 19006  2110  0020               	movlb	0	; select bank0
 19007  2111  082D               	movf	MiMAC_SetAltAddress@Address,w
 19008  2112  0086               	movwf	6
 19009  2113  082E               	movf	MiMAC_SetAltAddress@Address+1,w
 19010  2114  0087               	movwf	7
 19011  2115  3141               	addfsr 1,1
 19012  2116  0801               	movf	1,w
 19013  2117  0022               	movlb	2	; select bank2
 19014  2118  00DE               	movwf	(_myNetworkAddress^(0+256)+1)
 19015                           
 19016                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 19017  2119  0020               	movlb	0	; select bank0
 19018  211A  082F               	movf	MiMAC_SetAltAddress@PANID,w
 19019  211B  0086               	movwf	6
 19020  211C  0830               	movf	MiMAC_SetAltAddress@PANID+1,w
 19021  211D  0087               	movwf	7
 19022  211E  0801               	movf	1,w
 19023  211F  0022               	movlb	2	; select bank2
 19024  2120  00DB               	movwf	_MAC_PANID^(0+256)
 19025                           
 19026                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 19027  2121  0020               	movlb	0	; select bank0
 19028  2122  082F               	movf	MiMAC_SetAltAddress@PANID,w
 19029  2123  0086               	movwf	6
 19030  2124  0830               	movf	MiMAC_SetAltAddress@PANID+1,w
 19031  2125  0087               	movwf	7
 19032  2126  3141               	addfsr 1,1
 19033  2127  0801               	movf	1,w
 19034  2128  0022               	movlb	2	; select bank2
 19035  2129  00DC               	movwf	(_MAC_PANID^(0+256)+1)
 19036                           
 19037                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 19038  212A  085D               	movf	_myNetworkAddress^(0+256),w
 19039  212B  0020               	movlb	0	; select bank0
 19040  212C  00AA               	movwf	PHYSetShortRAMAddr@value
 19041  212D  3007               	movlw	7
 19042  212E  31A5  2521  31A1   	fcall	_PHYSetShortRAMAddr
 19043                           
 19044                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 19045  2131  0022               	movlb	2	; select bank2
 19046  2132  085E               	movf	(_myNetworkAddress^(0+256)+1),w
 19047  2133  0020               	movlb	0	; select bank0
 19048  2134  00AA               	movwf	PHYSetShortRAMAddr@value
 19049  2135  3009               	movlw	9
 19050  2136  31A5  2521  31A1   	fcall	_PHYSetShortRAMAddr
 19051                           
 19052                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 19053  2139  0022               	movlb	2	; select bank2
 19054  213A  085B               	movf	_MAC_PANID^(0+256),w
 19055  213B  0020               	movlb	0	; select bank0
 19056  213C  00AA               	movwf	PHYSetShortRAMAddr@value
 19057  213D  3003               	movlw	3
 19058  213E  31A5  2521         	fcall	_PHYSetShortRAMAddr
 19059                           
 19060                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 19061  2140  0022               	movlb	2	; select bank2
 19062  2141  085C               	movf	(_MAC_PANID^(0+256)+1),w
 19063  2142  0020               	movlb	0	; select bank0
 19064  2143  00AA               	movwf	PHYSetShortRAMAddr@value
 19065  2144  3005               	movlw	5
 19066  2145  31A5  2D21         	ljmp	_PHYSetShortRAMAddr
 19067  2147                     __end_of_MiMAC_SetAltAddress:	
 19068                           
 19069                           	psect	text51
 19070  241A                     __ptext51:	
 19071 ;; *************** function _InitMRF24J40 *****************
 19072 ;; Defined at:
 19073 ;;		line 201 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 19074 ;; Parameters:    Size  Location     Type
 19075 ;;		None
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;  _ms             4   31[BANK0 ] unsigned long 
 19078 ;;  _dcnt           4   23[BANK0 ] unsigned long 
 19079 ;;  _ms             4   27[BANK0 ] unsigned long 
 19080 ;;  _dcnt           4   19[BANK0 ] unsigned long 
 19081 ;;  j               2   35[BANK0 ] unsigned int 
 19082 ;;  i               1   37[BANK0 ] unsigned char 
 19083 ;; Return value:  Size  Location     Type
 19084 ;;                  1    wreg      void 
 19085 ;; Registers used:
 19086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19087 ;; Tracked objects:
 19088 ;;		On entry : 1D/2
 19089 ;;		On exit  : 1F/0
 19090 ;;		Unchanged: 0/0
 19091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19095 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19096 ;;Total ram usage:       20 bytes
 19097 ;; Hardware stack levels used:    1
 19098 ;; Hardware stack levels required when called:    7
 19099 ;; This function calls:
 19100 ;;		_MiMAC_SetChannel
 19101 ;;		_PHYGetLongRAMAddr
 19102 ;;		_PHYGetShortRAMAddr
 19103 ;;		_PHYSetLongRAMAddr
 19104 ;;		_PHYSetShortRAMAddr
 19105 ;; This function is called by:
 19106 ;;		_MiMAC_SendPacket
 19107 ;;		_MiMAC_Init
 19108 ;; This function uses a non-reentrant model
 19109 ;;
 19110                           
 19111                           
 19112                           ;psect for function _InitMRF24J40
 19113  241A                     _InitMRF24J40:	
 19114                           
 19115                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 19116                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 19117                           ;drv_mrf_miwi_24j40.c: 207: LATBbits.LATB5 = 0;
 19118                           
 19119                           ;incstack = 0
 19120                           ; Regs used in _InitMRF24J40: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19121  241A  0022               	movlb	2	; select bank2
 19122  241B  128D               	bcf	13,5	;volatile
 19123                           
 19124                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/(10000000))/6)); while(_dcnt--); _ms--; } };
 19125  241C  3003               	movlw	3
 19126  241D  0020               	movlb	0	; select bank0
 19127  241E  00BB               	movwf	InitMRF24J40@_ms
 19128  241F  01BC               	clrf	InitMRF24J40@_ms+1
 19129  2420  01BD               	clrf	InitMRF24J40@_ms+2
 19130  2421  01BE               	clrf	InitMRF24J40@_ms+3
 19131  2422                     l8488:	
 19132  2422  083E               	movf	InitMRF24J40@_ms+3,w
 19133  2423  043D               	iorwf	InitMRF24J40@_ms+2,w
 19134  2424  043C               	iorwf	InitMRF24J40@_ms+1,w
 19135  2425  043B               	iorwf	InitMRF24J40@_ms,w
 19136  2426  1903               	btfsc	3,2
 19137  2427  2C46               	goto	l72
 19138  2428  3006               	movlw	6
 19139  2429  01B6               	clrf	InitMRF24J40@_dcnt+3
 19140  242A  01B5               	clrf	InitMRF24J40@_dcnt+2
 19141  242B  00B4               	movwf	InitMRF24J40@_dcnt+1
 19142  242C  3082               	movlw	130
 19143  242D  00B3               	movwf	InitMRF24J40@_dcnt
 19144  242E                     l8484:	
 19145  242E  3001               	movlw	1
 19146  242F                     L21:	
 19147  242F  02B3               	subwf	InitMRF24J40@_dcnt,f
 19148  2430  3000               	movlw	0
 19149  2431  3BB4               	subwfb	InitMRF24J40@_dcnt+1,f
 19150  2432  3BB5               	subwfb	InitMRF24J40@_dcnt+2,f
 19151  2433  3BB6               	subwfb	InitMRF24J40@_dcnt+3,f
 19152  2434  0F33               	incfsz	InitMRF24J40@_dcnt,w
 19153  2435  2C2E               	goto	l8484
 19154  2436  0A34               	incf	InitMRF24J40@_dcnt+1,w
 19155  2437  1D03               	skipz
 19156  2438  2C2E               	goto	l8484
 19157  2439  0A35               	incf	InitMRF24J40@_dcnt+2,w
 19158  243A  1D03               	skipz
 19159  243B  2C2E               	goto	l8484
 19160  243C  0A36               	incf	InitMRF24J40@_dcnt+3,w
 19161  243D  3001               	movlw	1
 19162  243E  1D03               	btfss	3,2
 19163  243F  2C2F               	goto	L21
 19164  2440  02BB               	subwf	InitMRF24J40@_ms,f
 19165  2441  3000               	movlw	0
 19166  2442  3BBC               	subwfb	InitMRF24J40@_ms+1,f
 19167  2443  3BBD               	subwfb	InitMRF24J40@_ms+2,f
 19168  2444  3BBE               	subwfb	InitMRF24J40@_ms+3,f
 19169  2445  2C22               	goto	l8488
 19170  2446                     l72:	
 19171                           
 19172                           ;drv_mrf_miwi_24j40.c: 210: LATBbits.LATB5 = 1;
 19173  2446  0022               	movlb	2	; select bank2
 19174  2447  168D               	bsf	13,5	;volatile
 19175                           
 19176                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/(10000000))/6)); while(_dcnt--); _ms--; } };
 19177  2448  300A               	movlw	10
 19178  2449  0020               	movlb	0	; select bank0
 19179  244A  00BF               	movwf	InitMRF24J40@_ms_439
 19180  244B  01C0               	clrf	InitMRF24J40@_ms_439+1
 19181  244C  01C1               	clrf	InitMRF24J40@_ms_439+2
 19182  244D  01C2               	clrf	InitMRF24J40@_ms_439+3
 19183  244E                     l8498:	
 19184  244E  0842               	movf	InitMRF24J40@_ms_439+3,w
 19185  244F  0441               	iorwf	InitMRF24J40@_ms_439+2,w
 19186  2450  0440               	iorwf	InitMRF24J40@_ms_439+1,w
 19187  2451  043F               	iorwf	InitMRF24J40@_ms_439,w
 19188  2452  1903               	btfsc	3,2
 19189  2453  2C72               	goto	l8500
 19190  2454  3006               	movlw	6
 19191  2455  01BA               	clrf	InitMRF24J40@_dcnt_438+3
 19192  2456  01B9               	clrf	InitMRF24J40@_dcnt_438+2
 19193  2457  00B8               	movwf	InitMRF24J40@_dcnt_438+1
 19194  2458  3082               	movlw	130
 19195  2459  00B7               	movwf	InitMRF24J40@_dcnt_438
 19196  245A                     l8494:	
 19197  245A  3001               	movlw	1
 19198  245B                     L22:	
 19199  245B  02B7               	subwf	InitMRF24J40@_dcnt_438,f
 19200  245C  3000               	movlw	0
 19201  245D  3BB8               	subwfb	InitMRF24J40@_dcnt_438+1,f
 19202  245E  3BB9               	subwfb	InitMRF24J40@_dcnt_438+2,f
 19203  245F  3BBA               	subwfb	InitMRF24J40@_dcnt_438+3,f
 19204  2460  0F37               	incfsz	InitMRF24J40@_dcnt_438,w
 19205  2461  2C5A               	goto	l8494
 19206  2462  0A38               	incf	InitMRF24J40@_dcnt_438+1,w
 19207  2463  1D03               	skipz
 19208  2464  2C5A               	goto	l8494
 19209  2465  0A39               	incf	InitMRF24J40@_dcnt_438+2,w
 19210  2466  1D03               	skipz
 19211  2467  2C5A               	goto	l8494
 19212  2468  0A3A               	incf	InitMRF24J40@_dcnt_438+3,w
 19213  2469  3001               	movlw	1
 19214  246A  1D03               	btfss	3,2
 19215  246B  2C5B               	goto	L22
 19216  246C  02BF               	subwf	InitMRF24J40@_ms_439,f
 19217  246D  3000               	movlw	0
 19218  246E  3BC0               	subwfb	InitMRF24J40@_ms_439+1,f
 19219  246F  3BC1               	subwfb	InitMRF24J40@_ms_439+2,f
 19220  2470  3BC2               	subwfb	InitMRF24J40@_ms_439+3,f
 19221  2471  2C4E               	goto	l8498
 19222  2472                     l8500:	
 19223                           
 19224                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 19225  2472  3007               	movlw	7
 19226  2473  00AA               	movwf	PHYSetShortRAMAddr@value
 19227  2474  3055               	movlw	85
 19228  2475  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19229  2477                     l79:	
 19230                           ;drv_mrf_miwi_24j40.c: 215: do
 19231                           
 19232                           
 19233                           ;drv_mrf_miwi_24j40.c: 216: {
 19234                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 19235  2477  3054               	movlw	84
 19236  2478  27BE  31A4         	fcall	_PHYGetShortRAMAddr
 19237  247A  00C5               	movwf	InitMRF24J40@i
 19238                           
 19239                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 19240  247B  3907               	andlw	7
 19241  247C  1D03               	btfss	3,2
 19242  247D  2C77               	goto	l79
 19243                           
 19244                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 19245  247E  01C3               	clrf	InitMRF24J40@j
 19246  247F  01C4               	clrf	InitMRF24J40@j+1
 19247  2480                     l8510:	
 19248                           
 19249                           ;drv_mrf_miwi_24j40.c: 221: {
 19250  2480  0AC3               	incf	InitMRF24J40@j,f
 19251  2481  1903               	skipnz
 19252  2482  0AC4               	incf	InitMRF24J40@j+1,f
 19253  2483  3003               	movlw	3
 19254  2484  0244               	subwf	InitMRF24J40@j+1,w
 19255  2485  30E8               	movlw	232
 19256  2486  1903               	skipnz
 19257  2487  0243               	subwf	InitMRF24J40@j,w
 19258  2488  1C03               	skipc
 19259  2489  2C80               	goto	l8510
 19260  248A  301B               	movlw	27
 19261                           
 19262                           ;drv_mrf_miwi_24j40.c: 222: }
 19263                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 19264  248B  01AA               	clrf	PHYSetShortRAMAddr@value
 19265  248C  0AAA               	incf	PHYSetShortRAMAddr@value,f
 19266  248D  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19267                           
 19268                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 19269  248F  30FF               	movlw	255
 19270  2490  00AA               	movwf	PHYSetShortRAMAddr@value
 19271  2491  3007               	movlw	7
 19272  2492  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19273                           
 19274                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 19275  2494  30FF               	movlw	255
 19276  2495  00AA               	movwf	PHYSetShortRAMAddr@value
 19277  2496  3009               	movlw	9
 19278  2497  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19279                           
 19280                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 19281  2499  30FF               	movlw	255
 19282  249A  00AA               	movwf	PHYSetShortRAMAddr@value
 19283  249B  3003               	movlw	3
 19284  249C  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19285                           
 19286                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 19287  249E  30FF               	movlw	255
 19288  249F  00AA               	movwf	PHYSetShortRAMAddr@value
 19289  24A0  3005               	movlw	5
 19290  24A1  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19291                           
 19292                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 19293  24A3  01C5               	clrf	InitMRF24J40@i
 19294  24A4                     l8522:	
 19295                           
 19296                           ;drv_mrf_miwi_24j40.c: 235: {
 19297                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 19298  24A4  0845               	movf	InitMRF24J40@i,w
 19299  24A5  0022               	movlb	2	; select bank2
 19300  24A6  0747               	addwf	(low ((_MACInitParams| (0+256)+1)))^0,w
 19301  24A7  0020               	movlb	0	; select bank0
 19302  24A8  00B2               	movwf	??_InitMRF24J40
 19303  24A9  0086               	movwf	6
 19304  24AA  3001               	movlw	1	; select bank2/3
 19305  24AB  0087               	movwf	7
 19306  24AC  0801               	movf	1,w
 19307  24AD  00AA               	movwf	PHYSetShortRAMAddr@value
 19308  24AE  3545               	lslf	InitMRF24J40@i,w
 19309  24AF  3E0B               	addlw	11
 19310  24B0  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19311  24B2  3008               	movlw	8
 19312  24B3  0AC5               	incf	InitMRF24J40@i,f
 19313  24B4  0245               	subwf	InitMRF24J40@i,w
 19314  24B5  1C03               	skipc
 19315  24B6  2CA4               	goto	l8522
 19316                           
 19317                           ;drv_mrf_miwi_24j40.c: 237: }
 19318                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 19319  24B7  3002               	movlw	2
 19320  24B8  00AA               	movwf	PHYSetLongRAMAddr@address
 19321  24B9  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19322  24BA  3080               	movlw	128
 19323  24BB  00AC               	movwf	PHYSetLongRAMAddr@value
 19324  24BC  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19325                           
 19326                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 19327  24BE  3003               	movlw	3
 19328  24BF  00AA               	movwf	PHYSetLongRAMAddr@address
 19329  24C0  3002               	movlw	2
 19330  24C1  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19331  24C2  01AC               	clrf	PHYSetLongRAMAddr@value
 19332  24C3  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19333                           
 19334                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 19335  24C5  3006               	movlw	6
 19336  24C6  00AA               	movwf	PHYSetLongRAMAddr@address
 19337  24C7  3002               	movlw	2
 19338  24C8  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19339  24C9  3090               	movlw	144
 19340  24CA  00AC               	movwf	PHYSetLongRAMAddr@value
 19341  24CB  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19342                           
 19343                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 19344  24CD  3007               	movlw	7
 19345  24CE  00AA               	movwf	PHYSetLongRAMAddr@address
 19346  24CF  3002               	movlw	2
 19347  24D0  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19348  24D1  3080               	movlw	128
 19349  24D2  00AC               	movwf	PHYSetLongRAMAddr@value
 19350  24D3  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19351                           
 19352                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 19353  24D5  3008               	movlw	8
 19354  24D6  00AA               	movwf	PHYSetLongRAMAddr@address
 19355  24D7  3002               	movlw	2
 19356  24D8  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19357  24D9  3010               	movlw	16
 19358  24DA  00AC               	movwf	PHYSetLongRAMAddr@value
 19359  24DB  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19360                           
 19361                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 19362  24DD  3020               	movlw	32
 19363  24DE  00AA               	movwf	PHYSetLongRAMAddr@address
 19364  24DF  3002               	movlw	2
 19365  24E0  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19366  24E1  3021               	movlw	33
 19367  24E2  00AC               	movwf	PHYSetLongRAMAddr@value
 19368  24E3  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19369                           
 19370                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 19371  24E5  3080               	movlw	128
 19372  24E6  00AA               	movwf	PHYSetShortRAMAddr@value
 19373  24E7  3075               	movlw	117
 19374  24E8  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19375                           
 19376                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 19377  24EA  3040               	movlw	64
 19378  24EB  00AA               	movwf	PHYSetShortRAMAddr@value
 19379  24EC  307D               	movlw	125
 19380  24ED  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19381                           
 19382                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 19383  24EF  3060               	movlw	96
 19384  24F0  00AA               	movwf	PHYSetShortRAMAddr@value
 19385  24F1  307F               	movlw	127
 19386  24F2  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19387                           
 19388                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 19389  24F4  3098               	movlw	152
 19390  24F5  00AA               	movwf	PHYSetShortRAMAddr@value
 19391  24F6  3031               	movlw	49
 19392  24F7  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19393                           
 19394                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 19395  24F9  3095               	movlw	149
 19396  24FA  00AA               	movwf	PHYSetShortRAMAddr@value
 19397  24FB  305D               	movlw	93
 19398  24FC  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19399  24FE                     l85:	
 19400                           ;drv_mrf_miwi_24j40.c: 295: do
 19401                           
 19402                           
 19403                           ;drv_mrf_miwi_24j40.c: 296: {
 19404                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 19405  24FE  300F               	movlw	15
 19406  24FF  00AA               	movwf	PHYGetLongRAMAddr@address
 19407  2500  3002               	movlw	2
 19408  2501  00AB               	movwf	PHYGetLongRAMAddr@address+1
 19409  2502  278E  31A4         	fcall	_PHYGetLongRAMAddr
 19410  2504  00C5               	movwf	InitMRF24J40@i
 19411                           
 19412                           ;drv_mrf_miwi_24j40.c: 298: }
 19413                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 19414  2505  39A0               	andlw	160
 19415  2506  00B2               	movwf	??_InitMRF24J40
 19416  2507  3AA0               	xorlw	160
 19417  2508  1D03               	btfss	3,2
 19418  2509  2CFE               	goto	l85
 19419                           
 19420                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 19421  250A  30E6               	movlw	230
 19422  250B  00AA               	movwf	PHYSetShortRAMAddr@value
 19423  250C  3065               	movlw	101
 19424  250D  2521  31A4         	fcall	_PHYSetShortRAMAddr
 19425                           
 19426                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 19427  250F  3002               	movlw	2
 19428  2510  01AA               	clrf	PHYSetLongRAMAddr@address
 19429  2511  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19430  2512  3003               	movlw	3
 19431  2513  00AC               	movwf	PHYSetLongRAMAddr@value
 19432  2514  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19433                           
 19434                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 19435  2516  3001               	movlw	1
 19436  2517  00AA               	movwf	PHYSetLongRAMAddr@address
 19437  2518  3002               	movlw	2
 19438  2519  00AB               	movwf	PHYSetLongRAMAddr@address+1
 19439  251A  00AC               	movwf	PHYSetLongRAMAddr@value
 19440  251B  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19441                           
 19442                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 19443  251D  01B0               	clrf	MiMAC_SetChannel@offsetFreq
 19444  251E  0022               	movlb	2	; select bank2
 19445  251F  084E               	movf	_MACCurrentChannel^(0+256),w
 19446  2520  2FDF               	ljmp	_MiMAC_SetChannel
 19447  2521                     __end_of_InitMRF24J40:	
 19448  2521                     __ptext56:	
 19449 ;; *************** function _PHYSetShortRAMAddr *****************
 19450 ;; Defined at:
 19451 ;;		line 124 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 19452 ;; Parameters:    Size  Location     Type
 19453 ;;  address         1    wreg     unsigned char 
 19454 ;;  value           1   10[BANK0 ] unsigned char 
 19455 ;; Auto vars:     Size  Location     Type
 19456 ;;  address         1   11[BANK0 ] unsigned char 
 19457 ;;  tmpRFIE         1   12[BANK0 ] volatile unsigned char 
 19458 ;; Return value:  Size  Location     Type
 19459 ;;                  1    wreg      void 
 19460 ;; Registers used:
 19461 ;;		wreg, status,2, status,0, pclath, cstack
 19462 ;; Tracked objects:
 19463 ;;		On entry : 1F/0
 19464 ;;		On exit  : 1F/0
 19465 ;;		Unchanged: 0/0
 19466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19467 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19470 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19471 ;;Total ram usage:        3 bytes
 19472 ;; Hardware stack levels used:    1
 19473 ;; Hardware stack levels required when called:    5
 19474 ;; This function calls:
 19475 ;;		_SPIPut
 19476 ;; This function is called by:
 19477 ;;		_InitMRF24J40
 19478 ;;		_MiMAC_SendPacket
 19479 ;;		_MiMAC_SetChannel
 19480 ;;		_MiMAC_SetAltAddress
 19481 ;; This function uses a non-reentrant model
 19482 ;;
 19483                           
 19484                           
 19485                           ;psect for function _PHYSetShortRAMAddr
 19486  2521                     _PHYSetShortRAMAddr:	
 19487                           
 19488                           ;incstack = 0
 19489                           ; Regs used in _PHYSetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 19490                           ;PHYSetShortRAMAddr@address stored from wreg
 19491  2521  00AB               	movwf	PHYSetShortRAMAddr@address
 19492                           
 19493                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 19494  2522  3000               	movlw	0
 19495  2523  198B               	btfsc	11,3	;volatile
 19496  2524  3001               	movlw	1
 19497  2525  00AC               	movwf	PHYSetShortRAMAddr@tmpRFIE	;volatile
 19498                           
 19499                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.IOCIE = 0;
 19500  2526  118B               	bcf	11,3	;volatile
 19501                           
 19502                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 19503  2527  0022               	movlb	2	; select bank2
 19504  2528  118D               	bcf	13,3	;volatile
 19505                           
 19506                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
 19507  2529  0020               	movlb	0	; select bank0
 19508  252A  082B               	movf	PHYSetShortRAMAddr@address,w
 19509  252B  3197  27ED  31A4   	fcall	_SPIPut
 19510                           
 19511                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
 19512  252E  082A               	movf	PHYSetShortRAMAddr@value,w
 19513  252F  3197  27ED         	fcall	_SPIPut
 19514                           
 19515                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 19516  2531  0022               	movlb	2	; select bank2
 19517  2532  158D               	bsf	13,3	;volatile
 19518                           
 19519                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.IOCIE = tmpRFIE;
 19520  2533  0020               	movlb	0	; select bank0
 19521  2534  0C2C               	rrf	PHYSetShortRAMAddr@tmpRFIE,w	;volatile
 19522  2535  1C03               	skipc
 19523  2536  118B               	bcf	11,3	;volatile
 19524  2537  1803               	skipnc
 19525  2538  158B               	bsf	11,3	;volatile
 19526  2539  0008               	return
 19527  253A                     __end_of_PHYSetShortRAMAddr:	
 19528  253A                     __ptext48:	
 19529 ;; *************** function _MiMAC_SendPacket *****************
 19530 ;; Defined at:
 19531 ;;		line 736 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 19532 ;; Parameters:    Size  Location     Type
 19533 ;;  transParam      7   38[BANK0 ] struct .
 19534 ;;  MACPayload      1   45[BANK0 ] PTR unsigned char 
 19535 ;;		 -> TxBuffer(40), 
 19536 ;;  MACPayloadLe    1   46[BANK0 ] unsigned char 
 19537 ;; Auto vars:     Size  Location     Type
 19538 ;;  t2              4    4[BANK1 ] struct _MIWI_TICK
 19539 ;;  t1              4    0[BANK1 ] struct _MIWI_TICK
 19540 ;;  loc             1   12[BANK1 ] unsigned char 
 19541 ;;  i               1   11[BANK1 ] unsigned char 
 19542 ;;  headerLength    1   10[BANK1 ] unsigned char 
 19543 ;;  frameControl    1    9[BANK1 ] unsigned char 
 19544 ;;  IntraPAN        1    8[BANK1 ] unsigned char 
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  1    wreg      unsigned char 
 19547 ;; Registers used:
 19548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19549 ;; Tracked objects:
 19550 ;;		On entry : 1F/0
 19551 ;;		On exit  : 1F/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19554 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19555 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 19556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19557 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
 19558 ;;Total ram usage:       26 bytes
 19559 ;; Hardware stack levels used:    1
 19560 ;; Hardware stack levels required when called:    8
 19561 ;; This function calls:
 19562 ;;		_InitMRF24J40
 19563 ;;		_MiMAC_SetAltAddress
 19564 ;;		_MiWi_TickGet
 19565 ;;		_PHYSetLongRAMAddr
 19566 ;;		_PHYSetShortRAMAddr
 19567 ;; This function is called by:
 19568 ;;		_SendPacket
 19569 ;; This function uses a non-reentrant model
 19570 ;;
 19571                           
 19572                           
 19573                           ;psect for function _MiMAC_SendPacket
 19574  253A                     _MiMAC_SendPacket:	
 19575                           
 19576                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
 19577                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
 19578                           
 19579                           ;incstack = 0
 19580                           ; Regs used in _MiMAC_SendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19581  253A  0021               	movlb	1	; select bank1
 19582  253B  01AC               	clrf	MiMAC_SendPacket@loc^(0+128)
 19583                           
 19584                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
 19585                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
 19586                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
 19587                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
 19588  253C  0020               	movlb	0	; select bank0
 19589  253D  1D46               	btfss	MiMAC_SendPacket@transParam,2
 19590  253E  2D41               	goto	l133
 19591                           
 19592                           ;drv_mrf_miwi_24j40.c: 750: {
 19593                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
 19594  253F  01C9               	clrf	MiMAC_SendPacket@transParam+3
 19595  2540  0AC9               	incf	MiMAC_SendPacket@transParam+3,f
 19596  2541                     l133:	
 19597                           
 19598                           ;drv_mrf_miwi_24j40.c: 752: }
 19599                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
 19600  2541  19C6               	btfsc	MiMAC_SendPacket@transParam,3
 19601                           
 19602                           ;drv_mrf_miwi_24j40.c: 755: {
 19603                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
 19604  2542  01CA               	clrf	MiMAC_SendPacket@transParam+4
 19605                           
 19606                           ;drv_mrf_miwi_24j40.c: 757: }
 19607                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
 19608  2543  0846               	movf	MiMAC_SendPacket@transParam,w
 19609  2544  3903               	andlw	3
 19610  2545  3A01               	xorlw	1
 19611  2546  1D03               	skipz
 19612  2547  2D4C               	goto	l8632
 19613                           
 19614                           ;drv_mrf_miwi_24j40.c: 784: {
 19615                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
 19616  2548  3003               	movlw	3
 19617  2549  0021               	movlb	1	; select bank1
 19618  254A  00A9               	movwf	MiMAC_SendPacket@frameControl^(0+128)
 19619                           
 19620                           ;drv_mrf_miwi_24j40.c: 786: } else if (transParam.flags.bits.packetType == 0x00)
 19621  254B  2D53               	goto	l8636
 19622  254C                     l8632:	
 19623  254C  0846               	movf	MiMAC_SendPacket@transParam,w
 19624  254D  3903               	andlw	3
 19625  254E  1D03               	skipz
 19626  254F  2D53               	goto	l8636
 19627                           
 19628                           ;drv_mrf_miwi_24j40.c: 787: {
 19629                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
 19630  2550  0021               	movlb	1	; select bank1
 19631  2551  01A9               	clrf	MiMAC_SendPacket@frameControl^(0+128)
 19632  2552  0AA9               	incf	MiMAC_SendPacket@frameControl^(0+128),f
 19633  2553                     l8636:	
 19634                           
 19635                           ;drv_mrf_miwi_24j40.c: 789: }
 19636                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
 19637  2553  0022               	movlb	2	; select bank2
 19638  2554  085C               	movf	(_MAC_PANID+1)^(0+256),w
 19639  2555  0020               	movlb	0	; select bank0
 19640  2556  064C               	xorwf	MiMAC_SendPacket@transParam+6,w
 19641  2557  1D03               	skipz
 19642  2558  2D5D               	goto	u7625
 19643  2559  0022               	movlb	2	; select bank2
 19644  255A  085B               	movf	_MAC_PANID^(0+256),w
 19645  255B  0020               	movlb	0	; select bank0
 19646  255C  064B               	xorwf	MiMAC_SendPacket@transParam+5,w
 19647  255D                     u7625:	
 19648  255D  1D03               	skipz
 19649  255E  2D6C               	goto	l8646
 19650  255F  0022               	movlb	2	; select bank2
 19651  2560  0F5B               	incfsz	_MAC_PANID^(0+256),w
 19652  2561  2D65               	goto	l8640
 19653  2562  0A5C               	incf	(_MAC_PANID+1)^(0+256),w
 19654  2563  1903               	btfsc	3,2
 19655  2564  2D6C               	goto	l8646
 19656  2565                     l8640:	
 19657                           
 19658                           ;drv_mrf_miwi_24j40.c: 796: {
 19659                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
 19660  2565  3005               	movlw	5
 19661  2566  0021               	movlb	1	; select bank1
 19662  2567  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 19663                           
 19664                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
 19665  2568  1729               	bsf	MiMAC_SendPacket@frameControl^(0+128),6
 19666                           
 19667                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
 19668  2569  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 19669  256A  0AA8               	incf	MiMAC_SendPacket@IntraPAN^(0+128),f
 19670                           
 19671                           ;drv_mrf_miwi_24j40.c: 802: }
 19672  256B  2D70               	goto	l8650
 19673  256C                     l8646:	
 19674                           
 19675                           ;drv_mrf_miwi_24j40.c: 804: else
 19676                           ;drv_mrf_miwi_24j40.c: 805: {
 19677                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
 19678  256C  3007               	movlw	7
 19679  256D  0021               	movlb	1	; select bank1
 19680  256E  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 19681                           
 19682                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
 19683  256F  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 19684  2570                     l8650:	
 19685                           
 19686                           ;drv_mrf_miwi_24j40.c: 808: }
 19687                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
 19688  2570  0020               	movlb	0	; select bank0
 19689  2571  0849               	movf	MiMAC_SendPacket@transParam+3,w
 19690  2572  1903               	btfsc	3,2
 19691  2573  2D78               	goto	l8654
 19692                           
 19693                           ;drv_mrf_miwi_24j40.c: 812: {
 19694                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
 19695  2574  0021               	movlb	1	; select bank1
 19696  2575  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 19697  2576  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 19698                           
 19699                           ;drv_mrf_miwi_24j40.c: 814: } else
 19700  2577  2D7B               	goto	l141
 19701  2578                     l8654:	
 19702                           
 19703                           ;drv_mrf_miwi_24j40.c: 815: {
 19704                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
 19705  2578  3008               	movlw	8
 19706  2579  0021               	movlb	1	; select bank1
 19707  257A  07AA               	addwf	MiMAC_SendPacket@headerLength^(0+128),f
 19708  257B                     l141:	
 19709                           
 19710                           ;drv_mrf_miwi_24j40.c: 817: }
 19711                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
 19712  257B  0020               	movlb	0	; select bank0
 19713  257C  084A               	movf	MiMAC_SendPacket@transParam+4,w
 19714  257D  1903               	btfsc	3,2
 19715  257E  2D83               	goto	l8658
 19716                           
 19717                           ;drv_mrf_miwi_24j40.c: 820: {
 19718                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
 19719  257F  0021               	movlb	1	; select bank1
 19720  2580  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 19721  2581  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 19722                           
 19723                           ;drv_mrf_miwi_24j40.c: 822: } else
 19724  2582  2D86               	goto	l8660
 19725  2583                     l8658:	
 19726                           
 19727                           ;drv_mrf_miwi_24j40.c: 823: {
 19728                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
 19729  2583  3008               	movlw	8
 19730  2584  0021               	movlb	1	; select bank1
 19731  2585  07AA               	addwf	MiMAC_SendPacket@headerLength^(0+128),f
 19732  2586                     l8660:	
 19733                           
 19734                           ;drv_mrf_miwi_24j40.c: 825: }
 19735                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 19736  2586  0020               	movlb	0	; select bank0
 19737  2587  1AC6               	btfsc	MiMAC_SendPacket@transParam,5
 19738  2588  1946               	btfsc	MiMAC_SendPacket@transParam,2
 19739  2589  2D8C               	goto	l8666
 19740                           
 19741                           ;drv_mrf_miwi_24j40.c: 828: {
 19742                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
 19743  258A  0021               	movlb	1	; select bank1
 19744  258B  16A9               	bsf	MiMAC_SendPacket@frameControl^(0+128),5
 19745  258C                     l8666:	
 19746                           
 19747                           ;drv_mrf_miwi_24j40.c: 830: }
 19748                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
 19749  258C  0020               	movlb	0	; select bank0
 19750  258D  0846               	movf	MiMAC_SendPacket@transParam,w
 19751  258E  3903               	andlw	3
 19752  258F  3A03               	xorlw	3
 19753  2590  1D03               	skipz
 19754  2591  2D9B               	goto	l8678
 19755                           
 19756                           ;drv_mrf_miwi_24j40.c: 834: {
 19757                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
 19758  2592  0021               	movlb	1	; select bank1
 19759  2593  3007               	movlw	7
 19760  2594  01A9               	clrf	MiMAC_SendPacket@frameControl^(0+128)
 19761                           
 19762                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
 19763  2595  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 19764                           
 19765                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
 19766  2596  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 19767                           
 19768                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
 19769  2597  0020               	movlb	0	; select bank0
 19770  2598  01CA               	clrf	MiMAC_SendPacket@transParam+4
 19771  2599  0ACA               	incf	MiMAC_SendPacket@transParam+4,f
 19772                           
 19773                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
 19774  259A  12C6               	bcf	MiMAC_SendPacket@transParam,5
 19775  259B                     l8678:	
 19776                           
 19777                           ;drv_mrf_miwi_24j40.c: 842: }
 19778                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
 19779  259B  01AA               	clrf	PHYSetLongRAMAddr@address
 19780  259C  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19781  259D  0021               	movlb	1	; select bank1
 19782  259E  082A               	movf	MiMAC_SendPacket@headerLength^(0+128),w
 19783  259F  0020               	movlb	0	; select bank0
 19784  25A0  00AC               	movwf	PHYSetLongRAMAddr@value
 19785  25A1  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19786  25A3  0021               	movlb	1	; select bank1
 19787  25A4  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19788                           
 19789                           ;drv_mrf_miwi_24j40.c: 861: {
 19790                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 19791  25A5  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19792  25A6  0020               	movlb	0	; select bank0
 19793  25A7  00AA               	movwf	PHYSetLongRAMAddr@address
 19794  25A8  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19795  25A9  0021               	movlb	1	; select bank1
 19796  25AA  082A               	movf	MiMAC_SendPacket@headerLength^(0+128),w
 19797  25AB  0020               	movlb	0	; select bank0
 19798  25AC  074E               	addwf	MiMAC_SendPacket@MACPayloadLen,w
 19799  25AD  00AC               	movwf	PHYSetLongRAMAddr@value
 19800  25AE  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19801  25B0  0021               	movlb	1	; select bank1
 19802  25B1  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19803                           
 19804                           ;drv_mrf_miwi_24j40.c: 863: }
 19805                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
 19806  25B2  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19807  25B3  0020               	movlb	0	; select bank0
 19808  25B4  00AA               	movwf	PHYSetLongRAMAddr@address
 19809  25B5  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19810  25B6  0021               	movlb	1	; select bank1
 19811  25B7  0829               	movf	MiMAC_SendPacket@frameControl^(0+128),w
 19812  25B8  0020               	movlb	0	; select bank0
 19813  25B9  00AC               	movwf	PHYSetLongRAMAddr@value
 19814  25BA  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19815  25BC  0021               	movlb	1	; select bank1
 19816  25BD  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19817                           
 19818                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
 19819  25BE  0020               	movlb	0	; select bank0
 19820  25BF  0846               	movf	MiMAC_SendPacket@transParam,w
 19821  25C0  3903               	andlw	3
 19822  25C1  3A03               	xorlw	3
 19823  25C2  1D03               	skipz
 19824  25C3  2DDC               	goto	l8698
 19825                           
 19826                           ;drv_mrf_miwi_24j40.c: 870: {
 19827                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
 19828  25C4  0021               	movlb	1	; select bank1
 19829  25C5  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19830  25C6  0020               	movlb	0	; select bank0
 19831  25C7  00AA               	movwf	PHYSetLongRAMAddr@address
 19832  25C8  3080               	movlw	128
 19833  25C9  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19834  25CA  00AC               	movwf	PHYSetLongRAMAddr@value
 19835  25CB  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19836  25CD  0021               	movlb	1	; select bank1
 19837  25CE  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19838                           
 19839                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 19840  25CF  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19841  25D0  0020               	movlb	0	; select bank0
 19842  25D1  00AA               	movwf	PHYSetLongRAMAddr@address
 19843  25D2  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19844  25D3  0022               	movlb	2	; select bank2
 19845  25D4  084C               	movf	_IEEESeqNum^(0+256),w
 19846  25D5  0020               	movlb	0	; select bank0
 19847  25D6  00AC               	movwf	PHYSetLongRAMAddr@value
 19848  25D7  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19849  25D9  0022               	movlb	2	; select bank2
 19850  25DA  0ACC               	incf	_IEEESeqNum^(0+256),f
 19851  25DB  2E5F               	goto	L18
 19852  25DC                     l8698:	
 19853                           ;drv_mrf_miwi_24j40.c: 874: } else
 19854                           
 19855                           
 19856                           ;drv_mrf_miwi_24j40.c: 875: {
 19857                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
 19858  25DC  0849               	movf	MiMAC_SendPacket@transParam+3,w
 19859  25DD  1903               	btfsc	3,2
 19860  25DE  2DE8               	goto	l8706
 19861  25DF  084A               	movf	MiMAC_SendPacket@transParam+4,w
 19862  25E0  1903               	btfsc	3,2
 19863  25E1  2DE8               	goto	l8706
 19864                           
 19865                           ;drv_mrf_miwi_24j40.c: 877: {
 19866                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 19867  25E2  0021               	movlb	1	; select bank1
 19868  25E3  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19869  25E4  0020               	movlb	0	; select bank0
 19870  25E5  00AA               	movwf	PHYSetLongRAMAddr@address
 19871  25E6  3088               	movlw	136
 19872  25E7  2E04               	goto	L20
 19873  25E8                     l8706:	
 19874                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 19875                           
 19876  25E8  0849               	movf	MiMAC_SendPacket@transParam+3,w
 19877  25E9  1903               	btfsc	3,2
 19878  25EA  2DF4               	goto	l8714
 19879  25EB  084A               	movf	MiMAC_SendPacket@transParam+4,w
 19880  25EC  1D03               	btfss	3,2
 19881  25ED  2DF4               	goto	l8714
 19882                           
 19883                           ;drv_mrf_miwi_24j40.c: 880: {
 19884                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 19885  25EE  0021               	movlb	1	; select bank1
 19886  25EF  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19887  25F0  0020               	movlb	0	; select bank0
 19888  25F1  00AA               	movwf	PHYSetLongRAMAddr@address
 19889  25F2  30C8               	movlw	200
 19890  25F3  2E04               	goto	L20
 19891  25F4                     l8714:	
 19892  25F4  0849               	movf	MiMAC_SendPacket@transParam+3,w
 19893  25F5  1D03               	btfss	3,2
 19894  25F6  2DFF               	goto	l8722
 19895  25F7  0B4A               	decfsz	MiMAC_SendPacket@transParam+4,w
 19896  25F8  2DFF               	goto	l8722
 19897                           
 19898                           ;drv_mrf_miwi_24j40.c: 883: {
 19899                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 19900  25F9  0021               	movlb	1	; select bank1
 19901  25FA  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19902  25FB  0020               	movlb	0	; select bank0
 19903  25FC  00AA               	movwf	PHYSetLongRAMAddr@address
 19904  25FD  308C               	movlw	140
 19905  25FE  2E04               	goto	L20
 19906  25FF                     l8722:	
 19907                           
 19908                           ;drv_mrf_miwi_24j40.c: 886: {
 19909                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 19910  25FF  0021               	movlb	1	; select bank1
 19911  2600  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19912  2601  0020               	movlb	0	; select bank0
 19913  2602  00AA               	movwf	PHYSetLongRAMAddr@address
 19914  2603  30CC               	movlw	204
 19915  2604                     L20:	
 19916  2604  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19917  2605  00AC               	movwf	PHYSetLongRAMAddr@value
 19918  2606  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19919  2608  0021               	movlb	1	; select bank1
 19920  2609  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19921                           
 19922                           ;drv_mrf_miwi_24j40.c: 888: }
 19923                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 19924  260A  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19925  260B  0020               	movlb	0	; select bank0
 19926  260C  00AA               	movwf	PHYSetLongRAMAddr@address
 19927  260D  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19928  260E  0022               	movlb	2	; select bank2
 19929  260F  084C               	movf	_IEEESeqNum^(0+256),w
 19930  2610  0020               	movlb	0	; select bank0
 19931  2611  00AC               	movwf	PHYSetLongRAMAddr@value
 19932  2612  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19933  2614  0022               	movlb	2	; select bank2
 19934  2615  0ACC               	incf	_IEEESeqNum^(0+256),f
 19935  2616  0021               	movlb	1	; select bank1
 19936  2617  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19937                           
 19938                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 19939  2618  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19940  2619  0020               	movlb	0	; select bank0
 19941  261A  00AA               	movwf	PHYSetLongRAMAddr@address
 19942  261B  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19943  261C  084B               	movf	MiMAC_SendPacket@transParam+5,w
 19944  261D  00AC               	movwf	PHYSetLongRAMAddr@value
 19945  261E  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19946  2620  0021               	movlb	1	; select bank1
 19947  2621  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19948                           
 19949                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 19950  2622  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19951  2623  0020               	movlb	0	; select bank0
 19952  2624  00AA               	movwf	PHYSetLongRAMAddr@address
 19953  2625  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19954  2626  084C               	movf	MiMAC_SendPacket@transParam+6,w
 19955  2627  00AC               	movwf	PHYSetLongRAMAddr@value
 19956  2628  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19957  262A  0021               	movlb	1	; select bank1
 19958  262B  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19959                           
 19960                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 19961  262C  0020               	movlb	0	; select bank0
 19962  262D  1D46               	btfss	MiMAC_SendPacket@transParam,2
 19963  262E  2E40               	goto	l8742
 19964                           
 19965                           ;drv_mrf_miwi_24j40.c: 899: {
 19966                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 19967  262F  0021               	movlb	1	; select bank1
 19968  2630  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19969  2631  0020               	movlb	0	; select bank0
 19970  2632  00AA               	movwf	PHYSetLongRAMAddr@address
 19971  2633  30FF               	movlw	255
 19972  2634  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19973  2635  00AC               	movwf	PHYSetLongRAMAddr@value
 19974  2636  275D  31A4         	fcall	_PHYSetLongRAMAddr
 19975  2638  0021               	movlb	1	; select bank1
 19976  2639  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 19977                           
 19978                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 19979  263A  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19980  263B  0020               	movlb	0	; select bank0
 19981  263C  00AA               	movwf	PHYSetLongRAMAddr@address
 19982  263D  30FF               	movlw	255
 19983  263E  01AB               	clrf	PHYSetLongRAMAddr@address+1
 19984  263F  2E5C               	goto	L19
 19985  2640                     l8742:	
 19986                           ;drv_mrf_miwi_24j40.c: 902: } else
 19987                           
 19988                           
 19989                           ;drv_mrf_miwi_24j40.c: 903: {
 19990                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 19991  2640  0849               	movf	MiMAC_SendPacket@transParam+3,w
 19992  2641  1903               	btfsc	3,2
 19993  2642  2E62               	goto	l8750
 19994                           
 19995                           ;drv_mrf_miwi_24j40.c: 905: {
 19996                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 19997  2643  0021               	movlb	1	; select bank1
 19998  2644  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 19999  2645  0020               	movlb	0	; select bank0
 20000  2646  00AA               	movwf	PHYSetLongRAMAddr@address
 20001  2647  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20002  2648  0847               	movf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 20003  2649  0086               	movwf	6
 20004  264A  0848               	movf	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 20005  264B  0087               	movwf	7
 20006  264C  0801               	movf	1,w
 20007  264D  00AC               	movwf	PHYSetLongRAMAddr@value
 20008  264E  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20009  2650  0021               	movlb	1	; select bank1
 20010  2651  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20011                           
 20012                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 20013  2652  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20014  2653  0020               	movlb	0	; select bank0
 20015  2654  00AA               	movwf	PHYSetLongRAMAddr@address
 20016  2655  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20017  2656  0847               	movf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 20018  2657  0086               	movwf	6
 20019  2658  0848               	movf	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 20020  2659  0087               	movwf	7
 20021  265A  3141               	addfsr 1,1
 20022  265B  0801               	movf	1,w
 20023  265C                     L19:	
 20024  265C  00AC               	movwf	PHYSetLongRAMAddr@value
 20025  265D  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20026  265F                     L18:	
 20027  265F  0021               	movlb	1	; select bank1
 20028  2660  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20029                           
 20030                           ;drv_mrf_miwi_24j40.c: 908: } else
 20031  2661  2E7D               	goto	l8764
 20032  2662                     l8750:	
 20033                           
 20034                           ;drv_mrf_miwi_24j40.c: 909: {
 20035                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 20036  2662  0021               	movlb	1	; select bank1
 20037  2663  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 20038  2664                     l8756:	
 20039                           
 20040                           ;drv_mrf_miwi_24j40.c: 911: {
 20041                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 20042  2664  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20043  2665  0020               	movlb	0	; select bank0
 20044  2666  00AA               	movwf	PHYSetLongRAMAddr@address
 20045  2667  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20046  2668  0021               	movlb	1	; select bank1
 20047  2669  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 20048  266A  0020               	movlb	0	; select bank0
 20049  266B  00CF               	movwf	??_MiMAC_SendPacket
 20050  266C  01D0               	clrf	??_MiMAC_SendPacket+1
 20051  266D  0747               	addwf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 20052  266E  0086               	movwf	6
 20053  266F  0850               	movf	??_MiMAC_SendPacket+1,w
 20054  2670  3D48               	addwfc	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 20055  2671  0087               	movwf	7
 20056  2672  0801               	movf	1,w
 20057  2673  00AC               	movwf	PHYSetLongRAMAddr@value
 20058  2674  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20059  2676  0021               	movlb	1	; select bank1
 20060  2677  3008               	movlw	8
 20061  2678  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20062  2679  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 20063  267A  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 20064  267B  1C03               	skipc
 20065  267C  2E64               	goto	l8756
 20066  267D                     l8764:	
 20067                           
 20068                           ;drv_mrf_miwi_24j40.c: 913: }
 20069                           ;drv_mrf_miwi_24j40.c: 914: }
 20070                           ;drv_mrf_miwi_24j40.c: 915: }
 20071                           ;drv_mrf_miwi_24j40.c: 916: }
 20072                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 20073  267D  0828               	movf	MiMAC_SendPacket@IntraPAN^(0+128),w
 20074  267E  1D03               	btfss	3,2
 20075  267F  2E98               	goto	l8772
 20076                           
 20077                           ;drv_mrf_miwi_24j40.c: 921: {
 20078                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 20079  2680  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20080  2681  0020               	movlb	0	; select bank0
 20081  2682  00AA               	movwf	PHYSetLongRAMAddr@address
 20082  2683  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20083  2684  0022               	movlb	2	; select bank2
 20084  2685  085B               	movf	_MAC_PANID^(0+256),w
 20085  2686  0020               	movlb	0	; select bank0
 20086  2687  00AC               	movwf	PHYSetLongRAMAddr@value
 20087  2688  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20088  268A  0021               	movlb	1	; select bank1
 20089  268B  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20090                           
 20091                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 20092  268C  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20093  268D  0020               	movlb	0	; select bank0
 20094  268E  00AA               	movwf	PHYSetLongRAMAddr@address
 20095  268F  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20096  2690  0022               	movlb	2	; select bank2
 20097  2691  085C               	movf	(_MAC_PANID^(0+256)+1),w
 20098  2692  0020               	movlb	0	; select bank0
 20099  2693  00AC               	movwf	PHYSetLongRAMAddr@value
 20100  2694  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20101  2696  0021               	movlb	1	; select bank1
 20102  2697  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20103  2698                     l8772:	
 20104                           
 20105                           ;drv_mrf_miwi_24j40.c: 924: }
 20106                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 20107  2698  0020               	movlb	0	; select bank0
 20108  2699  084A               	movf	MiMAC_SendPacket@transParam+4,w
 20109  269A  1903               	btfsc	3,2
 20110  269B  2EB6               	goto	l8780
 20111                           
 20112                           ;drv_mrf_miwi_24j40.c: 929: {
 20113                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 20114  269C  0021               	movlb	1	; select bank1
 20115  269D  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20116  269E  0020               	movlb	0	; select bank0
 20117  269F  00AA               	movwf	PHYSetLongRAMAddr@address
 20118  26A0  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20119  26A1  0022               	movlb	2	; select bank2
 20120  26A2  085D               	movf	_myNetworkAddress^(0+256),w
 20121  26A3  0020               	movlb	0	; select bank0
 20122  26A4  00AC               	movwf	PHYSetLongRAMAddr@value
 20123  26A5  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20124  26A7  0021               	movlb	1	; select bank1
 20125  26A8  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20126                           
 20127                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 20128  26A9  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20129  26AA  0020               	movlb	0	; select bank0
 20130  26AB  00AA               	movwf	PHYSetLongRAMAddr@address
 20131  26AC  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20132  26AD  0022               	movlb	2	; select bank2
 20133  26AE  085E               	movf	(_myNetworkAddress^(0+256)+1),w
 20134  26AF  0020               	movlb	0	; select bank0
 20135  26B0  00AC               	movwf	PHYSetLongRAMAddr@value
 20136  26B1  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20137  26B3  0021               	movlb	1	; select bank1
 20138  26B4  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20139                           
 20140                           ;drv_mrf_miwi_24j40.c: 932: } else
 20141  26B5  2ED0               	goto	l8794
 20142  26B6                     l8780:	
 20143                           
 20144                           ;drv_mrf_miwi_24j40.c: 933: {
 20145                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 20146  26B6  0021               	movlb	1	; select bank1
 20147  26B7  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 20148  26B8                     l8786:	
 20149                           
 20150                           ;drv_mrf_miwi_24j40.c: 935: {
 20151                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 20152  26B8  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20153  26B9  0020               	movlb	0	; select bank0
 20154  26BA  00AA               	movwf	PHYSetLongRAMAddr@address
 20155  26BB  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20156  26BC  0021               	movlb	1	; select bank1
 20157  26BD  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 20158  26BE  0022               	movlb	2	; select bank2
 20159  26BF  0747               	addwf	(low ((_MACInitParams| (0+256)+1)))^0,w
 20160  26C0  0020               	movlb	0	; select bank0
 20161  26C1  00CF               	movwf	??_MiMAC_SendPacket
 20162  26C2  0086               	movwf	6
 20163  26C3  3001               	movlw	1	; select bank2/3
 20164  26C4  0087               	movwf	7
 20165  26C5  0801               	movf	1,w
 20166  26C6  00AC               	movwf	PHYSetLongRAMAddr@value
 20167  26C7  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20168  26C9  0021               	movlb	1	; select bank1
 20169  26CA  3008               	movlw	8
 20170  26CB  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20171  26CC  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 20172  26CD  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 20173  26CE  1C03               	skipc
 20174  26CF  2EB8               	goto	l8786
 20175  26D0                     l8794:	
 20176                           
 20177                           ;drv_mrf_miwi_24j40.c: 937: }
 20178                           ;drv_mrf_miwi_24j40.c: 938: }
 20179                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 20180  26D0  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 20181  26D1                     l8802:	
 20182  26D1  0020               	movlb	0	; select bank0
 20183  26D2  084E               	movf	MiMAC_SendPacket@MACPayloadLen,w
 20184  26D3  0021               	movlb	1	; select bank1
 20185  26D4  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 20186  26D5  1803               	btfsc	3,0
 20187  26D6  2EEB               	goto	l167
 20188                           
 20189                           ;drv_mrf_miwi_24j40.c: 965: {
 20190                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 20191  26D7  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 20192  26D8  0020               	movlb	0	; select bank0
 20193  26D9  00AA               	movwf	PHYSetLongRAMAddr@address
 20194  26DA  01AB               	clrf	PHYSetLongRAMAddr@address+1
 20195  26DB  0021               	movlb	1	; select bank1
 20196  26DC  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 20197  26DD  0020               	movlb	0	; select bank0
 20198  26DE  074D               	addwf	MiMAC_SendPacket@MACPayload,w
 20199  26DF  00CF               	movwf	??_MiMAC_SendPacket
 20200  26E0  0086               	movwf	6
 20201  26E1  3002               	movlw	2	; select bank4/5
 20202  26E2  0087               	movwf	7
 20203  26E3  0801               	movf	1,w
 20204  26E4  00AC               	movwf	PHYSetLongRAMAddr@value
 20205  26E5  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20206  26E7  0021               	movlb	1	; select bank1
 20207  26E8  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 20208  26E9  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 20209  26EA  2ED1               	goto	l8802
 20210  26EB                     l167:	
 20211                           
 20212                           ;drv_mrf_miwi_24j40.c: 967: }
 20213                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 20214  26EB  0020               	movlb	0	; select bank0
 20215  26EC  145E               	bsf	_MRF24J40Status,0	;volatile
 20216                           
 20217                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 20218  26ED  1AC6               	btfsc	MiMAC_SendPacket@transParam,5
 20219  26EE  1946               	btfsc	MiMAC_SendPacket@transParam,2
 20220  26EF  2EF6               	goto	l168
 20221                           
 20222                           ;drv_mrf_miwi_24j40.c: 973: {
 20223                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 20224  26F0  3005               	movlw	5
 20225  26F1  0021               	movlb	1	; select bank1
 20226  26F2  00AB               	movwf	MiMAC_SendPacket@i^(0+128)
 20227                           
 20228                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 20229  26F3  0020               	movlb	0	; select bank0
 20230  26F4  14DE               	bsf	_MRF24J40Status,1	;volatile
 20231                           
 20232                           ;drv_mrf_miwi_24j40.c: 978: } else
 20233  26F5  2EFB               	goto	l8810
 20234  26F6                     l168:	
 20235                           
 20236                           ;drv_mrf_miwi_24j40.c: 979: {
 20237                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 20238  26F6  0021               	movlb	1	; select bank1
 20239  26F7  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 20240  26F8  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 20241                           
 20242                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 20243  26F9  0020               	movlb	0	; select bank0
 20244  26FA  10DE               	bcf	_MRF24J40Status,1	;volatile
 20245  26FB                     l8810:	
 20246                           
 20247                           ;drv_mrf_miwi_24j40.c: 984: }
 20248                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 20249  26FB  0021               	movlb	1	; select bank1
 20250  26FC  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 20251  26FD  0020               	movlb	0	; select bank0
 20252  26FE  00AA               	movwf	PHYSetShortRAMAddr@value
 20253  26FF  3037               	movlw	55
 20254  2700  2521               	fcall	_PHYSetShortRAMAddr
 20255                           
 20256                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 20257  2701  3197  2789  31A4   	fcall	_MiWi_TickGet
 20258  2704  082C               	movf	?_MiWi_TickGet+3,w
 20259  2705  0021               	movlb	1	; select bank1
 20260  2706  00A3               	movwf	(MiMAC_SendPacket@t1+3)^(0+128)
 20261  2707  0020               	movlb	0	; select bank0
 20262  2708  082B               	movf	?_MiWi_TickGet+2,w
 20263  2709  0021               	movlb	1	; select bank1
 20264  270A  00A2               	movwf	(MiMAC_SendPacket@t1+2)^(0+128)
 20265  270B  0020               	movlb	0	; select bank0
 20266  270C  082A               	movf	?_MiWi_TickGet+1,w
 20267  270D  0021               	movlb	1	; select bank1
 20268  270E  00A1               	movwf	(MiMAC_SendPacket@t1+1)^(0+128)
 20269  270F  0020               	movlb	0	; select bank0
 20270  2710  0829               	movf	?_MiWi_TickGet,w
 20271  2711  0021               	movlb	1	; select bank1
 20272  2712  00A0               	movwf	MiMAC_SendPacket@t1^(0+128)
 20273  2713                     l8812:	
 20274                           
 20275                           ;drv_mrf_miwi_24j40.c: 993: {
 20276                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB1 == 0)
 20277  2713  0020               	movlb	0	; select bank0
 20278  2714  188D               	btfsc	13,1	;volatile
 20279  2715  2F18               	goto	l171
 20280                           
 20281                           ;drv_mrf_miwi_24j40.c: 995: {
 20282                           ;drv_mrf_miwi_24j40.c: 996: IOCBFbits.IOCBF1 = 1;
 20283  2716  0027               	movlb	7	; select bank7
 20284  2717  1496               	bsf	22,1	;volatile
 20285  2718                     l171:	
 20286                           
 20287                           ;drv_mrf_miwi_24j40.c: 997: }
 20288                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 20289  2718  0020               	movlb	0	; select bank0
 20290  2719  185E               	btfsc	_MRF24J40Status,0	;volatile
 20291  271A  2F1F               	goto	l8824
 20292                           
 20293                           ;drv_mrf_miwi_24j40.c: 999: {
 20294                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 20295  271B  1D5E               	btfss	_MRF24J40Status,2	;volatile
 20296  271C  3401               	retlw	1
 20297                           
 20298                           ;drv_mrf_miwi_24j40.c: 1001: {
 20299                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 20300  271D  115E               	bcf	_MRF24J40Status,2	;volatile
 20301                           
 20302                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 20303  271E  3400               	retlw	0
 20304  271F                     l8824:	
 20305                           
 20306                           ;drv_mrf_miwi_24j40.c: 1006: }
 20307                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 20308  271F  3197  2789  31A4   	fcall	_MiWi_TickGet
 20309  2722  082C               	movf	?_MiWi_TickGet+3,w
 20310  2723  0021               	movlb	1	; select bank1
 20311  2724  00A7               	movwf	(MiMAC_SendPacket@t2+3)^(0+128)
 20312  2725  0020               	movlb	0	; select bank0
 20313  2726  082B               	movf	?_MiWi_TickGet+2,w
 20314  2727  0021               	movlb	1	; select bank1
 20315  2728  00A6               	movwf	(MiMAC_SendPacket@t2+2)^(0+128)
 20316  2729  0020               	movlb	0	; select bank0
 20317  272A  082A               	movf	?_MiWi_TickGet+1,w
 20318  272B  0021               	movlb	1	; select bank1
 20319  272C  00A5               	movwf	(MiMAC_SendPacket@t2+1)^(0+128)
 20320  272D  0020               	movlb	0	; select bank0
 20321  272E  0829               	movf	?_MiWi_TickGet,w
 20322  272F  0021               	movlb	1	; select bank1
 20323  2730  00A4               	movwf	MiMAC_SendPacket@t2^(0+128)
 20324                           
 20325                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(10000000)/32)/25))
 20326  2731  0820               	movf	MiMAC_SendPacket@t1^(0+128),w
 20327  2732  0224               	subwf	MiMAC_SendPacket@t2^(0+128),w
 20328  2733  0020               	movlb	0	; select bank0
 20329  2734  00CF               	movwf	??_MiMAC_SendPacket
 20330  2735  0021               	movlb	1	; select bank1
 20331  2736  0821               	movf	(MiMAC_SendPacket@t1+1)^(0+128),w
 20332  2737  3B25               	subwfb	(MiMAC_SendPacket@t2+1)^(0+128),w
 20333  2738  0020               	movlb	0	; select bank0
 20334  2739  00D0               	movwf	??_MiMAC_SendPacket+1
 20335  273A  0021               	movlb	1	; select bank1
 20336  273B  0822               	movf	(MiMAC_SendPacket@t1+2)^(0+128),w
 20337  273C  3B26               	subwfb	(MiMAC_SendPacket@t2+2)^(0+128),w
 20338  273D  0020               	movlb	0	; select bank0
 20339  273E  00D1               	movwf	??_MiMAC_SendPacket+2
 20340  273F  0021               	movlb	1	; select bank1
 20341  2740  0823               	movf	(MiMAC_SendPacket@t1+3)^(0+128),w
 20342  2741  3B27               	subwfb	(MiMAC_SendPacket@t2+3)^(0+128),w
 20343  2742  0020               	movlb	0	; select bank0
 20344  2743  00D2               	movwf	??_MiMAC_SendPacket+3
 20345  2744  0852               	movf	??_MiMAC_SendPacket+3,w
 20346  2745  1D03               	btfss	3,2
 20347  2746  2F50               	goto	l8828
 20348  2747  0851               	movf	??_MiMAC_SendPacket+2,w
 20349  2748  1D03               	btfss	3,2
 20350  2749  2F50               	goto	l8828
 20351  274A  30D5               	movlw	213
 20352  274B  024F               	subwf	??_MiMAC_SendPacket,w
 20353  274C  3030               	movlw	48
 20354  274D  3B50               	subwfb	??_MiMAC_SendPacket+1,w
 20355  274E  1C03               	btfss	3,0
 20356  274F  2F13               	goto	l8812
 20357  2750                     l8828:	
 20358                           
 20359                           ;drv_mrf_miwi_24j40.c: 1009: {
 20360                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 20361  2750  241A               	fcall	_InitMRF24J40
 20362                           
 20363                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 20364  2751  305D               	movlw	low _myNetworkAddress
 20365  2752  00AD               	movwf	MiMAC_SetAltAddress@Address
 20366  2753  3001               	movlw	high _myNetworkAddress
 20367  2754  00AE               	movwf	MiMAC_SetAltAddress@Address+1
 20368  2755  305B               	movlw	low _MAC_PANID
 20369  2756  00AF               	movwf	MiMAC_SetAltAddress@PANID
 20370  2757  3001               	movlw	high _MAC_PANID
 20371  2758  00B0               	movwf	MiMAC_SetAltAddress@PANID+1
 20372  2759  31A1  2109         	fcall	_MiMAC_SetAltAddress
 20373                           
 20374                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 20375  275B  105E               	bcf	_MRF24J40Status,0	;volatile
 20376  275C  3400               	retlw	0
 20377  275D                     __end_of_MiMAC_SendPacket:	
 20378                           ;drv_mrf_miwi_24j40.c: 1014: }
 20379                           ;drv_mrf_miwi_24j40.c: 1015: }
 20380                           ;drv_mrf_miwi_24j40.c: 1017: return 1;
 20381                           
 20382  275D                     __ptext57:	
 20383 ;; *************** function _PHYSetLongRAMAddr *****************
 20384 ;; Defined at:
 20385 ;;		line 90 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20386 ;; Parameters:    Size  Location     Type
 20387 ;;  address         2   10[BANK0 ] unsigned int 
 20388 ;;  value           1   12[BANK0 ] unsigned char 
 20389 ;; Auto vars:     Size  Location     Type
 20390 ;;  tmpRFIE         1   15[BANK0 ] volatile unsigned char 
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  1    wreg      void 
 20393 ;; Registers used:
 20394 ;;		wreg, status,2, status,0, pclath, cstack
 20395 ;; Tracked objects:
 20396 ;;		On entry : 1F/0
 20397 ;;		On exit  : 1F/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20400 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20403 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20404 ;;Total ram usage:        6 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:    5
 20407 ;; This function calls:
 20408 ;;		_SPIPut
 20409 ;; This function is called by:
 20410 ;;		_InitMRF24J40
 20411 ;;		_MiMAC_SendPacket
 20412 ;;		_MiMAC_SetChannel
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           
 20417                           ;psect for function _PHYSetLongRAMAddr
 20418  275D                     _PHYSetLongRAMAddr:	
 20419                           
 20420                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20421                           
 20422                           ;incstack = 0
 20423                           ; Regs used in _PHYSetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20424  275D  3000               	movlw	0
 20425  275E  198B               	btfsc	11,3	;volatile
 20426  275F  3001               	movlw	1
 20427  2760  00AF               	movwf	PHYSetLongRAMAddr@tmpRFIE	;volatile
 20428                           
 20429                           ;drv_mrf_miwi_24j40.c: 94: INTCONbits.IOCIE = 0;
 20430  2761  118B               	bcf	11,3	;volatile
 20431                           
 20432                           ;drv_mrf_miwi_24j40.c: 95: LATBbits.LATB3 = 0;
 20433  2762  0022               	movlb	2	; select bank2
 20434  2763  118D               	bcf	13,3	;volatile
 20435                           
 20436                           ;drv_mrf_miwi_24j40.c: 96: SPIPut((((uint8_t) (address >> 3))&0x7F) | 0x80);
 20437  2764  0020               	movlb	0	; select bank0
 20438  2765  082B               	movf	PHYSetLongRAMAddr@address+1,w
 20439  2766  00AE               	movwf	??_PHYSetLongRAMAddr+1
 20440  2767  082A               	movf	PHYSetLongRAMAddr@address,w
 20441  2768  00AD               	movwf	??_PHYSetLongRAMAddr
 20442  2769  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 20443  276A  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 20444  276B  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 20445  276C  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 20446  276D  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 20447  276E  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 20448  276F  082D               	movf	??_PHYSetLongRAMAddr,w
 20449  2770  397F               	andlw	127
 20450  2771  3880               	iorlw	128
 20451  2772  3197  27ED  31A4   	fcall	_SPIPut
 20452                           
 20453                           ;drv_mrf_miwi_24j40.c: 97: SPIPut((((uint8_t) (address << 5))&0xE0) | 0x10);
 20454  2775  082A               	movf	PHYSetLongRAMAddr@address,w
 20455  2776  00AD               	movwf	??_PHYSetLongRAMAddr
 20456  2777  3004               	movlw	4
 20457  2778                     u7395:	
 20458  2778  35AD               	lslf	??_PHYSetLongRAMAddr,f
 20459  2779  3EFF               	addlw	-1
 20460  277A  1D03               	skipz
 20461  277B  2F78               	goto	u7395
 20462  277C  352D               	lslf	??_PHYSetLongRAMAddr,w
 20463  277D  39E0               	andlw	224
 20464  277E  3810               	iorlw	16
 20465  277F  3197  27ED  31A4   	fcall	_SPIPut
 20466                           
 20467                           ;drv_mrf_miwi_24j40.c: 98: SPIPut(value);
 20468  2782  082C               	movf	PHYSetLongRAMAddr@value,w
 20469  2783  3197  27ED         	fcall	_SPIPut
 20470                           
 20471                           ;drv_mrf_miwi_24j40.c: 99: LATBbits.LATB3 = 1;
 20472  2785  0022               	movlb	2	; select bank2
 20473  2786  158D               	bsf	13,3	;volatile
 20474                           
 20475                           ;drv_mrf_miwi_24j40.c: 100: INTCONbits.IOCIE = tmpRFIE;
 20476  2787  0020               	movlb	0	; select bank0
 20477  2788  0C2F               	rrf	PHYSetLongRAMAddr@tmpRFIE,w	;volatile
 20478  2789  1C03               	skipc
 20479  278A  118B               	bcf	11,3	;volatile
 20480  278B  1803               	skipnc
 20481  278C  158B               	bsf	11,3	;volatile
 20482  278D  0008               	return
 20483  278E                     __end_of_PHYSetLongRAMAddr:	
 20484  278E                     __ptext53:	
 20485 ;; *************** function _PHYGetLongRAMAddr *****************
 20486 ;; Defined at:
 20487 ;;		line 185 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20488 ;; Parameters:    Size  Location     Type
 20489 ;;  address         2   10[BANK0 ] unsigned int 
 20490 ;; Auto vars:     Size  Location     Type
 20491 ;;  tmpRFIE         1   15[BANK0 ] volatile unsigned char 
 20492 ;;  toReturn        1   14[BANK0 ] unsigned char 
 20493 ;; Return value:  Size  Location     Type
 20494 ;;                  1    wreg      unsigned char 
 20495 ;; Registers used:
 20496 ;;		wreg, status,2, status,0, pclath, cstack
 20497 ;; Tracked objects:
 20498 ;;		On entry : 1F/0
 20499 ;;		On exit  : 1F/0
 20500 ;;		Unchanged: 0/0
 20501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20506 ;;Total ram usage:        6 bytes
 20507 ;; Hardware stack levels used:    1
 20508 ;; Hardware stack levels required when called:    6
 20509 ;; This function calls:
 20510 ;;		_SPIGet
 20511 ;;		_SPIPut
 20512 ;; This function is called by:
 20513 ;;		_InitMRF24J40
 20514 ;; This function uses a non-reentrant model
 20515 ;;
 20516                           
 20517                           
 20518                           ;psect for function _PHYGetLongRAMAddr
 20519  278E                     _PHYGetLongRAMAddr:	
 20520                           
 20521                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 20522                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20523                           
 20524                           ;incstack = 0
 20525                           ; Regs used in _PHYGetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20526  278E  3000               	movlw	0
 20527  278F  198B               	btfsc	11,3	;volatile
 20528  2790  3001               	movlw	1
 20529  2791  00AF               	movwf	PHYGetLongRAMAddr@tmpRFIE	;volatile
 20530                           
 20531                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.IOCIE = 0;
 20532  2792  118B               	bcf	11,3	;volatile
 20533                           
 20534                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 20535  2793  0022               	movlb	2	; select bank2
 20536  2794  118D               	bcf	13,3	;volatile
 20537                           
 20538                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
 20539  2795  0020               	movlb	0	; select bank0
 20540  2796  082B               	movf	PHYGetLongRAMAddr@address+1,w
 20541  2797  00AD               	movwf	??_PHYGetLongRAMAddr+1
 20542  2798  082A               	movf	PHYGetLongRAMAddr@address,w
 20543  2799  00AC               	movwf	??_PHYGetLongRAMAddr
 20544  279A  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 20545  279B  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 20546  279C  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 20547  279D  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 20548  279E  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 20549  279F  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 20550  27A0  082C               	movf	??_PHYGetLongRAMAddr,w
 20551  27A1  397F               	andlw	127
 20552  27A2  3880               	iorlw	128
 20553  27A3  3197  27ED  31A4   	fcall	_SPIPut
 20554                           
 20555                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
 20556  27A6  082A               	movf	PHYGetLongRAMAddr@address,w
 20557  27A7  00AC               	movwf	??_PHYGetLongRAMAddr
 20558  27A8  3005               	movlw	5
 20559  27A9                     u7405:	
 20560  27A9  35AC               	lslf	??_PHYGetLongRAMAddr,f
 20561  27AA  0B89               	decfsz	9,f
 20562  27AB  2FA9               	goto	u7405
 20563  27AC  082C               	movf	??_PHYGetLongRAMAddr,w
 20564  27AD  39E0               	andlw	224
 20565  27AE  3197  27ED  31A4   	fcall	_SPIPut
 20566                           
 20567                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
 20568  27B1  27D9               	fcall	_SPIGet
 20569  27B2  0020               	movlb	0	; select bank0
 20570  27B3  00AE               	movwf	PHYGetLongRAMAddr@toReturn
 20571                           
 20572                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 20573  27B4  0022               	movlb	2	; select bank2
 20574  27B5  158D               	bsf	13,3	;volatile
 20575                           
 20576                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.IOCIE = tmpRFIE;
 20577  27B6  0020               	movlb	0	; select bank0
 20578  27B7  0C2F               	rrf	PHYGetLongRAMAddr@tmpRFIE,w	;volatile
 20579  27B8  1C03               	skipc
 20580  27B9  118B               	bcf	11,3	;volatile
 20581  27BA  1803               	skipnc
 20582  27BB  158B               	bsf	11,3	;volatile
 20583                           
 20584                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 20585  27BC  082E               	movf	PHYGetLongRAMAddr@toReturn,w
 20586  27BD  0008               	return
 20587  27BE                     __end_of_PHYGetLongRAMAddr:	
 20588  27BE                     __ptext52:	
 20589 ;; *************** function _PHYGetShortRAMAddr *****************
 20590 ;; Defined at:
 20591 ;;		line 154 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20592 ;; Parameters:    Size  Location     Type
 20593 ;;  address         1    wreg     unsigned char 
 20594 ;; Auto vars:     Size  Location     Type
 20595 ;;  address         1   10[BANK0 ] unsigned char 
 20596 ;;  tmpRFIE         1   12[BANK0 ] volatile unsigned char 
 20597 ;;  toReturn        1   11[BANK0 ] unsigned char 
 20598 ;; Return value:  Size  Location     Type
 20599 ;;                  1    wreg      unsigned char 
 20600 ;; Registers used:
 20601 ;;		wreg, status,2, status,0, pclath, cstack
 20602 ;; Tracked objects:
 20603 ;;		On entry : 1D/0
 20604 ;;		On exit  : 1F/0
 20605 ;;		Unchanged: 0/0
 20606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20610 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20611 ;;Total ram usage:        3 bytes
 20612 ;; Hardware stack levels used:    1
 20613 ;; Hardware stack levels required when called:    6
 20614 ;; This function calls:
 20615 ;;		_SPIGet
 20616 ;;		_SPIPut
 20617 ;; This function is called by:
 20618 ;;		_InitMRF24J40
 20619 ;; This function uses a non-reentrant model
 20620 ;;
 20621                           
 20622                           
 20623                           ;psect for function _PHYGetShortRAMAddr
 20624  27BE                     _PHYGetShortRAMAddr:	
 20625                           
 20626                           ;incstack = 0
 20627                           ; Regs used in _PHYGetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20628                           ;PHYGetShortRAMAddr@address stored from wreg
 20629  27BE  0020               	movlb	0	; select bank0
 20630  27BF  00AA               	movwf	PHYGetShortRAMAddr@address
 20631                           
 20632                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 20633                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20634  27C0  3000               	movlw	0
 20635  27C1  198B               	btfsc	11,3	;volatile
 20636  27C2  3001               	movlw	1
 20637  27C3  00AC               	movwf	PHYGetShortRAMAddr@tmpRFIE	;volatile
 20638                           
 20639                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.IOCIE = 0;
 20640  27C4  118B               	bcf	11,3	;volatile
 20641                           
 20642                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 20643  27C5  0022               	movlb	2	; select bank2
 20644  27C6  118D               	bcf	13,3	;volatile
 20645                           
 20646                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
 20647  27C7  0020               	movlb	0	; select bank0
 20648  27C8  082A               	movf	PHYGetShortRAMAddr@address,w
 20649  27C9  3197  27ED  31A4   	fcall	_SPIPut
 20650                           
 20651                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
 20652  27CC  27D9               	fcall	_SPIGet
 20653  27CD  0020               	movlb	0	; select bank0
 20654  27CE  00AB               	movwf	PHYGetShortRAMAddr@toReturn
 20655                           
 20656                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 20657  27CF  0022               	movlb	2	; select bank2
 20658  27D0  158D               	bsf	13,3	;volatile
 20659                           
 20660                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.IOCIE = tmpRFIE;
 20661  27D1  0020               	movlb	0	; select bank0
 20662  27D2  0C2C               	rrf	PHYGetShortRAMAddr@tmpRFIE,w	;volatile
 20663  27D3  1C03               	skipc
 20664  27D4  118B               	bcf	11,3	;volatile
 20665  27D5  1803               	skipnc
 20666  27D6  158B               	bsf	11,3	;volatile
 20667                           
 20668                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 20669  27D7  082B               	movf	PHYGetShortRAMAddr@toReturn,w
 20670  27D8  0008               	return
 20671  27D9                     __end_of_PHYGetShortRAMAddr:	
 20672  27D9                     __ptext54:	
 20673 ;; *************** function _SPIGet *****************
 20674 ;; Defined at:
 20675 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;		None
 20678 ;; Auto vars:     Size  Location     Type
 20679 ;;		None
 20680 ;; Return value:  Size  Location     Type
 20681 ;;                  1    wreg      unsigned char 
 20682 ;; Registers used:
 20683 ;;		wreg, status,2, status,0, pclath, cstack
 20684 ;; Tracked objects:
 20685 ;;		On entry : 1F/0
 20686 ;;		On exit  : 1F/4
 20687 ;;		Unchanged: 0/0
 20688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20693 ;;Total ram usage:        0 bytes
 20694 ;; Hardware stack levels used:    1
 20695 ;; Hardware stack levels required when called:    5
 20696 ;; This function calls:
 20697 ;;		_SPIPut
 20698 ;; This function is called by:
 20699 ;;		_PHYGetShortRAMAddr
 20700 ;;		_PHYGetLongRAMAddr
 20701 ;;		_EEPROM_Read
 20702 ;; This function uses a non-reentrant model
 20703 ;;
 20704                           
 20705                           
 20706                           ;psect for function _SPIGet
 20707  27D9                     _SPIGet:	
 20708                           
 20709                           ;spi.c: 115: SPIPut(0x00);
 20710                           
 20711                           ;incstack = 0
 20712                           ; Regs used in _SPIGet: [wreg+status,2+status,0+pclath+cstack]
 20713  27D9  3000               	movlw	0
 20714  27DA  3197  27ED         	fcall	_SPIPut
 20715                           
 20716                           ;spi.c: 116: return SSP1BUF;
 20717  27DC  0024               	movlb	4	; select bank4
 20718  27DD  0811               	movf	17,w	;volatile
 20719  27DE  0008               	return
 20720  27DF                     __end_of_SPIGet:	
 20721  27DF                     __ptext55:	
 20722 ;; *************** function _MiMAC_SetChannel *****************
 20723 ;; Defined at:
 20724 ;;		line 1302 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20725 ;; Parameters:    Size  Location     Type
 20726 ;;  channel         1    wreg     unsigned char 
 20727 ;;  offsetFreq      1   16[BANK0 ] unsigned char 
 20728 ;; Auto vars:     Size  Location     Type
 20729 ;;  channel         1   17[BANK0 ] unsigned char 
 20730 ;; Return value:  Size  Location     Type
 20731 ;;                  1    wreg      unsigned char 
 20732 ;; Registers used:
 20733 ;;		wreg, status,2, status,0, pclath, cstack
 20734 ;; Tracked objects:
 20735 ;;		On entry : 1D/0
 20736 ;;		On exit  : 1F/0
 20737 ;;		Unchanged: 0/0
 20738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20739 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20743 ;;Total ram usage:        2 bytes
 20744 ;; Hardware stack levels used:    1
 20745 ;; Hardware stack levels required when called:    6
 20746 ;; This function calls:
 20747 ;;		_PHYSetLongRAMAddr
 20748 ;;		_PHYSetShortRAMAddr
 20749 ;; This function is called by:
 20750 ;;		_InitMRF24J40
 20751 ;;		_MiApp_SetChannel
 20752 ;; This function uses a non-reentrant model
 20753 ;;
 20754                           
 20755                           
 20756                           ;psect for function _MiMAC_SetChannel
 20757  27DF                     _MiMAC_SetChannel:	
 20758                           
 20759                           ;incstack = 0
 20760                           ; Regs used in _MiMAC_SetChannel: [wreg+status,2+status,0+pclath+cstack]
 20761                           ;MiMAC_SetChannel@channel stored from wreg
 20762  27DF  0020               	movlb	0	; select bank0
 20763  27E0  00B1               	movwf	MiMAC_SetChannel@channel
 20764                           
 20765                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 20766  27E1  300B               	movlw	11
 20767  27E2  0231               	subwf	MiMAC_SetChannel@channel,w
 20768  27E3  1C03               	skipc
 20769  27E4  3400               	retlw	0
 20770  27E5  301B               	movlw	27
 20771  27E6  0231               	subwf	MiMAC_SetChannel@channel,w
 20772  27E7  1803               	btfsc	3,0
 20773                           
 20774                           ;drv_mrf_miwi_24j40.c: 1305: {
 20775                           ;drv_mrf_miwi_24j40.c: 1306: return 0;
 20776  27E8  3400               	retlw	0
 20777                           
 20778                           ;drv_mrf_miwi_24j40.c: 1307: }
 20779                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 20780  27E9  0831               	movf	MiMAC_SetChannel@channel,w
 20781  27EA  0022               	movlb	2	; select bank2
 20782  27EB  00CE               	movwf	_MACCurrentChannel^(0+256)
 20783                           
 20784                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 20785  27EC  0020               	movlb	0	; select bank0
 20786  27ED  3002               	movlw	2
 20787  27EE  01AA               	clrf	PHYSetLongRAMAddr@address
 20788  27EF  00AB               	movwf	PHYSetLongRAMAddr@address+1
 20789  27F0  0E31               	swapf	MiMAC_SetChannel@channel,w
 20790  27F1  39F0               	andlw	240
 20791  27F2  3E50               	addlw	80
 20792  27F3  3803               	iorlw	3
 20793  27F4  00AC               	movwf	PHYSetLongRAMAddr@value
 20794  27F5  275D  31A4         	fcall	_PHYSetLongRAMAddr
 20795                           
 20796                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 20797  27F7  3004               	movlw	4
 20798  27F8  00AA               	movwf	PHYSetShortRAMAddr@value
 20799  27F9  306D               	movlw	109
 20800  27FA  2521  31A4         	fcall	_PHYSetShortRAMAddr
 20801  27FC  306D               	movlw	109
 20802                           
 20803                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 20804  27FD  01AA               	clrf	PHYSetShortRAMAddr@value
 20805  27FE  2521               	fcall	_PHYSetShortRAMAddr
 20806                           
 20807                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 20808  27FF  3401               	retlw	1
 20809  2800                     __end_of_MiMAC_SetChannel:	
 20810                           
 20811                           	psect	text58
 20812  0505                     __ptext58:	
 20813 ;; *************** function _AddConnection *****************
 20814 ;; Defined at:
 20815 ;;		line 2535 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;		None
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;  i               1   34[BANK0 ] unsigned char 
 20820 ;;  connectionSl    1   33[BANK0 ] unsigned char 
 20821 ;;  status          1   32[BANK0 ] unsigned char 
 20822 ;; Return value:  Size  Location     Type
 20823 ;;                  1    wreg      unsigned char 
 20824 ;; Registers used:
 20825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20826 ;; Tracked objects:
 20827 ;;		On entry : 1C/2
 20828 ;;		On exit  : 1F/0
 20829 ;;		Unchanged: 0/0
 20830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20832 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20833 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20835 ;;Total ram usage:        8 bytes
 20836 ;; Hardware stack levels used:    1
 20837 ;; Hardware stack levels required when called:    6
 20838 ;; This function calls:
 20839 ;;		_NVMWrite
 20840 ;;		_Total_Connections
 20841 ;;		___bmul
 20842 ;;		_isSameAddress
 20843 ;; This function is called by:
 20844 ;;		_P2PTasks
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           
 20849                           ;psect for function _AddConnection
 20850  0505                     _AddConnection:	
 20851                           
 20852                           ;miwi_p2p.c: 2537: uint8_t i;
 20853                           ;miwi_p2p.c: 2538: uint8_t status = 0x00;
 20854                           
 20855                           ;incstack = 0
 20856                           ; Regs used in _AddConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20857  0505  0020               	movlb	0	; select bank0
 20858  0506  30FF               	movlw	255
 20859  0507  01C0               	clrf	AddConnection@status
 20860                           
 20861                           ;miwi_p2p.c: 2539: uint8_t connectionSlot = 0xFF;
 20862  0508  00C1               	movwf	AddConnection@connectionSlot
 20863                           
 20864                           ;miwi_p2p.c: 2551: for(i = 0; i < 5; i++)
 20865  0509  01C2               	clrf	AddConnection@i
 20866  050A                     l10116:	
 20867                           
 20868                           ;miwi_p2p.c: 2552: {
 20869                           ;miwi_p2p.c: 2554: if( ConnectionTable[i].status.bits.isValid )
 20870  050A  300E               	movlw	14
 20871  050B  00A9               	movwf	___bmul@multiplicand
 20872  050C  0842               	movf	AddConnection@i,w
 20873  050D  3196  26E6  3185   	fcall	___bmul
 20874  0510  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 20875  0511  0086               	movwf	6
 20876  0512  3002               	movlw	2	; select bank5/6
 20877  0513  0087               	movwf	7
 20878  0514  1F81               	btfss	1,7
 20879  0515  2D31               	goto	l10124
 20880                           
 20881                           ;miwi_p2p.c: 2555: {
 20882                           ;miwi_p2p.c: 2557: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 20883  0516  0022               	movlb	2	; select bank2
 20884  0517  082F               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 20885  0518  0020               	movlb	0	; select bank0
 20886  0519  00AD               	movwf	isSameAddress@Address1+1
 20887  051A  0022               	movlb	2	; select bank2
 20888  051B  082E               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 20889  051C  0020               	movlb	0	; select bank0
 20890  051D  00AC               	movwf	isSameAddress@Address1
 20891  051E  300E               	movlw	14
 20892  051F  00A9               	movwf	___bmul@multiplicand
 20893  0520  0842               	movf	AddConnection@i,w
 20894  0521  3196  26E6  3185   	fcall	___bmul
 20895  0524  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 20896  0525  00AE               	movwf	isSameAddress@Address2
 20897  0526  3197  27B9  3185   	fcall	_isSameAddress
 20898  0529  3A00               	xorlw	0
 20899  052A  1903               	skipnz
 20900  052B  2D35               	goto	l10128
 20901                           
 20902                           ;miwi_p2p.c: 2558: {
 20903                           ;miwi_p2p.c: 2559: connectionSlot = i;
 20904  052C  0842               	movf	AddConnection@i,w
 20905  052D  00C1               	movwf	AddConnection@connectionSlot
 20906                           
 20907                           ;miwi_p2p.c: 2560: status = 0x01;
 20908  052E  01C0               	clrf	AddConnection@status
 20909  052F  0AC0               	incf	AddConnection@status,f
 20910                           
 20911                           ;miwi_p2p.c: 2561: break;
 20912  0530  2D3A               	goto	l10132
 20913  0531                     l10124:	
 20914                           
 20915                           ;miwi_p2p.c: 2564: else if( connectionSlot == 0xFF )
 20916  0531  0F41               	incfsz	AddConnection@connectionSlot,w
 20917  0532  2D35               	goto	l10128
 20918                           
 20919                           ;miwi_p2p.c: 2565: {
 20920                           ;miwi_p2p.c: 2567: connectionSlot = i;
 20921  0533  0842               	movf	AddConnection@i,w
 20922  0534  00C1               	movwf	AddConnection@connectionSlot
 20923  0535                     l10128:	
 20924  0535  3005               	movlw	5
 20925  0536  0AC2               	incf	AddConnection@i,f
 20926  0537  0242               	subwf	AddConnection@i,w
 20927  0538  1C03               	skipc
 20928  0539  2D0A               	goto	l10116
 20929  053A                     l10132:	
 20930                           
 20931                           ;miwi_p2p.c: 2568: }
 20932                           ;miwi_p2p.c: 2569: }
 20933                           ;miwi_p2p.c: 2571: if( connectionSlot == 0xFF )
 20934  053A  0F41               	incfsz	AddConnection@connectionSlot,w
 20935  053B  2D3D               	goto	l10140
 20936                           
 20937                           ;miwi_p2p.c: 2572: {
 20938                           ;miwi_p2p.c: 2573: return 0xF1;
 20939  053C  34F1               	retlw	241
 20940  053D                     l10140:	
 20941                           
 20942                           ;miwi_p2p.c: 2575: else
 20943                           ;miwi_p2p.c: 2576: {
 20944                           ;miwi_p2p.c: 2577: if( ConnMode >= 0x01 )
 20945  053D  0021               	movlb	1	; select bank1
 20946  053E  086F               	movf	_ConnMode^(0+128),w
 20947  053F  1903               	btfsc	3,2
 20948  0540  2D44               	goto	l10146
 20949                           
 20950                           ;miwi_p2p.c: 2578: {
 20951                           ;miwi_p2p.c: 2579: return status;
 20952  0541  0020               	movlb	0	; select bank0
 20953  0542  0840               	movf	AddConnection@status,w
 20954  0543  0008               	return
 20955  0544                     l10146:	
 20956                           
 20957                           ;miwi_p2p.c: 2580: }
 20958                           ;miwi_p2p.c: 2581: MyindexinPC = connectionSlot;
 20959  0544  0020               	movlb	0	; select bank0
 20960  0545  0841               	movf	AddConnection@connectionSlot,w
 20961  0546  0022               	movlb	2	; select bank2
 20962  0547  00CF               	movwf	_MyindexinPC^(0+256)
 20963                           
 20964                           ;miwi_p2p.c: 2583: for(i = 0; i < 8; i++)
 20965  0548  0020               	movlb	0	; select bank0
 20966  0549  300E               	movlw	14
 20967  054A  01C2               	clrf	AddConnection@i
 20968                           
 20969                           ;miwi_p2p.c: 2584: {
 20970                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 20971  054B  00A9               	movwf	___bmul@multiplicand
 20972  054C  0841               	movf	AddConnection@connectionSlot,w
 20973  054D                     L23:	
 20974  054D  3196  26E6  3185   	fcall	___bmul
 20975  0550  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 20976  0551  0742               	addwf	AddConnection@i,w
 20977  0552  00BB               	movwf	??_AddConnection
 20978  0553  0086               	movwf	6
 20979  0554  3002               	movlw	2	; select bank5/6
 20980  0555  0087               	movwf	7
 20981  0556  0842               	movf	AddConnection@i,w
 20982  0557  00BC               	movwf	??_AddConnection+1
 20983  0558  01BD               	clrf	??_AddConnection+2
 20984  0559  0022               	movlb	2	; select bank2
 20985  055A  072E               	addwf	(low ((_rxMessage| (0+256)+3)))^0,w
 20986  055B  0084               	movwf	4
 20987  055C  0020               	movlb	0	; select bank0
 20988  055D  083D               	movf	??_AddConnection+2,w
 20989  055E  0022               	movlb	2	; select bank2
 20990  055F  3D2F               	addwfc	((low ((_rxMessage| (0+256)+3))+1))^0,w
 20991  0560  0085               	movwf	5
 20992  0561  0800               	movf	0,w
 20993  0562  0081               	movwf	1
 20994  0563  0020               	movlb	0	; select bank0
 20995  0564  3008               	movlw	8
 20996  0565  0AC2               	incf	AddConnection@i,f
 20997  0566  0242               	subwf	AddConnection@i,w
 20998                           
 20999                           ;miwi_p2p.c: 2586: }
 21000                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 21001  0567  300E               	movlw	14
 21002  0568  00A9               	movwf	___bmul@multiplicand
 21003  0569  0841               	movf	AddConnection@connectionSlot,w
 21004  056A  1C03               	skipc
 21005  056B  2D4D               	goto	L23
 21006  056C  3196  26E6  3185   	fcall	___bmul
 21007  056F  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 21008  0570  0086               	movwf	6
 21009  0571  3002               	movlw	2	; select bank5/6
 21010  0572  0087               	movwf	7
 21011  0573  1781               	bsf	1,7
 21012                           
 21013                           ;miwi_p2p.c: 2590: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 21014  0574  0022               	movlb	2	; select bank2
 21015  0575  0830               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 21016  0576  0086               	movwf	6
 21017  0577  0831               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 21018  0578  0087               	movwf	7
 21019  0579  3001               	movlw	1
 21020  057A  3142               	addfsr 1,2
 21021  057B  0501               	andwf	1,w
 21022  057C  0020               	movlb	0	; select bank0
 21023  057D  00BB               	movwf	??_AddConnection
 21024  057E  300E               	movlw	14
 21025  057F  00A9               	movwf	___bmul@multiplicand
 21026  0580  0841               	movf	AddConnection@connectionSlot,w
 21027  0581  3196  26E6  3185   	fcall	___bmul
 21028  0584  3EAC               	addlw	(low ((_ConnectionTable| (0+512)+12)))& (0+255)
 21029  0585  0086               	movwf	6
 21030  0586  3002               	movlw	2	; select bank5/6
 21031  0587  0087               	movwf	7
 21032  0588  0801               	movf	1,w
 21033  0589  063B               	xorwf	??_AddConnection,w
 21034  058A  39FE               	andlw	-2
 21035  058B  063B               	xorwf	??_AddConnection,w
 21036  058C  0081               	movwf	1
 21037                           
 21038                           ;miwi_p2p.c: 2594: for(i = 0; i < 1; i++)
 21039  058D  01C2               	clrf	AddConnection@i
 21040  058E                     l10168:	
 21041                           
 21042                           ;miwi_p2p.c: 2595: {
 21043                           ;miwi_p2p.c: 2596: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 21044  058E  300E               	movlw	14
 21045  058F  00A9               	movwf	___bmul@multiplicand
 21046  0590  0841               	movf	AddConnection@connectionSlot,w
 21047  0591  3196  26E6  3185   	fcall	___bmul
 21048  0594  3EAD               	addlw	(low ((_ConnectionTable| (0+512)+13)))& (0+255)
 21049  0595  0742               	addwf	AddConnection@i,w
 21050  0596  00BB               	movwf	??_AddConnection
 21051  0597  0086               	movwf	6
 21052  0598  3002               	movlw	2	; select bank5/6
 21053  0599  0087               	movwf	7
 21054  059A  0842               	movf	AddConnection@i,w
 21055  059B  00BC               	movwf	??_AddConnection+1
 21056  059C  01BD               	clrf	??_AddConnection+2
 21057  059D  0022               	movlb	2	; select bank2
 21058  059E  0730               	addwf	(low ((_rxMessage| (0+256)+5)))^0,w
 21059  059F  0020               	movlb	0	; select bank0
 21060  05A0  00BE               	movwf	??_AddConnection+3
 21061  05A1  083D               	movf	??_AddConnection+2,w
 21062  05A2  0022               	movlb	2	; select bank2
 21063  05A3  3D31               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^0,w
 21064  05A4  0020               	movlb	0	; select bank0
 21065  05A5  00BF               	movwf	??_AddConnection+4
 21066  05A6  083E               	movf	??_AddConnection+3,w
 21067  05A7  0084               	movwf	4
 21068  05A8  083F               	movf	??_AddConnection+4,w
 21069  05A9  0085               	movwf	5
 21070  05AA  3103               	addfsr 0,3
 21071  05AB  0800               	movf	0,w
 21072  05AC  0081               	movwf	1
 21073  05AD  0AC2               	incf	AddConnection@i,f
 21074  05AE  1903               	btfsc	3,2
 21075  05AF  2D8E               	goto	l10168
 21076                           
 21077                           ;miwi_p2p.c: 2597: }
 21078                           ;miwi_p2p.c: 2604: LatestConnection = connectionSlot;
 21079  05B0  0841               	movf	AddConnection@connectionSlot,w
 21080  05B1  0022               	movlb	2	; select bank2
 21081  05B2  00CD               	movwf	_LatestConnection^(0+256)
 21082                           
 21083                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 21084  05B3  0021               	movlb	1	; select bank1
 21085  05B4  126B               	bcf	_P2PStatus^(0+128),4	;volatile
 21086                           
 21087                           ;miwi_p2p.c: 2606: }
 21088                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 21089  05B5  25CA               	fcall	_Total_Connections
 21090  05B6  00E2               	movwf	_conn_size
 21091                           
 21092                           ;miwi_p2p.c: 2609: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 21093  05B7  3062               	movlw	low _conn_size
 21094  05B8  00B4               	movwf	NVMWrite@source
 21095  05B9  3000               	movlw	high _conn_size
 21096  05BA  00B5               	movwf	NVMWrite@source+1
 21097  05BB  0022               	movlb	2	; select bank2
 21098  05BC  0864               	movf	(_nvmEdc+1)^(0+256),w
 21099  05BD  0020               	movlb	0	; select bank0
 21100  05BE  00B7               	movwf	NVMWrite@addr+1
 21101  05BF  0022               	movlb	2	; select bank2
 21102  05C0  0863               	movf	_nvmEdc^(0+256),w
 21103  05C1  0020               	movlb	0	; select bank0
 21104  05C2  00B6               	movwf	NVMWrite@addr
 21105  05C3  01B8               	clrf	NVMWrite@count
 21106  05C4  0AB8               	incf	NVMWrite@count,f
 21107  05C5  01B9               	clrf	NVMWrite@count+1
 21108  05C6  3197  270A         	fcall	_NVMWrite
 21109                           
 21110                           ;miwi_p2p.c: 2612: return status;
 21111  05C8  0840               	movf	AddConnection@status,w
 21112  05C9  0008               	return
 21113  05CA                     __end_of_AddConnection:	
 21114  05CA                     __ptext60:	
 21115 ;; *************** function _Total_Connections *****************
 21116 ;; Defined at:
 21117 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 21118 ;; Parameters:    Size  Location     Type
 21119 ;;		None
 21120 ;; Auto vars:     Size  Location     Type
 21121 ;;  i               1   13[BANK0 ] unsigned char 
 21122 ;;  count           1   12[BANK0 ] unsigned char 
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1    wreg      unsigned char 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21127 ;; Tracked objects:
 21128 ;;		On entry : 1F/1
 21129 ;;		On exit  : 1F/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21136 ;;Total ram usage:        2 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:    5
 21139 ;; This function calls:
 21140 ;;		___bmul
 21141 ;; This function is called by:
 21142 ;;		_AddConnection
 21143 ;; This function uses a non-reentrant model
 21144 ;;
 21145                           
 21146                           
 21147                           ;psect for function _Total_Connections
 21148  05CA                     _Total_Connections:	
 21149                           
 21150                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 21151                           
 21152                           ;incstack = 0
 21153                           ; Regs used in _Total_Connections: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21154  05CA  0020               	movlb	0	; select bank0
 21155  05CB  01AC               	clrf	Total_Connections@count
 21156                           
 21157                           ;miwi_p2p.c: 69: for (i=0;i<5;i++)
 21158  05CC  01AD               	clrf	Total_Connections@i
 21159  05CD                     l9526:	
 21160                           
 21161                           ;miwi_p2p.c: 70: {
 21162                           ;miwi_p2p.c: 72: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 21163  05CD  300E               	movlw	14
 21164  05CE  00A9               	movwf	___bmul@multiplicand
 21165  05CF  082D               	movf	Total_Connections@i,w
 21166  05D0  3196  26E6  3185   	fcall	___bmul
 21167  05D3  3EA4               	addlw	(low ((_ConnectionTable| (0+512)+4)))& (0+255)
 21168  05D4  0086               	movwf	6
 21169  05D5  3002               	movlw	2	; select bank5/6
 21170  05D6  0087               	movwf	7
 21171  05D7  0801               	movf	1,w
 21172  05D8  1D03               	btfss	3,2
 21173  05D9  2DF3               	goto	l9532
 21174  05DA  300E               	movlw	14
 21175  05DB  00A9               	movwf	___bmul@multiplicand
 21176  05DC  082D               	movf	Total_Connections@i,w
 21177  05DD  3196  26E6  3185   	fcall	___bmul
 21178  05E0  3EA5               	addlw	(low ((_ConnectionTable| (0+512)+5)))& (0+255)
 21179  05E1  0086               	movwf	6
 21180  05E2  3002               	movlw	2	; select bank5/6
 21181  05E3  0087               	movwf	7
 21182  05E4  0801               	movf	1,w
 21183  05E5  1D03               	btfss	3,2
 21184  05E6  2DF3               	goto	l9532
 21185  05E7  300E               	movlw	14
 21186  05E8  00A9               	movwf	___bmul@multiplicand
 21187  05E9  082D               	movf	Total_Connections@i,w
 21188  05EA  3196  26E6  3185   	fcall	___bmul
 21189  05ED  3EA6               	addlw	(low ((_ConnectionTable| (0+512)+6)))& (0+255)
 21190  05EE  0086               	movwf	6
 21191  05EF  3002               	movlw	2	; select bank5/6
 21192  05F0  0087               	movwf	7
 21193  05F1  0801               	movf	1,w
 21194  05F2  1D03               	btfss	3,2
 21195  05F3                     l9532:	
 21196                           
 21197                           ;miwi_p2p.c: 73: {
 21198                           ;miwi_p2p.c: 74: count++;
 21199  05F3  0AAC               	incf	Total_Connections@count,f
 21200  05F4  3005               	movlw	5
 21201  05F5  0AAD               	incf	Total_Connections@i,f
 21202  05F6  022D               	subwf	Total_Connections@i,w
 21203  05F7  1C03               	skipc
 21204  05F8  2DCD               	goto	l9526
 21205                           
 21206                           ;miwi_p2p.c: 75: }
 21207                           ;miwi_p2p.c: 82: }
 21208                           ;miwi_p2p.c: 83: return count;
 21209  05F9  082C               	movf	Total_Connections@count,w
 21210  05FA  0008               	return
 21211  05FB                     __end_of_Total_Connections:	
 21212                           
 21213                           	psect	swtext2
 21214  0600                     __pswtext2:	
 21215  0600                     S11452:	
 21216  0600  318E  2E42         	ljmp	l9452
 21217  0602  318B  2BC4         	ljmp	l9224
 21218  0604  318B  2BC4         	ljmp	l9224
 21219  0606  318B  2BC4         	ljmp	l9224
 21220  0608  318B  2BC4         	ljmp	l9224
 21221  060A  318B  2BC4         	ljmp	l9224
 21222  060C  318B  2BC4         	ljmp	l9224
 21223  060E  318B  2BC4         	ljmp	l9224
 21224  0610  318B  2BC4         	ljmp	l9224
 21225  0612  318B  2BC4         	ljmp	l9224
 21226  0614  318B  2BC4         	ljmp	l9224
 21227  0616  318B  2BC4         	ljmp	l9224
 21228  0618  318B  2BC4         	ljmp	l9224
 21229  061A  318B  2BC4         	ljmp	l9224
 21230  061C  318B  2BC4         	ljmp	l9224
 21231  061E  318B  2BC4         	ljmp	l9224
 21232  0620  318B  2BC4         	ljmp	l9224
 21233  0622  318B  2BC4         	ljmp	l9224
 21234  0624  318B  2BC4         	ljmp	l9224
 21235  0626  318B  2BC4         	ljmp	l9224
 21236  0628  318B  2BC4         	ljmp	l9224
 21237  062A  318B  2BC4         	ljmp	l9224
 21238  062C  318B  2BC4         	ljmp	l9224
 21239  062E  318B  2BC4         	ljmp	l9224
 21240  0630  318B  2BC4         	ljmp	l9224
 21241  0632  318B  2BC4         	ljmp	l9224
 21242  0634  318B  2BC4         	ljmp	l9224
 21243  0636  318B  2BC4         	ljmp	l9224
 21244  0638  318B  2BC4         	ljmp	l9224
 21245  063A  318B  2BC4         	ljmp	l9224
 21246  063C  318B  2BC4         	ljmp	l9224
 21247  063E  318B  2BC4         	ljmp	l9224
 21248  0640  318B  2BC4         	ljmp	l9224
 21249  0642  318B  2BC4         	ljmp	l9224
 21250  0644  318B  2BC4         	ljmp	l9224
 21251  0646  318B  2BC4         	ljmp	l9224
 21252  0648  318B  2BC4         	ljmp	l9224
 21253  064A  318B  2BC4         	ljmp	l9224
 21254  064C  318B  2BC4         	ljmp	l9224
 21255  064E  318B  2BC4         	ljmp	l9224
 21256  0650  318B  2BC4         	ljmp	l9224
 21257  0652  318B  2BC4         	ljmp	l9224
 21258  0654  318B  2BC4         	ljmp	l9224
 21259  0656  318B  2BC4         	ljmp	l9224
 21260  0658  318B  2BC4         	ljmp	l9224
 21261  065A  318B  2BC4         	ljmp	l9224
 21262  065C  318B  2BC4         	ljmp	l9224
 21263  065E  318B  2BC4         	ljmp	l9224
 21264  0660  318B  2BC4         	ljmp	l9224
 21265  0662  318B  2BC4         	ljmp	l9224
 21266  0664  318B  2BC4         	ljmp	l9224
 21267  0666  318B  2BC4         	ljmp	l9224
 21268  0668  318B  2BC4         	ljmp	l9224
 21269  066A  318B  2BC4         	ljmp	l9224
 21270  066C  318B  2BC4         	ljmp	l9224
 21271  066E  318B  2BC4         	ljmp	l9224
 21272  0670  318B  2BC4         	ljmp	l9224
 21273  0672  318B  2BC4         	ljmp	l9224
 21274  0674  318B  2BC4         	ljmp	l9224
 21275  0676  318B  2BC4         	ljmp	l9224
 21276  0678  318B  2BC4         	ljmp	l9224
 21277  067A  318B  2BC4         	ljmp	l9224
 21278  067C  318B  2BC4         	ljmp	l9224
 21279  067E  318B  2BC4         	ljmp	l9224
 21280  0680  318B  2BC4         	ljmp	l9224
 21281  0682  318B  2BC4         	ljmp	l9224
 21282  0684  318B  2BC4         	ljmp	l9224
 21283  0686  318B  2BC4         	ljmp	l9224
 21284  0688  318B  2BC4         	ljmp	l9224
 21285  068A  318B  2BC4         	ljmp	l9224
 21286  068C  318B  2BC4         	ljmp	l9224
 21287  068E  318B  2BC4         	ljmp	l9224
 21288  0690  318B  2BC4         	ljmp	l9224
 21289  0692  318B  2BC4         	ljmp	l9224
 21290  0694  318B  2BC4         	ljmp	l9224
 21291  0696  318B  2BC4         	ljmp	l9224
 21292  0698  318B  2BC4         	ljmp	l9224
 21293  069A  318B  2BC4         	ljmp	l9224
 21294  069C  318B  2BC4         	ljmp	l9224
 21295  069E  318B  2BC4         	ljmp	l9224
 21296  06A0  318B  2BC4         	ljmp	l9224
 21297  06A2  318B  2BC4         	ljmp	l9224
 21298  06A4  318B  2BC4         	ljmp	l9224
 21299  06A6  318B  2BC4         	ljmp	l9224
 21300  06A8  318B  2BC4         	ljmp	l9224
 21301  06AA  318B  2BC4         	ljmp	l9224
 21302  06AC  318B  2BC4         	ljmp	l9224
 21303  06AE  318B  2BC4         	ljmp	l9224
 21304  06B0  318B  2B5A         	ljmp	l1242
 21305  06B2  318B  2BC4         	ljmp	l9224
 21306  06B4  318B  2BC4         	ljmp	l9224
 21307  06B6  318B  2BC4         	ljmp	l9224
 21308  06B8  318B  2BC4         	ljmp	l9224
 21309  06BA  318B  2BC4         	ljmp	l9224
 21310  06BC  318B  2BC4         	ljmp	l9224
 21311  06BE  318B  2BC4         	ljmp	l9224
 21312  06C0  318B  2BC4         	ljmp	l9224
 21313  06C2  318B  2BC4         	ljmp	l9224
 21314  06C4  318B  2BC4         	ljmp	l9224
 21315  06C6  318B  2BBD         	ljmp	l9220
 21316  06C8  318B  2BE2         	ljmp	l9234
 21317  06CA  318B  2BC4         	ljmp	l9224
 21318  06CC  318B  2BC4         	ljmp	l9224
 21319  06CE  318B  2BC4         	ljmp	l9224
 21320  06D0  318B  2BC4         	ljmp	l9224
 21321  06D2  318B  2BE2         	ljmp	l9234
 21322  06D4  318B  2BC4         	ljmp	l9224
 21323  06D6  318B  2BC4         	ljmp	l9224
 21324  06D8  318B  2BC4         	ljmp	l9224
 21325  06DA  318B  2BC4         	ljmp	l9224
 21326  06DC  318B  2BC4         	ljmp	l9224
 21327  06DE  318B  2B58         	ljmp	l1238
 21328  06E0  318B  2BC4         	ljmp	l9224
 21329  06E2  318B  2BC4         	ljmp	l9224
 21330  06E4  318B  2BC4         	ljmp	l9224
 21331  06E6  318B  2BC4         	ljmp	l9224
 21332  06E8  318B  2BC4         	ljmp	l9224
 21333  06EA  318B  2BCA         	ljmp	l9228
 21334  06EC  318B  2BC4         	ljmp	l9224
 21335  06EE  318B  2BC4         	ljmp	l9224
 21336  06F0  318B  2B5B         	ljmp	l1243
 21337                           
 21338                           	psect	text79
 21339  20BA                     __ptext79:	
 21340 ;; *************** function _memset *****************
 21341 ;; Defined at:
 21342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 21343 ;; Parameters:    Size  Location     Type
 21344 ;;  p1              1    wreg     PTR void 
 21345 ;;		 -> LCDText(33), 
 21346 ;;  c               2    9[BANK0 ] int 
 21347 ;;  n               2   11[BANK0 ] unsigned int 
 21348 ;; Auto vars:     Size  Location     Type
 21349 ;;  p1              1   13[BANK0 ] PTR void 
 21350 ;;		 -> LCDText(33), 
 21351 ;;  p               1   14[BANK0 ] PTR unsigned char 
 21352 ;;		 -> LCDText(33), 
 21353 ;; Return value:  Size  Location     Type
 21354 ;;                  1    wreg      PTR void 
 21355 ;; Registers used:
 21356 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21357 ;; Tracked objects:
 21358 ;;		On entry : 1F/0
 21359 ;;		On exit  : 1F/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21365 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21366 ;;Total ram usage:        6 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    4
 21369 ;; This function calls:
 21370 ;;		Nothing
 21371 ;; This function is called by:
 21372 ;;		_LCD_Erase
 21373 ;; This function uses a non-reentrant model
 21374 ;;
 21375                           
 21376                           
 21377                           ;psect for function _memset
 21378  20BA                     _memset:	
 21379                           
 21380                           ;incstack = 0
 21381                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 21382                           ;memset@p1 stored from wreg
 21383  20BA  00AD               	movwf	memset@p1
 21384  20BB  00AE               	movwf	memset@p
 21385  20BC                     l8918:	
 21386  20BC  3001               	movlw	1
 21387  20BD  02AB               	subwf	memset@n,f
 21388  20BE  3000               	movlw	0
 21389  20BF  3BAC               	subwfb	memset@n+1,f
 21390  20C0  0F2B               	incfsz	memset@n,w
 21391  20C1  28C5               	goto	l8914
 21392  20C2  0A2C               	incf	memset@n+1,w
 21393  20C3  1903               	btfsc	3,2
 21394  20C4  0008               	return
 21395  20C5                     l8914:	
 21396  20C5  082E               	movf	memset@p,w
 21397  20C6  0086               	movwf	6
 21398  20C7  3001               	movlw	1	; select bank2/3
 21399  20C8  0087               	movwf	7
 21400  20C9  0829               	movf	memset@c,w
 21401  20CA  0081               	movwf	1
 21402  20CB  0AAE               	incf	memset@p,f
 21403  20CC  28BC               	goto	l8918
 21404  20CD                     __end_of_memset:	
 21405                           
 21406                           	psect	intentry
 21407  0004                     __pintentry:	
 21408 ;; *************** function _high_isr *****************
 21409 ;; Defined at:
 21410 ;;		line 1852 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 21411 ;; Parameters:    Size  Location     Type
 21412 ;;		None
 21413 ;; Auto vars:     Size  Location     Type
 21414 ;;  results         1    7[COMMON] struct _DRIVER_UINT8_UNI
 21415 ;;  RxBank          1   10[COMMON] unsigned char 
 21416 ;;  flags           2    8[COMMON] struct .
 21417 ;;  i               1   11[COMMON] unsigned char 
 21418 ;; Return value:  Size  Location     Type
 21419 ;;                  1    wreg      void 
 21420 ;; Registers used:
 21421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21422 ;; Tracked objects:
 21423 ;;		On entry : 0/0
 21424 ;;		On exit  : 1C/0
 21425 ;;		Unchanged: 0/0
 21426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21428 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21429 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21430 ;;      Totals:         5       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21431 ;;Total ram usage:       14 bytes
 21432 ;; Hardware stack levels used:    1
 21433 ;; Hardware stack levels required when called:    3
 21434 ;; This function calls:
 21435 ;;		_UserInterruptHandler
 21436 ;;		i1_PHYGetLongRAMAddr
 21437 ;;		i1_PHYGetShortRAMAddr
 21438 ;;		i1_PHYSetShortRAMAddr
 21439 ;;		i1___wmul
 21440 ;; This function is called by:
 21441 ;;		Interrupt level 1
 21442 ;; This function uses a non-reentrant model
 21443 ;;
 21444                           
 21445  0004                     _high_isr:	
 21446                           
 21447                           ;incstack = 0
 21448 ;; hardware stack exceeded
 21449  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21450                           
 21451                           ; Regs used in _high_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21452  0005  3180               	pagesel	$
 21453                           
 21454                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCONbits.IOCIE && IOCBFbits.IOCBF1)
 21455  0006  1D8B               	btfss	11,3	;volatile
 21456  0007  28FF               	goto	i1l8274
 21457  0008  0027               	movlb	7	; select bank7
 21458  0009  1C96               	btfss	22,1	;volatile
 21459  000A  28FF               	goto	i1l8274
 21460                           
 21461                           ;drv_mrf_miwi_24j40.c: 1868: {
 21462                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 21463                           ;drv_mrf_miwi_24j40.c: 1873: IOCBFbits.IOCBF1 = 0;
 21464  000B  1096               	bcf	22,1	;volatile
 21465                           
 21466                           ;drv_mrf_miwi_24j40.c: 1877: {
 21467                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 21468                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 21469  000C  3062               	movlw	98
 21470  000D  31A2  2284  3180   	fcall	i1_PHYGetShortRAMAddr
 21471  0010  00F8               	movwf	high_isr@flags
 21472                           
 21473                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 21474  0011  1C78               	btfss	high_isr@flags,0
 21475  0012  2829               	goto	i1l209
 21476                           
 21477                           ;drv_mrf_miwi_24j40.c: 1884: {
 21478                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 21479  0013  0020               	movlb	0	; select bank0
 21480  0014  105E               	bcf	_MRF24J40Status,0	;volatile
 21481                           
 21482                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 21483  0015  1F5E               	btfss	_MRF24J40Status,6	;volatile
 21484  0016  2818               	goto	i1l8222
 21485                           
 21486                           ;drv_mrf_miwi_24j40.c: 1890: {
 21487                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 21488  0017  135E               	bcf	_MRF24J40Status,6	;volatile
 21489  0018                     i1l8222:	
 21490                           
 21491                           ;drv_mrf_miwi_24j40.c: 1892: }
 21492                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 21493  0018  0022               	movlb	2	; select bank2
 21494  0019  01C8               	clrf	_failureCounter^(0+256)	;volatile
 21495  001A  01C9               	clrf	(_failureCounter+1)^(0+256)	;volatile
 21496                           
 21497                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 21498  001B  0020               	movlb	0	; select bank0
 21499  001C  1CDE               	btfss	_MRF24J40Status,1	;volatile
 21500  001D  2829               	goto	i1l209
 21501                           
 21502                           ;drv_mrf_miwi_24j40.c: 1899: {
 21503                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 21504                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 21505  001E  3048               	movlw	72
 21506  001F  31A2  2284  3180   	fcall	i1_PHYGetShortRAMAddr
 21507  0022  00F7               	movwf	high_isr@results
 21508                           
 21509                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 21510  0023  1C77               	btfss	high_isr@results,0
 21511  0024  2827               	goto	i1l212
 21512                           
 21513                           ;drv_mrf_miwi_24j40.c: 1906: {
 21514                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 21515  0025  0020               	movlb	0	; select bank0
 21516  0026  155E               	bsf	_MRF24J40Status,2	;volatile
 21517  0027                     i1l212:	
 21518                           
 21519                           ;drv_mrf_miwi_24j40.c: 1910: }
 21520                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 21521  0027  0020               	movlb	0	; select bank0
 21522  0028  10DE               	bcf	_MRF24J40Status,1	;volatile
 21523  0029                     i1l209:	
 21524                           
 21525                           ;drv_mrf_miwi_24j40.c: 1916: }
 21526                           ;drv_mrf_miwi_24j40.c: 1918: }
 21527                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 21528  0029  1DF8               	btfss	high_isr@flags,3
 21529  002A  28F7               	goto	i1l8270
 21530                           
 21531                           ;drv_mrf_miwi_24j40.c: 1921: {
 21532                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 21533  002B  30FF               	movlw	255
 21534  002C  00FA               	movwf	high_isr@RxBank
 21535                           
 21536                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 21537  002D  01FB               	clrf	high_isr@i
 21538  002E                     i1l8240:	
 21539                           
 21540                           ;drv_mrf_miwi_24j40.c: 1925: {
 21541                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 21542  002E  087B               	movf	high_isr@i,w
 21543  002F  00F0               	movwf	i1___wmul@multiplier
 21544  0030  3045               	movlw	69
 21545  0031  01F1               	clrf	i1___wmul@multiplier+1
 21546  0032  00F2               	movwf	i1___wmul@multiplicand
 21547  0033  01F3               	clrf	i1___wmul@multiplicand+1
 21548  0034  3198  2000  3180   	fcall	i1___wmul
 21549  0037  3066               	movlw	102
 21550  0038  0020               	movlb	0	; select bank0
 21551  0039  00A0               	movwf	??_high_isr
 21552  003A  3023               	movlw	35
 21553  003B  00A1               	movwf	??_high_isr+1
 21554  003C  0870               	movf	?i1___wmul,w
 21555  003D  0720               	addwf	??_high_isr,w
 21556  003E  0086               	movwf	6
 21557  003F  0871               	movf	?i1___wmul+1,w
 21558  0040  3D21               	addwfc	??_high_isr+1,w
 21559  0041  0087               	movwf	7
 21560  0042  0801               	movf	1,w
 21561  0043  1D03               	btfss	3,2
 21562  0044  2848               	goto	i1l8244
 21563                           
 21564                           ;drv_mrf_miwi_24j40.c: 1927: {
 21565                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 21566  0045  087B               	movf	high_isr@i,w
 21567  0046  00FA               	movwf	high_isr@RxBank
 21568                           
 21569                           ;drv_mrf_miwi_24j40.c: 1929: break;
 21570  0047  284D               	goto	i1l8248
 21571  0048                     i1l8244:	
 21572  0048  3002               	movlw	2
 21573  0049  0AFB               	incf	high_isr@i,f
 21574  004A  027B               	subwf	high_isr@i,w
 21575  004B  1C03               	skipc
 21576  004C  282E               	goto	i1l8240
 21577  004D                     i1l8248:	
 21578                           
 21579                           ;drv_mrf_miwi_24j40.c: 1930: }
 21580                           ;drv_mrf_miwi_24j40.c: 1931: }
 21581                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 21582  004D  3002               	movlw	2
 21583  004E  027A               	subwf	high_isr@RxBank,w
 21584  004F  1803               	skipnc
 21585  0050  28F1               	goto	i1l8268
 21586                           
 21587                           ;drv_mrf_miwi_24j40.c: 1935: {
 21588                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 21589  0051  3004               	movlw	4
 21590  0052  00F1               	movwf	i1PHYSetShortRAMAddr@value
 21591  0053  3073               	movlw	115
 21592  0054  31A2  229A  3180   	fcall	i1_PHYSetShortRAMAddr
 21593                           
 21594                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 21595  0057  3003               	movlw	3
 21596  0058  01F1               	clrf	i1PHYGetLongRAMAddr@address
 21597  0059  00F2               	movwf	i1PHYGetLongRAMAddr@address+1
 21598  005A  31A2  22AF  3180   	fcall	i1_PHYGetLongRAMAddr
 21599  005D  3E02               	addlw	2
 21600  005E  0020               	movlb	0	; select bank0
 21601  005F  00A0               	movwf	??_high_isr
 21602  0060  087A               	movf	high_isr@RxBank,w
 21603  0061  00F0               	movwf	i1___wmul@multiplier
 21604  0062  3045               	movlw	69
 21605  0063  01F1               	clrf	i1___wmul@multiplier+1
 21606  0064  00F2               	movwf	i1___wmul@multiplicand
 21607  0065  01F3               	clrf	i1___wmul@multiplicand+1
 21608  0066  3198  2000  3180   	fcall	i1___wmul
 21609  0069  3066               	movlw	102
 21610  006A  0020               	movlb	0	; select bank0
 21611  006B  00A1               	movwf	??_high_isr+1
 21612  006C  3023               	movlw	35
 21613  006D  00A2               	movwf	??_high_isr+2
 21614  006E  0870               	movf	?i1___wmul,w
 21615  006F  0721               	addwf	??_high_isr+1,w
 21616  0070  00A3               	movwf	??_high_isr+3
 21617  0071  0871               	movf	?i1___wmul+1,w
 21618  0072  3D22               	addwfc	??_high_isr+2,w
 21619  0073  00A4               	movwf	??_high_isr+4
 21620  0074  0823               	movf	??_high_isr+3,w
 21621  0075  0086               	movwf	6
 21622  0076  0824               	movf	??_high_isr+4,w
 21623  0077  0087               	movwf	7
 21624  0078  0820               	movf	??_high_isr,w
 21625  0079  0081               	movwf	1
 21626                           
 21627                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 21628  007A  087A               	movf	high_isr@RxBank,w
 21629  007B  00F0               	movwf	i1___wmul@multiplier
 21630  007C  3045               	movlw	69
 21631  007D  01F1               	clrf	i1___wmul@multiplier+1
 21632  007E  00F2               	movwf	i1___wmul@multiplicand
 21633  007F  01F3               	clrf	i1___wmul@multiplicand+1
 21634  0080  3198  2000  3180   	fcall	i1___wmul
 21635  0083  3066               	movlw	102
 21636  0084  0020               	movlb	0	; select bank0
 21637  0085  00A0               	movwf	??_high_isr
 21638  0086  3023               	movlw	35
 21639  0087  00A1               	movwf	??_high_isr+1
 21640  0088  0870               	movf	?i1___wmul,w
 21641  0089  0720               	addwf	??_high_isr,w
 21642  008A  0086               	movwf	6
 21643  008B  0871               	movf	?i1___wmul+1,w
 21644  008C  3D21               	addwfc	??_high_isr+1,w
 21645  008D  0087               	movwf	7
 21646  008E  3044               	movlw	68
 21647  008F  0201               	subwf	1,w
 21648  0090  1803               	skipnc
 21649  0091  28E8               	goto	i1l8266
 21650                           
 21651                           ;drv_mrf_miwi_24j40.c: 1947: {
 21652                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 21653  0092  16DE               	bsf	_MRF24J40Status,5	;volatile
 21654                           
 21655                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 21656  0093  01FB               	clrf	high_isr@i
 21657  0094                     i1l8260:	
 21658  0094  0AFB               	incf	high_isr@i,f
 21659  0095  087A               	movf	high_isr@RxBank,w
 21660  0096  00F0               	movwf	i1___wmul@multiplier
 21661  0097  3045               	movlw	69
 21662  0098  01F1               	clrf	i1___wmul@multiplier+1
 21663  0099  00F2               	movwf	i1___wmul@multiplicand
 21664  009A  01F3               	clrf	i1___wmul@multiplicand+1
 21665  009B  3198  2000  3180   	fcall	i1___wmul
 21666  009E  3066               	movlw	102
 21667  009F  0020               	movlb	0	; select bank0
 21668  00A0  00A0               	movwf	??_high_isr
 21669  00A1  3023               	movlw	35
 21670  00A2  00A1               	movwf	??_high_isr+1
 21671  00A3  0870               	movf	?i1___wmul,w
 21672  00A4  0720               	addwf	??_high_isr,w
 21673  00A5  0086               	movwf	6
 21674  00A6  0871               	movf	?i1___wmul+1,w
 21675  00A7  3D21               	addwfc	??_high_isr+1,w
 21676  00A8  0087               	movwf	7
 21677  00A9  0801               	movf	1,w
 21678  00AA  3E02               	addlw	2
 21679  00AB  00A2               	movwf	??_high_isr+2
 21680  00AC  3000               	movlw	0
 21681  00AD  1803               	skipnc
 21682  00AE  3001               	movlw	1
 21683  00AF  00A3               	movwf	??_high_isr+3
 21684  00B0  3A80               	xorlw	128
 21685  00B1  00A4               	movwf	??_high_isr+4
 21686  00B2  3080               	movlw	128
 21687  00B3  0224               	subwf	??_high_isr+4,w
 21688  00B4  1D03               	skipz
 21689  00B5  28B8               	goto	u732_25
 21690  00B6  087B               	movf	high_isr@i,w
 21691  00B7  0222               	subwf	??_high_isr+2,w
 21692  00B8                     u732_25:	
 21693  00B8  1C03               	btfss	3,0
 21694  00B9  28E8               	goto	i1l8266
 21695                           
 21696                           ;drv_mrf_miwi_24j40.c: 1953: {
 21697                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 21698  00BA  087B               	movf	high_isr@i,w
 21699  00BB  00F1               	movwf	i1PHYGetLongRAMAddr@address
 21700  00BC  3003               	movlw	3
 21701  00BD  01F2               	clrf	i1PHYGetLongRAMAddr@address+1
 21702  00BE  07F2               	addwf	i1PHYGetLongRAMAddr@address+1,f
 21703  00BF  31A2  22AF  3180   	fcall	i1_PHYGetLongRAMAddr
 21704  00C2  0020               	movlb	0	; select bank0
 21705  00C3  00A0               	movwf	??_high_isr
 21706  00C4  087B               	movf	high_isr@i,w
 21707  00C5  00A1               	movwf	??_high_isr+1
 21708  00C6  01A2               	clrf	??_high_isr+2
 21709  00C7  087A               	movf	high_isr@RxBank,w
 21710  00C8  00F0               	movwf	i1___wmul@multiplier
 21711  00C9  3045               	movlw	69
 21712  00CA  01F1               	clrf	i1___wmul@multiplier+1
 21713  00CB  00F2               	movwf	i1___wmul@multiplicand
 21714  00CC  01F3               	clrf	i1___wmul@multiplicand+1
 21715  00CD  3198  2000  3180   	fcall	i1___wmul
 21716  00D0  3066               	movlw	102
 21717  00D1  0020               	movlb	0	; select bank0
 21718  00D2  00A3               	movwf	??_high_isr+3
 21719  00D3  3023               	movlw	35
 21720  00D4  00A4               	movwf	??_high_isr+4
 21721  00D5  0870               	movf	?i1___wmul,w
 21722  00D6  0723               	addwf	??_high_isr+3,w
 21723  00D7  00A5               	movwf	??_high_isr+5
 21724  00D8  0871               	movf	?i1___wmul+1,w
 21725  00D9  3D24               	addwfc	??_high_isr+4,w
 21726  00DA  00A6               	movwf	??_high_isr+6
 21727  00DB  0821               	movf	??_high_isr+1,w
 21728  00DC  0725               	addwf	??_high_isr+5,w
 21729  00DD  00A7               	movwf	??_high_isr+7
 21730  00DE  0822               	movf	??_high_isr+2,w
 21731  00DF  3D26               	addwfc	??_high_isr+6,w
 21732  00E0  00A8               	movwf	??_high_isr+8
 21733  00E1  0827               	movf	??_high_isr+7,w
 21734  00E2  0086               	movwf	6
 21735  00E3  0828               	movf	??_high_isr+8,w
 21736  00E4  0087               	movwf	7
 21737  00E5  0820               	movf	??_high_isr,w
 21738  00E6  0081               	movwf	1
 21739  00E7  2894               	goto	i1l8260
 21740  00E8                     i1l8266:	
 21741                           ;drv_mrf_miwi_24j40.c: 1957: } else
 21742                           
 21743                           ;drv_mrf_miwi_24j40.c: 1955: }
 21744                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 21745                           
 21746  00E8  301B               	movlw	27
 21747                           
 21748                           ;drv_mrf_miwi_24j40.c: 1958: {
 21749                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 21750  00E9  01F1               	clrf	i1PHYSetShortRAMAddr@value
 21751  00EA  0AF1               	incf	i1PHYSetShortRAMAddr@value,f
 21752  00EB  31A2  229A  3180   	fcall	i1_PHYSetShortRAMAddr
 21753  00EE  3073               	movlw	115
 21754                           
 21755                           ;drv_mrf_miwi_24j40.c: 1962: }
 21756                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 21757  00EF  01F1               	clrf	i1PHYSetShortRAMAddr@value
 21758  00F0  28F4               	goto	L44
 21759  00F1                     i1l8268:	
 21760                           ;drv_mrf_miwi_24j40.c: 1966: } else
 21761                           
 21762  00F1  301B               	movlw	27
 21763                           
 21764                           ;drv_mrf_miwi_24j40.c: 1967: {
 21765                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 21766  00F2  01F1               	clrf	i1PHYSetShortRAMAddr@value
 21767  00F3  0AF1               	incf	i1PHYSetShortRAMAddr@value,f
 21768  00F4                     L44:	
 21769  00F4  31A2  229A  3180   	fcall	i1_PHYSetShortRAMAddr
 21770  00F7                     i1l8270:	
 21771                           
 21772                           ;drv_mrf_miwi_24j40.c: 1977: }
 21773                           ;drv_mrf_miwi_24j40.c: 1979: }
 21774                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 21775  00F7  1E78               	btfss	high_isr@flags,4
 21776  00F8  28FF               	goto	i1l8274
 21777                           
 21778                           ;drv_mrf_miwi_24j40.c: 1983: {
 21779                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 21780  00F9  3080               	movlw	128
 21781  00FA  00F1               	movwf	i1PHYSetShortRAMAddr@value
 21782  00FB  3059               	movlw	89
 21783  00FC  31A2  229A  3180   	fcall	i1_PHYSetShortRAMAddr
 21784  00FF                     i1l8274:	
 21785                           
 21786                           ;drv_mrf_miwi_24j40.c: 1985: }
 21787                           ;drv_mrf_miwi_24j40.c: 1986: }
 21788                           ;drv_mrf_miwi_24j40.c: 1987: }
 21789                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 21790  00FF  0020               	movlb	0	; select bank0
 21791  0100  1C11               	btfss	17,0	;volatile
 21792  0101  290D               	goto	i1l8286
 21793                           
 21794                           ;drv_mrf_miwi_24j40.c: 1993: {
 21795                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 21796  0102  0021               	movlb	1	; select bank1
 21797  0103  1C11               	btfss	17,0	;volatile
 21798  0104  290D               	goto	i1l8286
 21799                           
 21800                           ;drv_mrf_miwi_24j40.c: 1995: {
 21801                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 21802  0105  0020               	movlb	0	; select bank0
 21803  0106  1011               	bcf	17,0	;volatile
 21804                           
 21805                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 21806  0107  0AFD               	incf	_timerExtension1,f	;volatile
 21807                           
 21808                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 21809  0108  087D               	movf	_timerExtension1,w	;volatile
 21810  0109  1D03               	btfss	3,2
 21811  010A  290D               	goto	i1l8286
 21812                           
 21813                           ;drv_mrf_miwi_24j40.c: 2000: {
 21814                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 21815  010B  0022               	movlb	2	; select bank2
 21816  010C  0ADA               	incf	_timerExtension2^(0+256),f	;volatile
 21817  010D                     i1l8286:	
 21818                           
 21819                           ;drv_mrf_miwi_24j40.c: 2002: }
 21820                           ;drv_mrf_miwi_24j40.c: 2003: }
 21821                           ;drv_mrf_miwi_24j40.c: 2004: }
 21822                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 21823  010D  3187  27F6         	fcall	_UserInterruptHandler
 21824  010F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21825  0110  0009               	retfie
 21826  0111                     __end_of_high_isr:	
 21827                           
 21828                           	psect	text87
 21829  1800                     __ptext87:	
 21830 ;; *************** function i1___wmul *****************
 21831 ;; Defined at:
 21832 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 21833 ;; Parameters:    Size  Location     Type
 21834 ;;  multiplier      2    0[COMMON] unsigned int 
 21835 ;;  multiplicand    2    2[COMMON] unsigned int 
 21836 ;; Auto vars:     Size  Location     Type
 21837 ;;  __wmul          2    4[COMMON] unsigned int 
 21838 ;; Return value:  Size  Location     Type
 21839 ;;                  2    0[COMMON] unsigned int 
 21840 ;; Registers used:
 21841 ;;		wreg, status,2, status,0
 21842 ;; Tracked objects:
 21843 ;;		On entry : 0/2
 21844 ;;		On exit  : 0/0
 21845 ;;		Unchanged: 0/0
 21846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21851 ;;Total ram usage:        6 bytes
 21852 ;; Hardware stack levels used:    1
 21853 ;; This function calls:
 21854 ;;		Nothing
 21855 ;; This function is called by:
 21856 ;;		_high_isr
 21857 ;; This function uses a non-reentrant model
 21858 ;;
 21859                           
 21860                           
 21861                           ;psect for function i1___wmul
 21862  1800                     i1___wmul:	
 21863                           
 21864                           ;incstack = 0
 21865                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 21866  1800  01F4               	clrf	i1___wmul@product
 21867  1801  01F5               	clrf	i1___wmul@product+1
 21868  1802                     i1l8194:	
 21869  1802  1C70               	btfss	i1___wmul@multiplier,0
 21870  1803  2808               	goto	i1l8198
 21871  1804  0872               	movf	i1___wmul@multiplicand,w
 21872  1805  07F4               	addwf	i1___wmul@product,f
 21873  1806  0873               	movf	i1___wmul@multiplicand+1,w
 21874  1807  3DF5               	addwfc	i1___wmul@product+1,f
 21875  1808                     i1l8198:	
 21876  1808  35F2               	lslf	i1___wmul@multiplicand,f
 21877  1809  0DF3               	rlf	i1___wmul@multiplicand+1,f
 21878  180A  36F1               	lsrf	i1___wmul@multiplier+1,f
 21879  180B  0CF0               	rrf	i1___wmul@multiplier,f
 21880  180C  0870               	movf	i1___wmul@multiplier,w
 21881  180D  0471               	iorwf	i1___wmul@multiplier+1,w
 21882  180E  1D03               	btfss	3,2
 21883  180F  2802               	goto	i1l8194
 21884  1810  0875               	movf	i1___wmul@product+1,w
 21885  1811  00F1               	movwf	?i1___wmul+1
 21886  1812  0874               	movf	i1___wmul@product,w
 21887  1813  00F0               	movwf	?i1___wmul
 21888  1814  0008               	return
 21889  1815                     __end_ofi1___wmul:	
 21890                           
 21891                           	psect	text89
 21892  2284                     __ptext89:	
 21893 ;; *************** function i1_PHYGetShortRAMAddr *****************
 21894 ;; Defined at:
 21895 ;;		line 154 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;  address         1    wreg     unsigned char 
 21898 ;; Auto vars:     Size  Location     Type
 21899 ;;  address         1    1[COMMON] unsigned char 
 21900 ;;  PHYGetShortR    1    3[COMMON] volatile unsigned char 
 21901 ;;  PHYGetShortR    1    2[COMMON] unsigned char 
 21902 ;; Return value:  Size  Location     Type
 21903 ;;                  1    wreg      unsigned char 
 21904 ;; Registers used:
 21905 ;;		wreg, status,2, status,0, pclath, cstack
 21906 ;; Tracked objects:
 21907 ;;		On entry : 18/7
 21908 ;;		On exit  : 1F/2
 21909 ;;		Unchanged: 0/0
 21910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21912 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21914 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21915 ;;Total ram usage:        3 bytes
 21916 ;; Hardware stack levels used:    1
 21917 ;; Hardware stack levels required when called:    2
 21918 ;; This function calls:
 21919 ;;		i1_SPIGet
 21920 ;;		i1_SPIPut
 21921 ;; This function is called by:
 21922 ;;		_high_isr
 21923 ;; This function uses a non-reentrant model
 21924 ;;
 21925                           
 21926                           
 21927                           ;psect for function i1_PHYGetShortRAMAddr
 21928  2284                     i1_PHYGetShortRAMAddr:	
 21929                           
 21930                           ;incstack = 0
 21931 ;; hardware stack exceeded
 21932                           ; Regs used in i1_PHYGetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 21933                           ;i1PHYGetShortRAMAddr@address stored from wreg
 21934  2284  00F1               	movwf	i1PHYGetShortRAMAddr@address
 21935                           
 21936                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 21937                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 21938  2285  3000               	movlw	0
 21939  2286  198B               	btfsc	11,3	;volatile
 21940  2287  3001               	movlw	1
 21941  2288  00F3               	movwf	i1PHYGetShortRAMAddr@tmpRFIE	;volatile
 21942                           
 21943                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.IOCIE = 0;
 21944  2289  118B               	bcf	11,3	;volatile
 21945                           
 21946                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 21947  228A  0022               	movlb	2	; select bank2
 21948  228B  118D               	bcf	13,3	;volatile
 21949                           
 21950                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
 21951  228C  0871               	movf	i1PHYGetShortRAMAddr@address,w
 21952  228D  22DA  31A2         	fcall	i1_SPIPut
 21953                           
 21954                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
 21955  228F  22E9               	fcall	i1_SPIGet
 21956  2290  00F2               	movwf	i1PHYGetShortRAMAddr@toReturn
 21957                           
 21958                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 21959  2291  0022               	movlb	2	; select bank2
 21960  2292  158D               	bsf	13,3	;volatile
 21961                           
 21962                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.IOCIE = tmpRFIE;
 21963  2293  0C73               	rrf	i1PHYGetShortRAMAddr@tmpRFIE,w	;volatile
 21964  2294  1C03               	skipc
 21965  2295  118B               	bcf	11,3	;volatile
 21966  2296  1803               	skipnc
 21967  2297  158B               	bsf	11,3	;volatile
 21968                           
 21969                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 21970  2298  0872               	movf	i1PHYGetShortRAMAddr@toReturn,w
 21971  2299  0008               	return
 21972  229A                     __end_ofi1_PHYGetShortRAMAddr:	
 21973  229A                     __ptext88:	
 21974 ;; *************** function i1_PHYSetShortRAMAddr *****************
 21975 ;; Defined at:
 21976 ;;		line 124 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 21977 ;; Parameters:    Size  Location     Type
 21978 ;;  address         1    wreg     unsigned char 
 21979 ;;  value           1    1[COMMON] unsigned char 
 21980 ;; Auto vars:     Size  Location     Type
 21981 ;;  address         1    2[COMMON] unsigned char 
 21982 ;;  PHYSetShortR    1    3[COMMON] volatile unsigned char 
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1    wreg      void 
 21985 ;; Registers used:
 21986 ;;		wreg, status,2, status,0, pclath, cstack
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/0
 21989 ;;		On exit  : 1F/2
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21996 ;;Total ram usage:        3 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:    1
 21999 ;; This function calls:
 22000 ;;		i1_SPIPut
 22001 ;; This function is called by:
 22002 ;;		_high_isr
 22003 ;; This function uses a non-reentrant model
 22004 ;;
 22005                           
 22006                           
 22007                           ;psect for function i1_PHYSetShortRAMAddr
 22008  229A                     i1_PHYSetShortRAMAddr:	
 22009                           
 22010                           ;incstack = 0
 22011 ;; hardware stack exceeded
 22012                           ; Regs used in i1_PHYSetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 22013                           ;i1PHYSetShortRAMAddr@address stored from wreg
 22014  229A  00F2               	movwf	i1PHYSetShortRAMAddr@address
 22015                           
 22016                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 22017  229B  3000               	movlw	0
 22018  229C  198B               	btfsc	11,3	;volatile
 22019  229D  3001               	movlw	1
 22020  229E  00F3               	movwf	i1PHYSetShortRAMAddr@tmpRFIE	;volatile
 22021                           
 22022                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.IOCIE = 0;
 22023  229F  118B               	bcf	11,3	;volatile
 22024                           
 22025                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 22026  22A0  0022               	movlb	2	; select bank2
 22027  22A1  118D               	bcf	13,3	;volatile
 22028                           
 22029                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
 22030  22A2  0872               	movf	i1PHYSetShortRAMAddr@address,w
 22031  22A3  22DA  31A2         	fcall	i1_SPIPut
 22032                           
 22033                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
 22034  22A5  0871               	movf	i1PHYSetShortRAMAddr@value,w
 22035  22A6  22DA               	fcall	i1_SPIPut
 22036                           
 22037                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 22038  22A7  0022               	movlb	2	; select bank2
 22039  22A8  158D               	bsf	13,3	;volatile
 22040                           
 22041                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.IOCIE = tmpRFIE;
 22042  22A9  0C73               	rrf	i1PHYSetShortRAMAddr@tmpRFIE,w	;volatile
 22043  22AA  1C03               	skipc
 22044  22AB  118B               	bcf	11,3	;volatile
 22045  22AC  1803               	skipnc
 22046  22AD  158B               	bsf	11,3	;volatile
 22047  22AE  0008               	return
 22048  22AF                     __end_ofi1_PHYSetShortRAMAddr:	
 22049  22AF                     __ptext90:	
 22050 ;; *************** function i1_PHYGetLongRAMAddr *****************
 22051 ;; Defined at:
 22052 ;;		line 185 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;  address         2    1[COMMON] unsigned int 
 22055 ;; Auto vars:     Size  Location     Type
 22056 ;;  PHYGetLongRA    1    6[COMMON] volatile unsigned char 
 22057 ;;  PHYGetLongRA    1    5[COMMON] unsigned char 
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  1    wreg      unsigned char 
 22060 ;; Registers used:
 22061 ;;		wreg, status,2, status,0, pclath, cstack
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/2
 22064 ;;		On exit  : 1F/2
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22070 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22071 ;;Total ram usage:        6 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:    2
 22074 ;; This function calls:
 22075 ;;		i1_SPIGet
 22076 ;;		i1_SPIPut
 22077 ;; This function is called by:
 22078 ;;		_high_isr
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           
 22083                           ;psect for function i1_PHYGetLongRAMAddr
 22084  22AF                     i1_PHYGetLongRAMAddr:	
 22085                           
 22086                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 22087                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 22088                           
 22089                           ;incstack = 0
 22090 ;; hardware stack exceeded
 22091                           ; Regs used in i1_PHYGetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 22092  22AF  3000               	movlw	0
 22093  22B0  198B               	btfsc	11,3	;volatile
 22094  22B1  3001               	movlw	1
 22095  22B2  00F6               	movwf	i1PHYGetLongRAMAddr@tmpRFIE	;volatile
 22096                           
 22097                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.IOCIE = 0;
 22098  22B3  118B               	bcf	11,3	;volatile
 22099                           
 22100                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 22101  22B4  0022               	movlb	2	; select bank2
 22102  22B5  118D               	bcf	13,3	;volatile
 22103                           
 22104                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
 22105  22B6  0872               	movf	i1PHYGetLongRAMAddr@address+1,w
 22106  22B7  00F4               	movwf	??i1_PHYGetLongRAMAddr+1
 22107  22B8  0871               	movf	i1PHYGetLongRAMAddr@address,w
 22108  22B9  00F3               	movwf	??i1_PHYGetLongRAMAddr
 22109  22BA  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 22110  22BB  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 22111  22BC  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 22112  22BD  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 22113  22BE  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 22114  22BF  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 22115  22C0  0873               	movf	??i1_PHYGetLongRAMAddr,w
 22116  22C1  397F               	andlw	127
 22117  22C2  3880               	iorlw	128
 22118  22C3  22DA  31A2         	fcall	i1_SPIPut
 22119                           
 22120                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
 22121  22C5  0871               	movf	i1PHYGetLongRAMAddr@address,w
 22122  22C6  00F3               	movwf	??i1_PHYGetLongRAMAddr
 22123  22C7  3005               	movlw	5
 22124  22C8                     u718_25:	
 22125  22C8  35F3               	lslf	??i1_PHYGetLongRAMAddr,f
 22126  22C9  0B89               	decfsz	9,f
 22127  22CA  2AC8               	goto	u718_25
 22128  22CB  0873               	movf	??i1_PHYGetLongRAMAddr,w
 22129  22CC  39E0               	andlw	224
 22130  22CD  22DA  31A2         	fcall	i1_SPIPut
 22131                           
 22132                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
 22133  22CF  22E9               	fcall	i1_SPIGet
 22134  22D0  00F5               	movwf	i1PHYGetLongRAMAddr@toReturn
 22135                           
 22136                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 22137  22D1  0022               	movlb	2	; select bank2
 22138  22D2  158D               	bsf	13,3	;volatile
 22139                           
 22140                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.IOCIE = tmpRFIE;
 22141  22D3  0C76               	rrf	i1PHYGetLongRAMAddr@tmpRFIE,w	;volatile
 22142  22D4  1C03               	skipc
 22143  22D5  118B               	bcf	11,3	;volatile
 22144  22D6  1803               	skipnc
 22145  22D7  158B               	bsf	11,3	;volatile
 22146                           
 22147                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 22148  22D8  0875               	movf	i1PHYGetLongRAMAddr@toReturn,w
 22149  22D9  0008               	return
 22150  22DA                     __end_ofi1_PHYGetLongRAMAddr:	
 22151  22DA                     __ptext92:	
 22152 ;; *************** function i1_SPIPut *****************
 22153 ;; Defined at:
 22154 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 22155 ;; Parameters:    Size  Location     Type
 22156 ;;  v               1    wreg     unsigned char 
 22157 ;; Auto vars:     Size  Location     Type
 22158 ;;  v               1    0[COMMON] unsigned char 
 22159 ;;  SPIPut          1    0        unsigned char 
 22160 ;; Return value:  Size  Location     Type
 22161 ;;                  1    wreg      void 
 22162 ;; Registers used:
 22163 ;;		wreg
 22164 ;; Tracked objects:
 22165 ;;		On entry : 1D/2
 22166 ;;		On exit  : 1F/0
 22167 ;;		Unchanged: 0/0
 22168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22173 ;;Total ram usage:        1 bytes
 22174 ;; Hardware stack levels used:    1
 22175 ;; This function calls:
 22176 ;;		Nothing
 22177 ;; This function is called by:
 22178 ;;		i1_PHYSetShortRAMAddr
 22179 ;;		i1_PHYGetShortRAMAddr
 22180 ;;		i1_PHYGetLongRAMAddr
 22181 ;;		i1_SPIGet
 22182 ;; This function uses a non-reentrant model
 22183 ;;
 22184                           
 22185                           
 22186                           ;psect for function i1_SPIPut
 22187  22DA                     i1_SPIPut:	
 22188                           
 22189                           ;incstack = 0
 22190 ;; hardware stack exceeded
 22191                           ; Regs used in i1_SPIPut: [wreg]
 22192                           ;i1SPIPut@v stored from wreg
 22193  22DA  00F0               	movwf	i1SPIPut@v
 22194                           
 22195                           ;spi.c: 47: uint8_t i;
 22196                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 22197  22DB  0020               	movlb	0	; select bank0
 22198  22DC  1191               	bcf	17,3	;volatile
 22199                           
 22200                           ;spi.c: 64: i = SSP1BUF;
 22201  22DD  0024               	movlb	4	; select bank4
 22202  22DE  0811               	movf	17,w	;volatile
 22203  22DF                     i1l7666:	
 22204                           
 22205                           ;spi.c: 67: {
 22206                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 22207  22DF  1395               	bcf	21,7	;volatile
 22208                           
 22209                           ;spi.c: 69: SSP1BUF = v;
 22210  22E0  0870               	movf	i1SPIPut@v,w
 22211  22E1  0091               	movwf	17	;volatile
 22212                           
 22213                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 22214  22E2  1B95               	btfsc	21,7	;volatile
 22215  22E3  2ADF               	goto	i1l7666
 22216  22E4                     i1l827:	
 22217  22E4  0020               	movlb	0	; select bank0
 22218  22E5  1D91               	btfss	17,3	;volatile
 22219  22E6  2AE4               	goto	i1l827
 22220                           
 22221                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 22222  22E7  1191               	bcf	17,3	;volatile
 22223  22E8  0008               	return
 22224  22E9                     __end_ofi1_SPIPut:	
 22225  22E9                     __ptext91:	
 22226 ;; *************** function i1_SPIGet *****************
 22227 ;; Defined at:
 22228 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 22229 ;; Parameters:    Size  Location     Type
 22230 ;;		None
 22231 ;; Auto vars:     Size  Location     Type
 22232 ;;		None
 22233 ;; Return value:  Size  Location     Type
 22234 ;;                  1    wreg      unsigned char 
 22235 ;; Registers used:
 22236 ;;		wreg, status,2, status,0, pclath, cstack
 22237 ;; Tracked objects:
 22238 ;;		On entry : 1F/0
 22239 ;;		On exit  : 1F/4
 22240 ;;		Unchanged: 0/0
 22241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22246 ;;Total ram usage:        0 bytes
 22247 ;; Hardware stack levels used:    1
 22248 ;; Hardware stack levels required when called:    1
 22249 ;; This function calls:
 22250 ;;		i1_SPIPut
 22251 ;; This function is called by:
 22252 ;;		i1_PHYGetShortRAMAddr
 22253 ;;		i1_PHYGetLongRAMAddr
 22254 ;; This function uses a non-reentrant model
 22255 ;;
 22256                           
 22257                           
 22258                           ;psect for function i1_SPIGet
 22259  22E9                     i1_SPIGet:	
 22260                           
 22261                           ;spi.c: 115: SPIPut(0x00);
 22262                           
 22263                           ;incstack = 0
 22264 ;; hardware stack exceeded
 22265                           ; Regs used in i1_SPIGet: [wreg+status,2+status,0+pclath+cstack]
 22266  22E9  3000               	movlw	0
 22267  22EA  22DA               	fcall	i1_SPIPut
 22268                           
 22269                           ;spi.c: 116: return SSP1BUF;
 22270  22EB  0024               	movlb	4	; select bank4
 22271  22EC  0811               	movf	17,w	;volatile
 22272  22ED  0008               	return
 22273  22EE                     __end_ofi1_SPIGet:	
 22274                           
 22275                           	psect	text93
 22276  07F6                     __ptext93:	
 22277 ;; *************** function _UserInterruptHandler *****************
 22278 ;; Defined at:
 22279 ;;		line 235 in file "../src/system_config/pic18exp_pic16f1947_24j40/system.c"
 22280 ;; Parameters:    Size  Location     Type
 22281 ;;		None
 22282 ;; Auto vars:     Size  Location     Type
 22283 ;;		None
 22284 ;; Return value:  Size  Location     Type
 22285 ;;                  1    wreg      void 
 22286 ;; Registers used:
 22287 ;;		None
 22288 ;; Tracked objects:
 22289 ;;		On entry : 1C/0
 22290 ;;		On exit  : 1C/0
 22291 ;;		Unchanged: 1C/0
 22292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22297 ;;Total ram usage:        0 bytes
 22298 ;; Hardware stack levels used:    1
 22299 ;; This function calls:
 22300 ;;		Nothing
 22301 ;; This function is called by:
 22302 ;;		_high_isr
 22303 ;; This function uses a non-reentrant model
 22304 ;;
 22305                           
 22306                           
 22307                           ;psect for function _UserInterruptHandler
 22308  07F6                     _UserInterruptHandler:	
 22309                           
 22310                           ;incstack = 0
 22311                           ; Regs used in _UserInterruptHandler: []
 22312  07F6  0008               	return
 22313  07F7                     __end_of_UserInterruptHandler:	
 22314  007E                     btemp	set	126	;btemp
 22315  007E                     int$flags	set	126
 22316  007E                     wtemp	set	126
 22317  007E                     wtemp0	set	126
 22318  0080                     wtemp1	set	128
 22319  0082                     wtemp2	set	130
 22320  0084                     wtemp3	set	132
 22321  0086                     wtemp4	set	134
 22322  0088                     wtemp5	set	136
 22323  007F                     wtemp6	set	127
 22324  007E                     ttemp	set	126
 22325  007E                     ttemp0	set	126
 22326  0081                     ttemp1	set	129
 22327  0084                     ttemp2	set	132
 22328  0087                     ttemp3	set	135
 22329  007F                     ttemp4	set	127
 22330  007E                     ltemp	set	126
 22331  007E                     ltemp0	set	126
 22332  0082                     ltemp1	set	130
 22333  0086                     ltemp2	set	134
 22334  0080                     ltemp3	set	128


Data Sizes:
    Strings     339
    Constant    156
    Data        11
    BSS         271
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     62      71
    BANK1            80     75      80
    BANK2            80      2      80
    BANK3            80      0      78
    BANK4            80      9      49
    BANK5            80      0      70
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           70      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK3[33]), 

    memset@p	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf$2499	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[21]), STR_14(CODE[18]), STR_13(CODE[20]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[25]), STR_8(CODE[22]), 
		 -> STR_7(CODE[17]), STR_6(CODE[16]), STR_5(CODE[31]), STR_4(CODE[32]), 
		 -> STR_3(CODE[30]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[21]), STR_13(CODE[20]), STR_6(CODE[16]), STR_5(CODE[31]), 
		 -> STR_4(CODE[32]), STR_3(CODE[30]), 

    sp__memset	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK3[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    isSameAddress@Address2	PTR unsigned char  size(1) Largest target is 70
		 -> ConnectionTable(BANK5[70]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(1) Largest target is 70
		 -> ConnectionTable(BANK5[70]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK5[70]), RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK5[70]), RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S770$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    S770$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmmyIndex(BANK2[2]), nvmRole(BANK2[2]), nvmEdc(BANK2[2]), nvmOutFrameCounter(BANK2[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(BANK2[2]), nvmCurrentChannel(BANK2[2]), nvmMyPANID(BANK2[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 70
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK1[2]), ConnMode(BANK1[1]), currentChannel(BANK0[1]), 
		 -> role(BANK0[1]), conn_size(BANK0[1]), ConnectionTable(BANK5[70]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 70
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK1[2]), ConnMode(BANK1[1]), currentChannel(BANK0[1]), 
		 -> role(BANK0[1]), conn_size(BANK0[1]), ConnectionTable(BANK5[70]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), MAC_PANID(BANK2[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> MiApp_StartConnection@tmp(BANK0[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK1[2]), myNetworkAddress(BANK2[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(1) Largest target is 40
		 -> TxBuffer(BANK4[40]), 

    S250$DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK5[70]), RxBuffer(BIGRAM[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK5[70]), RxBuffer(BIGRAM[138]), 

    S27$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S206$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    S206$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _high_isr in COMMON

    _high_isr->i1_PHYGetLongRAMAddr
    i1_PHYSetShortRAMAddr->i1_SPIPut
    i1_PHYGetShortRAMAddr->i1_SPIPut
    i1_PHYGetLongRAMAddr->i1_SPIPut
    i1_SPIGet->i1_SPIPut

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_DemoOutput_Channel
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMInit->_NVMalloc
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_NVMWrite
    _EEPROM_Read->_SPIPut
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _store_connection_tb->_handle_lost_connection
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->_MiMAC_DiscardPacket
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _Find_Index->___bmul
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_InitMRF24J40
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPIPut
    _PHYSetLongRAMAddr->_SPIPut
    _AddConnection->_NVMWrite
    _isSameAddress->___bmul
    _Total_Connections->___bmul
    _MiApp_DiscardMessage->_MiMAC_DiscardPacket
    _MiMAC_DiscardPacket->___wmul
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->___wmul
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___wmul->___lbmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut
    _DELAY_ms->___lmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _run_star_demo->_MiApp_EstablishConnection
    _Process_RxMessage->_MiApp_MessageAvailable
    _MiApp_UnicastStar->_MiApp_MessageAvailable
    _MiApp_BroadcastPacket->_SendPacket
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_EstablishConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _P2PTasks->_MiApp_BroadcastConnectionTable
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Initialize_Demo

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    _Run_Demo->_run_star_demo

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 2713580
                                             74 BANK1      1     1      0
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     13    13      0   48455
                                              0 BANK1     13    13      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2831
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2831
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      65
                                             10 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      65
                                             10 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1920045
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       10    10      0 1920045
                                              0 BANK4      9     9      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___lbmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              5     4      1     628
                                              9 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    1     1      0  597030
                                             57 BANK1      1     1      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               2     0      2   43428
                                             55 BANK0      2     0      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   43771
                                             57 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   43397
                                             55 BANK0      2     1      1
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  527255
                                             57 BANK1     13    13      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   42368
                                             58 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     389
                                             19 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      2     2      0  696948
                                              0 BANK2      2     2      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
                           _NVMWrite
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                8     3      5    3930
                                             19 BANK0      8     3      5
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   73722
                                             43 BANK0      7     7      0
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
                            _NVMRead
                           _NVMWrite
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    1893
                                              9 BANK0      6     0      6
                           _MacroNop
 ---------------------------------------------------------------------------------
 (4) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1791
                                             15 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1757
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           5     3      2   43624
                                             38 BANK0      5     3      2
                       _InitMRF24J40
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0   14338
                                             27 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          3     1      2     902
                                             10 BANK0      3     1      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  550553
                                             57 BANK1     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               1     1      0  484501
                                             56 BANK1      1     1      0
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            25    25      0  484501
                                             32 BANK1     24    24      0
                      _AddConnection
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                             ___bmul
                             ___wmul
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                 10     8      2     776
                                             13 BANK0      8     6      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               4     4      0     136
                                              9 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     1     1      0   42371
                                             58 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   42472
                                             22 BANK1      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                11    11      0   45995
                                             22 BANK0     11    11      0
                _MiMAC_DiscardPacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      10    10      0   69810
                                             22 BANK1     10    10      0
                         _SendPacket
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     703
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     715
                                              9 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          9     4      5   91485
                                             60 BANK0      2     2      0
                                             25 BANK1      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   45590
                                             59 BANK0      1     1      0
                                             24 BANK1      1     0      1
               _MiApp_UnicastAddress
                             ___bmul
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 3     1      2   42646
                                             58 BANK0      1     1      0
                                             22 BANK1      2     0      2
                         _SendPacket
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   45264
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           3     1      2    3063
                                             12 BANK0      3     1      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 1     1      0   75581
                                             58 BANK0      1     1      0
             _MiApp_RemoveConnection
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                               6     6      0   72715
                                             22 BANK1      6     6      0
                           _NVMWrite
                         _SendPacket
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          16    10      6   42337
                                             51 BANK0      7     1      6
                                             13 BANK1      9     9      0
                   _MiMAC_SendPacket
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                    26    17      9   36527
                                             38 BANK0     13     4      9
                                              0 BANK1     13    13      0
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        10     6      4     318
                                              9 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (9) _MiMAC_SetAltAddress                                  4     0      4    3333
                                             13 BANK0      4     0      4
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _InitMRF24J40                                        20    20      0   20541
                                             18 BANK0     20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (10) _PHYGetShortRAMAddr                                  3     3      0     161
                                             10 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _PHYGetLongRAMAddr                                   6     4      2     434
                                             10 BANK0      6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (11) _SPIGet                                              0     0      0      31
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _MiMAC_SetChannel                                    2     1      1    9935
                                             16 BANK0      2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _PHYSetShortRAMAddr                                   3     2      1    2621
                                             10 BANK0      3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _PHYSetLongRAMAddr                                    6     3      3    6982
                                             10 BANK0      6     3      3
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        8     8      0   11626
                                             27 BANK0      8     8      0
                           _NVMWrite
                  _Total_Connections
                             ___bmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     4      3    1024
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0    2841
                                             12 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0   22849
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  2     2      0   22849
                                             20 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    4403
                                             27 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             7     1      6    4341
                                             20 BANK0      7     1      6
                             ___bmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   45565
                                             60 BANK0      2     1      1
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   45264
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   45264
                                             55 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             38    28     10   32390
                                             21 BANK0     34    24     10
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   22849
                                             14 BANK0      6     2      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             16 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1    2643
                                              9 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0    5470
                                             28 BANK0      1     1      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    2605
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    2605
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2989
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               6     2      4     384
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     223
                                             12 BANK0      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0      96
                                             10 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0      96
                                             10 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                             6     4      2    2382
                                             21 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              9 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           14    14      0    1277
                                              7 COMMON     5     5      0
                                              0 BANK0      9     9      0
               _UserInterruptHandler
                i1_PHYGetLongRAMAddr
               i1_PHYGetShortRAMAddr
               i1_PHYSetShortRAMAddr
                           i1___wmul
 ---------------------------------------------------------------------------------
 (16) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (16) i1_PHYSetShortRAMAddr                                3     2      1     245
                                              1 COMMON     3     2      1
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (16) i1_PHYGetShortRAMAddr                                3     3      0     112
                                              1 COMMON     3     3      0
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (16) i1_PHYGetLongRAMAddr                                 6     4      2     208
                                              1 COMMON     6     4      2
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (17) i1_SPIGet                                            0     0      0      22
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (17) i1_SPIPut                                            2     2      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lbmod (ARG)
           _isdigit
     _DemoOutput_ChannelError
     _MiApp_ConnectionMode
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
           ___wmul
             ___lbmod (ARG)
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _Total_Connections
               ___bmul
             ___bmul
             _isSameAddress
               ___bmul (ARG)
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _NVMWrite
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___lbmod (ARG)
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
               ___bmul
               ___wmul
                 ___lbmod (ARG)
             ___bmul
           _Find_Index
             ___bmul
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                   ___lmul
                 _LCD_Erase
                   _DELAY_ms
                     ___lmul
                   _LCDInitWrite
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                   _memset
                 _LCD_Update
                   _LCD_d_write
                     _DELAY_ms
                       ___lmul
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                   _LCD_i_write
                     _DELAY_ms
                       ___lmul
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                 _sprintf
                   ___bmul
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___lbmod (ARG)
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _PHYGetLongRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYGetShortRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   ___bmul (ARG)
                 ___bmul (ARG)
               ___bmul
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
             ___awdiv
             ___awmod
             ___bmul
             ___wmul
               ___lbmod (ARG)
           _MiMAC_DiscardPacket
             ___wmul
               ___lbmod (ARG)
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             ___wmul
               ___lbmod (ARG)
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPIPut
           _MiWi_TickGet
           _NVMWrite
             ___bmul (ARG)
             ___wmul (ARG)
               ___lbmod (ARG)
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             ___bmul (ARG)
           ___bmul
           ___wmul
             ___lbmod (ARG)
           _isSameAddress
             ___bmul (ARG)
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _PHYGetLongRAMAddr
               _SPIGet
                 _SPIPut
               _SPIPut
             _PHYGetShortRAMAddr
               _SPIGet
                 _SPIPut
               _SPIPut
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPIPut
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         ___bmul (ARG)
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         _NVMWrite
           ___bmul (ARG)
           ___wmul (ARG)
             ___lbmod (ARG)
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           _PHYGetLongRAMAddr
             _SPIGet
               _SPIPut
             _SPIPut
           _PHYGetShortRAMAddr
             _SPIGet
               _SPIPut
             _SPIPut
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         ___wmul
           ___lbmod (ARG)
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
       _NVMInit
         _NVMalloc
       _NVMRead
         _MacroNop
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
       ___bmul
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
     _MiApp_StartConnection
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
       _MiWi_TickGet
     _NVMWrite
       ___bmul (ARG)
       ___wmul (ARG)
         ___lbmod (ARG)
     _STAR_DEMO_OPTIONS_MESSAGE
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
         ___lmul
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___lbmod (ARG)
             _isdigit
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lbmod (ARG)
           _isdigit
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           ___bmul (ARG)
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___lbmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___lbmod (ARG)
               _Total_Connections
                 ___bmul
               ___bmul
               _isSameAddress
                 ___bmul (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   ___bmul (ARG)
                   ___wmul (ARG)
                     ___lbmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _PHYGetLongRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYGetShortRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   ___bmul (ARG)
                 ___bmul
                 ___wmul
                   ___lbmod (ARG)
               ___bmul
             _Find_Index
               ___bmul
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___lbmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPIPut
                           _PHYSetShortRAMAddr
                             _SPIPut
                         _PHYGetLongRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYGetShortRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     ___bmul (ARG)
                   ___bmul (ARG)
                 ___bmul
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
                 ___wmul
                   ___lbmod (ARG)
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
             ___bmul
             ___wmul
               ___lbmod (ARG)
             _isSameAddress
               ___bmul (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           ___bmul (ARG)
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             ___bmul (ARG)
           ___bmul (ARG)
         ___bmul
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___lbmod (ARG)
               _Total_Connections
                 ___bmul
               ___bmul
               _isSameAddress
                 ___bmul (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   ___bmul (ARG)
                   ___wmul (ARG)
                     ___lbmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _PHYGetLongRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYGetShortRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   ___bmul (ARG)
                 ___bmul
                 ___wmul
                   ___lbmod (ARG)
               ___bmul
             _Find_Index
               ___bmul
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___lbmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPIPut
                           _PHYSetShortRAMAddr
                             _SPIPut
                         _PHYGetLongRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYGetShortRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     ___bmul (ARG)
                   ___bmul (ARG)
                 ___bmul
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
                 ___wmul
                   ___lbmod (ARG)
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
             ___bmul
             ___wmul
               ___lbmod (ARG)
             _isSameAddress
               ___bmul (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           ___bmul (ARG)
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
           ___lmul
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _DELAY_ms
               ___lmul
             _LCD_Erase
               _DELAY_ms
                 ___lmul
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___bmul
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___lbmod (ARG)
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___lbmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___lbmod (ARG)
               _Total_Connections
                 ___bmul
               ___bmul
               _isSameAddress
                 ___bmul (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   ___bmul (ARG)
                   ___wmul (ARG)
                     ___lbmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _PHYGetLongRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYGetShortRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   ___bmul (ARG)
                 ___bmul
                 ___wmul
                   ___lbmod (ARG)
               ___bmul
             _Find_Index
               ___bmul
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___lbmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPIPut
                           _PHYSetShortRAMAddr
                             _SPIPut
                         _PHYGetLongRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYGetShortRAMAddr
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     ___bmul (ARG)
                   ___bmul (ARG)
                 ___bmul
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
                 ___wmul
                   ___lbmod (ARG)
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               ___bmul (ARG)
             ___bmul
             ___wmul
               ___lbmod (ARG)
             _isSameAddress
               ___bmul (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 ___bmul (ARG)
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
         _Source_END_DEVICE_INFO
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___lbmod (ARG)
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
       ___lbmod
       ___wmul
         ___lbmod (ARG)
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
       ___lmul
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i1_PHYGetLongRAMAddr
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_PHYGetShortRAMAddr
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_PHYSetShortRAMAddr
     i1_SPIPut
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4B      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4E      11       97.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      9      31      13       61.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      46      15       87.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1BA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              46      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1BA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 23:15:32 2016

                       _PUSH_BUTTON_press_time 01B9                                              _i 005F  
                               _LCD_Initialize 0919                                              pc 0002  
                     ??_Source_END_DEVICE_INFO 0059                            P2PTasks@final_index 00CF  
                            _Process_RxMessage 0404                      __end_of_MiApp_UnicastStar 04D3  
                         ?_MiMAC_DiscardPacket 0070                                 ___bmul@product 002A  
                               ?_isSameAddress 002C                                    __CFG_CP$OFF 0000  
                                ?_LCDInitPortA 0070                                  ?_LCDInitPortB 0070  
                                           l72 2446                                             l90 1ABC  
                                           l85 24FE                                             l79 2477  
                                 ___awdiv@sign 002E                                             _t1 01BD  
                                           _t2 01C1                                  ?_LCDInitWrite 0070  
                                  ?_LCD_Update 0070                            ___wmul@multiplicand 0030  
                          MiApp_ProtocolInit@i 0051                          Find_InActiveDevices@i 005A  
                             i1___wmul@product 0074                             ?_Process_RxMessage 0070  
                      MiApp_RemoveConnection@i 00BB                        MiApp_RemoveConnection@j 00B6  
                                 NVMRead@count 002D                                     _MiMAC_Init 1869  
                              _P2PCapacityInfo 007C                                            l101 1B4F  
                                          l110 1D82                                            l113 1E58  
                                          l105 1C23                                            l108 1CF7  
                                          l141 257B                                            l133 2541  
                                          l171 2718                                            l167 26EB  
                                          l168 26F6                                            l267 170A  
                                          l269 173B                                            l509 15B4  
                                          l534 16C5                                            l623 0F99  
                                          l624 0FDC                                            l538 16E3  
                                          l466 1364                                            l467 16D8  
                                          l635 0F6B                                            l557 1134  
                                          l726 0982                                            l727 0991  
                                          l827 17F9                                            l739 17EA  
                                          l990 0397                                            l993 03B3  
                                 __CFG_CPD$OFF 0000                                    P2PTasks@tmp 00C9  
                  __size_of_PHYSetShortRAMAddr 0019                    __end_of_MiMAC_SetAltAddress 2147  
                                 ___awmod@sign 002E                                ??_AddConnection 003B  
                                  LCDDisplay@i 005B                                            wreg 0009  
                                 __CFG_FOSC$HS 0000                            ??_Process_RxMessage 005E  
                                NVMInit@result 002F              __end_of_MiApp_EstablishConnection 0F7A  
               __size_of_MiApp_StartConnection 0046                  __end_of_MiApp_StartConnection 0FDD  
                                 ?_LCD_d_write 0070                              _Total_Connections 05CA  
                                         l1123 02EB                                           l1221 0ACE  
                                         l1215 0AB2                                           l1313 0D66  
                                         l1217 0AB4                                           l1242 0B5A  
                                         l1218 0AB6                                           l1243 0B5B  
                                         l1219 0AB8                                           l1238 0B58  
                                         l1273 0C28                                           l1435 09D4  
                                         l1187 0895                                           l1268 0C0B  
                                         l1277 0C45                                           l1297 0D0E  
                                         l9010 0E55                                           l9100 0A40  
                                         l9022 0E68                                           l9104 0A4A  
                                         l9018 0E64                                           l9034 0E86  
                                         l9042 0E96                                           l9202 0B8B  
                                         l9210 0BA0                                           l9122 0AAD  
                                         l9220 0BBD                                           l9204 0B95  
                                         l9124 0AB9                                           l8500 2472  
                                         l9060 1A12                                           l9052 19F6  
                                         l9038 0E92                                           l9310 0C90  
                                         l9214 0BAC                                           l9142 0ADC  
                                         l9150 0B06                                           l9134 0ABC  
                                         l8510 2480                                           l9400 0D82  
                                         l9304 0C84                                           l9224 0BC4  
                                         l9232 0BCD                                           l9082 0A24  
                                         l9074 0A20                                           l9410 0D9A  
                                         l9330 0CE1                                           l9250 0C02  
                                         l9218 0BB3                                           l9234 0BE2  
                                         l9138 0AD1                                           l8522 24A4  
                                         l9332 0CE4                                           l9324 0CC3  
                                         l9316 0CAD                                           l9228 0BCA  
                                         l9172 0B39                                           l9180 0B56  
                                         l8470 09DE                                           l9086 0A2E  
                                         l9430 0DF2                                           l9350 0D16  
                                         l9318 0CB0                                           l9246 0BF9  
                                         l9182 0B5D                                           l9158 0B1A  
                                         l9510 090E           __size_of_Forward_Packet_PANCr_to_EDy 004E  
                                         l8368 17F2                                           l9416 0DA3  
                                         l9440 0E21                                           l9360 0D2E  
                                         l9336 0CFF                                           l9192 0B7F  
                                         l8640 2565                                           l8632 254C  
                                         l9600 1166                                           l9434 0E0C  
                                         l9426 0DE2                                           l9418 0DC3  
                                         l9338 0D02                                           l9194 0B81  
                                         l9178 0B3A                                           l9450 0A91  
                                         l8554 17A6                                           l8538 178E  
                                         l8810 26FB                                           l8802 26D1  
                                         l8722 25FF                                           l8714 25F4  
                                         l8706 25E8                                           l8650 2570  
                                         l9444 0E31                                           l9436 0E1A  
                                         l9452 0E42                                           l9188 0B72  
                                         l9516 1770                                           l9532 05F3  
                                         l8484 242E                                           l8812 2713  
                                         l8660 2586                                           l8636 2553  
                                         l9620 119E                                           l9700 1A88  
                                         l9540 23DE                                           l9366 0D38  
                                         l9374 0D48                                           l9294 0C62  
                                         l9198 0B84                                           l9526 05CD  
                                         l8494 245A                                           l8750 2662  
                                         l8742 2640                                           l8654 2578  
                                         l8646 256C                                           l8576 0957  
                                         l9384 0D5C                                           l9296 0C70  
                                         l8488 2422                                           l8824 271F  
                                         l9616 1194                                           l9712 1A9A  
                                         l9720 1AAA                                           l9704 1A8F  
                                         l9552 240F                                           l8914 20C5  
                                         l9394 0D6F                                           l9378 0D4D  
                                         l8498 244E                                           l8666 258C  
                                         l8658 2583                                           l9642 1200  
                                         l9626 11D2                                           l9554 23E3  
                                         l8828 2750                                           l8780 26B6  
                                         l8772 2698                                           l8756 2664  
                                         l8764 267D                                           l9724 1AB2  
                                         l9716 1AA6                                           l9740 1ACF  
                                         l9556 2412                                           l8918 20BC  
                                         l8934 1FED                                           l9494 08F7  
                                         l8678 259B                                           l9662 1A51  
                                         l9822 1DF1                                           l8928 0E79  
                                         l9920 21D3                                           l9680 1A6D  
                                         l9672 1A5E                                           l9656 1A48  
                                         l9808 1D58                                           l9752 1AEB  
                                         l8938 1FF3                                           l9578 17BA  
                                         l8786 26B8                                           l8794 26D0  
                                         l8698 25DC                                           l9842 1ECC  
                                         l9738 1ACC                                           l9930 2371  
                                         l9916 21D1                                           l9684 1A71  
                                         l9852 1F28                                           l9836 1E96  
                                         l9860 1F2B                                           l9756 1AF0  
                                         l9748 1AD3                                           l9918 2186  
                                         l9870 1F55                                           l9862 1F3F  
                                         l9782 1BBC                                           l9942 23D7  
                                         STR_1 29CE                                           l9688 1A79  
                                         l9872 1F59                                           l9848 1EF6  
                                         l9768 1B25                                           STR_2 29BD  
                                         STR_3 28DB                                           l9874 1F5F  
                                         STR_4 289C                                           STR_5 28BC  
                                         l9884 1F63                                           l9796 1C90  
                                         STR_6 29DF                                           STR_7 29AC  
                                         l9982 2277                                           l9886 1F89  
                                         STR_8 2928                                           STR_9 28F9  
                                         l9992 07CA                                           l9968 2253  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATD 010F  
                       __size_of_ButtonPressed 0065                                           u8100 19E4  
                                         u8110 19E5                                           u8120 19F4  
                    DemoOutput_Channel@channel 005D                                           u8140 1A08  
                                         u8045 0E5D                                           u7405 27A9  
                                         u8150 1A09                                           u8160 1A10  
                                         u8180 1A2E                                           u8085 0E8C  
                                         u8325 0B6B                                           u8335 0B78  
                                         u7625 255D                                           u7395 2778  
                                         u9155 1AA0                                           u8445 0C25  
                                         u9085 1A66                                           u8545 0CA1  
                                         u8465 0C42                                           u9435 2384  
                                         u8485 0C5F                                           u9525 18AB  
                                         u8585 0CD9                                           u8595 0CF3  
                                         u9565 1941                                           u8935 23F2  
                                 ?_LCD_i_write 0070                                           u8785 0E2F  
                                         u9780 1358                                           u9875 139E  
                    freezer_feature@switch_val 00AC                                           _MiWi 2800  
                           ?_Total_Connections 0070                      MiApp_StartConnection@Mode 0038  
                       MiApp_UnicastStar@SecEn 00E5                     MiMAC_SetChannel@offsetFreq 0030  
                                         _main 0863                                __end_of_NVMInit 234C  
                              __end_of_NVMRead 1770                                           _role 0065  
                                         fsr0h 0005                                           fsr1h 0007  
                                         fsr0l 0004                                           indf0 0000  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                             __size_of_LCD_Erase 000F  
       __end_of_MiApp_BroadcastConnectionTable 19DB        __size_of_MiApp_BroadcastConnectionTable 0147  
               _MiApp_BroadcastConnectionTable 1894                                 ??_InitMRF24J40 0032  
                                         ltemp 007E                                           start 0111  
                       __size_of_run_star_demo 026B                                           ttemp 007E  
                                         wtemp 007E                                  __CFG_IESO$OFF 0000  
                             __end_of_DELAY_ms 099A                          MiApp_ProtocolInit@tmp 004C  
                                 _sprintf$2492 0043                                   _sprintf$2493 0045  
                                 _sprintf$2499 0047                            ??_Total_Connections 002C  
                       __end_of_LCD_Initialize 0957                              ___bmul@multiplier 002B  
                    __end_of_Process_RxMessage 0435                                  __CFG_MCLRE$ON 0000  
                            _PHYGetLongRAMAddr 278E                                          S11452 0600  
                                        S11448 0700                          ??_MiMAC_DiscardPacket 0034  
                               ??_LCDInitPortA 002A                                 ??_LCDInitPortB 002A  
                               ??_LCDInitWrite 002C                             ?_PHYGetLongRAMAddr 002A  
                             __end_of_P2PTasks 16E6                   __end_of_MiApp_DiscardMessage 0439  
                             _send_link_status 1846                                     _Find_Index 2185  
                                        l10000 07E9                                          l10002 07EF  
                                        l10102 19CA                                          l10030 18EC  
                                        l10024 18B1                                          l10106 18ED  
                                        l10210 12C0                                          l10140 053D  
                                        l10132 053A                                          l10124 0531  
                                        l10116 050A                                          l10212 12DF  
                                        l10204 128E                                          l10206 12AD  
                                        l10128 0535                                          l10072 1995  
                                        l10224 1328                                          l11032 0FD1  
                                        l11120 0189                                          l10146 0544  
                                        l10090 19B6                                          l10410 14C1  
                                        l10330 140C                                          l10306 13E7  
                                        l10242 135A                                          l10218 12F5  
                                        l11210 02FD                                          l11106 0144  
                                        l10324 1403                                          l10260 1389  
                                        l10252 1375                                          l10228 1337  
                                        l11220 0215                                          l11132 01A2  
                                        l11044 0919                                          l10094 19BD  
                                        l10086 19B4                                          l10510 1678  
                                        l10422 152C                                          l10414 151D  
                                        l10342 141E                                          l11222 0191  
                                        l10168 058E                                          l10088 192D  
                                        l10432 1576                                          l10424 1549  
                                        l10272 13A6                                          l11232 032C  
                                        l11216 0318                                          l11224 031D  
                                        l11082 08EE                                          l10522 16C2  
                                        l10506 1672                                          l10354 1464  
                                        l10290 13DB                                          l10266 1394  
                                        l10258 1386                                          l11218 031A  
                                        l11154 022F                                          l11250 0128  
                                        l10452 15B9                                          l10444 15A7  
                                        l10372 1485                                          l10532 16C6  
                                        l11236 035C                                          l11164 026A  
                                        l11084 0113                                          l10286 13D8  
                                        l10278 13B7                                          l10534 16DA  
                                        l11350 08A4                                          l11190 02A3  
                                        l11166 026D                                          l10480 1621  
                                        l10472 1619                                          l10456 15C3  
                                        l10384 1497                                          l10608 187B  
                                        l10712 04CD                                          l11450 1F7E  
                                        l10490 1639                                          l10466 1616  
                                        l10634 1748                                          l11362 08BD  
                                        l11098 013C                                          l10396 14C3  
                                        l10388 14B5                                          l10716 049D  
                                        l10734 0ED9                                          l11366 08C9  
                                        l10718 04D1                                          l10760 0F33  
                                        l10904 0393                                          l10498 1663  
                                        l10746 0F21                                          l10930 101C  
                                        l11386 0871                                          l10780 0F4B  
                                        l10668 17DB                                          l10916 1004  
                                        l10860 03FA                                          l10852 03CD  
                                        l10792 0EF5                                          l10960 1037  
                                        l10794 0F75                                          l10970 106E  
                                        l10884 042E                                          l10984 10EF  
                                        l10888 0432                                          l10896 0383  
                                        ?_main 0070                                __end_of___awdiv 1A7E  
                                        _EEADR 0191                                          STR_10 2912  
                                        STR_11 2912                                          STR_12 299B  
                MiApp_EstablishConnection@Mode 00D9                                          STR_13 2953  
                                        STR_14 2967                                          STR_15 293E  
                                        STR_16 2979                                          STR_17 298A  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 1AB7  
                              __end_of___lbmod 0397                                ___awdiv@divisor 0029  
                                        _T1CON 0018                                          u10715 0313  
                                        u10485 0386                                    LCD_Update@i 003C  
                                        _IOCBN 0395                                          _IOCBP 0394  
                              __end_of___lwdiv 0E6D                                          i1l212 0027  
                                        i1l209 0029                                __end_of___lwmod 0E9B  
                                        i1l827 22E4                                ___awdiv@counter 002D  
                     __size_of_InitSymbolTimer 000B                            ??_PHYGetLongRAMAddr 002C  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                             __end_ofi1_SPIGet 22EE                               SendPacket@tParam 00AF  
                                P2PTasks@tick2 00CB                                  P2PTasks@tick3 00D0  
                             __end_ofi1_SPIPut 22E9                            ___lmul@multiplicand 002D  
                                _LCDWritePortA 09B3                                  _LCDWritePortB 09F5  
                       ?_DemoOutput_UpdateTxRx 0059                                 __CFG_FCMEN$OFF 0000  
                   __end_of_PHYGetShortRAMAddr 27D9                      __end_of_Total_Connections 05FB  
                                        _RxNum 0151                         run_star_demo@select_ed 0250  
                                        _TxNum 0152                            __size_of_LCDDisplay 0022  
                __size_of_MiApp_ConnectionMode 0022                           freezer_feature@tick1 00A4  
                         freezer_feature@tick2 00A8                                __end_of_dpowers 2894  
                          __size_of_LCDInitSPI 0006                               SendPacket@status 00AD  
                   store_connection_tb@payload 002D                  __size_of_MiApp_UnicastAddress 0014  
                                  _SW_Ack_SrED 1829                                __end_of_isdigit 0E7B  
                                        _tick1 013E                                          _tick4 0142  
                             __end_of_NVMWrite 1748                               __end_of_NVMalloc 236F  
                             __end_ofi1___wmul 1815                                          ltemp0 007E  
                                        ltemp1 0082                                          ltemp2 0086  
                                        ltemp3 0080                                  InitMRF24J40@i 0045  
                                InitMRF24J40@j 0043                                 ButtonPressed@t 0033  
                          __size_of_LCD_Update 0038                                          ttemp0 007E  
                                        ttemp1 0081                                          ttemp2 0084  
                                        ttemp3 0087                                          ttemp4 007F  
                      ?_MiApp_RemoveConnection 0070                                          status 0003  
                          i1___wmul@multiplier 0070                                          wtemp0 007E  
                                        wtemp1 0080                                          wtemp2 0082  
                                        wtemp3 0084                                          wtemp4 0086  
                                        wtemp5 0088                                          wtemp6 007F  
                              __end_of_sprintf 0E48                         run_star_demo@update_ed 024D  
                         i1_PHYGetShortRAMAddr 2284                      __end_of_PHYGetLongRAMAddr 27BE  
                    __size_of_MiMAC_SetChannel 0021                           __size_of_EEPROM_Read 001B  
                  __end_of_DemoOutput_Greeting 087D                                ?_LCD_Initialize 0070  
                                 __end_of_MiWi 287E                                __initialization 0801  
                              ??_isSameAddress 002F                      __size_of_MiMAC_SendPacket 0223  
         STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 0029                               __end_of_MacroNop 1800  
                                 __end_of_main 0874                        handle_lost_connection@i 002C  
                   __size_of_MiApp_UnicastStar 0062                                  high_isr@flags 0078  
              __size_of_Source_END_DEVICE_INFO 0032                                  _ButtonPressed 0398  
                            _MACCurrentChannel 014E                      PHYGetShortRAMAddr@address 002A  
       MiApp_UnicastConnection@ConnectionIndex 005B                                         ??_main 005E  
                                  ?_MiMAC_Init 0046                        _DemoOutput_ChannelError 0E9B  
                                 NVMWrite@addr 0036                              __end_of_LCD_Erase 0A20  
                                _run_star_demo 0113                           __end_of_MiWi_TickGet 17B9  
                               ?_LCDWritePortA 0070                                 ?_LCDWritePortB 0070  
                      MiApp_SetChannel@channel 003B                           store_connection_tb@i 0034  
                         store_connection_tb@j 0033                   __size_of_store_connection_tb 006F  
                    PHYGetShortRAMAddr@tmpRFIE 002C                               __end_of_Run_Demo 0FDF  
            MiApp_ProtocolInit@bNetworkFreezer 004E                           _MiMAC_ReceivedPacket 1AB7  
                    PHYSetShortRAMAddr@address 002B                                     _SendPacket 19DB  
                                    ??_NVMInit 002F                                      ??_NVMRead 002F  
                                       _EEADRH 0192                                         _EEDATA 0193  
                                       _EECON2 0196                               ___awdiv@dividend 002B  
                                       _ANSELA 018C                       ?_MiApp_UnicastConnection 00B8  
                               P2PTasks@p_1147 00D5                 __end_of_MiApp_RemoveConnection 1236  
                                       i1l8222 0018                                         i1l8240 002E  
                                       i1l8260 0094                                         i1l8244 0048  
                                       i1l8270 00F7                                         i1l8248 004D  
                                       i1l8194 1802                                         i1l8266 00E8  
                                       i1l8274 00FF                                         i1l8268 00F1  
                                       i1l8198 1808                                         i1l8286 010D  
                                       i1l7666 22DF                                         _OSCCON 0099  
                                       u732_25 00B8                                         u718_25 22C8  
                                       _SPIGet 27D9                                         _SPIPut 17ED  
                        ?i1_PHYGetShortRAMAddr 0070                      PHYSetShortRAMAddr@tmpRFIE 002C  
              MiApp_StartConnection@ChannelMap 0034                           __size_of_LCDTRXCount 0021  
                __size_of_UserInterruptHandler 0001                        ?_DemoOutput_UnicastFail 0070  
                               __CFG_PWRTE$OFF 0000                                  LCDInitWrite@v 002C  
                               P2PTasks@status 00D6                                         _TxData 00EC  
                   __size_of_Process_RxMessage 0031                   __size_ofi1_PHYGetLongRAMAddr 002B  
                             __end_of_high_isr 0111                                         ___bmul 16E6  
                 __end_ofi1_PHYSetShortRAMAddr 22AF                                         ___lmul 09D0  
                                       ___wmul 1FEB                        ??_MiApp_BroadcastPacket 005A  
                                    ??___awdiv 002D                                 ?_ButtonPressed 0070  
                                    ??___awmod 002D                                      ??___lbmod 002A  
                     __size_of_freezer_feature 0054                      __size_of_MiApp_SetChannel 001D  
                                    ??___lwdiv 002D                                      ??___lwmod 0034  
                                       _memset 20BA                                    ?_Find_Index 002C  
                             ___awdiv@quotient 002F                                         _nvmEdc 0163  
                              ___awmod@divisor 0029                                ___awmod@counter 002D  
                                 NVMalloc@size 0029                                 ?_run_star_demo 0070  
                         __end_of_InitMRF24J40 2521                                      ??_isdigit 0029  
                               LCDDisplay@text 0057                          ?_MiMAC_ReceivedPacket 0070  
                  __size_of_DemoOutput_Channel 0016                     __size_of_Total_Connections 0031  
                  ??_MiApp_EstablishConnection 00DA                       MiApp_StartConnection@tmp 0039  
                                    ?_DELAY_ms 0035                                   LCD_d_write@v 003B  
                                   _TxSynCount 0153                                      ??_sprintf 003F  
                       _Source_END_DEVICE_INFO 04D3                    i1PHYGetShortRAMAddr@address 0071  
                            ??_InitSymbolTimer 0029                           __end_of_LCDInitPortA 0FFA  
                         __end_of_LCDInitPortB 20E8                           __end_of_LCDInitWrite 09B3  
                            _SYSTEM_Initialize 2147                                      ?_P2PTasks 0070  
                              ___lbmod@divisor 0029                           _MiApp_DiscardMessage 0435  
                          _PUSH_BUTTON_pressed 0150                           __size_of_LCD_d_write 001B  
                      __end_of__initialization 0860                                ___lbmod@counter 002C  
                __size_of_Find_InActiveDevices 002E                 __end_of_DemoOutput_UnicastFail 2284  
                                    P2PTasks@i 00D7                           __size_of_LCD_i_write 001B  
                                    P2PTasks@p 00D4                                   LCD_i_write@v 003B  
                           ?_SYSTEM_Initialize 0070                            __size_of_MiMAC_Init 002B  
                               _chk_sel_status 0154                               _LatestConnection 014D  
                   __size_of_PHYGetLongRAMAddr 0030  MiApp_BroadcastConnectionTable@broadcast_count 00BC  
                  i1PHYGetShortRAMAddr@tmpRFIE 0073                                NVMWrite@oldGIEH 003A  
                          ___bmul@multiplicand 0029                                   ??_LCDDisplay 005B  
                  i1PHYSetShortRAMAddr@address 0072                                   ??_LCDInitSPI 0029  
                   _myConnectionIndex_in_PanCo 0064                                      ?i1_SPIGet 0070  
                               __pcstackCOMMON 0070                  MiMAC_ReceivedPacket@bIntraPAN 0040  
                                    ?i1_SPIPut 0070          Forward_Packet_PANCr_to_EDy@fw_payload 00B9  
                               high_isr@RxBank 007A                                   __pidataBANK0 0000  
                                 __pidataBANK1 0000                                   __pidataBANK2 0000  
                                 __pidataBANK3 0000                            ??_SYSTEM_Initialize 003B  
                     __size_of_Initialize_Demo 0059                      ??_DemoOutput_ChannelError 0029  
                                 ??_LCD_Update 003C                                      ?_NVMWrite 0034  
                      run_star_demo@switch_val 024F                   ?_Forward_Packet_PANCr_to_EDy 00B9  
                                    ?_NVMalloc 0029                                ??_LCDWritePortA 002A  
                              ??_LCDWritePortB 002A                    i1PHYSetShortRAMAddr@tmpRFIE 0073  
                   SendPacket@DestinationPANID 0053                                      ?i1___wmul 0070  
                              _ConnectionTable 02A0                __end_of_MiApp_UnicastConnection 0456  
                        InitMRF24J40@_dcnt_438 0037                                     ??_DELAY_ms 0037  
                    _END_DEVICES_Short_Address 01A0                                    ?_SendPacket 0053  
                           __end_of_LCDDisplay 0919                      __end_of_SYSTEM_Initialize 2185  
                                 sprintf@width 0051                             __end_of_LCDInitSPI 1000  
                        isSameAddress@Address1 002C                          isSameAddress@Address2 002E  
                                    ?_MacroNop 0070                                     __pbssBANK0 005E  
                                   __pbssBANK1 00EB                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                                   __pbssBANK5 02A0                          ?_MiApp_DiscardMessage 0070  
                     __end_of_send_link_status 1869                                     ??_P2PTasks 00C0  
                       ??i1_PHYGetShortRAMAddr 0071                    __size_of_MiApp_ProtocolInit 0160  
                                NVMWrite@count 0038                            __size_of_Find_Index 0053  
                                      ?_SPIGet 0070                                        ?_SPIPut 0070  
                           __end_of_LCD_Update 0A58                      SendPacket@SecurityEnabled 0058  
                               isSameAddress@i 0032                     MiApp_BroadcastPacket@SecEn 005A  
                          InitMRF24J40@_ms_439 003F                                P2PTasks@FW_Stat 00C8  
                             _MiMAC_SetChannel 27DF                             MiMAC_SendPacket@t1 00A0  
                           MiMAC_SendPacket@t2 00A4                      _MiApp_EstablishConnection 0EBE  
                     MiMAC_SetAltAddress@PANID 002F                     PHYGetShortRAMAddr@toReturn 002B  
                              ??_ButtonPressed 0033                                     __pmaintext 0863  
                                   ??i1_SPIGet 0071                                     ??i1_SPIPut 0070  
                             _MiMAC_SendPacket 253A                                        ?___bmul 0029  
                                      ?___lmul 0029                                      ?_Run_Demo 0070  
                                      ?___wmul 002E                                     __pintentry 0004  
                        __size_of_MiWi_TickGet 0030                                        ?_memset 0029  
                              ??_run_star_demo 0248                                 ___lmul@product 0031  
                                      SPIPut@v 0029                     __end_of_PHYSetShortRAMAddr 253A  
                                   ??_NVMWrite 003A               run_star_demo@sw_layer_ack_status 024C  
                                   ??_NVMalloc 002D                        ??_DemoOutput_UpdateTxRx 005A  
                                   ??i1___wmul 0074                              ??_freezer_feature 00A0  
                ??_Forward_Packet_PANCr_to_EDy 005C                         ??_MiMAC_ReceivedPacket 0036  
                                      _LCDText 01C5                          __end_of_AddConnection 05CA  
                               _failureCounter 0148                                        _SSP1BUF 0211  
                                 ?_SW_Ack_SrED 00B6                                        _NVMInit 22EE  
                                      _NVMRead 1748                           i1_PHYSetShortRAMAddr 229A  
                                    ?_high_isr 0070                                     ??_MacroNop 0029  
                 __size_of_MiMAC_SetAltAddress 003E             __size_of_STAR_DEMO_OPTIONS_MESSAGE 0001  
                        _MiApp_StartConnection 0F97                               ??_LCD_Initialize 003B  
                   ?_STAR_DEMO_OPTIONS_MESSAGE 0070                    AddConnection@connectionSlot 0041  
                              _timerExtension1 007D                                _timerExtension2 015A  
                     MiApp_ConnectionMode@Mode 003C                                __size_of_SPIGet 0006  
                             _AdditionalNodeID 016F                                __size_of_SPIPut 0011  
                  __end_of_MiMAC_DiscardPacket 1789                                P2PTasks@tmpTick 00C4  
                           _PHYGetShortRAMAddr 27BE                                     DELAY_ms@ms 0035  
                                 _MiWi_TickGet 1789                            _store_connection_tb 236F  
                 __end_of_MiApp_ConnectionMode 0EBE                   __end_of_MiApp_UnicastAddress 1829  
                                   ??_Run_Demo 005E                                __size_of___bmul 0024  
                                      ___awdiv 1A3E                                __size_of___lmul 0025  
                                      ___awmod 1A7E                                        ___lbmod 037E  
                          ?_PHYGetShortRAMAddr 0070                                __size_of___wmul 0015  
                             _MiApp_SetChannel 0F7A                            __size_of_SendPacket 0063  
                                      ___lwdiv 0E48                                        ___lwmod 0E7B  
                     ??_handle_lost_connection 0029                          __size_of_InitMRF24J40 0107  
                              __size_of_memset 0013                 DemoOutput_ChannelError@channel 0070  
                                      __ptext1 21D8                                   ??_MiMAC_Init 0048  
                                      __ptext2 2147                                        __ptext3 0919  
                                      __ptext4 0FFA                                        __ptext5 20CD  
                                      __ptext6 0FDF                                        __ptext7 0FDD  
                                      __ptext8 0113                                        __ptext9 037E  
                                      _myPANID 00ED                              __end_of_hexpowers 289C  
                                    _T1CONbits 0018                                        _dpowers 288A  
                Initialize_Demo@freezer_enable 016D                       ??_MiApp_MessageAvailable 00D8  
                                      _rec_ack 0158                                        _isdigit 0E6D  
                            ??_Initialize_Demo 005E                                  _myLongAddress 01E6  
                                    _MAC_PANID 015B                               ___awmod@dividend 002B  
                        __size_of_LCDInitPortA 001B                          __size_of_LCDInitPortB 001B  
                         ?_store_connection_tb 002D                         DemoOutput_Channel@Step 005C  
                                    _IOCBFbits 0396                          __size_of_LCDInitWrite 0019  
                                      _nvmRole 0169                                      _IOCBNbits 0395  
                          i1_PHYGetLongRAMAddr 22AF                           LCDWritePortA@preRFIE 002B  
                                    _P2PStatus 00EB                                      _LCD_Erase 0A11  
                        ?i1_PHYSetShortRAMAddr 0071                                    _MyindexinPC 014F  
                         LCDWritePortB@preRFIE 002B                           ??_PHYGetShortRAMAddr 002A  
                   __size_of_SYSTEM_Initialize 003E                                        _sprintf 0A8E  
                                      clrloop0 06F3                         ??_MiApp_DiscardMessage 0036  
                                   ??_high_isr 0020                           end_of_initialization 0860  
                 MiApp_RemoveConnection@j_1306 00B8                              __end_of_octpowers 288A  
                                    i1SPIPut@v 0070                                  ??_EEPROM_Read 002C  
                                      memset@c 0029                                        memset@n 002B  
                                      memset@p 002E                  MiMAC_SendPacket@MACPayloadLen 004E  
                              LCDDisplay@delay 005A                                     _nvmMyPANID 0165  
            __end_of_STAR_DEMO_OPTIONS_MESSAGE 0398                                InitMRF24J40@_ms 003B  
                              LCDDisplay@value 0059                                   _InitMRF24J40 241A  
                           __end_of_MiMAC_Init 1894                           ?i1_PHYGetLongRAMAddr 0071  
                 MiApp_UnicastConnection@SecEn 00B8               __size_of_MiApp_UnicastConnection 001D  
                      MiMAC_SetChannel@channel 0031                          __end_of_isSameAddress 17D2  
                                 __pstringtext 2800           DELAY_ms@cyclesRequiredForEntireDelay 0037  
                        i1___wmul@multiplicand 0072                 __size_of_MiApp_BroadcastPacket 0012  
                                 _LCDInitPortA 0FDF                                   _LCDInitPortB 20CD  
                                 ??_Find_Index 002E                     run_star_demo@PressedButton 024E  
                __end_of_MiApp_BroadcastPacket 0471                                   _LCDInitWrite 099A  
                 __size_of_DemoOutput_Greeting 0009                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                _InitSymbolTimer 087D  
                             NVMalloc@location 002B                   __end_of_UserInterruptHandler 07F7  
                        ??_store_connection_tb 002F                                     _nvmmyIndex 016B  
                      ?_Source_END_DEVICE_INFO 0057                               ___lbmod@dividend 002B  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                                      _TRISDbits 008F  
                                    _TRISFbits 030C                                     ?_LCD_Erase 0070  
                         MiWi_TickGet@IntFlag1 002E                           MiWi_TickGet@IntFlag2 002D  
                                  NVMRead@addr 002B                                    NVMRead@dest 0029  
                                    _BankIndex 0066                         ?_MiApp_StartConnection 0033  
                            __size_of_DELAY_ms 0043                                  ??_LCDTRXCount 0058  
                                  ___lbmod@rem 002D                     MiMAC_SendPacket@transParam 0046  
                   MiMAC_SetAltAddress@Address 002D                      MiApp_UnicastAddress@SecEn 00B7  
                           __end_of_Find_Index 21D8                              __size_of_P2PTasks 04B0  
                 i1PHYGetShortRAMAddr@toReturn 0072                                 __end_of_SPIGet 27DF  
                               __end_of_SPIPut 17FE                          ??i1_PHYGetLongRAMAddr 0073  
                          __end_of_EEPROM_Read 17ED                                 __end_of___bmul 170A  
                            __size_ofi1_SPIGet 0005                                 __end_of___lmul 09F5  
                            __size_ofi1_SPIPut 000F                                 __end_of___wmul 2000  
              __size_of_handle_lost_connection 003C                       PHYGetLongRAMAddr@address 002A  
                 __end_of_Find_InActiveDevices 07F6             __size_of_MiApp_EstablishConnection 00BC  
                               __end_of_memset 20CD                     __end_of_DemoOutput_Channel 08F7  
               __end_of_Source_END_DEVICE_INFO 0505                       PHYSetLongRAMAddr@address 002A  
                            __size_of_NVMWrite 003E                __size_of_MiApp_MessageAvailable 0009  
                     __end_of_MiMAC_SetChannel 2800                              __size_of_NVMalloc 0023  
                          start_initialization 0801                              __size_ofi1___wmul 0015  
                       ??i1_PHYSetShortRAMAddr 0072                       PHYGetLongRAMAddr@tmpRFIE 002F  
                     __end_of_MiMAC_SendPacket 275D                                   ??_SendPacket 0059  
                         _MiApp_ConnectionMode 0E9C                                  ??_LCD_d_write 003B  
                 MiMAC_SendPacket@headerLength 00AA                           _MiApp_UnicastAddress 1815  
                                ??_LCD_i_write 003B                       PHYSetLongRAMAddr@tmpRFIE 002F  
                         __size_of_SW_Ack_SrED 001D                                high_isr@results 0077  
                            ?_send_link_status 0070              Forward_Packet_PANCr_to_EDy@status 00BE  
                            __size_of_MacroNop 0002                                       ??_SPIGet 002A  
                                     ??_SPIPut 0029                             ??_send_link_status 005A  
                               _currentChannel 0063                     i1PHYGetLongRAMAddr@address 0071  
                          __end_of_LCDTRXCount 2109    MiApp_EstablishConnection@connectionInterval 00E4  
                              _freezer_feature 21D8                                       ??___bmul 002A  
                      __end_of_InitSymbolTimer 0888                                       ??___lmul 0031  
                                     ??___wmul 0032              MiApp_UnicastAddress@PermanentAddr 00B6  
                                  __pdataBANK0 0066                                    __pdataBANK1 00EF  
                                  __pdataBANK2 016F                                    __pdataBANK3 01E6  
                           __end_of_SendPacket 1A3E                            _MiMAC_SetAltAddress 2109  
                                     ??_memset 002D                              __size_of_Run_Demo 0002  
                   i1PHYGetLongRAMAddr@tmpRFIE 0076                 __size_of_DemoOutput_UpdateTxRx 0007  
                                  __pbssBIGRAM 2366                          __end_of_LCDWritePortA 09D0  
                      MiWi_TickGet@currentTime 002F                          __end_of_LCDWritePortB 0A11  
                __end_of_DemoOutput_UpdateTxRx 0404                                    __pbssCOMMON 007C  
                     ??_MiApp_RemoveConnection 005A                                      ___latbits 0003  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 016D                                  __pcstackBANK4 0248  
                        ?_MiApp_ConnectionMode 0070                            SendPacket@Broadcast 00AE  
                                  ??_LCD_Erase 003B         MiApp_UnicastAddress@DestinationAddress 005A  
                        ?_MiApp_UnicastAddress 00B6                                   _isdigit$2685 0029  
                                     ?_NVMInit 0070                     __end_of_MiApp_ProtocolInit 1161  
                                     ?_NVMRead 0029                                 NVMWrite@source 0034  
                           _PHYSetShortRAMAddr 2521                     MiApp_EstablishConnection@i 00E9  
                     __end_of_MiApp_SetChannel 0F97                         _handle_lost_connection 23DE  
                         ?_MiMAC_SetAltAddress 002D                         PHYSetLongRAMAddr@value 002C  
                                  MiMAC_Init@i 004A                        PHYSetShortRAMAddr@value 002A  
                            __size_of_high_isr 010D                                    sprintf@flag 0055  
                 MiMAC_ReceivedPacket@addrMode 003E                    ??_STAR_DEMO_OPTIONS_MESSAGE 0029  
                                  _EEPROM_Read 17D2                                    sprintf@prec 0050  
                __size_ofi1_PHYGetShortRAMAddr 0016                            __end_of_LCD_d_write 0A73  
                          ?_PHYSetShortRAMAddr 002A                            MiMAC_SendPacket@loc 00AC  
                       _MiApp_MessageAvailable 0456                           _UserInterruptHandler 07F6  
                          __end_of_LCD_i_write 0A8E                              MiMAC_SendPacket@i 00AB  
                             ___lwdiv@dividend 002B                        _MiApp_UnicastConnection 0439  
                     ?_DemoOutput_ChannelError 0070                                _Initialize_Demo 0888  
                        __end_of_ButtonPressed 03FD                                       ?___awdiv 0029  
                                     ?___awmod 0029                                       ?___lbmod 0029  
                    i1PHYSetShortRAMAddr@value 0071                                       ?___lwdiv 0029  
                                     ?___lwmod 0030                                      _end_nodes 0156  
                                    __pswtext1 0700                                      __pswtext2 0600  
                                    _conn_size 0062                          __end_of_run_star_demo 037E  
                 Forward_Packet_PANCr_to_EDy@i 00BF                           ??_PHYSetShortRAMAddr 002B  
                            _PHYSetLongRAMAddr 275D                                       ?_isdigit 0070  
                __size_of_MiMAC_ReceivedPacket 0534                             ?_PHYSetLongRAMAddr 002A  
                                     _DELAY_ms 0957                            AddConnection@status 0040  
                                    _hexpowers 2894                       ??_DemoOutput_UnicastFail 005C  
                             ___lwdiv@quotient 002E                                       ?_sprintf 0035  
                        ??_MiMAC_SetAltAddress 0031                                      _link_stat 0135  
                                  _LCDTRXCount 20E8                                       _P2PTasks 1236  
                          ??_PHYSetLongRAMAddr 002D                            _DemoOutput_Greeting 0874  
                         _Find_InActiveDevices 07C8                        __end_of_freezer_feature 222C  
                               ___wmul@product 0032                                       _LATAbits 010C  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                     _LATDbits 010F                                       _LATFbits 038C  
                        ?_UserInterruptHandler 0070                                      clear_ram0 06F2  
                                    _octpowers 287E                                       _PIE1bits 0091  
                    PHYGetLongRAMAddr@toReturn 002E                     DemoOutput_UpdateTxRx@RxNum 0059  
                   DemoOutput_UpdateTxRx@TxNum 005A                                       _PIR1bits 0011  
                                    _rxMessage 012B                             _nvmConnectionTable 0060  
                                     i1_SPIGet 22E9                   MiMAC_SendPacket@frameControl 00A9  
                                     i1_SPIPut 22DA                               ?_InitSymbolTimer 0070  
                                     _SSP1CON1 0215                         __size_of_AddConnection 00C5  
          MiApp_BroadcastConnectionTable@count 00BB                                       _SSP1STAT 0214  
                 __size_of_MiMAC_DiscardPacket 0019       MiApp_EstablishConnection@ActiveScanIndex 0070  
            MiApp_StartConnection@ScanDuration 0033            __end_of_Forward_Packet_PANCr_to_EDy 227A  
                  _Forward_Packet_PANCr_to_EDy 222C                                    _MACRxPacket 0120  
                         ?_DemoOutput_Greeting 0070                      _STAR_DEMO_OPTIONS_MESSAGE 0397  
                                     _NVMWrite 170A                      __end_of_PHYSetLongRAMAddr 278E  
                                     _NVMalloc 234C                              ___wmul@multiplier 002E  
                                     i1___wmul 1800                                      high_isr@i 007B  
              ?_MiApp_BroadcastConnectionTable 0070               ??_MiApp_BroadcastConnectionTable 00B6  
                       ??_MiApp_ConnectionMode 003B                             main@freezer_enable 00EA  
                       ??_MiApp_UnicastAddress 005A                        ??_MiApp_StartConnection 0038  
              __size_of_MiApp_RemoveConnection 00D5                            SendPacket@isCommand 0057  
                               _nextEEPosition 014A                                       _ConnMode 00EF  
                            ___lmul@multiplier 0029                 MiApp_EstablishConnection@retry 00DF  
                                  _LCD_d_write 0A58                    __size_of_PHYGetShortRAMAddr 001B  
        Forward_Packet_PANCr_to_EDy@EDxAddress 00BC                                       _MacroNop 17FE  
                             __size_of_NVMInit 005E                               __size_of_NVMRead 0028  
                                  _LCD_i_write 0A73                  __size_of_MiApp_DiscardMessage 0004  
                        ?_Find_InActiveDevices 0070          MiApp_RemoveConnection@ConnectionIndex 00BA  
              __end_of_DemoOutput_ChannelError 0E9C                      ??_MiApp_UnicastConnection 005B  
                      __end_of_Initialize_Demo 08E1                                     _EECON1bits 0195  
                          _display_connections 0155                                       _RxBuffer 2366  
                                     _TxBuffer 0220                                   _nvmDelayTick 013A  
                                     _Run_Demo 0FDD                             Total_Connections@i 002D  
                      __size_of_LCD_Initialize 003E                MiApp_BroadcastConnectionTable@i 00BE  
              MiApp_BroadcastConnectionTable@j 00BF                MiApp_BroadcastConnectionTable@k 00BD  
                        MiMAC_ReceivedPacket@i 003F                               __size_of___awdiv 0040  
                             __size_of___awmod 0039                               __size_of___lbmod 0019  
                  __end_of_store_connection_tb 23DE                          ??_DemoOutput_Greeting 005C  
                             __size_of___lwdiv 0025                               __size_of___lwmod 0020  
                        _MiApp_BroadcastPacket 045F                    i1PHYGetLongRAMAddr@toReturn 0075  
                                   sprintf@idx 004A                                     sprintf@len 004B  
                                   sprintf@val 004E                                _lost_connection 0157  
                            InitMRF24J40@_dcnt 0033                               __size_of_isdigit 000E  
                            ?_MiMAC_SetChannel 0030                                ___lwdiv@divisor 0029  
                                   _IEEESeqNum 014C                                ___lwdiv@counter 002D  
                                     __ptext10 0404                                       __ptext11 04D3  
                                     __ptext20 1001                                       __ptext12 03FD  
                                     __ptext21 1748                                       __ptext13 20E8  
                                     __ptext30 0456                                       __ptext22 17FE  
                                     __ptext14 0471                                       __ptext31 1236  
                                     __ptext23 22EE                                       __ptext15 045F  
                                     __ptext40 222C                                       __ptext32 236F  
                                     __ptext24 234C                                       __ptext16 0398  
                                     __ptext41 0439                                       __ptext33 23DE  
                                     __ptext25 1869                                       __ptext17 0888  
                                     __ptext50 2109                                       __ptext42 1815  
                                     __ptext34 1846                                       __ptext26 0F7A  
                                     __ptext18 0397                                       __ptext51 241A  
                                     __ptext43 227A                                       __ptext35 1829  
                                     __ptext27 087D                                       __ptext19 0F97  
                                     __ptext60 05CA                                       __ptext52 27BE  
                                     __ptext44 2185                                       __ptext36 1AB7  
                                     __ptext28 17D2                                       __ptext61 0435  
                                     __ptext53 278E                                       __ptext45 07C8  
                                     __ptext37 1894                                       __ptext29 0EBE  
                                     __ptext70 0E6D                                       __ptext62 1770  
                                     __ptext54 27D9                                       __ptext46 1161  
                                     __ptext38 1A7E                                       __ptext71 1FEB  
                                     __ptext63 0E9C                                       __ptext55 27DF  
                                     __ptext47 19DB                                       __ptext39 1A3E  
                                     __ptext80 099A                                       __ptext72 0E7B  
                                     __ptext64 170A                                       __ptext56 2521  
                                     __ptext48 253A                                       __ptext81 09F5  
                                     __ptext73 0E48                                       __ptext65 0E9B  
                                     __ptext57 275D                                       __ptext49 1789  
                                     __ptext90 22AF                                       __ptext82 09B3  
                                     __ptext74 16E6                                       __ptext66 08E1  
                                     __ptext58 0505                                       __ptext91 22E9  
                                     __ptext83 17ED                                       __ptext75 0A20  
                                     __ptext67 0874                                       __ptext59 17B9  
                                     __ptext92 22DA                                       __ptext84 0957  
                                     __ptext76 0A73                                       __ptext68 08F7  
                                     __ptext93 07F6                                       __ptext85 09D0  
                                     __ptext77 0A58                                       __ptext69 0A8E  
                                     __ptext78 0A11                                       __ptext87 1800  
                                     __ptext79 20BA                                       __ptext88 229A  
                                     __ptext89 2284                                   _SSP1CON1bits 0215  
                                _AddConnection 0505                             ??_MiMAC_SetChannel 0031  
                            ?_MiMAC_SendPacket 0046                __size_of_DemoOutput_UnicastFail 000A  
                                     _high_isr 0004                   Source_END_DEVICE_INFO@SrAddr 0057  
                             __size_of_sprintf 03BA                         __size_of_isSameAddress 0019  
                           ??_MiMAC_SendPacket 004F                               Initialize_Demo@i 016E  
                           _DemoOutput_Channel 08E1                    __end_ofi1_PHYGetLongRAMAddr 22DA  
                       ??_UserInterruptHandler 0070                                  __size_of_main 0011  
                             ?_freezer_feature 0070                         _MiApp_RemoveConnection 1161  
                          ?_DemoOutput_Channel 005C                                     _LCDDisplay 08F7  
                                     _temp_bit 0159                                     _LCDInitSPI 0FFA  
                                     int$flags 007E                             LCDTRXCount@rxCount 0057  
                  MiApp_EstablishConnection@t1 00E0                    MiApp_EstablishConnection@t2 00E5  
                           LCDTRXCount@txCount 0058                                     _LCD_Update 0A20  
                    __size_of_send_link_status 0023                            MiApp_UnicastStar@t1 00DD  
                          MiApp_UnicastStar@t2 00E1                     __size_of_PHYSetLongRAMAddr 0031  
                   MiMAC_SendPacket@MACPayload 004D                                    Find_Index@i 002E  
                        _permanent_connections 01B4                                     _INTCONbits 000B  
                               AddConnection@i 0042                           ??_DemoOutput_Channel 005D  
                   handle_lost_connection@stat 002B                        ?_handle_lost_connection 0070  
                            __CFG_BOREN$SBODEN 0000                                 ?_AddConnection 0070  
                  ButtonPressed@tickDifference 0037                                       isdigit@c 002A  
                             _myNetworkAddress 015D                                       memset@p1 002D  
                                ??_SW_Ack_SrED 005A                            LCDInitPortA@preRFIE 002A  
                __size_ofi1_PHYSetShortRAMAddr 0015                                    _nvmConnMode 015F  
                         SW_Ack_SrED@Dest_Addr 00B6                         Total_Connections@count 002C  
                  MiApp_ProtocolInit@initValue 004F                            LCDInitPortB@preRFIE 002A  
                       ??_Find_InActiveDevices 005A                                       intlevel1 0000  
                            ?_MiApp_SetChannel 0070                                      sprintf@ap 004D  
                                    sprintf@cp 0049                                      sprintf@sp 0054  
                      ?_MiApp_MessageAvailable 0070                               ___lwmod@dividend 0032  
                                 ?_EEPROM_Read 002A                             ??_MiApp_SetChannel 003B  
                            __CFG_CLKOUTEN$OFF 0000                               ?_Initialize_Demo 0070  
                                ?_MiWi_TickGet 0029                                 LCDWritePortA@v 002A  
                               LCDWritePortB@v 002A                             _MiApp_ProtocolInit 1001  
                 SendPacket@DestinationAddress 0055                         _DemoOutput_UnicastFail 227A  
                                _MACInitParams 0146                            MiMAC_Init@initValue 0046  
                               _MRF24J40Status 005E                                  _isSameAddress 17B9  
                          ?_MiApp_ProtocolInit 0070                              _MiApp_UnicastStar 0471  
                       ?_MiApp_BroadcastPacket 0070                   __end_ofi1_PHYGetShortRAMAddr 229A  
                                     sprintf@c 0053                                       sprintf@f 0035  
                           ?_MiApp_UnicastStar 0070               __size_of_DemoOutput_ChannelError 0001  
               __end_of_handle_lost_connection 241A                                ___lwmod@divisor 0030  
   MiApp_EstablishConnection@tmpConnectionMode 00DE                                ___lwmod@counter 0034  
                   ?_MiApp_EstablishConnection 00D9                          _DemoOutput_UpdateTxRx 03FD  
                          ??_MiApp_UnicastStar 00D9                 __end_of_MiApp_MessageAvailable 045F  
                          _MiMAC_DiscardPacket 1770                             _nvmOutFrameCounter 0167  
                            _nvmCurrentChannel 0161                           ??_MiApp_ProtocolInit 004B  
                                 ?_LCDTRXCount 0057                    send_link_status@send_status 005A  
                             EEPROM_Read@count 002B                                 ??_MiWi_TickGet 002D  
            Process_RxMessage@User_data_status 00D9                            __end_of_SW_Ack_SrED 1846  
                              EEPROM_Read@addr 002A                                EEPROM_Read@dest 002C  
                                ?_InitMRF24J40 0070               Forward_Packet_PANCr_to_EDy@index 00BB  
                     MiMAC_SendPacket@IntraPAN 00A8                   __end_of_MiMAC_ReceivedPacket 1FEB  
                           Find_Index@DestAddr 002C                                    ?_LCDDisplay 0057  
                       __size_of_LCDWritePortA 001D                         __size_of_LCDWritePortB 001C  
                                  ?_LCDInitSPI 0070  
