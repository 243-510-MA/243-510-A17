

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Feb 15 11:39:23 2017

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118  0000                     
   119                           	psect	idataCOMRAM
   120  0136AA                     __pidataCOMRAM:
   121                           	opt stack 0
   122                           
   123                           ;initializer for _AdditionalNodeID
   124  0136AA  01                 	db	1
   125                           
   126                           	psect	idataBANK0
   127  0136AB                     __pidataBANK0:
   128                           	opt stack 0
   129                           
   130                           ;initializer for _ConnMode
   131  0136AB  03                 	db	3
   132                           
   133                           	psect	idataBANK1
   134  013682                     __pidataBANK1:
   135                           	opt stack 0
   136                           
   137                           ;initializer for _myLongAddress
   138  013682  FF                 	db	255
   139  013683  11                 	db	17
   140  013684  22                 	db	34
   141  013685  33                 	db	51
   142  013686  44                 	db	68
   143  013687  55                 	db	85
   144  013688  66                 	db	102
   145  013689  11                 	db	17
   146                           
   147                           	psect	mediumconst
   148  00FD90                     __pmediumconst:
   149                           	opt stack 0
   150  00FD90  00                 	db	0
   151  00FD91                     _MiWi:
   152                           	opt stack 0
   153  00FD91  20                 	db	32
   154  00FD92  B2                 	db	178
   155  00FD93  20                 	db	32
   156  00FD94  20                 	db	32
   157  00FD95  20                 	db	32
   158  00FD96  B2                 	db	178
   159  00FD97  20                 	db	32
   160  00FD98  20                 	db	32
   161  00FD99  B2                 	db	178
   162  00FD9A  20                 	db	32
   163  00FD9B  B2                 	db	178
   164  00FD9C  20                 	db	32
   165  00FD9D  20                 	db	32
   166  00FD9E  20                 	db	32
   167  00FD9F  20                 	db	32
   168  00FDA0  20                 	db	32
   169  00FDA1  B2                 	db	178
   170  00FDA2  20                 	db	32
   171  00FDA3  B2                 	db	178
   172  00FDA4  0D                 	db	13
   173  00FDA5  0A                 	db	10
   174  00FDA6  B2                 	db	178
   175  00FDA7  20                 	db	32
   176  00FDA8  B2                 	db	178
   177  00FDA9  20                 	db	32
   178  00FDAA  B2                 	db	178
   179  00FDAB  20                 	db	32
   180  00FDAC  B2                 	db	178
   181  00FDAD  20                 	db	32
   182  00FDAE  20                 	db	32
   183  00FDAF  20                 	db	32
   184  00FDB0  B2                 	db	178
   185  00FDB1  20                 	db	32
   186  00FDB2  20                 	db	32
   187  00FDB3  B2                 	db	178
   188  00FDB4  20                 	db	32
   189  00FDB5  20                 	db	32
   190  00FDB6  B2                 	db	178
   191  00FDB7  20                 	db	32
   192  00FDB8  20                 	db	32
   193  00FDB9  0D                 	db	13
   194  00FDBA  0A                 	db	10
   195  00FDBB  B2                 	db	178
   196  00FDBC  20                 	db	32
   197  00FDBD  20                 	db	32
   198  00FDBE  B2                 	db	178
   199  00FDBF  20                 	db	32
   200  00FDC0  20                 	db	32
   201  00FDC1  B2                 	db	178
   202  00FDC2  20                 	db	32
   203  00FDC3  B2                 	db	178
   204  00FDC4  20                 	db	32
   205  00FDC5  B2                 	db	178
   206  00FDC6  20                 	db	32
   207  00FDC7  20                 	db	32
   208  00FDC8  B2                 	db	178
   209  00FDC9  20                 	db	32
   210  00FDCA  20                 	db	32
   211  00FDCB  B2                 	db	178
   212  00FDCC  20                 	db	32
   213  00FDCD  B2                 	db	178
   214  00FDCE  0D                 	db	13
   215  00FDCF  0A                 	db	10
   216  00FDD0  B2                 	db	178
   217  00FDD1  20                 	db	32
   218  00FDD2  20                 	db	32
   219  00FDD3  B2                 	db	178
   220  00FDD4  20                 	db	32
   221  00FDD5  20                 	db	32
   222  00FDD6  B2                 	db	178
   223  00FDD7  20                 	db	32
   224  00FDD8  B2                 	db	178
   225  00FDD9  20                 	db	32
   226  00FDDA  20                 	db	32
   227  00FDDB  B2                 	db	178
   228  00FDDC  20                 	db	32
   229  00FDDD  B2                 	db	178
   230  00FDDE  20                 	db	32
   231  00FDDF  B2                 	db	178
   232  00FDE0  20                 	db	32
   233  00FDE1  20                 	db	32
   234  00FDE2  B2                 	db	178
   235  00FDE3  0D                 	db	13
   236  00FDE4  0A                 	db	10
   237  00FDE5  B2                 	db	178
   238  00FDE6  20                 	db	32
   239  00FDE7  20                 	db	32
   240  00FDE8  B2                 	db	178
   241  00FDE9  20                 	db	32
   242  00FDEA  20                 	db	32
   243  00FDEB  B2                 	db	178
   244  00FDEC  20                 	db	32
   245  00FDED  B2                 	db	178
   246  00FDEE  20                 	db	32
   247  00FDEF  20                 	db	32
   248  00FDF0  20                 	db	32
   249  00FDF1  B2                 	db	178
   250  00FDF2  20                 	db	32
   251  00FDF3  B2                 	db	178
   252  00FDF4  20                 	db	32
   253  00FDF5  20                 	db	32
   254  00FDF6  20                 	db	32
   255  00FDF7  B2                 	db	178
   256  00FDF8  0D                 	db	13
   257  00FDF9  0A                 	db	10
   258  00FDFA  20                 	db	32
   259  00FDFB  20                 	db	32
   260  00FDFC  20                 	db	32
   261  00FDFD  20                 	db	32
   262  00FDFE  20                 	db	32
   263  00FDFF  20                 	db	32
   264  00FE00  20                 	db	32
   265  00FE01  20                 	db	32
   266  00FE02  20                 	db	32
   267  00FE03  20                 	db	32
   268  00FE04  20                 	db	32
   269  00FE05  20                 	db	32
   270  00FE06  20                 	db	32
   271  00FE07  20                 	db	32
   272  00FE08  20                 	db	32
   273  00FE09  20                 	db	32
   274  00FE0A  20                 	db	32
   275  00FE0B  20                 	db	32
   276  00FE0C  20                 	db	32
   277  00FE0D  0D                 	db	13
   278  00FE0E  0A                 	db	10
   279  00FE0F                     __end_of_MiWi:
   280                           	opt stack 0
   281  00FE0F                     _InitConfigRegs:
   282                           	opt stack 0
   283  00FE0F  002E               	dw	46
   284  00FE11  0284               	dw	644
   285  00FE13  0409               	dw	1033
   286  00FE15  0609               	dw	1545
   287  00FE17  080C               	dw	2060
   288  00FE19  0AC1               	dw	2753
   289  00FE1B  0C77               	dw	3191
   290  00FE1D  0E64               	dw	3684
   291  00FE1F  1032               	dw	4146
   292  00FE21  1200               	dw	4608
   293  00FE23  1400               	dw	5120
   294  00FE25  1600               	dw	5632
   295  00FE27  1838               	dw	6200
   296  00FE29  1AC8               	dw	6856
   297  00FE2B  1C0D               	dw	7181
   298  00FE2D  1E00               	dw	7680
   299  00FE2F  2072               	dw	8306
   300  00FE31  2238               	dw	8760
   301  00FE33  2438               	dw	9272
   302  00FE35  2607               	dw	9735
   303  00FE37  2800               	dw	10240
   304  00FE39  2A00               	dw	10752
   305  00FE3B  2C69               	dw	11369
   306  00FE3D  2E81               	dw	11905
   307  00FE3F  307E               	dw	12414
   308  00FE41  3296               	dw	12950
   309  00FE43  34F8               	dw	13560
   310  00FE45  3688               	dw	13960
   311  00FE47  3840               	dw	14400
   312  00FE49  3A00               	dw	14848
   313  00FE4B  3CE8               	dw	15592
   314  00FE4D  3E00               	dw	15872
   315  00FE4F                     __end_of_InitConfigRegs:
   316                           	opt stack 0
   317  00FE4F                     _PVALUE:
   318                           	opt stack 0
   319  00FE4F  54                 	db	84
   320  00FE50  54                 	db	84
   321  00FE51  54                 	db	84
   322  00FE52  54                 	db	84
   323  00FE53  54                 	db	84
   324  00FE54  54                 	db	84
   325  00FE55  54                 	db	84
   326  00FE56  54                 	db	84
   327  00FE57  54                 	db	84
   328  00FE58  54                 	db	84
   329  00FE59  54                 	db	84
   330  00FE5A  54                 	db	84
   331  00FE5B  54                 	db	84
   332  00FE5C  54                 	db	84
   333  00FE5D  55                 	db	85
   334  00FE5E  55                 	db	85
   335  00FE5F  55                 	db	85
   336  00FE60  55                 	db	85
   337  00FE61  55                 	db	85
   338  00FE62  55                 	db	85
   339  00FE63  55                 	db	85
   340  00FE64  55                 	db	85
   341  00FE65  55                 	db	85
   342  00FE66  55                 	db	85
   343  00FE67  55                 	db	85
   344  00FE68  55                 	db	85
   345  00FE69  55                 	db	85
   346  00FE6A  55                 	db	85
   347  00FE6B  55                 	db	85
   348  00FE6C  55                 	db	85
   349  00FE6D  55                 	db	85
   350  00FE6E  55                 	db	85
   351  00FE6F                     __end_of_PVALUE:
   352                           	opt stack 0
   353  00FE6F                     _SVALUE:
   354                           	opt stack 0
   355  00FE6F  2D                 	db	45
   356  00FE70  30                 	db	48
   357  00FE71  33                 	db	51
   358  00FE72  35                 	db	53
   359  00FE73  38                 	db	56
   360  00FE74  3B                 	db	59
   361  00FE75  3E                 	db	62
   362  00FE76  41                 	db	65
   363  00FE77  43                 	db	67
   364  00FE78  46                 	db	70
   365  00FE79  49                 	db	73
   366  00FE7A  4C                 	db	76
   367  00FE7B  4F                 	db	79
   368  00FE7C  51                 	db	81
   369  00FE7D  09                 	db	9
   370  00FE7E  0C                 	db	12
   371  00FE7F  0F                 	db	15
   372  00FE80  12                 	db	18
   373  00FE81  15                 	db	21
   374  00FE82  17                 	db	23
   375  00FE83  1A                 	db	26
   376  00FE84  1D                 	db	29
   377  00FE85  20                 	db	32
   378  00FE86  23                 	db	35
   379  00FE87  25                 	db	37
   380  00FE88  28                 	db	40
   381  00FE89  2B                 	db	43
   382  00FE8A  2E                 	db	46
   383  00FE8B  31                 	db	49
   384  00FE8C  33                 	db	51
   385  00FE8D  36                 	db	54
   386  00FE8E  39                 	db	57
   387  00FE8F                     __end_of_SVALUE:
   388                           	opt stack 0
   389  00FE8F                     _octpowers:
   390                           	opt stack 0
   391  00FE8F  0001               	dw	1
   392  00FE91  0008               	dw	8
   393  00FE93  0040               	dw	64
   394  00FE95  0200               	dw	512
   395  00FE97  1000               	dw	4096
   396  00FE99  8000               	dw	32768
   397  00FE9B                     __end_of_octpowers:
   398                           	opt stack 0
   399  00FE9B                     _dpowers:
   400                           	opt stack 0
   401  00FE9B  0001               	dw	1
   402  00FE9D  000A               	dw	10
   403  00FE9F  0064               	dw	100
   404  00FEA1  03E8               	dw	1000
   405  00FEA3  2710               	dw	10000
   406  00FEA5                     __end_of_dpowers:
   407                           	opt stack 0
   408  00FEA5                     _hexpowers:
   409                           	opt stack 0
   410  00FEA5  0001               	dw	1
   411  00FEA7  0010               	dw	16
   412  00FEA9  0100               	dw	256
   413  00FEAB  1000               	dw	4096
   414  00FEAD                     __end_of_hexpowers:
   415                           	opt stack 0
   416  0000                     _ANCON0	set	4033
   417  0000                     _ANCON1	set	4034
   418  0000                     _INTCON2bits	set	4081
   419  0000                     _INTCON3bits	set	4080
   420  0000                     _INTCONbits	set	4082
   421  0000                     _LATA	set	3977
   422  0000                     _LATAbits	set	3977
   423  0000                     _LATB	set	3978
   424  0000                     _LATC	set	3979
   425  0000                     _LATCbits	set	3979
   426  0000                     _LATD	set	3980
   427  0000                     _LATDbits	set	3980
   428  0000                     _LATEbits	set	3981
   429  0000                     _LATFbits	set	3982
   430  0000                     _OSCCON	set	4051
   431  0000                     _PIE1bits	set	3997
   432  0000                     _PIR1bits	set	3998
   433  0000                     _PORTAbits	set	3968
   434  0000                     _PORTBbits	set	3969
   435  0000                     _SSP1BUF	set	4041
   436  0000                     _SSP1CON1	set	4038
   437  0000                     _SSP1CON1bits	set	4038
   438  0000                     _SSP1STAT	set	4039
   439  0000                     _T1CON	set	4045
   440  0000                     _T1CONbits	set	4045
   441  0000                     _TMR0L	set	4054
   442  0000                     _TMR1H	set	4047
   443  0000                     _TMR1L	set	4046
   444  0000                     _TRISA	set	3986
   445  0000                     _TRISAbits	set	3986
   446  0000                     _TRISB	set	3987
   447  0000                     _TRISBbits	set	3987
   448  0000                     _TRISC	set	3988
   449  0000                     _TRISCbits	set	3988
   450  0000                     _TRISD	set	3989
   451  0000                     _TRISDbits	set	3989
   452  0000                     _TRISEbits	set	3990
   453  0000                     _TRISFbits	set	3991
   454  0000                     _WDTCONbits	set	4032
   455  00FEAD                     STR_4:
   456  00FEAD  43                 	db	67	;'C'
   457  00FEAE  6F                 	db	111	;'o'
   458  00FEAF  6E                 	db	110	;'n'
   459  00FEB0  6E                 	db	110	;'n'
   460  00FEB1  65                 	db	101	;'e'
   461  00FEB2  63                 	db	99	;'c'
   462  00FEB3  74                 	db	116	;'t'
   463  00FEB4  69                 	db	105	;'i'
   464  00FEB5  6E                 	db	110	;'n'
   465  00FEB6  67                 	db	103	;'g'
   466  00FEB7  20                 	db	32
   467  00FEB8  50                 	db	80	;'P'
   468  00FEB9  65                 	db	101	;'e'
   469  00FEBA  65                 	db	101	;'e'
   470  00FEBB  72                 	db	114	;'r'
   471  00FEBC  20                 	db	32
   472  00FEBD  20                 	db	32
   473  00FEBE  6F                 	db	111	;'o'
   474  00FEBF  6E                 	db	110	;'n'
   475  00FEC0  20                 	db	32
   476  00FEC1  43                 	db	67	;'C'
   477  00FEC2  68                 	db	104	;'h'
   478  00FEC3  61                 	db	97	;'a'
   479  00FEC4  6E                 	db	110	;'n'
   480  00FEC5  6E                 	db	110	;'n'
   481  00FEC6  65                 	db	101	;'e'
   482  00FEC7  6C                 	db	108	;'l'
   483  00FEC8  20                 	db	32
   484  00FEC9  25                 	db	37
   485  00FECA  64                 	db	100	;'d'
   486  00FECB  20                 	db	32
   487  00FECC  00                 	db	0
   488  00FECD                     STR_5:
   489  00FECD  20                 	db	32
   490  00FECE  43                 	db	67	;'C'
   491  00FECF  6F                 	db	111	;'o'
   492  00FED0  6E                 	db	110	;'n'
   493  00FED1  6E                 	db	110	;'n'
   494  00FED2  65                 	db	101	;'e'
   495  00FED3  63                 	db	99	;'c'
   496  00FED4  74                 	db	116	;'t'
   497  00FED5  65                 	db	101	;'e'
   498  00FED6  64                 	db	100	;'d'
   499  00FED7  20                 	db	32
   500  00FED8  50                 	db	80	;'P'
   501  00FED9  65                 	db	101	;'e'
   502  00FEDA  65                 	db	101	;'e'
   503  00FEDB  72                 	db	114	;'r'
   504  00FEDC  20                 	db	32
   505  00FEDD  20                 	db	32
   506  00FEDE  6F                 	db	111	;'o'
   507  00FEDF  6E                 	db	110	;'n'
   508  00FEE0  20                 	db	32
   509  00FEE1  43                 	db	67	;'C'
   510  00FEE2  68                 	db	104	;'h'
   511  00FEE3  61                 	db	97	;'a'
   512  00FEE4  6E                 	db	110	;'n'
   513  00FEE5  6E                 	db	110	;'n'
   514  00FEE6  65                 	db	101	;'e'
   515  00FEE7  6C                 	db	108	;'l'
   516  00FEE8  20                 	db	32
   517  00FEE9  25                 	db	37
   518  00FEEA  64                 	db	100	;'d'
   519  00FEEB  00                 	db	0
   520  00FEEC                     STR_3:
   521  00FEEC  53                 	db	83	;'S'
   522  00FEED  69                 	db	105	;'i'
   523  00FEEE  6D                 	db	109	;'m'
   524  00FEEF  70                 	db	112	;'p'
   525  00FEF0  6C                 	db	108	;'l'
   526  00FEF1  65                 	db	101	;'e'
   527  00FEF2  20                 	db	32
   528  00FEF3  53                 	db	83	;'S'
   529  00FEF4  54                 	db	84	;'T'
   530  00FEF5  41                 	db	65	;'A'
   531  00FEF6  52                 	db	82	;'R'
   532  00FEF7  20                 	db	32
   533  00FEF8  20                 	db	32
   534  00FEF9  20                 	db	32
   535  00FEFA  20                 	db	32
   536  00FEFB  20                 	db	32
   537  00FEFC  4D                 	db	77	;'M'
   538  00FEFD  52                 	db	82	;'R'
   539  00FEFE  46                 	db	70	;'F'
   540  00FEFF  38                 	db	56	;'8'
   541  00FF00  39                 	db	57	;'9'
   542  00FF01  58                 	db	88	;'X'
   543  00FF02  41                 	db	65	;'A'
   544  00FF03  20                 	db	32
   545  00FF04  4E                 	db	78	;'N'
   546  00FF05  6F                 	db	111	;'o'
   547  00FF06  64                 	db	100	;'d'
   548  00FF07  65                 	db	101	;'e'
   549  00FF08  00                 	db	0
   550  00FF09                     STR_9:
   551  00FF09  52                 	db	82	;'R'
   552  00FF0A  42                 	db	66	;'B'
   553  00FF0B  30                 	db	48	;'0'
   554  00FF0C  3A                 	db	58	;':'
   555  00FF0D  25                 	db	37
   556  00FF0E  30                 	db	48	;'0'
   557  00FF0F  32                 	db	50	;'2'
   558  00FF10  64                 	db	100	;'d'
   559  00FF11  2D                 	db	45
   560  00FF12  25                 	db	37
   561  00FF13  30                 	db	48	;'0'
   562  00FF14  32                 	db	50	;'2'
   563  00FF15  78                 	db	120	;'x'
   564  00FF16  25                 	db	37
   565  00FF17  30                 	db	48	;'0'
   566  00FF18  32                 	db	50	;'2'
   567  00FF19  78                 	db	120	;'x'
   568  00FF1A  25                 	db	37
   569  00FF1B  30                 	db	48	;'0'
   570  00FF1C  32                 	db	50	;'2'
   571  00FF1D  78                 	db	120	;'x'
   572  00FF1E  2D                 	db	45
   573  00FF1F  6D                 	db	109	;'m'
   574  00FF20  65                 	db	101	;'e'
   575  00FF21  00                 	db	0
   576  00FF22                     STR_10:
   577  00FF22  52                 	db	82	;'R'
   578  00FF23  42                 	db	66	;'B'
   579  00FF24  30                 	db	48	;'0'
   580  00FF25  3A                 	db	58	;':'
   581  00FF26  25                 	db	37
   582  00FF27  30                 	db	48	;'0'
   583  00FF28  32                 	db	50	;'2'
   584  00FF29  64                 	db	100	;'d'
   585  00FF2A  2D                 	db	45
   586  00FF2B  25                 	db	37
   587  00FF2C  30                 	db	48	;'0'
   588  00FF2D  32                 	db	50	;'2'
   589  00FF2E  78                 	db	120	;'x'
   590  00FF2F  25                 	db	37
   591  00FF30  30                 	db	48	;'0'
   592  00FF31  32                 	db	50	;'2'
   593  00FF32  78                 	db	120	;'x'
   594  00FF33  25                 	db	37
   595  00FF34  30                 	db	48	;'0'
   596  00FF35  32                 	db	50	;'2'
   597  00FF36  78                 	db	120	;'x'
   598  00FF37  00                 	db	0
   599  00FF38                     STR_8:
   600  00FF38  20                 	db	32
   601  00FF39  41                 	db	65	;'A'
   602  00FF3A  64                 	db	100	;'d'
   603  00FF3B  64                 	db	100	;'d'
   604  00FF3C  72                 	db	114	;'r'
   605  00FF3D  65                 	db	101	;'e'
   606  00FF3E  73                 	db	115	;'s'
   607  00FF3F  73                 	db	115	;'s'
   608  00FF40  3A                 	db	58	;':'
   609  00FF41  25                 	db	37
   610  00FF42  30                 	db	48	;'0'
   611  00FF43  32                 	db	50	;'2'
   612  00FF44  78                 	db	120	;'x'
   613  00FF45  25                 	db	37
   614  00FF46  30                 	db	48	;'0'
   615  00FF47  32                 	db	50	;'2'
   616  00FF48  78                 	db	120	;'x'
   617  00FF49  25                 	db	37
   618  00FF4A  30                 	db	48	;'0'
   619  00FF4B  32                 	db	50	;'2'
   620  00FF4C  78                 	db	120	;'x'
   621  00FF4D  00                 	db	0
   622  00FF4E                     STR_15:
   623  00FF4E  52                 	db	82	;'R'
   624  00FF4F  65                 	db	101	;'e'
   625  00FF50  73                 	db	115	;'s'
   626  00FF51  74                 	db	116	;'t'
   627  00FF52  6F                 	db	111	;'o'
   628  00FF53  72                 	db	114	;'r'
   629  00FF54  69                 	db	105	;'i'
   630  00FF55  6E                 	db	110	;'n'
   631  00FF56  67                 	db	103	;'g'
   632  00FF57  20                 	db	32
   633  00FF58  4E                 	db	78	;'N'
   634  00FF59  65                 	db	101	;'e'
   635  00FF5A  74                 	db	116	;'t'
   636  00FF5B  77                 	db	119	;'w'
   637  00FF5C  6F                 	db	111	;'o'
   638  00FF5D  72                 	db	114	;'r'
   639  00FF5E  6B                 	db	107	;'k'
   640  00FF5F  20                 	db	32
   641  00FF60  21                 	db	33
   642  00FF61  21                 	db	33
   643  00FF62  00                 	db	0
   644  00FF63                     STR_13:
   645  00FF63  44                 	db	68	;'D'
   646  00FF64  61                 	db	97	;'a'
   647  00FF65  74                 	db	116	;'t'
   648  00FF66  61                 	db	97	;'a'
   649  00FF67  5F                 	db	95	;'_'
   650  00FF68  53                 	db	83	;'S'
   651  00FF69  65                 	db	101	;'e'
   652  00FF6A  6E                 	db	110	;'n'
   653  00FF6B  64                 	db	100	;'d'
   654  00FF6C  69                 	db	105	;'i'
   655  00FF6D  6E                 	db	110	;'n'
   656  00FF6E  67                 	db	103	;'g'
   657  00FF6F  5F                 	db	95	;'_'
   658  00FF70  46                 	db	70	;'F'
   659  00FF71  61                 	db	97	;'a'
   660  00FF72  69                 	db	105	;'i'
   661  00FF73  6C                 	db	108	;'l'
   662  00FF74  21                 	db	33
   663  00FF75  21                 	db	33
   664  00FF76  00                 	db	0
   665  00FF77                     STR_14:
   666  00FF77  45                 	db	69	;'E'
   667  00FF78  4E                 	db	78	;'N'
   668  00FF79  44                 	db	68	;'D'
   669  00FF7A  5F                 	db	95	;'_'
   670  00FF7B  44                 	db	68	;'D'
   671  00FF7C  45                 	db	69	;'E'
   672  00FF7D  56                 	db	86	;'V'
   673  00FF7E  49                 	db	73	;'I'
   674  00FF7F  43                 	db	67	;'C'
   675  00FF80  45                 	db	69	;'E'
   676  00FF81  53                 	db	83	;'S'
   677  00FF82  20                 	db	32
   678  00FF83  3A                 	db	58	;':'
   679  00FF84  25                 	db	37
   680  00FF85  30                 	db	48	;'0'
   681  00FF86  32                 	db	50	;'2'
   682  00FF87  64                 	db	100	;'d'
   683  00FF88  00                 	db	0
   684  00FF89                     STR_16:
   685  00FF89  30                 	db	48	;'0'
   686  00FF8A  31                 	db	49	;'1'
   687  00FF8B  32                 	db	50	;'2'
   688  00FF8C  33                 	db	51	;'3'
   689  00FF8D  34                 	db	52	;'4'
   690  00FF8E  35                 	db	53	;'5'
   691  00FF8F  36                 	db	54	;'6'
   692  00FF90  37                 	db	55	;'7'
   693  00FF91  38                 	db	56	;'8'
   694  00FF92  39                 	db	57	;'9'
   695  00FF93  41                 	db	65	;'A'
   696  00FF94  42                 	db	66	;'B'
   697  00FF95  43                 	db	67	;'C'
   698  00FF96  44                 	db	68	;'D'
   699  00FF97  45                 	db	69	;'E'
   700  00FF98  46                 	db	70	;'F'
   701  00FF99  00                 	db	0
   702  00FF9A                     STR_17:
   703  00FF9A  30                 	db	48	;'0'
   704  00FF9B  31                 	db	49	;'1'
   705  00FF9C  32                 	db	50	;'2'
   706  00FF9D  33                 	db	51	;'3'
   707  00FF9E  34                 	db	52	;'4'
   708  00FF9F  35                 	db	53	;'5'
   709  00FFA0  36                 	db	54	;'6'
   710  00FFA1  37                 	db	55	;'7'
   711  00FFA2  38                 	db	56	;'8'
   712  00FFA3  39                 	db	57	;'9'
   713  00FFA4  61                 	db	97	;'a'
   714  00FFA5  62                 	db	98	;'b'
   715  00FFA6  63                 	db	99	;'c'
   716  00FFA7  64                 	db	100	;'d'
   717  00FFA8  65                 	db	101	;'e'
   718  00FFA9  66                 	db	102	;'f'
   719  00FFAA  00                 	db	0
   720  00FFAB                     STR_12:
   721  00FFAB  52                 	db	82	;'R'
   722  00FFAC  42                 	db	66	;'B'
   723  00FFAD  32                 	db	50	;'2'
   724  00FFAE  3A                 	db	58	;':'
   725  00FFAF  20                 	db	32
   726  00FFB0  43                 	db	67	;'C'
   727  00FFB1  68                 	db	104	;'h'
   728  00FFB2  61                 	db	97	;'a'
   729  00FFB3  6E                 	db	110	;'n'
   730  00FFB4  67                 	db	103	;'g'
   731  00FFB5  65                 	db	101	;'e'
   732  00FFB6  20                 	db	32
   733  00FFB7  6E                 	db	110	;'n'
   734  00FFB8  6F                 	db	111	;'o'
   735  00FFB9  64                 	db	100	;'d'
   736  00FFBA  65                 	db	101	;'e'
   737  00FFBB  00                 	db	0
   738  00FFBC                     STR_7:
   739  00FFBC  44                 	db	68	;'D'
   740  00FFBD  61                 	db	97	;'a'
   741  00FFBE  74                 	db	116	;'t'
   742  00FFBF  61                 	db	97	;'a'
   743  00FFC0  20                 	db	32
   744  00FFC1  50                 	db	80	;'P'
   745  00FFC2  61                 	db	97	;'a'
   746  00FFC3  63                 	db	99	;'c'
   747  00FFC4  6B                 	db	107	;'k'
   748  00FFC5  65                 	db	101	;'e'
   749  00FFC6  74                 	db	116	;'t'
   750  00FFC7  20                 	db	32
   751  00FFC8  66                 	db	102	;'f'
   752  00FFC9  72                 	db	114	;'r'
   753  00FFCA  6F                 	db	111	;'o'
   754  00FFCB  6D                 	db	109	;'m'
   755  00FFCC  00                 	db	0
   756  00FFCD                     STR_2:
   757  00FFCD  52                 	db	82	;'R'
   758  00FFCE  58                 	db	88	;'X'
   759  00FFCF  20                 	db	32
   760  00FFD0  4D                 	db	77	;'M'
   761  00FFD1  65                 	db	101	;'e'
   762  00FFD2  73                 	db	115	;'s'
   763  00FFD3  73                 	db	115	;'s'
   764  00FFD4  61                 	db	97	;'a'
   765  00FFD5  67                 	db	103	;'g'
   766  00FFD6  65                 	db	101	;'e'
   767  00FFD7  73                 	db	115	;'s'
   768  00FFD8  3A                 	db	58	;':'
   769  00FFD9  20                 	db	32
   770  00FFDA  25                 	db	37
   771  00FFDB  33                 	db	51	;'3'
   772  00FFDC  64                 	db	100	;'d'
   773  00FFDD  00                 	db	0
   774  00FFDE                     STR_1:
   775  00FFDE  54                 	db	84	;'T'
   776  00FFDF  58                 	db	88	;'X'
   777  00FFE0  20                 	db	32
   778  00FFE1  4D                 	db	77	;'M'
   779  00FFE2  65                 	db	101	;'e'
   780  00FFE3  73                 	db	115	;'s'
   781  00FFE4  73                 	db	115	;'s'
   782  00FFE5  61                 	db	97	;'a'
   783  00FFE6  67                 	db	103	;'g'
   784  00FFE7  65                 	db	101	;'e'
   785  00FFE8  73                 	db	115	;'s'
   786  00FFE9  3A                 	db	58	;':'
   787  00FFEA  20                 	db	32
   788  00FFEB  25                 	db	37
   789  00FFEC  33                 	db	51	;'3'
   790  00FFED  64                 	db	100	;'d'
   791  00FFEE  00                 	db	0
   792  00FFEF  20                 	db	32
   793  00FFF0  55                 	db	85	;'U'
   794  00FFF1  6E                 	db	110	;'n'
   795  00FFF2  69                 	db	105	;'i'
   796  00FFF3  63                 	db	99	;'c'
   797  00FFF4  61                 	db	97	;'a'
   798  00FFF5  73                 	db	115	;'s'
   799  00FFF6  74                 	db	116	;'t'
   800  00FFF7  20                 	db	32
   801  00FFF8  46                 	db	70	;'F'
   802  00FFF9  61                 	db	97	;'a'
   803  00FFFA  69                 	db	105	;'i'
   804  00FFFB  6C                 	db	108	;'l'
   805  00FFFC  65                 	db	101	;'e'
   806  00FFFD  64                 	db	100	;'d'
   807  00FFFE  00                 	db	0
   808  0000                     
   809                           ; #config settings
   810  00FFFF  00                 	db	0	; dummy byte at the end
   811  0000                     
   812                           	psect	cinit
   813  012820                     __pcinit:
   814                           	opt stack 0
   815  012820                     start_initialization:
   816                           	opt stack 0
   817  012820                     __initialization:
   818                           	opt stack 0
   819                           
   820                           ; Initialize objects allocated to BANK1 (8 bytes)
   821                           ; load TBLPTR registers with __pidataBANK1
   822  012820  0E82               	movlw	low __pidataBANK1
   823  012822  6EF6               	movwf	tblptrl,c
   824  012824  0E36               	movlw	high __pidataBANK1
   825  012826  6EF7               	movwf	tblptrh,c
   826  012828  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   827  01282A  6EF8               	movwf	tblptru,c
   828  01282C  EE01  F0DB         	lfsr	0,__pdataBANK1
   829  012830  EE10 F008          	lfsr	1,8
   830  012834                     copy_data0:
   831  012834  0009               	tblrd		*+
   832  012836  CFF5 FFEE          	movff	tablat,postinc0
   833  01283A  50E5               	movf	postdec1,w,c
   834  01283C  50E1               	movf	fsr1l,w,c
   835  01283E  E1FA               	bnz	copy_data0
   836                           
   837                           ; Initialize objects allocated to BANK0 (1 bytes)
   838                           ; load TBLPTR registers with __pidataBANK0
   839  012840  0EAB               	movlw	low __pidataBANK0
   840  012842  6EF6               	movwf	tblptrl,c
   841  012844  0E36               	movlw	high __pidataBANK0
   842  012846  6EF7               	movwf	tblptrh,c
   843  012848  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   844  01284A  6EF8               	movwf	tblptru,c
   845  01284C  0009               	tblrd		*+	;fetch initializer
   846  01284E  CFF5 F0EC          	movff	tablat,__pdataBANK0
   847                           
   848                           ; Initialize objects allocated to COMRAM (1 bytes)
   849                           ; load TBLPTR registers with __pidataCOMRAM
   850  012852  0EAA               	movlw	low __pidataCOMRAM
   851  012854  6EF6               	movwf	tblptrl,c
   852  012856  0E36               	movlw	high __pidataCOMRAM
   853  012858  6EF7               	movwf	tblptrh,c
   854  01285A  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   855  01285C  6EF8               	movwf	tblptru,c
   856  01285E  0009               	tblrd		*+	;fetch initializer
   857  012860  CFF5 F055          	movff	tablat,__pdataCOMRAM
   858                           
   859                           ; Clear objects allocated to BANK3 (114 bytes)
   860  012864  EE03  F000         	lfsr	0,__pbssBANK3
   861  012868  0E72               	movlw	114
   862  01286A                     clear_0:
   863  01286A  6AEE               	clrf	postinc0,c
   864  01286C  06E8               	decf	wreg,f,c
   865  01286E  E1FD               	bnz	clear_0
   866                           
   867                           ; Clear objects allocated to BANK2 (170 bytes)
   868  012870  EE02  F000         	lfsr	0,__pbssBANK2
   869  012874  0EAA               	movlw	170
   870  012876                     clear_1:
   871  012876  6AEE               	clrf	postinc0,c
   872  012878  06E8               	decf	wreg,f,c
   873  01287A  E1FD               	bnz	clear_1
   874                           
   875                           ; Clear objects allocated to BANK1 (219 bytes)
   876  01287C  EE01  F000         	lfsr	0,__pbssBANK1
   877  012880  0EDB               	movlw	219
   878  012882                     clear_2:
   879  012882  6AEE               	clrf	postinc0,c
   880  012884  06E8               	decf	wreg,f,c
   881  012886  E1FD               	bnz	clear_2
   882                           
   883                           ; Clear objects allocated to BANK0 (14 bytes)
   884  012888  EE00  F0DE         	lfsr	0,__pbssBANK0
   885  01288C  0E0E               	movlw	14
   886  01288E                     clear_3:
   887  01288E  6AEE               	clrf	postinc0,c
   888  012890  06E8               	decf	wreg,f,c
   889  012892  E1FD               	bnz	clear_3
   890                           
   891                           ; Clear objects allocated to COMRAM (44 bytes)
   892  012894  EE00  F001         	lfsr	0,__pbssCOMRAM
   893  012898  0E2C               	movlw	44
   894  01289A                     clear_4:
   895  01289A  6AEE               	clrf	postinc0,c
   896  01289C  06E8               	decf	wreg,f,c
   897  01289E  E1FD               	bnz	clear_4
   898  0128A0                     end_of_initialization:
   899                           	opt stack 0
   900  0128A0                     __end_of__initialization:
   901                           	opt stack 0
   902  0128A0  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   903  0128A2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   904  0128A4  0100               	movlb	0
   905  0128A6  EFBE  F09A         	goto	_main	;jump to C main() function
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           postdec1	equ	0xFE5
   913                           fsr1l	equ	0xFE1
   914                           
   915                           	psect	bssCOMRAM
   916  000001                     __pbssCOMRAM:
   917                           	opt stack 0
   918  000001                     _rxMessage:
   919                           	opt stack 0
   920  000001                     	ds	10
   921  00000B                     _MACInitParams:
   922                           	opt stack 0
   923  00000B                     	ds	3
   924  00000E                     _nextEEPosition:
   925                           	opt stack 0
   926  00000E                     	ds	2
   927  000010                     _FW_Stat:
   928                           	opt stack 0
   929  000010                     	ds	1
   930  000011                     _MACSeq:
   931                           	opt stack 0
   932  000011                     	ds	1
   933  000012                     _MyindexinPC:
   934                           	opt stack 0
   935  000012                     	ds	1
   936  000013                     _PUSH_BUTTON_pressed:
   937                           	opt stack 0
   938  000013                     	ds	1
   939  000014                     _RF_Mode:
   940                           	opt stack 0
   941  000014                     	ds	1
   942  000015                     _RSSILock:
   943                           	opt stack 0
   944  000015                     	ds	1
   945  000016                     _RSSIVal:
   946                           	opt stack 0
   947  000016                     	ds	1
   948  000017                     _ReceivedBankIndex:
   949                           	opt stack 0
   950  000017                     	ds	1
   951  000018                     _RxNum:
   952                           	opt stack 0
   953  000018                     	ds	1
   954  000019                     _TxMACSeq:
   955                           	opt stack 0
   956  000019                     	ds	1
   957  00001A                     _TxNum:
   958                           	opt stack 0
   959  00001A                     	ds	1
   960  00001B                     _TxSynCount:
   961                           	opt stack 0
   962  00001B                     	ds	1
   963  00001C                     _chk_sel_status:
   964                           	opt stack 0
   965  00001C                     	ds	1
   966  00001D                     _display_connections:
   967                           	opt stack 0
   968  00001D                     	ds	1
   969  00001E                     _end_nodes:
   970                           	opt stack 0
   971  00001E                     	ds	1
   972  00001F                     _lost_connection:
   973                           	opt stack 0
   974  00001F                     	ds	1
   975  000020                     _rec_ack:
   976                           	opt stack 0
   977  000020                     	ds	1
   978  000021                     _temp_bit:
   979                           	opt stack 0
   980  000021                     	ds	1
   981  000022                     _timerExtension1:
   982                           	opt stack 0
   983  000022                     	ds	1
   984  000023                     _nvmConnMode:
   985                           	opt stack 0
   986  000023                     	ds	2
   987  000025                     _nvmCurrentChannel:
   988                           	opt stack 0
   989  000025                     	ds	2
   990  000027                     _nvmEdc:
   991                           	opt stack 0
   992  000027                     	ds	2
   993  000029                     _nvmRole:
   994                           	opt stack 0
   995  000029                     	ds	2
   996  00002B                     _nvmmyIndex:
   997                           	opt stack 0
   998  00002B                     	ds	2
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           postdec1	equ	0xFE5
  1006                           fsr1l	equ	0xFE1
  1007                           
  1008                           	psect	dataCOMRAM
  1009  000055                     __pdataCOMRAM:
  1010                           	opt stack 0
  1011  000055                     _AdditionalNodeID:
  1012                           	opt stack 0
  1013  000055                     	ds	1
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           
  1023                           	psect	bssBANK0
  1024  0000DE                     __pbssBANK0:
  1025                           	opt stack 0
  1026  0000DE                     _IRQ1_Received:
  1027                           	opt stack 0
  1028  0000DE                     	ds	1
  1029  0000DF                     _LatestConnection:
  1030                           	opt stack 0
  1031  0000DF                     	ds	1
  1032  0000E0                     _P2PCapacityInfo:
  1033                           	opt stack 0
  1034  0000E0                     	ds	1
  1035  0000E1                     _P2PStatus:
  1036                           	opt stack 0
  1037  0000E1                     	ds	1
  1038  0000E2                     _TxData:
  1039                           	opt stack 0
  1040  0000E2                     	ds	1
  1041  0000E3                     _hasAck:
  1042                           	opt stack 0
  1043  0000E3                     	ds	1
  1044  0000E4                     _i:
  1045                           	opt stack 0
  1046  0000E4                     	ds	1
  1047  0000E5                     _timerExtension2:
  1048                           	opt stack 0
  1049  0000E5                     	ds	1
  1050  0000E6                     _nvmConnectionTable:
  1051                           	opt stack 0
  1052  0000E6                     	ds	2
  1053  0000E8                     _conn_size:
  1054                           	opt stack 0
  1055  0000E8                     	ds	1
  1056  0000E9                     _currentChannel:
  1057                           	opt stack 0
  1058  0000E9                     	ds	1
  1059  0000EA                     _myConnectionIndex_in_PanCo:
  1060                           	opt stack 0
  1061  0000EA                     	ds	1
  1062  0000EB                     _role:
  1063                           	opt stack 0
  1064  0000EB                     	ds	1
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074                           	psect	dataBANK0
  1075  0000EC                     __pdataBANK0:
  1076                           	opt stack 0
  1077  0000EC                     _ConnMode:
  1078                           	opt stack 0
  1079  0000EC                     	ds	1
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           
  1089                           	psect	bssBANK1
  1090  000100                     __pbssBANK1:
  1091                           	opt stack 0
  1092  000100                     _MACTxBuffer:
  1093                           	opt stack 0
  1094  000100                     	ds	55
  1095  000137                     _END_DEVICES_Short_Address:
  1096                           	opt stack 0
  1097  000137                     	ds	40
  1098  00015F                     _link_stat:
  1099                           	opt stack 0
  1100  00015F                     	ds	10
  1101  000169                     _permanent_connections:
  1102                           	opt stack 0
  1103  000169                     	ds	10
  1104  000173                     _MACRxPacket:
  1105                           	opt stack 0
  1106  000173                     	ds	8
  1107  00017B                     _PUSH_BUTTON_press_time:
  1108                           	opt stack 0
  1109  00017B                     	ds	4
  1110  00017F                     _nvmDelayTick:
  1111                           	opt stack 0
  1112  00017F                     	ds	4
  1113  000183                     _t1:
  1114                           	opt stack 0
  1115  000183                     	ds	4
  1116  000187                     _t2:
  1117                           	opt stack 0
  1118  000187                     	ds	4
  1119  00018B                     _tick1:
  1120                           	opt stack 0
  1121  00018B                     	ds	4
  1122  00018F                     _tick4:
  1123                           	opt stack 0
  1124  00018F                     	ds	4
  1125  000193                     _TxBuffer:
  1126                           	opt stack 0
  1127  000193                     	ds	35
  1128  0001B6                     _LCDText:
  1129                           	opt stack 0
  1130  0001B6                     	ds	33
  1131  0001D7                     _nvmMyPANID:
  1132                           	opt stack 0
  1133  0001D7                     	ds	2
  1134  0001D9                     _nvmOutFrameCounter:
  1135                           	opt stack 0
  1136  0001D9                     	ds	2
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           postdec1	equ	0xFE5
  1144                           fsr1l	equ	0xFE1
  1145                           
  1146                           	psect	dataBANK1
  1147  0001DB                     __pdataBANK1:
  1148                           	opt stack 0
  1149  0001DB                     _myLongAddress:
  1150                           	opt stack 0
  1151  0001DB                     	ds	8
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec1	equ	0xFE5
  1159                           fsr1l	equ	0xFE1
  1160                           
  1161                           	psect	bssBANK2
  1162  000200                     __pbssBANK2:
  1163                           	opt stack 0
  1164  000200                     _AckInfo:
  1165                           	opt stack 0
  1166  000200                     	ds	30
  1167  00021E                     _ConnectionTable:
  1168                           	opt stack 0
  1169  00021E                     	ds	140
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec1	equ	0xFE5
  1177                           fsr1l	equ	0xFE1
  1178                           
  1179                           	psect	bssBANK3
  1180  000300                     __pbssBANK3:
  1181                           	opt stack 0
  1182  000300                     _RxPacket:
  1183                           	opt stack 0
  1184  000300                     	ds	114
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           
  1194                           	psect	cstackBANK2
  1195  0002AA                     __pcstackBANK2:
  1196                           	opt stack 0
  1197  0002AA                     MiApp_UnicastStar@copy_txdata:
  1198                           	opt stack 0
  1199                           
  1200                           ; 35 bytes @ 0x0
  1201  0002AA                     	ds	35
  1202  0002CD                     MiApp_UnicastStar@t1:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x23
  1206  0002CD                     	ds	4
  1207  0002D1                     MiApp_UnicastStar@t2:
  1208                           	opt stack 0
  1209                           
  1210                           ; 4 bytes @ 0x27
  1211  0002D1                     	ds	4
  1212  0002D5                     MiApp_UnicastStar@datalen:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x2B
  1216  0002D5                     	ds	1
  1217  0002D6                     MiApp_UnicastStar@EndDevice_ConnectionIndex:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x2C
  1221  0002D6                     	ds	1
  1222  0002D7                     MiApp_UnicastStar@i:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x2D
  1226  0002D7                     	ds	1
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1l	equ	0xFE1
  1235                           
  1236                           	psect	cstackBANK0
  1237  000060                     __pcstackBANK0:
  1238                           	opt stack 0
  1239  000060                     high_isr@counter:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x0
  1243  000060                     	ds	2
  1244  000062                     high_isr@fifo_stat:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x2
  1248  000062                     	ds	1
  1249  000063                     high_isr@ackPacket:
  1250                           	opt stack 0
  1251                           
  1252                           ; 4 bytes @ 0x3
  1253  000063                     	ds	4
  1254  000067                     high_isr@bAck:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x7
  1258  000067                     	ds	1
  1259  000068                     high_isr@RxPacketPtr:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x8
  1263  000068                     	ds	1
  1264  000069                     high_isr@ackInfoIndex:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x9
  1268  000069                     	ds	1
  1269  00006A                     high_isr@PacketLen:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0xA
  1273  00006A                     	ds	1
  1274  00006B                     high_isr@BankIndex:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0xB
  1278  00006B                     	ds	1
  1279  00006C                     high_isr@i:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0xC
  1283  00006C                     	ds	1
  1284  00006D                     ??_isdigit:
  1285  00006D                     ??_handle_lost_connection:
  1286  00006D                     ?___wmul:
  1287                           	opt stack 0
  1288  00006D                     ?___awdiv:
  1289                           	opt stack 0
  1290  00006D                     ?___awmod:
  1291                           	opt stack 0
  1292  00006D                     ?___lwdiv:
  1293                           	opt stack 0
  1294  00006D                     ?_MiWi_TickGet:
  1295                           	opt stack 0
  1296  00006D                     Total_Connections@count:
  1297                           	opt stack 0
  1298  00006D                     SPIPut@v:
  1299                           	opt stack 0
  1300  00006D                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1301                           	opt stack 0
  1302  00006D                     ___lbmod@divisor:
  1303                           	opt stack 0
  1304  00006D                     NVMalloc@size:
  1305                           	opt stack 0
  1306  00006D                     Find_Index@DestAddr:
  1307                           	opt stack 0
  1308  00006D                     isSameAddress@Address1:
  1309                           	opt stack 0
  1310  00006D                     DELAY_ms@ms:
  1311                           	opt stack 0
  1312  00006D                     ___wmul@multiplier:
  1313                           	opt stack 0
  1314  00006D                     ___awdiv@dividend:
  1315                           	opt stack 0
  1316  00006D                     ___awmod@dividend:
  1317                           	opt stack 0
  1318  00006D                     ___lwdiv@dividend:
  1319                           	opt stack 0
  1320  00006D                     memset@p1:
  1321                           	opt stack 0
  1322  00006D                     DELAY_10us@tenMicroSecondCounter:
  1323                           	opt stack 0
  1324                           
  1325                           ; 4 bytes @ 0xD
  1326  00006D                     	ds	1
  1327  00006E                     RegisterRead@address:
  1328                           	opt stack 0
  1329  00006E                     WriteFIFO@Data:
  1330                           	opt stack 0
  1331  00006E                     Total_Connections@i:
  1332                           	opt stack 0
  1333  00006E                     LCDInitPortA@preRFIE:
  1334                           	opt stack 0
  1335  00006E                     LCDInitPortB@preRFIE:
  1336                           	opt stack 0
  1337  00006E                     LCDWritePortA@v:
  1338                           	opt stack 0
  1339  00006E                     LCDWritePortB@v:
  1340                           	opt stack 0
  1341  00006E                     _isdigit$3420:
  1342                           	opt stack 0
  1343  00006E                     ___lbmod@dividend:
  1344                           	opt stack 0
  1345  00006E                     RegisterSet@setting:
  1346                           	opt stack 0
  1347  00006E                     NVMRead@dest:
  1348                           	opt stack 0
  1349  00006E                     NVMWrite@source:
  1350                           	opt stack 0
  1351  00006E                     EEPROM_Read@dest:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0xE
  1355  00006E                     	ds	1
  1356  00006F                     ??_DELAY_ms:
  1357  00006F                     RegisterRead@value:
  1358                           	opt stack 0
  1359  00006F                     WriteFIFO@IRQ1select:
  1360                           	opt stack 0
  1361  00006F                     LCDWritePortA@preRFIE:
  1362                           	opt stack 0
  1363  00006F                     LCDWritePortB@preRFIE:
  1364                           	opt stack 0
  1365  00006F                     isdigit@c:
  1366                           	opt stack 0
  1367  00006F                     ___lbmod@counter:
  1368                           	opt stack 0
  1369  00006F                     NVMalloc@location:
  1370                           	opt stack 0
  1371  00006F                     isSameAddress@Address2:
  1372                           	opt stack 0
  1373  00006F                     ___wmul@multiplicand:
  1374                           	opt stack 0
  1375  00006F                     ___awdiv@divisor:
  1376                           	opt stack 0
  1377  00006F                     ___awmod@divisor:
  1378                           	opt stack 0
  1379  00006F                     ___lwdiv@divisor:
  1380                           	opt stack 0
  1381  00006F                     memset@c:
  1382                           	opt stack 0
  1383                           
  1384                           ; 2 bytes @ 0xF
  1385  00006F                     	ds	1
  1386  000070                     RegisterSet@IRQ1select:
  1387                           	opt stack 0
  1388  000070                     RegisterRead@IRQ1select:
  1389                           	opt stack 0
  1390  000070                     EEPROM_Read@addr:
  1391                           	opt stack 0
  1392  000070                     LCDInitWrite@v:
  1393                           	opt stack 0
  1394  000070                     ___lbmod@rem:
  1395                           	opt stack 0
  1396  000070                     NVMRead@addr:
  1397                           	opt stack 0
  1398  000070                     NVMWrite@addr:
  1399                           	opt stack 0
  1400                           
  1401                           ; 2 bytes @ 0x10
  1402  000070                     	ds	1
  1403  000071                     ??_NVMalloc:
  1404  000071                     SetRFMode@mode:
  1405                           	opt stack 0
  1406  000071                     Find_Index@return_val:
  1407                           	opt stack 0
  1408  000071                     EEPROM_Read@count:
  1409                           	opt stack 0
  1410  000071                     MiWi_TickGet@IntFlag2:
  1411                           	opt stack 0
  1412  000071                     ___awdiv@counter:
  1413                           	opt stack 0
  1414  000071                     ___awmod@counter:
  1415                           	opt stack 0
  1416  000071                     ___lwdiv@counter:
  1417                           	opt stack 0
  1418  000071                     ___wmul@product:
  1419                           	opt stack 0
  1420  000071                     memset@n:
  1421                           	opt stack 0
  1422  000071                     DELAY_10us@cyclesRequiredForEntireDelay:
  1423                           	opt stack 0
  1424                           
  1425                           ; 4 bytes @ 0x11
  1426  000071                     	ds	1
  1427  000072                     MiMAC_SetChannel@offsetFreq:
  1428                           	opt stack 0
  1429  000072                     Find_Index@i:
  1430                           	opt stack 0
  1431  000072                     handle_lost_connection@stat:
  1432                           	opt stack 0
  1433  000072                     MiWi_TickGet@IntFlag1:
  1434                           	opt stack 0
  1435  000072                     ___awdiv@sign:
  1436                           	opt stack 0
  1437  000072                     ___awmod@sign:
  1438                           	opt stack 0
  1439  000072                     NVMRead@count:
  1440                           	opt stack 0
  1441  000072                     NVMWrite@count:
  1442                           	opt stack 0
  1443  000072                     ___lwdiv@quotient:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x12
  1447  000072                     	ds	1
  1448  000073                     ??_MiMAC_SetChannel:
  1449  000073                     NVMInit@result:
  1450                           	opt stack 0
  1451  000073                     handle_lost_connection@i:
  1452                           	opt stack 0
  1453  000073                     isSameAddress@i:
  1454                           	opt stack 0
  1455  000073                     ___awdiv@quotient:
  1456                           	opt stack 0
  1457  000073                     memset@p:
  1458                           	opt stack 0
  1459  000073                     MiWi_TickGet@currentTime:
  1460                           	opt stack 0
  1461                           
  1462                           ; 4 bytes @ 0x13
  1463  000073                     	ds	1
  1464  000074                     ??_NVMWrite:
  1465  000074                     ?___lwmod:
  1466                           	opt stack 0
  1467  000074                     MiMAC_SetChannel@channel:
  1468                           	opt stack 0
  1469  000074                     NVMRead@oldRFIE:
  1470                           	opt stack 0
  1471  000074                     store_connection_tb@payload:
  1472                           	opt stack 0
  1473  000074                     ___lwmod@dividend:
  1474                           	opt stack 0
  1475                           
  1476                           ; 2 bytes @ 0x14
  1477  000074                     	ds	1
  1478  000075                     NVMWrite@oldRFIE:
  1479                           	opt stack 0
  1480                           
  1481                           ; 1 bytes @ 0x15
  1482  000075                     	ds	1
  1483  000076                     ??_store_connection_tb:
  1484  000076                     NVMWrite@PageCounter:
  1485                           	opt stack 0
  1486  000076                     ___lwmod@divisor:
  1487                           	opt stack 0
  1488                           
  1489                           ; 2 bytes @ 0x16
  1490  000076                     	ds	1
  1491  000077                     ??_AddConnection:
  1492  000077                     ??_MiMAC_ReceivedPacket:
  1493  000077                     ??_MiApp_ConnectionMode:
  1494  000077                     TxPacket@CCA:
  1495                           	opt stack 0
  1496  000077                     MiApp_StartConnection@ScanDuration:
  1497                           	opt stack 0
  1498  000077                     MiApp_SetChannel@channel:
  1499                           	opt stack 0
  1500  000077                     DELAY_ms@cyclesRequiredForEntireDelay:
  1501                           	opt stack 0
  1502  000077                     ButtonPressed@tickDifference:
  1503                           	opt stack 0
  1504                           
  1505                           ; 4 bytes @ 0x17
  1506  000077                     	ds	1
  1507  000078                     ??_TxPacket:
  1508  000078                     store_connection_tb@j:
  1509                           	opt stack 0
  1510  000078                     MiApp_ConnectionMode@Mode:
  1511                           	opt stack 0
  1512  000078                     ___lwmod@counter:
  1513                           	opt stack 0
  1514  000078                     MiApp_StartConnection@ChannelMap:
  1515                           	opt stack 0
  1516                           
  1517                           ; 4 bytes @ 0x18
  1518  000078                     	ds	1
  1519  000079                     ?_sprintf:
  1520                           	opt stack 0
  1521  000079                     store_connection_tb@i:
  1522                           	opt stack 0
  1523  000079                     sprintf@sp:
  1524                           	opt stack 0
  1525                           
  1526                           ; 2 bytes @ 0x19
  1527  000079                     	ds	2
  1528  00007B                     AddConnection@status:
  1529                           	opt stack 0
  1530  00007B                     LCD_i_write@v:
  1531                           	opt stack 0
  1532  00007B                     LCD_d_write@v:
  1533                           	opt stack 0
  1534  00007B                     sprintf@f:
  1535                           	opt stack 0
  1536  00007B                     MiMAC_Init@initValue:
  1537                           	opt stack 0
  1538  00007B                     ButtonPressed@t:
  1539                           	opt stack 0
  1540                           
  1541                           ; 4 bytes @ 0x1B
  1542  00007B                     	ds	1
  1543  00007C                     MiApp_StartConnection@Mode:
  1544                           	opt stack 0
  1545  00007C                     AddConnection@connectionSlot:
  1546                           	opt stack 0
  1547  00007C                     LCD_Update@i:
  1548                           	opt stack 0
  1549  00007C                     TxPacket@t1:
  1550                           	opt stack 0
  1551                           
  1552                           ; 4 bytes @ 0x1C
  1553  00007C                     	ds	1
  1554  00007D                     AddConnection@i:
  1555                           	opt stack 0
  1556                           
  1557                           ; 1 bytes @ 0x1D
  1558  00007D                     	ds	1
  1559  00007E                     MiMAC_Init@i:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0x1E
  1563  00007E                     	ds	1
  1564  00007F                     MiApp_ProtocolInit@bNetworkFreezer:
  1565                           	opt stack 0
  1566  00007F                     MiMAC_ReceivedPacket@currentTick:
  1567                           	opt stack 0
  1568                           
  1569                           ; 4 bytes @ 0x1F
  1570  00007F                     	ds	1
  1571  000080                     MiApp_ProtocolInit@initValue:
  1572                           	opt stack 0
  1573  000080                     TxPacket@t2:
  1574                           	opt stack 0
  1575                           
  1576                           ; 4 bytes @ 0x20
  1577  000080                     	ds	3
  1578  000083                     MiMAC_ReceivedPacket@PayloadIndex:
  1579                           	opt stack 0
  1580  000083                     MiApp_ProtocolInit@i:
  1581                           	opt stack 0
  1582                           
  1583                           ; 1 bytes @ 0x23
  1584  000083                     	ds	1
  1585  000084                     TxPacket@CCARetries:
  1586                           	opt stack 0
  1587  000084                     MiMAC_ReceivedPacket@i:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x24
  1591  000084                     	ds	1
  1592  000085                     ??_sprintf:
  1593  000085                     TxPacket@reTry:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x25
  1597  000085                     	ds	1
  1598  000086                     TxPacket@allowedTxFailure:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x26
  1602  000086                     	ds	1
  1603  000087                     TxPacket@rssival:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x27
  1607  000087                     	ds	1
  1608  000088                     TxPacket@TxPacketLen:
  1609                           	opt stack 0
  1610                           
  1611                           ; 1 bytes @ 0x28
  1612  000088                     	ds	1
  1613  000089                     TxPacket@status:
  1614                           	opt stack 0
  1615  000089                     sprintf@idx:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0x29
  1619  000089                     	ds	1
  1620  00008A                     TxPacket@i:
  1621                           	opt stack 0
  1622  00008A                     _sprintf$3189:
  1623                           	opt stack 0
  1624                           
  1625                           ; 2 bytes @ 0x2A
  1626  00008A                     	ds	1
  1627  00008B                     MiMAC_SendPacket@transParam:
  1628                           	opt stack 0
  1629                           
  1630                           ; 3 bytes @ 0x2B
  1631  00008B                     	ds	1
  1632  00008C                     _sprintf$3190:
  1633                           	opt stack 0
  1634                           
  1635                           ; 2 bytes @ 0x2C
  1636  00008C                     	ds	2
  1637  00008E                     MiMAC_SendPacket@MACPayload:
  1638                           	opt stack 0
  1639  00008E                     _sprintf$3196:
  1640                           	opt stack 0
  1641                           
  1642                           ; 2 bytes @ 0x2E
  1643  00008E                     	ds	2
  1644  000090                     MiMAC_SendPacket@MACPayloadLen:
  1645                           	opt stack 0
  1646  000090                     sprintf@cp:
  1647                           	opt stack 0
  1648                           
  1649                           ; 1 bytes @ 0x30
  1650  000090                     	ds	1
  1651  000091                     ??_MiMAC_SendPacket:
  1652  000091                     sprintf@len:
  1653                           	opt stack 0
  1654                           
  1655                           ; 2 bytes @ 0x31
  1656  000091                     	ds	1
  1657  000092                     MiMAC_SendPacket@TxIndex:
  1658                           	opt stack 0
  1659                           
  1660                           ; 1 bytes @ 0x32
  1661  000092                     	ds	1
  1662  000093                     MiMAC_SendPacket@i:
  1663                           	opt stack 0
  1664  000093                     sprintf@ap:
  1665                           	opt stack 0
  1666                           
  1667                           ; 1 bytes @ 0x33
  1668  000093                     	ds	1
  1669  000094                     SendPacket@DestinationAddress:
  1670                           	opt stack 0
  1671  000094                     sprintf@val:
  1672                           	opt stack 0
  1673                           
  1674                           ; 2 bytes @ 0x34
  1675  000094                     	ds	2
  1676  000096                     SendPacket@isCommand:
  1677                           	opt stack 0
  1678  000096                     sprintf@prec:
  1679                           	opt stack 0
  1680                           
  1681                           ; 1 bytes @ 0x36
  1682  000096                     	ds	1
  1683  000097                     SendPacket@SecurityEnabled:
  1684                           	opt stack 0
  1685  000097                     sprintf@width:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x37
  1689  000097                     	ds	1
  1690  000098                     ??_SendPacket:
  1691                           
  1692                           ; 1 bytes @ 0x38
  1693  000098                     	ds	1
  1694  000099                     SendPacket@status:
  1695                           	opt stack 0
  1696  000099                     sprintf@c:
  1697                           	opt stack 0
  1698                           
  1699                           ; 1 bytes @ 0x39
  1700  000099                     	ds	1
  1701  00009A                     SendPacket@Broadcast:
  1702                           	opt stack 0
  1703  00009A                     sprintf@flag:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x3A
  1707  00009A                     	ds	1
  1708  00009B                     SendPacket@tParam:
  1709                           	opt stack 0
  1710                           
  1711                           ; 3 bytes @ 0x3B
  1712  00009B                     	ds	1
  1713  00009C                     LCDTRXCount@rxCount:
  1714                           	opt stack 0
  1715  00009C                     LCDDisplay@text:
  1716                           	opt stack 0
  1717  00009C                     Source_END_DEVICE_INFO@SrAddr:
  1718                           	opt stack 0
  1719                           
  1720                           ; 2 bytes @ 0x3C
  1721  00009C                     	ds	1
  1722  00009D                     LCDTRXCount@txCount:
  1723                           	opt stack 0
  1724                           
  1725                           ; 1 bytes @ 0x3D
  1726  00009D                     	ds	1
  1727  00009E                     ??_MiApp_BroadcastConnectionTable:
  1728  00009E                     MiApp_BroadcastPacket@SecEn:
  1729                           	opt stack 0
  1730  00009E                     send_link_status@send_status:
  1731                           	opt stack 0
  1732  00009E                     LCDDisplay@value:
  1733                           	opt stack 0
  1734  00009E                     DemoOutput_UpdateTxRx@RxNum:
  1735                           	opt stack 0
  1736  00009E                     MiApp_UnicastAddress@DestinationAddress:
  1737                           	opt stack 0
  1738  00009E                     SW_Ack_SrED@Dest_Addr:
  1739                           	opt stack 0
  1740  00009E                     MiApp_RemoveConnection@j:
  1741                           	opt stack 0
  1742                           
  1743                           ; 2 bytes @ 0x3E
  1744  00009E                     	ds	1
  1745  00009F                     LCDDisplay@delay:
  1746                           	opt stack 0
  1747  00009F                     DemoOutput_UpdateTxRx@TxNum:
  1748                           	opt stack 0
  1749                           
  1750                           ; 1 bytes @ 0x3F
  1751  00009F                     	ds	1
  1752  0000A0                     MiApp_UnicastAddress@PermanentAddr:
  1753                           	opt stack 0
  1754  0000A0                     LCDDisplay@i:
  1755                           	opt stack 0
  1756  0000A0                     MiApp_RemoveConnection@j_1366:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x40
  1760  0000A0                     	ds	1
  1761  0000A1                     ??_freezer_feature:
  1762  0000A1                     MiApp_UnicastAddress@SecEn:
  1763                           	opt stack 0
  1764  0000A1                     DemoOutput_Channel@Step:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x41
  1768  0000A1                     	ds	1
  1769  0000A2                     MiApp_UnicastConnection@SecEn:
  1770                           	opt stack 0
  1771  0000A2                     MiApp_RemoveConnection@ConnectionIndex:
  1772                           	opt stack 0
  1773  0000A2                     DemoOutput_Channel@channel:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0x42
  1777  0000A2                     	ds	1
  1778  0000A3                     MiApp_UnicastConnection@ConnectionIndex:
  1779                           	opt stack 0
  1780  0000A3                     MiApp_RemoveConnection@i:
  1781                           	opt stack 0
  1782                           
  1783                           ; 1 bytes @ 0x43
  1784  0000A3                     	ds	1
  1785  0000A4                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x44
  1789  0000A4                     	ds	1
  1790  0000A5                     MiApp_BroadcastConnectionTable@count:
  1791                           	opt stack 0
  1792  0000A5                     Find_InActiveDevices@i:
  1793                           	opt stack 0
  1794  0000A5                     freezer_feature@tick1:
  1795                           	opt stack 0
  1796                           
  1797                           ; 4 bytes @ 0x45
  1798  0000A5                     	ds	1
  1799  0000A6                     Forward_Packet_PANCr_to_EDy@index:
  1800                           	opt stack 0
  1801  0000A6                     MiApp_BroadcastConnectionTable@broadcast_count:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x46
  1805  0000A6                     	ds	1
  1806  0000A7                     MiApp_BroadcastConnectionTable@k:
  1807                           	opt stack 0
  1808  0000A7                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1809                           	opt stack 0
  1810                           
  1811                           ; 2 bytes @ 0x47
  1812  0000A7                     	ds	1
  1813  0000A8                     MiApp_BroadcastConnectionTable@i:
  1814                           	opt stack 0
  1815                           
  1816                           ; 1 bytes @ 0x48
  1817  0000A8                     	ds	1
  1818  0000A9                     Forward_Packet_PANCr_to_EDy@status:
  1819                           	opt stack 0
  1820  0000A9                     MiApp_BroadcastConnectionTable@j:
  1821                           	opt stack 0
  1822  0000A9                     freezer_feature@tick2:
  1823                           	opt stack 0
  1824                           
  1825                           ; 4 bytes @ 0x49
  1826  0000A9                     	ds	1
  1827  0000AA                     Forward_Packet_PANCr_to_EDy@i:
  1828                           	opt stack 0
  1829                           
  1830                           ; 1 bytes @ 0x4A
  1831  0000AA                     	ds	1
  1832  0000AB                     ??_P2PTasks:
  1833                           
  1834                           ; 1 bytes @ 0x4B
  1835  0000AB                     	ds	2
  1836  0000AD                     freezer_feature@switch_val:
  1837                           	opt stack 0
  1838                           
  1839                           ; 1 bytes @ 0x4D
  1840  0000AD                     	ds	1
  1841  0000AE                     freezer_feature@return_val:
  1842                           	opt stack 0
  1843                           
  1844                           ; 1 bytes @ 0x4E
  1845  0000AE                     	ds	1
  1846  0000AF                     P2PTasks@tmpTick:
  1847                           	opt stack 0
  1848                           
  1849                           ; 4 bytes @ 0x4F
  1850  0000AF                     	ds	4
  1851  0000B3                     P2PTasks@tick2:
  1852                           	opt stack 0
  1853                           
  1854                           ; 4 bytes @ 0x53
  1855  0000B3                     	ds	4
  1856  0000B7                     P2PTasks@final_index:
  1857                           	opt stack 0
  1858                           
  1859                           ; 1 bytes @ 0x57
  1860  0000B7                     	ds	1
  1861  0000B8                     P2PTasks@tick3:
  1862                           	opt stack 0
  1863                           
  1864                           ; 4 bytes @ 0x58
  1865  0000B8                     	ds	4
  1866  0000BC                     P2PTasks@p:
  1867                           	opt stack 0
  1868                           
  1869                           ; 1 bytes @ 0x5C
  1870  0000BC                     	ds	1
  1871  0000BD                     P2PTasks@p_1213:
  1872                           	opt stack 0
  1873                           
  1874                           ; 1 bytes @ 0x5D
  1875  0000BD                     	ds	1
  1876  0000BE                     P2PTasks@status:
  1877                           	opt stack 0
  1878                           
  1879                           ; 1 bytes @ 0x5E
  1880  0000BE                     	ds	1
  1881  0000BF                     P2PTasks@i:
  1882                           	opt stack 0
  1883                           
  1884                           ; 1 bytes @ 0x5F
  1885  0000BF                     	ds	1
  1886  0000C0                     MiApp_UnicastStar@SecEn:
  1887                           	opt stack 0
  1888  0000C0                     MiApp_EstablishConnection@Mode:
  1889                           	opt stack 0
  1890  0000C0                     Process_RxMessage@User_data_status:
  1891                           	opt stack 0
  1892                           
  1893                           ; 1 bytes @ 0x60
  1894  0000C0                     	ds	1
  1895  0000C1                     ??_MiApp_UnicastStar:
  1896  0000C1                     ??_MiApp_EstablishConnection:
  1897                           
  1898                           ; 1 bytes @ 0x61
  1899  0000C1                     	ds	4
  1900  0000C5                     MiApp_EstablishConnection@tmpConnectionMode:
  1901                           	opt stack 0
  1902                           
  1903                           ; 1 bytes @ 0x65
  1904  0000C5                     	ds	1
  1905  0000C6                     MiApp_EstablishConnection@retry:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0x66
  1909  0000C6                     	ds	1
  1910  0000C7                     MiApp_EstablishConnection@connectionInterval:
  1911                           	opt stack 0
  1912                           
  1913                           ; 1 bytes @ 0x67
  1914  0000C7                     	ds	1
  1915  0000C8                     MiApp_EstablishConnection@t1:
  1916                           	opt stack 0
  1917                           
  1918                           ; 4 bytes @ 0x68
  1919  0000C8                     	ds	4
  1920  0000CC                     MiApp_EstablishConnection@t2:
  1921                           	opt stack 0
  1922                           
  1923                           ; 4 bytes @ 0x6C
  1924  0000CC                     	ds	4
  1925  0000D0                     MiApp_EstablishConnection@i:
  1926                           	opt stack 0
  1927                           
  1928                           ; 1 bytes @ 0x70
  1929  0000D0                     	ds	1
  1930  0000D1                     ??_run_star_demo:
  1931  0000D1                     Initialize_Demo@freezer_enable:
  1932                           	opt stack 0
  1933                           
  1934                           ; 1 bytes @ 0x71
  1935  0000D1                     	ds	1
  1936  0000D2                     Initialize_Demo@i:
  1937                           	opt stack 0
  1938                           
  1939                           ; 1 bytes @ 0x72
  1940  0000D2                     	ds	6
  1941  0000D8                     run_star_demo@sw_layer_ack_status:
  1942                           	opt stack 0
  1943                           
  1944                           ; 1 bytes @ 0x78
  1945  0000D8                     	ds	1
  1946  0000D9                     run_star_demo@update_ed:
  1947                           	opt stack 0
  1948                           
  1949                           ; 1 bytes @ 0x79
  1950  0000D9                     	ds	1
  1951  0000DA                     run_star_demo@PressedButton:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x7A
  1955  0000DA                     	ds	1
  1956  0000DB                     run_star_demo@switch_val:
  1957                           	opt stack 0
  1958                           
  1959                           ; 1 bytes @ 0x7B
  1960  0000DB                     	ds	1
  1961  0000DC                     run_star_demo@select_ed:
  1962                           	opt stack 0
  1963                           
  1964                           ; 1 bytes @ 0x7C
  1965  0000DC                     	ds	1
  1966  0000DD                     main@freezer_enable:
  1967                           	opt stack 0
  1968                           
  1969                           ; 1 bytes @ 0x7D
  1970  0000DD                     	ds	1
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1l	equ	0xFE1
  1979                           
  1980                           	psect	cstackCOMRAM
  1981  00002D                     __pcstackCOMRAM:
  1982                           	opt stack 0
  1983  00002D                     ?i2_MiWi_TickGet:
  1984                           	opt stack 0
  1985  00002D                     i2SPIPut@v:
  1986                           	opt stack 0
  1987  00002D                     i2DELAY_10us@tenMicroSecondCounter:
  1988                           	opt stack 0
  1989                           
  1990                           ; 4 bytes @ 0x0
  1991  00002D                     	ds	1
  1992  00002E                     i2RegisterRead@address:
  1993                           	opt stack 0
  1994  00002E                     i2WriteFIFO@Data:
  1995                           	opt stack 0
  1996  00002E                     i2RegisterSet@setting:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0x1
  2000  00002E                     	ds	1
  2001  00002F                     i2RegisterRead@value:
  2002                           	opt stack 0
  2003  00002F                     i2WriteFIFO@IRQ1select:
  2004                           	opt stack 0
  2005                           
  2006                           ; 1 bytes @ 0x2
  2007  00002F                     	ds	1
  2008  000030                     i2RegisterSet@IRQ1select:
  2009                           	opt stack 0
  2010  000030                     i2RegisterRead@IRQ1select:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0x3
  2014  000030                     	ds	1
  2015  000031                     i2SetRFMode@mode:
  2016                           	opt stack 0
  2017  000031                     i2MiWi_TickGet@IntFlag2:
  2018                           	opt stack 0
  2019                           
  2020                           ; 1 bytes @ 0x4
  2021  000031                     	ds	1
  2022  000032                     i2MiWi_TickGet@IntFlag1:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x5
  2026  000032                     	ds	1
  2027  000033                     i2MiWi_TickGet@currentTime:
  2028                           	opt stack 0
  2029                           
  2030                           ; 4 bytes @ 0x6
  2031  000033                     	ds	4
  2032  000037                     i2TxPacket@CCA:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0xA
  2036  000037                     	ds	1
  2037  000038                     ??i2_TxPacket:
  2038                           
  2039                           ; 1 bytes @ 0xB
  2040  000038                     	ds	4
  2041  00003C                     i2TxPacket@TxPacketLen:
  2042                           	opt stack 0
  2043                           
  2044                           ; 1 bytes @ 0xF
  2045  00003C                     	ds	1
  2046  00003D                     i2TxPacket@status:
  2047                           	opt stack 0
  2048                           
  2049                           ; 1 bytes @ 0x10
  2050  00003D                     	ds	1
  2051  00003E                     i2TxPacket@t1:
  2052                           	opt stack 0
  2053                           
  2054                           ; 4 bytes @ 0x11
  2055  00003E                     	ds	4
  2056  000042                     i2TxPacket@t2:
  2057                           	opt stack 0
  2058                           
  2059                           ; 4 bytes @ 0x15
  2060  000042                     	ds	4
  2061  000046                     i2TxPacket@CCARetries:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x19
  2065  000046                     	ds	1
  2066  000047                     i2TxPacket@reTry:
  2067                           	opt stack 0
  2068                           
  2069                           ; 1 bytes @ 0x1A
  2070  000047                     	ds	1
  2071  000048                     i2TxPacket@allowedTxFailure:
  2072                           	opt stack 0
  2073                           
  2074                           ; 1 bytes @ 0x1B
  2075  000048                     	ds	1
  2076  000049                     i2TxPacket@rssival:
  2077                           	opt stack 0
  2078                           
  2079                           ; 1 bytes @ 0x1C
  2080  000049                     	ds	1
  2081  00004A                     i2TxPacket@i:
  2082                           	opt stack 0
  2083                           
  2084                           ; 1 bytes @ 0x1D
  2085  00004A                     	ds	1
  2086  00004B                     ??_high_isr:
  2087                           
  2088                           ; 1 bytes @ 0x1E
  2089  00004B                     	ds	10
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           postdec1	equ	0xFE5
  2097                           fsr1l	equ	0xFE1
  2098                           
  2099 ;;
  2100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2101 ;;
  2102 ;; *************** function _main *****************
  2103 ;; Defined at:
  2104 ;;		line 56 in file "../src/main.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  freezer_enab    1  125[BANK0 ] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : F/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels required when called:   19
  2124 ;; This function calls:
  2125 ;;		_DemoOutput_Greeting
  2126 ;;		_InitSymbolTimer
  2127 ;;		_Initialize_Demo
  2128 ;;		_Run_Demo
  2129 ;;		_SYSTEM_Initialize
  2130 ;;		_freezer_feature
  2131 ;; This function is called by:
  2132 ;;		Startup code after reset
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text0
  2137  01357C                     __ptext0:
  2138                           	opt stack 0
  2139  01357C                     _main:
  2140                           	opt stack 12
  2141                           
  2142                           ;main.c: 60: SYSTEM_Initialize();
  2143                           
  2144                           ;incstack = 0
  2145  01357C  EC9B  F096         	call	_SYSTEM_Initialize	;wreg free
  2146                           
  2147                           ;main.c: 66: InitSymbolTimer ();
  2148  013580  EC18  F09B         	call	_InitSymbolTimer	;wreg free
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 68: DemoOutput_Greeting();
  2152  013584  EC21  F09B         	call	_DemoOutput_Greeting	;wreg free
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 72: freezer_enable = freezer_feature();
  2156  013588  EC55  F094         	call	_freezer_feature	;wreg free
  2157  01358C  6FDD               	movwf	main@freezer_enable& (0+255),b
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;main.c: 76: Initialize_Demo(freezer_enable);
  2161  01358E  51DD               	movf	main@freezer_enable& (0+255),w,b
  2162  013590  ECC6  F095         	call	_Initialize_Demo
  2163  013594                     l13304:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 78: {
  2167                           ;main.c: 80: Run_Demo();
  2168  013594  EC4C  F09B         	call	_Run_Demo	;wreg free
  2169  013598  D7FD               	goto	l13304
  2170  01359A                     __end_of_main:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1l	equ	0xFE1
  2180                           
  2181 ;; *************** function _freezer_feature *****************
  2182 ;; Defined at:
  2183 ;;		line 62 in file "../src/task.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  tick2           4   73[BANK0 ] struct _MIWI_TICK
  2188 ;;  tick1           4   69[BANK0 ] struct _MIWI_TICK
  2189 ;;  return_val      1   78[BANK0 ] unsigned char 
  2190 ;;  switch_val      1   77[BANK0 ] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : F/0
  2197 ;;		On exit  : F/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:       14 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:   10
  2207 ;; This function calls:
  2208 ;;		_ButtonPressed
  2209 ;;		_DELAY_ms
  2210 ;;		_LCDDisplay
  2211 ;;		_MiWi_TickGet
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text1
  2218  0128AA                     __ptext1:
  2219                           	opt stack 0
  2220  0128AA                     _freezer_feature:
  2221                           	opt stack 20
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;task.c: 64: MIWI_TICK tick1, tick2;
  2225                           ;task.c: 65: uint8_t switch_val;
  2226                           ;task.c: 66: bool return_val;
  2227                           ;task.c: 67: tick1 = MiWi_TickGet();
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;incstack = 0
  2231  0128AA  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  2232  0128AE  C06D  F0A5         	movff	?_MiWi_TickGet,freezer_feature@tick1
  2233  0128B2  C06E  F0A6         	movff	?_MiWi_TickGet+1,freezer_feature@tick1+1
  2234  0128B6  C06F  F0A7         	movff	?_MiWi_TickGet+2,freezer_feature@tick1+2
  2235  0128BA  C070  F0A8         	movff	?_MiWi_TickGet+3,freezer_feature@tick1+3
  2236  0128BE                     l1155:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;task.c: 69: {
  2240                           ;task.c: 70: tick2 = MiWi_TickGet();
  2241  0128BE  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  2242  0128C2  C06D  F0A9         	movff	?_MiWi_TickGet,freezer_feature@tick2
  2243  0128C6  C06E  F0AA         	movff	?_MiWi_TickGet+1,freezer_feature@tick2+1
  2244  0128CA  C06F  F0AB         	movff	?_MiWi_TickGet+2,freezer_feature@tick2+2
  2245  0128CE  C070  F0AC         	movff	?_MiWi_TickGet+3,freezer_feature@tick2+3
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;task.c: 71: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
  2249  0128D2  51A5               	movf	freezer_feature@tick1& (0+255),w,b
  2250  0128D4  5DA9               	subwf	freezer_feature@tick2& (0+255),w,b
  2251  0128D6  6FA1               	movwf	??_freezer_feature& (0+255),b
  2252  0128D8  51A6               	movf	(freezer_feature@tick1+1)& (0+255),w,b
  2253  0128DA  59AA               	subwfb	(freezer_feature@tick2+1)& (0+255),w,b
  2254  0128DC  6FA2               	movwf	(??_freezer_feature+1)& (0+255),b
  2255  0128DE  51A7               	movf	(freezer_feature@tick1+2)& (0+255),w,b
  2256  0128E0  59AB               	subwfb	(freezer_feature@tick2+2)& (0+255),w,b
  2257  0128E2  6FA3               	movwf	(??_freezer_feature+2)& (0+255),b
  2258  0128E4  51A8               	movf	(freezer_feature@tick1+3)& (0+255),w,b
  2259  0128E6  59AC               	subwfb	(freezer_feature@tick2+3)& (0+255),w,b
  2260  0128E8  6FA4               	movwf	(??_freezer_feature+3)& (0+255),b
  2261  0128EA  51A4               	movf	(??_freezer_feature+3)& (0+255),w,b
  2262  0128EC  E121               	bnz	l13258
  2263  0128EE  0ED1               	movlw	209
  2264  0128F0  5DA1               	subwf	??_freezer_feature& (0+255),w,b
  2265  0128F2  0E12               	movlw	18
  2266  0128F4  59A2               	subwfb	(??_freezer_feature+1)& (0+255),w,b
  2267  0128F6  0E13               	movlw	19
  2268  0128F8  59A3               	subwfb	(??_freezer_feature+2)& (0+255),w,b
  2269  0128FA  E21A               	bc	l13258
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;task.c: 73: switch_val = ButtonPressed ();
  2273  0128FC  ECC8  F093         	call	_ButtonPressed	;wreg free
  2274  012900  6FAD               	movwf	freezer_feature@switch_val& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;task.c: 74: if(switch_val == 2)
  2278  012902  0E02               	movlw	2
  2279  012904  19AD               	xorwf	freezer_feature@switch_val& (0+255),w,b
  2280  012906  E112               	bnz	l1158
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;task.c: 75: {
  2284                           ;task.c: 76: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  2285  012908  0E4E               	movlw	low STR_15
  2286  01290A  6F9C               	movwf	LCDDisplay@text& (0+255),b
  2287  01290C  0EFF               	movlw	high STR_15
  2288  01290E  6F9D               	movwf	(LCDDisplay@text+1)& (0+255),b
  2289  012910  0E00               	movlw	0
  2290  012912  6F9E               	movwf	LCDDisplay@value& (0+255),b
  2291  012914  6F9F               	movwf	LCDDisplay@delay& (0+255),b
  2292  012916  EC04  F098         	call	_LCDDisplay	;wreg free
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;task.c: 77: DELAY_ms(1000);
  2296  01291A  0E03               	movlw	3
  2297  01291C  6F6E               	movwf	(DELAY_ms@ms+1)& (0+255),b
  2298  01291E  0EE8               	movlw	232
  2299  012920  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2300  012922  EC40  F091         	call	_DELAY_ms	;wreg free
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;task.c: 78: return_val = 1;
  2304  012926  0E01               	movlw	1
  2305  012928  6FAE               	movwf	freezer_feature@return_val& (0+255),b
  2306                           
  2307                           ;task.c: 79: }
  2308  01292A  D7C9               	goto	l1155
  2309  01292C                     l1158:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;task.c: 80: else
  2313                           ;task.c: 81: {
  2314                           ;task.c: 82: return_val = 0;
  2315  01292C  6BAE               	clrf	freezer_feature@return_val& (0+255),b
  2316  01292E  D7C7               	goto	l1155
  2317  012930                     l13258:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;task.c: 83: }
  2321                           ;task.c: 85: }
  2322                           ;task.c: 86: return return_val;
  2323  012930  51AE               	movf	freezer_feature@return_val& (0+255),w,b
  2324                           
  2325                           ; BSR set to: 0
  2326  012932  0012               	return		;funcret
  2327  012934                     __end_of_freezer_feature:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           postdec1	equ	0xFE5
  2336                           fsr1l	equ	0xFE1
  2337                           
  2338 ;; *************** function _SYSTEM_Initialize *****************
  2339 ;; Defined at:
  2340 ;;		line 53 in file "../src/system_config/pic18exp_pic18f87j11_89xa/system.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    9
  2361 ;; This function calls:
  2362 ;;		_LCD_Initialize
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text2
  2369  012D36                     __ptext2:
  2370                           	opt stack 0
  2371  012D36                     _SYSTEM_Initialize:
  2372                           	opt stack 21
  2373                           
  2374                           ;system.c: 57: OSCCON = 0x70;
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;incstack = 0
  2378  012D36  0E70               	movlw	112
  2379  012D38  6ED3               	movwf	4051,c	;volatile
  2380                           
  2381                           ;system.c: 62: WDTCONbits.ADSHR = 1;
  2382  012D3A  88C0               	bsf	4032,4,c	;volatile
  2383                           
  2384                           ;system.c: 63: ANCON0 = 0b11011111;
  2385  012D3C  0EDF               	movlw	223
  2386  012D3E  6EC1               	movwf	4033,c	;volatile
  2387                           
  2388                           ;system.c: 64: ANCON1 = 0xFF;
  2389  012D40  68C2               	setf	4034,c	;volatile
  2390                           
  2391                           ;system.c: 65: WDTCONbits.ADSHR = 0;
  2392  012D42  98C0               	bcf	4032,4,c	;volatile
  2393                           
  2394                           ;system.c: 67: TRISA = 0xFF;
  2395  012D44  6892               	setf	3986,c	;volatile
  2396                           
  2397                           ;system.c: 68: TRISB = 0xFF;
  2398  012D46  6893               	setf	3987,c	;volatile
  2399                           
  2400                           ;system.c: 69: TRISC = 0xFF;
  2401  012D48  6894               	setf	3988,c	;volatile
  2402                           
  2403                           ;system.c: 70: TRISD = 0x00;
  2404  012D4A  6A95               	clrf	3989,c	;volatile
  2405                           
  2406                           ;system.c: 72: LATA = 0;
  2407  012D4C  6A89               	clrf	3977,c	;volatile
  2408                           
  2409                           ;system.c: 73: LATB = 0;
  2410  012D4E  6A8A               	clrf	3978,c	;volatile
  2411                           
  2412                           ;system.c: 74: LATC = 0;
  2413  012D50  6A8B               	clrf	3979,c	;volatile
  2414                           
  2415                           ;system.c: 75: LATD = 0;
  2416  012D52  6A8C               	clrf	3980,c	;volatile
  2417                           
  2418                           ;system.c: 78: TRISBbits.TRISB0 = 1;
  2419  012D54  8093               	bsf	3987,0,c	;volatile
  2420                           
  2421                           ;system.c: 79: TRISAbits.TRISA5 = 1;
  2422  012D56  8A92               	bsf	3986,5,c	;volatile
  2423                           
  2424                           ;system.c: 80: TRISDbits.TRISD7 = 0;
  2425  012D58  9E95               	bcf	3989,7,c	;volatile
  2426                           
  2427                           ;system.c: 81: TRISDbits.TRISD6 = 0;
  2428  012D5A  9C95               	bcf	3989,6,c	;volatile
  2429                           
  2430                           ;system.c: 86: TRISBbits.TRISB5 = 1;
  2431  012D5C  8A93               	bsf	3987,5,c	;volatile
  2432                           
  2433                           ;system.c: 89: TRISCbits.TRISC4 = 1;
  2434  012D5E  8894               	bsf	3988,4,c	;volatile
  2435                           
  2436                           ;system.c: 90: TRISCbits.TRISC5 = 0;
  2437  012D60  9A94               	bcf	3988,5,c	;volatile
  2438                           
  2439                           ;system.c: 91: TRISCbits.TRISC3 = 0;
  2440  012D62  9694               	bcf	3988,3,c	;volatile
  2441                           
  2442                           ;system.c: 97: SSP1STAT = 0xC0;
  2443  012D64  0EC0               	movlw	192
  2444  012D66  6EC7               	movwf	4039,c	;volatile
  2445                           
  2446                           ;system.c: 98: SSP1CON1 = 0x21;
  2447  012D68  0E21               	movlw	33
  2448  012D6A  6EC6               	movwf	4038,c	;volatile
  2449                           
  2450                           ;system.c: 109: TRISEbits.TRISE3 = 0;
  2451  012D6C  9696               	bcf	3990,3,c	;volatile
  2452                           
  2453                           ;system.c: 110: TRISCbits.TRISC2 = 0;
  2454  012D6E  9494               	bcf	3988,2,c	;volatile
  2455                           
  2456                           ;system.c: 111: TRISDbits.TRISD7 = 0;
  2457  012D70  9E95               	bcf	3989,7,c	;volatile
  2458                           
  2459                           ;system.c: 112: TRISDbits.TRISD6 = 0;
  2460  012D72  9C95               	bcf	3989,6,c	;volatile
  2461                           
  2462                           ;system.c: 113: INTCON3bits.INT3IF = 0;
  2463  012D74  94F0               	bcf	intcon3,2,c	;volatile
  2464                           
  2465                           ;system.c: 114: INTCON3bits.INT3IE = 1;
  2466  012D76  8AF0               	bsf	intcon3,5,c	;volatile
  2467                           
  2468                           ;system.c: 120: LATEbits.LATE3 = 1;
  2469  012D78  868D               	bsf	3981,3,c	;volatile
  2470                           
  2471                           ;system.c: 121: LATCbits.LATC2 = 1;
  2472  012D7A  848B               	bsf	3979,2,c	;volatile
  2473                           
  2474                           ;system.c: 123: INTCONbits.GIEH = 1;
  2475  012D7C  8EF2               	bsf	intcon,7,c	;volatile
  2476                           
  2477                           ;system.c: 125: SSP1STAT = 0x40;
  2478  012D7E  0E40               	movlw	64
  2479  012D80  6EC7               	movwf	4039,c	;volatile
  2480                           
  2481                           ;system.c: 126: SSP1CON1 = 0x21;
  2482  012D82  0E21               	movlw	33
  2483  012D84  6EC6               	movwf	4038,c	;volatile
  2484                           
  2485                           ;system.c: 129: INTCON2bits.INTEDG3 = 1;
  2486  012D86  86F1               	bsf	intcon2,3,c	;volatile
  2487                           
  2488                           ;system.c: 135: TRISAbits.TRISA3 = 0;
  2489  012D88  9692               	bcf	3986,3,c	;volatile
  2490                           
  2491                           ;system.c: 136: LATAbits.LATA3 = 1;
  2492  012D8A  8689               	bsf	3977,3,c	;volatile
  2493                           
  2494                           ;system.c: 142: TRISEbits.TRISE2 = 0;
  2495  012D8C  9496               	bcf	3990,2,c	;volatile
  2496                           
  2497                           ;system.c: 143: LATEbits.LATE2 = 1;
  2498  012D8E  848D               	bsf	3981,2,c	;volatile
  2499                           
  2500                           ;system.c: 148: INTCONbits.GIEH = 1;
  2501  012D90  8EF2               	bsf	intcon,7,c	;volatile
  2502                           
  2503                           ;system.c: 149: INTCON3bits.INT3IE = 1;
  2504  012D92  8AF0               	bsf	intcon3,5,c	;volatile
  2505                           
  2506                           ;system.c: 152: LCD_Initialize();
  2507  012D94  EFDA  F094         	goto	_LCD_Initialize	;wreg free
  2508  012D98                     __end_of_SYSTEM_Initialize:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           intcon	equ	0xFF2
  2515                           intcon2	equ	0xFF1
  2516                           intcon3	equ	0xFF0
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1l	equ	0xFE1
  2521                           
  2522 ;; *************** function _LCD_Initialize *****************
  2523 ;; Defined at:
  2524 ;;		line 175 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    8
  2545 ;; This function calls:
  2546 ;;		_DELAY_ms
  2547 ;;		_LCDInitPortA
  2548 ;;		_LCDInitPortB
  2549 ;;		_LCDInitSPI
  2550 ;;		_LCDInitWrite
  2551 ;;		_LCDWritePortA
  2552 ;; This function is called by:
  2553 ;;		_SYSTEM_Initialize
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text3
  2558  0129B4                     __ptext3:
  2559                           	opt stack 0
  2560  0129B4                     _LCD_Initialize:
  2561                           	opt stack 21
  2562                           
  2563                           ;lcd.c: 178: (TRISAbits.TRISA2) = 0;
  2564                           
  2565                           ;incstack = 0
  2566  0129B4  9492               	bcf	3986,2,c	;volatile
  2567                           
  2568                           ;lcd.c: 179: (LATAbits.LATA2) = 1;
  2569  0129B6  8489               	bsf	3977,2,c	;volatile
  2570                           
  2571                           ;lcd.c: 180: DELAY_ms(10);
  2572  0129B8  0100               	movlb	0	; () banked
  2573  0129BA  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2574  0129BC  0E0A               	movlw	10
  2575  0129BE  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2576  0129C0  EC40  F091         	call	_DELAY_ms	;wreg free
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;lcd.c: 182: (TRISFbits.TRISF6) = 0;
  2580  0129C4  9C97               	bcf	3991,6,c	;volatile
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;lcd.c: 183: (LATFbits.LATF6) = 0;
  2584  0129C6  9C8E               	bcf	3982,6,c	;volatile
  2585                           
  2586                           ;lcd.c: 184: DELAY_ms(10);
  2587  0129C8  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2588  0129CA  0E0A               	movlw	10
  2589  0129CC  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2590  0129CE  EC40  F091         	call	_DELAY_ms	;wreg free
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;lcd.c: 185: (LATFbits.LATF6) = 1;
  2594  0129D2  8C8E               	bsf	3982,6,c	;volatile
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;lcd.c: 188: LCDInitSPI();
  2598  0129D4  EC45  F09B         	call	_LCDInitSPI	;wreg free
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;lcd.c: 191: LCDInitPortA();
  2602  0129D8  ECB9  F099         	call	_LCDInitPortA	;wreg free
  2603                           
  2604                           ;lcd.c: 194: LCDInitPortB();
  2605  0129DC  EC89  F099         	call	_LCDInitPortB	;wreg free
  2606                           
  2607                           ;lcd.c: 196: LCDWritePortA(0);
  2608  0129E0  0E00               	movlw	0
  2609  0129E2  EC24  F099         	call	_LCDWritePortA
  2610                           
  2611                           ;lcd.c: 199: DELAY_ms(10);
  2612  0129E6  0100               	movlb	0	; () banked
  2613  0129E8  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2614  0129EA  0E0A               	movlw	10
  2615  0129EC  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2616  0129EE  EC40  F091         	call	_DELAY_ms	;wreg free
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;lcd.c: 200: LCDInitWrite(0x3C);
  2620  0129F2  0E3C               	movlw	60
  2621  0129F4  ECEF  F098         	call	_LCDInitWrite
  2622                           
  2623                           ;lcd.c: 202: DELAY_ms(10);
  2624  0129F8  0100               	movlb	0	; () banked
  2625  0129FA  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2626  0129FC  0E0A               	movlw	10
  2627  0129FE  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2628  012A00  EC40  F091         	call	_DELAY_ms	;wreg free
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;lcd.c: 203: LCDInitWrite(0x0C);
  2632  012A04  0E0C               	movlw	12
  2633  012A06  ECEF  F098         	call	_LCDInitWrite
  2634                           
  2635                           ;lcd.c: 205: DELAY_ms(10);
  2636  012A0A  0100               	movlb	0	; () banked
  2637  012A0C  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2638  012A0E  0E0A               	movlw	10
  2639  012A10  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2640  012A12  EC40  F091         	call	_DELAY_ms	;wreg free
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;lcd.c: 206: LCDInitWrite(0x01);
  2644  012A16  0E01               	movlw	1
  2645  012A18  ECEF  F098         	call	_LCDInitWrite
  2646                           
  2647                           ;lcd.c: 208: DELAY_ms(10);
  2648  012A1C  0100               	movlb	0	; () banked
  2649  012A1E  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2650  012A20  0E0A               	movlw	10
  2651  012A22  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  2652  012A24  EC40  F091         	call	_DELAY_ms	;wreg free
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;lcd.c: 209: LCDInitWrite(0x0C);
  2656  012A28  0E0C               	movlw	12
  2657  012A2A  EFEF  F098         	goto	_LCDInitWrite
  2658  012A2E                     __end_of_LCD_Initialize:
  2659                           	opt stack 0
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           intcon	equ	0xFF2
  2665                           intcon2	equ	0xFF1
  2666                           intcon3	equ	0xFF0
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1l	equ	0xFE1
  2671                           
  2672 ;; *************** function _LCDInitSPI *****************
  2673 ;; Defined at:
  2674 ;;		line 41 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : F/0
  2685 ;;		On exit  : F/0
  2686 ;;		Unchanged: F/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    5
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_LCD_Initialize
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text4
  2703  01368A                     __ptext4:
  2704                           	opt stack 0
  2705  01368A                     _LCDInitSPI:
  2706                           	opt stack 23
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
  2710                           
  2711                           ;incstack = 0
  2712  01368A  9A94               	bcf	3988,5,c	;volatile
  2713                           
  2714                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
  2715  01368C  9694               	bcf	3988,3,c	;volatile
  2716                           
  2717                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
  2718  01368E  969E               	bcf	3998,3,c	;volatile
  2719                           
  2720                           ; BSR set to: 0
  2721  013690  0012               	return		;funcret
  2722  013692                     __end_of_LCDInitSPI:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           intcon	equ	0xFF2
  2729                           intcon2	equ	0xFF1
  2730                           intcon3	equ	0xFF0
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           
  2736 ;; *************** function _LCDInitPortB *****************
  2737 ;; Defined at:
  2738 ;;		line 60 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  preRFIE         1   14[BANK0 ] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    6
  2759 ;; This function calls:
  2760 ;;		_SPIPut
  2761 ;; This function is called by:
  2762 ;;		_LCD_Initialize
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text5
  2767  013312                     __ptext5:
  2768                           	opt stack 0
  2769  013312                     _LCDInitPortB:
  2770                           	opt stack 22
  2771                           
  2772                           ;lcd.c: 62: uint8_t preRFIE = INTCON3bits.INT3IE;
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;incstack = 0
  2776  013312  0E00               	movlw	0
  2777  013314  BAF0               	btfsc	intcon3,5,c	;volatile
  2778  013316  0E01               	movlw	1
  2779  013318  0100               	movlb	0	; () banked
  2780  01331A  6F6E               	movwf	LCDInitPortB@preRFIE& (0+255),b
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;lcd.c: 63: INTCON3bits.INT3IE = 0;
  2784  01331C  9AF0               	bcf	intcon3,5,c	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  2788  01331E  9489               	bcf	3977,2,c	;volatile
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;lcd.c: 65: SPIPut(0x40);
  2792  013320  0E40               	movlw	64
  2793  013322  ECEB  F09A         	call	_SPIPut
  2794                           
  2795                           ;lcd.c: 66: SPIPut(0x01);
  2796  013326  0E01               	movlw	1
  2797  013328  ECEB  F09A         	call	_SPIPut
  2798                           
  2799                           ;lcd.c: 67: SPIPut(0x00);
  2800  01332C  0E00               	movlw	0
  2801  01332E  ECEB  F09A         	call	_SPIPut
  2802                           
  2803                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  2804  013332  8489               	bsf	3977,2,c	;volatile
  2805                           
  2806                           ;lcd.c: 69: INTCON3bits.INT3IE = preRFIE;
  2807  013334  0100               	movlb	0	; () banked
  2808  013336  B16E               	btfsc	LCDInitPortB@preRFIE& (0+255),0,b
  2809  013338  D002               	bra	u12705
  2810  01333A  9AF0               	bcf	intcon3,5,c	;volatile
  2811  01333C  D001               	bra	u12706
  2812  01333E                     u12705:
  2813  01333E  8AF0               	bsf	intcon3,5,c	;volatile
  2814  013340                     u12706:
  2815  013340  0012               	return		;funcret
  2816  013342                     __end_of_LCDInitPortB:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           intcon	equ	0xFF2
  2823                           intcon2	equ	0xFF1
  2824                           intcon3	equ	0xFF0
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1l	equ	0xFE1
  2829                           
  2830 ;; *************** function _LCDInitPortA *****************
  2831 ;; Defined at:
  2832 ;;		line 48 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  preRFIE         1   14[BANK0 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : F/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;Total ram usage:        1 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    6
  2853 ;; This function calls:
  2854 ;;		_SPIPut
  2855 ;; This function is called by:
  2856 ;;		_LCD_Initialize
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text6
  2861  013372                     __ptext6:
  2862                           	opt stack 0
  2863  013372                     _LCDInitPortA:
  2864                           	opt stack 22
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;lcd.c: 50: uint8_t preRFIE = INTCON3bits.INT3IE;
  2868                           
  2869                           ;incstack = 0
  2870  013372  0E00               	movlw	0
  2871  013374  BAF0               	btfsc	intcon3,5,c	;volatile
  2872  013376  0E01               	movlw	1
  2873  013378  6F6E               	movwf	LCDInitPortA@preRFIE& (0+255),b
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;lcd.c: 51: INTCON3bits.INT3IE = 0;
  2877  01337A  9AF0               	bcf	intcon3,5,c	;volatile
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  2881  01337C  9489               	bcf	3977,2,c	;volatile
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;lcd.c: 53: SPIPut(0x40);
  2885  01337E  0E40               	movlw	64
  2886  013380  ECEB  F09A         	call	_SPIPut
  2887                           
  2888                           ;lcd.c: 54: SPIPut(0x00);
  2889  013384  0E00               	movlw	0
  2890  013386  ECEB  F09A         	call	_SPIPut
  2891                           
  2892                           ;lcd.c: 55: SPIPut(0x00);
  2893  01338A  0E00               	movlw	0
  2894  01338C  ECEB  F09A         	call	_SPIPut
  2895                           
  2896                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  2897  013390  8489               	bsf	3977,2,c	;volatile
  2898                           
  2899                           ;lcd.c: 57: INTCON3bits.INT3IE = preRFIE;
  2900  013392  0100               	movlb	0	; () banked
  2901  013394  B16E               	btfsc	LCDInitPortA@preRFIE& (0+255),0,b
  2902  013396  D002               	bra	u12695
  2903  013398  9AF0               	bcf	intcon3,5,c	;volatile
  2904  01339A  D001               	bra	u12696
  2905  01339C                     u12695:
  2906  01339C  8AF0               	bsf	intcon3,5,c	;volatile
  2907  01339E                     u12696:
  2908  01339E  0012               	return		;funcret
  2909  0133A0                     __end_of_LCDInitPortA:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           intcon	equ	0xFF2
  2916                           intcon2	equ	0xFF1
  2917                           intcon3	equ	0xFF0
  2918                           postinc0	equ	0xFEE
  2919                           wreg	equ	0xFE8
  2920                           postdec1	equ	0xFE5
  2921                           fsr1l	equ	0xFE1
  2922                           
  2923 ;; *************** function _Run_Demo *****************
  2924 ;; Defined at:
  2925 ;;		line 232 in file "../src/task.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : F/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:   18
  2946 ;; This function calls:
  2947 ;;		_run_star_demo
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text7
  2954  013698                     __ptext7:
  2955                           	opt stack 0
  2956  013698                     _Run_Demo:
  2957                           	opt stack 12
  2958                           
  2959                           ;task.c: 238: run_star_demo();
  2960                           
  2961                           ;incstack = 0
  2962  013698  EF55  F087         	goto	_run_star_demo	;wreg free
  2963  01369C                     __end_of_Run_Demo:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           intcon	equ	0xFF2
  2970                           intcon2	equ	0xFF1
  2971                           intcon3	equ	0xFF0
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           postdec1	equ	0xFE5
  2975                           fsr1l	equ	0xFE1
  2976                           
  2977 ;; *************** function _run_star_demo *****************
  2978 ;; Defined at:
  2979 ;;		line 90 in file "../src/star_demo.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  switch_val      1  123[BANK0 ] unsigned char 
  2984 ;;  sw_layer_ack    1  120[BANK0 ] unsigned char 
  2985 ;;  mac_ack_stat    1    0        unsigned char 
  2986 ;;  select_ed       1  124[BANK0 ] unsigned char 
  2987 ;;  update_ed       1  121[BANK0 ] unsigned char 
  2988 ;;  PressedButto    1  122[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : F/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:       12 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:   17
  3005 ;; This function calls:
  3006 ;;		_ButtonPressed
  3007 ;;		_DELAY_ms
  3008 ;;		_DemoOutput_UpdateTxRx
  3009 ;;		_LCDDisplay
  3010 ;;		_LCD_Erase
  3011 ;;		_LCD_Update
  3012 ;;		_MiApp_BroadcastPacket
  3013 ;;		_MiApp_EstablishConnection
  3014 ;;		_MiApp_UnicastConnection
  3015 ;;		_MiApp_UnicastStar
  3016 ;;		_MiWi_TickGet
  3017 ;;		_Process_RxMessage
  3018 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3019 ;;		___lbmod
  3020 ;;		_sprintf
  3021 ;; This function is called by:
  3022 ;;		_Run_Demo
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text8
  3027  010EAA                     __ptext8:
  3028                           	opt stack 0
  3029  010EAA                     _run_star_demo:
  3030                           	opt stack 12
  3031                           
  3032                           ;star_demo.c: 92: t1 = MiWi_TickGet ();
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;incstack = 0
  3036  010EAA  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  3037  010EAE  C06D  F183         	movff	?_MiWi_TickGet,_t1
  3038  010EB2  C06E  F184         	movff	?_MiWi_TickGet+1,_t1+1
  3039  010EB6  C06F  F185         	movff	?_MiWi_TickGet+2,_t1+2
  3040  010EBA  C070  F186         	movff	?_MiWi_TickGet+3,_t1+3
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;star_demo.c: 93: display_connections = 1;
  3044  010EBE  0E01               	movlw	1
  3045  010EC0  6E1D               	movwf	_display_connections,c
  3046                           
  3047                           ;star_demo.c: 94: while(display_connections)
  3048  010EC2  D233               	goto	l13164
  3049  010EC4                     l13008:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;star_demo.c: 95: {
  3053                           ;star_demo.c: 97: if (Process_RxMessage ())
  3054  010EC4  EC9B  F097         	call	_Process_RxMessage	;wreg free
  3055  010EC8  0900               	iorlw	0
  3056  010ECA  E001 D1E2          	bnz	l13138
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;star_demo.c: 101: else
  3060                           ;star_demo.c: 102: {
  3061                           ;star_demo.c: 110: uint8_t PressedButton = ButtonPressed();
  3062  010ECE  ECC8  F093         	call	_ButtonPressed	;wreg free
  3063  010ED2  6FDA               	movwf	run_star_demo@PressedButton& (0+255),b
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;star_demo.c: 111: if ( PressedButton == 1 || PressedButton == 2)
  3067  010ED4  05DA               	decf	run_star_demo@PressedButton& (0+255),w,b
  3068  010ED6  E004               	bz	l13018
  3069                           
  3070                           ; BSR set to: 0
  3071  010ED8  0E02               	movlw	2
  3072  010EDA  19DA               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  3073  010EDC  E001 D1D9          	bnz	l13138
  3074  010EE0                     l13018:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;star_demo.c: 112: {
  3078                           ;star_demo.c: 114: if (role == PanCoordinator)
  3079  010EE0  51EB               	movf	_role& (0+255),w,b
  3080  010EE2  E133               	bnz	l1090
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;star_demo.c: 115: {
  3084                           ;star_demo.c: 123: {TxData = 0;};
  3085  010EE4  6BE2               	clrf	_TxData& (0+255),b
  3086                           
  3087                           ;star_demo.c: 124: for(i = 0; i < 21; i++)
  3088  010EE6  6BE4               	clrf	_i& (0+255),b
  3089  010EE8                     l13026:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;star_demo.c: 125: {
  3093                           ;star_demo.c: 126: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3094  010EE8  0E06               	movlw	6
  3095  010EEA  6F6D               	movwf	___lbmod@divisor& (0+255),b
  3096  010EEC  501B               	movf	_TxSynCount,w,c
  3097  010EEE  EC26  F09A         	call	___lbmod
  3098  010EF2  0D15               	mullw	21
  3099  010EF4  0E91               	movlw	low _MiWi
  3100  010EF6  6FD1               	movwf	??_run_star_demo& (0+255),b
  3101  010EF8  0EFD               	movlw	high _MiWi
  3102  010EFA  6FD2               	movwf	(??_run_star_demo+1)& (0+255),b
  3103  010EFC  50F3               	movf	prodl,w,c
  3104  010EFE  27D1               	addwf	??_run_star_demo& (0+255),f,b
  3105  010F00  50F4               	movf	prodh,w,c
  3106  010F02  23D2               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3107  010F04  51E4               	movf	_i& (0+255),w,b
  3108  010F06  27D1               	addwf	??_run_star_demo& (0+255),f,b
  3109  010F08  0E00               	movlw	0
  3110  010F0A  23D2               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3111  010F0C  C0D1  FFF6         	movff	??_run_star_demo,tblptrl
  3112  010F10  C0D2  FFF7         	movff	??_run_star_demo+1,tblptrh
  3113  010F14                     	if	0	;tblptru may be non-zero
  3114  010F14                     	endif
  3115  010F14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3116  010F14  0E00               	movlw	low (__mediumconst shr (0+16))
  3117  010F16  6EF8               	movwf	tblptru,c
  3118  010F18                     	endif
  3119  010F18  0E93               	movlw	low _TxBuffer
  3120  010F1A  25E2               	addwf	_TxData& (0+255),w,b
  3121  010F1C  6ED9               	movwf	fsr2l,c
  3122  010F1E  6ADA               	clrf	fsr2h,c
  3123  010F20  0E01               	movlw	high _TxBuffer
  3124  010F22  22DA               	addwfc	fsr2h,f,c
  3125  010F24  0008               	tblrd		*
  3126  010F26  CFF5 FFDF          	movff	tablat,indf2
  3127                           
  3128                           ; BSR set to: 0
  3129  010F2A  2BE2               	incf	_TxData& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 0
  3132  010F2C  2BE4               	incf	_i& (0+255),f,b
  3133                           
  3134                           ; BSR set to: 0
  3135  010F2E  0E14               	movlw	20
  3136  010F30  65E4               	cpfsgt	_i& (0+255),b
  3137  010F32  D7DA               	goto	l13026
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;star_demo.c: 127: }
  3141                           ;star_demo.c: 128: TxSynCount++;
  3142  010F34  2A1B               	incf	_TxSynCount,f,c
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;star_demo.c: 139: MiApp_BroadcastPacket (0);
  3146  010F36  0E00               	movlw	0
  3147  010F38  EC04  F09B         	call	_MiApp_BroadcastPacket
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;star_demo.c: 142: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  3151  010F3C  C018  F09E         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3152  010F40  2A1A               	incf	_TxNum,f,c
  3153  010F42  501A               	movf	_TxNum,w,c
  3154  010F44  EC2A  F09B         	call	_DemoOutput_UpdateTxRx
  3155                           
  3156                           ;star_demo.c: 144: }
  3157  010F48  D1A4               	goto	l13138
  3158  010F4A                     l1090:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;star_demo.c: 145: else
  3162                           ;star_demo.c: 146: {
  3163                           ;star_demo.c: 148: uint8_t select_ed = 0;
  3164  010F4A  6BDC               	clrf	run_star_demo@select_ed& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;star_demo.c: 149: chk_sel_status = 1;
  3168  010F4C  0E01               	movlw	1
  3169  010F4E  6E1C               	movwf	_chk_sel_status,c
  3170                           
  3171                           ;star_demo.c: 150: bool update_ed = 1;
  3172  010F50  6FD9               	movwf	run_star_demo@update_ed& (0+255),b
  3173                           
  3174                           ;star_demo.c: 151: while(update_ed == 1)
  3175  010F52  D19C               	goto	l13136
  3176  010F54                     l13042:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;star_demo.c: 152: {
  3180                           ;star_demo.c: 154: LCD_Erase();
  3181  010F54  EC4E  F09A         	call	_LCD_Erase	;wreg free
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;star_demo.c: 155: if (myConnectionIndex_in_PanCo == select_ed)
  3185  010F58  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3186  010F5A  19EA               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3187  010F5C  E137               	bnz	l13048
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;star_demo.c: 156: {
  3191                           ;star_demo.c: 157: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  3192                           ;star_demo.c: 158: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3193  010F5E  0EB6               	movlw	low _LCDText
  3194  010F60  6F79               	movwf	sprintf@sp& (0+255),b
  3195  010F62  0E01               	movlw	high _LCDText
  3196  010F64  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  3197  010F66  0E09               	movlw	low STR_9
  3198  010F68  6F7B               	movwf	sprintf@f& (0+255),b
  3199  010F6A  0EFF               	movlw	high STR_9
  3200  010F6C  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  3201  010F6E  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3202  010F70  0D04               	mullw	4
  3203  010F72  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3204  010F74  24F3               	addwf	prodl,w,c
  3205  010F76  6ED9               	movwf	fsr2l,c
  3206  010F78  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3207  010F7A  20F4               	addwfc	prodh,w,c
  3208  010F7C  6EDA               	movwf	fsr2h,c
  3209  010F7E  50DF               	movf	indf2,w,c
  3210  010F80  6F7D               	movwf	(?_sprintf+4)& (0+255),b
  3211  010F82  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  3212  010F84  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3213  010F86  0D04               	mullw	4
  3214  010F88  0E37               	movlw	low _END_DEVICES_Short_Address
  3215  010F8A  24F3               	addwf	prodl,w,c
  3216  010F8C  6ED9               	movwf	fsr2l,c
  3217  010F8E  0E01               	movlw	high _END_DEVICES_Short_Address
  3218  010F90  20F4               	addwfc	prodh,w,c
  3219  010F92  6EDA               	movwf	fsr2h,c
  3220  010F94  50DF               	movf	indf2,w,c
  3221  010F96  6F7F               	movwf	(?_sprintf+6)& (0+255),b
  3222  010F98  6B80               	clrf	(?_sprintf+7)& (0+255),b
  3223  010F9A  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3224  010F9C  0D04               	mullw	4
  3225  010F9E  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3226  010FA0  24F3               	addwf	prodl,w,c
  3227  010FA2  6ED9               	movwf	fsr2l,c
  3228  010FA4  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3229  010FA6  20F4               	addwfc	prodh,w,c
  3230  010FA8  6EDA               	movwf	fsr2h,c
  3231  010FAA  50DF               	movf	indf2,w,c
  3232  010FAC  6F81               	movwf	(?_sprintf+8)& (0+255),b
  3233  010FAE  6B82               	clrf	(?_sprintf+9)& (0+255),b
  3234  010FB0  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3235  010FB2  0D04               	mullw	4
  3236  010FB4  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3237  010FB6  24F3               	addwf	prodl,w,c
  3238  010FB8  6ED9               	movwf	fsr2l,c
  3239  010FBA  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3240  010FBC  20F4               	addwfc	prodh,w,c
  3241  010FBE  6EDA               	movwf	fsr2h,c
  3242  010FC0  50DF               	movf	indf2,w,c
  3243  010FC2  6F83               	movwf	(?_sprintf+10)& (0+255),b
  3244  010FC4  6B84               	clrf	(?_sprintf+11)& (0+255),b
  3245  010FC6  EC00  F080         	call	_sprintf	;wreg free
  3246                           
  3247                           ;star_demo.c: 159: }
  3248  010FCA  D036               	goto	l1097
  3249  010FCC                     l13048:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;star_demo.c: 160: else
  3253                           ;star_demo.c: 161: {
  3254                           ;star_demo.c: 162: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3255                           ;star_demo.c: 163: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3256  010FCC  0EB6               	movlw	low _LCDText
  3257  010FCE  6F79               	movwf	sprintf@sp& (0+255),b
  3258  010FD0  0E01               	movlw	high _LCDText
  3259  010FD2  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  3260  010FD4  0E22               	movlw	low STR_10
  3261  010FD6  6F7B               	movwf	sprintf@f& (0+255),b
  3262  010FD8  0EFF               	movlw	high STR_10
  3263  010FDA  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  3264  010FDC  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3265  010FDE  0D04               	mullw	4
  3266  010FE0  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3267  010FE2  24F3               	addwf	prodl,w,c
  3268  010FE4  6ED9               	movwf	fsr2l,c
  3269  010FE6  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3270  010FE8  20F4               	addwfc	prodh,w,c
  3271  010FEA  6EDA               	movwf	fsr2h,c
  3272  010FEC  50DF               	movf	indf2,w,c
  3273  010FEE  6F7D               	movwf	(?_sprintf+4)& (0+255),b
  3274  010FF0  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  3275  010FF2  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3276  010FF4  0D04               	mullw	4
  3277  010FF6  0E37               	movlw	low _END_DEVICES_Short_Address
  3278  010FF8  24F3               	addwf	prodl,w,c
  3279  010FFA  6ED9               	movwf	fsr2l,c
  3280  010FFC  0E01               	movlw	high _END_DEVICES_Short_Address
  3281  010FFE  20F4               	addwfc	prodh,w,c
  3282  011000  6EDA               	movwf	fsr2h,c
  3283  011002  50DF               	movf	indf2,w,c
  3284  011004  6F7F               	movwf	(?_sprintf+6)& (0+255),b
  3285  011006  6B80               	clrf	(?_sprintf+7)& (0+255),b
  3286  011008  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3287  01100A  0D04               	mullw	4
  3288  01100C  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3289  01100E  24F3               	addwf	prodl,w,c
  3290  011010  6ED9               	movwf	fsr2l,c
  3291  011012  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3292  011014  20F4               	addwfc	prodh,w,c
  3293  011016  6EDA               	movwf	fsr2h,c
  3294  011018  50DF               	movf	indf2,w,c
  3295  01101A  6F81               	movwf	(?_sprintf+8)& (0+255),b
  3296  01101C  6B82               	clrf	(?_sprintf+9)& (0+255),b
  3297  01101E  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3298  011020  0D04               	mullw	4
  3299  011022  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3300  011024  24F3               	addwf	prodl,w,c
  3301  011026  6ED9               	movwf	fsr2l,c
  3302  011028  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3303  01102A  20F4               	addwfc	prodh,w,c
  3304  01102C  6EDA               	movwf	fsr2h,c
  3305  01102E  50DF               	movf	indf2,w,c
  3306  011030  6F83               	movwf	(?_sprintf+10)& (0+255),b
  3307  011032  6B84               	clrf	(?_sprintf+11)& (0+255),b
  3308  011034  EC00  F080         	call	_sprintf	;wreg free
  3309  011038                     l1097:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;star_demo.c: 164: }
  3313                           ;star_demo.c: 165: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3314                           ;star_demo.c: 166: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3315  011038  0EB6               	movlw	low _LCDText
  3316  01103A  6F79               	movwf	sprintf@sp& (0+255),b
  3317  01103C  0E01               	movlw	high _LCDText
  3318  01103E  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  3319  011040  0E22               	movlw	low STR_10
  3320  011042  6F7B               	movwf	sprintf@f& (0+255),b
  3321  011044  0EFF               	movlw	high STR_10
  3322  011046  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  3323  011048  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3324  01104A  0D04               	mullw	4
  3325  01104C  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3326  01104E  24F3               	addwf	prodl,w,c
  3327  011050  6ED9               	movwf	fsr2l,c
  3328  011052  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3329  011054  20F4               	addwfc	prodh,w,c
  3330  011056  6EDA               	movwf	fsr2h,c
  3331  011058  50DF               	movf	indf2,w,c
  3332  01105A  6F7D               	movwf	(?_sprintf+4)& (0+255),b
  3333  01105C  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  3334  01105E  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3335  011060  0D04               	mullw	4
  3336  011062  0E37               	movlw	low _END_DEVICES_Short_Address
  3337  011064  24F3               	addwf	prodl,w,c
  3338  011066  6ED9               	movwf	fsr2l,c
  3339  011068  0E01               	movlw	high _END_DEVICES_Short_Address
  3340  01106A  20F4               	addwfc	prodh,w,c
  3341  01106C  6EDA               	movwf	fsr2h,c
  3342  01106E  50DF               	movf	indf2,w,c
  3343  011070  6F7F               	movwf	(?_sprintf+6)& (0+255),b
  3344  011072  6B80               	clrf	(?_sprintf+7)& (0+255),b
  3345  011074  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3346  011076  0D04               	mullw	4
  3347  011078  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3348  01107A  24F3               	addwf	prodl,w,c
  3349  01107C  6ED9               	movwf	fsr2l,c
  3350  01107E  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3351  011080  20F4               	addwfc	prodh,w,c
  3352  011082  6EDA               	movwf	fsr2h,c
  3353  011084  50DF               	movf	indf2,w,c
  3354  011086  6F81               	movwf	(?_sprintf+8)& (0+255),b
  3355  011088  6B82               	clrf	(?_sprintf+9)& (0+255),b
  3356  01108A  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3357  01108C  0D04               	mullw	4
  3358  01108E  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3359  011090  24F3               	addwf	prodl,w,c
  3360  011092  6ED9               	movwf	fsr2l,c
  3361  011094  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3362  011096  20F4               	addwfc	prodh,w,c
  3363  011098  6EDA               	movwf	fsr2h,c
  3364  01109A  50DF               	movf	indf2,w,c
  3365  01109C  6F83               	movwf	(?_sprintf+10)& (0+255),b
  3366  01109E  6B84               	clrf	(?_sprintf+11)& (0+255),b
  3367  0110A0  EC00  F080         	call	_sprintf	;wreg free
  3368                           
  3369                           ;star_demo.c: 167: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3370  0110A4  0EC6               	movlw	low (_LCDText+16)
  3371  0110A6  6F79               	movwf	sprintf@sp& (0+255),b
  3372  0110A8  0E01               	movlw	high (_LCDText+16)
  3373  0110AA  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  3374  0110AC  0EAB               	movlw	low STR_12
  3375  0110AE  6F7B               	movwf	sprintf@f& (0+255),b
  3376  0110B0  0EFF               	movlw	high STR_12
  3377  0110B2  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  3378  0110B4  EC00  F080         	call	_sprintf	;wreg free
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;star_demo.c: 168: LCD_Update();
  3382  0110B8  EC9A  F094         	call	_LCD_Update	;wreg free
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;star_demo.c: 169: chk_sel_status = 1;
  3386  0110BC  0E01               	movlw	1
  3387  0110BE  6E1C               	movwf	_chk_sel_status,c
  3388                           
  3389                           ;star_demo.c: 171: while(chk_sel_status)
  3390  0110C0  D0E2               	goto	l13134
  3391  0110C2                     l13054:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;star_demo.c: 172: {
  3395                           ;star_demo.c: 174: uint8_t switch_val = ButtonPressed();
  3396  0110C2  ECC8  F093         	call	_ButtonPressed	;wreg free
  3397  0110C6  6FDB               	movwf	run_star_demo@switch_val& (0+255),b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;star_demo.c: 176: Process_RxMessage ();
  3401  0110C8  EC9B  F097         	call	_Process_RxMessage	;wreg free
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;star_demo.c: 177: bool sw_layer_ack_status , mac_ack_status;
  3405                           ;star_demo.c: 178: if(switch_val == 1)
  3406  0110CC  05DB               	decf	run_star_demo@switch_val& (0+255),w,b
  3407  0110CE  E001 D0BE          	bnz	l13124
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;star_demo.c: 179: {
  3411                           ;star_demo.c: 180: update_ed = 0;
  3412  0110D2  6BD9               	clrf	run_star_demo@update_ed& (0+255),b
  3413                           
  3414                           ;star_demo.c: 182: TxSynCount2++;
  3415  0110D4  6A1C               	clrf	_chk_sel_status,c
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;star_demo.c: 183: if (myConnectionIndex_in_PanCo == select_ed)
  3419  0110D6  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3420  0110D8  19EA               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3421  0110DA  E12E               	bnz	l1101
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;star_demo.c: 184: {
  3425                           ;star_demo.c: 185: {TxData = 0;};
  3426  0110DC  6BE2               	clrf	_TxData& (0+255),b
  3427                           
  3428                           ;star_demo.c: 186: for (i = 0 ; i < 21 ; i++)
  3429  0110DE  6BE4               	clrf	_i& (0+255),b
  3430  0110E0                     l13070:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;star_demo.c: 187: {
  3434                           ;star_demo.c: 188: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3435  0110E0  0E06               	movlw	6
  3436  0110E2  6F6D               	movwf	___lbmod@divisor& (0+255),b
  3437  0110E4  501B               	movf	_TxSynCount,w,c
  3438  0110E6  EC26  F09A         	call	___lbmod
  3439  0110EA  0D15               	mullw	21
  3440  0110EC  0E91               	movlw	low _MiWi
  3441  0110EE  6FD1               	movwf	??_run_star_demo& (0+255),b
  3442  0110F0  0EFD               	movlw	high _MiWi
  3443  0110F2  6FD2               	movwf	(??_run_star_demo+1)& (0+255),b
  3444  0110F4  50F3               	movf	prodl,w,c
  3445  0110F6  27D1               	addwf	??_run_star_demo& (0+255),f,b
  3446  0110F8  50F4               	movf	prodh,w,c
  3447  0110FA  23D2               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3448  0110FC  51E4               	movf	_i& (0+255),w,b
  3449  0110FE  27D1               	addwf	??_run_star_demo& (0+255),f,b
  3450  011100  0E00               	movlw	0
  3451  011102  23D2               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3452  011104  C0D1  FFF6         	movff	??_run_star_demo,tblptrl
  3453  011108  C0D2  FFF7         	movff	??_run_star_demo+1,tblptrh
  3454  01110C                     	if	0	;tblptru may be non-zero
  3455  01110C                     	endif
  3456  01110C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3457  01110C  0E00               	movlw	low (__mediumconst shr (0+16))
  3458  01110E  6EF8               	movwf	tblptru,c
  3459  011110                     	endif
  3460  011110  0E93               	movlw	low _TxBuffer
  3461  011112  25E2               	addwf	_TxData& (0+255),w,b
  3462  011114  6ED9               	movwf	fsr2l,c
  3463  011116  6ADA               	clrf	fsr2h,c
  3464  011118  0E01               	movlw	high _TxBuffer
  3465  01111A  22DA               	addwfc	fsr2h,f,c
  3466  01111C  0008               	tblrd		*
  3467  01111E  CFF5 FFDF          	movff	tablat,indf2
  3468                           
  3469                           ; BSR set to: 0
  3470  011122  2BE2               	incf	_TxData& (0+255),f,b
  3471                           
  3472                           ; BSR set to: 0
  3473  011124  2BE4               	incf	_i& (0+255),f,b
  3474                           
  3475                           ; BSR set to: 0
  3476  011126  0E14               	movlw	20
  3477  011128  65E4               	cpfsgt	_i& (0+255),b
  3478  01112A  D7DA               	goto	l13070
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;star_demo.c: 189: }
  3482                           ;star_demo.c: 196: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3483  01112C  0E00               	movlw	0
  3484  01112E  6BA2               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3485  011130  ECB8  F098         	call	_MiApp_UnicastConnection
  3486  011134                     l13080:
  3487                           
  3488                           ;star_demo.c: 198: TxNum++;
  3489  011134  2A1A               	incf	_TxNum,f,c
  3490                           
  3491                           ;star_demo.c: 199: }
  3492  011136  D07C               	goto	l1104
  3493  011138                     l1101:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;star_demo.c: 201: else
  3497                           ;star_demo.c: 202: {
  3498                           ;star_demo.c: 207: {TxData = 0;};
  3499  011138  6BE2               	clrf	_TxData& (0+255),b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;star_demo.c: 208: TxBuffer[TxData++] = 0xCC;
  3503  01113A  0E93               	movlw	low _TxBuffer
  3504  01113C  25E2               	addwf	_TxData& (0+255),w,b
  3505  01113E  6ED9               	movwf	fsr2l,c
  3506  011140  6ADA               	clrf	fsr2h,c
  3507  011142  0E01               	movlw	high _TxBuffer
  3508  011144  22DA               	addwfc	fsr2h,f,c
  3509  011146  0ECC               	movlw	204
  3510  011148  6EDF               	movwf	indf2,c
  3511                           
  3512                           ; BSR set to: 0
  3513  01114A  2BE2               	incf	_TxData& (0+255),f,b
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;star_demo.c: 209: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3517  01114C  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3518  01114E  0D04               	mullw	4
  3519  011150  0E37               	movlw	low _END_DEVICES_Short_Address
  3520  011152  24F3               	addwf	prodl,w,c
  3521  011154  6ED9               	movwf	fsr2l,c
  3522  011156  0E01               	movlw	high _END_DEVICES_Short_Address
  3523  011158  20F4               	addwfc	prodh,w,c
  3524  01115A  6EDA               	movwf	fsr2h,c
  3525  01115C  0E93               	movlw	low _TxBuffer
  3526  01115E  25E2               	addwf	_TxData& (0+255),w,b
  3527  011160  6EE1               	movwf	fsr1l,c
  3528  011162  6AE2               	clrf	fsr1h,c
  3529  011164  0E01               	movlw	high _TxBuffer
  3530  011166  22E2               	addwfc	fsr1h,f,c
  3531  011168  CFDF FFE7          	movff	indf2,indf1
  3532                           
  3533                           ; BSR set to: 0
  3534  01116C  2BE2               	incf	_TxData& (0+255),f,b
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;star_demo.c: 210: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3538  01116E  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3539  011170  0D04               	mullw	4
  3540  011172  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3541  011174  24F3               	addwf	prodl,w,c
  3542  011176  6ED9               	movwf	fsr2l,c
  3543  011178  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3544  01117A  20F4               	addwfc	prodh,w,c
  3545  01117C  6EDA               	movwf	fsr2h,c
  3546  01117E  0E93               	movlw	low _TxBuffer
  3547  011180  25E2               	addwf	_TxData& (0+255),w,b
  3548  011182  6EE1               	movwf	fsr1l,c
  3549  011184  6AE2               	clrf	fsr1h,c
  3550  011186  0E01               	movlw	high _TxBuffer
  3551  011188  22E2               	addwfc	fsr1h,f,c
  3552  01118A  CFDF FFE7          	movff	indf2,indf1
  3553                           
  3554                           ; BSR set to: 0
  3555  01118E  2BE2               	incf	_TxData& (0+255),f,b
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;star_demo.c: 211: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3559  011190  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3560  011192  0D04               	mullw	4
  3561  011194  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3562  011196  24F3               	addwf	prodl,w,c
  3563  011198  6ED9               	movwf	fsr2l,c
  3564  01119A  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3565  01119C  20F4               	addwfc	prodh,w,c
  3566  01119E  6EDA               	movwf	fsr2h,c
  3567  0111A0  0E93               	movlw	low _TxBuffer
  3568  0111A2  25E2               	addwf	_TxData& (0+255),w,b
  3569  0111A4  6EE1               	movwf	fsr1l,c
  3570  0111A6  6AE2               	clrf	fsr1h,c
  3571  0111A8  0E01               	movlw	high _TxBuffer
  3572  0111AA  22E2               	addwfc	fsr1h,f,c
  3573  0111AC  CFDF FFE7          	movff	indf2,indf1
  3574                           
  3575                           ; BSR set to: 0
  3576  0111B0  2BE2               	incf	_TxData& (0+255),f,b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;star_demo.c: 212: for (i = 4 ; i < 25 ; i++)
  3580  0111B2  0E04               	movlw	4
  3581  0111B4  6FE4               	movwf	_i& (0+255),b
  3582  0111B6                     l13104:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;star_demo.c: 213: {
  3586                           ;star_demo.c: 214: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3587  0111B6  0EFC               	movlw	252
  3588  0111B8  6FD1               	movwf	??_run_star_demo& (0+255),b
  3589  0111BA  69D2               	setf	(??_run_star_demo+1)& (0+255),b
  3590  0111BC  0E06               	movlw	6
  3591  0111BE  6F6D               	movwf	___lbmod@divisor& (0+255),b
  3592  0111C0  501B               	movf	_TxSynCount,w,c
  3593  0111C2  EC26  F09A         	call	___lbmod
  3594  0111C6  0D15               	mullw	21
  3595  0111C8  0E91               	movlw	low _MiWi
  3596  0111CA  6FD3               	movwf	(??_run_star_demo+2)& (0+255),b
  3597  0111CC  0EFD               	movlw	high _MiWi
  3598  0111CE  6FD4               	movwf	(??_run_star_demo+3)& (0+255),b
  3599  0111D0  50F3               	movf	prodl,w,c
  3600  0111D2  27D3               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3601  0111D4  50F4               	movf	prodh,w,c
  3602  0111D6  23D4               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3603  0111D8  51E4               	movf	_i& (0+255),w,b
  3604  0111DA  27D3               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3605  0111DC  0E00               	movlw	0
  3606  0111DE  23D4               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3607  0111E0  51D1               	movf	??_run_star_demo& (0+255),w,b
  3608  0111E2  27D3               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3609  0111E4  51D2               	movf	(??_run_star_demo+1)& (0+255),w,b
  3610  0111E6  23D4               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3611  0111E8  C0D3  FFF6         	movff	??_run_star_demo+2,tblptrl
  3612  0111EC  C0D4  FFF7         	movff	??_run_star_demo+3,tblptrh
  3613  0111F0                     	if	0	;tblptru may be non-zero
  3614  0111F0                     	endif
  3615  0111F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3616  0111F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3617  0111F2  6EF8               	movwf	tblptru,c
  3618  0111F4                     	endif
  3619  0111F4  0E93               	movlw	low _TxBuffer
  3620  0111F6  25E2               	addwf	_TxData& (0+255),w,b
  3621  0111F8  6ED9               	movwf	fsr2l,c
  3622  0111FA  6ADA               	clrf	fsr2h,c
  3623  0111FC  0E01               	movlw	high _TxBuffer
  3624  0111FE  22DA               	addwfc	fsr2h,f,c
  3625  011200  0008               	tblrd		*
  3626  011202  CFF5 FFDF          	movff	tablat,indf2
  3627                           
  3628                           ; BSR set to: 0
  3629  011206  2BE2               	incf	_TxData& (0+255),f,b
  3630                           
  3631                           ; BSR set to: 0
  3632  011208  2BE4               	incf	_i& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635  01120A  0E18               	movlw	24
  3636  01120C  65E4               	cpfsgt	_i& (0+255),b
  3637  01120E  D7D3               	goto	l13104
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;star_demo.c: 215: }
  3641                           ;star_demo.c: 219: sw_layer_ack_status = MiApp_UnicastStar (select_ed, 0);
  3642  011210  6BC0               	clrf	MiApp_UnicastStar@SecEn& (0+255),b
  3643  011212  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3644  011214  EC85  F08C         	call	_MiApp_UnicastStar
  3645  011218  6FD8               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;star_demo.c: 224: if (sw_layer_ack_status)
  3649  01121A  51D8               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3650  01121C  E18B               	bnz	l13080
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;star_demo.c: 228: else
  3654                           ;star_demo.c: 229: {
  3655                           ;star_demo.c: 230: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3656  01121E  0E63               	movlw	low STR_13
  3657  011220  6F9C               	movwf	LCDDisplay@text& (0+255),b
  3658  011222  0EFF               	movlw	high STR_13
  3659  011224  6F9D               	movwf	(LCDDisplay@text+1)& (0+255),b
  3660  011226  0E00               	movlw	0
  3661  011228  6F9E               	movwf	LCDDisplay@value& (0+255),b
  3662  01122A  6F9F               	movwf	LCDDisplay@delay& (0+255),b
  3663  01122C  EC04  F098         	call	_LCDDisplay	;wreg free
  3664  011230                     l1104:
  3665                           
  3666                           ;star_demo.c: 231: }
  3667                           ;star_demo.c: 236: }
  3668                           ;star_demo.c: 237: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3669  011230  C018  F09E         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3670  011234  501A               	movf	_TxNum,w,c
  3671  011236  EC2A  F09B         	call	_DemoOutput_UpdateTxRx
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;star_demo.c: 238: DELAY_ms(1500);
  3675  01123A  0E05               	movlw	5
  3676  01123C  6F6E               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3677  01123E  0EDC               	movlw	220
  3678  011240  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  3679  011242  EC40  F091         	call	_DELAY_ms	;wreg free
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;star_demo.c: 239: STAR_DEMO_OPTIONS_MESSAGE (role);
  3683  011246  51EB               	movf	_role& (0+255),w,b
  3684  011248  EC50  F09B         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3685                           
  3686                           ;star_demo.c: 240: }
  3687  01124C  D01C               	goto	l13134
  3688  01124E                     l13124:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;star_demo.c: 241: else if(switch_val == 2)
  3692  01124E  0E02               	movlw	2
  3693  011250  19DB               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3694  011252  E119               	bnz	l13134
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;star_demo.c: 242: {
  3698                           ;star_demo.c: 243: if (select_ed > end_nodes-1)
  3699  011254  51DC               	movf	run_star_demo@select_ed& (0+255),w,b
  3700  011256  6FD1               	movwf	??_run_star_demo& (0+255),b
  3701  011258  6BD2               	clrf	(??_run_star_demo+1)& (0+255),b
  3702  01125A  69D3               	setf	(??_run_star_demo+2)& (0+255),b
  3703  01125C  69D4               	setf	(??_run_star_demo+3)& (0+255),b
  3704  01125E  501E               	movf	_end_nodes,w,c
  3705  011260  6FD5               	movwf	(??_run_star_demo+4)& (0+255),b
  3706  011262  6BD6               	clrf	(??_run_star_demo+5)& (0+255),b
  3707  011264  51D3               	movf	(??_run_star_demo+2)& (0+255),w,b
  3708  011266  27D5               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3709  011268  51D4               	movf	(??_run_star_demo+3)& (0+255),w,b
  3710  01126A  23D6               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3711  01126C  51D1               	movf	??_run_star_demo& (0+255),w,b
  3712  01126E  5DD5               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3713  011270  51D6               	movf	(??_run_star_demo+5)& (0+255),w,b
  3714  011272  0A80               	xorlw	128
  3715  011274  6FD7               	movwf	(??_run_star_demo+6)& (0+255),b
  3716  011276  51D2               	movf	(??_run_star_demo+1)& (0+255),w,b
  3717  011278  0A80               	xorlw	128
  3718  01127A  59D7               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3719  01127C  E202               	bc	l13130
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;star_demo.c: 244: {
  3723                           ;star_demo.c: 246: select_ed = 0;
  3724  01127E  6BDC               	clrf	run_star_demo@select_ed& (0+255),b
  3725                           
  3726                           ;star_demo.c: 247: }
  3727  011280  D001               	goto	l13132
  3728  011282                     l13130:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;star_demo.c: 248: else
  3732                           ;star_demo.c: 249: {
  3733                           ;star_demo.c: 251: select_ed = select_ed+1;
  3734  011282  2BDC               	incf	run_star_demo@select_ed& (0+255),f,b
  3735  011284                     l13132:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;star_demo.c: 252: }
  3739                           ;star_demo.c: 253: chk_sel_status = 0;
  3740  011284  6A1C               	clrf	_chk_sel_status,c
  3741  011286                     l13134:
  3742                           
  3743                           ; BSR set to: 0
  3744  011286  501C               	movf	_chk_sel_status,w,c
  3745  011288  E001 D71B          	bnz	l13054
  3746  01128C                     l13136:
  3747                           
  3748                           ; BSR set to: 0
  3749  01128C  05D9               	decf	run_star_demo@update_ed& (0+255),w,b
  3750  01128E  E101 D661          	bz	l13042
  3751  011292                     l13138:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;star_demo.c: 255: }
  3755                           ;star_demo.c: 256: }
  3756                           ;star_demo.c: 258: }
  3757                           ;star_demo.c: 260: }
  3758                           ;star_demo.c: 261: }
  3759                           ;star_demo.c: 262: }
  3760                           ;star_demo.c: 266: if (lost_connection && role == EndDevice)
  3761  011292  501F               	movf	_lost_connection,w,c
  3762  011294  E006               	bz	l13146
  3763                           
  3764                           ; BSR set to: 0
  3765  011296  05EB               	decf	_role& (0+255),w,b
  3766  011298  E104               	bnz	l13146
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;star_demo.c: 267: {
  3770                           ;star_demo.c: 268: MiApp_EstablishConnection(0xFF, 0x00);
  3771  01129A  6BC0               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3772  01129C  ECF1  F08D         	call	_MiApp_EstablishConnection
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;star_demo.c: 269: lost_connection = 0;
  3776  0112A0  6A1F               	clrf	_lost_connection,c
  3777  0112A2                     l13146:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;star_demo.c: 271: }
  3781                           ;star_demo.c: 273: t2 = MiWi_TickGet ();
  3782  0112A2  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  3783  0112A6  C06D  F187         	movff	?_MiWi_TickGet,_t2
  3784  0112AA  C06E  F188         	movff	?_MiWi_TickGet+1,_t2+1
  3785  0112AE  C06F  F189         	movff	?_MiWi_TickGet+2,_t2+2
  3786  0112B2  C070  F18A         	movff	?_MiWi_TickGet+3,_t2+3
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;star_demo.c: 275: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)*15) && role == Pan
      +                          Coordinator)
  3790  0112B6  0101               	movlb	1	; () banked
  3791  0112B8  5183               	movf	_t1& (0+255),w,b
  3792  0112BA  5D87               	subwf	_t2& (0+255),w,b
  3793  0112BC  0100               	movlb	0	; () banked
  3794  0112BE  6FD1               	movwf	??_run_star_demo& (0+255),b
  3795  0112C0  0101               	movlb	1	; () banked
  3796  0112C2  5184               	movf	(_t1+1)& (0+255),w,b
  3797  0112C4  5988               	subwfb	(_t2+1)& (0+255),w,b
  3798  0112C6  0100               	movlb	0	; () banked
  3799  0112C8  6FD2               	movwf	(??_run_star_demo+1)& (0+255),b
  3800  0112CA  0101               	movlb	1	; () banked
  3801  0112CC  5185               	movf	(_t1+2)& (0+255),w,b
  3802  0112CE  5989               	subwfb	(_t2+2)& (0+255),w,b
  3803  0112D0  0100               	movlb	0	; () banked
  3804  0112D2  6FD3               	movwf	(??_run_star_demo+2)& (0+255),b
  3805  0112D4  0101               	movlb	1	; () banked
  3806  0112D6  5186               	movf	(_t1+3)& (0+255),w,b
  3807  0112D8  598A               	subwfb	(_t2+3)& (0+255),w,b
  3808  0112DA  0100               	movlb	0	; () banked
  3809  0112DC  6FD4               	movwf	(??_run_star_demo+3)& (0+255),b
  3810  0112DE  51D4               	movf	(??_run_star_demo+3)& (0+255),w,b
  3811  0112E0  E107               	bnz	u13070
  3812  0112E2  0E8D               	movlw	141
  3813  0112E4  5DD1               	subwf	??_run_star_demo& (0+255),w,b
  3814  0112E6  0E86               	movlw	134
  3815  0112E8  59D2               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3816  0112EA  0E47               	movlw	71
  3817  0112EC  59D3               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3818  0112EE  E31D               	bnc	l13164
  3819  0112F0                     u13070:
  3820                           
  3821                           ; BSR set to: 0
  3822  0112F0  51EB               	movf	_role& (0+255),w,b
  3823  0112F2  E11B               	bnz	l13164
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;star_demo.c: 276: {
  3827                           ;star_demo.c: 277: LCD_Erase();
  3828  0112F4  EC4E  F09A         	call	_LCD_Erase	;wreg free
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;star_demo.c: 278: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
  3832  0112F8  0EB6               	movlw	low _LCDText
  3833  0112FA  6F79               	movwf	sprintf@sp& (0+255),b
  3834  0112FC  0E01               	movlw	high _LCDText
  3835  0112FE  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  3836  011300  0E77               	movlw	low STR_14
  3837  011302  6F7B               	movwf	sprintf@f& (0+255),b
  3838  011304  0EFF               	movlw	high STR_14
  3839  011306  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  3840  011308  C0E8  F07D         	movff	_conn_size,?_sprintf+4
  3841  01130C  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  3842  01130E  EC00  F080         	call	_sprintf	;wreg free
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;star_demo.c: 279: LCD_Update();
  3846  011312  EC9A  F094         	call	_LCD_Update	;wreg free
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;star_demo.c: 280: DELAY_ms(2000);
  3850  011316  0E07               	movlw	7
  3851  011318  6F6E               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3852  01131A  0ED0               	movlw	208
  3853  01131C  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  3854  01131E  EC40  F091         	call	_DELAY_ms	;wreg free
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;star_demo.c: 281: display_connections = 0;
  3858  011322  6A1D               	clrf	_display_connections,c
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;star_demo.c: 282: STAR_DEMO_OPTIONS_MESSAGE (1);
  3862  011324  0E01               	movlw	1
  3863  011326  EC50  F09B         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3864  01132A                     l13164:
  3865                           
  3866                           ; BSR set to: 0
  3867  01132A  501D               	movf	_display_connections,w,c
  3868  01132C  E001 D5CA          	bnz	l13008
  3869                           
  3870                           ; BSR set to: 0
  3871  011330  0012               	return		;funcret
  3872  011332                     __end_of_run_star_demo:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           intcon	equ	0xFF2
  3881                           intcon2	equ	0xFF1
  3882                           intcon3	equ	0xFF0
  3883                           postinc0	equ	0xFEE
  3884                           wreg	equ	0xFE8
  3885                           indf1	equ	0xFE7
  3886                           postdec1	equ	0xFE5
  3887                           fsr1h	equ	0xFE2
  3888                           fsr1l	equ	0xFE1
  3889                           indf2	equ	0xFDF
  3890                           fsr2h	equ	0xFDA
  3891                           fsr2l	equ	0xFD9
  3892                           
  3893 ;; *************** function ___lbmod *****************
  3894 ;; Defined at:
  3895 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  dividend        1    wreg     unsigned char 
  3898 ;;  divisor         1   13[BANK0 ] unsigned char 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  dividend        1   14[BANK0 ] unsigned char 
  3901 ;;  rem             1   16[BANK0 ] unsigned char 
  3902 ;;  counter         1   15[BANK0 ] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      unsigned char 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : F/0
  3909 ;;		On exit  : F/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3912 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;Total ram usage:        4 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    5
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_run_star_demo
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text9
  3927  01344C                     __ptext9:
  3928                           	opt stack 0
  3929  01344C                     ___lbmod:
  3930                           	opt stack 23
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;incstack = 0
  3934                           ;___lbmod@dividend stored from wreg
  3935  01344C  6F6E               	movwf	___lbmod@dividend& (0+255),b
  3936  01344E  0E08               	movlw	8
  3937  013450  0100               	movlb	0	; () banked
  3938  013452  6F6F               	movwf	___lbmod@counter& (0+255),b
  3939                           
  3940                           ; BSR set to: 0
  3941  013454  6B70               	clrf	___lbmod@rem& (0+255),b
  3942  013456                     l7250:
  3943                           
  3944                           ; BSR set to: 0
  3945  013456  90D8               	bcf	status,0,c
  3946  013458  356E               	rlcf	___lbmod@dividend& (0+255),w,b
  3947  01345A  3570               	rlcf	___lbmod@rem& (0+255),w,b
  3948  01345C  6F70               	movwf	___lbmod@rem& (0+255),b
  3949                           
  3950                           ; BSR set to: 0
  3951  01345E  90D8               	bcf	status,0,c
  3952  013460  376E               	rlcf	___lbmod@dividend& (0+255),f,b
  3953                           
  3954                           ; BSR set to: 0
  3955  013462  516D               	movf	___lbmod@divisor& (0+255),w,b
  3956  013464  5D70               	subwf	___lbmod@rem& (0+255),w,b
  3957  013466  E302               	bnc	l7258
  3958                           
  3959                           ; BSR set to: 0
  3960  013468  516D               	movf	___lbmod@divisor& (0+255),w,b
  3961  01346A  5F70               	subwf	___lbmod@rem& (0+255),f,b
  3962  01346C                     l7258:
  3963                           
  3964                           ; BSR set to: 0
  3965  01346C  2F6F               	decfsz	___lbmod@counter& (0+255),f,b
  3966  01346E  D7F3               	goto	l7250
  3967                           
  3968                           ; BSR set to: 0
  3969  013470  5170               	movf	___lbmod@rem& (0+255),w,b
  3970                           
  3971                           ; BSR set to: 0
  3972  013472  0012               	return		;funcret
  3973  013474                     __end_of___lbmod:
  3974                           	opt stack 0
  3975                           tblptru	equ	0xFF8
  3976                           tblptrh	equ	0xFF7
  3977                           tblptrl	equ	0xFF6
  3978                           tablat	equ	0xFF5
  3979                           prodh	equ	0xFF4
  3980                           prodl	equ	0xFF3
  3981                           intcon	equ	0xFF2
  3982                           intcon2	equ	0xFF1
  3983                           intcon3	equ	0xFF0
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           indf1	equ	0xFE7
  3987                           postdec1	equ	0xFE5
  3988                           fsr1h	equ	0xFE2
  3989                           fsr1l	equ	0xFE1
  3990                           indf2	equ	0xFDF
  3991                           fsr2h	equ	0xFDA
  3992                           fsr2l	equ	0xFD9
  3993                           status	equ	0xFD8
  3994                           
  3995 ;; *************** function _Process_RxMessage *****************
  3996 ;; Defined at:
  3997 ;;		line 44 in file "../src/star_demo.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  User_data_st    1   96[BANK0 ] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      unsigned char 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : F/0
  4008 ;;		On exit  : F/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;Total ram usage:        1 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:   16
  4018 ;; This function calls:
  4019 ;;		_DELAY_ms
  4020 ;;		_DemoOutput_UpdateTxRx
  4021 ;;		_MiApp_DiscardMessage
  4022 ;;		_MiApp_MessageAvailable
  4023 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  4024 ;;		_Source_END_DEVICE_INFO
  4025 ;; This function is called by:
  4026 ;;		_run_star_demo
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text10
  4031  012F36                     __ptext10:
  4032                           	opt stack 0
  4033  012F36                     _Process_RxMessage:
  4034                           	opt stack 12
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;star_demo.c: 53: User_data_status = MiApp_MessageAvailable();
  4038                           
  4039                           ; BSR set to: 0
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;incstack = 0
  4043  012F36  EC31  F09B         	call	_MiApp_MessageAvailable	;wreg free
  4044  012F3A  6FC0               	movwf	Process_RxMessage@User_data_status& (0+255),b
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;star_demo.c: 54: if(User_data_status)
  4048  012F3C  51C0               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4049  012F3E  E01E               	bz	l12844
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;star_demo.c: 55: {
  4053                           ;star_demo.c: 65: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  4054  012F40  2A18               	incf	_RxNum,f,c
  4055  012F42  C018  F09E         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  4056  012F46  501A               	movf	_TxNum,w,c
  4057  012F48  EC2A  F09B         	call	_DemoOutput_UpdateTxRx
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;star_demo.c: 66: DELAY_ms(2000);
  4061  012F4C  0E07               	movlw	7
  4062  012F4E  6F6E               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4063  012F50  0ED0               	movlw	208
  4064  012F52  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  4065  012F54  EC40  F091         	call	_DELAY_ms	;wreg free
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;star_demo.c: 68: LATDbits.LATD6 ^= 1;
  4069  012F58  7C8C               	btg	3980,6,c	;volatile
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;star_demo.c: 72: if (role == EndDevice && !rxMessage.flags.bits.broadcast)
  4073  012F5A  05EB               	decf	_role& (0+255),w,b
  4074  012F5C  E109               	bnz	l12840
  4075                           
  4076                           ; BSR set to: 0
  4077  012F5E  5001               	movf	_rxMessage,w,c
  4078  012F60  0B03               	andlw	3
  4079  012F62  E106               	bnz	l12840
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;star_demo.c: 73: {
  4083                           ;star_demo.c: 74: Source_END_DEVICE_INFO(rxMessage.Payload);
  4084  012F64  C006  F09C         	movff	_rxMessage+5,Source_END_DEVICE_INFO@SrAddr
  4085  012F68  C007  F09D         	movff	_rxMessage+6,Source_END_DEVICE_INFO@SrAddr+1
  4086  012F6C  EC8F  F095         	call	_Source_END_DEVICE_INFO	;wreg free
  4087  012F70                     l12840:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;star_demo.c: 75: }
  4091                           ;star_demo.c: 83: MiApp_DiscardMessage();
  4092  012F70  EC49  F09B         	call	_MiApp_DiscardMessage	;wreg free
  4093                           
  4094                           ;star_demo.c: 84: STAR_DEMO_OPTIONS_MESSAGE (role);
  4095  012F74  0100               	movlb	0	; () banked
  4096  012F76  51EB               	movf	_role& (0+255),w,b
  4097  012F78  EC50  F09B         	call	_STAR_DEMO_OPTIONS_MESSAGE
  4098  012F7C                     l12844:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;star_demo.c: 86: }
  4102                           ;star_demo.c: 87: return User_data_status;
  4103  012F7C  51C0               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4104                           
  4105                           ; BSR set to: 0
  4106  012F7E  0012               	return		;funcret
  4107  012F80                     __end_of_Process_RxMessage:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           intcon2	equ	0xFF1
  4117                           intcon3	equ	0xFF0
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           indf1	equ	0xFE7
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           indf2	equ	0xFDF
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _Source_END_DEVICE_INFO *****************
  4130 ;; Defined at:
  4131 ;;		line 293 in file "../src/demo_ouput.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  SrAddr          2   60[BANK0 ] PTR unsigned char 
  4134 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : F/0
  4143 ;;		On exit  : F/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;Total ram usage:        2 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    9
  4153 ;; This function calls:
  4154 ;;		_DELAY_ms
  4155 ;;		_LCD_Erase
  4156 ;;		_LCD_Update
  4157 ;;		_sprintf
  4158 ;; This function is called by:
  4159 ;;		_Process_RxMessage
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text11
  4164  012B1E                     __ptext11:
  4165                           	opt stack 0
  4166  012B1E                     _Source_END_DEVICE_INFO:
  4167                           	opt stack 18
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;demo_ouput.c: 295: LCD_Erase();
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;incstack = 0
  4174  012B1E  EC4E  F09A         	call	_LCD_Erase	;wreg free
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;demo_ouput.c: 296: sprintf((char *)&(LCDText), (char*)"Data Packet from");
  4178  012B22  0EB6               	movlw	low _LCDText
  4179  012B24  6F79               	movwf	sprintf@sp& (0+255),b
  4180  012B26  0E01               	movlw	high _LCDText
  4181  012B28  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  4182  012B2A  0EBC               	movlw	low STR_7
  4183  012B2C  6F7B               	movwf	sprintf@f& (0+255),b
  4184  012B2E  0EFF               	movlw	high STR_7
  4185  012B30  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  4186  012B32  EC00  F080         	call	_sprintf	;wreg free
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;demo_ouput.c: 297: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
  4190  012B36  0EC6               	movlw	low (_LCDText+16)
  4191  012B38  6F79               	movwf	sprintf@sp& (0+255),b
  4192  012B3A  0E01               	movlw	high (_LCDText+16)
  4193  012B3C  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  4194  012B3E  0E38               	movlw	low STR_8
  4195  012B40  6F7B               	movwf	sprintf@f& (0+255),b
  4196  012B42  0EFF               	movlw	high STR_8
  4197  012B44  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  4198  012B46  C09C  FFD9         	movff	Source_END_DEVICE_INFO@SrAddr,fsr2l
  4199  012B4A  C09D  FFDA         	movff	Source_END_DEVICE_INFO@SrAddr+1,fsr2h
  4200  012B4E  50DF               	movf	indf2,w,c
  4201  012B50  6F7D               	movwf	(?_sprintf+4)& (0+255),b
  4202  012B52  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  4203  012B54  EE20 F001          	lfsr	2,1
  4204  012B58  519C               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4205  012B5A  26D9               	addwf	fsr2l,f,c
  4206  012B5C  519D               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4207  012B5E  22DA               	addwfc	fsr2h,f,c
  4208  012B60  50DF               	movf	indf2,w,c
  4209  012B62  6F7F               	movwf	(?_sprintf+6)& (0+255),b
  4210  012B64  6B80               	clrf	(?_sprintf+7)& (0+255),b
  4211  012B66  EE20 F002          	lfsr	2,2
  4212  012B6A  519C               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4213  012B6C  26D9               	addwf	fsr2l,f,c
  4214  012B6E  519D               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4215  012B70  22DA               	addwfc	fsr2h,f,c
  4216  012B72  50DF               	movf	indf2,w,c
  4217  012B74  6F81               	movwf	(?_sprintf+8)& (0+255),b
  4218  012B76  6B82               	clrf	(?_sprintf+9)& (0+255),b
  4219  012B78  EC00  F080         	call	_sprintf	;wreg free
  4220                           
  4221                           ;demo_ouput.c: 298: LCD_Update();
  4222  012B7C  EC9A  F094         	call	_LCD_Update	;wreg free
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;demo_ouput.c: 299: DELAY_ms(1200);
  4226  012B80  0E04               	movlw	4
  4227  012B82  6F6E               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4228  012B84  0EB0               	movlw	176
  4229  012B86  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  4230  012B88  EF40  F091         	goto	_DELAY_ms	;wreg free
  4231  012B8C                     __end_of_Source_END_DEVICE_INFO:
  4232                           	opt stack 0
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           intcon3	equ	0xFF0
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           indf1	equ	0xFE7
  4245                           postdec1	equ	0xFE5
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           indf2	equ	0xFDF
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4254 ;; Defined at:
  4255 ;;		line 270 in file "../src/demo_ouput.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  TxNum           1    wreg     unsigned char 
  4258 ;;  RxNum           1   62[BANK0 ] unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  TxNum           1   63[BANK0 ] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : D/0
  4267 ;;		On exit  : F/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:   10
  4277 ;; This function calls:
  4278 ;;		_LCDTRXCount
  4279 ;; This function is called by:
  4280 ;;		_Process_RxMessage
  4281 ;;		_run_star_demo
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text12
  4286  013654                     __ptext12:
  4287                           	opt stack 0
  4288  013654                     _DemoOutput_UpdateTxRx:
  4289                           	opt stack 17
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;incstack = 0
  4293                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4294  013654  0100               	movlb	0	; () banked
  4295  013656  6F9F               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4296                           
  4297                           ;demo_ouput.c: 272: LCDTRXCount(TxNum, RxNum);
  4298  013658  C09E  F09C         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4299  01365C  519F               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4300  01365E  EFE5  F097         	goto	_LCDTRXCount
  4301  013662                     __end_of_DemoOutput_UpdateTxRx:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           intcon2	equ	0xFF1
  4311                           intcon3	equ	0xFF0
  4312                           postinc0	equ	0xFEE
  4313                           wreg	equ	0xFE8
  4314                           indf1	equ	0xFE7
  4315                           postdec1	equ	0xFE5
  4316                           fsr1h	equ	0xFE2
  4317                           fsr1l	equ	0xFE1
  4318                           indf2	equ	0xFDF
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _LCDTRXCount *****************
  4324 ;; Defined at:
  4325 ;;		line 307 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  txCount         1    wreg     unsigned char 
  4328 ;;  rxCount         1   60[BANK0 ] unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  txCount         1   61[BANK0 ] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : F/0
  4337 ;;		On exit  : F/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4340 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;Total ram usage:        2 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    9
  4347 ;; This function calls:
  4348 ;;		_LCD_Erase
  4349 ;;		_LCD_Update
  4350 ;;		_sprintf
  4351 ;; This function is called by:
  4352 ;;		_DemoOutput_UpdateTxRx
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text13
  4357  012FCA                     __ptext13:
  4358                           	opt stack 0
  4359  012FCA                     _LCDTRXCount:
  4360                           	opt stack 17
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;incstack = 0
  4364                           ;LCDTRXCount@txCount stored from wreg
  4365  012FCA  6F9D               	movwf	LCDTRXCount@txCount& (0+255),b
  4366                           
  4367                           ;lcd.c: 310: LCD_Erase();
  4368  012FCC  EC4E  F09A         	call	_LCD_Erase	;wreg free
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;lcd.c: 311: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  4372  012FD0  0EB6               	movlw	low _LCDText
  4373  012FD2  6F79               	movwf	sprintf@sp& (0+255),b
  4374  012FD4  0E01               	movlw	high _LCDText
  4375  012FD6  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  4376  012FD8  0EDE               	movlw	low STR_1
  4377  012FDA  6F7B               	movwf	sprintf@f& (0+255),b
  4378  012FDC  0EFF               	movlw	high STR_1
  4379  012FDE  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  4380  012FE0  C09D  F07D         	movff	LCDTRXCount@txCount,?_sprintf+4
  4381  012FE4  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  4382  012FE6  EC00  F080         	call	_sprintf	;wreg free
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;lcd.c: 312: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  4386  012FEA  0EC6               	movlw	low (_LCDText+16)
  4387  012FEC  6F79               	movwf	sprintf@sp& (0+255),b
  4388  012FEE  0E01               	movlw	high (_LCDText+16)
  4389  012FF0  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
  4390  012FF2  0ECD               	movlw	low STR_2
  4391  012FF4  6F7B               	movwf	sprintf@f& (0+255),b
  4392  012FF6  0EFF               	movlw	high STR_2
  4393  012FF8  6F7C               	movwf	(sprintf@f+1)& (0+255),b
  4394  012FFA  C09C  F07D         	movff	LCDTRXCount@rxCount,?_sprintf+4
  4395  012FFE  6B7E               	clrf	(?_sprintf+5)& (0+255),b
  4396  013000  EC00  F080         	call	_sprintf	;wreg free
  4397                           
  4398                           ;lcd.c: 313: LCD_Update();
  4399  013004  EF9A  F094         	goto	_LCD_Update	;wreg free
  4400  013008                     __end_of_LCDTRXCount:
  4401                           	opt stack 0
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           prodh	equ	0xFF4
  4407                           prodl	equ	0xFF3
  4408                           intcon	equ	0xFF2
  4409                           intcon2	equ	0xFF1
  4410                           intcon3	equ	0xFF0
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _MiApp_UnicastStar *****************
  4423 ;; Defined at:
  4424 ;;		line 1988 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  EndDevice_Co    1    wreg     unsigned char 
  4427 ;;  SecEn           1   96[BANK0 ] unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  EndDevice_Co    1   44[BANK2 ] unsigned char 
  4430 ;;  copy_txdata    35    0[BANK2 ] unsigned char [35]
  4431 ;;  t2              4   39[BANK2 ] struct _MIWI_TICK
  4432 ;;  t1              4   35[BANK2 ] struct _MIWI_TICK
  4433 ;;  i               1   45[BANK2 ] unsigned char 
  4434 ;;  datalen         1   43[BANK2 ] unsigned char 
  4435 ;;  status          1    0        unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : F/0
  4442 ;;		On exit  : F/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4445 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:         0       5       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:       51 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:   16
  4452 ;; This function calls:
  4453 ;;		_MiApp_MessageAvailable
  4454 ;;		_MiWi_TickGet
  4455 ;;		_SendPacket
  4456 ;; This function is called by:
  4457 ;;		_run_star_demo
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text14
  4462  01190A                     __ptext14:
  4463                           	opt stack 0
  4464  01190A                     _MiApp_UnicastStar:
  4465                           	opt stack 12
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469                           ;MiApp_UnicastStar@EndDevice_ConnectionIndex stored from wreg
  4470  01190A  0102               	movlb	2	; () banked
  4471  01190C  6FD6               	movwf	MiApp_UnicastStar@EndDevice_ConnectionIndex& (0+255),b
  4472                           
  4473                           ;miwi_p2p.c: 1990: rec_ack = 0;
  4474  01190E  6A20               	clrf	_rec_ack,c
  4475                           
  4476                           ;miwi_p2p.c: 1991: bool status;
  4477                           ;miwi_p2p.c: 1992: uint8_t copy_txdata[35] , i , datalen;
  4478                           ;miwi_p2p.c: 1993: datalen = TxData;
  4479  011910  C0E2  F2D5         	movff	_TxData,MiApp_UnicastStar@datalen
  4480                           
  4481                           ;miwi_p2p.c: 1994: for (i=0;i<datalen;i++)
  4482  011914  6BD7               	clrf	MiApp_UnicastStar@i& (0+255),b
  4483  011916  D00F               	goto	l12604
  4484  011918                     l12600:
  4485                           
  4486                           ; BSR set to: 2
  4487                           ;miwi_p2p.c: 1995: {
  4488                           ;miwi_p2p.c: 1996: copy_txdata[i] = TxBuffer[i];
  4489  011918  0E93               	movlw	low _TxBuffer
  4490  01191A  25D7               	addwf	MiApp_UnicastStar@i& (0+255),w,b
  4491  01191C  6ED9               	movwf	fsr2l,c
  4492  01191E  6ADA               	clrf	fsr2h,c
  4493  011920  0E01               	movlw	high _TxBuffer
  4494  011922  22DA               	addwfc	fsr2h,f,c
  4495  011924  0EAA               	movlw	low MiApp_UnicastStar@copy_txdata
  4496  011926  25D7               	addwf	MiApp_UnicastStar@i& (0+255),w,b
  4497  011928  6EE1               	movwf	fsr1l,c
  4498  01192A  6AE2               	clrf	fsr1h,c
  4499  01192C  0E02               	movlw	high MiApp_UnicastStar@copy_txdata
  4500  01192E  22E2               	addwfc	fsr1h,f,c
  4501  011930  CFDF FFE7          	movff	indf2,indf1
  4502                           
  4503                           ; BSR set to: 2
  4504  011934  2BD7               	incf	MiApp_UnicastStar@i& (0+255),f,b
  4505  011936                     l12604:
  4506                           
  4507                           ; BSR set to: 2
  4508  011936  51D5               	movf	MiApp_UnicastStar@datalen& (0+255),w,b
  4509  011938  5DD7               	subwf	MiApp_UnicastStar@i& (0+255),w,b
  4510  01193A  E3EE               	bnc	l12600
  4511                           
  4512                           ; BSR set to: 2
  4513                           ;miwi_p2p.c: 1997: }
  4514                           ;miwi_p2p.c: 1998: {TxData = 0;};
  4515  01193C  0100               	movlb	0	; () banked
  4516  01193E  6BE2               	clrf	_TxData& (0+255),b
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;miwi_p2p.c: 1999: TxBuffer[TxData++] = 0xCC;
  4520  011940  0E93               	movlw	low _TxBuffer
  4521  011942  25E2               	addwf	_TxData& (0+255),w,b
  4522  011944  6ED9               	movwf	fsr2l,c
  4523  011946  6ADA               	clrf	fsr2h,c
  4524  011948  0E01               	movlw	high _TxBuffer
  4525  01194A  22DA               	addwfc	fsr2h,f,c
  4526  01194C  0ECC               	movlw	204
  4527  01194E  6EDF               	movwf	indf2,c
  4528                           
  4529                           ; BSR set to: 0
  4530  011950  2BE2               	incf	_TxData& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;miwi_p2p.c: 2000: TxBuffer[TxData++] = END_DEVICES_Short_Address[EndDevice_ConnectionIn
      +                          dex].Address[0];
  4534  011952  0102               	movlb	2	; () banked
  4535  011954  51D6               	movf	MiApp_UnicastStar@EndDevice_ConnectionIndex& (0+255),w,b
  4536  011956  0D04               	mullw	4
  4537  011958  0E37               	movlw	low _END_DEVICES_Short_Address
  4538  01195A  24F3               	addwf	prodl,w,c
  4539  01195C  6ED9               	movwf	fsr2l,c
  4540  01195E  0E01               	movlw	high _END_DEVICES_Short_Address
  4541  011960  20F4               	addwfc	prodh,w,c
  4542  011962  6EDA               	movwf	fsr2h,c
  4543  011964  0E93               	movlw	low _TxBuffer
  4544  011966  0100               	movlb	0	; () banked
  4545  011968  25E2               	addwf	_TxData& (0+255),w,b
  4546  01196A  6EE1               	movwf	fsr1l,c
  4547  01196C  6AE2               	clrf	fsr1h,c
  4548  01196E  0E01               	movlw	high _TxBuffer
  4549  011970  22E2               	addwfc	fsr1h,f,c
  4550  011972  CFDF FFE7          	movff	indf2,indf1
  4551                           
  4552                           ; BSR set to: 0
  4553  011976  2BE2               	incf	_TxData& (0+255),f,b
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;miwi_p2p.c: 2001: TxBuffer[TxData++] = END_DEVICES_Short_Address[EndDevice_ConnectionIn
      +                          dex].Address[1];
  4557  011978  0102               	movlb	2	; () banked
  4558  01197A  51D6               	movf	MiApp_UnicastStar@EndDevice_ConnectionIndex& (0+255),w,b
  4559  01197C  0D04               	mullw	4
  4560  01197E  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  4561  011980  24F3               	addwf	prodl,w,c
  4562  011982  6ED9               	movwf	fsr2l,c
  4563  011984  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  4564  011986  20F4               	addwfc	prodh,w,c
  4565  011988  6EDA               	movwf	fsr2h,c
  4566  01198A  0E93               	movlw	low _TxBuffer
  4567  01198C  0100               	movlb	0	; () banked
  4568  01198E  25E2               	addwf	_TxData& (0+255),w,b
  4569  011990  6EE1               	movwf	fsr1l,c
  4570  011992  6AE2               	clrf	fsr1h,c
  4571  011994  0E01               	movlw	high _TxBuffer
  4572  011996  22E2               	addwfc	fsr1h,f,c
  4573  011998  CFDF FFE7          	movff	indf2,indf1
  4574                           
  4575                           ; BSR set to: 0
  4576  01199C  2BE2               	incf	_TxData& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;miwi_p2p.c: 2002: TxBuffer[TxData++] = END_DEVICES_Short_Address[EndDevice_ConnectionIn
      +                          dex].Address[2];
  4580  01199E  0102               	movlb	2	; () banked
  4581  0119A0  51D6               	movf	MiApp_UnicastStar@EndDevice_ConnectionIndex& (0+255),w,b
  4582  0119A2  0D04               	mullw	4
  4583  0119A4  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  4584  0119A6  24F3               	addwf	prodl,w,c
  4585  0119A8  6ED9               	movwf	fsr2l,c
  4586  0119AA  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  4587  0119AC  20F4               	addwfc	prodh,w,c
  4588  0119AE  6EDA               	movwf	fsr2h,c
  4589  0119B0  0E93               	movlw	low _TxBuffer
  4590  0119B2  0100               	movlb	0	; () banked
  4591  0119B4  25E2               	addwf	_TxData& (0+255),w,b
  4592  0119B6  6EE1               	movwf	fsr1l,c
  4593  0119B8  6AE2               	clrf	fsr1h,c
  4594  0119BA  0E01               	movlw	high _TxBuffer
  4595  0119BC  22E2               	addwfc	fsr1h,f,c
  4596  0119BE  CFDF FFE7          	movff	indf2,indf1
  4597                           
  4598                           ; BSR set to: 0
  4599  0119C2  2BE2               	incf	_TxData& (0+255),f,b
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;miwi_p2p.c: 2003: for (i=0;i<datalen;i++)
  4603  0119C4  0102               	movlb	2	; () banked
  4604  0119C6  6BD7               	clrf	MiApp_UnicastStar@i& (0+255),b
  4605  0119C8  D012               	goto	l12630
  4606  0119CA                     l12624:
  4607                           
  4608                           ; BSR set to: 2
  4609                           ;miwi_p2p.c: 2004: {
  4610                           ;miwi_p2p.c: 2005: TxBuffer[TxData++] = copy_txdata[i];
  4611  0119CA  0EAA               	movlw	low MiApp_UnicastStar@copy_txdata
  4612  0119CC  25D7               	addwf	MiApp_UnicastStar@i& (0+255),w,b
  4613  0119CE  6ED9               	movwf	fsr2l,c
  4614  0119D0  6ADA               	clrf	fsr2h,c
  4615  0119D2  0E02               	movlw	high MiApp_UnicastStar@copy_txdata
  4616  0119D4  22DA               	addwfc	fsr2h,f,c
  4617  0119D6  0E93               	movlw	low _TxBuffer
  4618  0119D8  0100               	movlb	0	; () banked
  4619  0119DA  25E2               	addwf	_TxData& (0+255),w,b
  4620  0119DC  6EE1               	movwf	fsr1l,c
  4621  0119DE  6AE2               	clrf	fsr1h,c
  4622  0119E0  0E01               	movlw	high _TxBuffer
  4623  0119E2  22E2               	addwfc	fsr1h,f,c
  4624  0119E4  CFDF FFE7          	movff	indf2,indf1
  4625                           
  4626                           ; BSR set to: 0
  4627  0119E8  2BE2               	incf	_TxData& (0+255),f,b
  4628                           
  4629                           ; BSR set to: 0
  4630  0119EA  0102               	movlb	2	; () banked
  4631  0119EC  2BD7               	incf	MiApp_UnicastStar@i& (0+255),f,b
  4632  0119EE                     l12630:
  4633                           
  4634                           ; BSR set to: 2
  4635  0119EE  51D5               	movf	MiApp_UnicastStar@datalen& (0+255),w,b
  4636  0119F0  5DD7               	subwf	MiApp_UnicastStar@i& (0+255),w,b
  4637  0119F2  E3EB               	bnc	l12624
  4638                           
  4639                           ; BSR set to: 2
  4640                           ;miwi_p2p.c: 2006: }
  4641                           ;miwi_p2p.c: 2010: status = SendPacket(0, ConnectionTable[0].Address, 1, SecEn);
  4642  0119F4  0E22               	movlw	low (_ConnectionTable+4)
  4643  0119F6  0100               	movlb	0	; () banked
  4644  0119F8  6F94               	movwf	SendPacket@DestinationAddress& (0+255),b
  4645  0119FA  0E02               	movlw	high (_ConnectionTable+4)
  4646  0119FC  6F95               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4647  0119FE  0E01               	movlw	1
  4648  011A00  6F96               	movwf	SendPacket@isCommand& (0+255),b
  4649  011A02  C0C0  F097         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4650  011A06  0E00               	movlw	0
  4651  011A08  EC47  F092         	call	_SendPacket
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;miwi_p2p.c: 2015: MIWI_TICK t1, t2;
  4655                           ;miwi_p2p.c: 2017: t1 = MiWi_TickGet();
  4656  011A0C  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  4657  011A10  C06D  F2CD         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4658  011A14  C06E  F2CE         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4659  011A18  C06F  F2CF         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4660  011A1C  C070  F2D0         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4661                           
  4662                           ;miwi_p2p.c: 2018: while (!rec_ack)
  4663  011A20  D02A               	goto	l12646
  4664  011A22                     l12636:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;miwi_p2p.c: 2019: {
  4668                           ;miwi_p2p.c: 2020: t2 = MiWi_TickGet();
  4669  011A22  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  4670  011A26  C06D  F2D1         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4671  011A2A  C06E  F2D2         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4672  011A2E  C06F  F2D3         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4673  011A32  C070  F2D4         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;miwi_p2p.c: 2021: MiApp_MessageAvailable();
  4677  011A36  EC31  F09B         	call	_MiApp_MessageAvailable	;wreg free
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;miwi_p2p.c: 2023: if((t2.Val - t1.Val) > ((((uint32_t)(10000000)/32)/10)*2))
  4681  011A3A  0102               	movlb	2	; () banked
  4682  011A3C  51CD               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4683  011A3E  5DD1               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4684  011A40  0100               	movlb	0	; () banked
  4685  011A42  6FC1               	movwf	??_MiApp_UnicastStar& (0+255),b
  4686  011A44  0102               	movlb	2	; () banked
  4687  011A46  51CE               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4688  011A48  59D2               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4689  011A4A  0100               	movlb	0	; () banked
  4690  011A4C  6FC2               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4691  011A4E  0102               	movlb	2	; () banked
  4692  011A50  51CF               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4693  011A52  59D3               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4694  011A54  0100               	movlb	0	; () banked
  4695  011A56  6FC3               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4696  011A58  0102               	movlb	2	; () banked
  4697  011A5A  51D0               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4698  011A5C  59D4               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4699  011A5E  0100               	movlb	0	; () banked
  4700  011A60  6FC4               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4701  011A62  51C4               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4702  011A64  11C3               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4703  011A66  E105               	bnz	u12580
  4704  011A68  0E25               	movlw	37
  4705  011A6A  5DC1               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4706  011A6C  0EF4               	movlw	244
  4707  011A6E  59C2               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4708  011A70  E302               	bnc	l12646
  4709  011A72                     u12580:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;miwi_p2p.c: 2024: {
  4713                           ;miwi_p2p.c: 2025: if (rec_ack != 1)
  4714  011A72  0420               	decf	_rec_ack,w,c
  4715  011A74  E102               	bnz	l12648
  4716  011A76                     l12646:
  4717                           
  4718                           ; BSR set to: 0
  4719  011A76  5020               	movf	_rec_ack,w,c
  4720  011A78  E0D4               	bz	l12636
  4721  011A7A                     l12648:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;miwi_p2p.c: 2028: }
  4725                           ;miwi_p2p.c: 2029: }
  4726                           ;miwi_p2p.c: 2030: }
  4727                           ;miwi_p2p.c: 2033: return rec_ack;
  4728  011A7A  5020               	movf	_rec_ack,w,c
  4729                           
  4730                           ; BSR set to: 0
  4731  011A7C  0012               	return		;funcret
  4732  011A7E                     __end_of_MiApp_UnicastStar:
  4733                           	opt stack 0
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           prodh	equ	0xFF4
  4739                           prodl	equ	0xFF3
  4740                           intcon	equ	0xFF2
  4741                           intcon2	equ	0xFF1
  4742                           intcon3	equ	0xFF0
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function _MiApp_BroadcastPacket *****************
  4755 ;; Defined at:
  4756 ;;		line 1705 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  SecEn           1    wreg     unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  SecEn           1   62[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      unsigned char 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : F/0
  4767 ;;		On exit  : F/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:        1 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:   11
  4777 ;; This function calls:
  4778 ;;		_SendPacket
  4779 ;; This function is called by:
  4780 ;;		_run_star_demo
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text15
  4785  013608                     __ptext15:
  4786                           	opt stack 0
  4787  013608                     _MiApp_BroadcastPacket:
  4788                           	opt stack 17
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;incstack = 0
  4792                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  4793  013608  6F9E               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  4794                           
  4795                           ;miwi_p2p.c: 1735: return SendPacket(1, (0), 0, SecEn);
  4796                           ;	Return value of _MiApp_BroadcastPacket is never used
  4797  01360A  0100               	movlb	0	; () banked
  4798  01360C  6B94               	clrf	SendPacket@DestinationAddress& (0+255),b
  4799  01360E  6B95               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  4800  013610  6B96               	clrf	SendPacket@isCommand& (0+255),b
  4801  013612  C09E  F097         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  4802  013616  0E01               	movlw	1
  4803  013618  EF47  F092         	goto	_SendPacket
  4804  01361C                     __end_of_MiApp_BroadcastPacket:
  4805                           	opt stack 0
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           intcon	equ	0xFF2
  4813                           intcon2	equ	0xFF1
  4814                           intcon3	equ	0xFF0
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           indf1	equ	0xFE7
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           indf2	equ	0xFDF
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _ButtonPressed *****************
  4827 ;; Defined at:
  4828 ;;		line 349 in file "../src/demo_ouput.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  t               4   27[BANK0 ] struct _MIWI_TICK
  4833 ;;  tickDifferen    4   23[BANK0 ] struct _MIWI_TICK
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      unsigned char 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : F/0
  4840 ;;		On exit  : F/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;Total ram usage:        8 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    6
  4850 ;; This function calls:
  4851 ;;		_MiWi_TickGet
  4852 ;; This function is called by:
  4853 ;;		_run_star_demo
  4854 ;;		_freezer_feature
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text16
  4859  012790                     __ptext16:
  4860                           	opt stack 0
  4861  012790                     _ButtonPressed:
  4862                           	opt stack 23
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;demo_ouput.c: 351: MIWI_TICK tickDifference;
  4866                           ;demo_ouput.c: 353: if(PORTBbits.RB0 == 0)
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;incstack = 0
  4870  012790  B081               	btfsc	3969,0,c	;volatile
  4871  012792  D00F               	goto	l976
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;demo_ouput.c: 354: {
  4875                           ;demo_ouput.c: 356: if(PUSH_BUTTON_pressed == 0)
  4876  012794  5013               	movf	_PUSH_BUTTON_pressed,w,c
  4877  012796  E143               	bnz	l12818
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;demo_ouput.c: 357: {
  4881                           ;demo_ouput.c: 358: PUSH_BUTTON_pressed = 1;
  4882  012798  0E01               	movlw	1
  4883  01279A  6E13               	movwf	_PUSH_BUTTON_pressed,c
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;demo_ouput.c: 359: PUSH_BUTTON_press_time = MiWi_TickGet();
  4887  01279C  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  4888  0127A0  C06D  F17B         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4889  0127A4  C06E  F17C         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4890  0127A8  C06F  F17D         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4891  0127AC  C070  F17E         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;demo_ouput.c: 360: return 1;
  4895  0127B0  0C01               	retlw	1
  4896  0127B2                     l976:
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;demo_ouput.c: 363: else if(PORTAbits.RA5 == 0)
  4900  0127B2  BA80               	btfsc	3968,5,c	;volatile
  4901  0127B4  D00F               	goto	l12810
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;demo_ouput.c: 364: {
  4905                           ;demo_ouput.c: 366: if(PUSH_BUTTON_pressed == 0)
  4906  0127B6  5013               	movf	_PUSH_BUTTON_pressed,w,c
  4907  0127B8  E132               	bnz	l12818
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;demo_ouput.c: 367: {
  4911                           ;demo_ouput.c: 368: PUSH_BUTTON_pressed = 1;
  4912  0127BA  0E01               	movlw	1
  4913  0127BC  6E13               	movwf	_PUSH_BUTTON_pressed,c
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;demo_ouput.c: 369: PUSH_BUTTON_press_time = MiWi_TickGet();
  4917  0127BE  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  4918  0127C2  C06D  F17B         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4919  0127C6  C06E  F17C         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4920  0127CA  C06F  F17D         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4921  0127CE  C070  F17E         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;demo_ouput.c: 370: return 2;
  4925  0127D2  0C02               	retlw	2
  4926  0127D4                     l12810:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;demo_ouput.c: 373: else
  4930                           ;demo_ouput.c: 374: {
  4931                           ;demo_ouput.c: 376: MIWI_TICK t = MiWi_TickGet();
  4932  0127D4  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  4933  0127D8  C06D  F07B         	movff	?_MiWi_TickGet,ButtonPressed@t
  4934  0127DC  C06E  F07C         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4935  0127E0  C06F  F07D         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4936  0127E4  C070  F07E         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;demo_ouput.c: 379: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4940  0127E8  0101               	movlb	1	; () banked
  4941  0127EA  517B               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4942  0127EC  0100               	movlb	0	; () banked
  4943  0127EE  5D7B               	subwf	ButtonPressed@t& (0+255),w,b
  4944  0127F0  6F77               	movwf	ButtonPressed@tickDifference& (0+255),b
  4945  0127F2  0101               	movlb	1	; () banked
  4946  0127F4  517C               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4947  0127F6  0100               	movlb	0	; () banked
  4948  0127F8  597C               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  4949  0127FA  6F78               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  4950  0127FC  0101               	movlb	1	; () banked
  4951  0127FE  517D               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4952  012800  0100               	movlb	0	; () banked
  4953  012802  597D               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  4954  012804  6F79               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  4955  012806  0101               	movlb	1	; () banked
  4956  012808  517E               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4957  01280A  0100               	movlb	0	; () banked
  4958  01280C  597E               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  4959  01280E  6F7A               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;demo_ouput.c: 382: if(tickDifference.Val > 0x00003FFF)
  4963  012810  517A               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  4964  012812  1179               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  4965  012814  E103               	bnz	u12770
  4966  012816  0E40               	movlw	64
  4967  012818  5D78               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  4968  01281A  E301               	bnc	l12818
  4969  01281C                     u12770:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;demo_ouput.c: 383: {
  4973                           ;demo_ouput.c: 384: PUSH_BUTTON_pressed = 0;
  4974  01281C  6A13               	clrf	_PUSH_BUTTON_pressed,c
  4975  01281E                     l12818:
  4976                           
  4977                           ; BSR set to: 0
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;demo_ouput.c: 385: }
  4981                           ;demo_ouput.c: 386: }
  4982                           ;demo_ouput.c: 388: return 0;
  4983  01281E  0C00               	retlw	0	;funcret
  4984  012820                     __end_of_ButtonPressed:
  4985                           	opt stack 0
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           intcon2	equ	0xFF1
  4994                           intcon3	equ	0xFF0
  4995                           postinc0	equ	0xFEE
  4996                           wreg	equ	0xFE8
  4997                           indf1	equ	0xFE7
  4998                           postdec1	equ	0xFE5
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           indf2	equ	0xFDF
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _Initialize_Demo *****************
  5007 ;; Defined at:
  5008 ;;		line 91 in file "../src/task.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  freezer_enab    1    wreg     unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  freezer_enab    1  113[BANK0 ] unsigned char 
  5013 ;;  i               1  114[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : F/0
  5020 ;;		On exit  : F/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:   17
  5030 ;; This function calls:
  5031 ;;		_DemoOutput_Channel
  5032 ;;		_DemoOutput_ChannelError
  5033 ;;		_MiApp_ConnectionMode
  5034 ;;		_MiApp_EstablishConnection
  5035 ;;		_MiApp_ProtocolInit
  5036 ;;		_MiApp_SetChannel
  5037 ;;		_MiApp_StartConnection
  5038 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  5039 ;; This function is called by:
  5040 ;;		_main
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text17
  5045  012B8C                     __ptext17:
  5046                           	opt stack 0
  5047  012B8C                     _Initialize_Demo:
  5048                           	opt stack 13
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;incstack = 0
  5052                           ;Initialize_Demo@freezer_enable stored from wreg
  5053  012B8C  6FD1               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  5054                           
  5055                           ;task.c: 93: uint8_t i;
  5056                           ;task.c: 95: if (freezer_enable)
  5057  012B8E  0100               	movlb	0	; () banked
  5058  012B90  51D1               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5059  012B92  E005               	bz	l1164
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;task.c: 96: {
  5063                           ;task.c: 107: MiApp_ProtocolInit(1);
  5064  012B94  0E01               	movlw	1
  5065  012B96  EC99  F089         	call	_MiApp_ProtocolInit
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;task.c: 111: STAR_DEMO_OPTIONS_MESSAGE (role);
  5069  012B9A  51EB               	movf	_role& (0+255),w,b
  5070  012B9C  0012               	return	
  5071  012B9E                     l1164:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;task.c: 115: else
  5075                           ;task.c: 116: {
  5076                           ;task.c: 117: LATDbits.LATD7 = 0;
  5077  012B9E  9E8C               	bcf	3980,7,c	;volatile
  5078                           
  5079                           ;task.c: 118: LATDbits.LATD6 = 0;
  5080  012BA0  9C8C               	bcf	3980,6,c	;volatile
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;task.c: 130: MiApp_ProtocolInit(0);
  5084  012BA2  0E00               	movlw	0
  5085  012BA4  EC99  F089         	call	_MiApp_ProtocolInit
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;task.c: 133: if( MiApp_SetChannel(myChannel) == 0 )
  5089  012BA8  0E19               	movlw	25
  5090  012BAA  EC3E  F099         	call	_MiApp_SetChannel
  5091  012BAE  0900               	iorlw	0
  5092  012BB0  E103               	bnz	l13274
  5093                           
  5094                           ;task.c: 134: {
  5095                           ;task.c: 135: DemoOutput_ChannelError(myChannel);
  5096  012BB2  0E19               	movlw	25
  5097  012BB4  EC52  F09B         	call	_DemoOutput_ChannelError
  5098  012BB8                     l13274:
  5099                           
  5100                           ;task.c: 136: }
  5101                           ;task.c: 147: MiApp_ConnectionMode(0x00);
  5102  012BB8  0E00               	movlw	0
  5103  012BBA  EC7E  F098         	call	_MiApp_ConnectionMode
  5104                           
  5105                           ;task.c: 148: DemoOutput_Channel(myChannel, 0);
  5106  012BBE  0E00               	movlw	0
  5107  012BC0  0100               	movlb	0	; () banked
  5108  012BC2  6FA1               	movwf	DemoOutput_Channel@Step& (0+255),b
  5109  012BC4  0E19               	movlw	25
  5110  012BC6  EC9B  F09A         	call	_DemoOutput_Channel
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;task.c: 162: i = MiApp_EstablishConnection(0xFF, 0x00);
  5114  012BCA  6BC0               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5115  012BCC  ECF1  F08D         	call	_MiApp_EstablishConnection
  5116  012BD0  6FD2               	movwf	Initialize_Demo@i& (0+255),b
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;task.c: 167: if( i != 0xFF )
  5120  012BD2  29D2               	incf	Initialize_Demo@i& (0+255),w,b
  5121  012BD4  E006               	bz	l13284
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;task.c: 168: {
  5125                           ;task.c: 169: DemoOutput_Channel(myChannel, 1);
  5126  012BD6  0E01               	movlw	1
  5127  012BD8  6FA1               	movwf	DemoOutput_Channel@Step& (0+255),b
  5128  012BDA  0E19               	movlw	25
  5129  012BDC  EC9B  F09A         	call	_DemoOutput_Channel
  5130                           
  5131                           ;task.c: 170: }
  5132  012BE0  D009               	goto	l13286
  5133  012BE2                     l13284:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;task.c: 171: else
  5137                           ;task.c: 172: {
  5138                           ;task.c: 203: MiApp_StartConnection(0x00, 10, 0);
  5139  012BE2  0E0A               	movlw	10
  5140  012BE4  6F77               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  5141  012BE6  0E00               	movlw	0
  5142  012BE8  6B78               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  5143  012BEA  6B79               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  5144  012BEC  6B7A               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  5145  012BEE  6B7B               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  5146  012BF0  EC42  F098         	call	_MiApp_StartConnection
  5147  012BF4                     l13286:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;task.c: 204: }
  5151                           ;task.c: 221: LATDbits.LATD7 = 1;
  5152  012BF4  8E8C               	bsf	3980,7,c	;volatile
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;task.c: 225: STAR_DEMO_OPTIONS_MESSAGE (role);
  5156  012BF6  51EB               	movf	_role& (0+255),w,b
  5157  012BF8  0012               	return	
  5158  012BFA                     __end_of_Initialize_Demo:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           intcon3	equ	0xFF0
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           indf1	equ	0xFE7
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  5181 ;; Defined at:
  5182 ;;		line 302 in file "../src/demo_ouput.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  NetworkRole     1    wreg     unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  NetworkRole     1   13[BANK0 ] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2
  5191 ;; Tracked objects:
  5192 ;;		On entry : F/0
  5193 ;;		On exit  : F/0
  5194 ;;		Unchanged: F/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;Total ram usage:        1 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    5
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_Process_RxMessage
  5207 ;;		_run_star_demo
  5208 ;;		_Initialize_Demo
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text18
  5213  0136A0                     __ptext18:
  5214                           	opt stack 0
  5215  0136A0                     _STAR_DEMO_OPTIONS_MESSAGE:
  5216                           	opt stack 23
  5217                           
  5218                           ; BSR set to: 0
  5219                           
  5220                           ; BSR set to: 0
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;incstack = 0
  5224  0136A0  0012               	return		;funcret
  5225  0136A2                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  5226                           	opt stack 0
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           intcon2	equ	0xFF1
  5235                           intcon3	equ	0xFF0
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _MiApp_StartConnection *****************
  5248 ;; Defined at:
  5249 ;;		line 2170 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  Mode            1    wreg     unsigned char 
  5252 ;;  ScanDuration    1   23[BANK0 ] unsigned char 
  5253 ;;  ChannelMap      4   24[BANK0 ] unsigned long 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  Mode            1   28[BANK0 ] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      unsigned char 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : F/0
  5262 ;;		On exit  : F/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5265 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;Total ram usage:        6 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    6
  5272 ;; This function calls:
  5273 ;;		_MiWi_TickGet
  5274 ;; This function is called by:
  5275 ;;		_Initialize_Demo
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text19
  5280  013084                     __ptext19:
  5281                           	opt stack 0
  5282  013084                     _MiApp_StartConnection:
  5283                           	opt stack 23
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;incstack = 0
  5287                           ;MiApp_StartConnection@Mode stored from wreg
  5288  013084  6F7C               	movwf	MiApp_StartConnection@Mode& (0+255),b
  5289                           
  5290                           ;miwi_p2p.c: 2172: switch(Mode)
  5291  013086  D015               	goto	l12954
  5292  013088                     l12948:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;miwi_p2p.c: 2190: tick1 = MiWi_TickGet();
  5296  013088  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  5297  01308C  C06D  F18B         	movff	?_MiWi_TickGet,_tick1
  5298  013090  C06E  F18C         	movff	?_MiWi_TickGet+1,_tick1+1
  5299  013094  C06F  F18D         	movff	?_MiWi_TickGet+2,_tick1+2
  5300  013098  C070  F18E         	movff	?_MiWi_TickGet+3,_tick1+3
  5301                           
  5302                           ;miwi_p2p.c: 2191: tick4 = MiWi_TickGet();
  5303  01309C  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  5304  0130A0  C06D  F18F         	movff	?_MiWi_TickGet,_tick4
  5305  0130A4  C06E  F190         	movff	?_MiWi_TickGet+1,_tick4+1
  5306  0130A8  C06F  F191         	movff	?_MiWi_TickGet+2,_tick4+2
  5307  0130AC  C070  F192         	movff	?_MiWi_TickGet+3,_tick4+3
  5308  0130B0  0012               	return	
  5309  0130B2                     l12954:
  5310  0130B2  0100               	movlb	0	; () banked
  5311  0130B4  517C               	movf	MiApp_StartConnection@Mode& (0+255),w,b
  5312                           
  5313                           ; Switch size 1, requested type "speed"
  5314                           ; Number of cases is 3, Range of values is 0 to 2
  5315                           ; switch strategies available:
  5316                           ; Name         Instructions Cycles
  5317                           ; simple_byte           10     6 (average)
  5318                           ;	Chosen strategy is simple_byte
  5319  0130B6  E0E8               	bz	l12948
  5320  0130B8  0A01               	xorlw	1	; case 1
  5321  0130BA  A4D8               	btfss	status,2,c
  5322  0130BC  0A03               	xorlw	3	; case 2
  5323  0130BE  0012               	return	
  5324  0130C0                     __end_of_MiApp_StartConnection:
  5325                           	opt stack 0
  5326                           tblptru	equ	0xFF8
  5327                           tblptrh	equ	0xFF7
  5328                           tblptrl	equ	0xFF6
  5329                           tablat	equ	0xFF5
  5330                           prodh	equ	0xFF4
  5331                           prodl	equ	0xFF3
  5332                           intcon	equ	0xFF2
  5333                           intcon2	equ	0xFF1
  5334                           intcon3	equ	0xFF0
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           indf1	equ	0xFE7
  5338                           postdec1	equ	0xFE5
  5339                           fsr1h	equ	0xFE2
  5340                           fsr1l	equ	0xFE1
  5341                           indf2	equ	0xFDF
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8
  5345                           
  5346 ;; *************** function _MiApp_ProtocolInit *****************
  5347 ;; Defined at:
  5348 ;;		line 1118 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  bNetworkFree    1    wreg     unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  bNetworkFree    1   31[BANK0 ] unsigned char 
  5353 ;;  initValue       3   32[BANK0 ] struct .
  5354 ;;  i               1   35[BANK0 ] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      unsigned char 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : F/0
  5361 ;;		On exit  : F/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:        5 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:   10
  5371 ;; This function calls:
  5372 ;;		_EEPROM_Read
  5373 ;;		_InitSymbolTimer
  5374 ;;		_MiApp_SetChannel
  5375 ;;		_MiMAC_Init
  5376 ;;		_NVMInit
  5377 ;;		_NVMRead
  5378 ;;		_NVMWrite
  5379 ;; This function is called by:
  5380 ;;		_Initialize_Demo
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text20
  5385  011332                     __ptext20:
  5386                           	opt stack 0
  5387  011332                     _MiApp_ProtocolInit:
  5388                           	opt stack 19
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;incstack = 0
  5392                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5393  011332  6F7F               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5394                           
  5395                           ;miwi_p2p.c: 1127: {
  5396                           ;miwi_p2p.c: 1128: for(i = 0; i < 3; i++)
  5397  011334  0100               	movlb	0	; () banked
  5398  011336  6B83               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5399  011338                     l12854:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;miwi_p2p.c: 1129: {
  5403                           ;miwi_p2p.c: 1130: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  5404  011338  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5405  01133A  08E2               	sublw	low (_myLongAddress+7)
  5406  01133C  6F6E               	movwf	EEPROM_Read@dest& (0+255),b
  5407  01133E  0E00               	movlw	0
  5408  011340  A0D8               	btfss	status,0,c
  5409  011342  2AE8               	incf	wreg,f,c
  5410  011344  0801               	sublw	high (_myLongAddress+7)
  5411  011346  6F6F               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5412  011348  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5413  01134A  0FFA               	addlw	250
  5414  01134C  6F70               	movwf	EEPROM_Read@addr& (0+255),b
  5415  01134E  0E01               	movlw	1
  5416  011350  6F71               	movwf	EEPROM_Read@count& (0+255),b
  5417  011352  EC57  F099         	call	_EEPROM_Read	;wreg free
  5418                           
  5419                           ; BSR set to: 0
  5420  011356  2B83               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5421                           
  5422                           ; BSR set to: 0
  5423  011358  0E02               	movlw	2
  5424  01135A  6583               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5425  01135C  D7ED               	goto	l12854
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;miwi_p2p.c: 1133: if( 8 > 7 )
  5429  01135E  0101               	movlb	1	; () banked
  5430  011360  69DF               	setf	(_myLongAddress+4)& (0+255),b
  5431                           
  5432                           ; BSR set to: 1
  5433                           ;miwi_p2p.c: 1134: {
  5434                           ;miwi_p2p.c: 1135: myLongAddress[3] = 0xFE;
  5435  011362  0EFE               	movlw	254
  5436  011364  6FDE               	movwf	(_myLongAddress+3)& (0+255),b
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;miwi_p2p.c: 1136: }
  5440                           ;miwi_p2p.c: 1137: for(i = 0; i < 3; i++)
  5441  011366  0100               	movlb	0	; () banked
  5442  011368  6B83               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5443  01136A                     l12868:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;miwi_p2p.c: 1138: {
  5447                           ;miwi_p2p.c: 1139: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
  5448  01136A  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5449  01136C  08DD               	sublw	low (_myLongAddress+2)
  5450  01136E  6F6E               	movwf	EEPROM_Read@dest& (0+255),b
  5451  011370  0E00               	movlw	0
  5452  011372  A0D8               	btfss	status,0,c
  5453  011374  2AE8               	incf	wreg,f,c
  5454  011376  0801               	sublw	high (_myLongAddress+2)
  5455  011378  6F6F               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5456  01137A  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5457  01137C  0FFD               	addlw	253
  5458  01137E  6F70               	movwf	EEPROM_Read@addr& (0+255),b
  5459  011380  0E01               	movlw	1
  5460  011382  6F71               	movwf	EEPROM_Read@count& (0+255),b
  5461  011384  EC57  F099         	call	_EEPROM_Read	;wreg free
  5462                           
  5463                           ; BSR set to: 0
  5464  011388  2B83               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5465                           
  5466                           ; BSR set to: 0
  5467  01138A  0E02               	movlw	2
  5468  01138C  6583               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5469  01138E  D7ED               	goto	l12868
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;miwi_p2p.c: 1147: }
  5473                           ;miwi_p2p.c: 1148: }
  5474                           ;miwi_p2p.c: 1154: NVMInit();
  5475  011390  ECF8  F091         	call	_NVMInit	;wreg free
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;miwi_p2p.c: 1158: P2PStatus.Val = 0;
  5479  011394  6BE1               	clrf	_P2PStatus& (0+255),b	;volatile
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;miwi_p2p.c: 1160: if (!bNetworkFreezer)
  5483  011396  517F               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5484  011398  E137               	bnz	l12906
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;miwi_p2p.c: 1161: {
  5488                           ;miwi_p2p.c: 1162: for(i = 0; i < 10; i++)
  5489  01139A  6B83               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5490  01139C                     l12896:
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;miwi_p2p.c: 1163: {
  5494                           ;miwi_p2p.c: 1164: ConnectionTable[i].status.Val = 0;
  5495  01139C  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5496  01139E  0D0E               	mullw	14
  5497  0113A0  0E2A               	movlw	low (_ConnectionTable+12)
  5498  0113A2  24F3               	addwf	prodl,w,c
  5499  0113A4  6ED9               	movwf	fsr2l,c
  5500  0113A6  0E02               	movlw	high (_ConnectionTable+12)
  5501  0113A8  20F4               	addwfc	prodh,w,c
  5502  0113AA  6EDA               	movwf	fsr2h,c
  5503  0113AC  6ADF               	clrf	indf2,c
  5504                           
  5505                           ;miwi_p2p.c: 1165: ConnectionTable[i].Address[0] = 0x00;
  5506  0113AE  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5507  0113B0  0D0E               	mullw	14
  5508  0113B2  0E22               	movlw	low (_ConnectionTable+4)
  5509  0113B4  24F3               	addwf	prodl,w,c
  5510  0113B6  6ED9               	movwf	fsr2l,c
  5511  0113B8  0E02               	movlw	high (_ConnectionTable+4)
  5512  0113BA  20F4               	addwfc	prodh,w,c
  5513  0113BC  6EDA               	movwf	fsr2h,c
  5514  0113BE  6ADF               	clrf	indf2,c
  5515                           
  5516                           ;miwi_p2p.c: 1166: ConnectionTable[i].Address[1] = 0x00;
  5517  0113C0  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5518  0113C2  0D0E               	mullw	14
  5519  0113C4  0E23               	movlw	low (_ConnectionTable+5)
  5520  0113C6  24F3               	addwf	prodl,w,c
  5521  0113C8  6ED9               	movwf	fsr2l,c
  5522  0113CA  0E02               	movlw	high (_ConnectionTable+5)
  5523  0113CC  20F4               	addwfc	prodh,w,c
  5524  0113CE  6EDA               	movwf	fsr2h,c
  5525  0113D0  6ADF               	clrf	indf2,c
  5526                           
  5527                           ;miwi_p2p.c: 1167: ConnectionTable[i].Address[2] = 0x00;
  5528  0113D2  5183               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5529  0113D4  0D0E               	mullw	14
  5530  0113D6  0E24               	movlw	low (_ConnectionTable+6)
  5531  0113D8  24F3               	addwf	prodl,w,c
  5532  0113DA  6ED9               	movwf	fsr2l,c
  5533  0113DC  0E02               	movlw	high (_ConnectionTable+6)
  5534  0113DE  20F4               	addwfc	prodh,w,c
  5535  0113E0  6EDA               	movwf	fsr2h,c
  5536  0113E2  6ADF               	clrf	indf2,c
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;miwi_p2p.c: 1169: link_stat[i] = 0x00;
  5540  0113E4  0E5F               	movlw	low _link_stat
  5541  0113E6  2583               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5542  0113E8  6ED9               	movwf	fsr2l,c
  5543  0113EA  6ADA               	clrf	fsr2h,c
  5544  0113EC  0E01               	movlw	high _link_stat
  5545  0113EE  22DA               	addwfc	fsr2h,f,c
  5546  0113F0  6ADF               	clrf	indf2,c
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;miwi_p2p.c: 1170: permanent_connections[i] = 0x00;
  5550  0113F2  0E69               	movlw	low _permanent_connections
  5551  0113F4  2583               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5552  0113F6  6ED9               	movwf	fsr2l,c
  5553  0113F8  6ADA               	clrf	fsr2h,c
  5554  0113FA  0E01               	movlw	high _permanent_connections
  5555  0113FC  22DA               	addwfc	fsr2h,f,c
  5556  0113FE  6ADF               	clrf	indf2,c
  5557                           
  5558                           ; BSR set to: 0
  5559  011400  2B83               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5560                           
  5561                           ; BSR set to: 0
  5562  011402  0E09               	movlw	9
  5563  011404  6583               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5564  011406  D7CA               	goto	l12896
  5565  011408                     l12906:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;miwi_p2p.c: 1172: }
  5569                           ;miwi_p2p.c: 1173: }
  5570                           ;miwi_p2p.c: 1175: InitSymbolTimer();
  5571  011408  EC18  F09B         	call	_InitSymbolTimer	;wreg free
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;miwi_p2p.c: 1177: TxData = 0;
  5575  01140C  6BE2               	clrf	_TxData& (0+255),b
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;miwi_p2p.c: 1194: if( bNetworkFreezer )
  5579  01140E  517F               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5580  011410  E053               	bz	l12920
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;miwi_p2p.c: 1195: {
  5584                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5585  011412  0EE9               	movlw	low _currentChannel
  5586  011414  6F6E               	movwf	NVMRead@dest& (0+255),b
  5587  011416  6B6F               	clrf	(NVMRead@dest+1)& (0+255),b
  5588  011418  C025  F070         	movff	_nvmCurrentChannel,NVMRead@addr
  5589  01141C  C026  F071         	movff	_nvmCurrentChannel+1,NVMRead@addr+1
  5590  011420  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5591  011422  0E01               	movlw	1
  5592  011424  6F72               	movwf	NVMRead@count& (0+255),b
  5593  011426  ECF9  F096         	call	_NVMRead	;wreg free
  5594                           
  5595                           ;miwi_p2p.c: 1197: if( currentChannel >= 32 )
  5596  01142A  0E1F               	movlw	31
  5597  01142C  0100               	movlb	0	; () banked
  5598  01142E  65E9               	cpfsgt	_currentChannel& (0+255),b
  5599  011430  D001               	goto	l12918
  5600  011432  0C1F               	retlw	31
  5601  011434                     l12918:
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;miwi_p2p.c: 1200: }
  5605                           ;miwi_p2p.c: 1205: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  5606  011434  0EEC               	movlw	low _ConnMode
  5607  011436  6F6E               	movwf	NVMRead@dest& (0+255),b
  5608  011438  6B6F               	clrf	(NVMRead@dest+1)& (0+255),b
  5609  01143A  C023  F070         	movff	_nvmConnMode,NVMRead@addr
  5610  01143E  C024  F071         	movff	_nvmConnMode+1,NVMRead@addr+1
  5611  011442  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5612  011444  0E01               	movlw	1
  5613  011446  6F72               	movwf	NVMRead@count& (0+255),b
  5614  011448  ECF9  F096         	call	_NVMRead	;wreg free
  5615                           
  5616                           ;miwi_p2p.c: 1206: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  5617  01144C  0E1E               	movlw	low _ConnectionTable
  5618  01144E  0100               	movlb	0	; () banked
  5619  011450  6F6E               	movwf	NVMRead@dest& (0+255),b
  5620  011452  0E02               	movlw	high _ConnectionTable
  5621  011454  6F6F               	movwf	(NVMRead@dest+1)& (0+255),b
  5622  011456  C0E6  F070         	movff	_nvmConnectionTable,NVMRead@addr
  5623  01145A  C0E7  F071         	movff	_nvmConnectionTable+1,NVMRead@addr+1
  5624  01145E  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5625  011460  0E8C               	movlw	140
  5626  011462  6F72               	movwf	NVMRead@count& (0+255),b
  5627  011464  ECF9  F096         	call	_NVMRead	;wreg free
  5628                           
  5629                           ;miwi_p2p.c: 1209: NVMRead( (uint8_t *)&role, nvmRole, 1);
  5630  011468  0EEB               	movlw	low _role
  5631  01146A  0100               	movlb	0	; () banked
  5632  01146C  6F6E               	movwf	NVMRead@dest& (0+255),b
  5633  01146E  6B6F               	clrf	(NVMRead@dest+1)& (0+255),b
  5634  011470  C029  F070         	movff	_nvmRole,NVMRead@addr
  5635  011474  C02A  F071         	movff	_nvmRole+1,NVMRead@addr+1
  5636  011478  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5637  01147A  0E01               	movlw	1
  5638  01147C  6F72               	movwf	NVMRead@count& (0+255),b
  5639  01147E  ECF9  F096         	call	_NVMRead	;wreg free
  5640                           
  5641                           ;miwi_p2p.c: 1210: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  5642  011482  0EEA               	movlw	low _myConnectionIndex_in_PanCo
  5643  011484  0100               	movlb	0	; () banked
  5644  011486  6F6E               	movwf	NVMRead@dest& (0+255),b
  5645  011488  6B6F               	clrf	(NVMRead@dest+1)& (0+255),b
  5646  01148A  C02B  F070         	movff	_nvmmyIndex,NVMRead@addr
  5647  01148E  C02C  F071         	movff	_nvmmyIndex+1,NVMRead@addr+1
  5648  011492  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5649  011494  0E01               	movlw	1
  5650  011496  6F72               	movwf	NVMRead@count& (0+255),b
  5651  011498  ECF9  F096         	call	_NVMRead	;wreg free
  5652                           
  5653                           ;miwi_p2p.c: 1212: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  5654  01149C  0EE8               	movlw	low _conn_size
  5655  01149E  0100               	movlb	0	; () banked
  5656  0114A0  6F6E               	movwf	NVMRead@dest& (0+255),b
  5657  0114A2  6B6F               	clrf	(NVMRead@dest+1)& (0+255),b
  5658  0114A4  C027  F070         	movff	_nvmEdc,NVMRead@addr
  5659  0114A8  C028  F071         	movff	_nvmEdc+1,NVMRead@addr+1
  5660  0114AC  6B73               	clrf	(NVMRead@count+1)& (0+255),b
  5661  0114AE  0E01               	movlw	1
  5662  0114B0  6F72               	movwf	NVMRead@count& (0+255),b
  5663  0114B2  ECF9  F096         	call	_NVMRead	;wreg free
  5664                           
  5665                           ;miwi_p2p.c: 1223: }
  5666  0114B6  D027               	goto	l12922
  5667  0114B8                     l12920:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;miwi_p2p.c: 1224: else
  5671                           ;miwi_p2p.c: 1225: {
  5672                           ;miwi_p2p.c: 1230: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5673  0114B8  0EE9               	movlw	low _currentChannel
  5674  0114BA  6F6E               	movwf	NVMWrite@source& (0+255),b
  5675  0114BC  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
  5676  0114BE  C025  F070         	movff	_nvmCurrentChannel,NVMWrite@addr
  5677  0114C2  C026  F071         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  5678  0114C6  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  5679  0114C8  0E01               	movlw	1
  5680  0114CA  6F72               	movwf	NVMWrite@count& (0+255),b
  5681  0114CC  EC32  F093         	call	_NVMWrite	;wreg free
  5682                           
  5683                           ;miwi_p2p.c: 1231: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  5684  0114D0  0EEC               	movlw	low _ConnMode
  5685  0114D2  0100               	movlb	0	; () banked
  5686  0114D4  6F6E               	movwf	NVMWrite@source& (0+255),b
  5687  0114D6  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
  5688  0114D8  C023  F070         	movff	_nvmConnMode,NVMWrite@addr
  5689  0114DC  C024  F071         	movff	_nvmConnMode+1,NVMWrite@addr+1
  5690  0114E0  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  5691  0114E2  0E01               	movlw	1
  5692  0114E4  6F72               	movwf	NVMWrite@count& (0+255),b
  5693  0114E6  EC32  F093         	call	_NVMWrite	;wreg free
  5694                           
  5695                           ;miwi_p2p.c: 1232: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  5696  0114EA  0E1E               	movlw	low _ConnectionTable
  5697  0114EC  0100               	movlb	0	; () banked
  5698  0114EE  6F6E               	movwf	NVMWrite@source& (0+255),b
  5699  0114F0  0E02               	movlw	high _ConnectionTable
  5700  0114F2  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
  5701  0114F4  C0E6  F070         	movff	_nvmConnectionTable,NVMWrite@addr
  5702  0114F8  C0E7  F071         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  5703  0114FC  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  5704  0114FE  0E8C               	movlw	140
  5705  011500  6F72               	movwf	NVMWrite@count& (0+255),b
  5706  011502  EC32  F093         	call	_NVMWrite	;wreg free
  5707  011506                     l12922:
  5708                           
  5709                           ;miwi_p2p.c: 1233: }
  5710                           ;miwi_p2p.c: 1240: initValue.PAddress = myLongAddress;
  5711  011506  0EDB               	movlw	low _myLongAddress
  5712  011508  0100               	movlb	0	; () banked
  5713  01150A  6F81               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5714  01150C  0E01               	movlw	high _myLongAddress
  5715  01150E  6F82               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;miwi_p2p.c: 1241: initValue.actionFlags.bits.CCAEnable = 1;
  5719  011510  8380               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;miwi_p2p.c: 1242: initValue.actionFlags.bits.PAddrLength = 8;
  5723  011512  5180               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5724  011514  0B87               	andlw	-121
  5725  011516  0940               	iorlw	64
  5726  011518  6F80               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;miwi_p2p.c: 1243: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5730  01151A  B17F               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5731  01151C  D002               	bra	u12875
  5732  01151E  9580               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5733  011520  D002               	bra	u12876
  5734  011522                     u12875:
  5735  011522  0100               	movlb	0	; () banked
  5736  011524  8580               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5737  011526                     u12876:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;miwi_p2p.c: 1244: initValue.actionFlags.bits.RepeaterMode = 0;
  5741  011526  9180               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;miwi_p2p.c: 1246: MiMAC_Init(initValue);
  5745  011528  C080  F07B         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5746  01152C  C081  F07C         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5747  011530  C082  F07D         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5748  011534  ECA8  F091         	call	_MiMAC_Init	;wreg free
  5749                           
  5750                           ;miwi_p2p.c: 1255: MiApp_SetChannel(currentChannel);
  5751  011538  0100               	movlb	0	; () banked
  5752  01153A  51E9               	movf	_currentChannel& (0+255),w,b
  5753  01153C  EC3E  F099         	call	_MiApp_SetChannel
  5754                           
  5755                           ;miwi_p2p.c: 1266: P2PCapacityInfo = 0;
  5756  011540  0100               	movlb	0	; () banked
  5757  011542  6BE0               	clrf	_P2PCapacityInfo& (0+255),b
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;miwi_p2p.c: 1268: P2PCapacityInfo |= 0x01;
  5761  011544  81E0               	bsf	_P2PCapacityInfo& (0+255),0,b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;miwi_p2p.c: 1273: P2PCapacityInfo |= (ConnMode << 4);
  5765  011546  39EC               	swapf	_ConnMode& (0+255),w,b
  5766  011548  0BF0               	andlw	240
  5767  01154A  13E0               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;miwi_p2p.c: 1275: INTCON3bits.INT3IE = 1;
  5771  01154C  8AF0               	bsf	intcon3,5,c	;volatile
  5772                           
  5773                           ; BSR set to: 0
  5774  01154E  0012               	return		;funcret
  5775  011550                     __end_of_MiApp_ProtocolInit:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           intcon2	equ	0xFF1
  5785                           intcon3	equ	0xFF0
  5786                           postinc0	equ	0xFEE
  5787                           wreg	equ	0xFE8
  5788                           indf1	equ	0xFE7
  5789                           postdec1	equ	0xFE5
  5790                           fsr1h	equ	0xFE2
  5791                           fsr1l	equ	0xFE1
  5792                           indf2	equ	0xFDF
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _NVMRead *****************
  5798 ;; Defined at:
  5799 ;;		line 208 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  dest            2   14[BANK0 ] PTR unsigned char 
  5802 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), role(1), 
  5803 ;;		 -> conn_size(1), ConnectionTable(140), 
  5804 ;;  addr            2   16[BANK0 ] unsigned int 
  5805 ;;  count           2   18[BANK0 ] unsigned int 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  oldRFIE         1   20[BANK0 ] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : F/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        7 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    7
  5824 ;; This function calls:
  5825 ;;		_SPIGet
  5826 ;;		_SPIPut
  5827 ;; This function is called by:
  5828 ;;		_MiApp_ProtocolInit
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text21
  5833  012DF2                     __ptext21:
  5834                           	opt stack 0
  5835  012DF2                     _NVMRead:
  5836                           	opt stack 21
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;miwi_nvm.c: 215: uint8_t oldRFIE = INTCON3bits.INT3IE;
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;incstack = 0
  5843  012DF2  0E00               	movlw	0
  5844  012DF4  BAF0               	btfsc	intcon3,5,c	;volatile
  5845  012DF6  0E01               	movlw	1
  5846  012DF8  6F74               	movwf	NVMRead@oldRFIE& (0+255),b
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;miwi_nvm.c: 217: INTCON3bits.INT3IE = 0;
  5850  012DFA  9AF0               	bcf	intcon3,5,c	;volatile
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;miwi_nvm.c: 220: LATAbits.LATA3 = 0;
  5854  012DFC  9689               	bcf	3977,3,c	;volatile
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;miwi_nvm.c: 236: SPIPut( 0x03 );
  5858  012DFE  0E03               	movlw	3
  5859  012E00  ECEB  F09A         	call	_SPIPut
  5860                           
  5861                           ;miwi_nvm.c: 237: SPIPut( addr>>8 );
  5862  012E04  0100               	movlb	0	; () banked
  5863  012E06  5171               	movf	(NVMRead@addr+1)& (0+255),w,b
  5864  012E08  ECEB  F09A         	call	_SPIPut
  5865                           
  5866                           ;miwi_nvm.c: 238: SPIPut( addr );
  5867  012E0C  0100               	movlb	0	; () banked
  5868  012E0E  5170               	movf	NVMRead@addr& (0+255),w,b
  5869  012E10  ECEB  F09A         	call	_SPIPut
  5870                           
  5871                           ;miwi_nvm.c: 241: while( count > 0 )
  5872  012E14  D00D               	goto	l12564
  5873  012E16                     l12558:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;miwi_nvm.c: 242: {
  5877                           ;miwi_nvm.c: 243: *dest++ = SPIGet();
  5878  012E16  EC37  F09B         	call	_SPIGet	;wreg free
  5879  012E1A  C06E  FFD9         	movff	NVMRead@dest,fsr2l
  5880  012E1E  C06F  FFDA         	movff	NVMRead@dest+1,fsr2h
  5881  012E22  6EDF               	movwf	indf2,c
  5882  012E24  0100               	movlb	0	; () banked
  5883  012E26  4B6E               	infsnz	NVMRead@dest& (0+255),f,b
  5884  012E28  2B6F               	incf	(NVMRead@dest+1)& (0+255),f,b
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;miwi_nvm.c: 244: count--;
  5888  012E2A  0772               	decf	NVMRead@count& (0+255),f,b
  5889  012E2C  A0D8               	btfss	status,0,c
  5890  012E2E  0773               	decf	(NVMRead@count+1)& (0+255),f,b
  5891  012E30                     l12564:
  5892  012E30  0100               	movlb	0	; () banked
  5893  012E32  5172               	movf	NVMRead@count& (0+255),w,b
  5894  012E34  1173               	iorwf	(NVMRead@count+1)& (0+255),w,b
  5895  012E36  E1EF               	bnz	l12558
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;miwi_nvm.c: 245: }
  5899                           ;miwi_nvm.c: 246: LATAbits.LATA3 = 1;
  5900  012E38  8689               	bsf	3977,3,c	;volatile
  5901                           
  5902                           ;miwi_nvm.c: 251: INTCON3bits.INT3IE = oldRFIE;
  5903  012E3A  B174               	btfsc	NVMRead@oldRFIE& (0+255),0,b
  5904  012E3C  D002               	bra	u12535
  5905  012E3E  9AF0               	bcf	intcon3,5,c	;volatile
  5906  012E40  D001               	bra	u12536
  5907  012E42                     u12535:
  5908  012E42  8AF0               	bsf	intcon3,5,c	;volatile
  5909  012E44                     u12536:
  5910  012E44  0012               	return		;funcret
  5911  012E46                     __end_of_NVMRead:
  5912                           	opt stack 0
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           intcon	equ	0xFF2
  5920                           intcon2	equ	0xFF1
  5921                           intcon3	equ	0xFF0
  5922                           postinc0	equ	0xFEE
  5923                           wreg	equ	0xFE8
  5924                           indf1	equ	0xFE7
  5925                           postdec1	equ	0xFE5
  5926                           fsr1h	equ	0xFE2
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function _NVMInit *****************
  5934 ;; Defined at:
  5935 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  result          1   19[BANK0 ] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      unsigned char 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : F/0
  5946 ;;		On exit  : F/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        1 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    6
  5956 ;; This function calls:
  5957 ;;		_NVMalloc
  5958 ;; This function is called by:
  5959 ;;		_MiApp_ProtocolInit
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text22
  5964  0123F0                     __ptext22:
  5965                           	opt stack 0
  5966  0123F0                     _NVMInit:
  5967                           	opt stack 22
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;miwi_nvm.c: 709: bool result = 1;
  5971                           
  5972                           ;incstack = 0
  5973  0123F0  0E01               	movlw	1
  5974  0123F2  6F73               	movwf	NVMInit@result& (0+255),b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;miwi_nvm.c: 711: nextEEPosition = 0;
  5978  0123F4  6A0E               	clrf	_nextEEPosition,c
  5979  0123F6  6A0F               	clrf	_nextEEPosition+1,c
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
  5983  0123F8  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  5984  0123FA  0E02               	movlw	2
  5985  0123FC  6F6D               	movwf	NVMalloc@size& (0+255),b
  5986  0123FE  0ED7               	movlw	low _nvmMyPANID
  5987  012400  6F6F               	movwf	NVMalloc@location& (0+255),b
  5988  012402  0E01               	movlw	high _nvmMyPANID
  5989  012404  6F70               	movwf	(NVMalloc@location+1)& (0+255),b
  5990  012406  ECA1  F099         	call	_NVMalloc	;wreg free
  5991  01240A  1773               	andwf	NVMInit@result& (0+255),f,b
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
  5995  01240C  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  5996  01240E  0E01               	movlw	1
  5997  012410  6F6D               	movwf	NVMalloc@size& (0+255),b
  5998  012412  0E25               	movlw	low _nvmCurrentChannel
  5999  012414  6F6F               	movwf	NVMalloc@location& (0+255),b
  6000  012416  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6001  012418  ECA1  F099         	call	_NVMalloc	;wreg free
  6002  01241C  1773               	andwf	NVMInit@result& (0+255),f,b
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
  6006  01241E  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6007  012420  0E01               	movlw	1
  6008  012422  6F6D               	movwf	NVMalloc@size& (0+255),b
  6009  012424  0E23               	movlw	low _nvmConnMode
  6010  012426  6F6F               	movwf	NVMalloc@location& (0+255),b
  6011  012428  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6012  01242A  ECA1  F099         	call	_NVMalloc	;wreg free
  6013  01242E  1773               	andwf	NVMInit@result& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 10, &nvmConnectionTable)
      +                          ;
  6017  012430  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6018  012432  0E8C               	movlw	140
  6019  012434  6F6D               	movwf	NVMalloc@size& (0+255),b
  6020  012436  0EE6               	movlw	low _nvmConnectionTable
  6021  012438  6F6F               	movwf	NVMalloc@location& (0+255),b
  6022  01243A  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6023  01243C  ECA1  F099         	call	_NVMalloc	;wreg free
  6024  012440  1773               	andwf	NVMInit@result& (0+255),f,b
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
  6028  012442  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6029  012444  0E04               	movlw	4
  6030  012446  6F6D               	movwf	NVMalloc@size& (0+255),b
  6031  012448  0ED9               	movlw	low _nvmOutFrameCounter
  6032  01244A  6F6F               	movwf	NVMalloc@location& (0+255),b
  6033  01244C  0E01               	movlw	high _nvmOutFrameCounter
  6034  01244E  6F70               	movwf	(NVMalloc@location+1)& (0+255),b
  6035  012450  ECA1  F099         	call	_NVMalloc	;wreg free
  6036  012454  1773               	andwf	NVMInit@result& (0+255),f,b
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
  6040  012456  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6041  012458  0E01               	movlw	1
  6042  01245A  6F6D               	movwf	NVMalloc@size& (0+255),b
  6043  01245C  0E27               	movlw	low _nvmEdc
  6044  01245E  6F6F               	movwf	NVMalloc@location& (0+255),b
  6045  012460  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6046  012462  ECA1  F099         	call	_NVMalloc	;wreg free
  6047  012466  1773               	andwf	NVMInit@result& (0+255),f,b
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;miwi_nvm.c: 721: result &= NVMalloc(1,&nvmRole);
  6051  012468  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6052  01246A  0E01               	movlw	1
  6053  01246C  6F6D               	movwf	NVMalloc@size& (0+255),b
  6054  01246E  0E29               	movlw	low _nvmRole
  6055  012470  6F6F               	movwf	NVMalloc@location& (0+255),b
  6056  012472  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6057  012474  ECA1  F099         	call	_NVMalloc	;wreg free
  6058  012478  1773               	andwf	NVMInit@result& (0+255),f,b
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;miwi_nvm.c: 722: result &= NVMalloc(1,&nvmmyIndex);
  6062  01247A  6B6E               	clrf	(NVMalloc@size+1)& (0+255),b
  6063  01247C  0E01               	movlw	1
  6064  01247E  6F6D               	movwf	NVMalloc@size& (0+255),b
  6065  012480  0E2B               	movlw	low _nvmmyIndex
  6066  012482  6F6F               	movwf	NVMalloc@location& (0+255),b
  6067  012484  6B70               	clrf	(NVMalloc@location+1)& (0+255),b
  6068  012486  ECA1  F099         	call	_NVMalloc	;wreg free
  6069  01248A  1773               	andwf	NVMInit@result& (0+255),f,b
  6070                           
  6071                           ; BSR set to: 0
  6072  01248C  0012               	return		;funcret
  6073  01248E                     __end_of_NVMInit:
  6074                           	opt stack 0
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           prodh	equ	0xFF4
  6080                           prodl	equ	0xFF3
  6081                           intcon	equ	0xFF2
  6082                           intcon2	equ	0xFF1
  6083                           intcon3	equ	0xFF0
  6084                           postinc0	equ	0xFEE
  6085                           wreg	equ	0xFE8
  6086                           indf1	equ	0xFE7
  6087                           postdec1	equ	0xFE5
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function _NVMalloc *****************
  6096 ;; Defined at:
  6097 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  size            2   13[BANK0 ] unsigned int 
  6100 ;;  location        2   15[BANK0 ] PTR unsigned int 
  6101 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  6102 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      unsigned char 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : F/0
  6111 ;;		On exit  : F/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        6 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    5
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_NVMInit
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text23
  6129  013342                     __ptext23:
  6130                           	opt stack 0
  6131  013342                     _NVMalloc:
  6132                           	opt stack 22
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 32768)
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;incstack = 0
  6139  013342  516D               	movf	NVMalloc@size& (0+255),w,b
  6140  013344  240E               	addwf	_nextEEPosition,w,c
  6141  013346  6F71               	movwf	??_NVMalloc& (0+255),b
  6142  013348  516E               	movf	(NVMalloc@size+1)& (0+255),w,b
  6143  01334A  200F               	addwfc	_nextEEPosition+1,w,c
  6144  01334C  6F72               	movwf	(??_NVMalloc+1)& (0+255),b
  6145  01334E  0571               	decf	??_NVMalloc& (0+255),w,b
  6146  013350  0E80               	movlw	128
  6147  013352  5972               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  6148  013354  E301               	bnc	l6822
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;miwi_nvm.c: 697: {
  6152                           ;miwi_nvm.c: 698: return 0;
  6153  013356  0C00               	retlw	0
  6154  013358                     l6822:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;miwi_nvm.c: 699: }
  6158                           ;miwi_nvm.c: 701: *location = nextEEPosition;
  6159  013358  C06F  FFD9         	movff	NVMalloc@location,fsr2l
  6160  01335C  C070  FFDA         	movff	NVMalloc@location+1,fsr2h
  6161  013360  C00E  FFDE         	movff	_nextEEPosition,postinc2
  6162  013364  C00F  FFDD         	movff	_nextEEPosition+1,postdec2
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;miwi_nvm.c: 702: nextEEPosition += size;
  6166  013368  516D               	movf	NVMalloc@size& (0+255),w,b
  6167  01336A  260E               	addwf	_nextEEPosition,f,c
  6168  01336C  516E               	movf	(NVMalloc@size+1)& (0+255),w,b
  6169  01336E  220F               	addwfc	_nextEEPosition+1,f,c
  6170                           
  6171                           ; BSR set to: 0
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;miwi_nvm.c: 703: return 1;
  6175  013370  0C01               	retlw	1	;funcret
  6176  013372                     __end_of_NVMalloc:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           intcon2	equ	0xFF1
  6186                           intcon3	equ	0xFF0
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           indf1	equ	0xFE7
  6190                           postdec1	equ	0xFE5
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           indf2	equ	0xFDF
  6194                           postinc2	equ	0xFDE
  6195                           postdec2	equ	0xFDD
  6196                           fsr2h	equ	0xFDA
  6197                           fsr2l	equ	0xFD9
  6198                           status	equ	0xFD8
  6199                           
  6200 ;; *************** function _MiMAC_Init *****************
  6201 ;; Defined at:
  6202 ;;		line 579 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  initValue       3   27[BANK0 ] struct .
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  i               1   30[BANK0 ] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      unsigned char 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : F/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6216 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;Total ram usage:        4 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    8
  6223 ;; This function calls:
  6224 ;;		_DELAY_ms
  6225 ;;		_RegisterSet
  6226 ;;		_SetRFMode
  6227 ;; This function is called by:
  6228 ;;		_MiApp_ProtocolInit
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text24
  6233  012350                     __ptext24:
  6234                           	opt stack 0
  6235  012350                     _MiMAC_Init:
  6236                           	opt stack 20
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  6240                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;incstack = 0
  6244  012350  C07B  F00B         	movff	MiMAC_Init@initValue,_MACInitParams
  6245  012354  C07C  F00C         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6246  012358  C07D  F00D         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  6250  01235C  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
  6251  01235E  0E14               	movlw	20
  6252  012360  6F6D               	movwf	DELAY_ms@ms& (0+255),b
  6253  012362  EC40  F091         	call	_DELAY_ms	;wreg free
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;drv_mrf_miwi_89xa.c: 586: LATEbits.LATE3 = 1;
  6257  012366  868D               	bsf	3981,3,c	;volatile
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;drv_mrf_miwi_89xa.c: 587: LATCbits.LATC2 = 1;
  6261  012368  848B               	bsf	3979,2,c	;volatile
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  6265  01236A  CFD6 F011          	movff	4054,_MACSeq	;volatile
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  6269  01236E  6817               	setf	_ReceivedBankIndex,c
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  6273  012370  6B7E               	clrf	MiMAC_Init@i& (0+255),b
  6274  012372                     l12516:
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;drv_mrf_miwi_89xa.c: 594: {
  6278                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  6279  012372  517E               	movf	MiMAC_Init@i& (0+255),w,b
  6280  012374  0D39               	mullw	57
  6281  012376  0E00               	movlw	low _RxPacket
  6282  012378  24F3               	addwf	prodl,w,c
  6283  01237A  6ED9               	movwf	fsr2l,c
  6284  01237C  0E03               	movlw	high _RxPacket
  6285  01237E  20F4               	addwfc	prodh,w,c
  6286  012380  6EDA               	movwf	fsr2h,c
  6287  012382  6ADF               	clrf	indf2,c
  6288                           
  6289                           ; BSR set to: 0
  6290  012384  2B7E               	incf	MiMAC_Init@i& (0+255),f,b
  6291                           
  6292                           ; BSR set to: 0
  6293  012386  0E01               	movlw	1
  6294  012388  657E               	cpfsgt	MiMAC_Init@i& (0+255),b
  6295  01238A  D7F3               	goto	l12516
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;drv_mrf_miwi_89xa.c: 596: }
  6299                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  6300  01238C  6B7E               	clrf	MiMAC_Init@i& (0+255),b
  6301  01238E                     l12526:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;drv_mrf_miwi_89xa.c: 631: {
  6305                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  6306  01238E  517E               	movf	MiMAC_Init@i& (0+255),w,b
  6307  012390  0D02               	mullw	2
  6308  012392  0E0F               	movlw	low _InitConfigRegs
  6309  012394  24F3               	addwf	prodl,w,c
  6310  012396  6EF6               	movwf	tblptrl,c
  6311  012398  0EFE               	movlw	high _InitConfigRegs
  6312  01239A  20F4               	addwfc	prodh,w,c
  6313  01239C  6EF7               	movwf	tblptrh,c
  6314  01239E                     	if	1	;There are 3 active tblptr bytes
  6315  01239E  6AF8               	clrf	tblptru,c
  6316  0123A0  0E00               	movlw	low (__mediumconst shr (0+16))
  6317  0123A2  22F8               	addwfc	tblptru,f,c
  6318  0123A4                     	endif
  6319  0123A4  0009               	tblrd		*+
  6320  0123A6  CFF5 F06E          	movff	tablat,RegisterSet@setting
  6321  0123AA  000A               	tblrd		*-
  6322  0123AC  CFF5 F06F          	movff	tablat,RegisterSet@setting+1
  6323  0123B0  ECFC  F099         	call	_RegisterSet	;wreg free
  6324  0123B4  0100               	movlb	0	; () banked
  6325  0123B6  2B7E               	incf	MiMAC_Init@i& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328  0123B8  0E1F               	movlw	31
  6329  0123BA  657E               	cpfsgt	MiMAC_Init@i& (0+255),b
  6330  0123BC  D7E8               	goto	l12526
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;drv_mrf_miwi_89xa.c: 633: }
  6334                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  6335  0123BE  0E20               	movlw	32
  6336  0123C0  ECFD  F095         	call	_SetRFMode
  6337                           
  6338                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  6339  0123C4  0100               	movlb	0	; () banked
  6340  0123C6  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
  6341  0123C8  0E4E               	movlw	78
  6342  0123CA  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6343  0123CC  ECFC  F099         	call	_RegisterSet	;wreg free
  6344                           
  6345                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  6346  0123D0  0E40               	movlw	64
  6347  0123D2  ECFD  F095         	call	_SetRFMode
  6348                           
  6349                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6350  0123D6  0E1C               	movlw	28
  6351  0123D8  0100               	movlb	0	; () banked
  6352  0123DA  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
  6353  0123DC  0E0F               	movlw	15
  6354  0123DE  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6355  0123E0  ECFC  F099         	call	_RegisterSet	;wreg free
  6356                           
  6357                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  6358  0123E4  0E60               	movlw	96
  6359  0123E6  ECFD  F095         	call	_SetRFMode
  6360                           
  6361                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT3IF = 0;
  6362  0123EA  94F0               	bcf	intcon3,2,c	;volatile
  6363                           
  6364                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT3IE = 1;
  6365  0123EC  8AF0               	bsf	intcon3,5,c	;volatile
  6366  0123EE  0012               	return		;funcret
  6367  0123F0                     __end_of_MiMAC_Init:
  6368                           	opt stack 0
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           intcon2	equ	0xFF1
  6377                           intcon3	equ	0xFF0
  6378                           postinc0	equ	0xFEE
  6379                           wreg	equ	0xFE8
  6380                           indf1	equ	0xFE7
  6381                           postdec1	equ	0xFE5
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _MiApp_SetChannel *****************
  6392 ;; Defined at:
  6393 ;;		line 2413 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  channel         1    wreg     unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  channel         1   23[BANK0 ] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      unsigned char 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : F/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        1 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    9
  6414 ;; This function calls:
  6415 ;;		_MiMAC_SetChannel
  6416 ;;		_NVMWrite
  6417 ;; This function is called by:
  6418 ;;		_MiApp_ProtocolInit
  6419 ;;		_Initialize_Demo
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text25
  6424  01327C                     __ptext25:
  6425                           	opt stack 0
  6426  01327C                     _MiApp_SetChannel:
  6427                           	opt stack 20
  6428                           
  6429                           ;incstack = 0
  6430                           ;MiApp_SetChannel@channel stored from wreg
  6431  01327C  6F77               	movwf	MiApp_SetChannel@channel& (0+255),b
  6432                           
  6433                           ;miwi_p2p.c: 2415: if( MiMAC_SetChannel(channel, 0) )
  6434  01327E  0100               	movlb	0	; () banked
  6435  013280  6B72               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  6436  013282  5177               	movf	MiApp_SetChannel@channel& (0+255),w,b
  6437  013284  EC96  F092         	call	_MiMAC_SetChannel
  6438  013288  0900               	iorlw	0
  6439  01328A  E010               	bz	l12590
  6440                           
  6441                           ;miwi_p2p.c: 2416: {
  6442                           ;miwi_p2p.c: 2417: currentChannel = channel;
  6443  01328C  C077  F0E9         	movff	MiApp_SetChannel@channel,_currentChannel
  6444                           
  6445                           ;miwi_p2p.c: 2419: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6446  013290  0EE9               	movlw	low _currentChannel
  6447  013292  0100               	movlb	0	; () banked
  6448  013294  6F6E               	movwf	NVMWrite@source& (0+255),b
  6449  013296  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
  6450  013298  C025  F070         	movff	_nvmCurrentChannel,NVMWrite@addr
  6451  01329C  C026  F071         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  6452  0132A0  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  6453  0132A2  0E01               	movlw	1
  6454  0132A4  6F72               	movwf	NVMWrite@count& (0+255),b
  6455  0132A6  EC32  F093         	call	_NVMWrite	;wreg free
  6456                           
  6457                           ;miwi_p2p.c: 2421: return 1;
  6458  0132AA  0C01               	retlw	1
  6459  0132AC                     l12590:
  6460                           
  6461                           ;miwi_p2p.c: 2422: }
  6462                           ;miwi_p2p.c: 2423: return 0;
  6463  0132AC  0C00               	retlw	0	;funcret
  6464  0132AE                     __end_of_MiApp_SetChannel:
  6465                           	opt stack 0
  6466                           tblptru	equ	0xFF8
  6467                           tblptrh	equ	0xFF7
  6468                           tblptrl	equ	0xFF6
  6469                           tablat	equ	0xFF5
  6470                           prodh	equ	0xFF4
  6471                           prodl	equ	0xFF3
  6472                           intcon	equ	0xFF2
  6473                           intcon2	equ	0xFF1
  6474                           intcon3	equ	0xFF0
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           postdec1	equ	0xFE5
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _MiMAC_SetChannel *****************
  6489 ;; Defined at:
  6490 ;;		line 484 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  channel         1    wreg     unsigned char 
  6493 ;;  offsetFreq      1   18[BANK0 ] unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  channel         1   20[BANK0 ] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      unsigned char 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : F/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        3 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    8
  6512 ;; This function calls:
  6513 ;;		_RegisterSet
  6514 ;;		_SetRFMode
  6515 ;; This function is called by:
  6516 ;;		_MiApp_SetChannel
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text26
  6521  01252C                     __ptext26:
  6522                           	opt stack 0
  6523  01252C                     _MiMAC_SetChannel:
  6524                           	opt stack 20
  6525                           
  6526                           ;incstack = 0
  6527                           ;MiMAC_SetChannel@channel stored from wreg
  6528  01252C  6F74               	movwf	MiMAC_SetChannel@channel& (0+255),b
  6529                           
  6530                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  6531  01252E  0E1F               	movlw	31
  6532  012530  0100               	movlb	0	; () banked
  6533  012532  6574               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  6534  012534  D001               	goto	l12458
  6535  012536  0C00               	retlw	0
  6536  012538                     l12458:
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;drv_mrf_miwi_89xa.c: 489: }
  6540                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  6541  012538  0E0C               	movlw	12
  6542  01253A  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
  6543  01253C  0E64               	movlw	100
  6544  01253E  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6545  012540  ECFC  F099         	call	_RegisterSet	;wreg free
  6546                           
  6547                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  6548  012544  0E4F               	movlw	low _PVALUE
  6549  012546  0100               	movlb	0	; () banked
  6550  012548  2574               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6551  01254A  6EF6               	movwf	tblptrl,c
  6552  01254C  6AF7               	clrf	tblptrh,c
  6553  01254E  0EFE               	movlw	high _PVALUE
  6554  012550  22F7               	addwfc	tblptrh,f,c
  6555  012552                     	if	1	;There are 3 active tblptr bytes
  6556  012552  6AF8               	clrf	tblptru,c
  6557  012554  0E00               	movlw	low (__mediumconst shr (0+16))
  6558  012556  22F8               	addwfc	tblptru,f,c
  6559  012558                     	endif
  6560  012558  0008               	tblrd		*
  6561  01255A  CFF5 F073          	movff	tablat,??_MiMAC_SetChannel
  6562  01255E  0E00               	movlw	0
  6563  012560  1173               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6564  012562  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6565  012564  0E0E               	movlw	14
  6566  012566  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
  6567  012568  ECFC  F099         	call	_RegisterSet	;wreg free
  6568                           
  6569                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  6570  01256C  0E6F               	movlw	low _SVALUE
  6571  01256E  0100               	movlb	0	; () banked
  6572  012570  2574               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6573  012572  6EF6               	movwf	tblptrl,c
  6574  012574  6AF7               	clrf	tblptrh,c
  6575  012576  0EFE               	movlw	high _SVALUE
  6576  012578  22F7               	addwfc	tblptrh,f,c
  6577  01257A                     	if	1	;There are 3 active tblptr bytes
  6578  01257A  6AF8               	clrf	tblptru,c
  6579  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
  6580  01257E  22F8               	addwfc	tblptru,f,c
  6581  012580                     	endif
  6582  012580  0008               	tblrd		*
  6583  012582  CFF5 F073          	movff	tablat,??_MiMAC_SetChannel
  6584  012586  0E00               	movlw	0
  6585  012588  1173               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6586  01258A  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6587  01258C  0E10               	movlw	16
  6588  01258E  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
  6589  012590  ECFC  F099         	call	_RegisterSet	;wreg free
  6590                           
  6591                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  6592  012594  0E20               	movlw	32
  6593  012596  ECFD  F095         	call	_SetRFMode
  6594                           
  6595                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  6596  01259A  0100               	movlb	0	; () banked
  6597  01259C  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
  6598  01259E  0E4E               	movlw	78
  6599  0125A0  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6600  0125A2  ECFC  F099         	call	_RegisterSet	;wreg free
  6601                           
  6602                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  6603  0125A6  0E40               	movlw	64
  6604  0125A8  ECFD  F095         	call	_SetRFMode
  6605                           
  6606                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6607  0125AC  0E1C               	movlw	28
  6608  0125AE  0100               	movlb	0	; () banked
  6609  0125B0  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
  6610  0125B2  0E0F               	movlw	15
  6611  0125B4  6F6E               	movwf	RegisterSet@setting& (0+255),b
  6612  0125B6  ECFC  F099         	call	_RegisterSet	;wreg free
  6613                           
  6614                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  6615  0125BA  0E20               	movlw	32
  6616  0125BC  ECFD  F095         	call	_SetRFMode
  6617                           
  6618                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  6619  0125C0  0E60               	movlw	96
  6620  0125C2  ECFD  F095         	call	_SetRFMode
  6621                           
  6622                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  6623  0125C6  0C01               	retlw	1	;funcret
  6624  0125C8                     __end_of_MiMAC_SetChannel:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           intcon2	equ	0xFF1
  6634                           intcon3	equ	0xFF0
  6635                           postinc0	equ	0xFEE
  6636                           wreg	equ	0xFE8
  6637                           indf1	equ	0xFE7
  6638                           postdec1	equ	0xFE5
  6639                           fsr1h	equ	0xFE2
  6640                           fsr1l	equ	0xFE1
  6641                           indf2	equ	0xFDF
  6642                           postinc2	equ	0xFDE
  6643                           postdec2	equ	0xFDD
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function _InitSymbolTimer *****************
  6649 ;; Defined at:
  6650 ;;		line 60 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : F/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    5
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_MiApp_ProtocolInit
  6675 ;;		_main
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text27
  6680  013630                     __ptext27:
  6681                           	opt stack 0
  6682  013630                     _InitSymbolTimer:
  6683                           	opt stack 23
  6684                           
  6685                           ;symbol.c: 70: T1CON = 0b00111000;
  6686                           
  6687                           ;incstack = 0
  6688  013630  0E38               	movlw	56
  6689  013632  6ECD               	movwf	4045,c	;volatile
  6690                           
  6691                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
  6692  013634  909E               	bcf	3998,0,c	;volatile
  6693                           
  6694                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
  6695  013636  809D               	bsf	3997,0,c	;volatile
  6696                           
  6697                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
  6698  013638  80CD               	bsf	4045,0,c	;volatile
  6699                           
  6700                           ;symbol.c: 75: timerExtension1 = 0;
  6701  01363A  6A22               	clrf	_timerExtension1,c	;volatile
  6702                           
  6703                           ;symbol.c: 76: timerExtension2 = 0;
  6704  01363C  0100               	movlb	0	; () banked
  6705  01363E  6BE5               	clrf	_timerExtension2& (0+255),b	;volatile
  6706                           
  6707                           ; BSR set to: 0
  6708  013640  0012               	return		;funcret
  6709  013642                     __end_of_InitSymbolTimer:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           intcon	equ	0xFF2
  6718                           intcon2	equ	0xFF1
  6719                           intcon3	equ	0xFF0
  6720                           postinc0	equ	0xFEE
  6721                           wreg	equ	0xFE8
  6722                           indf1	equ	0xFE7
  6723                           postdec1	equ	0xFE5
  6724                           fsr1h	equ	0xFE2
  6725                           fsr1l	equ	0xFE1
  6726                           indf2	equ	0xFDF
  6727                           postinc2	equ	0xFDE
  6728                           postdec2	equ	0xFDD
  6729                           fsr2h	equ	0xFDA
  6730                           fsr2l	equ	0xFD9
  6731                           status	equ	0xFD8
  6732                           
  6733 ;; *************** function _EEPROM_Read *****************
  6734 ;; Defined at:
  6735 ;;		line 26 in file "../src/system_config/pic18exp_pic18f87j11_89xa/eeprom.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  dest            2   14[BANK0 ] PTR unsigned char 
  6738 ;;		 -> myLongAddress(8), 
  6739 ;;  addr            1   16[BANK0 ] unsigned char 
  6740 ;;  count           1   17[BANK0 ] unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : F/0
  6749 ;;		On exit  : F/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;Total ram usage:        4 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    7
  6759 ;; This function calls:
  6760 ;;		_SPIGet
  6761 ;;		_SPIPut
  6762 ;; This function is called by:
  6763 ;;		_MiApp_ProtocolInit
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text28
  6768  0132AE                     __ptext28:
  6769                           	opt stack 0
  6770  0132AE                     _EEPROM_Read:
  6771                           	opt stack 21
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;eeprom.c: 34: LATEbits.LATE2 = 0;
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;incstack = 0
  6778  0132AE  948D               	bcf	3981,2,c	;volatile
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;eeprom.c: 35: SPIPut(0x03);
  6782  0132B0  0E03               	movlw	3
  6783  0132B2  ECEB  F09A         	call	_SPIPut
  6784                           
  6785                           ;eeprom.c: 36: SPIPut(addr);
  6786  0132B6  0100               	movlb	0	; () banked
  6787  0132B8  5170               	movf	EEPROM_Read@addr& (0+255),w,b
  6788  0132BA  ECEB  F09A         	call	_SPIPut
  6789                           
  6790                           ;eeprom.c: 37: while( count )
  6791  0132BE  D00B               	goto	l12578
  6792  0132C0                     l12572:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;eeprom.c: 38: {
  6796                           ;eeprom.c: 39: *dest++ = SPIGet();
  6797  0132C0  EC37  F09B         	call	_SPIGet	;wreg free
  6798  0132C4  C06E  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6799  0132C8  C06F  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6800  0132CC  6EDF               	movwf	indf2,c
  6801  0132CE  0100               	movlb	0	; () banked
  6802  0132D0  4B6E               	infsnz	EEPROM_Read@dest& (0+255),f,b
  6803  0132D2  2B6F               	incf	(EEPROM_Read@dest+1)& (0+255),f,b
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;eeprom.c: 40: count--;
  6807  0132D4  0771               	decf	EEPROM_Read@count& (0+255),f,b
  6808  0132D6                     l12578:
  6809  0132D6  0100               	movlb	0	; () banked
  6810  0132D8  5171               	movf	EEPROM_Read@count& (0+255),w,b
  6811  0132DA  E1F2               	bnz	l12572
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;eeprom.c: 41: }
  6815                           ;eeprom.c: 42: LATEbits.LATE2 = 1;
  6816  0132DC  848D               	bsf	3981,2,c	;volatile
  6817                           
  6818                           ; BSR set to: 0
  6819  0132DE  0012               	return		;funcret
  6820  0132E0                     __end_of_EEPROM_Read:
  6821                           	opt stack 0
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           intcon2	equ	0xFF1
  6830                           intcon3	equ	0xFF0
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           indf1	equ	0xFE7
  6834                           postdec1	equ	0xFE5
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function _MiApp_EstablishConnection *****************
  6845 ;; Defined at:
  6846 ;;		line 2286 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  ActiveScanIn    1    wreg     unsigned char 
  6849 ;;  Mode            1   96[BANK0 ] unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6852 ;;  i               1  112[BANK0 ] unsigned char 
  6853 ;;  t2              4  108[BANK0 ] struct _MIWI_TICK
  6854 ;;  t1              4  104[BANK0 ] struct _MIWI_TICK
  6855 ;;  connectionIn    1  103[BANK0 ] unsigned char 
  6856 ;;  retry           1  102[BANK0 ] unsigned char 
  6857 ;;  tmpConnectio    1  101[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : F/0
  6864 ;;		On exit  : F/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6867 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;Total ram usage:       17 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:   16
  6874 ;; This function calls:
  6875 ;;		_MiApp_DiscardMessage
  6876 ;;		_MiApp_MessageAvailable
  6877 ;;		_MiWi_TickGet
  6878 ;;		_NVMWrite
  6879 ;;		_SendPacket
  6880 ;; This function is called by:
  6881 ;;		_run_star_demo
  6882 ;;		_Initialize_Demo
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text29
  6887  011BE2                     __ptext29:
  6888                           	opt stack 0
  6889  011BE2                     _MiApp_EstablishConnection:
  6890                           	opt stack 12
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;miwi_p2p.c: 2288: uint8_t tmpConnectionMode = ConnMode;
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;incstack = 0
  6897  011BE2  C0EC  F0C5         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;miwi_p2p.c: 2289: uint8_t retry = 3;
  6901  011BE6  0E03               	movlw	3
  6902  011BE8  6FC6               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;miwi_p2p.c: 2290: uint8_t connectionInterval = 0;
  6906  011BEA  6BC7               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;miwi_p2p.c: 2291: MIWI_TICK t1, t2;
  6910                           ;miwi_p2p.c: 2292: tick1 = MiWi_TickGet();
  6911  011BEC  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  6912  011BF0  C06D  F18B         	movff	?_MiWi_TickGet,_tick1
  6913  011BF4  C06E  F18C         	movff	?_MiWi_TickGet+1,_tick1+1
  6914  011BF8  C06F  F18D         	movff	?_MiWi_TickGet+2,_tick1+2
  6915  011BFC  C070  F18E         	movff	?_MiWi_TickGet+3,_tick1+3
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;miwi_p2p.c: 2293: if( Mode == 0x01 )
  6919  011C00  05C0               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6920  011C02  E101               	bnz	l12666
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;miwi_p2p.c: 2294: {
  6924                           ;miwi_p2p.c: 2295: return 0xFF;
  6925  011C04  0CFF               	retlw	255
  6926  011C06                     l12666:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;miwi_p2p.c: 2296: }
  6930                           ;miwi_p2p.c: 2298: t1 = MiWi_TickGet();
  6931  011C06  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  6932  011C0A  C06D  F0C8         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6933  011C0E  C06E  F0C9         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6934  011C12  C06F  F0CA         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6935  011C16  C070  F0CB         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;miwi_p2p.c: 2300: t1.Val -= (((uint32_t)(10000000)/32));
  6939  011C1A  0EB4               	movlw	180
  6940  011C1C  5FC8               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6941  011C1E  0EC4               	movlw	196
  6942  011C20  5BC9               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6943  011C22  0E04               	movlw	4
  6944  011C24  5BCA               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6945  011C26  0E00               	movlw	0
  6946  011C28  5BCB               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;miwi_p2p.c: 2301: ConnMode = 0x00;
  6950  011C2A  6BEC               	clrf	_ConnMode& (0+255),b
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;miwi_p2p.c: 2302: P2PStatus.bits.SearchConnection = 1;
  6954  011C2C  89E1               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6955                           
  6956                           ;miwi_p2p.c: 2303: while( P2PStatus.bits.SearchConnection )
  6957  011C2E  D06B               	goto	l12724
  6958  011C30                     l12674:
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;miwi_p2p.c: 2304: {
  6962                           ;miwi_p2p.c: 2305: t2 = MiWi_TickGet();
  6963  011C30  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  6964  011C34  C06D  F0CC         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6965  011C38  C06E  F0CD         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6966  011C3C  C06F  F0CE         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6967  011C40  C070  F0CF         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;miwi_p2p.c: 2306: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
  6971  011C44  51C8               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6972  011C46  5DCC               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6973  011C48  6FC1               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6974  011C4A  51C9               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6975  011C4C  59CD               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6976  011C4E  6FC2               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6977  011C50  51CA               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6978  011C52  59CE               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6979  011C54  6FC3               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6980  011C56  51CB               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6981  011C58  59CF               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6982  011C5A  6FC4               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6983  011C5C  51C4               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6984  011C5E  E107               	bnz	u12620
  6985  011C60  0EB5               	movlw	181
  6986  011C62  5DC1               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6987  011C64  0EC4               	movlw	196
  6988  011C66  59C2               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6989  011C68  0E04               	movlw	4
  6990  011C6A  59C3               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6991  011C6C  E346               	bnc	l12720
  6992  011C6E                     u12620:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;miwi_p2p.c: 2307: {
  6996                           ;miwi_p2p.c: 2308: t1.Val = t2.Val;
  6997  011C6E  C0CC  F0C8         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6998  011C72  C0CD  F0C9         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6999  011C76  C0CE  F0CA         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  7000  011C7A  C0CF  F0CB         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;miwi_p2p.c: 2310: if( connectionInterval-- > 0 )
  7004  011C7E  07C7               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  7005  011C80  29C7               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  7006  011C82  E141               	bnz	l12724
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;miwi_p2p.c: 2313: }
  7010                           ;miwi_p2p.c: 2314: connectionInterval = 2-1;
  7011  011C84  0E01               	movlw	1
  7012  011C86  6FC7               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;miwi_p2p.c: 2315: if( retry-- == 0 )
  7016  011C88  07C6               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  7017  011C8A  29C6               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  7018  011C8C  E102               	bnz	l618
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;miwi_p2p.c: 2316: {
  7022                           ;miwi_p2p.c: 2318: P2PStatus.bits.SearchConnection = 0;
  7023  011C8E  99E1               	bcf	_P2PStatus& (0+255),4,b	;volatile
  7024  011C90  0CFF               	retlw	255
  7025  011C92                     l618:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;miwi_p2p.c: 2320: }
  7029                           ;miwi_p2p.c: 2321: {TxData = 0;};
  7030  011C92  6BE2               	clrf	_TxData& (0+255),b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;miwi_p2p.c: 2322: TxBuffer[TxData++] = 0x81;
  7034  011C94  0E93               	movlw	low _TxBuffer
  7035  011C96  25E2               	addwf	_TxData& (0+255),w,b
  7036  011C98  6ED9               	movwf	fsr2l,c
  7037  011C9A  6ADA               	clrf	fsr2h,c
  7038  011C9C  0E01               	movlw	high _TxBuffer
  7039  011C9E  22DA               	addwfc	fsr2h,f,c
  7040  011CA0  0E81               	movlw	129
  7041  011CA2  6EDF               	movwf	indf2,c
  7042                           
  7043                           ; BSR set to: 0
  7044  011CA4  2BE2               	incf	_TxData& (0+255),f,b
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;miwi_p2p.c: 2323: TxBuffer[TxData++] = currentChannel;
  7048  011CA6  0E93               	movlw	low _TxBuffer
  7049  011CA8  25E2               	addwf	_TxData& (0+255),w,b
  7050  011CAA  6ED9               	movwf	fsr2l,c
  7051  011CAC  6ADA               	clrf	fsr2h,c
  7052  011CAE  0E01               	movlw	high _TxBuffer
  7053  011CB0  22DA               	addwfc	fsr2h,f,c
  7054  011CB2  C0E9  FFDF         	movff	_currentChannel,indf2
  7055  011CB6  2BE2               	incf	_TxData& (0+255),f,b
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;miwi_p2p.c: 2324: TxBuffer[TxData++] = P2PCapacityInfo;
  7059  011CB8  0E93               	movlw	low _TxBuffer
  7060  011CBA  25E2               	addwf	_TxData& (0+255),w,b
  7061  011CBC  6ED9               	movwf	fsr2l,c
  7062  011CBE  6ADA               	clrf	fsr2h,c
  7063  011CC0  0E01               	movlw	high _TxBuffer
  7064  011CC2  22DA               	addwfc	fsr2h,f,c
  7065  011CC4  C0E0  FFDF         	movff	_P2PCapacityInfo,indf2
  7066                           
  7067                           ; BSR set to: 0
  7068  011CC8  2BE2               	incf	_TxData& (0+255),f,b
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;miwi_p2p.c: 2331: {
  7072                           ;miwi_p2p.c: 2332: uint8_t i;
  7073                           ;miwi_p2p.c: 2334: for(i = 0; i < 1; i++)
  7074  011CCA  6BD0               	clrf	MiApp_EstablishConnection@i& (0+255),b
  7075  011CCC                     l12710:
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;miwi_p2p.c: 2335: {
  7079                           ;miwi_p2p.c: 2336: TxBuffer[TxData++] = AdditionalNodeID[i];
  7080  011CCC  51D0               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  7081  011CCE  0F55               	addlw	low _AdditionalNodeID
  7082  011CD0  6ED9               	movwf	fsr2l,c
  7083  011CD2  6ADA               	clrf	fsr2h,c
  7084  011CD4  0E93               	movlw	low _TxBuffer
  7085  011CD6  25E2               	addwf	_TxData& (0+255),w,b
  7086  011CD8  6EE1               	movwf	fsr1l,c
  7087  011CDA  6AE2               	clrf	fsr1h,c
  7088  011CDC  0E01               	movlw	high _TxBuffer
  7089  011CDE  22E2               	addwfc	fsr1h,f,c
  7090  011CE0  CFDF FFE7          	movff	indf2,indf1
  7091                           
  7092                           ; BSR set to: 0
  7093  011CE4  2BE2               	incf	_TxData& (0+255),f,b
  7094                           
  7095                           ; BSR set to: 0
  7096  011CE6  2BD0               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  7097                           
  7098                           ; BSR set to: 0
  7099  011CE8  51D0               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  7100  011CEA  E0F0               	bz	l12710
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;miwi_p2p.c: 2337: }
  7104                           ;miwi_p2p.c: 2338: }
  7105                           ;miwi_p2p.c: 2367: SendPacket(1, (0), 1, 0);
  7106  011CEC  6B94               	clrf	SendPacket@DestinationAddress& (0+255),b
  7107  011CEE  6B95               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  7108  011CF0  0E01               	movlw	1
  7109  011CF2  6F96               	movwf	SendPacket@isCommand& (0+255),b
  7110  011CF4  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
  7111  011CF6  EC47  F092         	call	_SendPacket
  7112  011CFA                     l12720:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;miwi_p2p.c: 2370: }
  7116                           ;miwi_p2p.c: 2372: if( MiApp_MessageAvailable())
  7117  011CFA  EC31  F09B         	call	_MiApp_MessageAvailable	;wreg free
  7118  011CFE  0900               	iorlw	0
  7119  011D00  E002               	bz	l12724
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;miwi_p2p.c: 2373: {
  7123                           ;miwi_p2p.c: 2374: MiApp_DiscardMessage();
  7124  011D02  EC49  F09B         	call	_MiApp_DiscardMessage	;wreg free
  7125  011D06                     l12724:
  7126  011D06  0100               	movlb	0	; () banked
  7127  011D08  B9E1               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7128  011D0A  D792               	goto	l12674
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;miwi_p2p.c: 2375: }
  7132                           ;miwi_p2p.c: 2377: }
  7133                           ;miwi_p2p.c: 2379: ConnMode = tmpConnectionMode;
  7134  011D0C  C0C5  F0EC         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;miwi_p2p.c: 2384: if (LatestConnection != 0xFF)
  7138  011D10  29DF               	incf	_LatestConnection& (0+255),w,b
  7139  011D12  E003               	bz	l623
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;miwi_p2p.c: 2385: {
  7143                           ;miwi_p2p.c: 2386: role = EndDevice;
  7144  011D14  0E01               	movlw	1
  7145  011D16  6FEB               	movwf	_role& (0+255),b
  7146                           
  7147                           ;miwi_p2p.c: 2387: }
  7148  011D18  D001               	goto	l12730
  7149  011D1A                     l623:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;miwi_p2p.c: 2388: else
  7153                           ;miwi_p2p.c: 2389: {
  7154                           ;miwi_p2p.c: 2390: role = PanCoordinator;
  7155  011D1A  6BEB               	clrf	_role& (0+255),b
  7156  011D1C                     l12730:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;miwi_p2p.c: 2391: }
  7160                           ;miwi_p2p.c: 2393: NVMWrite((uint8_t *)&role, nvmRole, 1);
  7161  011D1C  0EEB               	movlw	low _role
  7162  011D1E  6F6E               	movwf	NVMWrite@source& (0+255),b
  7163  011D20  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
  7164  011D22  C029  F070         	movff	_nvmRole,NVMWrite@addr
  7165  011D26  C02A  F071         	movff	_nvmRole+1,NVMWrite@addr+1
  7166  011D2A  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  7167  011D2C  0E01               	movlw	1
  7168  011D2E  6F72               	movwf	NVMWrite@count& (0+255),b
  7169  011D30  EC32  F093         	call	_NVMWrite	;wreg free
  7170                           
  7171                           ;miwi_p2p.c: 2395: return LatestConnection;
  7172  011D34  0100               	movlb	0	; () banked
  7173  011D36  51DF               	movf	_LatestConnection& (0+255),w,b
  7174                           
  7175                           ; BSR set to: 0
  7176  011D38  0012               	return		;funcret
  7177  011D3A                     __end_of_MiApp_EstablishConnection:
  7178                           	opt stack 0
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           intcon2	equ	0xFF1
  7187                           intcon3	equ	0xFF0
  7188                           postinc0	equ	0xFEE
  7189                           wreg	equ	0xFE8
  7190                           indf1	equ	0xFE7
  7191                           postdec1	equ	0xFE5
  7192                           fsr1h	equ	0xFE2
  7193                           fsr1l	equ	0xFE1
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           postdec2	equ	0xFDD
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function _MiApp_MessageAvailable *****************
  7202 ;; Defined at:
  7203 ;;		line 2427 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      unsigned char 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : F/0
  7214 ;;		On exit  : F/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:   15
  7224 ;; This function calls:
  7225 ;;		_P2PTasks
  7226 ;; This function is called by:
  7227 ;;		_MiApp_UnicastStar
  7228 ;;		_MiApp_EstablishConnection
  7229 ;;		_Process_RxMessage
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text30
  7234  013662                     __ptext30:
  7235                           	opt stack 0
  7236  013662                     _MiApp_MessageAvailable:
  7237                           	opt stack 12
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;miwi_p2p.c: 2429: P2PTasks();
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;incstack = 0
  7244  013662  ECB7  F083         	call	_P2PTasks	;wreg free
  7245                           
  7246                           ;miwi_p2p.c: 2431: return P2PStatus.bits.RxHasUserData;
  7247  013666  0100               	movlb	0	; () banked
  7248  013668  B7E1               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7249  01366A  0C01               	retlw	1
  7250                           
  7251                           ; BSR set to: 0
  7252  01366C  0C00               	retlw	0	;funcret
  7253  01366E                     __end_of_MiApp_MessageAvailable:
  7254                           	opt stack 0
  7255                           tblptru	equ	0xFF8
  7256                           tblptrh	equ	0xFF7
  7257                           tblptrl	equ	0xFF6
  7258                           tablat	equ	0xFF5
  7259                           prodh	equ	0xFF4
  7260                           prodl	equ	0xFF3
  7261                           intcon	equ	0xFF2
  7262                           intcon2	equ	0xFF1
  7263                           intcon3	equ	0xFF0
  7264                           postinc0	equ	0xFEE
  7265                           wreg	equ	0xFE8
  7266                           indf1	equ	0xFE7
  7267                           postdec1	equ	0xFE5
  7268                           fsr1h	equ	0xFE2
  7269                           fsr1l	equ	0xFE1
  7270                           indf2	equ	0xFDF
  7271                           postinc2	equ	0xFDE
  7272                           postdec2	equ	0xFDD
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function _P2PTasks *****************
  7278 ;; Defined at:
  7279 ;;		line 347 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;		None
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  p               1   93[BANK0 ] unsigned char 
  7284 ;;  final_index     1   87[BANK0 ] unsigned char 
  7285 ;;  status          1   94[BANK0 ] unsigned char 
  7286 ;;  p               1   92[BANK0 ] unsigned char 
  7287 ;;  tick3           4   88[BANK0 ] struct _MIWI_TICK
  7288 ;;  tick2           4   83[BANK0 ] struct _MIWI_TICK
  7289 ;;  tmpTick         4   79[BANK0 ] struct _MIWI_TICK
  7290 ;;  i               1   95[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : F/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;Total ram usage:       21 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:   14
  7307 ;; This function calls:
  7308 ;;		_AddConnection
  7309 ;;		_Find_InActiveDevices
  7310 ;;		_Find_Index
  7311 ;;		_Forward_Packet_PANCr_to_EDy
  7312 ;;		_MiApp_BroadcastConnectionTable
  7313 ;;		_MiMAC_DiscardPacket
  7314 ;;		_MiMAC_ReceivedPacket
  7315 ;;		_MiWi_TickGet
  7316 ;;		_NVMWrite
  7317 ;;		_SW_Ack_SrED
  7318 ;;		_SendPacket
  7319 ;;		_isSameAddress
  7320 ;;		_send_link_status
  7321 ;;		_store_connection_tb
  7322 ;; This function is called by:
  7323 ;;		_MiApp_MessageAvailable
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text31
  7328  01076E                     __ptext31:
  7329                           	opt stack 0
  7330  01076E                     _P2PTasks:
  7331                           	opt stack 12
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;miwi_p2p.c: 349: uint8_t i;
  7335                           ;miwi_p2p.c: 350: MIWI_TICK tmpTick ,tick2 , tick3 ;
  7336                           ;miwi_p2p.c: 353: tick2 = MiWi_TickGet();
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;incstack = 0
  7340  01076E  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  7341  010772  C06D  F0B3         	movff	?_MiWi_TickGet,P2PTasks@tick2
  7342  010776  C06E  F0B4         	movff	?_MiWi_TickGet+1,P2PTasks@tick2+1
  7343  01077A  C06F  F0B5         	movff	?_MiWi_TickGet+2,P2PTasks@tick2+2
  7344  01077E  C070  F0B6         	movff	?_MiWi_TickGet+3,P2PTasks@tick2+3
  7345                           
  7346                           ;miwi_p2p.c: 354: tick3 = MiWi_TickGet();
  7347  010782  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  7348  010786  C06D  F0B8         	movff	?_MiWi_TickGet,P2PTasks@tick3
  7349  01078A  C06E  F0B9         	movff	?_MiWi_TickGet+1,P2PTasks@tick3+1
  7350  01078E  C06F  F0BA         	movff	?_MiWi_TickGet+2,P2PTasks@tick3+2
  7351  010792  C070  F0BB         	movff	?_MiWi_TickGet+3,P2PTasks@tick3+3
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;miwi_p2p.c: 356: if (role == PanCoordinator)
  7355  010796  51EB               	movf	_role& (0+255),w,b
  7356  010798  E128               	bnz	l12120
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;miwi_p2p.c: 357: {
  7360                           ;miwi_p2p.c: 358: if( (tick3.Val - tick4.Val) > ((((uint32_t)(10000000)/32)*60)*10))
  7361  01079A  0101               	movlb	1	; () banked
  7362  01079C  518F               	movf	_tick4& (0+255),w,b
  7363  01079E  0100               	movlb	0	; () banked
  7364  0107A0  5DB8               	subwf	P2PTasks@tick3& (0+255),w,b
  7365  0107A2  6FAB               	movwf	??_P2PTasks& (0+255),b
  7366  0107A4  0101               	movlb	1	; () banked
  7367  0107A6  5190               	movf	(_tick4+1)& (0+255),w,b
  7368  0107A8  0100               	movlb	0	; () banked
  7369  0107AA  59B9               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  7370  0107AC  6FAC               	movwf	(??_P2PTasks+1)& (0+255),b
  7371  0107AE  0101               	movlb	1	; () banked
  7372  0107B0  5191               	movf	(_tick4+2)& (0+255),w,b
  7373  0107B2  0100               	movlb	0	; () banked
  7374  0107B4  59BA               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  7375  0107B6  6FAD               	movwf	(??_P2PTasks+2)& (0+255),b
  7376  0107B8  0101               	movlb	1	; () banked
  7377  0107BA  5192               	movf	(_tick4+3)& (0+255),w,b
  7378  0107BC  0100               	movlb	0	; () banked
  7379  0107BE  59BB               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  7380  0107C0  6FAE               	movwf	(??_P2PTasks+3)& (0+255),b
  7381  0107C2  0EE1               	movlw	225
  7382  0107C4  5DAB               	subwf	??_P2PTasks& (0+255),w,b
  7383  0107C6  0E05               	movlw	5
  7384  0107C8  59AC               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7385  0107CA  0E2D               	movlw	45
  7386  0107CC  59AD               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7387  0107CE  0E0B               	movlw	11
  7388  0107D0  59AE               	subwfb	(??_P2PTasks+3)& (0+255),w,b
  7389  0107D2  E332               	bnc	l12126
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;miwi_p2p.c: 359: {
  7393                           ;miwi_p2p.c: 360: Find_InActiveDevices ();
  7394  0107D4  ECCC  F096         	call	_Find_InActiveDevices	;wreg free
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;miwi_p2p.c: 361: tick4 = tick3;
  7398  0107D8  C0B8  F18F         	movff	P2PTasks@tick3,_tick4
  7399  0107DC  C0B9  F190         	movff	P2PTasks@tick3+1,_tick4+1
  7400  0107E0  C0BA  F191         	movff	P2PTasks@tick3+2,_tick4+2
  7401  0107E4  C0BB  F192         	movff	P2PTasks@tick3+3,_tick4+3
  7402  0107E8  D027               	goto	l12126
  7403  0107EA                     l12120:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;miwi_p2p.c: 365: else
  7407                           ;miwi_p2p.c: 366: {
  7408                           ;miwi_p2p.c: 367: if( (tick3.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) )
  7409  0107EA  0101               	movlb	1	; () banked
  7410  0107EC  518B               	movf	_tick1& (0+255),w,b
  7411  0107EE  0100               	movlb	0	; () banked
  7412  0107F0  5DB8               	subwf	P2PTasks@tick3& (0+255),w,b
  7413  0107F2  6FAB               	movwf	??_P2PTasks& (0+255),b
  7414  0107F4  0101               	movlb	1	; () banked
  7415  0107F6  518C               	movf	(_tick1+1)& (0+255),w,b
  7416  0107F8  0100               	movlb	0	; () banked
  7417  0107FA  59B9               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  7418  0107FC  6FAC               	movwf	(??_P2PTasks+1)& (0+255),b
  7419  0107FE  0101               	movlb	1	; () banked
  7420  010800  518D               	movf	(_tick1+2)& (0+255),w,b
  7421  010802  0100               	movlb	0	; () banked
  7422  010804  59BA               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  7423  010806  6FAD               	movwf	(??_P2PTasks+2)& (0+255),b
  7424  010808  0101               	movlb	1	; () banked
  7425  01080A  518E               	movf	(_tick1+3)& (0+255),w,b
  7426  01080C  0100               	movlb	0	; () banked
  7427  01080E  59BB               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  7428  010810  6FAE               	movwf	(??_P2PTasks+3)& (0+255),b
  7429  010812  51AE               	movf	(??_P2PTasks+3)& (0+255),w,b
  7430  010814  E107               	bnz	u11970
  7431  010816  0E8D               	movlw	141
  7432  010818  5DAB               	subwf	??_P2PTasks& (0+255),w,b
  7433  01081A  0E86               	movlw	134
  7434  01081C  59AC               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7435  01081E  0E47               	movlw	71
  7436  010820  59AD               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7437  010822  E30A               	bnc	l12126
  7438  010824                     u11970:
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;miwi_p2p.c: 368: {
  7442                           ;miwi_p2p.c: 369: send_link_status ();
  7443  010824  ECD4  F098         	call	_send_link_status	;wreg free
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;miwi_p2p.c: 370: tick1 = tick3;
  7447  010828  C0B8  F18B         	movff	P2PTasks@tick3,_tick1
  7448  01082C  C0B9  F18C         	movff	P2PTasks@tick3+1,_tick1+1
  7449  010830  C0BA  F18D         	movff	P2PTasks@tick3+2,_tick1+2
  7450  010834  C0BB  F18E         	movff	P2PTasks@tick3+3,_tick1+3
  7451  010838                     l12126:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;miwi_p2p.c: 371: }
  7455                           ;miwi_p2p.c: 372: }
  7456                           ;miwi_p2p.c: 376: if( (tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) && role =
      +                          = PanCoordinator)
  7457  010838  0101               	movlb	1	; () banked
  7458  01083A  518B               	movf	_tick1& (0+255),w,b
  7459  01083C  0100               	movlb	0	; () banked
  7460  01083E  5DB3               	subwf	P2PTasks@tick2& (0+255),w,b
  7461  010840  6FAB               	movwf	??_P2PTasks& (0+255),b
  7462  010842  0101               	movlb	1	; () banked
  7463  010844  518C               	movf	(_tick1+1)& (0+255),w,b
  7464  010846  0100               	movlb	0	; () banked
  7465  010848  59B4               	subwfb	(P2PTasks@tick2+1)& (0+255),w,b
  7466  01084A  6FAC               	movwf	(??_P2PTasks+1)& (0+255),b
  7467  01084C  0101               	movlb	1	; () banked
  7468  01084E  518D               	movf	(_tick1+2)& (0+255),w,b
  7469  010850  0100               	movlb	0	; () banked
  7470  010852  59B5               	subwfb	(P2PTasks@tick2+2)& (0+255),w,b
  7471  010854  6FAD               	movwf	(??_P2PTasks+2)& (0+255),b
  7472  010856  0101               	movlb	1	; () banked
  7473  010858  518E               	movf	(_tick1+3)& (0+255),w,b
  7474  01085A  0100               	movlb	0	; () banked
  7475  01085C  59B6               	subwfb	(P2PTasks@tick2+3)& (0+255),w,b
  7476  01085E  6FAE               	movwf	(??_P2PTasks+3)& (0+255),b
  7477  010860  51AE               	movf	(??_P2PTasks+3)& (0+255),w,b
  7478  010862  E107               	bnz	u11980
  7479  010864  0E8D               	movlw	141
  7480  010866  5DAB               	subwf	??_P2PTasks& (0+255),w,b
  7481  010868  0E86               	movlw	134
  7482  01086A  59AC               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7483  01086C  0E47               	movlw	71
  7484  01086E  59AD               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7485  010870  E30C               	bnc	l12134
  7486  010872                     u11980:
  7487                           
  7488                           ; BSR set to: 0
  7489  010872  51EB               	movf	_role& (0+255),w,b
  7490  010874  E10A               	bnz	l12134
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;miwi_p2p.c: 377: {
  7494                           ;miwi_p2p.c: 378: MiApp_BroadcastConnectionTable ();
  7495  010876  ECA8  F08A         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;miwi_p2p.c: 379: tick1 = tick2;
  7499  01087A  C0B3  F18B         	movff	P2PTasks@tick2,_tick1
  7500  01087E  C0B4  F18C         	movff	P2PTasks@tick2+1,_tick1+1
  7501  010882  C0B5  F18D         	movff	P2PTasks@tick2+2,_tick1+2
  7502  010886  C0B6  F18E         	movff	P2PTasks@tick2+3,_tick1+3
  7503  01088A                     l12134:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;miwi_p2p.c: 380: }
  7507                           ;miwi_p2p.c: 423: if( P2PStatus.bits.SaveConnection )
  7508  01088A  A3E1               	btfss	_P2PStatus& (0+255),1,b	;volatile
  7509  01088C  D035               	goto	l12144
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;miwi_p2p.c: 424: {
  7513                           ;miwi_p2p.c: 425: tmpTick = MiWi_TickGet();
  7514  01088E  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  7515  010892  C06D  F0AF         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7516  010896  C06E  F0B0         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7517  01089A  C06F  F0B1         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7518  01089E  C070  F0B2         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;miwi_p2p.c: 426: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
  7522  0108A2  0101               	movlb	1	; () banked
  7523  0108A4  517F               	movf	_nvmDelayTick& (0+255),w,b
  7524  0108A6  0100               	movlb	0	; () banked
  7525  0108A8  5DAF               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7526  0108AA  6FAB               	movwf	??_P2PTasks& (0+255),b
  7527  0108AC  0101               	movlb	1	; () banked
  7528  0108AE  5180               	movf	(_nvmDelayTick+1)& (0+255),w,b
  7529  0108B0  0100               	movlb	0	; () banked
  7530  0108B2  59B0               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7531  0108B4  6FAC               	movwf	(??_P2PTasks+1)& (0+255),b
  7532  0108B6  0101               	movlb	1	; () banked
  7533  0108B8  5181               	movf	(_nvmDelayTick+2)& (0+255),w,b
  7534  0108BA  0100               	movlb	0	; () banked
  7535  0108BC  59B1               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7536  0108BE  6FAD               	movwf	(??_P2PTasks+2)& (0+255),b
  7537  0108C0  0101               	movlb	1	; () banked
  7538  0108C2  5182               	movf	(_nvmDelayTick+3)& (0+255),w,b
  7539  0108C4  0100               	movlb	0	; () banked
  7540  0108C6  59B2               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7541  0108C8  6FAE               	movwf	(??_P2PTasks+3)& (0+255),b
  7542  0108CA  51AE               	movf	(??_P2PTasks+3)& (0+255),w,b
  7543  0108CC  E107               	bnz	u12010
  7544  0108CE  0EB5               	movlw	181
  7545  0108D0  5DAB               	subwf	??_P2PTasks& (0+255),w,b
  7546  0108D2  0EC4               	movlw	196
  7547  0108D4  59AC               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7548  0108D6  0E04               	movlw	4
  7549  0108D8  59AD               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7550  0108DA  E30E               	bnc	l12144
  7551  0108DC                     u12010:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;miwi_p2p.c: 427: {
  7555                           ;miwi_p2p.c: 428: P2PStatus.bits.SaveConnection = 0;
  7556  0108DC  93E1               	bcf	_P2PStatus& (0+255),1,b	;volatile
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;miwi_p2p.c: 429: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10 
      +                          * sizeof(CONNECTION_ENTRY));
  7560  0108DE  0E1E               	movlw	low _ConnectionTable
  7561  0108E0  6F6E               	movwf	NVMWrite@source& (0+255),b
  7562  0108E2  0E02               	movlw	high _ConnectionTable
  7563  0108E4  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
  7564  0108E6  C0E6  F070         	movff	_nvmConnectionTable,NVMWrite@addr
  7565  0108EA  C0E7  F071         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  7566  0108EE  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  7567  0108F0  0E8C               	movlw	140
  7568  0108F2  6F72               	movwf	NVMWrite@count& (0+255),b
  7569  0108F4  EC32  F093         	call	_NVMWrite	;wreg free
  7570  0108F8                     l12144:
  7571                           
  7572                           ;miwi_p2p.c: 431: }
  7573                           ;miwi_p2p.c: 432: }
  7574                           ;miwi_p2p.c: 449: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  7575  0108F8  0100               	movlb	0	; () banked
  7576  0108FA  B7E1               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7577  0108FC  0012               	return	
  7578                           
  7579                           ; BSR set to: 0
  7580  0108FE  ECB2  F08B         	call	_MiMAC_ReceivedPacket	;wreg free
  7581  010902  0900               	iorlw	0
  7582  010904  B4D8               	btfsc	status,2,c
  7583  010906  0012               	return	
  7584                           
  7585                           ;miwi_p2p.c: 450: {
  7586                           ;miwi_p2p.c: 451: FW_Stat = 0;
  7587  010908  6A10               	clrf	_FW_Stat,c
  7588                           
  7589                           ;miwi_p2p.c: 452: rxMessage.flags.Val = 0;
  7590  01090A  6A01               	clrf	_rxMessage,c
  7591                           
  7592                           ;miwi_p2p.c: 455: temp_bit = MACRxPacket.flags.bits.broadcast;
  7593  01090C  0101               	movlb	1	; () banked
  7594  01090E  0E00               	movlw	0
  7595  010910  B573               	btfsc	_MACRxPacket& (0+255),2,b
  7596  010912  0E01               	movlw	1
  7597  010914  6E21               	movwf	_temp_bit,c
  7598                           
  7599                           ; BSR set to: 1
  7600                           ;miwi_p2p.c: 456: rxMessage.flags.bits.broadcast = temp_bit;
  7601  010916  1801               	xorwf	_rxMessage,w,c
  7602  010918  0BFC               	andlw	-4
  7603  01091A  1821               	xorwf	_temp_bit,w,c
  7604  01091C  6E01               	movwf	_rxMessage,c
  7605                           
  7606                           ; BSR set to: 1
  7607                           ;miwi_p2p.c: 458: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7608  01091E  A773               	btfss	_MACRxPacket& (0+255),3,b
  7609  010920  D002               	bra	u12045
  7610  010922  8601               	bsf	_rxMessage,3,c
  7611  010924  D001               	bra	u12047
  7612  010926                     u12045:
  7613  010926  9601               	bcf	_rxMessage,3,c
  7614  010928                     u12047:
  7615                           
  7616                           ;miwi_p2p.c: 459: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7617  010928  0101               	movlb	1	; () banked
  7618  01092A  5173               	movf	_MACRxPacket& (0+255),w,b
  7619  01092C  0B03               	andlw	3
  7620  01092E  06E8               	decf	wreg,f,c
  7621  010930  E104               	bnz	u12050
  7622  010932  0100               	movlb	0	; () banked
  7623  010934  6BAB               	clrf	??_P2PTasks& (0+255),b
  7624  010936  2BAB               	incf	??_P2PTasks& (0+255),f,b
  7625  010938  D002               	goto	u12068
  7626  01093A                     u12050:
  7627  01093A  0100               	movlb	0	; () banked
  7628  01093C  6BAB               	clrf	??_P2PTasks& (0+255),b
  7629  01093E                     u12068:
  7630  01093E  3BAB               	swapf	??_P2PTasks& (0+255),f,b
  7631  010940  47AB               	rlncf	??_P2PTasks& (0+255),f,b
  7632  010942  5001               	movf	_rxMessage,w,c
  7633  010944  19AB               	xorwf	??_P2PTasks& (0+255),w,b
  7634  010946  0BDF               	andlw	-33
  7635  010948  19AB               	xorwf	??_P2PTasks& (0+255),w,b
  7636  01094A  6E01               	movwf	_rxMessage,c
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;miwi_p2p.c: 460: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7640  01094C  0101               	movlb	1	; () banked
  7641  01094E  AF73               	btfss	_MACRxPacket& (0+255),7,b
  7642  010950  D002               	bra	u12075
  7643  010952  8C01               	bsf	_rxMessage,6,c
  7644  010954  D001               	bra	u12077
  7645  010956                     u12075:
  7646  010956  9C01               	bcf	_rxMessage,6,c
  7647  010958                     u12077:
  7648                           
  7649                           ;miwi_p2p.c: 461: if( MACRxPacket.flags.bits.sourcePrsnt )
  7650  010958  0101               	movlb	1	; () banked
  7651  01095A  AF73               	btfss	_MACRxPacket& (0+255),7,b
  7652  01095C  D004               	goto	l12164
  7653                           
  7654                           ; BSR set to: 1
  7655                           ;miwi_p2p.c: 462: {
  7656                           ;miwi_p2p.c: 463: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7657  01095E  C174  F004         	movff	_MACRxPacket+1,_rxMessage+3
  7658  010962  C175  F005         	movff	_MACRxPacket+2,_rxMessage+4
  7659  010966                     l12164:
  7660                           
  7661                           ; BSR set to: 1
  7662                           ;miwi_p2p.c: 464: }
  7663                           ;miwi_p2p.c: 469: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7664  010966  C178  F008         	movff	_MACRxPacket+5,_rxMessage+7
  7665                           
  7666                           ;miwi_p2p.c: 470: rxMessage.Payload = MACRxPacket.Payload;
  7667  01096A  C176  F006         	movff	_MACRxPacket+3,_rxMessage+5
  7668  01096E  C177  F007         	movff	_MACRxPacket+4,_rxMessage+6
  7669                           
  7670                           ; BSR set to: 1
  7671                           ;miwi_p2p.c: 479: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7672  010972  C17A  F00A         	movff	_MACRxPacket+7,_rxMessage+9
  7673                           
  7674                           ; BSR set to: 1
  7675                           ;miwi_p2p.c: 480: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7676  010976  C179  F009         	movff	_MACRxPacket+6,_rxMessage+8
  7677                           
  7678                           ; BSR set to: 1
  7679                           ;miwi_p2p.c: 483: if( rxMessage.flags.bits.command )
  7680  01097A  AA01               	btfss	_rxMessage,5,c
  7681  01097C  D289               	goto	l445
  7682  01097E  D266               	goto	l12436
  7683  010980                     l12174:
  7684                           
  7685                           ; BSR set to: 1
  7686                           ;miwi_p2p.c: 491: {
  7687                           ;miwi_p2p.c: 493: if(role == PanCoordinator)
  7688  010980  0100               	movlb	0	; () banked
  7689  010982  51EB               	movf	_role& (0+255),w,b
  7690  010984  E10A               	bnz	l12180
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;miwi_p2p.c: 494: {
  7694                           ;miwi_p2p.c: 505: uint8_t status = 0x00;
  7695  010986  6BBE               	clrf	P2PTasks@status& (0+255),b
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;miwi_p2p.c: 509: if( currentChannel != rxMessage.Payload[1] )
  7699  010988  EE20 F001          	lfsr	2,1
  7700  01098C  5006               	movf	_rxMessage+5,w,c
  7701  01098E  26D9               	addwf	fsr2l,f,c
  7702  010990  5007               	movf	_rxMessage+6,w,c
  7703  010992  22DA               	addwfc	fsr2h,f,c
  7704  010994  51E9               	movf	_currentChannel& (0+255),w,b
  7705  010996  18DE               	xorwf	postinc2,w,c
  7706  010998  E003               	bz	l12182
  7707  01099A                     l12180:
  7708                           
  7709                           ;miwi_p2p.c: 510: {
  7710                           ;miwi_p2p.c: 511: MiMAC_DiscardPacket();
  7711  01099A  ECCD  F09A         	call	_MiMAC_DiscardPacket	;wreg free
  7712                           
  7713                           ;miwi_p2p.c: 512: break;
  7714  01099E  D27A               	goto	l12438
  7715  0109A0                     l12182:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;miwi_p2p.c: 513: }
  7719                           ;miwi_p2p.c: 517: if( ConnMode == 0x03 )
  7720  0109A0  0E03               	movlw	3
  7721  0109A2  19EC               	xorwf	_ConnMode& (0+255),w,b
  7722  0109A4  E0FA               	bz	l12180
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;miwi_p2p.c: 521: }
  7726                           ;miwi_p2p.c: 533: {
  7727                           ;miwi_p2p.c: 536: status = AddConnection();
  7728  0109A6  EC3F  F08D         	call	_AddConnection	;wreg free
  7729  0109AA  6FBE               	movwf	P2PTasks@status& (0+255),b
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;miwi_p2p.c: 537: }
  7733                           ;miwi_p2p.c: 539: uint8_t p;
  7734                           ;miwi_p2p.c: 540: if (rxMessage.Payload[3] == 0xAA)
  7735  0109AC  EE20 F003          	lfsr	2,3
  7736  0109B0  5006               	movf	_rxMessage+5,w,c
  7737  0109B2  26D9               	addwf	fsr2l,f,c
  7738  0109B4  5007               	movf	_rxMessage+6,w,c
  7739  0109B6  22DA               	addwfc	fsr2h,f,c
  7740  0109B8  0EAA               	movlw	170
  7741  0109BA  18DE               	xorwf	postinc2,w,c
  7742  0109BC  E11E               	bnz	l12204
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;miwi_p2p.c: 541: {
  7746                           ;miwi_p2p.c: 543: for (p = 0 ;p <10;p++)
  7747  0109BE  6BBC               	clrf	P2PTasks@p& (0+255),b
  7748  0109C0                     l12192:
  7749                           
  7750                           ; BSR set to: 0
  7751  0109C0  0E09               	movlw	9
  7752  0109C2  65BC               	cpfsgt	P2PTasks@p& (0+255),b
  7753  0109C4  D001               	goto	l12196
  7754  0109C6  D019               	goto	l12204
  7755  0109C8                     l12196:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;miwi_p2p.c: 544: {
  7759                           ;miwi_p2p.c: 545: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
  7760  0109C8  C004  F06D         	movff	_rxMessage+3,isSameAddress@Address1
  7761  0109CC  C005  F06E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7762  0109D0  51BC               	movf	P2PTasks@p& (0+255),w,b
  7763  0109D2  0D0E               	mullw	14
  7764  0109D4  0E22               	movlw	low (_ConnectionTable+4)
  7765  0109D6  24F3               	addwf	prodl,w,c
  7766  0109D8  6F6F               	movwf	isSameAddress@Address2& (0+255),b
  7767  0109DA  0E02               	movlw	high (_ConnectionTable+4)
  7768  0109DC  20F4               	addwfc	prodh,w,c
  7769  0109DE  6F70               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7770  0109E0  ECD0  F099         	call	_isSameAddress	;wreg free
  7771  0109E4  0900               	iorlw	0
  7772  0109E6  E007               	bz	l12200
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;miwi_p2p.c: 546: {
  7776                           ;miwi_p2p.c: 547: permanent_connections[p] = 0xFF;
  7777  0109E8  0E69               	movlw	low _permanent_connections
  7778  0109EA  25BC               	addwf	P2PTasks@p& (0+255),w,b
  7779  0109EC  6ED9               	movwf	fsr2l,c
  7780  0109EE  6ADA               	clrf	fsr2h,c
  7781  0109F0  0E01               	movlw	high _permanent_connections
  7782  0109F2  22DA               	addwfc	fsr2h,f,c
  7783  0109F4  68DF               	setf	indf2,c
  7784  0109F6                     l12200:
  7785                           
  7786                           ; BSR set to: 0
  7787  0109F6  2BBC               	incf	P2PTasks@p& (0+255),f,b
  7788  0109F8  D7E3               	goto	l12192
  7789  0109FA                     l12204:
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;miwi_p2p.c: 549: }
  7793                           ;miwi_p2p.c: 551: }
  7794                           ;miwi_p2p.c: 552: }
  7795                           ;miwi_p2p.c: 554: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  7796  0109FA  05EC               	decf	_ConnMode& (0+255),w,b
  7797  0109FC  E107               	bnz	l12218
  7798                           
  7799                           ; BSR set to: 0
  7800  0109FE  05BE               	decf	P2PTasks@status& (0+255),w,b
  7801  010A00  E005               	bz	l12218
  7802                           
  7803                           ; BSR set to: 0
  7804  010A02  0E02               	movlw	2
  7805  010A04  19BE               	xorwf	P2PTasks@status& (0+255),w,b
  7806  010A06  E002               	bz	l12218
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;miwi_p2p.c: 555: {
  7810                           ;miwi_p2p.c: 556: status = 0xF3;
  7811  010A08  0EF3               	movlw	243
  7812  010A0A  6FBE               	movwf	P2PTasks@status& (0+255),b
  7813  010A0C                     l12218:
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;miwi_p2p.c: 564: }
  7817                           ;miwi_p2p.c: 568: {TxData = 0;};
  7818  010A0C  6BE2               	clrf	_TxData& (0+255),b
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;miwi_p2p.c: 569: TxBuffer[TxData++] = 0x91;
  7822  010A0E  0E93               	movlw	low _TxBuffer
  7823  010A10  25E2               	addwf	_TxData& (0+255),w,b
  7824  010A12  6ED9               	movwf	fsr2l,c
  7825  010A14  6ADA               	clrf	fsr2h,c
  7826  010A16  0E01               	movlw	high _TxBuffer
  7827  010A18  22DA               	addwfc	fsr2h,f,c
  7828  010A1A  0E91               	movlw	145
  7829  010A1C  6EDF               	movwf	indf2,c
  7830                           
  7831                           ; BSR set to: 0
  7832  010A1E  2BE2               	incf	_TxData& (0+255),f,b
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;miwi_p2p.c: 570: TxBuffer[TxData++] = status;
  7836  010A20  0E93               	movlw	low _TxBuffer
  7837  010A22  25E2               	addwf	_TxData& (0+255),w,b
  7838  010A24  6ED9               	movwf	fsr2l,c
  7839  010A26  6ADA               	clrf	fsr2h,c
  7840  010A28  0E01               	movlw	high _TxBuffer
  7841  010A2A  22DA               	addwfc	fsr2h,f,c
  7842  010A2C  C0BE  FFDF         	movff	P2PTasks@status,indf2
  7843                           
  7844                           ; BSR set to: 0
  7845  010A30  2BE2               	incf	_TxData& (0+255),f,b
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;miwi_p2p.c: 571: TxBuffer[TxData++] = MyindexinPC;
  7849  010A32  0E93               	movlw	low _TxBuffer
  7850  010A34  25E2               	addwf	_TxData& (0+255),w,b
  7851  010A36  6ED9               	movwf	fsr2l,c
  7852  010A38  6ADA               	clrf	fsr2h,c
  7853  010A3A  0E01               	movlw	high _TxBuffer
  7854  010A3C  22DA               	addwfc	fsr2h,f,c
  7855  010A3E  C012  FFDF         	movff	_MyindexinPC,indf2
  7856                           
  7857                           ; BSR set to: 0
  7858  010A42  2BE2               	incf	_TxData& (0+255),f,b
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;miwi_p2p.c: 572: if( status == 0x00 ||
  7862                           ;miwi_p2p.c: 573: status == 0x01 )
  7863  010A44  51BE               	movf	P2PTasks@status& (0+255),w,b
  7864  010A46  E002               	bz	l12236
  7865                           
  7866                           ; BSR set to: 0
  7867  010A48  05BE               	decf	P2PTasks@status& (0+255),w,b
  7868  010A4A  E11B               	bnz	l12254
  7869  010A4C                     l12236:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;miwi_p2p.c: 574: {
  7873                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = P2PCapacityInfo;
  7874  010A4C  0E93               	movlw	low _TxBuffer
  7875  010A4E  25E2               	addwf	_TxData& (0+255),w,b
  7876  010A50  6ED9               	movwf	fsr2l,c
  7877  010A52  6ADA               	clrf	fsr2h,c
  7878  010A54  0E01               	movlw	high _TxBuffer
  7879  010A56  22DA               	addwfc	fsr2h,f,c
  7880  010A58  C0E0  FFDF         	movff	_P2PCapacityInfo,indf2
  7881                           
  7882                           ; BSR set to: 0
  7883  010A5C  2BE2               	incf	_TxData& (0+255),f,b
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;miwi_p2p.c: 577: for(i = 0; i < 1; i++)
  7887  010A5E  6BBF               	clrf	P2PTasks@i& (0+255),b
  7888  010A60                     l12242:
  7889                           
  7890                           ; BSR set to: 0
  7891  010A60  51BF               	movf	P2PTasks@i& (0+255),w,b
  7892  010A62  E10F               	bnz	l12254
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;miwi_p2p.c: 578: {
  7896                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = AdditionalNodeID[i];
  7897  010A64  51BF               	movf	P2PTasks@i& (0+255),w,b
  7898  010A66  0F55               	addlw	low _AdditionalNodeID
  7899  010A68  6ED9               	movwf	fsr2l,c
  7900  010A6A  6ADA               	clrf	fsr2h,c
  7901  010A6C  0E93               	movlw	low _TxBuffer
  7902  010A6E  25E2               	addwf	_TxData& (0+255),w,b
  7903  010A70  6EE1               	movwf	fsr1l,c
  7904  010A72  6AE2               	clrf	fsr1h,c
  7905  010A74  0E01               	movlw	high _TxBuffer
  7906  010A76  22E2               	addwfc	fsr1h,f,c
  7907  010A78  CFDF FFE7          	movff	indf2,indf1
  7908                           
  7909                           ; BSR set to: 0
  7910  010A7C  2BE2               	incf	_TxData& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913  010A7E  2BBF               	incf	P2PTasks@i& (0+255),f,b
  7914  010A80  D7EF               	goto	l12242
  7915  010A82                     l12254:
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;miwi_p2p.c: 580: }
  7919                           ;miwi_p2p.c: 582: }
  7920                           ;miwi_p2p.c: 584: MiMAC_DiscardPacket();
  7921  010A82  ECCD  F09A         	call	_MiMAC_DiscardPacket	;wreg free
  7922                           
  7923                           ;miwi_p2p.c: 598: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7924  010A86  C004  F094         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7925  010A8A  C005  F095         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7926  010A8E  0E01               	movlw	1
  7927  010A90  0100               	movlb	0	; () banked
  7928  010A92  6F96               	movwf	SendPacket@isCommand& (0+255),b
  7929  010A94  0E00               	movlw	0
  7930  010A96  B601               	btfsc	_rxMessage,3,c
  7931  010A98  0E01               	movlw	1
  7932  010A9A  6F97               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7933  010A9C  0E00               	movlw	0
  7934  010A9E  EC47  F092         	call	_SendPacket
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;miwi_p2p.c: 603: MiApp_BroadcastConnectionTable ();
  7938  010AA2  ECA8  F08A         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;miwi_p2p.c: 606: if( status == 0x00 )
  7942  010AA6  51BE               	movf	P2PTasks@status& (0+255),w,b
  7943  010AA8  E001 D1F4          	bnz	l12438
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;miwi_p2p.c: 607: {
  7947                           ;miwi_p2p.c: 608: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
  7948  010AAC  51DF               	movf	_LatestConnection& (0+255),w,b
  7949  010AAE  0D0E               	mullw	14
  7950  010AB0  0E1E               	movlw	low _ConnectionTable
  7951  010AB2  24F3               	addwf	prodl,w,c
  7952  010AB4  6F6E               	movwf	NVMWrite@source& (0+255),b
  7953  010AB6  0E02               	movlw	high _ConnectionTable
  7954  010AB8  20F4               	addwfc	prodh,w,c
  7955  010ABA  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
  7956  010ABC  51DF               	movf	_LatestConnection& (0+255),w,b
  7957  010ABE  0D0E               	mullw	14
  7958  010AC0  51E6               	movf	_nvmConnectionTable& (0+255),w,b
  7959  010AC2  24F3               	addwf	prodl,w,c
  7960  010AC4  6F70               	movwf	NVMWrite@addr& (0+255),b
  7961  010AC6  51E7               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  7962  010AC8  20F4               	addwfc	prodh,w,c
  7963  010ACA  6F71               	movwf	(NVMWrite@addr+1)& (0+255),b
  7964  010ACC  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  7965  010ACE  0E0E               	movlw	14
  7966  010AD0  6F72               	movwf	NVMWrite@count& (0+255),b
  7967  010AD2  EC32  F093         	call	_NVMWrite	;wreg free
  7968  010AD6  D1DE               	goto	l12438
  7969  010AD8                     l12266:
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;miwi_p2p.c: 627: {
  7973                           ;miwi_p2p.c: 628: if(ConnMode > 0x02)
  7974  010AD8  0E02               	movlw	2
  7975  010ADA  0100               	movlb	0	; () banked
  7976  010ADC  65EC               	cpfsgt	_ConnMode& (0+255),b
  7977  010ADE  D001               	goto	l12270
  7978  010AE0  D75C               	goto	l12180
  7979  010AE2                     l12270:
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;miwi_p2p.c: 632: }
  7983                           ;miwi_p2p.c: 633: if( currentChannel != rxMessage.Payload[1] )
  7984  010AE2  EE20 F001          	lfsr	2,1
  7985  010AE6  5006               	movf	_rxMessage+5,w,c
  7986  010AE8  26D9               	addwf	fsr2l,f,c
  7987  010AEA  5007               	movf	_rxMessage+6,w,c
  7988  010AEC  22DA               	addwfc	fsr2h,f,c
  7989  010AEE  51E9               	movf	_currentChannel& (0+255),w,b
  7990  010AF0  18DE               	xorwf	postinc2,w,c
  7991  010AF2  E001 D752          	bnz	l12180
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;miwi_p2p.c: 637: }
  7995                           ;miwi_p2p.c: 639: {TxData = 0;};
  7996  010AF6  6BE2               	clrf	_TxData& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;miwi_p2p.c: 640: TxBuffer[TxData++] = 0x97;
  8000  010AF8  0E93               	movlw	low _TxBuffer
  8001  010AFA  25E2               	addwf	_TxData& (0+255),w,b
  8002  010AFC  6ED9               	movwf	fsr2l,c
  8003  010AFE  6ADA               	clrf	fsr2h,c
  8004  010B00  0E01               	movlw	high _TxBuffer
  8005  010B02  22DA               	addwfc	fsr2h,f,c
  8006  010B04  0E97               	movlw	151
  8007  010B06  6EDF               	movwf	indf2,c
  8008                           
  8009                           ; BSR set to: 0
  8010  010B08  2BE2               	incf	_TxData& (0+255),f,b
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;miwi_p2p.c: 641: TxBuffer[TxData++] = P2PCapacityInfo;
  8014  010B0A  0E93               	movlw	low _TxBuffer
  8015  010B0C  25E2               	addwf	_TxData& (0+255),w,b
  8016  010B0E  6ED9               	movwf	fsr2l,c
  8017  010B10  6ADA               	clrf	fsr2h,c
  8018  010B12  0E01               	movlw	high _TxBuffer
  8019  010B14  22DA               	addwfc	fsr2h,f,c
  8020  010B16  C0E0  FFDF         	movff	_P2PCapacityInfo,indf2
  8021  010B1A  2BE2               	incf	_TxData& (0+255),f,b
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;miwi_p2p.c: 643: for(i = 0; i < 1; i++)
  8025  010B1C  6BBF               	clrf	P2PTasks@i& (0+255),b
  8026  010B1E                     l12282:
  8027                           
  8028                           ; BSR set to: 0
  8029  010B1E  51BF               	movf	P2PTasks@i& (0+255),w,b
  8030  010B20  E10F               	bnz	l12294
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;miwi_p2p.c: 644: {
  8034                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = AdditionalNodeID[i];
  8035  010B22  51BF               	movf	P2PTasks@i& (0+255),w,b
  8036  010B24  0F55               	addlw	low _AdditionalNodeID
  8037  010B26  6ED9               	movwf	fsr2l,c
  8038  010B28  6ADA               	clrf	fsr2h,c
  8039  010B2A  0E93               	movlw	low _TxBuffer
  8040  010B2C  25E2               	addwf	_TxData& (0+255),w,b
  8041  010B2E  6EE1               	movwf	fsr1l,c
  8042  010B30  6AE2               	clrf	fsr1h,c
  8043  010B32  0E01               	movlw	high _TxBuffer
  8044  010B34  22E2               	addwfc	fsr1h,f,c
  8045  010B36  CFDF FFE7          	movff	indf2,indf1
  8046                           
  8047                           ; BSR set to: 0
  8048  010B3A  2BE2               	incf	_TxData& (0+255),f,b
  8049                           
  8050                           ; BSR set to: 0
  8051  010B3C  2BBF               	incf	P2PTasks@i& (0+255),f,b
  8052  010B3E  D7EF               	goto	l12282
  8053  010B40                     l12294:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;miwi_p2p.c: 646: }
  8057                           ;miwi_p2p.c: 648: MiMAC_DiscardPacket();
  8058  010B40  ECCD  F09A         	call	_MiMAC_DiscardPacket	;wreg free
  8059                           
  8060                           ;miwi_p2p.c: 661: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  8061  010B44  C004  F094         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8062  010B48  C005  F095         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8063  010B4C  0E01               	movlw	1
  8064  010B4E  0100               	movlb	0	; () banked
  8065  010B50  6F96               	movwf	SendPacket@isCommand& (0+255),b
  8066  010B52  0E00               	movlw	0
  8067  010B54  B601               	btfsc	_rxMessage,3,c
  8068  010B56  0E01               	movlw	1
  8069  010B58  6F97               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8070  010B5A  0E00               	movlw	0
  8071  010B5C  EC47  F092         	call	_SendPacket
  8072                           
  8073                           ;miwi_p2p.c: 664: }
  8074                           ;miwi_p2p.c: 665: break;
  8075  010B60  D199               	goto	l12438
  8076  010B62                     l472:
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;miwi_p2p.c: 673: {
  8080                           ;miwi_p2p.c: 674: {TxData = 0;};
  8081  010B62  0100               	movlb	0	; () banked
  8082  010B64  6BE2               	clrf	_TxData& (0+255),b
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;miwi_p2p.c: 675: TxBuffer[TxData++] = 0x92;
  8086  010B66  0E93               	movlw	low _TxBuffer
  8087  010B68  25E2               	addwf	_TxData& (0+255),w,b
  8088  010B6A  6ED9               	movwf	fsr2l,c
  8089  010B6C  6ADA               	clrf	fsr2h,c
  8090  010B6E  0E01               	movlw	high _TxBuffer
  8091  010B70  22DA               	addwfc	fsr2h,f,c
  8092  010B72  0E92               	movlw	146
  8093  010B74  6EDF               	movwf	indf2,c
  8094                           
  8095                           ; BSR set to: 0
  8096  010B76  2BE2               	incf	_TxData& (0+255),f,b
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;miwi_p2p.c: 677: for(i = 0; i < 10; i++)
  8100  010B78  6BBF               	clrf	P2PTasks@i& (0+255),b
  8101  010B7A                     l12304:
  8102                           
  8103                           ; BSR set to: 0
  8104  010B7A  0E09               	movlw	9
  8105  010B7C  65BF               	cpfsgt	P2PTasks@i& (0+255),b
  8106  010B7E  D001               	goto	l12308
  8107  010B80  D046               	goto	l12324
  8108  010B82                     l12308:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;miwi_p2p.c: 678: {
  8112                           ;miwi_p2p.c: 680: if( ConnectionTable[i].status.bits.isValid )
  8113  010B82  51BF               	movf	P2PTasks@i& (0+255),w,b
  8114  010B84  0D0E               	mullw	14
  8115  010B86  0E2A               	movlw	low (_ConnectionTable+12)
  8116  010B88  24F3               	addwf	prodl,w,c
  8117  010B8A  6ED9               	movwf	fsr2l,c
  8118  010B8C  0E02               	movlw	high (_ConnectionTable+12)
  8119  010B8E  20F4               	addwfc	prodh,w,c
  8120  010B90  6EDA               	movwf	fsr2h,c
  8121  010B92  AEDF               	btfss	indf2,7,c
  8122  010B94  D039               	goto	l12320
  8123                           
  8124                           ; BSR set to: 2
  8125                           ;miwi_p2p.c: 681: {
  8126                           ;miwi_p2p.c: 683: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8127  010B96  C004  F06D         	movff	_rxMessage+3,isSameAddress@Address1
  8128  010B9A  C005  F06E         	movff	_rxMessage+4,isSameAddress@Address1+1
  8129  010B9E  0100               	movlb	0	; () banked
  8130  010BA0  51BF               	movf	P2PTasks@i& (0+255),w,b
  8131  010BA2  0D0E               	mullw	14
  8132  010BA4  0E22               	movlw	low (_ConnectionTable+4)
  8133  010BA6  24F3               	addwf	prodl,w,c
  8134  010BA8  6F6F               	movwf	isSameAddress@Address2& (0+255),b
  8135  010BAA  0E02               	movlw	high (_ConnectionTable+4)
  8136  010BAC  20F4               	addwfc	prodh,w,c
  8137  010BAE  6F70               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8138  010BB0  ECD0  F099         	call	_isSameAddress	;wreg free
  8139  010BB4  0900               	iorlw	0
  8140  010BB6  E028               	bz	l12320
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;miwi_p2p.c: 684: {
  8144                           ;miwi_p2p.c: 687: ConnectionTable[i].status.Val = 0;
  8145  010BB8  51BF               	movf	P2PTasks@i& (0+255),w,b
  8146  010BBA  0D0E               	mullw	14
  8147  010BBC  0E2A               	movlw	low (_ConnectionTable+12)
  8148  010BBE  24F3               	addwf	prodl,w,c
  8149  010BC0  6ED9               	movwf	fsr2l,c
  8150  010BC2  0E02               	movlw	high (_ConnectionTable+12)
  8151  010BC4  20F4               	addwfc	prodh,w,c
  8152  010BC6  6EDA               	movwf	fsr2h,c
  8153  010BC8  6ADF               	clrf	indf2,c
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;miwi_p2p.c: 689: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8157  010BCA  51BF               	movf	P2PTasks@i& (0+255),w,b
  8158  010BCC  0D0E               	mullw	14
  8159  010BCE  0E1E               	movlw	low _ConnectionTable
  8160  010BD0  24F3               	addwf	prodl,w,c
  8161  010BD2  6F6E               	movwf	NVMWrite@source& (0+255),b
  8162  010BD4  0E02               	movlw	high _ConnectionTable
  8163  010BD6  20F4               	addwfc	prodh,w,c
  8164  010BD8  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
  8165  010BDA  51BF               	movf	P2PTasks@i& (0+255),w,b
  8166  010BDC  0D0E               	mullw	14
  8167  010BDE  51E6               	movf	_nvmConnectionTable& (0+255),w,b
  8168  010BE0  24F3               	addwf	prodl,w,c
  8169  010BE2  6F70               	movwf	NVMWrite@addr& (0+255),b
  8170  010BE4  51E7               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  8171  010BE6  20F4               	addwfc	prodh,w,c
  8172  010BE8  6F71               	movwf	(NVMWrite@addr+1)& (0+255),b
  8173  010BEA  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  8174  010BEC  0E0E               	movlw	14
  8175  010BEE  6F72               	movwf	NVMWrite@count& (0+255),b
  8176  010BF0  EC32  F093         	call	_NVMWrite	;wreg free
  8177                           
  8178                           ;miwi_p2p.c: 691: TxBuffer[TxData++] = 0x00;
  8179  010BF4  0E93               	movlw	low _TxBuffer
  8180  010BF6  0100               	movlb	0	; () banked
  8181  010BF8  25E2               	addwf	_TxData& (0+255),w,b
  8182  010BFA  6ED9               	movwf	fsr2l,c
  8183  010BFC  6ADA               	clrf	fsr2h,c
  8184  010BFE  0E01               	movlw	high _TxBuffer
  8185  010C00  22DA               	addwfc	fsr2h,f,c
  8186  010C02  6ADF               	clrf	indf2,c
  8187                           
  8188                           ; BSR set to: 0
  8189  010C04  2BE2               	incf	_TxData& (0+255),f,b
  8190                           
  8191                           ;miwi_p2p.c: 693: break;
  8192  010C06  D003               	goto	l12324
  8193  010C08                     l12320:
  8194  010C08  0100               	movlb	0	; () banked
  8195  010C0A  2BBF               	incf	P2PTasks@i& (0+255),f,b
  8196  010C0C  D7B6               	goto	l12304
  8197  010C0E                     l12324:
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;miwi_p2p.c: 694: }
  8201                           ;miwi_p2p.c: 695: }
  8202                           ;miwi_p2p.c: 696: }
  8203                           ;miwi_p2p.c: 698: MiMAC_DiscardPacket();
  8204  010C0E  ECCD  F09A         	call	_MiMAC_DiscardPacket	;wreg free
  8205                           
  8206                           ;miwi_p2p.c: 700: if( i == 10 )
  8207  010C12  0E0A               	movlw	10
  8208  010C14  0100               	movlb	0	; () banked
  8209  010C16  19BF               	xorwf	P2PTasks@i& (0+255),w,b
  8210  010C18  E109               	bnz	l12332
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;miwi_p2p.c: 701: {
  8214                           ;miwi_p2p.c: 703: TxBuffer[TxData++] = 0xF0;
  8215  010C1A  0E93               	movlw	low _TxBuffer
  8216  010C1C  25E2               	addwf	_TxData& (0+255),w,b
  8217  010C1E  6ED9               	movwf	fsr2l,c
  8218  010C20  6ADA               	clrf	fsr2h,c
  8219  010C22  0E01               	movlw	high _TxBuffer
  8220  010C24  22DA               	addwfc	fsr2h,f,c
  8221  010C26  0EF0               	movlw	240
  8222  010C28  6EDF               	movwf	indf2,c
  8223                           
  8224                           ; BSR set to: 0
  8225  010C2A  2BE2               	incf	_TxData& (0+255),f,b
  8226  010C2C                     l12332:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;miwi_p2p.c: 704: }
  8230                           ;miwi_p2p.c: 715: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  8231  010C2C  C004  F094         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8232  010C30  C005  F095         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8233  010C34  0E01               	movlw	1
  8234  010C36  6F96               	movwf	SendPacket@isCommand& (0+255),b
  8235  010C38  0E00               	movlw	0
  8236  010C3A  B601               	btfsc	_rxMessage,3,c
  8237  010C3C  0E01               	movlw	1
  8238  010C3E  6F97               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8239  010C40  0E00               	movlw	0
  8240  010C42  EC47  F092         	call	_SendPacket
  8241                           
  8242                           ;miwi_p2p.c: 719: }
  8243                           ;miwi_p2p.c: 720: break;
  8244  010C46  D126               	goto	l12438
  8245  010C48                     l12334:
  8246                           
  8247                           ; BSR set to: 1
  8248                           ;miwi_p2p.c: 728: case 0x01:
  8249                           ;miwi_p2p.c: 742: AddConnection();
  8250  010C48  EC3F  F08D         	call	_AddConnection	;wreg free
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;miwi_p2p.c: 744: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  8254  010C4C  EE20 F002          	lfsr	2,2
  8255  010C50  5006               	movf	_rxMessage+5,w,c
  8256  010C52  26D9               	addwf	fsr2l,f,c
  8257  010C54  5007               	movf	_rxMessage+6,w,c
  8258  010C56  22DA               	addwfc	fsr2h,f,c
  8259  010C58  50DF               	movf	indf2,w,c
  8260  010C5A  6FEA               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;miwi_p2p.c: 745: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  8264  010C5C  0EEA               	movlw	low _myConnectionIndex_in_PanCo
  8265  010C5E  6F6E               	movwf	NVMWrite@source& (0+255),b
  8266  010C60  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
  8267  010C62  C02B  F070         	movff	_nvmmyIndex,NVMWrite@addr
  8268  010C66  C02C  F071         	movff	_nvmmyIndex+1,NVMWrite@addr+1
  8269  010C6A  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  8270  010C6C  0E01               	movlw	1
  8271  010C6E  6F72               	movwf	NVMWrite@count& (0+255),b
  8272  010C70  EC32  F093         	call	_NVMWrite	;wreg free
  8273                           
  8274                           ;miwi_p2p.c: 749: P2PStatus.bits.SaveConnection = 1;
  8275  010C74  0100               	movlb	0	; () banked
  8276  010C76  83E1               	bsf	_P2PStatus& (0+255),1,b	;volatile
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;miwi_p2p.c: 750: nvmDelayTick = MiWi_TickGet();
  8280  010C78  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  8281  010C7C  C06D  F17F         	movff	?_MiWi_TickGet,_nvmDelayTick
  8282  010C80  C06E  F180         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  8283  010C84  C06F  F181         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  8284  010C88  C070  F182         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  8285                           
  8286                           ;miwi_p2p.c: 752: break;
  8287  010C8C  D686               	goto	l12180
  8288  010C8E                     l12346:
  8289                           
  8290                           ; BSR set to: 1
  8291  010C8E  EE20 F001          	lfsr	2,1
  8292  010C92  5006               	movf	_rxMessage+5,w,c
  8293  010C94  26D9               	addwf	fsr2l,f,c
  8294  010C96  5007               	movf	_rxMessage+6,w,c
  8295  010C98  22DA               	addwfc	fsr2h,f,c
  8296  010C9A  50DF               	movf	indf2,w,c
  8297                           
  8298                           ; Switch size 1, requested type "speed"
  8299                           ; Number of cases is 2, Range of values is 0 to 1
  8300                           ; switch strategies available:
  8301                           ; Name         Instructions Cycles
  8302                           ; simple_byte            7     4 (average)
  8303                           ;	Chosen strategy is simple_byte
  8304  010C9C  E0D5               	bz	l12334
  8305  010C9E  0A01               	xorlw	1	; case 1
  8306  010CA0  E0D3               	bz	l12334
  8307  010CA2  D67B               	goto	l12180
  8308  010CA4                     l484:
  8309                           
  8310                           ; BSR set to: 1
  8311                           ;miwi_p2p.c: 762: {
  8312                           ;miwi_p2p.c: 763: if( P2PStatus.bits.Resync )
  8313  010CA4  0100               	movlb	0	; () banked
  8314  010CA6  BBE1               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;miwi_p2p.c: 764: {
  8318                           ;miwi_p2p.c: 765: P2PStatus.bits.Resync = 0;
  8319  010CA8  9BE1               	bcf	_P2PStatus& (0+255),5,b	;volatile
  8320  010CAA  D677               	goto	l12180
  8321  010CAC                     l12354:
  8322                           
  8323                           ; BSR set to: 1
  8324                           ;miwi_p2p.c: 813: {
  8325                           ;miwi_p2p.c: 814: if( rxMessage.Payload[1] == 0x00 )
  8326  010CAC  EE20 F001          	lfsr	2,1
  8327  010CB0  5006               	movf	_rxMessage+5,w,c
  8328  010CB2  26D9               	addwf	fsr2l,f,c
  8329  010CB4  5007               	movf	_rxMessage+6,w,c
  8330  010CB6  22DA               	addwfc	fsr2h,f,c
  8331  010CB8  50DF               	movf	indf2,w,c
  8332  010CBA  E001 D66E          	bnz	l12180
  8333                           
  8334                           ; BSR set to: 1
  8335                           ;miwi_p2p.c: 815: {
  8336                           ;miwi_p2p.c: 816: for(i = 0; i < 10; i++)
  8337  010CBE  0100               	movlb	0	; () banked
  8338  010CC0  6BBF               	clrf	P2PTasks@i& (0+255),b
  8339  010CC2                     l12358:
  8340                           
  8341                           ; BSR set to: 0
  8342  010CC2  0E09               	movlw	9
  8343  010CC4  65BF               	cpfsgt	P2PTasks@i& (0+255),b
  8344  010CC6  D001               	goto	l12362
  8345  010CC8  D668               	goto	l12180
  8346  010CCA                     l12362:
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;miwi_p2p.c: 817: {
  8350                           ;miwi_p2p.c: 819: if( ConnectionTable[i].status.bits.isValid )
  8351  010CCA  51BF               	movf	P2PTasks@i& (0+255),w,b
  8352  010CCC  0D0E               	mullw	14
  8353  010CCE  0E2A               	movlw	low (_ConnectionTable+12)
  8354  010CD0  24F3               	addwf	prodl,w,c
  8355  010CD2  6ED9               	movwf	fsr2l,c
  8356  010CD4  0E02               	movlw	high (_ConnectionTable+12)
  8357  010CD6  20F4               	addwfc	prodh,w,c
  8358  010CD8  6EDA               	movwf	fsr2h,c
  8359  010CDA  AEDF               	btfss	indf2,7,c
  8360  010CDC  D030               	goto	l12370
  8361                           
  8362                           ; BSR set to: 2
  8363                           ;miwi_p2p.c: 820: {
  8364                           ;miwi_p2p.c: 822: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8365  010CDE  C004  F06D         	movff	_rxMessage+3,isSameAddress@Address1
  8366  010CE2  C005  F06E         	movff	_rxMessage+4,isSameAddress@Address1+1
  8367  010CE6  0100               	movlb	0	; () banked
  8368  010CE8  51BF               	movf	P2PTasks@i& (0+255),w,b
  8369  010CEA  0D0E               	mullw	14
  8370  010CEC  0E22               	movlw	low (_ConnectionTable+4)
  8371  010CEE  24F3               	addwf	prodl,w,c
  8372  010CF0  6F6F               	movwf	isSameAddress@Address2& (0+255),b
  8373  010CF2  0E02               	movlw	high (_ConnectionTable+4)
  8374  010CF4  20F4               	addwfc	prodh,w,c
  8375  010CF6  6F70               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8376  010CF8  ECD0  F099         	call	_isSameAddress	;wreg free
  8377  010CFC  0900               	iorlw	0
  8378  010CFE  E01F               	bz	l12370
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;miwi_p2p.c: 823: {
  8382                           ;miwi_p2p.c: 825: ConnectionTable[i].status.Val = 0;
  8383  010D00  51BF               	movf	P2PTasks@i& (0+255),w,b
  8384  010D02  0D0E               	mullw	14
  8385  010D04  0E2A               	movlw	low (_ConnectionTable+12)
  8386  010D06  24F3               	addwf	prodl,w,c
  8387  010D08  6ED9               	movwf	fsr2l,c
  8388  010D0A  0E02               	movlw	high (_ConnectionTable+12)
  8389  010D0C  20F4               	addwfc	prodh,w,c
  8390  010D0E  6EDA               	movwf	fsr2h,c
  8391  010D10  6ADF               	clrf	indf2,c
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;miwi_p2p.c: 827: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8395  010D12  51BF               	movf	P2PTasks@i& (0+255),w,b
  8396  010D14  0D0E               	mullw	14
  8397  010D16  0E1E               	movlw	low _ConnectionTable
  8398  010D18  24F3               	addwf	prodl,w,c
  8399  010D1A  6F6E               	movwf	NVMWrite@source& (0+255),b
  8400  010D1C  0E02               	movlw	high _ConnectionTable
  8401  010D1E  20F4               	addwfc	prodh,w,c
  8402  010D20  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
  8403  010D22  51BF               	movf	P2PTasks@i& (0+255),w,b
  8404  010D24  0D0E               	mullw	14
  8405  010D26  51E6               	movf	_nvmConnectionTable& (0+255),w,b
  8406  010D28  24F3               	addwf	prodl,w,c
  8407  010D2A  6F70               	movwf	NVMWrite@addr& (0+255),b
  8408  010D2C  51E7               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  8409  010D2E  20F4               	addwfc	prodh,w,c
  8410  010D30  6F71               	movwf	(NVMWrite@addr+1)& (0+255),b
  8411  010D32  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
  8412  010D34  0E0E               	movlw	14
  8413  010D36  6F72               	movwf	NVMWrite@count& (0+255),b
  8414  010D38  EC32  F093         	call	_NVMWrite	;wreg free
  8415                           
  8416                           ;miwi_p2p.c: 829: break;
  8417  010D3C  D62E               	goto	l12180
  8418  010D3E                     l12370:
  8419  010D3E  0100               	movlb	0	; () banked
  8420  010D40  2BBF               	incf	P2PTasks@i& (0+255),f,b
  8421  010D42  D7BF               	goto	l12358
  8422  010D44                     l12376:
  8423                           
  8424                           ; BSR set to: 1
  8425                           ;miwi_p2p.c: 1012: {
  8426                           ;miwi_p2p.c: 1013: if (role == EndDevice)
  8427  010D44  0100               	movlb	0	; () banked
  8428  010D46  05EB               	decf	_role& (0+255),w,b
  8429  010D48  E001 D627          	bnz	l12180
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;miwi_p2p.c: 1014: {
  8433                           ;miwi_p2p.c: 1015: rec_ack = 1;
  8434  010D4C  0E01               	movlw	1
  8435  010D4E  6E20               	movwf	_rec_ack,c
  8436  010D50  D624               	goto	l12180
  8437  010D52                     l12384:
  8438                           
  8439                           ; BSR set to: 1
  8440                           ;miwi_p2p.c: 1025: {
  8441                           ;miwi_p2p.c: 1026: if (role == EndDevice)
  8442  010D52  0100               	movlb	0	; () banked
  8443  010D54  05EB               	decf	_role& (0+255),w,b
  8444  010D56  E001 D620          	bnz	l12180
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;miwi_p2p.c: 1027: {
  8448                           ;miwi_p2p.c: 1029: end_nodes = rxMessage.Payload[1]-1;
  8449  010D5A  EE20 F001          	lfsr	2,1
  8450  010D5E  5006               	movf	_rxMessage+5,w,c
  8451  010D60  26D9               	addwf	fsr2l,f,c
  8452  010D62  5007               	movf	_rxMessage+6,w,c
  8453  010D64  22DA               	addwfc	fsr2h,f,c
  8454  010D66  50DF               	movf	indf2,w,c
  8455  010D68  6FAB               	movwf	??_P2PTasks& (0+255),b
  8456  010D6A  05AB               	decf	??_P2PTasks& (0+255),w,b
  8457  010D6C  6E1E               	movwf	_end_nodes,c
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;miwi_p2p.c: 1030: store_connection_tb(rxMessage.Payload);
  8461  010D6E  C006  F074         	movff	_rxMessage+5,store_connection_tb@payload
  8462  010D72  C007  F075         	movff	_rxMessage+6,store_connection_tb@payload+1
  8463  010D76  ECD2  F090         	call	_store_connection_tb	;wreg free
  8464  010D7A  D60F               	goto	l12180
  8465  010D7C                     l12394:
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;miwi_p2p.c: 1039: {
  8469                           ;miwi_p2p.c: 1040: if (role == PanCoordinator)
  8470  010D7C  0100               	movlb	0	; () banked
  8471  010D7E  51EB               	movf	_role& (0+255),w,b
  8472  010D80  E001 D60B          	bnz	l12180
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;miwi_p2p.c: 1041: {
  8476                           ;miwi_p2p.c: 1043: uint8_t final_index;
  8477                           ;miwi_p2p.c: 1044: final_index = Find_Index(rxMessage.Payload);
  8478  010D84  C006  F06D         	movff	_rxMessage+5,Find_Index@DestAddr
  8479  010D88  C007  F06E         	movff	_rxMessage+6,Find_Index@DestAddr+1
  8480  010D8C  ECE4  F092         	call	_Find_Index	;wreg free
  8481  010D90  6FB7               	movwf	P2PTasks@final_index& (0+255),b
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;miwi_p2p.c: 1045: if (final_index != 0xFF)
  8485  010D92  29B7               	incf	P2PTasks@final_index& (0+255),w,b
  8486  010D94  E00D               	bz	l12402
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;miwi_p2p.c: 1046: {
  8490                           ;miwi_p2p.c: 1047: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  8491  010D96  C006  F0A4         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  8492  010D9A  C007  F0A5         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  8493  010D9E  C0B7  F0A6         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  8494  010DA2  C004  F0A7         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  8495  010DA6  C005  F0A8         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  8496  010DAA  EC7F  F093         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  8497  010DAE  6E10               	movwf	_FW_Stat,c
  8498  010DB0                     l12402:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;miwi_p2p.c: 1048: }
  8502                           ;miwi_p2p.c: 1050: if (FW_Stat)
  8503  010DB0  5010               	movf	_FW_Stat,w,c
  8504  010DB2  E101 D5F2          	bz	l12180
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;miwi_p2p.c: 1051: {
  8508                           ;miwi_p2p.c: 1052: SW_Ack_SrED (rxMessage.SourceAddress);
  8509  010DB6  C004  F09E         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  8510  010DBA  C005  F09F         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  8511  010DBE  EC3A  F09A         	call	_SW_Ack_SrED	;wreg free
  8512  010DC2  D5EB               	goto	l12180
  8513  010DC4                     l12410:
  8514                           
  8515                           ; BSR set to: 1
  8516                           ;miwi_p2p.c: 1064: {
  8517                           ;miwi_p2p.c: 1065: if (role == PanCoordinator)
  8518  010DC4  0100               	movlb	0	; () banked
  8519  010DC6  51EB               	movf	_role& (0+255),w,b
  8520  010DC8  E001 D5E7          	bnz	l12180
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;miwi_p2p.c: 1066: {
  8524                           ;miwi_p2p.c: 1068: uint8_t p;
  8525                           ;miwi_p2p.c: 1069: for (p=0 ; p < 10 ; p++)
  8526  010DCC  6BBD               	clrf	P2PTasks@p_1213& (0+255),b
  8527  010DCE                     l12414:
  8528                           
  8529                           ; BSR set to: 0
  8530  010DCE  0E09               	movlw	9
  8531  010DD0  65BD               	cpfsgt	P2PTasks@p_1213& (0+255),b
  8532  010DD2  D001               	goto	l12418
  8533  010DD4  D5E2               	goto	l12180
  8534  010DD6                     l12418:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;miwi_p2p.c: 1070: {
  8538                           ;miwi_p2p.c: 1071: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
  8539                           ;miwi_p2p.c: 1072: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
  8540  010DD6  C004  FFD9         	movff	_rxMessage+3,fsr2l
  8541  010DDA  C005  FFDA         	movff	_rxMessage+4,fsr2h
  8542  010DDE  51BD               	movf	P2PTasks@p_1213& (0+255),w,b
  8543  010DE0  0D0E               	mullw	14
  8544  010DE2  0E22               	movlw	low (_ConnectionTable+4)
  8545  010DE4  24F3               	addwf	prodl,w,c
  8546  010DE6  6EE1               	movwf	fsr1l,c
  8547  010DE8  0E02               	movlw	high (_ConnectionTable+4)
  8548  010DEA  20F4               	addwfc	prodh,w,c
  8549  010DEC  6EE2               	movwf	fsr1h,c
  8550  010DEE  50DE               	movf	postinc2,w,c
  8551  010DF0  18E6               	xorwf	postinc1,w,c
  8552  010DF2  E12A               	bnz	l12426
  8553                           
  8554                           ; BSR set to: 0
  8555  010DF4  EE20 F001          	lfsr	2,1
  8556  010DF8  5004               	movf	_rxMessage+3,w,c
  8557  010DFA  26D9               	addwf	fsr2l,f,c
  8558  010DFC  5005               	movf	_rxMessage+4,w,c
  8559  010DFE  22DA               	addwfc	fsr2h,f,c
  8560  010E00  51BD               	movf	P2PTasks@p_1213& (0+255),w,b
  8561  010E02  0D0E               	mullw	14
  8562  010E04  0E23               	movlw	low (_ConnectionTable+5)
  8563  010E06  24F3               	addwf	prodl,w,c
  8564  010E08  6EE1               	movwf	fsr1l,c
  8565  010E0A  0E02               	movlw	high (_ConnectionTable+5)
  8566  010E0C  20F4               	addwfc	prodh,w,c
  8567  010E0E  6EE2               	movwf	fsr1h,c
  8568  010E10  50DE               	movf	postinc2,w,c
  8569  010E12  18E6               	xorwf	postinc1,w,c
  8570  010E14  E119               	bnz	l12426
  8571                           
  8572                           ; BSR set to: 0
  8573  010E16  EE20 F002          	lfsr	2,2
  8574  010E1A  5004               	movf	_rxMessage+3,w,c
  8575  010E1C  26D9               	addwf	fsr2l,f,c
  8576  010E1E  5005               	movf	_rxMessage+4,w,c
  8577  010E20  22DA               	addwfc	fsr2h,f,c
  8578  010E22  51BD               	movf	P2PTasks@p_1213& (0+255),w,b
  8579  010E24  0D0E               	mullw	14
  8580  010E26  0E24               	movlw	low (_ConnectionTable+6)
  8581  010E28  24F3               	addwf	prodl,w,c
  8582  010E2A  6EE1               	movwf	fsr1l,c
  8583  010E2C  0E02               	movlw	high (_ConnectionTable+6)
  8584  010E2E  20F4               	addwfc	prodh,w,c
  8585  010E30  6EE2               	movwf	fsr1h,c
  8586  010E32  50DE               	movf	postinc2,w,c
  8587  010E34  18E6               	xorwf	postinc1,w,c
  8588  010E36  E108               	bnz	l12426
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;miwi_p2p.c: 1073: {
  8592                           ;miwi_p2p.c: 1074: link_stat[p]++;
  8593  010E38  0E5F               	movlw	low _link_stat
  8594  010E3A  25BD               	addwf	P2PTasks@p_1213& (0+255),w,b
  8595  010E3C  6ED9               	movwf	fsr2l,c
  8596  010E3E  6ADA               	clrf	fsr2h,c
  8597  010E40  0E01               	movlw	high _link_stat
  8598  010E42  22DA               	addwfc	fsr2h,f,c
  8599  010E44  2ADF               	incf	indf2,f,c
  8600                           
  8601                           ;miwi_p2p.c: 1075: break;
  8602  010E46  D5A9               	goto	l12180
  8603  010E48                     l12426:
  8604                           
  8605                           ; BSR set to: 0
  8606  010E48  2BBD               	incf	P2PTasks@p_1213& (0+255),f,b
  8607  010E4A  D7C1               	goto	l12414
  8608  010E4C                     l12436:
  8609                           
  8610                           ; BSR set to: 1
  8611  010E4C  C006  FFD9         	movff	_rxMessage+5,fsr2l
  8612  010E50  C007  FFDA         	movff	_rxMessage+6,fsr2h
  8613  010E54  50DF               	movf	indf2,w,c
  8614                           
  8615                           ; Switch size 1, requested type "speed"
  8616                           ; Number of cases is 10, Range of values is 119 to 218
  8617                           ; switch strategies available:
  8618                           ; Name         Instructions Cycles
  8619                           ; simple_byte           31    16 (average)
  8620                           ;	Chosen strategy is simple_byte
  8621  010E56  0A77               	xorlw	119	; case 119
  8622  010E58  E101 D77B          	bz	l12384
  8623  010E5C  0A0D               	xorlw	13	; case 122
  8624  010E5E  E0B2               	bz	l12410
  8625  010E60  0AFB               	xorlw	251	; case 129
  8626  010E62  E101 D58D          	bz	l12174
  8627  010E66  0A03               	xorlw	3	; case 130
  8628  010E68  E101 D67B          	bz	l472
  8629  010E6C  0A05               	xorlw	5	; case 135
  8630  010E6E  E101 D633          	bz	l12266
  8631  010E72  0A16               	xorlw	22	; case 145
  8632  010E74  E101 D70B          	bz	l12346
  8633  010E78  0A03               	xorlw	3	; case 146
  8634  010E7A  E101 D717          	bz	l12354
  8635  010E7E  0A05               	xorlw	5	; case 151
  8636  010E80  E101 D710          	bz	l484
  8637  010E84  0A5B               	xorlw	91	; case 204
  8638  010E86  E101 D779          	bz	l12394
  8639  010E8A  0A16               	xorlw	22	; case 218
  8640  010E8C  E101 D75A          	bz	l12376
  8641  010E90                     l445:
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;miwi_p2p.c: 1097: else
  8645                           ;miwi_p2p.c: 1098: {
  8646                           ;miwi_p2p.c: 1099: P2PStatus.bits.RxHasUserData = 1;
  8647  010E90  0100               	movlb	0	; () banked
  8648  010E92  87E1               	bsf	_P2PStatus& (0+255),3,b	;volatile
  8649  010E94                     l12438:
  8650                           
  8651                           ;miwi_p2p.c: 1100: }
  8652                           ;miwi_p2p.c: 1108: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  8653  010E94  5008               	movf	_rxMessage+7,w,c
  8654  010E96  E005               	bz	l513
  8655  010E98  0100               	movlb	0	; () banked
  8656  010E9A  B9E1               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  8657  010E9C  D002               	goto	l513
  8658                           
  8659                           ; BSR set to: 0
  8660  010E9E  ABE1               	btfss	_P2PStatus& (0+255),5,b	;volatile
  8661  010EA0  0012               	return	
  8662  010EA2                     l513:
  8663                           
  8664                           ;miwi_p2p.c: 1109: {
  8665                           ;miwi_p2p.c: 1110: P2PStatus.bits.RxHasUserData = 0;
  8666  010EA2  0100               	movlb	0	; () banked
  8667  010EA4  97E1               	bcf	_P2PStatus& (0+255),3,b	;volatile
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;miwi_p2p.c: 1111: MiMAC_DiscardPacket();
  8671  010EA6  EFCD  F09A         	goto	_MiMAC_DiscardPacket	;wreg free
  8672  010EAA                     __end_of_P2PTasks:
  8673                           	opt stack 0
  8674                           tblptru	equ	0xFF8
  8675                           tblptrh	equ	0xFF7
  8676                           tblptrl	equ	0xFF6
  8677                           tablat	equ	0xFF5
  8678                           prodh	equ	0xFF4
  8679                           prodl	equ	0xFF3
  8680                           intcon	equ	0xFF2
  8681                           intcon2	equ	0xFF1
  8682                           intcon3	equ	0xFF0
  8683                           postinc0	equ	0xFEE
  8684                           wreg	equ	0xFE8
  8685                           indf1	equ	0xFE7
  8686                           postinc1	equ	0xFE6
  8687                           postdec1	equ	0xFE5
  8688                           fsr1h	equ	0xFE2
  8689                           fsr1l	equ	0xFE1
  8690                           indf2	equ	0xFDF
  8691                           postinc2	equ	0xFDE
  8692                           postdec2	equ	0xFDD
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _store_connection_tb *****************
  8698 ;; Defined at:
  8699 ;;		line 156 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  payload         2   20[BANK0 ] PTR unsigned char 
  8702 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  i               1   25[BANK0 ] unsigned char 
  8705 ;;  j               1   24[BANK0 ] unsigned char 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : F/0
  8712 ;;		On exit  : F/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;Total ram usage:        6 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    6
  8722 ;; This function calls:
  8723 ;;		_handle_lost_connection
  8724 ;; This function is called by:
  8725 ;;		_P2PTasks
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text32
  8730  0121A4                     __ptext32:
  8731                           	opt stack 0
  8732  0121A4                     _store_connection_tb:
  8733                           	opt stack 19
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;miwi_p2p.c: 158: uint8_t i , j ;
  8737                           ;miwi_p2p.c: 159: for (i=4; i < 35; i++)
  8738                           
  8739                           ;incstack = 0
  8740  0121A4  0E04               	movlw	4
  8741  0121A6  6F79               	movwf	store_connection_tb@i& (0+255),b
  8742  0121A8                     l11822:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;miwi_p2p.c: 160: {
  8746                           ;miwi_p2p.c: 161: if (i % 4 == 0 && (i+3) < 35)
  8747  0121A8  C079  F076         	movff	store_connection_tb@i,??_store_connection_tb
  8748  0121AC  0E03               	movlw	3
  8749  0121AE  1776               	andwf	??_store_connection_tb& (0+255),f,b
  8750  0121B0  E161               	bnz	l11836
  8751                           
  8752                           ; BSR set to: 0
  8753  0121B2  5179               	movf	store_connection_tb@i& (0+255),w,b
  8754  0121B4  6F76               	movwf	??_store_connection_tb& (0+255),b
  8755  0121B6  6B77               	clrf	(??_store_connection_tb+1)& (0+255),b
  8756  0121B8  0E03               	movlw	3
  8757  0121BA  2776               	addwf	??_store_connection_tb& (0+255),f,b
  8758  0121BC  0E00               	movlw	0
  8759  0121BE  2377               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  8760  0121C0  BF77               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  8761  0121C2  D005               	goto	l11826
  8762  0121C4  5177               	movf	(??_store_connection_tb+1)& (0+255),w,b
  8763  0121C6  E156               	bnz	l11836
  8764  0121C8  0E23               	movlw	35
  8765  0121CA  5D76               	subwf	??_store_connection_tb& (0+255),w,b
  8766  0121CC  E253               	bc	l11836
  8767  0121CE                     l11826:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;miwi_p2p.c: 162: {
  8771                           ;miwi_p2p.c: 163: j = payload[i+3];
  8772  0121CE  5179               	movf	store_connection_tb@i& (0+255),w,b
  8773  0121D0  2574               	addwf	store_connection_tb@payload& (0+255),w,b
  8774  0121D2  6F76               	movwf	??_store_connection_tb& (0+255),b
  8775  0121D4  0E00               	movlw	0
  8776  0121D6  2175               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8777  0121D8  6F77               	movwf	(??_store_connection_tb+1)& (0+255),b
  8778  0121DA  0E03               	movlw	3
  8779  0121DC  2576               	addwf	??_store_connection_tb& (0+255),w,b
  8780  0121DE  6ED9               	movwf	fsr2l,c
  8781  0121E0  0E00               	movlw	0
  8782  0121E2  2177               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8783  0121E4  6EDA               	movwf	fsr2h,c
  8784  0121E6  50DF               	movf	indf2,w,c
  8785  0121E8  6F78               	movwf	store_connection_tb@j& (0+255),b
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;miwi_p2p.c: 164: END_DEVICES_Short_Address[j].connection_slot = j;
  8789  0121EA  5178               	movf	store_connection_tb@j& (0+255),w,b
  8790  0121EC  0D04               	mullw	4
  8791  0121EE  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  8792  0121F0  24F3               	addwf	prodl,w,c
  8793  0121F2  6ED9               	movwf	fsr2l,c
  8794  0121F4  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  8795  0121F6  20F4               	addwfc	prodh,w,c
  8796  0121F8  6EDA               	movwf	fsr2h,c
  8797  0121FA  C078  FFDF         	movff	store_connection_tb@j,indf2
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;miwi_p2p.c: 165: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  8801  0121FE  5179               	movf	store_connection_tb@i& (0+255),w,b
  8802  012200  2574               	addwf	store_connection_tb@payload& (0+255),w,b
  8803  012202  6ED9               	movwf	fsr2l,c
  8804  012204  0E00               	movlw	0
  8805  012206  2175               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8806  012208  6EDA               	movwf	fsr2h,c
  8807  01220A  5178               	movf	store_connection_tb@j& (0+255),w,b
  8808  01220C  0D04               	mullw	4
  8809  01220E  0E37               	movlw	low _END_DEVICES_Short_Address
  8810  012210  24F3               	addwf	prodl,w,c
  8811  012212  6EE1               	movwf	fsr1l,c
  8812  012214  0E01               	movlw	high _END_DEVICES_Short_Address
  8813  012216  20F4               	addwfc	prodh,w,c
  8814  012218  6EE2               	movwf	fsr1h,c
  8815  01221A  CFDF FFE7          	movff	indf2,indf1
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;miwi_p2p.c: 166: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  8819  01221E  5179               	movf	store_connection_tb@i& (0+255),w,b
  8820  012220  2574               	addwf	store_connection_tb@payload& (0+255),w,b
  8821  012222  6F76               	movwf	??_store_connection_tb& (0+255),b
  8822  012224  0E00               	movlw	0
  8823  012226  2175               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8824  012228  6F77               	movwf	(??_store_connection_tb+1)& (0+255),b
  8825  01222A  2976               	incf	??_store_connection_tb& (0+255),w,b
  8826  01222C  6ED9               	movwf	fsr2l,c
  8827  01222E  0E00               	movlw	0
  8828  012230  2177               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8829  012232  6EDA               	movwf	fsr2h,c
  8830  012234  5178               	movf	store_connection_tb@j& (0+255),w,b
  8831  012236  0D04               	mullw	4
  8832  012238  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  8833  01223A  24F3               	addwf	prodl,w,c
  8834  01223C  6EE1               	movwf	fsr1l,c
  8835  01223E  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  8836  012240  20F4               	addwfc	prodh,w,c
  8837  012242  6EE2               	movwf	fsr1h,c
  8838  012244  CFDF FFE7          	movff	indf2,indf1
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;miwi_p2p.c: 167: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  8842  012248  5179               	movf	store_connection_tb@i& (0+255),w,b
  8843  01224A  2574               	addwf	store_connection_tb@payload& (0+255),w,b
  8844  01224C  6F76               	movwf	??_store_connection_tb& (0+255),b
  8845  01224E  0E00               	movlw	0
  8846  012250  2175               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8847  012252  6F77               	movwf	(??_store_connection_tb+1)& (0+255),b
  8848  012254  0E02               	movlw	2
  8849  012256  2576               	addwf	??_store_connection_tb& (0+255),w,b
  8850  012258  6ED9               	movwf	fsr2l,c
  8851  01225A  0E00               	movlw	0
  8852  01225C  2177               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8853  01225E  6EDA               	movwf	fsr2h,c
  8854  012260  5178               	movf	store_connection_tb@j& (0+255),w,b
  8855  012262  0D04               	mullw	4
  8856  012264  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  8857  012266  24F3               	addwf	prodl,w,c
  8858  012268  6EE1               	movwf	fsr1l,c
  8859  01226A  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  8860  01226C  20F4               	addwfc	prodh,w,c
  8861  01226E  6EE2               	movwf	fsr1h,c
  8862  012270  CFDF FFE7          	movff	indf2,indf1
  8863  012274                     l11836:
  8864                           
  8865                           ; BSR set to: 0
  8866  012274  2B79               	incf	store_connection_tb@i& (0+255),f,b
  8867                           
  8868                           ; BSR set to: 0
  8869  012276  0E22               	movlw	34
  8870  012278  6579               	cpfsgt	store_connection_tb@i& (0+255),b
  8871  01227A  D796               	goto	l11822
  8872  01227C  EF17  F095         	goto	_handle_lost_connection
  8873  012280                     __end_of_store_connection_tb:
  8874                           	opt stack 0
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodh	equ	0xFF4
  8880                           prodl	equ	0xFF3
  8881                           intcon	equ	0xFF2
  8882                           intcon2	equ	0xFF1
  8883                           intcon3	equ	0xFF0
  8884                           postinc0	equ	0xFEE
  8885                           wreg	equ	0xFE8
  8886                           indf1	equ	0xFE7
  8887                           postinc1	equ	0xFE6
  8888                           postdec1	equ	0xFE5
  8889                           fsr1h	equ	0xFE2
  8890                           fsr1l	equ	0xFE1
  8891                           indf2	equ	0xFDF
  8892                           postinc2	equ	0xFDE
  8893                           postdec2	equ	0xFDD
  8894                           fsr2h	equ	0xFDA
  8895                           fsr2l	equ	0xFD9
  8896                           status	equ	0xFD8
  8897                           
  8898 ;; *************** function _handle_lost_connection *****************
  8899 ;; Defined at:
  8900 ;;		line 133 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  i               1   19[BANK0 ] unsigned char 
  8905 ;;  stat            1   18[BANK0 ] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8910 ;; Tracked objects:
  8911 ;;		On entry : F/0
  8912 ;;		On exit  : F/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;Total ram usage:        7 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    5
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_store_connection_tb
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text33
  8930  012A2E                     __ptext33:
  8931                           	opt stack 0
  8932  012A2E                     _handle_lost_connection:
  8933                           	opt stack 19
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;miwi_p2p.c: 135: uint8_t i ;
  8937                           ;miwi_p2p.c: 136: bool stat = 0;
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;incstack = 0
  8941  012A2E  6B72               	clrf	handle_lost_connection@stat& (0+255),b
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;miwi_p2p.c: 137: if (role == EndDevice)
  8945  012A30  05EB               	decf	_role& (0+255),w,b
  8946  012A32  A4D8               	btfss	status,2,c
  8947  012A34  0012               	return	
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;miwi_p2p.c: 138: {
  8951                           ;miwi_p2p.c: 139: for (i=0;i<end_nodes+1;i++)
  8952  012A36  6B73               	clrf	handle_lost_connection@i& (0+255),b
  8953  012A38  D01E               	goto	l11456
  8954  012A3A                     l11448:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;miwi_p2p.c: 140: {
  8958                           ;miwi_p2p.c: 141: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  8959  012A3A  5173               	movf	handle_lost_connection@i& (0+255),w,b
  8960  012A3C  0D04               	mullw	4
  8961  012A3E  0E37               	movlw	low _END_DEVICES_Short_Address
  8962  012A40  24F3               	addwf	prodl,w,c
  8963  012A42  6ED9               	movwf	fsr2l,c
  8964  012A44  0E01               	movlw	high _END_DEVICES_Short_Address
  8965  012A46  20F4               	addwfc	prodh,w,c
  8966  012A48  6EDA               	movwf	fsr2h,c
  8967  012A4A  0101               	movlb	1	; () banked
  8968  012A4C  51DB               	movf	_myLongAddress& (0+255),w,b
  8969  012A4E  18DE               	xorwf	postinc2,w,c
  8970  012A50  E110               	bnz	l11454
  8971                           
  8972                           ; BSR set to: 1
  8973  012A52  0100               	movlb	0	; () banked
  8974  012A54  5173               	movf	handle_lost_connection@i& (0+255),w,b
  8975  012A56  0D04               	mullw	4
  8976  012A58  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  8977  012A5A  24F3               	addwf	prodl,w,c
  8978  012A5C  6ED9               	movwf	fsr2l,c
  8979  012A5E  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  8980  012A60  20F4               	addwfc	prodh,w,c
  8981  012A62  6EDA               	movwf	fsr2h,c
  8982  012A64  50DE               	movf	postinc2,w,c
  8983  012A66  0101               	movlb	1	; () banked
  8984  012A68  19DC               	xorwf	(_myLongAddress+1)& (0+255),w,b
  8985  012A6A  E103               	bnz	l11454
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;miwi_p2p.c: 142: {
  8989                           ;miwi_p2p.c: 143: stat = 1;
  8990  012A6C  0E01               	movlw	1
  8991  012A6E  0100               	movlb	0	; () banked
  8992  012A70  6F72               	movwf	handle_lost_connection@stat& (0+255),b
  8993  012A72                     l11454:
  8994  012A72  0100               	movlb	0	; () banked
  8995  012A74  2B73               	incf	handle_lost_connection@i& (0+255),f,b
  8996  012A76                     l11456:
  8997                           
  8998                           ; BSR set to: 0
  8999  012A76  501E               	movf	_end_nodes,w,c
  9000  012A78  6F6D               	movwf	??_handle_lost_connection& (0+255),b
  9001  012A7A  6B6E               	clrf	(??_handle_lost_connection+1)& (0+255),b
  9002  012A7C  2B6D               	incf	??_handle_lost_connection& (0+255),f,b
  9003  012A7E  0E00               	movlw	0
  9004  012A80  236E               	addwfc	(??_handle_lost_connection+1)& (0+255),f,b
  9005  012A82  5173               	movf	handle_lost_connection@i& (0+255),w,b
  9006  012A84  6F6F               	movwf	(??_handle_lost_connection+2)& (0+255),b
  9007  012A86  6B70               	clrf	(??_handle_lost_connection+3)& (0+255),b
  9008  012A88  516D               	movf	??_handle_lost_connection& (0+255),w,b
  9009  012A8A  5D6F               	subwf	(??_handle_lost_connection+2)& (0+255),w,b
  9010  012A8C  5170               	movf	(??_handle_lost_connection+3)& (0+255),w,b
  9011  012A8E  0A80               	xorlw	128
  9012  012A90  6F71               	movwf	(??_handle_lost_connection+4)& (0+255),b
  9013  012A92  516E               	movf	(??_handle_lost_connection+1)& (0+255),w,b
  9014  012A94  0A80               	xorlw	128
  9015  012A96  5971               	subwfb	(??_handle_lost_connection+4)& (0+255),w,b
  9016  012A98  E3D0               	bnc	l11448
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;miwi_p2p.c: 144: }
  9020                           ;miwi_p2p.c: 145: }
  9021                           ;miwi_p2p.c: 146: if (!stat)
  9022  012A9A  5172               	movf	handle_lost_connection@stat& (0+255),w,b
  9023  012A9C  A4D8               	btfss	status,2,c
  9024  012A9E  0012               	return	
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;miwi_p2p.c: 147: {
  9028                           ;miwi_p2p.c: 148: lost_connection = 1;
  9029  012AA0  0E01               	movlw	1
  9030  012AA2  6E1F               	movwf	_lost_connection,c
  9031                           
  9032                           ; BSR set to: 0
  9033  012AA4  0C01               	retlw	1	;funcret
  9034  012AA6                     __end_of_handle_lost_connection:
  9035                           	opt stack 0
  9036                           tblptru	equ	0xFF8
  9037                           tblptrh	equ	0xFF7
  9038                           tblptrl	equ	0xFF6
  9039                           tablat	equ	0xFF5
  9040                           prodh	equ	0xFF4
  9041                           prodl	equ	0xFF3
  9042                           intcon	equ	0xFF2
  9043                           intcon2	equ	0xFF1
  9044                           intcon3	equ	0xFF0
  9045                           postinc0	equ	0xFEE
  9046                           wreg	equ	0xFE8
  9047                           indf1	equ	0xFE7
  9048                           postinc1	equ	0xFE6
  9049                           postdec1	equ	0xFE5
  9050                           fsr1h	equ	0xFE2
  9051                           fsr1l	equ	0xFE1
  9052                           indf2	equ	0xFDF
  9053                           postinc2	equ	0xFDE
  9054                           postdec2	equ	0xFDD
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _send_link_status *****************
  9060 ;; Defined at:
  9061 ;;		line 2054 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  send_status     1   62[BANK0 ] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : F/0
  9072 ;;		On exit  : F/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;Total ram usage:        1 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:   11
  9082 ;; This function calls:
  9083 ;;		_SendPacket
  9084 ;; This function is called by:
  9085 ;;		_P2PTasks
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text34
  9090  0131A8                     __ptext34:
  9091                           	opt stack 0
  9092  0131A8                     _send_link_status:
  9093                           	opt stack 14
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;miwi_p2p.c: 2056: bool send_status;
  9097                           ;miwi_p2p.c: 2057: {TxData = 0;};
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;incstack = 0
  9101  0131A8  6BE2               	clrf	_TxData& (0+255),b
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;miwi_p2p.c: 2058: TxBuffer[TxData++] = 0x7A;
  9105  0131AA  0E93               	movlw	low _TxBuffer
  9106  0131AC  25E2               	addwf	_TxData& (0+255),w,b
  9107  0131AE  6ED9               	movwf	fsr2l,c
  9108  0131B0  6ADA               	clrf	fsr2h,c
  9109  0131B2  0E01               	movlw	high _TxBuffer
  9110  0131B4  22DA               	addwfc	fsr2h,f,c
  9111  0131B6  0E7A               	movlw	122
  9112  0131B8  6EDF               	movwf	indf2,c
  9113                           
  9114                           ; BSR set to: 0
  9115  0131BA  2BE2               	incf	_TxData& (0+255),f,b
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;miwi_p2p.c: 2064: send_status = SendPacket(0, ConnectionTable[0].Address, 1, 0);
  9119  0131BC  0E22               	movlw	low (_ConnectionTable+4)
  9120  0131BE  6F94               	movwf	SendPacket@DestinationAddress& (0+255),b
  9121  0131C0  0E02               	movlw	high (_ConnectionTable+4)
  9122  0131C2  6F95               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  9123  0131C4  0E01               	movlw	1
  9124  0131C6  6F96               	movwf	SendPacket@isCommand& (0+255),b
  9125  0131C8  0E00               	movlw	0
  9126  0131CA  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
  9127  0131CC  EC47  F092         	call	_SendPacket
  9128  0131D0  6F9E               	movwf	send_link_status@send_status& (0+255),b
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;miwi_p2p.c: 2066: if(!send_status)
  9132  0131D2  519E               	movf	send_link_status@send_status& (0+255),w,b
  9133  0131D4  A4D8               	btfss	status,2,c
  9134  0131D6  0012               	return	
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;miwi_p2p.c: 2067: {
  9138                           ;miwi_p2p.c: 2068: lost_connection = 1;
  9139  0131D8  0E01               	movlw	1
  9140  0131DA  6E1F               	movwf	_lost_connection,c
  9141                           
  9142                           ; BSR set to: 0
  9143  0131DC  0C01               	retlw	1	;funcret
  9144  0131DE                     __end_of_send_link_status:
  9145                           	opt stack 0
  9146                           tblptru	equ	0xFF8
  9147                           tblptrh	equ	0xFF7
  9148                           tblptrl	equ	0xFF6
  9149                           tablat	equ	0xFF5
  9150                           prodh	equ	0xFF4
  9151                           prodl	equ	0xFF3
  9152                           intcon	equ	0xFF2
  9153                           intcon2	equ	0xFF1
  9154                           intcon3	equ	0xFF0
  9155                           postinc0	equ	0xFEE
  9156                           wreg	equ	0xFE8
  9157                           indf1	equ	0xFE7
  9158                           postinc1	equ	0xFE6
  9159                           postdec1	equ	0xFE5
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169 ;; *************** function _SW_Ack_SrED *****************
  9170 ;; Defined at:
  9171 ;;		line 2119 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  Dest_Addr       2   62[BANK0 ] PTR unsigned char 
  9174 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      unsigned char 
  9179 ;; Registers used:
  9180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : F/0
  9183 ;;		On exit  : F/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;Total ram usage:        2 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:   11
  9193 ;; This function calls:
  9194 ;;		_SendPacket
  9195 ;; This function is called by:
  9196 ;;		_P2PTasks
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text35
  9201  013474                     __ptext35:
  9202                           	opt stack 0
  9203  013474                     _SW_Ack_SrED:
  9204                           	opt stack 14
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;miwi_p2p.c: 2121: {TxData = 0;};
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;incstack = 0
  9211  013474  6BE2               	clrf	_TxData& (0+255),b
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;miwi_p2p.c: 2122: TxBuffer[TxData++] = 0xDA;
  9215  013476  0E93               	movlw	low _TxBuffer
  9216  013478  25E2               	addwf	_TxData& (0+255),w,b
  9217  01347A  6ED9               	movwf	fsr2l,c
  9218  01347C  6ADA               	clrf	fsr2h,c
  9219  01347E  0E01               	movlw	high _TxBuffer
  9220  013480  22DA               	addwfc	fsr2h,f,c
  9221  013482  0EDA               	movlw	218
  9222  013484  6EDF               	movwf	indf2,c
  9223                           
  9224                           ; BSR set to: 0
  9225  013486  2BE2               	incf	_TxData& (0+255),f,b
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;miwi_p2p.c: 2126: return SendPacket(0, Dest_Addr, 1, 0);
  9229                           ;	Return value of _SW_Ack_SrED is never used
  9230  013488  C09E  F094         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  9231  01348C  C09F  F095         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  9232  013490  0E01               	movlw	1
  9233  013492  6F96               	movwf	SendPacket@isCommand& (0+255),b
  9234  013494  0E00               	movlw	0
  9235  013496  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
  9236  013498  EF47  F092         	goto	_SendPacket
  9237  01349C                     __end_of_SW_Ack_SrED:
  9238                           	opt stack 0
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           intcon2	equ	0xFF1
  9247                           intcon3	equ	0xFF0
  9248                           postinc0	equ	0xFEE
  9249                           wreg	equ	0xFE8
  9250                           indf1	equ	0xFE7
  9251                           postinc1	equ	0xFE6
  9252                           postdec1	equ	0xFE5
  9253                           fsr1h	equ	0xFE2
  9254                           fsr1l	equ	0xFE1
  9255                           indf2	equ	0xFDF
  9256                           postinc2	equ	0xFDE
  9257                           postdec2	equ	0xFDD
  9258                           fsr2h	equ	0xFDA
  9259                           fsr2l	equ	0xFD9
  9260                           status	equ	0xFD8
  9261                           
  9262 ;; *************** function _MiMAC_ReceivedPacket *****************
  9263 ;; Defined at:
  9264 ;;		line 851 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  PayloadIndex    1   35[BANK0 ] unsigned char 
  9269 ;;  j               1    0        unsigned char 
  9270 ;;  currentTick     4   31[BANK0 ] struct _MIWI_TICK
  9271 ;;  i               1   36[BANK0 ] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      unsigned char 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : F/0
  9278 ;;		On exit  : E/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;Total ram usage:       14 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    6
  9288 ;; This function calls:
  9289 ;;		_MiWi_TickGet
  9290 ;; This function is called by:
  9291 ;;		_P2PTasks
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text36
  9296  011764                     __ptext36:
  9297                           	opt stack 0
  9298  011764                     _MiMAC_ReceivedPacket:
  9299                           	opt stack 19
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
  9303                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
  9304                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;incstack = 0
  9308  011764  6B84               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9309  011766                     l11726:
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;drv_mrf_miwi_89xa.c: 859: {
  9313                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
  9314  011766  EC4C  F097         	call	_MiWi_TickGet	;wreg free
  9315  01176A  C06D  F07F         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
  9316  01176E  C06E  F080         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
  9317  011772  C06F  F081         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
  9318  011776  C070  F082         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
  9322                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          0000000)/32)) )
  9323  01177A  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9324  01177C  0D06               	mullw	6
  9325  01177E  0E00               	movlw	low _AckInfo
  9326  011780  24F3               	addwf	prodl,w,c
  9327  011782  6ED9               	movwf	fsr2l,c
  9328  011784  0E02               	movlw	high _AckInfo
  9329  011786  20F4               	addwfc	prodh,w,c
  9330  011788  6EDA               	movwf	fsr2h,c
  9331  01178A  50DF               	movf	indf2,w,c
  9332  01178C  E03F               	bz	l11736
  9333                           
  9334                           ; BSR set to: 0
  9335  01178E  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9336  011790  0D06               	mullw	6
  9337  011792  0E02               	movlw	low (_AckInfo+2)
  9338  011794  24F3               	addwf	prodl,w,c
  9339  011796  6ED9               	movwf	fsr2l,c
  9340  011798  0E02               	movlw	high (_AckInfo+2)
  9341  01179A  20F4               	addwfc	prodh,w,c
  9342  01179C  6EDA               	movwf	fsr2h,c
  9343  01179E  517F               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9344  0117A0  5CDE               	subwf	postinc2,w,c
  9345  0117A2  5180               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9346  0117A4  58DE               	subwfb	postinc2,w,c
  9347  0117A6  5181               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9348  0117A8  58DE               	subwfb	postinc2,w,c
  9349  0117AA  5182               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9350  0117AC  58DE               	subwfb	postinc2,w,c
  9351  0117AE  E22E               	bc	l11736
  9352                           
  9353                           ; BSR set to: 0
  9354  0117B0  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9355  0117B2  0D06               	mullw	6
  9356  0117B4  0E02               	movlw	low (_AckInfo+2)
  9357  0117B6  24F3               	addwf	prodl,w,c
  9358  0117B8  6ED9               	movwf	fsr2l,c
  9359  0117BA  0E02               	movlw	high (_AckInfo+2)
  9360  0117BC  20F4               	addwfc	prodh,w,c
  9361  0117BE  6EDA               	movwf	fsr2h,c
  9362  0117C0  CFDE F077          	movff	postinc2,??_MiMAC_ReceivedPacket
  9363  0117C4  CFDE F078          	movff	postinc2,??_MiMAC_ReceivedPacket+1
  9364  0117C8  CFDE F079          	movff	postinc2,??_MiMAC_ReceivedPacket+2
  9365  0117CC  CFDE F07A          	movff	postinc2,??_MiMAC_ReceivedPacket+3
  9366  0117D0  5177               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9367  0117D2  5D7F               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9368  0117D4  6F7B               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
  9369  0117D6  5178               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9370  0117D8  5980               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9371  0117DA  6F7C               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
  9372  0117DC  5179               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
  9373  0117DE  5981               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9374  0117E0  6F7D               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
  9375  0117E2  517A               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
  9376  0117E4  5982               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9377  0117E6  6F7E               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
  9378  0117E8  517E               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
  9379  0117EA  E107               	bnz	u11530
  9380  0117EC  0EB5               	movlw	181
  9381  0117EE  5D7B               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
  9382  0117F0  0EC4               	movlw	196
  9383  0117F2  597C               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
  9384  0117F4  0E04               	movlw	4
  9385  0117F6  597D               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
  9386  0117F8  E309               	bnc	l11736
  9387  0117FA                     u11530:
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;drv_mrf_miwi_89xa.c: 863: {
  9391                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
  9392  0117FA  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9393  0117FC  0D06               	mullw	6
  9394  0117FE  0E00               	movlw	low _AckInfo
  9395  011800  24F3               	addwf	prodl,w,c
  9396  011802  6ED9               	movwf	fsr2l,c
  9397  011804  0E02               	movlw	high _AckInfo
  9398  011806  20F4               	addwfc	prodh,w,c
  9399  011808  6EDA               	movwf	fsr2h,c
  9400  01180A  6ADF               	clrf	indf2,c
  9401  01180C                     l11736:
  9402                           
  9403                           ; BSR set to: 0
  9404  01180C  2B84               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9405                           
  9406                           ; BSR set to: 0
  9407  01180E  0E04               	movlw	4
  9408  011810  6584               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9409  011812  D7A9               	goto	l11726
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;drv_mrf_miwi_89xa.c: 865: }
  9413                           ;drv_mrf_miwi_89xa.c: 866: }
  9414                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
  9415  011814  2817               	incf	_ReceivedBankIndex,w,c
  9416  011816  E001               	bz	l157
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;drv_mrf_miwi_89xa.c: 870: {
  9420                           ;drv_mrf_miwi_89xa.c: 871: return 0;
  9421  011818  0C00               	retlw	0
  9422  01181A                     l157:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;drv_mrf_miwi_89xa.c: 872: }
  9426                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
  9427  01181A  6B84               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9428  01181C                     l11750:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;drv_mrf_miwi_89xa.c: 875: {
  9432                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
  9433  01181C  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9434  01181E  0D39               	mullw	57
  9435  011820  0E00               	movlw	low _RxPacket
  9436  011822  24F3               	addwf	prodl,w,c
  9437  011824  6ED9               	movwf	fsr2l,c
  9438  011826  0E03               	movlw	high _RxPacket
  9439  011828  20F4               	addwfc	prodh,w,c
  9440  01182A  6EDA               	movwf	fsr2h,c
  9441  01182C  A0DF               	btfss	indf2,0,c
  9442  01182E  D067               	goto	l11778
  9443                           
  9444                           ; BSR set to: 3
  9445                           ;drv_mrf_miwi_89xa.c: 877: {
  9446                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
  9447                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
  9448                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
  9449  011830  0100               	movlb	0	; () banked
  9450  011832  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9451  011834  0D39               	mullw	57
  9452  011836  0E01               	movlw	low (_RxPacket+1)
  9453  011838  24F3               	addwf	prodl,w,c
  9454  01183A  6ED9               	movwf	fsr2l,c
  9455  01183C  0E03               	movlw	high (_RxPacket+1)
  9456  01183E  20F4               	addwfc	prodh,w,c
  9457  011840  6EDA               	movwf	fsr2h,c
  9458  011842  50DF               	movf	indf2,w,c
  9459  011844  0101               	movlb	1	; () banked
  9460  011846  6F73               	movwf	_MACRxPacket& (0+255),b
  9461                           
  9462                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
  9463  011848  0100               	movlb	0	; () banked
  9464  01184A  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9465  01184C  0D39               	mullw	57
  9466  01184E  0E38               	movlw	low (_RxPacket+56)
  9467  011850  24F3               	addwf	prodl,w,c
  9468  011852  6ED9               	movwf	fsr2l,c
  9469  011854  0E03               	movlw	high (_RxPacket+56)
  9470  011856  20F4               	addwfc	prodh,w,c
  9471  011858  6EDA               	movwf	fsr2h,c
  9472  01185A  50DF               	movf	indf2,w,c
  9473  01185C  0101               	movlb	1	; () banked
  9474  01185E  6F78               	movwf	(_MACRxPacket+5)& (0+255),b
  9475                           
  9476                           ; BSR set to: 1
  9477                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
  9478  011860  0E02               	movlw	2
  9479  011862  0100               	movlb	0	; () banked
  9480  011864  6F83               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
  9484  011866  0101               	movlb	1	; () banked
  9485  011868  AD73               	btfss	_MACRxPacket& (0+255),6,b
  9486  01186A  D006               	goto	l11760
  9487                           
  9488                           ; BSR set to: 1
  9489                           ;drv_mrf_miwi_89xa.c: 886: {
  9490                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9491  01186C  300B               	rrcf	_MACInitParams,w,c
  9492  01186E  32E8               	rrcf	wreg,f,c
  9493  011870  32E8               	rrcf	wreg,f,c
  9494  011872  0B0F               	andlw	15
  9495  011874  0100               	movlb	0	; () banked
  9496  011876  2783               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9497  011878                     l11760:
  9498                           
  9499                           ;drv_mrf_miwi_89xa.c: 888: }
  9500                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
  9501  011878  0101               	movlb	1	; () banked
  9502  01187A  AF73               	btfss	_MACRxPacket& (0+255),7,b
  9503  01187C  D01E               	goto	l163
  9504                           
  9505                           ; BSR set to: 1
  9506                           ;drv_mrf_miwi_89xa.c: 891: {
  9507                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
  9508  01187E  0100               	movlb	0	; () banked
  9509  011880  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9510  011882  0D39               	mullw	57
  9511  011884  0E00               	movlw	low _RxPacket
  9512  011886  6F77               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9513  011888  0E03               	movlw	high _RxPacket
  9514  01188A  6F78               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9515  01188C  2B77               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9516  01188E  0E00               	movlw	0
  9517  011890  2378               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9518  011892  50F3               	movf	prodl,w,c
  9519  011894  2777               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9520  011896  50F4               	movf	prodh,w,c
  9521  011898  2378               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9522  01189A  5183               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9523  01189C  2577               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9524  01189E  0101               	movlb	1	; () banked
  9525  0118A0  6F74               	movwf	(_MACRxPacket+1)& (0+255),b
  9526  0118A2  0100               	movlb	0	; () banked
  9527  0118A4  0E00               	movlw	0
  9528  0118A6  2178               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9529  0118A8  0101               	movlb	1	; () banked
  9530  0118AA  6F75               	movwf	(_MACRxPacket+2)& (0+255),b
  9531                           
  9532                           ; BSR set to: 1
  9533                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9534  0118AC  300B               	rrcf	_MACInitParams,w,c
  9535  0118AE  32E8               	rrcf	wreg,f,c
  9536  0118B0  32E8               	rrcf	wreg,f,c
  9537  0118B2  0B0F               	andlw	15
  9538  0118B4  0100               	movlb	0	; () banked
  9539  0118B6  2783               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9540                           
  9541                           ;drv_mrf_miwi_89xa.c: 894: }
  9542  0118B8  D002               	goto	l11766
  9543  0118BA                     l163:
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;drv_mrf_miwi_89xa.c: 895: else
  9547                           ;drv_mrf_miwi_89xa.c: 896: {
  9548                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
  9549  0118BA  6B74               	clrf	(_MACRxPacket+1)& (0+255),b
  9550  0118BC  6B75               	clrf	(_MACRxPacket+2)& (0+255),b
  9551  0118BE                     l11766:
  9552                           
  9553                           ;drv_mrf_miwi_89xa.c: 898: }
  9554                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
  9555  0118BE  0100               	movlb	0	; () banked
  9556  0118C0  5183               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9557  0118C2  0101               	movlb	1	; () banked
  9558  0118C4  5F78               	subwf	(_MACRxPacket+5)& (0+255),f,b
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
  9562  0118C6  0100               	movlb	0	; () banked
  9563  0118C8  5184               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9564  0118CA  0D39               	mullw	57
  9565  0118CC  0E00               	movlw	low _RxPacket
  9566  0118CE  6F77               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9567  0118D0  0E03               	movlw	high _RxPacket
  9568  0118D2  6F78               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9569  0118D4  2B77               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9570  0118D6  0E00               	movlw	0
  9571  0118D8  2378               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9572  0118DA  50F3               	movf	prodl,w,c
  9573  0118DC  2777               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9574  0118DE  50F4               	movf	prodh,w,c
  9575  0118E0  2378               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9576  0118E2  5183               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9577  0118E4  2577               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9578  0118E6  0101               	movlb	1	; () banked
  9579  0118E8  6F76               	movwf	(_MACRxPacket+3)& (0+255),b
  9580  0118EA  0100               	movlb	0	; () banked
  9581  0118EC  0E00               	movlw	0
  9582  0118EE  2178               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9583  0118F0  0101               	movlb	1	; () banked
  9584  0118F2  6F77               	movwf	(_MACRxPacket+4)& (0+255),b
  9585                           
  9586                           ; BSR set to: 1
  9587                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
  9588  0118F4  C015  F179         	movff	_RSSILock,_MACRxPacket+6
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
  9592  0118F8  C084  F017         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
  9593                           
  9594                           ; BSR set to: 1
  9595                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
  9596  0118FC  0C01               	retlw	1
  9597  0118FE                     l11778:
  9598                           
  9599                           ; BSR set to: 3
  9600  0118FE  0100               	movlb	0	; () banked
  9601  011900  2B84               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9602                           
  9603                           ; BSR set to: 0
  9604  011902  0E01               	movlw	1
  9605  011904  6584               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9606  011906  D78A               	goto	l11750
  9607  011908  0C00               	retlw	0
  9608  01190A                     __end_of_MiMAC_ReceivedPacket:
  9609                           	opt stack 0
  9610                           tblptru	equ	0xFF8
  9611                           tblptrh	equ	0xFF7
  9612                           tblptrl	equ	0xFF6
  9613                           tablat	equ	0xFF5
  9614                           prodh	equ	0xFF4
  9615                           prodl	equ	0xFF3
  9616                           intcon	equ	0xFF2
  9617                           intcon2	equ	0xFF1
  9618                           intcon3	equ	0xFF0
  9619                           postinc0	equ	0xFEE
  9620                           wreg	equ	0xFE8
  9621                           indf1	equ	0xFE7
  9622                           postinc1	equ	0xFE6
  9623                           postdec1	equ	0xFE5
  9624                           fsr1h	equ	0xFE2
  9625                           fsr1l	equ	0xFE1
  9626                           indf2	equ	0xFDF
  9627                           postinc2	equ	0xFDE
  9628                           postdec2	equ	0xFDD
  9629                           fsr2h	equ	0xFDA
  9630                           fsr2l	equ	0xFD9
  9631                           status	equ	0xFD8
  9632                           
  9633 ;; *************** function _MiApp_BroadcastConnectionTable *****************
  9634 ;; Defined at:
  9635 ;;		line 1915 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  j               1   73[BANK0 ] unsigned char 
  9640 ;;  i               1   72[BANK0 ] unsigned char 
  9641 ;;  k               1   71[BANK0 ] unsigned char 
  9642 ;;  broadcast_co    1   70[BANK0 ] unsigned char 
  9643 ;;  count           1   69[BANK0 ] unsigned char 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : F/0
  9650 ;;		On exit  : F/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;Total ram usage:       12 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:   11
  9660 ;; This function calls:
  9661 ;;		_SendPacket
  9662 ;;		___awdiv
  9663 ;;		___awmod
  9664 ;; This function is called by:
  9665 ;;		_P2PTasks
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text37
  9670  011550                     __ptext37:
  9671                           	opt stack 0
  9672  011550                     _MiApp_BroadcastConnectionTable:
  9673                           	opt stack 14
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;miwi_p2p.c: 1922: if ((conn_size * 4 ) + 4 < 35)
  9677                           
  9678                           ; BSR set to: 0
  9679                           
  9680                           ;incstack = 0
  9681  011550  51E8               	movf	_conn_size& (0+255),w,b
  9682  011552  0D04               	mullw	4
  9683  011554  0E04               	movlw	4
  9684  011556  26F3               	addwf	prodl,f,c
  9685  011558  0E00               	movlw	0
  9686  01155A  22F4               	addwfc	prodh,f,c
  9687  01155C  BEF4               	btfsc	prodh,7,c
  9688  01155E  D005               	goto	l11910
  9689  011560  50F4               	movf	prodh,w,c
  9690  011562  E106               	bnz	l11912
  9691  011564  0E23               	movlw	35
  9692  011566  5CF3               	subwf	prodl,w,c
  9693  011568  E203               	bc	l11912
  9694  01156A                     l11910:
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;miwi_p2p.c: 1923: {
  9698                           ;miwi_p2p.c: 1924: broadcast_count = 1;
  9699  01156A  0E01               	movlw	1
  9700  01156C  6FA6               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9701                           
  9702                           ;miwi_p2p.c: 1925: }
  9703  01156E  D027               	goto	l11918
  9704  011570                     l11912:
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;miwi_p2p.c: 1926: else
  9708                           ;miwi_p2p.c: 1927: {
  9709                           ;miwi_p2p.c: 1928: broadcast_count = ((conn_size * 4) + 4 )/ 35;
  9710  011570  51E8               	movf	_conn_size& (0+255),w,b
  9711  011572  0D04               	mullw	4
  9712  011574  0E04               	movlw	4
  9713  011576  24F3               	addwf	prodl,w,c
  9714  011578  6F6D               	movwf	___awdiv@dividend& (0+255),b
  9715  01157A  0E00               	movlw	0
  9716  01157C  20F4               	addwfc	prodh,w,c
  9717  01157E  6F6E               	movwf	(___awdiv@dividend+1)& (0+255),b
  9718  011580  6B70               	clrf	(___awdiv@divisor+1)& (0+255),b
  9719  011582  0E23               	movlw	35
  9720  011584  6F6F               	movwf	___awdiv@divisor& (0+255),b
  9721  011586  EC53  F095         	call	___awdiv	;wreg free
  9722  01158A  516D               	movf	?___awdiv& (0+255),w,b
  9723  01158C  6FA6               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;miwi_p2p.c: 1929: if ((conn_size *4) + 4 % 35 != 0)
  9727  01158E  51E8               	movf	_conn_size& (0+255),w,b
  9728  011590  0D04               	mullw	4
  9729  011592  0E04               	movlw	4
  9730  011594  26F3               	addwf	prodl,f,c
  9731  011596  0E00               	movlw	0
  9732  011598  22F4               	addwfc	prodh,f,c
  9733  01159A  50F3               	movf	prodl,w,c
  9734  01159C  10F4               	iorwf	prodh,w,c
  9735  01159E  E00F               	bz	l11918
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;miwi_p2p.c: 1930: {
  9739                           ;miwi_p2p.c: 1931: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 35;
  9740  0115A0  51E8               	movf	_conn_size& (0+255),w,b
  9741  0115A2  0D04               	mullw	4
  9742  0115A4  0E04               	movlw	4
  9743  0115A6  24F3               	addwf	prodl,w,c
  9744  0115A8  6F6D               	movwf	___awmod@dividend& (0+255),b
  9745  0115AA  0E00               	movlw	0
  9746  0115AC  20F4               	addwfc	prodh,w,c
  9747  0115AE  6F6E               	movwf	(___awmod@dividend+1)& (0+255),b
  9748  0115B0  6B70               	clrf	(___awmod@divisor+1)& (0+255),b
  9749  0115B2  0E23               	movlw	35
  9750  0115B4  6F6F               	movwf	___awmod@divisor& (0+255),b
  9751  0115B6  EC33  F096         	call	___awmod	;wreg free
  9752  0115BA  516D               	movf	?___awmod& (0+255),w,b
  9753  0115BC  27A6               	addwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),f,b
  9754  0115BE                     l11918:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;miwi_p2p.c: 1932: }
  9758                           ;miwi_p2p.c: 1934: }
  9759                           ;miwi_p2p.c: 1936: for (i = 0 ; i < broadcast_count ; i++)
  9760  0115BE  6BA8               	clrf	MiApp_BroadcastConnectionTable@i& (0+255),b
  9761  0115C0  D0CC               	goto	l11988
  9762  0115C2                     l552:
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;miwi_p2p.c: 1937: {
  9766                           ;miwi_p2p.c: 1938: {TxData = 0;};
  9767  0115C2  6BE2               	clrf	_TxData& (0+255),b
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;miwi_p2p.c: 1939: TxBuffer[TxData++] = 0x77;
  9771  0115C4  0E93               	movlw	low _TxBuffer
  9772  0115C6  25E2               	addwf	_TxData& (0+255),w,b
  9773  0115C8  6ED9               	movwf	fsr2l,c
  9774  0115CA  6ADA               	clrf	fsr2h,c
  9775  0115CC  0E01               	movlw	high _TxBuffer
  9776  0115CE  22DA               	addwfc	fsr2h,f,c
  9777  0115D0  0E77               	movlw	119
  9778  0115D2  6EDF               	movwf	indf2,c
  9779                           
  9780                           ; BSR set to: 0
  9781  0115D4  2BE2               	incf	_TxData& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;miwi_p2p.c: 1940: TxBuffer[TxData++] = conn_size;
  9785  0115D6  0E93               	movlw	low _TxBuffer
  9786  0115D8  25E2               	addwf	_TxData& (0+255),w,b
  9787  0115DA  6ED9               	movwf	fsr2l,c
  9788  0115DC  6ADA               	clrf	fsr2h,c
  9789  0115DE  0E01               	movlw	high _TxBuffer
  9790  0115E0  22DA               	addwfc	fsr2h,f,c
  9791  0115E2  C0E8  FFDF         	movff	_conn_size,indf2
  9792  0115E6  2BE2               	incf	_TxData& (0+255),f,b
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;miwi_p2p.c: 1941: TxBuffer[TxData++] = ((35-4)/4)*i;
  9796  0115E8  51A8               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9797  0115EA  0D07               	mullw	7
  9798  0115EC  0E93               	movlw	low _TxBuffer
  9799  0115EE  25E2               	addwf	_TxData& (0+255),w,b
  9800  0115F0  6ED9               	movwf	fsr2l,c
  9801  0115F2  6ADA               	clrf	fsr2h,c
  9802  0115F4  0E01               	movlw	high _TxBuffer
  9803  0115F6  22DA               	addwfc	fsr2h,f,c
  9804  0115F8  CFF3 FFDF          	movff	prodl,indf2
  9805                           
  9806                           ; BSR set to: 0
  9807  0115FC  2BE2               	incf	_TxData& (0+255),f,b
  9808                           
  9809                           ;miwi_p2p.c: 1942: TxBuffer[TxData++] = ((35-4)/4)*(i+1);
  9810  0115FE  29A8               	incf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9811  011600  0D07               	mullw	7
  9812  011602  0E93               	movlw	low _TxBuffer
  9813  011604  25E2               	addwf	_TxData& (0+255),w,b
  9814  011606  6ED9               	movwf	fsr2l,c
  9815  011608  6ADA               	clrf	fsr2h,c
  9816  01160A  0E01               	movlw	high _TxBuffer
  9817  01160C  22DA               	addwfc	fsr2h,f,c
  9818  01160E  CFF3 FFDF          	movff	prodl,indf2
  9819                           
  9820                           ; BSR set to: 0
  9821  011612  2BE2               	incf	_TxData& (0+255),f,b
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;miwi_p2p.c: 1943: count = 4;
  9825  011614  0E04               	movlw	4
  9826  011616  6FA5               	movwf	MiApp_BroadcastConnectionTable@count& (0+255),b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;miwi_p2p.c: 1944: for (j= ((35-4)/4)*i ;j<((35-4)/4)*(i+1);j++)
  9830  011618  51A8               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9831  01161A  0D07               	mullw	7
  9832  01161C  CFF3 F0A9          	movff	prodl,MiApp_BroadcastConnectionTable@j
  9833  011620  D067               	goto	l11970
  9834  011622                     l11936:
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;miwi_p2p.c: 1945: {
  9838                           ;miwi_p2p.c: 1946: if (j < conn_size)
  9839  011622  51E8               	movf	_conn_size& (0+255),w,b
  9840  011624  5DA9               	subwf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9841  011626  E263               	bc	l11968
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;miwi_p2p.c: 1947: {
  9845                           ;miwi_p2p.c: 1948: if (ConnectionTable[j].status.bits.isValid)
  9846  011628  51A9               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9847  01162A  0D0E               	mullw	14
  9848  01162C  0E2A               	movlw	low (_ConnectionTable+12)
  9849  01162E  24F3               	addwf	prodl,w,c
  9850  011630  6ED9               	movwf	fsr2l,c
  9851  011632  0E02               	movlw	high (_ConnectionTable+12)
  9852  011634  20F4               	addwfc	prodh,w,c
  9853  011636  6EDA               	movwf	fsr2h,c
  9854  011638  AEDF               	btfss	indf2,7,c
  9855  01163A  D03E               	goto	l11954
  9856                           
  9857                           ; BSR set to: 2
  9858                           ;miwi_p2p.c: 1949: {
  9859                           ;miwi_p2p.c: 1951: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
  9860  01163C  0100               	movlb	0	; () banked
  9861  01163E  51A9               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9862  011640  0D0E               	mullw	14
  9863  011642  0E22               	movlw	low (_ConnectionTable+4)
  9864  011644  24F3               	addwf	prodl,w,c
  9865  011646  6ED9               	movwf	fsr2l,c
  9866  011648  0E02               	movlw	high (_ConnectionTable+4)
  9867  01164A  20F4               	addwfc	prodh,w,c
  9868  01164C  6EDA               	movwf	fsr2h,c
  9869  01164E  0E93               	movlw	low _TxBuffer
  9870  011650  25E2               	addwf	_TxData& (0+255),w,b
  9871  011652  6EE1               	movwf	fsr1l,c
  9872  011654  6AE2               	clrf	fsr1h,c
  9873  011656  0E01               	movlw	high _TxBuffer
  9874  011658  22E2               	addwfc	fsr1h,f,c
  9875  01165A  CFDF FFE7          	movff	indf2,indf1
  9876                           
  9877                           ; BSR set to: 0
  9878  01165E  2BE2               	incf	_TxData& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;miwi_p2p.c: 1952: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
  9882  011660  51A9               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9883  011662  0D0E               	mullw	14
  9884  011664  0E23               	movlw	low (_ConnectionTable+5)
  9885  011666  24F3               	addwf	prodl,w,c
  9886  011668  6ED9               	movwf	fsr2l,c
  9887  01166A  0E02               	movlw	high (_ConnectionTable+5)
  9888  01166C  20F4               	addwfc	prodh,w,c
  9889  01166E  6EDA               	movwf	fsr2h,c
  9890  011670  0E93               	movlw	low _TxBuffer
  9891  011672  25E2               	addwf	_TxData& (0+255),w,b
  9892  011674  6EE1               	movwf	fsr1l,c
  9893  011676  6AE2               	clrf	fsr1h,c
  9894  011678  0E01               	movlw	high _TxBuffer
  9895  01167A  22E2               	addwfc	fsr1h,f,c
  9896  01167C  CFDF FFE7          	movff	indf2,indf1
  9897  011680  2BE2               	incf	_TxData& (0+255),f,b
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;miwi_p2p.c: 1953: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
  9901  011682  51A9               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9902  011684  0D0E               	mullw	14
  9903  011686  0E24               	movlw	low (_ConnectionTable+6)
  9904  011688  24F3               	addwf	prodl,w,c
  9905  01168A  6ED9               	movwf	fsr2l,c
  9906  01168C  0E02               	movlw	high (_ConnectionTable+6)
  9907  01168E  20F4               	addwfc	prodh,w,c
  9908  011690  6EDA               	movwf	fsr2h,c
  9909  011692  0E93               	movlw	low _TxBuffer
  9910  011694  25E2               	addwf	_TxData& (0+255),w,b
  9911  011696  6EE1               	movwf	fsr1l,c
  9912  011698  6AE2               	clrf	fsr1h,c
  9913  01169A  0E01               	movlw	high _TxBuffer
  9914  01169C  22E2               	addwfc	fsr1h,f,c
  9915  01169E  CFDF FFE7          	movff	indf2,indf1
  9916  0116A2                     l11948:
  9917                           
  9918                           ; BSR set to: 0
  9919  0116A2  2BE2               	incf	_TxData& (0+255),f,b
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;miwi_p2p.c: 1954: TxBuffer[TxData++] = j;
  9923  0116A4  0E93               	movlw	low _TxBuffer
  9924  0116A6  25E2               	addwf	_TxData& (0+255),w,b
  9925  0116A8  6ED9               	movwf	fsr2l,c
  9926  0116AA  6ADA               	clrf	fsr2h,c
  9927  0116AC  0E01               	movlw	high _TxBuffer
  9928  0116AE  22DA               	addwfc	fsr2h,f,c
  9929  0116B0  C0A9  FFDF         	movff	MiApp_BroadcastConnectionTable@j,indf2
  9930                           
  9931                           ; BSR set to: 0
  9932  0116B4  2BE2               	incf	_TxData& (0+255),f,b
  9933                           
  9934                           ;miwi_p2p.c: 1956: }
  9935  0116B6  D019               	goto	l11966
  9936  0116B8                     l11954:
  9937                           
  9938                           ; BSR set to: 2
  9939                           ;miwi_p2p.c: 1958: else
  9940                           ;miwi_p2p.c: 1959: {
  9941                           ;miwi_p2p.c: 1961: TxBuffer[TxData++] = 0xff;
  9942  0116B8  0E93               	movlw	low _TxBuffer
  9943  0116BA  0100               	movlb	0	; () banked
  9944  0116BC  25E2               	addwf	_TxData& (0+255),w,b
  9945  0116BE  6ED9               	movwf	fsr2l,c
  9946  0116C0  6ADA               	clrf	fsr2h,c
  9947  0116C2  0E01               	movlw	high _TxBuffer
  9948  0116C4  22DA               	addwfc	fsr2h,f,c
  9949  0116C6  68DF               	setf	indf2,c
  9950                           
  9951                           ; BSR set to: 0
  9952  0116C8  2BE2               	incf	_TxData& (0+255),f,b
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;miwi_p2p.c: 1962: TxBuffer[TxData++] = 0xff;
  9956  0116CA  0E93               	movlw	low _TxBuffer
  9957  0116CC  25E2               	addwf	_TxData& (0+255),w,b
  9958  0116CE  6ED9               	movwf	fsr2l,c
  9959  0116D0  6ADA               	clrf	fsr2h,c
  9960  0116D2  0E01               	movlw	high _TxBuffer
  9961  0116D4  22DA               	addwfc	fsr2h,f,c
  9962  0116D6  68DF               	setf	indf2,c
  9963  0116D8  2BE2               	incf	_TxData& (0+255),f,b
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;miwi_p2p.c: 1963: TxBuffer[TxData++] = 0xff;
  9967  0116DA  0E93               	movlw	low _TxBuffer
  9968  0116DC  25E2               	addwf	_TxData& (0+255),w,b
  9969  0116DE  6ED9               	movwf	fsr2l,c
  9970  0116E0  6ADA               	clrf	fsr2h,c
  9971  0116E2  0E01               	movlw	high _TxBuffer
  9972  0116E4  22DA               	addwfc	fsr2h,f,c
  9973  0116E6  68DF               	setf	indf2,c
  9974  0116E8  D7DC               	goto	l11948
  9975  0116EA                     l11966:
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;miwi_p2p.c: 1965: }
  9979                           ;miwi_p2p.c: 1966: count = count + 4;
  9980  0116EA  0E04               	movlw	4
  9981  0116EC  27A5               	addwf	MiApp_BroadcastConnectionTable@count& (0+255),f,b
  9982  0116EE                     l11968:
  9983                           
  9984                           ; BSR set to: 0
  9985  0116EE  2BA9               	incf	MiApp_BroadcastConnectionTable@j& (0+255),f,b
  9986  0116F0                     l11970:
  9987                           
  9988                           ; BSR set to: 0
  9989  0116F0  51A8               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9990  0116F2  6F9E               	movwf	??_MiApp_BroadcastConnectionTable& (0+255),b
  9991  0116F4  6B9F               	clrf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
  9992  0116F6  2B9E               	incf	??_MiApp_BroadcastConnectionTable& (0+255),f,b
  9993  0116F8  0E00               	movlw	0
  9994  0116FA  239F               	addwfc	(??_MiApp_BroadcastConnectionTable+1)& (0+255),f,b
  9995  0116FC  0E07               	movlw	7
  9996  0116FE  039E               	mulwf	??_MiApp_BroadcastConnectionTable& (0+255),b
  9997  011700  CFF3 F0A0          	movff	prodl,??_MiApp_BroadcastConnectionTable+2
  9998  011704  CFF4 F0A1          	movff	prodh,??_MiApp_BroadcastConnectionTable+3
  9999  011708  039F               	mulwf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10000  01170A  50F3               	movf	prodl,w,c
 10001  01170C  27A1               	addwf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),f,b
 10002  01170E  51A9               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10003  011710  6FA2               	movwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),b
 10004  011712  6BA3               	clrf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),b
 10005  011714  51A0               	movf	(??_MiApp_BroadcastConnectionTable+2)& (0+255),w,b
 10006  011716  5DA2               	subwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),w,b
 10007  011718  51A3               	movf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),w,b
 10008  01171A  0A80               	xorlw	128
 10009  01171C  6FA4               	movwf	(??_MiApp_BroadcastConnectionTable+6)& (0+255),b
 10010  01171E  51A1               	movf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),w,b
 10011  011720  0A80               	xorlw	128
 10012  011722  59A4               	subwfb	(??_MiApp_BroadcastConnectionTable+6)& (0+255),w,b
 10013  011724  E201 D77D          	bnc	l11936
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;miwi_p2p.c: 1967: }
 10017                           ;miwi_p2p.c: 1968: }
 10018                           ;miwi_p2p.c: 1970: for (k=count;k<35;k++)
 10019  011728  C0A5  F0A7         	movff	MiApp_BroadcastConnectionTable@count,MiApp_BroadcastConnectionTable@k
 10020  01172C                     l11972:
 10021                           
 10022                           ; BSR set to: 0
 10023  01172C  0E22               	movlw	34
 10024  01172E  65A7               	cpfsgt	MiApp_BroadcastConnectionTable@k& (0+255),b
 10025  011730  D001               	goto	l11976
 10026  011732  D00B               	goto	l11984
 10027  011734                     l11976:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;miwi_p2p.c: 1971: {
 10031                           ;miwi_p2p.c: 1972: TxBuffer[TxData++] = 0x11;
 10032  011734  0E93               	movlw	low _TxBuffer
 10033  011736  25E2               	addwf	_TxData& (0+255),w,b
 10034  011738  6ED9               	movwf	fsr2l,c
 10035  01173A  6ADA               	clrf	fsr2h,c
 10036  01173C  0E01               	movlw	high _TxBuffer
 10037  01173E  22DA               	addwfc	fsr2h,f,c
 10038  011740  0E11               	movlw	17
 10039  011742  6EDF               	movwf	indf2,c
 10040                           
 10041                           ; BSR set to: 0
 10042  011744  2BE2               	incf	_TxData& (0+255),f,b
 10043                           
 10044                           ; BSR set to: 0
 10045  011746  2BA7               	incf	MiApp_BroadcastConnectionTable@k& (0+255),f,b
 10046  011748  D7F1               	goto	l11972
 10047  01174A                     l11984:
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;miwi_p2p.c: 1973: }
 10051                           ;miwi_p2p.c: 1981: SendPacket(1, (0), 1, 0);
 10052  01174A  6B94               	clrf	SendPacket@DestinationAddress& (0+255),b
 10053  01174C  6B95               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
 10054  01174E  0E01               	movlw	1
 10055  011750  6F96               	movwf	SendPacket@isCommand& (0+255),b
 10056  011752  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
 10057  011754  EC47  F092         	call	_SendPacket
 10058                           
 10059                           ; BSR set to: 0
 10060  011758  2BA8               	incf	MiApp_BroadcastConnectionTable@i& (0+255),f,b
 10061  01175A                     l11988:
 10062                           
 10063                           ; BSR set to: 0
 10064  01175A  51A6               	movf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),w,b
 10065  01175C  5DA8               	subwf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10066  01175E  E201 D730          	bnc	l552
 10067                           
 10068                           ; BSR set to: 0
 10069  011762  0012               	return		;funcret
 10070  011764                     __end_of_MiApp_BroadcastConnectionTable:
 10071                           	opt stack 0
 10072                           tblptru	equ	0xFF8
 10073                           tblptrh	equ	0xFF7
 10074                           tblptrl	equ	0xFF6
 10075                           tablat	equ	0xFF5
 10076                           prodh	equ	0xFF4
 10077                           prodl	equ	0xFF3
 10078                           intcon	equ	0xFF2
 10079                           intcon2	equ	0xFF1
 10080                           intcon3	equ	0xFF0
 10081                           postinc0	equ	0xFEE
 10082                           wreg	equ	0xFE8
 10083                           indf1	equ	0xFE7
 10084                           postinc1	equ	0xFE6
 10085                           postdec1	equ	0xFE5
 10086                           fsr1h	equ	0xFE2
 10087                           fsr1l	equ	0xFE1
 10088                           indf2	equ	0xFDF
 10089                           postinc2	equ	0xFDE
 10090                           postdec2	equ	0xFDD
 10091                           fsr2h	equ	0xFDA
 10092                           fsr2l	equ	0xFD9
 10093                           status	equ	0xFD8
 10094                           
 10095 ;; *************** function ___awmod *****************
 10096 ;; Defined at:
 10097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  dividend        2   13[BANK0 ] int 
 10100 ;;  divisor         2   15[BANK0 ] int 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  sign            1   18[BANK0 ] unsigned char 
 10103 ;;  counter         1   17[BANK0 ] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2   13[BANK0 ] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : F/0
 10110 ;;		On exit  : F/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;Total ram usage:        6 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    5
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_MiApp_BroadcastConnectionTable
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text38
 10128  012C66                     __ptext38:
 10129                           	opt stack 0
 10130  012C66                     ___awmod:
 10131                           	opt stack 19
 10132                           
 10133                           ; BSR set to: 0
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;incstack = 0
 10137  012C66  6B72               	clrf	___awmod@sign& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140  012C68  AF6E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10141  012C6A  D006               	goto	l11692
 10142                           
 10143                           ; BSR set to: 0
 10144  012C6C  6D6D               	negf	___awmod@dividend& (0+255),b
 10145  012C6E  1F6E               	comf	(___awmod@dividend+1)& (0+255),f,b
 10146  012C70  B0D8               	btfsc	status,0,c
 10147  012C72  2B6E               	incf	(___awmod@dividend+1)& (0+255),f,b
 10148                           
 10149                           ; BSR set to: 0
 10150  012C74  0E01               	movlw	1
 10151  012C76  6F72               	movwf	___awmod@sign& (0+255),b
 10152  012C78                     l11692:
 10153                           
 10154                           ; BSR set to: 0
 10155  012C78  AF70               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10156  012C7A  D004               	goto	l11696
 10157                           
 10158                           ; BSR set to: 0
 10159  012C7C  6D6F               	negf	___awmod@divisor& (0+255),b
 10160  012C7E  1F70               	comf	(___awmod@divisor+1)& (0+255),f,b
 10161  012C80  B0D8               	btfsc	status,0,c
 10162  012C82  2B70               	incf	(___awmod@divisor+1)& (0+255),f,b
 10163  012C84                     l11696:
 10164                           
 10165                           ; BSR set to: 0
 10166  012C84  516F               	movf	___awmod@divisor& (0+255),w,b
 10167  012C86  1170               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10168  012C88  E017               	bz	l11712
 10169                           
 10170                           ; BSR set to: 0
 10171  012C8A  0E01               	movlw	1
 10172  012C8C  6F71               	movwf	___awmod@counter& (0+255),b
 10173  012C8E  D004               	goto	l11702
 10174  012C90                     l11700:
 10175                           
 10176                           ; BSR set to: 0
 10177  012C90  90D8               	bcf	status,0,c
 10178  012C92  376F               	rlcf	___awmod@divisor& (0+255),f,b
 10179  012C94  3770               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10180  012C96  2B71               	incf	___awmod@counter& (0+255),f,b
 10181  012C98                     l11702:
 10182                           
 10183                           ; BSR set to: 0
 10184  012C98  AF70               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10185  012C9A  D7FA               	goto	l11700
 10186  012C9C                     l11704:
 10187                           
 10188                           ; BSR set to: 0
 10189  012C9C  516F               	movf	___awmod@divisor& (0+255),w,b
 10190  012C9E  5D6D               	subwf	___awmod@dividend& (0+255),w,b
 10191  012CA0  5170               	movf	(___awmod@divisor+1)& (0+255),w,b
 10192  012CA2  596E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10193  012CA4  E304               	bnc	l11708
 10194                           
 10195                           ; BSR set to: 0
 10196  012CA6  516F               	movf	___awmod@divisor& (0+255),w,b
 10197  012CA8  5F6D               	subwf	___awmod@dividend& (0+255),f,b
 10198  012CAA  5170               	movf	(___awmod@divisor+1)& (0+255),w,b
 10199  012CAC  5B6E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10200  012CAE                     l11708:
 10201                           
 10202                           ; BSR set to: 0
 10203  012CAE  90D8               	bcf	status,0,c
 10204  012CB0  3370               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10205  012CB2  336F               	rrcf	___awmod@divisor& (0+255),f,b
 10206                           
 10207                           ; BSR set to: 0
 10208  012CB4  2F71               	decfsz	___awmod@counter& (0+255),f,b
 10209  012CB6  D7F2               	goto	l11704
 10210  012CB8                     l11712:
 10211                           
 10212                           ; BSR set to: 0
 10213  012CB8  5172               	movf	___awmod@sign& (0+255),w,b
 10214  012CBA  E004               	bz	l11716
 10215                           
 10216                           ; BSR set to: 0
 10217  012CBC  6D6D               	negf	___awmod@dividend& (0+255),b
 10218  012CBE  1F6E               	comf	(___awmod@dividend+1)& (0+255),f,b
 10219  012CC0  B0D8               	btfsc	status,0,c
 10220  012CC2  2B6E               	incf	(___awmod@dividend+1)& (0+255),f,b
 10221  012CC4                     l11716:
 10222                           
 10223                           ; BSR set to: 0
 10224  012CC4  C06D  F06D         	movff	___awmod@dividend,?___awmod
 10225  012CC8  C06E  F06E         	movff	___awmod@dividend+1,?___awmod+1
 10226                           
 10227                           ; BSR set to: 0
 10228  012CCC  0012               	return		;funcret
 10229  012CCE                     __end_of___awmod:
 10230                           	opt stack 0
 10231                           tblptru	equ	0xFF8
 10232                           tblptrh	equ	0xFF7
 10233                           tblptrl	equ	0xFF6
 10234                           tablat	equ	0xFF5
 10235                           prodh	equ	0xFF4
 10236                           prodl	equ	0xFF3
 10237                           intcon	equ	0xFF2
 10238                           intcon2	equ	0xFF1
 10239                           intcon3	equ	0xFF0
 10240                           postinc0	equ	0xFEE
 10241                           wreg	equ	0xFE8
 10242                           indf1	equ	0xFE7
 10243                           postinc1	equ	0xFE6
 10244                           postdec1	equ	0xFE5
 10245                           fsr1h	equ	0xFE2
 10246                           fsr1l	equ	0xFE1
 10247                           indf2	equ	0xFDF
 10248                           postinc2	equ	0xFDE
 10249                           postdec2	equ	0xFDD
 10250                           fsr2h	equ	0xFDA
 10251                           fsr2l	equ	0xFD9
 10252                           status	equ	0xFD8
 10253                           
 10254 ;; *************** function ___awdiv *****************
 10255 ;; Defined at:
 10256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  dividend        2   13[BANK0 ] int 
 10259 ;;  divisor         2   15[BANK0 ] int 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  quotient        2   19[BANK0 ] int 
 10262 ;;  sign            1   18[BANK0 ] unsigned char 
 10263 ;;  counter         1   17[BANK0 ] unsigned char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  2   13[BANK0 ] int 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0
 10268 ;; Tracked objects:
 10269 ;;		On entry : F/0
 10270 ;;		On exit  : F/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;Total ram usage:        8 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    5
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_MiApp_BroadcastConnectionTable
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text39
 10288  012AA6                     __ptext39:
 10289                           	opt stack 0
 10290  012AA6                     ___awdiv:
 10291                           	opt stack 19
 10292                           
 10293                           ; BSR set to: 0
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;incstack = 0
 10297  012AA6  6B72               	clrf	___awdiv@sign& (0+255),b
 10298                           
 10299                           ; BSR set to: 0
 10300  012AA8  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10301  012AAA  D006               	goto	l11648
 10302                           
 10303                           ; BSR set to: 0
 10304  012AAC  6D6F               	negf	___awdiv@divisor& (0+255),b
 10305  012AAE  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10306  012AB0  B0D8               	btfsc	status,0,c
 10307  012AB2  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10308                           
 10309                           ; BSR set to: 0
 10310  012AB4  0E01               	movlw	1
 10311  012AB6  6F72               	movwf	___awdiv@sign& (0+255),b
 10312  012AB8                     l11648:
 10313                           
 10314                           ; BSR set to: 0
 10315  012AB8  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10316  012ABA  D006               	goto	l11654
 10317                           
 10318                           ; BSR set to: 0
 10319  012ABC  6D6D               	negf	___awdiv@dividend& (0+255),b
 10320  012ABE  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10321  012AC0  B0D8               	btfsc	status,0,c
 10322  012AC2  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10323                           
 10324                           ; BSR set to: 0
 10325  012AC4  0E01               	movlw	1
 10326  012AC6  1B72               	xorwf	___awdiv@sign& (0+255),f,b
 10327  012AC8                     l11654:
 10328                           
 10329                           ; BSR set to: 0
 10330  012AC8  6B73               	clrf	___awdiv@quotient& (0+255),b
 10331  012ACA  6B74               	clrf	(___awdiv@quotient+1)& (0+255),b
 10332                           
 10333                           ; BSR set to: 0
 10334  012ACC  516F               	movf	___awdiv@divisor& (0+255),w,b
 10335  012ACE  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10336  012AD0  E01B               	bz	l11676
 10337                           
 10338                           ; BSR set to: 0
 10339  012AD2  0E01               	movlw	1
 10340  012AD4  6F71               	movwf	___awdiv@counter& (0+255),b
 10341  012AD6  D004               	goto	l11662
 10342  012AD8                     l11660:
 10343                           
 10344                           ; BSR set to: 0
 10345  012AD8  90D8               	bcf	status,0,c
 10346  012ADA  376F               	rlcf	___awdiv@divisor& (0+255),f,b
 10347  012ADC  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10348  012ADE  2B71               	incf	___awdiv@counter& (0+255),f,b
 10349  012AE0                     l11662:
 10350                           
 10351                           ; BSR set to: 0
 10352  012AE0  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10353  012AE2  D7FA               	goto	l11660
 10354  012AE4                     l11664:
 10355                           
 10356                           ; BSR set to: 0
 10357  012AE4  90D8               	bcf	status,0,c
 10358  012AE6  3773               	rlcf	___awdiv@quotient& (0+255),f,b
 10359  012AE8  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10360                           
 10361                           ; BSR set to: 0
 10362  012AEA  516F               	movf	___awdiv@divisor& (0+255),w,b
 10363  012AEC  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
 10364  012AEE  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10365  012AF0  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10366  012AF2  E305               	bnc	l11672
 10367                           
 10368                           ; BSR set to: 0
 10369  012AF4  516F               	movf	___awdiv@divisor& (0+255),w,b
 10370  012AF6  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
 10371  012AF8  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10372  012AFA  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10373                           
 10374                           ; BSR set to: 0
 10375  012AFC  8173               	bsf	___awdiv@quotient& (0+255),0,b
 10376  012AFE                     l11672:
 10377                           
 10378                           ; BSR set to: 0
 10379  012AFE  90D8               	bcf	status,0,c
 10380  012B00  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10381  012B02  336F               	rrcf	___awdiv@divisor& (0+255),f,b
 10382                           
 10383                           ; BSR set to: 0
 10384  012B04  2F71               	decfsz	___awdiv@counter& (0+255),f,b
 10385  012B06  D7EE               	goto	l11664
 10386  012B08                     l11676:
 10387                           
 10388                           ; BSR set to: 0
 10389  012B08  5172               	movf	___awdiv@sign& (0+255),w,b
 10390  012B0A  E004               	bz	l11680
 10391                           
 10392                           ; BSR set to: 0
 10393  012B0C  6D73               	negf	___awdiv@quotient& (0+255),b
 10394  012B0E  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10395  012B10  B0D8               	btfsc	status,0,c
 10396  012B12  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10397  012B14                     l11680:
 10398                           
 10399                           ; BSR set to: 0
 10400  012B14  C073  F06D         	movff	___awdiv@quotient,?___awdiv
 10401  012B18  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
 10402                           
 10403                           ; BSR set to: 0
 10404  012B1C  0012               	return		;funcret
 10405  012B1E                     __end_of___awdiv:
 10406                           	opt stack 0
 10407                           tblptru	equ	0xFF8
 10408                           tblptrh	equ	0xFF7
 10409                           tblptrl	equ	0xFF6
 10410                           tablat	equ	0xFF5
 10411                           prodh	equ	0xFF4
 10412                           prodl	equ	0xFF3
 10413                           intcon	equ	0xFF2
 10414                           intcon2	equ	0xFF1
 10415                           intcon3	equ	0xFF0
 10416                           postinc0	equ	0xFEE
 10417                           wreg	equ	0xFE8
 10418                           indf1	equ	0xFE7
 10419                           postinc1	equ	0xFE6
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 10431 ;; Defined at:
 10432 ;;		line 183 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  fw_payload      2   68[BANK0 ] PTR unsigned char 
 10435 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 10436 ;;  index           1   70[BANK0 ] unsigned char 
 10437 ;;  EDxAddress      2   71[BANK0 ] PTR unsigned char 
 10438 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  i               1   74[BANK0 ] unsigned char 
 10441 ;;  status          1   73[BANK0 ] unsigned char 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      unsigned char 
 10444 ;; Registers used:
 10445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10446 ;; Tracked objects:
 10447 ;;		On entry : F/0
 10448 ;;		On exit  : F/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10451 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10455 ;;Total ram usage:        7 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:   13
 10458 ;; This function calls:
 10459 ;;		_MiApp_UnicastConnection
 10460 ;; This function is called by:
 10461 ;;		_P2PTasks
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	text40
 10466  0126FE                     __ptext40:
 10467                           	opt stack 0
 10468  0126FE                     _Forward_Packet_PANCr_to_EDy:
 10469                           	opt stack 12
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;miwi_p2p.c: 185: uint8_t i;
 10473                           ;miwi_p2p.c: 186: bool status;
 10474                           ;miwi_p2p.c: 187: {TxData = 0;};
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;incstack = 0
 10478  0126FE  6BE2               	clrf	_TxData& (0+255),b
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = EDxAddress[0];
 10482  012700  C0A7  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
 10483  012704  C0A8  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
 10484  012708  0E93               	movlw	low _TxBuffer
 10485  01270A  25E2               	addwf	_TxData& (0+255),w,b
 10486  01270C  6EE1               	movwf	fsr1l,c
 10487  01270E  6AE2               	clrf	fsr1h,c
 10488  012710  0E01               	movlw	high _TxBuffer
 10489  012712  22E2               	addwfc	fsr1h,f,c
 10490  012714  CFDF FFE7          	movff	indf2,indf1
 10491                           
 10492                           ; BSR set to: 0
 10493  012718  2BE2               	incf	_TxData& (0+255),f,b
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;miwi_p2p.c: 189: TxBuffer[TxData++] = EDxAddress[1];
 10497  01271A  EE20 F001          	lfsr	2,1
 10498  01271E  51A7               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10499  012720  26D9               	addwf	fsr2l,f,c
 10500  012722  51A8               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10501  012724  22DA               	addwfc	fsr2h,f,c
 10502  012726  0E93               	movlw	low _TxBuffer
 10503  012728  25E2               	addwf	_TxData& (0+255),w,b
 10504  01272A  6EE1               	movwf	fsr1l,c
 10505  01272C  6AE2               	clrf	fsr1h,c
 10506  01272E  0E01               	movlw	high _TxBuffer
 10507  012730  22E2               	addwfc	fsr1h,f,c
 10508  012732  CFDF FFE7          	movff	indf2,indf1
 10509  012736  2BE2               	incf	_TxData& (0+255),f,b
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;miwi_p2p.c: 190: TxBuffer[TxData++] = EDxAddress[2];
 10513  012738  EE20 F002          	lfsr	2,2
 10514  01273C  51A7               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10515  01273E  26D9               	addwf	fsr2l,f,c
 10516  012740  51A8               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10517  012742  22DA               	addwfc	fsr2h,f,c
 10518  012744  0E93               	movlw	low _TxBuffer
 10519  012746  25E2               	addwf	_TxData& (0+255),w,b
 10520  012748  6EE1               	movwf	fsr1l,c
 10521  01274A  6AE2               	clrf	fsr1h,c
 10522  01274C  0E01               	movlw	high _TxBuffer
 10523  01274E  22E2               	addwfc	fsr1h,f,c
 10524  012750  CFDF FFE7          	movff	indf2,indf1
 10525                           
 10526                           ; BSR set to: 0
 10527  012754  2BE2               	incf	_TxData& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;miwi_p2p.c: 191: for(i = 3; i < 35; i++)
 10531  012756  0E03               	movlw	3
 10532  012758  6FAA               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10533  01275A                     l11860:
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;miwi_p2p.c: 192: {
 10537                           ;miwi_p2p.c: 193: TxBuffer[TxData++] = fw_payload[i];
 10538  01275A  51AA               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
 10539  01275C  25A4               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
 10540  01275E  6ED9               	movwf	fsr2l,c
 10541  012760  0E00               	movlw	0
 10542  012762  21A5               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
 10543  012764  6EDA               	movwf	fsr2h,c
 10544  012766  0E93               	movlw	low _TxBuffer
 10545  012768  25E2               	addwf	_TxData& (0+255),w,b
 10546  01276A  6EE1               	movwf	fsr1l,c
 10547  01276C  6AE2               	clrf	fsr1h,c
 10548  01276E  0E01               	movlw	high _TxBuffer
 10549  012770  22E2               	addwfc	fsr1h,f,c
 10550  012772  CFDF FFE7          	movff	indf2,indf1
 10551                           
 10552                           ; BSR set to: 0
 10553  012776  2BE2               	incf	_TxData& (0+255),f,b
 10554                           
 10555                           ; BSR set to: 0
 10556  012778  2BAA               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
 10557                           
 10558                           ; BSR set to: 0
 10559  01277A  0E22               	movlw	34
 10560  01277C  65AA               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10561  01277E  D7ED               	goto	l11860
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;miwi_p2p.c: 194: }
 10565                           ;miwi_p2p.c: 198: status = MiApp_UnicastConnection (index,0) ;
 10566  012780  6BA2               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
 10567  012782  51A6               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
 10568  012784  ECB8  F098         	call	_MiApp_UnicastConnection
 10569  012788  0100               	movlb	0	; () banked
 10570  01278A  6FA9               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;miwi_p2p.c: 201: return status;
 10574  01278C  51A9               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 10575                           
 10576                           ; BSR set to: 0
 10577  01278E  0012               	return		;funcret
 10578  012790                     __end_of_Forward_Packet_PANCr_to_EDy:
 10579                           	opt stack 0
 10580                           tblptru	equ	0xFF8
 10581                           tblptrh	equ	0xFF7
 10582                           tblptrl	equ	0xFF6
 10583                           tablat	equ	0xFF5
 10584                           prodh	equ	0xFF4
 10585                           prodl	equ	0xFF3
 10586                           intcon	equ	0xFF2
 10587                           intcon2	equ	0xFF1
 10588                           intcon3	equ	0xFF0
 10589                           postinc0	equ	0xFEE
 10590                           wreg	equ	0xFE8
 10591                           indf1	equ	0xFE7
 10592                           postinc1	equ	0xFE6
 10593                           postdec1	equ	0xFE5
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           postdec2	equ	0xFDD
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function _MiApp_UnicastConnection *****************
 10604 ;; Defined at:
 10605 ;;		line 1776 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  ConnectionIn    1    wreg     unsigned char 
 10608 ;;  SecEn           1   66[BANK0 ] unsigned char 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  ConnectionIn    1   67[BANK0 ] unsigned char 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  1    wreg      unsigned char 
 10613 ;; Registers used:
 10614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10615 ;; Tracked objects:
 10616 ;;		On entry : F/0
 10617 ;;		On exit  : D/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10620 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;Total ram usage:        2 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:   12
 10627 ;; This function calls:
 10628 ;;		_MiApp_UnicastAddress
 10629 ;; This function is called by:
 10630 ;;		_Forward_Packet_PANCr_to_EDy
 10631 ;;		_run_star_demo
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text41
 10636  013170                     __ptext41:
 10637                           	opt stack 0
 10638  013170                     _MiApp_UnicastConnection:
 10639                           	opt stack 12
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;incstack = 0
 10643                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 10644  013170  6FA3               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
 10645                           
 10646                           ;miwi_p2p.c: 1779: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 10647  013172  0100               	movlb	0	; () banked
 10648  013174  51A3               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10649  013176  0D0E               	mullw	14
 10650  013178  0E2A               	movlw	low (_ConnectionTable+12)
 10651  01317A  24F3               	addwf	prodl,w,c
 10652  01317C  6ED9               	movwf	fsr2l,c
 10653  01317E  0E02               	movlw	high (_ConnectionTable+12)
 10654  013180  20F4               	addwfc	prodh,w,c
 10655  013182  6EDA               	movwf	fsr2h,c
 10656  013184  0102               	movlb	2	; () banked
 10657  013186  AEDF               	btfss	indf2,7,c
 10658  013188  0C00               	retlw	0
 10659                           
 10660                           ; BSR set to: 2
 10661                           ;miwi_p2p.c: 1780: {
 10662                           ;miwi_p2p.c: 1813: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 10663  01318A  0100               	movlb	0	; () banked
 10664  01318C  51A3               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10665  01318E  0D0E               	mullw	14
 10666  013190  0E22               	movlw	low (_ConnectionTable+4)
 10667  013192  24F3               	addwf	prodl,w,c
 10668  013194  6F9E               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
 10669  013196  0E02               	movlw	high (_ConnectionTable+4)
 10670  013198  20F4               	addwfc	prodh,w,c
 10671  01319A  6F9F               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
 10672  01319C  0E01               	movlw	1
 10673  01319E  6FA0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10674  0131A0  C0A2  F0A1         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
 10675  0131A4  EF0E  F09B         	goto	_MiApp_UnicastAddress	;wreg free
 10676  0131A8                     __end_of_MiApp_UnicastConnection:
 10677                           	opt stack 0
 10678                           tblptru	equ	0xFF8
 10679                           tblptrh	equ	0xFF7
 10680                           tblptrl	equ	0xFF6
 10681                           tablat	equ	0xFF5
 10682                           prodh	equ	0xFF4
 10683                           prodl	equ	0xFF3
 10684                           intcon	equ	0xFF2
 10685                           intcon2	equ	0xFF1
 10686                           intcon3	equ	0xFF0
 10687                           postinc0	equ	0xFEE
 10688                           wreg	equ	0xFE8
 10689                           indf1	equ	0xFE7
 10690                           postinc1	equ	0xFE6
 10691                           postdec1	equ	0xFE5
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           indf2	equ	0xFDF
 10695                           postinc2	equ	0xFDE
 10696                           postdec2	equ	0xFDD
 10697                           fsr2h	equ	0xFDA
 10698                           fsr2l	equ	0xFD9
 10699                           status	equ	0xFD8
 10700                           
 10701 ;; *************** function _MiApp_UnicastAddress *****************
 10702 ;; Defined at:
 10703 ;;		line 1855 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  DestinationA    2   62[BANK0 ] PTR unsigned char 
 10706 ;;		 -> ConnectionTable(140), 
 10707 ;;  PermanentAdd    1   64[BANK0 ] unsigned char 
 10708 ;;  SecEn           1   65[BANK0 ] unsigned char 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : F/0
 10717 ;;		On exit  : F/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;Total ram usage:        4 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:   11
 10727 ;; This function calls:
 10728 ;;		_SendPacket
 10729 ;; This function is called by:
 10730 ;;		_MiApp_UnicastConnection
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text42
 10735  01361C                     __ptext42:
 10736                           	opt stack 0
 10737  01361C                     _MiApp_UnicastAddress:
 10738                           	opt stack 12
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;miwi_p2p.c: 1888: return SendPacket(0, DestinationAddress, 0, SecEn);
 10742                           
 10743                           ;incstack = 0
 10744  01361C  C09E  F094         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
 10745  013620  C09F  F095         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
 10746  013624  0E00               	movlw	0
 10747  013626  6B96               	clrf	SendPacket@isCommand& (0+255),b
 10748  013628  C0A1  F097         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
 10749  01362C  EF47  F092         	goto	_SendPacket
 10750  013630                     __end_of_MiApp_UnicastAddress:
 10751                           	opt stack 0
 10752                           tblptru	equ	0xFF8
 10753                           tblptrh	equ	0xFF7
 10754                           tblptrl	equ	0xFF6
 10755                           tablat	equ	0xFF5
 10756                           prodh	equ	0xFF4
 10757                           prodl	equ	0xFF3
 10758                           intcon	equ	0xFF2
 10759                           intcon2	equ	0xFF1
 10760                           intcon3	equ	0xFF0
 10761                           postinc0	equ	0xFEE
 10762                           wreg	equ	0xFE8
 10763                           indf1	equ	0xFE7
 10764                           postinc1	equ	0xFE6
 10765                           postdec1	equ	0xFE5
 10766                           fsr1h	equ	0xFE2
 10767                           fsr1l	equ	0xFE1
 10768                           indf2	equ	0xFDF
 10769                           postinc2	equ	0xFDE
 10770                           postdec2	equ	0xFDD
 10771                           fsr2h	equ	0xFDA
 10772                           fsr2l	equ	0xFD9
 10773                           status	equ	0xFD8
 10774                           
 10775 ;; *************** function _Find_Index *****************
 10776 ;; Defined at:
 10777 ;;		line 109 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  DestAddr        2   13[BANK0 ] PTR unsigned char 
 10780 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  i               1   18[BANK0 ] unsigned char 
 10783 ;;  return_val      1   17[BANK0 ] unsigned char 
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  1    wreg      unsigned char 
 10786 ;; Registers used:
 10787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10788 ;; Tracked objects:
 10789 ;;		On entry : F/0
 10790 ;;		On exit  : F/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10793 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;Total ram usage:        6 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:    5
 10800 ;; This function calls:
 10801 ;;		Nothing
 10802 ;; This function is called by:
 10803 ;;		_P2PTasks
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text43
 10808  0125C8                     __ptext43:
 10809                           	opt stack 0
 10810  0125C8                     _Find_Index:
 10811                           	opt stack 20
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;miwi_p2p.c: 111: uint8_t i;
 10815                           ;miwi_p2p.c: 112: uint8_t return_val;
 10816                           ;miwi_p2p.c: 113: for (i=0;i<conn_size;i++)
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;incstack = 0
 10820  0125C8  6B72               	clrf	Find_Index@i& (0+255),b
 10821  0125CA  D043               	goto	l11806
 10822  0125CC                     l11794:
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;miwi_p2p.c: 114: {
 10826                           ;miwi_p2p.c: 115: if (ConnectionTable[i].status.bits.isValid)
 10827  0125CC  5172               	movf	Find_Index@i& (0+255),w,b
 10828  0125CE  0D0E               	mullw	14
 10829  0125D0  0E2A               	movlw	low (_ConnectionTable+12)
 10830  0125D2  24F3               	addwf	prodl,w,c
 10831  0125D4  6ED9               	movwf	fsr2l,c
 10832  0125D6  0E02               	movlw	high (_ConnectionTable+12)
 10833  0125D8  20F4               	addwfc	prodh,w,c
 10834  0125DA  6EDA               	movwf	fsr2h,c
 10835  0125DC  AEDF               	btfss	indf2,7,c
 10836  0125DE  D037               	goto	l11804
 10837                           
 10838                           ; BSR set to: 2
 10839                           ;miwi_p2p.c: 116: {
 10840                           ;miwi_p2p.c: 117: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 10841  0125E0  0100               	movlb	0	; () banked
 10842  0125E2  5172               	movf	Find_Index@i& (0+255),w,b
 10843  0125E4  0D0E               	mullw	14
 10844  0125E6  0E22               	movlw	low (_ConnectionTable+4)
 10845  0125E8  24F3               	addwf	prodl,w,c
 10846  0125EA  6ED9               	movwf	fsr2l,c
 10847  0125EC  0E02               	movlw	high (_ConnectionTable+4)
 10848  0125EE  20F4               	addwfc	prodh,w,c
 10849  0125F0  6EDA               	movwf	fsr2h,c
 10850  0125F2  EE10 F001          	lfsr	1,1
 10851  0125F6  516D               	movf	Find_Index@DestAddr& (0+255),w,b
 10852  0125F8  26E1               	addwf	fsr1l,f,c
 10853  0125FA  516E               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 10854  0125FC  22E2               	addwfc	fsr1h,f,c
 10855  0125FE  50DE               	movf	postinc2,w,c
 10856  012600  18E6               	xorwf	postinc1,w,c
 10857  012602  E125               	bnz	l11804
 10858                           
 10859                           ; BSR set to: 0
 10860  012604  5172               	movf	Find_Index@i& (0+255),w,b
 10861  012606  0D0E               	mullw	14
 10862  012608  0E23               	movlw	low (_ConnectionTable+5)
 10863  01260A  24F3               	addwf	prodl,w,c
 10864  01260C  6ED9               	movwf	fsr2l,c
 10865  01260E  0E02               	movlw	high (_ConnectionTable+5)
 10866  012610  20F4               	addwfc	prodh,w,c
 10867  012612  6EDA               	movwf	fsr2h,c
 10868  012614  EE10 F002          	lfsr	1,2
 10869  012618  516D               	movf	Find_Index@DestAddr& (0+255),w,b
 10870  01261A  26E1               	addwf	fsr1l,f,c
 10871  01261C  516E               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 10872  01261E  22E2               	addwfc	fsr1h,f,c
 10873  012620  50DE               	movf	postinc2,w,c
 10874  012622  18E6               	xorwf	postinc1,w,c
 10875  012624  E114               	bnz	l11804
 10876                           
 10877                           ; BSR set to: 0
 10878  012626  5172               	movf	Find_Index@i& (0+255),w,b
 10879  012628  0D0E               	mullw	14
 10880  01262A  0E24               	movlw	low (_ConnectionTable+6)
 10881  01262C  24F3               	addwf	prodl,w,c
 10882  01262E  6ED9               	movwf	fsr2l,c
 10883  012630  0E02               	movlw	high (_ConnectionTable+6)
 10884  012632  20F4               	addwfc	prodh,w,c
 10885  012634  6EDA               	movwf	fsr2h,c
 10886  012636  EE10 F003          	lfsr	1,3
 10887  01263A  516D               	movf	Find_Index@DestAddr& (0+255),w,b
 10888  01263C  26E1               	addwf	fsr1l,f,c
 10889  01263E  516E               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 10890  012640  22E2               	addwfc	fsr1h,f,c
 10891  012642  50DE               	movf	postinc2,w,c
 10892  012644  18E6               	xorwf	postinc1,w,c
 10893  012646  E103               	bnz	l11804
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;miwi_p2p.c: 118: {
 10897                           ;miwi_p2p.c: 119: return_val = i;
 10898  012648  C072  F071         	movff	Find_Index@i,Find_Index@return_val
 10899                           
 10900                           ;miwi_p2p.c: 120: break;
 10901  01264C  D005               	goto	l11808
 10902  01264E                     l11804:
 10903  01264E  0100               	movlb	0	; () banked
 10904  012650  2B72               	incf	Find_Index@i& (0+255),f,b
 10905  012652                     l11806:
 10906                           
 10907                           ; BSR set to: 0
 10908  012652  51E8               	movf	_conn_size& (0+255),w,b
 10909  012654  5D72               	subwf	Find_Index@i& (0+255),w,b
 10910  012656  E3BA               	bnc	l11794
 10911  012658                     l11808:
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;miwi_p2p.c: 121: }
 10915                           ;miwi_p2p.c: 123: }
 10916                           ;miwi_p2p.c: 124: }
 10917                           ;miwi_p2p.c: 125: if (i==conn_size)
 10918  012658  51E8               	movf	_conn_size& (0+255),w,b
 10919  01265A  1972               	xorwf	Find_Index@i& (0+255),w,b
 10920  01265C  E101               	bnz	l11812
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;miwi_p2p.c: 126: {
 10924                           ;miwi_p2p.c: 127: return_val = 0xff;
 10925  01265E  6971               	setf	Find_Index@return_val& (0+255),b
 10926  012660                     l11812:
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;miwi_p2p.c: 128: }
 10930                           ;miwi_p2p.c: 129: return return_val;
 10931  012660  5171               	movf	Find_Index@return_val& (0+255),w,b
 10932                           
 10933                           ; BSR set to: 0
 10934  012662  0012               	return		;funcret
 10935  012664                     __end_of_Find_Index:
 10936                           	opt stack 0
 10937                           tblptru	equ	0xFF8
 10938                           tblptrh	equ	0xFF7
 10939                           tblptrl	equ	0xFF6
 10940                           tablat	equ	0xFF5
 10941                           prodh	equ	0xFF4
 10942                           prodl	equ	0xFF3
 10943                           intcon	equ	0xFF2
 10944                           intcon2	equ	0xFF1
 10945                           intcon3	equ	0xFF0
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           indf1	equ	0xFE7
 10949                           postinc1	equ	0xFE6
 10950                           postdec1	equ	0xFE5
 10951                           fsr1h	equ	0xFE2
 10952                           fsr1l	equ	0xFE1
 10953                           indf2	equ	0xFDF
 10954                           postinc2	equ	0xFDE
 10955                           postdec2	equ	0xFDD
 10956                           fsr2h	equ	0xFDA
 10957                           fsr2l	equ	0xFD9
 10958                           status	equ	0xFD8
 10959                           
 10960 ;; *************** function _Find_InActiveDevices *****************
 10961 ;; Defined at:
 10962 ;;		line 2073 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  i               1   69[BANK0 ] unsigned char 
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10971 ;; Tracked objects:
 10972 ;;		On entry : F/0
 10973 ;;		On exit  : F/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;Total ram usage:        2 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:   12
 10983 ;; This function calls:
 10984 ;;		_MiApp_RemoveConnection
 10985 ;; This function is called by:
 10986 ;;		_P2PTasks
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text44
 10991  012D98                     __ptext44:
 10992                           	opt stack 0
 10993  012D98                     _Find_InActiveDevices:
 10994                           	opt stack 13
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;miwi_p2p.c: 2075: uint8_t i;
 10998                           ;miwi_p2p.c: 2076: for (i=0;i<10;i++)
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;incstack = 0
 11002  012D98  6BA5               	clrf	Find_InActiveDevices@i& (0+255),b
 11003  012D9A                     l11880:
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;miwi_p2p.c: 2077: {
 11007                           ;miwi_p2p.c: 2078: if (ConnectionTable[i].status.bits.isValid)
 11008  012D9A  51A5               	movf	Find_InActiveDevices@i& (0+255),w,b
 11009  012D9C  0D0E               	mullw	14
 11010  012D9E  0E2A               	movlw	low (_ConnectionTable+12)
 11011  012DA0  24F3               	addwf	prodl,w,c
 11012  012DA2  6ED9               	movwf	fsr2l,c
 11013  012DA4  0E02               	movlw	high (_ConnectionTable+12)
 11014  012DA6  20F4               	addwfc	prodh,w,c
 11015  012DA8  6EDA               	movwf	fsr2h,c
 11016  012DAA  AEDF               	btfss	indf2,7,c
 11017  012DAC  D01C               	goto	l11890
 11018                           
 11019                           ; BSR set to: 2
 11020                           ;miwi_p2p.c: 2079: {
 11021                           ;miwi_p2p.c: 2080: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 11022  012DAE  0E5F               	movlw	low _link_stat
 11023  012DB0  0100               	movlb	0	; () banked
 11024  012DB2  25A5               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11025  012DB4  6ED9               	movwf	fsr2l,c
 11026  012DB6  6ADA               	clrf	fsr2h,c
 11027  012DB8  0E01               	movlw	high _link_stat
 11028  012DBA  22DA               	addwfc	fsr2h,f,c
 11029  012DBC  50DF               	movf	indf2,w,c
 11030  012DBE  E10C               	bnz	l11888
 11031                           
 11032                           ; BSR set to: 0
 11033  012DC0  0E69               	movlw	low _permanent_connections
 11034  012DC2  25A5               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11035  012DC4  6ED9               	movwf	fsr2l,c
 11036  012DC6  6ADA               	clrf	fsr2h,c
 11037  012DC8  0E01               	movlw	high _permanent_connections
 11038  012DCA  22DA               	addwfc	fsr2h,f,c
 11039  012DCC  28DE               	incf	postinc2,w,c
 11040  012DCE  E004               	bz	l11888
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;miwi_p2p.c: 2081: {
 11044                           ;miwi_p2p.c: 2082: MiApp_RemoveConnection(i);
 11045  012DD0  51A5               	movf	Find_InActiveDevices@i& (0+255),w,b
 11046  012DD2  EC9D  F08E         	call	_MiApp_RemoveConnection
 11047                           
 11048                           ;miwi_p2p.c: 2083: }
 11049  012DD6  D007               	goto	l11890
 11050  012DD8                     l11888:
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;miwi_p2p.c: 2084: else
 11054                           ;miwi_p2p.c: 2085: {
 11055                           ;miwi_p2p.c: 2086: link_stat[i] = 0;
 11056  012DD8  0E5F               	movlw	low _link_stat
 11057  012DDA  25A5               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11058  012DDC  6ED9               	movwf	fsr2l,c
 11059  012DDE  6ADA               	clrf	fsr2h,c
 11060  012DE0  0E01               	movlw	high _link_stat
 11061  012DE2  22DA               	addwfc	fsr2h,f,c
 11062  012DE4  6ADF               	clrf	indf2,c
 11063  012DE6                     l11890:
 11064  012DE6  0100               	movlb	0	; () banked
 11065  012DE8  2BA5               	incf	Find_InActiveDevices@i& (0+255),f,b
 11066                           
 11067                           ; BSR set to: 0
 11068  012DEA  0E09               	movlw	9
 11069  012DEC  65A5               	cpfsgt	Find_InActiveDevices@i& (0+255),b
 11070  012DEE  D7D5               	goto	l11880
 11071  012DF0  0C09               	retlw	9
 11072  012DF2                     __end_of_Find_InActiveDevices:
 11073                           	opt stack 0
 11074                           tblptru	equ	0xFF8
 11075                           tblptrh	equ	0xFF7
 11076                           tblptrl	equ	0xFF6
 11077                           tablat	equ	0xFF5
 11078                           prodh	equ	0xFF4
 11079                           prodl	equ	0xFF3
 11080                           intcon	equ	0xFF2
 11081                           intcon2	equ	0xFF1
 11082                           intcon3	equ	0xFF0
 11083                           postinc0	equ	0xFEE
 11084                           wreg	equ	0xFE8
 11085                           indf1	equ	0xFE7
 11086                           postinc1	equ	0xFE6
 11087                           postdec1	equ	0xFE5
 11088                           fsr1h	equ	0xFE2
 11089                           fsr1l	equ	0xFE1
 11090                           indf2	equ	0xFDF
 11091                           postinc2	equ	0xFDE
 11092                           postdec2	equ	0xFDD
 11093                           fsr2h	equ	0xFDA
 11094                           fsr2l	equ	0xFD9
 11095                           status	equ	0xFD8
 11096                           
 11097 ;; *************** function _MiApp_RemoveConnection *****************
 11098 ;; Defined at:
 11099 ;;		line 3125 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;  ConnectionIn    1    wreg     unsigned char 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  ConnectionIn    1   66[BANK0 ] unsigned char 
 11104 ;;  j               2   62[BANK0 ] unsigned int 
 11105 ;;  j               2   64[BANK0 ] unsigned int 
 11106 ;;  i               1   67[BANK0 ] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11111 ;; Tracked objects:
 11112 ;;		On entry : F/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11117 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;Total ram usage:        6 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:   11
 11123 ;; This function calls:
 11124 ;;		_NVMWrite
 11125 ;;		_SendPacket
 11126 ;; This function is called by:
 11127 ;;		_Find_InActiveDevices
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text45
 11132  011D3A                     __ptext45:
 11133                           	opt stack 0
 11134  011D3A                     _MiApp_RemoveConnection:
 11135                           	opt stack 13
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;incstack = 0
 11139                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 11140  011D3A  6FA2               	movwf	MiApp_RemoveConnection@ConnectionIndex& (0+255),b
 11141                           
 11142                           ;miwi_p2p.c: 3127: if( ConnectionIndex == 0xFF )
 11143  011D3C  0100               	movlb	0	; () banked
 11144  011D3E  29A2               	incf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11145  011D40  E151               	bnz	l11528
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;miwi_p2p.c: 3128: {
 11149                           ;miwi_p2p.c: 3129: uint8_t i;
 11150                           ;miwi_p2p.c: 3130: for(i = 0; i < 10; i++)
 11151  011D42  6BA3               	clrf	MiApp_RemoveConnection@i& (0+255),b
 11152  011D44                     l11500:
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;miwi_p2p.c: 3131: {
 11156                           ;miwi_p2p.c: 3132: uint16_t j;
 11157                           ;miwi_p2p.c: 3133: if( ConnectionTable[i].status.bits.isValid )
 11158  011D44  51A3               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11159  011D46  0D0E               	mullw	14
 11160  011D48  0E2A               	movlw	low (_ConnectionTable+12)
 11161  011D4A  24F3               	addwf	prodl,w,c
 11162  011D4C  6ED9               	movwf	fsr2l,c
 11163  011D4E  0E02               	movlw	high (_ConnectionTable+12)
 11164  011D50  20F4               	addwfc	prodh,w,c
 11165  011D52  6EDA               	movwf	fsr2h,c
 11166  011D54  AEDF               	btfss	indf2,7,c
 11167  011D56  D021               	goto	l11520
 11168                           
 11169                           ; BSR set to: 2
 11170                           ;miwi_p2p.c: 3134: {
 11171                           ;miwi_p2p.c: 3135: {TxData = 0;};
 11172  011D58  0100               	movlb	0	; () banked
 11173  011D5A  6BE2               	clrf	_TxData& (0+255),b
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;miwi_p2p.c: 3136: TxBuffer[TxData++] = 0x82;
 11177  011D5C  0E93               	movlw	low _TxBuffer
 11178  011D5E  25E2               	addwf	_TxData& (0+255),w,b
 11179  011D60  6ED9               	movwf	fsr2l,c
 11180  011D62  6ADA               	clrf	fsr2h,c
 11181  011D64  0E01               	movlw	high _TxBuffer
 11182  011D66  22DA               	addwfc	fsr2h,f,c
 11183  011D68  0E82               	movlw	130
 11184  011D6A  6EDF               	movwf	indf2,c
 11185                           
 11186                           ; BSR set to: 0
 11187  011D6C  2BE2               	incf	_TxData& (0+255),f,b
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;miwi_p2p.c: 3140: SendPacket(0, ConnectionTable[i].Address, 1, 0);
 11191  011D6E  51A3               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11192  011D70  0D0E               	mullw	14
 11193  011D72  0E22               	movlw	low (_ConnectionTable+4)
 11194  011D74  24F3               	addwf	prodl,w,c
 11195  011D76  6F94               	movwf	SendPacket@DestinationAddress& (0+255),b
 11196  011D78  0E02               	movlw	high (_ConnectionTable+4)
 11197  011D7A  20F4               	addwfc	prodh,w,c
 11198  011D7C  6F95               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11199  011D7E  0E01               	movlw	1
 11200  011D80  6F96               	movwf	SendPacket@isCommand& (0+255),b
 11201  011D82  0E00               	movlw	0
 11202  011D84  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11203  011D86  EC47  F092         	call	_SendPacket
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;miwi_p2p.c: 3142: for(j = 0; j < 0xFFF; j++) {}
 11207  011D8A  6B9E               	clrf	MiApp_RemoveConnection@j& (0+255),b
 11208  011D8C  6B9F               	clrf	(MiApp_RemoveConnection@j+1)& (0+255),b
 11209  011D8E                     l11516:
 11210                           
 11211                           ; BSR set to: 0
 11212  011D8E  4B9E               	infsnz	MiApp_RemoveConnection@j& (0+255),f,b
 11213  011D90  2B9F               	incf	(MiApp_RemoveConnection@j+1)& (0+255),f,b
 11214                           
 11215                           ; BSR set to: 0
 11216  011D92  299E               	incf	MiApp_RemoveConnection@j& (0+255),w,b
 11217  011D94  0E0F               	movlw	15
 11218  011D96  599F               	subwfb	(MiApp_RemoveConnection@j+1)& (0+255),w,b
 11219  011D98  E3FA               	bnc	l11516
 11220  011D9A                     l11520:
 11221                           
 11222                           ;miwi_p2p.c: 3143: }
 11223                           ;miwi_p2p.c: 3144: ConnectionTable[i].status.Val = 0;
 11224  011D9A  0100               	movlb	0	; () banked
 11225  011D9C  51A3               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11226  011D9E  0D0E               	mullw	14
 11227  011DA0  0E2A               	movlw	low (_ConnectionTable+12)
 11228  011DA2  24F3               	addwf	prodl,w,c
 11229  011DA4  6ED9               	movwf	fsr2l,c
 11230  011DA6  0E02               	movlw	high (_ConnectionTable+12)
 11231  011DA8  20F4               	addwfc	prodh,w,c
 11232  011DAA  6EDA               	movwf	fsr2h,c
 11233  011DAC  6ADF               	clrf	indf2,c
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;miwi_p2p.c: 3146: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint1
      +                          6_t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 11237  011DAE  51A3               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11238  011DB0  0D0E               	mullw	14
 11239  011DB2  0E1E               	movlw	low _ConnectionTable
 11240  011DB4  24F3               	addwf	prodl,w,c
 11241  011DB6  6F6E               	movwf	NVMWrite@source& (0+255),b
 11242  011DB8  0E02               	movlw	high _ConnectionTable
 11243  011DBA  20F4               	addwfc	prodh,w,c
 11244  011DBC  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
 11245  011DBE  51A3               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11246  011DC0  0D0E               	mullw	14
 11247  011DC2  51E6               	movf	_nvmConnectionTable& (0+255),w,b
 11248  011DC4  24F3               	addwf	prodl,w,c
 11249  011DC6  6F70               	movwf	NVMWrite@addr& (0+255),b
 11250  011DC8  51E7               	movf	(_nvmConnectionTable+1)& (0+255),w,b
 11251  011DCA  20F4               	addwfc	prodh,w,c
 11252  011DCC  6F71               	movwf	(NVMWrite@addr+1)& (0+255),b
 11253  011DCE  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
 11254  011DD0  0E0E               	movlw	14
 11255  011DD2  6F72               	movwf	NVMWrite@count& (0+255),b
 11256  011DD4  EC32  F093         	call	_NVMWrite	;wreg free
 11257  011DD8  0100               	movlb	0	; () banked
 11258  011DDA  2BA3               	incf	MiApp_RemoveConnection@i& (0+255),f,b
 11259                           
 11260                           ; BSR set to: 0
 11261  011DDC  0E09               	movlw	9
 11262  011DDE  65A3               	cpfsgt	MiApp_RemoveConnection@i& (0+255),b
 11263  011DE0  D7B1               	goto	l11500
 11264  011DE2  0C09               	retlw	9
 11265  011DE4                     l11528:
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;miwi_p2p.c: 3150: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 11269  011DE4  51A2               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11270  011DE6  0D0E               	mullw	14
 11271  011DE8  0E2A               	movlw	low (_ConnectionTable+12)
 11272  011DEA  24F3               	addwf	prodl,w,c
 11273  011DEC  6ED9               	movwf	fsr2l,c
 11274  011DEE  0E02               	movlw	high (_ConnectionTable+12)
 11275  011DF0  20F4               	addwfc	prodh,w,c
 11276  011DF2  6EDA               	movwf	fsr2h,c
 11277  011DF4  0102               	movlb	2	; () banked
 11278  011DF6  AEDF               	btfss	indf2,7,c
 11279  011DF8  0012               	return	
 11280                           
 11281                           ; BSR set to: 2
 11282                           ;miwi_p2p.c: 3151: {
 11283                           ;miwi_p2p.c: 3152: uint16_t j;
 11284                           ;miwi_p2p.c: 3154: {TxData = 0;};
 11285  011DFA  0100               	movlb	0	; () banked
 11286  011DFC  6BE2               	clrf	_TxData& (0+255),b
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;miwi_p2p.c: 3155: TxBuffer[TxData++] = 0x82;
 11290  011DFE  0E93               	movlw	low _TxBuffer
 11291  011E00  25E2               	addwf	_TxData& (0+255),w,b
 11292  011E02  6ED9               	movwf	fsr2l,c
 11293  011E04  6ADA               	clrf	fsr2h,c
 11294  011E06  0E01               	movlw	high _TxBuffer
 11295  011E08  22DA               	addwfc	fsr2h,f,c
 11296  011E0A  0E82               	movlw	130
 11297  011E0C  6EDF               	movwf	indf2,c
 11298                           
 11299                           ; BSR set to: 0
 11300  011E0E  2BE2               	incf	_TxData& (0+255),f,b
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;miwi_p2p.c: 3159: SendPacket(0, ConnectionTable[ConnectionIndex].Address, 1, 0);
 11304  011E10  51A2               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11305  011E12  0D0E               	mullw	14
 11306  011E14  0E22               	movlw	low (_ConnectionTable+4)
 11307  011E16  24F3               	addwf	prodl,w,c
 11308  011E18  6F94               	movwf	SendPacket@DestinationAddress& (0+255),b
 11309  011E1A  0E02               	movlw	high (_ConnectionTable+4)
 11310  011E1C  20F4               	addwfc	prodh,w,c
 11311  011E1E  6F95               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11312  011E20  0E01               	movlw	1
 11313  011E22  6F96               	movwf	SendPacket@isCommand& (0+255),b
 11314  011E24  0E00               	movlw	0
 11315  011E26  6B97               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11316  011E28  EC47  F092         	call	_SendPacket
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;miwi_p2p.c: 3161: for(j = 0; j < 0xFFF; j++) {}
 11320  011E2C  6BA0               	clrf	MiApp_RemoveConnection@j_1366& (0+255),b
 11321  011E2E  6BA1               	clrf	(MiApp_RemoveConnection@j_1366+1)& (0+255),b
 11322  011E30                     l11544:
 11323                           
 11324                           ; BSR set to: 0
 11325  011E30  4BA0               	infsnz	MiApp_RemoveConnection@j_1366& (0+255),f,b
 11326  011E32  2BA1               	incf	(MiApp_RemoveConnection@j_1366+1)& (0+255),f,b
 11327                           
 11328                           ; BSR set to: 0
 11329  011E34  29A0               	incf	MiApp_RemoveConnection@j_1366& (0+255),w,b
 11330  011E36  0E0F               	movlw	15
 11331  011E38  59A1               	subwfb	(MiApp_RemoveConnection@j_1366+1)& (0+255),w,b
 11332  011E3A  E3FA               	bnc	l11544
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;miwi_p2p.c: 3162: ConnectionTable[ConnectionIndex].status.Val = 0;
 11336  011E3C  51A2               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11337  011E3E  0D0E               	mullw	14
 11338  011E40  0E2A               	movlw	low (_ConnectionTable+12)
 11339  011E42  24F3               	addwf	prodl,w,c
 11340  011E44  6ED9               	movwf	fsr2l,c
 11341  011E46  0E02               	movlw	high (_ConnectionTable+12)
 11342  011E48  20F4               	addwfc	prodh,w,c
 11343  011E4A  6EDA               	movwf	fsr2h,c
 11344  011E4C  6ADF               	clrf	indf2,c
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;miwi_p2p.c: 3164: NVMWrite((uint8_t *)&(ConnectionTable[ConnectionIndex]), nvmConnectio
      +                          nTable+((uint16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY))
      +                          ;
 11348  011E4E  51A2               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11349  011E50  0D0E               	mullw	14
 11350  011E52  0E1E               	movlw	low _ConnectionTable
 11351  011E54  24F3               	addwf	prodl,w,c
 11352  011E56  6F6E               	movwf	NVMWrite@source& (0+255),b
 11353  011E58  0E02               	movlw	high _ConnectionTable
 11354  011E5A  20F4               	addwfc	prodh,w,c
 11355  011E5C  6F6F               	movwf	(NVMWrite@source+1)& (0+255),b
 11356  011E5E  51A2               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11357  011E60  0D0E               	mullw	14
 11358  011E62  51E6               	movf	_nvmConnectionTable& (0+255),w,b
 11359  011E64  24F3               	addwf	prodl,w,c
 11360  011E66  6F70               	movwf	NVMWrite@addr& (0+255),b
 11361  011E68  51E7               	movf	(_nvmConnectionTable+1)& (0+255),w,b
 11362  011E6A  20F4               	addwfc	prodh,w,c
 11363  011E6C  6F71               	movwf	(NVMWrite@addr+1)& (0+255),b
 11364  011E6E  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
 11365  011E70  0E0E               	movlw	14
 11366  011E72  6F72               	movwf	NVMWrite@count& (0+255),b
 11367  011E74  EF32  F093         	goto	_NVMWrite	;wreg free
 11368  011E78                     __end_of_MiApp_RemoveConnection:
 11369                           	opt stack 0
 11370                           tblptru	equ	0xFF8
 11371                           tblptrh	equ	0xFF7
 11372                           tblptrl	equ	0xFF6
 11373                           tablat	equ	0xFF5
 11374                           prodh	equ	0xFF4
 11375                           prodl	equ	0xFF3
 11376                           intcon	equ	0xFF2
 11377                           intcon2	equ	0xFF1
 11378                           intcon3	equ	0xFF0
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf1	equ	0xFE7
 11382                           postinc1	equ	0xFE6
 11383                           postdec1	equ	0xFE5
 11384                           fsr1h	equ	0xFE2
 11385                           fsr1l	equ	0xFE1
 11386                           indf2	equ	0xFDF
 11387                           postinc2	equ	0xFDE
 11388                           postdec2	equ	0xFDD
 11389                           fsr2h	equ	0xFDA
 11390                           fsr2l	equ	0xFD9
 11391                           status	equ	0xFD8
 11392                           
 11393 ;; *************** function _SendPacket *****************
 11394 ;; Defined at:
 11395 ;;		line 1623 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  Broadcast       1    wreg     unsigned char 
 11398 ;;  DestinationA    2   52[BANK0 ] PTR unsigned char 
 11399 ;;		 -> ConnectionTable(140), NULL(0), RxPacket.Payload(55), RxPacket(114), 
 11400 ;;  isCommand       1   54[BANK0 ] unsigned char 
 11401 ;;  SecurityEnab    1   55[BANK0 ] unsigned char 
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  Broadcast       1   58[BANK0 ] unsigned char 
 11404 ;;  tParam          3   59[BANK0 ] struct .
 11405 ;;  status          1   57[BANK0 ] unsigned char 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      unsigned char 
 11408 ;; Registers used:
 11409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11410 ;; Tracked objects:
 11411 ;;		On entry : F/0
 11412 ;;		On exit  : F/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;Total ram usage:       10 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:   10
 11422 ;; This function calls:
 11423 ;;		_MiMAC_SendPacket
 11424 ;; This function is called by:
 11425 ;;		_P2PTasks
 11426 ;;		_MiApp_BroadcastPacket
 11427 ;;		_MiApp_UnicastAddress
 11428 ;;		_MiApp_BroadcastConnectionTable
 11429 ;;		_MiApp_UnicastStar
 11430 ;;		_send_link_status
 11431 ;;		_SW_Ack_SrED
 11432 ;;		_MiApp_EstablishConnection
 11433 ;;		_MiApp_RemoveConnection
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text46
 11438  01248E                     __ptext46:
 11439                           	opt stack 0
 11440  01248E                     _SendPacket:
 11441                           	opt stack 14
 11442                           
 11443                           ;incstack = 0
 11444                           ;SendPacket@Broadcast stored from wreg
 11445  01248E  6F9A               	movwf	SendPacket@Broadcast& (0+255),b
 11446                           
 11447                           ;miwi_p2p.c: 1629: MAC_TRANS_PARAM tParam;
 11448                           ;miwi_p2p.c: 1630: bool status;
 11449                           ;miwi_p2p.c: 1632: tParam.flags.Val = 0;
 11450  012490  0100               	movlb	0	; () banked
 11451  012492  6B9B               	clrf	SendPacket@tParam& (0+255),b
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;miwi_p2p.c: 1633: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 11455  012494  5196               	movf	SendPacket@isCommand& (0+255),w,b
 11456  012496  E003               	bz	u11070
 11457  012498  6B98               	clrf	??_SendPacket& (0+255),b
 11458  01249A  2B98               	incf	??_SendPacket& (0+255),f,b
 11459  01249C  D002               	goto	u11088
 11460  01249E                     u11070:
 11461  01249E  0100               	movlb	0	; () banked
 11462  0124A0  6B98               	clrf	??_SendPacket& (0+255),b
 11463  0124A2                     u11088:
 11464  0124A2  519B               	movf	SendPacket@tParam& (0+255),w,b
 11465  0124A4  1998               	xorwf	??_SendPacket& (0+255),w,b
 11466  0124A6  0BFC               	andlw	-4
 11467  0124A8  1998               	xorwf	??_SendPacket& (0+255),w,b
 11468  0124AA  6F9B               	movwf	SendPacket@tParam& (0+255),b
 11469                           
 11470                           ;miwi_p2p.c: 1634: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 11471  0124AC  519A               	movf	SendPacket@Broadcast& (0+255),w,b
 11472  0124AE  E103               	bnz	u11090
 11473  0124B0  6B98               	clrf	??_SendPacket& (0+255),b
 11474  0124B2  2B98               	incf	??_SendPacket& (0+255),f,b
 11475  0124B4  D002               	goto	u11108
 11476  0124B6                     u11090:
 11477  0124B6  0100               	movlb	0	; () banked
 11478  0124B8  6B98               	clrf	??_SendPacket& (0+255),b
 11479  0124BA                     u11108:
 11480  0124BA  3B98               	swapf	??_SendPacket& (0+255),f,b
 11481  0124BC  4798               	rlncf	??_SendPacket& (0+255),f,b
 11482  0124BE  519B               	movf	SendPacket@tParam& (0+255),w,b
 11483  0124C0  1998               	xorwf	??_SendPacket& (0+255),w,b
 11484  0124C2  0BDF               	andlw	-33
 11485  0124C4  1998               	xorwf	??_SendPacket& (0+255),w,b
 11486  0124C6  6F9B               	movwf	SendPacket@tParam& (0+255),b
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;miwi_p2p.c: 1635: tParam.flags.bits.broadcast = Broadcast;
 11490  0124C8  B19A               	btfsc	SendPacket@Broadcast& (0+255),0,b
 11491  0124CA  D002               	bra	u11115
 11492  0124CC  959B               	bcf	SendPacket@tParam& (0+255),2,b
 11493  0124CE  D002               	bra	u11116
 11494  0124D0                     u11115:
 11495  0124D0  0100               	movlb	0	; () banked
 11496  0124D2  859B               	bsf	SendPacket@tParam& (0+255),2,b
 11497  0124D4                     u11116:
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;miwi_p2p.c: 1636: tParam.flags.bits.secEn = SecurityEnabled;
 11501  0124D4  B197               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 11502  0124D6  D002               	bra	u11125
 11503  0124D8  979B               	bcf	SendPacket@tParam& (0+255),3,b
 11504  0124DA  D002               	bra	u11126
 11505  0124DC                     u11125:
 11506  0124DC  0100               	movlb	0	; () banked
 11507  0124DE  879B               	bsf	SendPacket@tParam& (0+255),3,b
 11508  0124E0                     u11126:
 11509                           
 11510                           ;miwi_p2p.c: 1645: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 11511  0124E0  519A               	movf	SendPacket@Broadcast& (0+255),w,b
 11512  0124E2  E103               	bnz	u11130
 11513  0124E4  6B98               	clrf	??_SendPacket& (0+255),b
 11514  0124E6  2B98               	incf	??_SendPacket& (0+255),f,b
 11515  0124E8  D002               	goto	u11148
 11516  0124EA                     u11130:
 11517  0124EA  0100               	movlb	0	; () banked
 11518  0124EC  6B98               	clrf	??_SendPacket& (0+255),b
 11519  0124EE                     u11148:
 11520  0124EE  3B98               	swapf	??_SendPacket& (0+255),f,b
 11521  0124F0  4798               	rlncf	??_SendPacket& (0+255),f,b
 11522  0124F2  4798               	rlncf	??_SendPacket& (0+255),f,b
 11523  0124F4  519B               	movf	SendPacket@tParam& (0+255),w,b
 11524  0124F6  1998               	xorwf	??_SendPacket& (0+255),w,b
 11525  0124F8  0BBF               	andlw	-65
 11526  0124FA  1998               	xorwf	??_SendPacket& (0+255),w,b
 11527  0124FC  6F9B               	movwf	SendPacket@tParam& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;miwi_p2p.c: 1658: tParam.flags.bits.sourcePrsnt = 1;
 11531  0124FE  8F9B               	bsf	SendPacket@tParam& (0+255),7,b
 11532                           
 11533                           ;miwi_p2p.c: 1661: tParam.DestAddress = DestinationAddress;
 11534  012500  C094  F09C         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 11535  012504  C095  F09D         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;miwi_p2p.c: 1667: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 11539  012508  C09B  F08B         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
 11540  01250C  C09C  F08C         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
 11541  012510  C09D  F08D         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
 11542  012514  0E93               	movlw	low _TxBuffer
 11543  012516  6F8E               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 11544  012518  0E01               	movlw	high _TxBuffer
 11545  01251A  6F8F               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 11546  01251C  C0E2  F090         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 11547  012520  EC5E  F090         	call	_MiMAC_SendPacket	;wreg free
 11548  012524  6F99               	movwf	SendPacket@status& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;miwi_p2p.c: 1668: TxData = 0;
 11552  012526  6BE2               	clrf	_TxData& (0+255),b
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;miwi_p2p.c: 1670: return status;
 11556  012528  5199               	movf	SendPacket@status& (0+255),w,b
 11557                           
 11558                           ; BSR set to: 0
 11559  01252A  0012               	return		;funcret
 11560  01252C                     __end_of_SendPacket:
 11561                           	opt stack 0
 11562                           tblptru	equ	0xFF8
 11563                           tblptrh	equ	0xFF7
 11564                           tblptrl	equ	0xFF6
 11565                           tablat	equ	0xFF5
 11566                           prodh	equ	0xFF4
 11567                           prodl	equ	0xFF3
 11568                           intcon	equ	0xFF2
 11569                           intcon2	equ	0xFF1
 11570                           intcon3	equ	0xFF0
 11571                           postinc0	equ	0xFEE
 11572                           wreg	equ	0xFE8
 11573                           indf1	equ	0xFE7
 11574                           postinc1	equ	0xFE6
 11575                           postdec1	equ	0xFE5
 11576                           fsr1h	equ	0xFE2
 11577                           fsr1l	equ	0xFE1
 11578                           indf2	equ	0xFDF
 11579                           postinc2	equ	0xFDE
 11580                           postdec2	equ	0xFDD
 11581                           fsr2h	equ	0xFDA
 11582                           fsr2l	equ	0xFD9
 11583                           status	equ	0xFD8
 11584                           
 11585 ;; *************** function _MiMAC_SendPacket *****************
 11586 ;; Defined at:
 11587 ;;		line 728 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  transParam      3   43[BANK0 ] struct .
 11590 ;;  MACPayload      2   46[BANK0 ] PTR unsigned char 
 11591 ;;		 -> TxBuffer(35), 
 11592 ;;  MACPayloadLe    1   48[BANK0 ] unsigned char 
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;  i               1   51[BANK0 ] unsigned char 
 11595 ;;  TxIndex         1   50[BANK0 ] unsigned char 
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      unsigned char 
 11598 ;; Registers used:
 11599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : F/0
 11602 ;;		On exit  : F/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11605 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;Total ram usage:        9 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:    9
 11612 ;; This function calls:
 11613 ;;		_TxPacket
 11614 ;; This function is called by:
 11615 ;;		_SendPacket
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text47
 11620  0120BC                     __ptext47:
 11621                           	opt stack 0
 11622  0120BC                     _MiMAC_SendPacket:
 11623                           	opt stack 14
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
 11627                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
 11628                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 35 )
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;incstack = 0
 11632  0120BC  0E23               	movlw	35
 11633  0120BE  6590               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 11634  0120C0  D001               	goto	l11284
 11635  0120C2  0C00               	retlw	0
 11636  0120C4                     l11284:
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;drv_mrf_miwi_89xa.c: 738: }
 11640                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 11641  0120C4  B58B               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 11642  0120C6  D003               	goto	u10990
 11643  0120C8  6B91               	clrf	??_MiMAC_SendPacket& (0+255),b
 11644  0120CA  2B91               	incf	??_MiMAC_SendPacket& (0+255),f,b
 11645  0120CC  D002               	goto	u11008
 11646  0120CE                     u10990:
 11647  0120CE  0100               	movlb	0	; () banked
 11648  0120D0  6B91               	clrf	??_MiMAC_SendPacket& (0+255),b
 11649  0120D2                     u11008:
 11650  0120D2  3B91               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 11651  0120D4  4791               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 11652  0120D6  4791               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 11653  0120D8  518B               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 11654  0120DA  1991               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 11655  0120DC  0BBF               	andlw	-65
 11656  0120DE  1991               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 11657  0120E0  6F8B               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
 11661  0120E2  8F8B               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 11662                           
 11663                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
 11664  0120E4  518B               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 11665  0120E6  0B03               	andlw	3
 11666  0120E8  06E8               	decf	wreg,f,c
 11667  0120EA  E101               	bnz	l139
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;drv_mrf_miwi_89xa.c: 751: {
 11671                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
 11672  0120EC  8F8B               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 11673  0120EE                     l139:
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;drv_mrf_miwi_89xa.c: 753: }
 11677                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
 11678  0120EE  C08B  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 11679                           
 11680                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
 11681  0120F2  C011  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 11682                           
 11683                           ; BSR set to: 0
 11684  0120F6  2A11               	incf	_MACSeq,f,c
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
 11688  0120F8  0E02               	movlw	2
 11689  0120FA  6F92               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
 11693  0120FC  AD8B               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 11694  0120FE  D01A               	goto	l144
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;drv_mrf_miwi_89xa.c: 762: {
 11698                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 11699  012100  6B93               	clrf	MiMAC_SendPacket@i& (0+255),b
 11700  012102  D010               	goto	l11304
 11701  012104                     l11298:
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;drv_mrf_miwi_89xa.c: 764: {
 11705                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 11706  012104  5193               	movf	MiMAC_SendPacket@i& (0+255),w,b
 11707  012106  258C               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 11708  012108  6ED9               	movwf	fsr2l,c
 11709  01210A  0E00               	movlw	0
 11710  01210C  218D               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 11711  01210E  6EDA               	movwf	fsr2h,c
 11712  012110  0E00               	movlw	low _MACTxBuffer
 11713  012112  2592               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 11714  012114  6EE1               	movwf	fsr1l,c
 11715  012116  6AE2               	clrf	fsr1h,c
 11716  012118  0E01               	movlw	high _MACTxBuffer
 11717  01211A  22E2               	addwfc	fsr1h,f,c
 11718  01211C  CFDF FFE7          	movff	indf2,indf1
 11719                           
 11720                           ; BSR set to: 0
 11721  012120  2B92               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 11722                           
 11723                           ; BSR set to: 0
 11724  012122  2B93               	incf	MiMAC_SendPacket@i& (0+255),f,b
 11725  012124                     l11304:
 11726                           
 11727                           ; BSR set to: 0
 11728  012124  300B               	rrcf	_MACInitParams,w,c
 11729  012126  32E8               	rrcf	wreg,f,c
 11730  012128  32E8               	rrcf	wreg,f,c
 11731  01212A  0B0F               	andlw	15
 11732  01212C  6F91               	movwf	??_MiMAC_SendPacket& (0+255),b
 11733  01212E  5191               	movf	??_MiMAC_SendPacket& (0+255),w,b
 11734  012130  5D93               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 11735  012132  E3E8               	bnc	l11298
 11736  012134                     l144:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;drv_mrf_miwi_89xa.c: 771: }
 11740                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
 11741  012134  AF8B               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 11742  012136  D01A               	goto	l145
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;drv_mrf_miwi_89xa.c: 774: {
 11746                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 11747  012138  6B93               	clrf	MiMAC_SendPacket@i& (0+255),b
 11748  01213A  D010               	goto	l11314
 11749  01213C                     l11308:
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;drv_mrf_miwi_89xa.c: 776: {
 11753                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 11754  01213C  5193               	movf	MiMAC_SendPacket@i& (0+255),w,b
 11755  01213E  240C               	addwf	_MACInitParams+1,w,c
 11756  012140  6ED9               	movwf	fsr2l,c
 11757  012142  0E00               	movlw	0
 11758  012144  200D               	addwfc	_MACInitParams+2,w,c
 11759  012146  6EDA               	movwf	fsr2h,c
 11760  012148  0E00               	movlw	low _MACTxBuffer
 11761  01214A  2592               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 11762  01214C  6EE1               	movwf	fsr1l,c
 11763  01214E  6AE2               	clrf	fsr1h,c
 11764  012150  0E01               	movlw	high _MACTxBuffer
 11765  012152  22E2               	addwfc	fsr1h,f,c
 11766  012154  CFDF FFE7          	movff	indf2,indf1
 11767                           
 11768                           ; BSR set to: 0
 11769  012158  2B92               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  01215A  2B93               	incf	MiMAC_SendPacket@i& (0+255),f,b
 11773  01215C                     l11314:
 11774                           
 11775                           ; BSR set to: 0
 11776  01215C  300B               	rrcf	_MACInitParams,w,c
 11777  01215E  32E8               	rrcf	wreg,f,c
 11778  012160  32E8               	rrcf	wreg,f,c
 11779  012162  0B0F               	andlw	15
 11780  012164  6F91               	movwf	??_MiMAC_SendPacket& (0+255),b
 11781  012166  5191               	movf	??_MiMAC_SendPacket& (0+255),w,b
 11782  012168  5D93               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 11783  01216A  E3E8               	bnc	l11308
 11784  01216C                     l145:
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;drv_mrf_miwi_89xa.c: 778: }
 11788                           ;drv_mrf_miwi_89xa.c: 780: }
 11789                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
 11790  01216C  6B93               	clrf	MiMAC_SendPacket@i& (0+255),b
 11791  01216E  D010               	goto	l11322
 11792  012170                     l11316:
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;drv_mrf_miwi_89xa.c: 842: {
 11796                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
 11797  012170  5193               	movf	MiMAC_SendPacket@i& (0+255),w,b
 11798  012172  258E               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 11799  012174  6ED9               	movwf	fsr2l,c
 11800  012176  0E00               	movlw	0
 11801  012178  218F               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 11802  01217A  6EDA               	movwf	fsr2h,c
 11803  01217C  0E00               	movlw	low _MACTxBuffer
 11804  01217E  2592               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 11805  012180  6EE1               	movwf	fsr1l,c
 11806  012182  6AE2               	clrf	fsr1h,c
 11807  012184  0E01               	movlw	high _MACTxBuffer
 11808  012186  22E2               	addwfc	fsr1h,f,c
 11809  012188  CFDF FFE7          	movff	indf2,indf1
 11810                           
 11811                           ; BSR set to: 0
 11812  01218C  2B92               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 11813                           
 11814                           ; BSR set to: 0
 11815  01218E  2B93               	incf	MiMAC_SendPacket@i& (0+255),f,b
 11816  012190                     l11322:
 11817                           
 11818                           ; BSR set to: 0
 11819  012190  5190               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 11820  012192  5D93               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 11821  012194  E3ED               	bnc	l11316
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;drv_mrf_miwi_89xa.c: 844: }
 11825                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 11826  012196  0E00               	movlw	0
 11827  012198  B20B               	btfsc	_MACInitParams,1,c
 11828  01219A  0E01               	movlw	1
 11829  01219C  6F77               	movwf	TxPacket@CCA& (0+255),b
 11830  01219E  5192               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 11831  0121A0  EF3C  F08F         	goto	_TxPacket
 11832  0121A4                     __end_of_MiMAC_SendPacket:
 11833                           	opt stack 0
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           prodh	equ	0xFF4
 11839                           prodl	equ	0xFF3
 11840                           intcon	equ	0xFF2
 11841                           intcon2	equ	0xFF1
 11842                           intcon3	equ	0xFF0
 11843                           postinc0	equ	0xFEE
 11844                           wreg	equ	0xFE8
 11845                           indf1	equ	0xFE7
 11846                           postinc1	equ	0xFE6
 11847                           postdec1	equ	0xFE5
 11848                           fsr1h	equ	0xFE2
 11849                           fsr1l	equ	0xFE1
 11850                           indf2	equ	0xFDF
 11851                           postinc2	equ	0xFDE
 11852                           postdec2	equ	0xFDD
 11853                           fsr2h	equ	0xFDA
 11854                           fsr2l	equ	0xFD9
 11855                           status	equ	0xFD8
 11856                           
 11857 ;; *************** function _TxPacket *****************
 11858 ;; Defined at:
 11859 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 11860 ;; Parameters:    Size  Location     Type
 11861 ;;  TxPacketLen     1    wreg     unsigned char 
 11862 ;;  CCA             1   23[BANK0 ] unsigned char 
 11863 ;; Auto vars:     Size  Location     Type
 11864 ;;  TxPacketLen     1   40[BANK0 ] unsigned char 
 11865 ;;  allowedTxFai    1   38[BANK0 ] unsigned char 
 11866 ;;  t2              4   32[BANK0 ] struct _MIWI_TICK
 11867 ;;  t1              4   28[BANK0 ] struct _MIWI_TICK
 11868 ;;  i               1   42[BANK0 ] unsigned char 
 11869 ;;  status          1   41[BANK0 ] unsigned char 
 11870 ;;  rssival         1   39[BANK0 ] unsigned char 
 11871 ;;  reTry           1   37[BANK0 ] unsigned char 
 11872 ;;  CCARetries      1   36[BANK0 ] unsigned char 
 11873 ;; Return value:  Size  Location     Type
 11874 ;;                  1    wreg      unsigned char 
 11875 ;; Registers used:
 11876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11877 ;; Tracked objects:
 11878 ;;		On entry : F/0
 11879 ;;		On exit  : F/0
 11880 ;;		Unchanged: 0/0
 11881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11882 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11883 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;Total ram usage:       20 bytes
 11887 ;; Hardware stack levels used:    1
 11888 ;; Hardware stack levels required when called:    8
 11889 ;; This function calls:
 11890 ;;		_DELAY_10us
 11891 ;;		_MiWi_TickGet
 11892 ;;		_RegisterRead
 11893 ;;		_RegisterSet
 11894 ;;		_SetRFMode
 11895 ;;		_WriteFIFO
 11896 ;; This function is called by:
 11897 ;;		_MiMAC_SendPacket
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text48
 11902  011E78                     __ptext48:
 11903                           	opt stack 0
 11904  011E78                     _TxPacket:
 11905                           	opt stack 14
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;incstack = 0
 11909                           ;TxPacket@TxPacketLen stored from wreg
 11910  011E78  6F88               	movwf	TxPacket@TxPacketLen& (0+255),b
 11911                           
 11912                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 11913                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 11914                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 11915                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 11916                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 11917                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 11918  011E7A  0E03               	movlw	3
 11919  011E7C  0100               	movlb	0	; () banked
 11920  011E7E  6F85               	movwf	TxPacket@reTry& (0+255),b
 11921                           
 11922                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 11923  011E80  D088               	goto	l11272
 11924  011E82                     l82:
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;drv_mrf_miwi_89xa.c: 305: {
 11928                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 11929                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 11930  011E82  6B86               	clrf	TxPacket@allowedTxFailure& (0+255),b
 11931  011E84                     l83:
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 11935  011E84  6BE3               	clrf	_hasAck& (0+255),b	;volatile
 11936                           
 11937                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 11938  011E86  6B84               	clrf	TxPacket@CCARetries& (0+255),b
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 11942  011E88  5177               	movf	TxPacket@CCA& (0+255),w,b
 11943  011E8A  E019               	bz	l84
 11944  011E8C                     l11212:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 11948  011E8C  0E28               	movlw	40
 11949  011E8E  EC70  F099         	call	_RegisterRead
 11950  011E92  6F87               	movwf	TxPacket@rssival& (0+255),b
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 11954  011E94  90D8               	bcf	status,0,c
 11955  011E96  3387               	rrcf	TxPacket@rssival& (0+255),f,b
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 11959  011E98  0E41               	movlw	65
 11960  011E9A  6587               	cpfsgt	TxPacket@rssival& (0+255),b
 11961  011E9C  D010               	goto	l84
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;drv_mrf_miwi_89xa.c: 326: {
 11965                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 11966  011E9E  2B84               	incf	TxPacket@CCARetries& (0+255),f,b
 11967  011EA0  0584               	decf	TxPacket@CCARetries& (0+255),w,b
 11968  011EA2  6F78               	movwf	??_TxPacket& (0+255),b
 11969  011EA4  0E04               	movlw	4
 11970  011EA6  6578               	cpfsgt	??_TxPacket& (0+255),b
 11971  011EA8  D001               	goto	l11224
 11972  011EAA  0C00               	retlw	0
 11973  011EAC                     l11224:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;drv_mrf_miwi_89xa.c: 331: }
 11977                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 11978  011EAC  0E01               	movlw	1
 11979  011EAE  6F6D               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
 11980  011EB0  0E00               	movlw	0
 11981  011EB2  6B6E               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
 11982  011EB4  6B6F               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
 11983  011EB6  6B70               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
 11984  011EB8  EC51  F09B         	call	_DELAY_10us	;wreg free
 11985                           
 11986                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 11987  011EBC  D7E7               	goto	l11212
 11988  011EBE                     l84:
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;drv_mrf_miwi_89xa.c: 334: }
 11992                           ;drv_mrf_miwi_89xa.c: 335: }
 11993                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
 11994  011EBE  9AF0               	bcf	intcon3,5,c	;volatile
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 11998  011EC0  0E20               	movlw	32
 11999  011EC2  ECFD  F095         	call	_SetRFMode
 12000                           
 12001                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 12002  011EC6  0E1A               	movlw	26
 12003  011EC8  0100               	movlb	0	; () banked
 12004  011ECA  6F6F               	movwf	(RegisterSet@setting+1)& (0+255),b
 12005  011ECC  0EC9               	movlw	201
 12006  011ECE  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12007  011ED0  ECFC  F099         	call	_RegisterSet	;wreg free
 12008                           
 12009                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 12010  011ED4  0100               	movlb	0	; () banked
 12011  011ED6  5188               	movf	TxPacket@TxPacketLen& (0+255),w,b
 12012  011ED8  EC62  F09A         	call	_WriteFIFO
 12013                           
 12014                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 12015  011EDC  0100               	movlb	0	; () banked
 12016  011EDE  6B8A               	clrf	TxPacket@i& (0+255),b
 12017  011EE0  D00B               	goto	l11238
 12018  011EE2                     l11234:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;drv_mrf_miwi_89xa.c: 347: {
 12022                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 12023  011EE2  0E00               	movlw	low _MACTxBuffer
 12024  011EE4  258A               	addwf	TxPacket@i& (0+255),w,b
 12025  011EE6  6ED9               	movwf	fsr2l,c
 12026  011EE8  6ADA               	clrf	fsr2h,c
 12027  011EEA  0E01               	movlw	high _MACTxBuffer
 12028  011EEC  22DA               	addwfc	fsr2h,f,c
 12029  011EEE  50DF               	movf	indf2,w,c
 12030  011EF0  EC62  F09A         	call	_WriteFIFO
 12031  011EF4  0100               	movlb	0	; () banked
 12032  011EF6  2B8A               	incf	TxPacket@i& (0+255),f,b
 12033  011EF8                     l11238:
 12034                           
 12035                           ; BSR set to: 0
 12036  011EF8  5188               	movf	TxPacket@TxPacketLen& (0+255),w,b
 12037  011EFA  5D8A               	subwf	TxPacket@i& (0+255),w,b
 12038  011EFC  E3F2               	bnc	l11234
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;drv_mrf_miwi_89xa.c: 349: }
 12042                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 12043  011EFE  0E80               	movlw	128
 12044  011F00  ECFD  F095         	call	_SetRFMode
 12045                           
 12046                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
 12047  011F04  8AF0               	bsf	intcon3,5,c	;volatile
 12048  011F06                     l11244:
 12049  011F06  0100               	movlb	0	; () banked
 12050  011F08  51DE               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 12051  011F0A  E102               	bnz	l96
 12052                           
 12053                           ; BSR set to: 0
 12054  011F0C  A4F0               	btfss	intcon3,2,c	;volatile
 12055  011F0E  D7FB               	goto	l11244
 12056  011F10                     l96:
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;drv_mrf_miwi_89xa.c: 358: };
 12060                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 12061  011F10  6BDE               	clrf	_IRQ1_Received& (0+255),b	;volatile
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 12065  011F12  0E20               	movlw	32
 12066  011F14  ECFD  F095         	call	_SetRFMode
 12067                           
 12068                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 12069  011F18  0E60               	movlw	96
 12070  011F1A  ECFD  F095         	call	_SetRFMode
 12071                           
 12072                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 12073  011F1E  0101               	movlb	1	; () banked
 12074  011F20  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 12075  011F22  D00E               	goto	l11258
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;drv_mrf_miwi_89xa.c: 368: {
 12079                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 12080  011F24  C101  F019         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 12081                           
 12082                           ; BSR set to: 1
 12083                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 12084  011F28  EC4C  F097         	call	_MiWi_TickGet	;wreg free
 12085  011F2C  C06D  F07C         	movff	?_MiWi_TickGet,TxPacket@t1
 12086  011F30  C06E  F07D         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 12087  011F34  C06F  F07E         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 12088  011F38  C070  F07F         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 12089  011F3C                     l11256:
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;drv_mrf_miwi_89xa.c: 372: {
 12093                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 12094  011F3C  51E3               	movf	_hasAck& (0+255),w,b	;volatile
 12095  011F3E  E004               	bz	l11260
 12096  011F40                     l11258:
 12097                           
 12098                           ;drv_mrf_miwi_89xa.c: 374: {
 12099                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 12100  011F40  0E01               	movlw	1
 12101  011F42  0100               	movlb	0	; () banked
 12102  011F44  6F89               	movwf	TxPacket@status& (0+255),b
 12103                           
 12104                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 12105  011F46  D02A               	goto	l11274
 12106  011F48                     l11260:
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;drv_mrf_miwi_89xa.c: 377: }
 12110                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 12111  011F48  EC4C  F097         	call	_MiWi_TickGet	;wreg free
 12112  011F4C  C06D  F080         	movff	?_MiWi_TickGet,TxPacket@t2
 12113  011F50  C06E  F081         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 12114  011F54  C06F  F082         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 12115  011F58  C070  F083         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 12119  011F5C  517C               	movf	TxPacket@t1& (0+255),w,b
 12120  011F5E  5D80               	subwf	TxPacket@t2& (0+255),w,b
 12121  011F60  6F78               	movwf	??_TxPacket& (0+255),b
 12122  011F62  517D               	movf	(TxPacket@t1+1)& (0+255),w,b
 12123  011F64  5981               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 12124  011F66  6F79               	movwf	(??_TxPacket+1)& (0+255),b
 12125  011F68  517E               	movf	(TxPacket@t1+2)& (0+255),w,b
 12126  011F6A  5982               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 12127  011F6C  6F7A               	movwf	(??_TxPacket+2)& (0+255),b
 12128  011F6E  517F               	movf	(TxPacket@t1+3)& (0+255),w,b
 12129  011F70  5983               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 12130  011F72  6F7B               	movwf	(??_TxPacket+3)& (0+255),b
 12131  011F74  517B               	movf	(??_TxPacket+3)& (0+255),w,b
 12132  011F76  117A               	iorwf	(??_TxPacket+2)& (0+255),w,b
 12133  011F78  E105               	bnz	u10950
 12134  011F7A  0E0A               	movlw	10
 12135  011F7C  5D78               	subwf	??_TxPacket& (0+255),w,b
 12136  011F7E  0E3D               	movlw	61
 12137  011F80  5979               	subwfb	(??_TxPacket+1)& (0+255),w,b
 12138  011F82  E3DC               	bnc	l11256
 12139  011F84                     u10950:
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;drv_mrf_miwi_89xa.c: 382: }
 12143                           ;drv_mrf_miwi_89xa.c: 383: }
 12144                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 12145  011F84  2B86               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 12146  011F86  0586               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 12147  011F88  6F78               	movwf	??_TxPacket& (0+255),b
 12148  011F8A  0E04               	movlw	4
 12149  011F8C  6178               	cpfslt	??_TxPacket& (0+255),b
 12150  011F8E  D001               	goto	l11272
 12151  011F90  D779               	goto	l83
 12152  011F92                     l11272:
 12153                           
 12154                           ; BSR set to: 0
 12155  011F92  0785               	decf	TxPacket@reTry& (0+255),f,b
 12156  011F94  2985               	incf	TxPacket@reTry& (0+255),w,b
 12157  011F96  E001 D774          	bnz	l82
 12158                           
 12159                           ; BSR set to: 0
 12160                           ;drv_mrf_miwi_89xa.c: 394: }
 12161                           ;drv_mrf_miwi_89xa.c: 395: }
 12162                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 12163  011F9A  6B89               	clrf	TxPacket@status& (0+255),b
 12164  011F9C                     l11274:
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;drv_mrf_miwi_89xa.c: 399: return status;
 12168  011F9C  5189               	movf	TxPacket@status& (0+255),w,b
 12169                           
 12170                           ; BSR set to: 0
 12171  011F9E  0012               	return		;funcret
 12172  011FA0                     __end_of_TxPacket:
 12173                           	opt stack 0
 12174                           tblptru	equ	0xFF8
 12175                           tblptrh	equ	0xFF7
 12176                           tblptrl	equ	0xFF6
 12177                           tablat	equ	0xFF5
 12178                           prodh	equ	0xFF4
 12179                           prodl	equ	0xFF3
 12180                           intcon	equ	0xFF2
 12181                           intcon2	equ	0xFF1
 12182                           intcon3	equ	0xFF0
 12183                           postinc0	equ	0xFEE
 12184                           wreg	equ	0xFE8
 12185                           indf1	equ	0xFE7
 12186                           postinc1	equ	0xFE6
 12187                           postdec1	equ	0xFE5
 12188                           fsr1h	equ	0xFE2
 12189                           fsr1l	equ	0xFE1
 12190                           indf2	equ	0xFDF
 12191                           postinc2	equ	0xFDE
 12192                           postdec2	equ	0xFDD
 12193                           fsr2h	equ	0xFDA
 12194                           fsr2l	equ	0xFD9
 12195                           status	equ	0xFD8
 12196                           
 12197 ;; *************** function _WriteFIFO *****************
 12198 ;; Defined at:
 12199 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  Data            1    wreg     unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  Data            1   14[BANK0 ] unsigned char 
 12204 ;;  IRQ1select      1   15[BANK0 ] unsigned char 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : F/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;Total ram usage:        2 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    6
 12221 ;; This function calls:
 12222 ;;		_SPIPut
 12223 ;; This function is called by:
 12224 ;;		_TxPacket
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text49
 12229  0134C4                     __ptext49:
 12230                           	opt stack 0
 12231  0134C4                     _WriteFIFO:
 12232                           	opt stack 15
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;incstack = 0
 12236                           ;WriteFIFO@Data stored from wreg
 12237  0134C4  6F6E               	movwf	WriteFIFO@Data& (0+255),b
 12238                           
 12239                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
 12240  0134C6  0E00               	movlw	0
 12241  0134C8  BAF0               	btfsc	intcon3,5,c	;volatile
 12242  0134CA  0E01               	movlw	1
 12243  0134CC  0100               	movlb	0	; () banked
 12244  0134CE  6F6F               	movwf	WriteFIFO@IRQ1select& (0+255),b
 12245                           
 12246                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
 12247  0134D0  9AF0               	bcf	intcon3,5,c	;volatile
 12248                           
 12249                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 12250  0134D2  948B               	bcf	3979,2,c	;volatile
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 12254  0134D4  516E               	movf	WriteFIFO@Data& (0+255),w,b
 12255  0134D6  ECEB  F09A         	call	_SPIPut
 12256                           
 12257                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 12258  0134DA  848B               	bsf	3979,2,c	;volatile
 12259                           
 12260                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
 12261  0134DC  0100               	movlb	0	; () banked
 12262  0134DE  B16F               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 12263  0134E0  D002               	bra	u10835
 12264  0134E2  9AF0               	bcf	intcon3,5,c	;volatile
 12265  0134E4  D001               	bra	u10836
 12266  0134E6                     u10835:
 12267  0134E6  8AF0               	bsf	intcon3,5,c	;volatile
 12268  0134E8                     u10836:
 12269  0134E8  0012               	return		;funcret
 12270  0134EA                     __end_of_WriteFIFO:
 12271                           	opt stack 0
 12272                           tblptru	equ	0xFF8
 12273                           tblptrh	equ	0xFF7
 12274                           tblptrl	equ	0xFF6
 12275                           tablat	equ	0xFF5
 12276                           prodh	equ	0xFF4
 12277                           prodl	equ	0xFF3
 12278                           intcon	equ	0xFF2
 12279                           intcon2	equ	0xFF1
 12280                           intcon3	equ	0xFF0
 12281                           postinc0	equ	0xFEE
 12282                           wreg	equ	0xFE8
 12283                           indf1	equ	0xFE7
 12284                           postinc1	equ	0xFE6
 12285                           postdec1	equ	0xFE5
 12286                           fsr1h	equ	0xFE2
 12287                           fsr1l	equ	0xFE1
 12288                           indf2	equ	0xFDF
 12289                           postinc2	equ	0xFDE
 12290                           postdec2	equ	0xFDD
 12291                           fsr2h	equ	0xFDA
 12292                           fsr2l	equ	0xFD9
 12293                           status	equ	0xFD8
 12294                           
 12295 ;; *************** function _SetRFMode *****************
 12296 ;; Defined at:
 12297 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  mode            1    wreg     unsigned char 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  mode            1   17[BANK0 ] unsigned char 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;Total ram usage:        1 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    7
 12318 ;; This function calls:
 12319 ;;		_RegisterSet
 12320 ;; This function is called by:
 12321 ;;		_TxPacket
 12322 ;;		_MiMAC_SetChannel
 12323 ;;		_MiMAC_Init
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text50
 12328  012BFA                     __ptext50:
 12329                           	opt stack 0
 12330  012BFA                     _SetRFMode:
 12331                           	opt stack 14
 12332                           
 12333                           ;incstack = 0
 12334                           ;SetRFMode@mode stored from wreg
 12335  012BFA  0100               	movlb	0	; () banked
 12336  012BFC  6F71               	movwf	SetRFMode@mode& (0+255),b
 12337                           
 12338                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 12339  012BFE  D027               	goto	l11176
 12340  012C00                     l11154:
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 12344  012C00  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
 12345  012C02  0E8E               	movlw	142
 12346  012C04  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12347  012C06  ECFC  F099         	call	_RegisterSet	;wreg free
 12348                           
 12349                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 12350  012C0A  0E80               	movlw	128
 12351  012C0C  6E14               	movwf	_RF_Mode,c
 12352                           
 12353                           ;drv_mrf_miwi_89xa.c: 673: break;
 12354  012C0E  0C80               	retlw	128
 12355  012C10                     l11158:
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 12359  012C10  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
 12360  012C12  0E6E               	movlw	110
 12361  012C14  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12362  012C16  ECFC  F099         	call	_RegisterSet	;wreg free
 12363                           
 12364                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 12365  012C1A  0E60               	movlw	96
 12366  012C1C  6E14               	movwf	_RF_Mode,c
 12367                           
 12368                           ;drv_mrf_miwi_89xa.c: 677: break;
 12369  012C1E  0C60               	retlw	96
 12370  012C20                     l11162:
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 12374  012C20  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
 12375  012C22  0E4E               	movlw	78
 12376  012C24  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12377  012C26  ECFC  F099         	call	_RegisterSet	;wreg free
 12378                           
 12379                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 12380  012C2A  0E40               	movlw	64
 12381  012C2C  6E14               	movwf	_RF_Mode,c
 12382                           
 12383                           ;drv_mrf_miwi_89xa.c: 681: break;
 12384  012C2E  0C40               	retlw	64
 12385  012C30                     l11166:
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 12389  012C30  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
 12390  012C32  0E2E               	movlw	46
 12391  012C34  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12392  012C36  ECFC  F099         	call	_RegisterSet	;wreg free
 12393                           
 12394                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 12395  012C3A  0E20               	movlw	32
 12396  012C3C  6E14               	movwf	_RF_Mode,c
 12397                           
 12398                           ;drv_mrf_miwi_89xa.c: 685: break;
 12399  012C3E  0C20               	retlw	32
 12400  012C40                     l11170:
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 12404  012C40  6B6F               	clrf	(RegisterSet@setting+1)& (0+255),b
 12405  012C42  0E0E               	movlw	14
 12406  012C44  6F6E               	movwf	RegisterSet@setting& (0+255),b
 12407  012C46  ECFC  F099         	call	_RegisterSet	;wreg free
 12408                           
 12409                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 12410  012C4A  6A14               	clrf	_RF_Mode,c
 12411                           
 12412                           ;drv_mrf_miwi_89xa.c: 689: break;
 12413  012C4C  0012               	return	
 12414  012C4E                     l11176:
 12415  012C4E  0100               	movlb	0	; () banked
 12416  012C50  5171               	movf	SetRFMode@mode& (0+255),w,b
 12417                           
 12418                           ; Switch size 1, requested type "speed"
 12419                           ; Number of cases is 5, Range of values is 0 to 128
 12420                           ; switch strategies available:
 12421                           ; Name         Instructions Cycles
 12422                           ; simple_byte           16     9 (average)
 12423                           ;	Chosen strategy is simple_byte
 12424  012C52  E0F6               	bz	l11170
 12425  012C54  0A20               	xorlw	32	; case 32
 12426  012C56  E0EC               	bz	l11166
 12427  012C58  0A60               	xorlw	96	; case 64
 12428  012C5A  E0E2               	bz	l11162
 12429  012C5C  0A20               	xorlw	32	; case 96
 12430  012C5E  E0D8               	bz	l11158
 12431  012C60  0AE0               	xorlw	224	; case 128
 12432  012C62  E0CE               	bz	l11154
 12433  012C64  0012               	return		;funcret
 12434  012C66                     __end_of_SetRFMode:
 12435                           	opt stack 0
 12436                           tblptru	equ	0xFF8
 12437                           tblptrh	equ	0xFF7
 12438                           tblptrl	equ	0xFF6
 12439                           tablat	equ	0xFF5
 12440                           prodh	equ	0xFF4
 12441                           prodl	equ	0xFF3
 12442                           intcon	equ	0xFF2
 12443                           intcon2	equ	0xFF1
 12444                           intcon3	equ	0xFF0
 12445                           postinc0	equ	0xFEE
 12446                           wreg	equ	0xFE8
 12447                           indf1	equ	0xFE7
 12448                           postinc1	equ	0xFE6
 12449                           postdec1	equ	0xFE5
 12450                           fsr1h	equ	0xFE2
 12451                           fsr1l	equ	0xFE1
 12452                           indf2	equ	0xFDF
 12453                           postinc2	equ	0xFDE
 12454                           postdec2	equ	0xFDD
 12455                           fsr2h	equ	0xFDA
 12456                           fsr2l	equ	0xFD9
 12457                           status	equ	0xFD8
 12458                           
 12459 ;; *************** function _RegisterSet *****************
 12460 ;; Defined at:
 12461 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  setting         2   14[BANK0 ] unsigned int 
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  IRQ1select      1   16[BANK0 ] unsigned char 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      void 
 12468 ;; Registers used:
 12469 ;;		wreg, status,2, cstack
 12470 ;; Tracked objects:
 12471 ;;		On entry : F/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;Total ram usage:        3 bytes
 12480 ;; Hardware stack levels used:    1
 12481 ;; Hardware stack levels required when called:    6
 12482 ;; This function calls:
 12483 ;;		_SPIPut
 12484 ;; This function is called by:
 12485 ;;		_TxPacket
 12486 ;;		_MiMAC_SetChannel
 12487 ;;		_MiMAC_Init
 12488 ;;		_SetRFMode
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text51
 12493  0133F8                     __ptext51:
 12494                           	opt stack 0
 12495  0133F8                     _RegisterSet:
 12496                           	opt stack 14
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
 12500                           
 12501                           ;incstack = 0
 12502  0133F8  0E00               	movlw	0
 12503  0133FA  BAF0               	btfsc	intcon3,5,c	;volatile
 12504  0133FC  0E01               	movlw	1
 12505  0133FE  6F70               	movwf	RegisterSet@IRQ1select& (0+255),b
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
 12509  013400  9AF0               	bcf	intcon3,5,c	;volatile
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 12513  013402  968D               	bcf	3981,3,c	;volatile
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 12517  013404  516F               	movf	(RegisterSet@setting+1)& (0+255),w,b
 12518  013406  ECEB  F09A         	call	_SPIPut
 12519                           
 12520                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 12521  01340A  0100               	movlb	0	; () banked
 12522  01340C  516E               	movf	RegisterSet@setting& (0+255),w,b
 12523  01340E  ECEB  F09A         	call	_SPIPut
 12524                           
 12525                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 12526  013412  868D               	bsf	3981,3,c	;volatile
 12527                           
 12528                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
 12529  013414  0100               	movlb	0	; () banked
 12530  013416  B170               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 12531  013418  D002               	bra	u10815
 12532  01341A  9AF0               	bcf	intcon3,5,c	;volatile
 12533  01341C  D001               	bra	u10816
 12534  01341E                     u10815:
 12535  01341E  8AF0               	bsf	intcon3,5,c	;volatile
 12536  013420                     u10816:
 12537  013420  0012               	return		;funcret
 12538  013422                     __end_of_RegisterSet:
 12539                           	opt stack 0
 12540                           tblptru	equ	0xFF8
 12541                           tblptrh	equ	0xFF7
 12542                           tblptrl	equ	0xFF6
 12543                           tablat	equ	0xFF5
 12544                           prodh	equ	0xFF4
 12545                           prodl	equ	0xFF3
 12546                           intcon	equ	0xFF2
 12547                           intcon2	equ	0xFF1
 12548                           intcon3	equ	0xFF0
 12549                           postinc0	equ	0xFEE
 12550                           wreg	equ	0xFE8
 12551                           indf1	equ	0xFE7
 12552                           postinc1	equ	0xFE6
 12553                           postdec1	equ	0xFE5
 12554                           fsr1h	equ	0xFE2
 12555                           fsr1l	equ	0xFE1
 12556                           indf2	equ	0xFDF
 12557                           postinc2	equ	0xFDE
 12558                           postdec2	equ	0xFDD
 12559                           fsr2h	equ	0xFDA
 12560                           fsr2l	equ	0xFD9
 12561                           status	equ	0xFD8
 12562                           
 12563 ;; *************** function _RegisterRead *****************
 12564 ;; Defined at:
 12565 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  address         1    wreg     unsigned char 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;  address         1   14[BANK0 ] unsigned char 
 12570 ;;  IRQ1select      1   16[BANK0 ] unsigned char 
 12571 ;;  value           1   15[BANK0 ] unsigned char 
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  1    wreg      unsigned char 
 12574 ;; Registers used:
 12575 ;;		wreg, status,2, status,0, cstack
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : F/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;Total ram usage:        3 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; Hardware stack levels required when called:    7
 12588 ;; This function calls:
 12589 ;;		_SPIGet
 12590 ;;		_SPIPut
 12591 ;; This function is called by:
 12592 ;;		_TxPacket
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text52
 12597  0132E0                     __ptext52:
 12598                           	opt stack 0
 12599  0132E0                     _RegisterRead:
 12600                           	opt stack 14
 12601                           
 12602                           ;incstack = 0
 12603                           ;RegisterRead@address stored from wreg
 12604  0132E0  0100               	movlb	0	; () banked
 12605  0132E2  6F6E               	movwf	RegisterRead@address& (0+255),b
 12606                           
 12607                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 12608                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
 12609  0132E4  0E00               	movlw	0
 12610  0132E6  BAF0               	btfsc	intcon3,5,c	;volatile
 12611  0132E8  0E01               	movlw	1
 12612  0132EA  6F70               	movwf	RegisterRead@IRQ1select& (0+255),b
 12613                           
 12614                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
 12615  0132EC  9AF0               	bcf	intcon3,5,c	;volatile
 12616                           
 12617                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 12618  0132EE  968D               	bcf	3981,3,c	;volatile
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 12622  0132F0  8D6E               	bsf	RegisterRead@address& (0+255),6,b
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 12626  0132F2  516E               	movf	RegisterRead@address& (0+255),w,b
 12627  0132F4  ECEB  F09A         	call	_SPIPut
 12628                           
 12629                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 12630  0132F8  EC37  F09B         	call	_SPIGet	;wreg free
 12631  0132FC  0100               	movlb	0	; () banked
 12632  0132FE  6F6F               	movwf	RegisterRead@value& (0+255),b
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 12636  013300  868D               	bsf	3981,3,c	;volatile
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
 12640  013302  B170               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 12641  013304  D002               	bra	u10825
 12642  013306  9AF0               	bcf	intcon3,5,c	;volatile
 12643  013308  D001               	bra	u10826
 12644  01330A                     u10825:
 12645  01330A  8AF0               	bsf	intcon3,5,c	;volatile
 12646  01330C                     u10826:
 12647                           
 12648                           ;drv_mrf_miwi_89xa.c: 222: return value;
 12649  01330C  0100               	movlb	0	; () banked
 12650  01330E  516F               	movf	RegisterRead@value& (0+255),w,b
 12651                           
 12652                           ; BSR set to: 0
 12653  013310  0012               	return		;funcret
 12654  013312                     __end_of_RegisterRead:
 12655                           	opt stack 0
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           intcon2	equ	0xFF1
 12664                           intcon3	equ	0xFF0
 12665                           postinc0	equ	0xFEE
 12666                           wreg	equ	0xFE8
 12667                           indf1	equ	0xFE7
 12668                           postinc1	equ	0xFE6
 12669                           postdec1	equ	0xFE5
 12670                           fsr1h	equ	0xFE2
 12671                           fsr1l	equ	0xFE1
 12672                           indf2	equ	0xFDF
 12673                           postinc2	equ	0xFDE
 12674                           postdec2	equ	0xFDD
 12675                           fsr2h	equ	0xFDA
 12676                           fsr2l	equ	0xFD9
 12677                           status	equ	0xFD8
 12678                           
 12679 ;; *************** function _MiWi_TickGet *****************
 12680 ;; Defined at:
 12681 ;;		line 106 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  currentTime     4   19[BANK0 ] struct _MIWI_TICK
 12686 ;;  IntFlag1        1   18[BANK0 ] unsigned char 
 12687 ;;  IntFlag2        1   17[BANK0 ] unsigned char 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  4   13[BANK0 ] struct _MIWI_TICK
 12690 ;; Registers used:
 12691 ;;		wreg, status,2, status,0
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : F/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12698 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12700 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12701 ;;Total ram usage:       10 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:    5
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		_TxPacket
 12708 ;;		_MiMAC_ReceivedPacket
 12709 ;;		_P2PTasks
 12710 ;;		_MiApp_UnicastStar
 12711 ;;		_MiApp_StartConnection
 12712 ;;		_MiApp_EstablishConnection
 12713 ;;		_ButtonPressed
 12714 ;;		_run_star_demo
 12715 ;;		_freezer_feature
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text53
 12720  012E98                     __ptext53:
 12721                           	opt stack 0
 12722  012E98                     _MiWi_TickGet:
 12723                           	opt stack 24
 12724                           
 12725                           ;symbol.c: 108: MIWI_TICK currentTime;
 12726                           ;symbol.c: 109: uint8_t IntFlag1;
 12727                           ;symbol.c: 110: uint8_t IntFlag2;
 12728                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;incstack = 0
 12732  012E98  0100               	movlb	0	; () banked
 12733  012E9A  6B75               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 12734                           
 12735                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 12736  012E9C  6B76               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 12737                           
 12738                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 12739  012E9E  909D               	bcf	3997,0,c	;volatile
 12740  012EA0                     l11180:
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;symbol.c: 120: {
 12744                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 12745  012EA0  0E00               	movlw	0
 12746  012EA2  B09E               	btfsc	3998,0,c	;volatile
 12747  012EA4  0E01               	movlw	1
 12748  012EA6  6F72               	movwf	MiWi_TickGet@IntFlag1& (0+255),b
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 12752  012EA8  CFCE F073          	movff	4046,MiWi_TickGet@currentTime	;volatile
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 12756  012EAC  CFCF F074          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 12757                           
 12758                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 12759  012EB0  0E00               	movlw	0
 12760  012EB2  B09E               	btfsc	3998,0,c	;volatile
 12761  012EB4  0E01               	movlw	1
 12762  012EB6  6F71               	movwf	MiWi_TickGet@IntFlag2& (0+255),b
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 12766  012EB8  5171               	movf	MiWi_TickGet@IntFlag2& (0+255),w,b
 12767  012EBA  1972               	xorwf	MiWi_TickGet@IntFlag1& (0+255),w,b
 12768  012EBC  E1F1               	bnz	l11180
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;symbol.c: 127: if( IntFlag1 > 0 )
 12772  012EBE  5172               	movf	MiWi_TickGet@IntFlag1& (0+255),w,b
 12773  012EC0  E005               	bz	l11198
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;symbol.c: 128: {
 12777                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 12778  012EC2  909E               	bcf	3998,0,c	;volatile
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;symbol.c: 130: timerExtension1++;
 12782  012EC4  2A22               	incf	_timerExtension1,f,c	;volatile
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;symbol.c: 131: if(timerExtension1 == 0)
 12786  012EC6  5022               	movf	_timerExtension1,w,c	;volatile
 12787  012EC8  E101               	bnz	l11198
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;symbol.c: 132: {
 12791                           ;symbol.c: 133: timerExtension2++;
 12792  012ECA  2BE5               	incf	_timerExtension2& (0+255),f,b	;volatile
 12793  012ECC                     l11198:
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;symbol.c: 134: }
 12797                           ;symbol.c: 135: }
 12798                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 12799  012ECC  5022               	movf	_timerExtension1,w,c	;volatile
 12800  012ECE  2775               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 12804  012ED0  51E5               	movf	_timerExtension2& (0+255),w,b	;volatile
 12805  012ED2  2776               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 12809  012ED4  809D               	bsf	3997,0,c	;volatile
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;symbol.c: 143: return currentTime;
 12813  012ED6  C073  F06D         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 12814  012EDA  C074  F06E         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 12815  012EDE  C075  F06F         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 12816  012EE2  C076  F070         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 12817                           
 12818                           ; BSR set to: 0
 12819  012EE6  0012               	return		;funcret
 12820  012EE8                     __end_of_MiWi_TickGet:
 12821                           	opt stack 0
 12822                           tblptru	equ	0xFF8
 12823                           tblptrh	equ	0xFF7
 12824                           tblptrl	equ	0xFF6
 12825                           tablat	equ	0xFF5
 12826                           prodh	equ	0xFF4
 12827                           prodl	equ	0xFF3
 12828                           intcon	equ	0xFF2
 12829                           intcon2	equ	0xFF1
 12830                           intcon3	equ	0xFF0
 12831                           postinc0	equ	0xFEE
 12832                           wreg	equ	0xFE8
 12833                           indf1	equ	0xFE7
 12834                           postinc1	equ	0xFE6
 12835                           postdec1	equ	0xFE5
 12836                           fsr1h	equ	0xFE2
 12837                           fsr1l	equ	0xFE1
 12838                           indf2	equ	0xFDF
 12839                           postinc2	equ	0xFDE
 12840                           postdec2	equ	0xFDD
 12841                           fsr2h	equ	0xFDA
 12842                           fsr2l	equ	0xFD9
 12843                           status	equ	0xFD8
 12844                           
 12845 ;; *************** function _DELAY_10us *****************
 12846 ;; Defined at:
 12847 ;;		line 46 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;  tenMicroSeco    4   13[BANK0 ] unsigned long 
 12850 ;; Auto vars:     Size  Location     Type
 12851 ;;  cyclesRequir    4   17[BANK0 ] volatile long 
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1    wreg      void 
 12854 ;; Registers used:
 12855 ;;		None
 12856 ;; Tracked objects:
 12857 ;;		On entry : F/0
 12858 ;;		On exit  : F/0
 12859 ;;		Unchanged: F/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12865 ;;Total ram usage:        8 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; Hardware stack levels required when called:    5
 12868 ;; This function calls:
 12869 ;;		Nothing
 12870 ;; This function is called by:
 12871 ;;		_TxPacket
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text54
 12876  0136A2                     __ptext54:
 12877                           	opt stack 0
 12878  0136A2                     _DELAY_10us:
 12879                           	opt stack 16
 12880                           
 12881                           ; BSR set to: 0
 12882                           
 12883                           ; BSR set to: 0
 12884                           ;delay.c: 52: {
 12885                           ;delay.c: 58: }
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;incstack = 0
 12889  0136A2  0012               	return		;funcret
 12890  0136A4                     __end_of_DELAY_10us:
 12891                           	opt stack 0
 12892                           tblptru	equ	0xFF8
 12893                           tblptrh	equ	0xFF7
 12894                           tblptrl	equ	0xFF6
 12895                           tablat	equ	0xFF5
 12896                           prodh	equ	0xFF4
 12897                           prodl	equ	0xFF3
 12898                           intcon	equ	0xFF2
 12899                           intcon2	equ	0xFF1
 12900                           intcon3	equ	0xFF0
 12901                           postinc0	equ	0xFEE
 12902                           wreg	equ	0xFE8
 12903                           indf1	equ	0xFE7
 12904                           postinc1	equ	0xFE6
 12905                           postdec1	equ	0xFE5
 12906                           fsr1h	equ	0xFE2
 12907                           fsr1l	equ	0xFE1
 12908                           indf2	equ	0xFDF
 12909                           postinc2	equ	0xFDE
 12910                           postdec2	equ	0xFDD
 12911                           fsr2h	equ	0xFDA
 12912                           fsr2l	equ	0xFD9
 12913                           status	equ	0xFD8
 12914                           
 12915 ;; *************** function _AddConnection *****************
 12916 ;; Defined at:
 12917 ;;		line 2556 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;  i               1   29[BANK0 ] unsigned char 
 12922 ;;  connectionSl    1   28[BANK0 ] unsigned char 
 12923 ;;  status          1   27[BANK0 ] unsigned char 
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  1    wreg      unsigned char 
 12926 ;; Registers used:
 12927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12928 ;; Tracked objects:
 12929 ;;		On entry : E/0
 12930 ;;		On exit  : F/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12934 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12935 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12936 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;Total ram usage:        7 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:    8
 12940 ;; This function calls:
 12941 ;;		_NVMWrite
 12942 ;;		_Total_Connections
 12943 ;;		_isSameAddress
 12944 ;; This function is called by:
 12945 ;;		_P2PTasks
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text55
 12950  011A7E                     __ptext55:
 12951                           	opt stack 0
 12952  011A7E                     _AddConnection:
 12953                           	opt stack 17
 12954                           
 12955                           ;miwi_p2p.c: 2558: uint8_t i;
 12956                           ;miwi_p2p.c: 2559: uint8_t status = 0x00;
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;incstack = 0
 12960  011A7E  0100               	movlb	0	; () banked
 12961  011A80  6B7B               	clrf	AddConnection@status& (0+255),b
 12962                           
 12963                           ;miwi_p2p.c: 2560: uint8_t connectionSlot = 0xFF;
 12964  011A82  697C               	setf	AddConnection@connectionSlot& (0+255),b
 12965                           
 12966                           ;miwi_p2p.c: 2572: for(i = 0; i < 10; i++)
 12967  011A84  6B7D               	clrf	AddConnection@i& (0+255),b
 12968  011A86                     l11996:
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;miwi_p2p.c: 2573: {
 12972                           ;miwi_p2p.c: 2575: if( ConnectionTable[i].status.bits.isValid )
 12973  011A86  517D               	movf	AddConnection@i& (0+255),w,b
 12974  011A88  0D0E               	mullw	14
 12975  011A8A  0E2A               	movlw	low (_ConnectionTable+12)
 12976  011A8C  24F3               	addwf	prodl,w,c
 12977  011A8E  6ED9               	movwf	fsr2l,c
 12978  011A90  0E02               	movlw	high (_ConnectionTable+12)
 12979  011A92  20F4               	addwfc	prodh,w,c
 12980  011A94  6EDA               	movwf	fsr2h,c
 12981  011A96  AEDF               	btfss	indf2,7,c
 12982  011A98  D016               	goto	l12004
 12983                           
 12984                           ; BSR set to: 2
 12985                           ;miwi_p2p.c: 2576: {
 12986                           ;miwi_p2p.c: 2578: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 12987  011A9A  C004  F06D         	movff	_rxMessage+3,isSameAddress@Address1
 12988  011A9E  C005  F06E         	movff	_rxMessage+4,isSameAddress@Address1+1
 12989  011AA2  0100               	movlb	0	; () banked
 12990  011AA4  517D               	movf	AddConnection@i& (0+255),w,b
 12991  011AA6  0D0E               	mullw	14
 12992  011AA8  0E22               	movlw	low (_ConnectionTable+4)
 12993  011AAA  24F3               	addwf	prodl,w,c
 12994  011AAC  6F6F               	movwf	isSameAddress@Address2& (0+255),b
 12995  011AAE  0E02               	movlw	high (_ConnectionTable+4)
 12996  011AB0  20F4               	addwfc	prodh,w,c
 12997  011AB2  6F70               	movwf	(isSameAddress@Address2+1)& (0+255),b
 12998  011AB4  ECD0  F099         	call	_isSameAddress	;wreg free
 12999  011AB8  0900               	iorlw	0
 13000  011ABA  E00A               	bz	l12008
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;miwi_p2p.c: 2579: {
 13004                           ;miwi_p2p.c: 2580: connectionSlot = i;
 13005  011ABC  C07D  F07C         	movff	AddConnection@i,AddConnection@connectionSlot
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;miwi_p2p.c: 2581: status = 0x01;
 13009  011AC0  0E01               	movlw	1
 13010  011AC2  6F7B               	movwf	AddConnection@status& (0+255),b
 13011                           
 13012                           ;miwi_p2p.c: 2582: break;
 13013  011AC4  D009               	goto	l12012
 13014  011AC6                     l12004:
 13015                           
 13016                           ; BSR set to: 2
 13017                           ;miwi_p2p.c: 2585: else if( connectionSlot == 0xFF )
 13018  011AC6  0100               	movlb	0	; () banked
 13019  011AC8  297C               	incf	AddConnection@connectionSlot& (0+255),w,b
 13020  011ACA  E102               	bnz	l12008
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;miwi_p2p.c: 2586: {
 13024                           ;miwi_p2p.c: 2588: connectionSlot = i;
 13025  011ACC  C07D  F07C         	movff	AddConnection@i,AddConnection@connectionSlot
 13026  011AD0                     l12008:
 13027                           
 13028                           ; BSR set to: 0
 13029  011AD0  2B7D               	incf	AddConnection@i& (0+255),f,b
 13030                           
 13031                           ; BSR set to: 0
 13032  011AD2  0E09               	movlw	9
 13033  011AD4  657D               	cpfsgt	AddConnection@i& (0+255),b
 13034  011AD6  D7D7               	goto	l11996
 13035  011AD8                     l12012:
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;miwi_p2p.c: 2589: }
 13039                           ;miwi_p2p.c: 2590: }
 13040                           ;miwi_p2p.c: 2592: if( connectionSlot == 0xFF )
 13041  011AD8  297C               	incf	AddConnection@connectionSlot& (0+255),w,b
 13042  011ADA  E101               	bnz	l12020
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;miwi_p2p.c: 2593: {
 13046                           ;miwi_p2p.c: 2594: return 0xF1;
 13047  011ADC  0CF1               	retlw	241
 13048  011ADE                     l12020:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;miwi_p2p.c: 2596: else
 13052                           ;miwi_p2p.c: 2597: {
 13053                           ;miwi_p2p.c: 2598: if( ConnMode >= 0x01 )
 13054  011ADE  51EC               	movf	_ConnMode& (0+255),w,b
 13055  011AE0  E003               	bz	l670
 13056  011AE2                     l12022:
 13057                           
 13058                           ;miwi_p2p.c: 2599: {
 13059                           ;miwi_p2p.c: 2600: return status;
 13060  011AE2  0100               	movlb	0	; () banked
 13061  011AE4  517B               	movf	AddConnection@status& (0+255),w,b
 13062  011AE6  0012               	return	
 13063  011AE8                     l670:
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;miwi_p2p.c: 2601: }
 13067                           ;miwi_p2p.c: 2602: MyindexinPC = connectionSlot;
 13068  011AE8  C07C  F012         	movff	AddConnection@connectionSlot,_MyindexinPC
 13069                           
 13070                           ;miwi_p2p.c: 2604: for(i = 0; i < 8; i++)
 13071  011AEC  6B7D               	clrf	AddConnection@i& (0+255),b
 13072  011AEE                     l12030:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;miwi_p2p.c: 2605: {
 13076                           ;miwi_p2p.c: 2606: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 13077  011AEE  517D               	movf	AddConnection@i& (0+255),w,b
 13078  011AF0  2404               	addwf	_rxMessage+3,w,c
 13079  011AF2  6ED9               	movwf	fsr2l,c
 13080  011AF4  0E00               	movlw	0
 13081  011AF6  2005               	addwfc	_rxMessage+4,w,c
 13082  011AF8  6EDA               	movwf	fsr2h,c
 13083  011AFA  517C               	movf	AddConnection@connectionSlot& (0+255),w,b
 13084  011AFC  0D0E               	mullw	14
 13085  011AFE  0E1E               	movlw	low _ConnectionTable
 13086  011B00  6F77               	movwf	??_AddConnection& (0+255),b
 13087  011B02  0E02               	movlw	high _ConnectionTable
 13088  011B04  6F78               	movwf	(??_AddConnection+1)& (0+255),b
 13089  011B06  0E04               	movlw	4
 13090  011B08  2777               	addwf	??_AddConnection& (0+255),f,b
 13091  011B0A  0E00               	movlw	0
 13092  011B0C  2378               	addwfc	(??_AddConnection+1)& (0+255),f,b
 13093  011B0E  50F3               	movf	prodl,w,c
 13094  011B10  2777               	addwf	??_AddConnection& (0+255),f,b
 13095  011B12  50F4               	movf	prodh,w,c
 13096  011B14  2378               	addwfc	(??_AddConnection+1)& (0+255),f,b
 13097  011B16  517D               	movf	AddConnection@i& (0+255),w,b
 13098  011B18  2577               	addwf	??_AddConnection& (0+255),w,b
 13099  011B1A  6EE1               	movwf	fsr1l,c
 13100  011B1C  0E00               	movlw	0
 13101  011B1E  2178               	addwfc	(??_AddConnection+1)& (0+255),w,b
 13102  011B20  6EE2               	movwf	fsr1h,c
 13103  011B22  CFDF FFE7          	movff	indf2,indf1
 13104                           
 13105                           ; BSR set to: 0
 13106  011B26  2B7D               	incf	AddConnection@i& (0+255),f,b
 13107                           
 13108                           ; BSR set to: 0
 13109  011B28  0E07               	movlw	7
 13110  011B2A  657D               	cpfsgt	AddConnection@i& (0+255),b
 13111  011B2C  D7E0               	goto	l12030
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;miwi_p2p.c: 2607: }
 13115                           ;miwi_p2p.c: 2610: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 13116  011B2E  517C               	movf	AddConnection@connectionSlot& (0+255),w,b
 13117  011B30  0D0E               	mullw	14
 13118  011B32  0E2A               	movlw	low (_ConnectionTable+12)
 13119  011B34  24F3               	addwf	prodl,w,c
 13120  011B36  6ED9               	movwf	fsr2l,c
 13121  011B38  0E02               	movlw	high (_ConnectionTable+12)
 13122  011B3A  20F4               	addwfc	prodh,w,c
 13123  011B3C  6EDA               	movwf	fsr2h,c
 13124  011B3E  8EDF               	bsf	indf2,7,c
 13125                           
 13126                           ;miwi_p2p.c: 2611: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 13127  011B40  EE20 F002          	lfsr	2,2
 13128  011B44  5006               	movf	_rxMessage+5,w,c
 13129  011B46  26D9               	addwf	fsr2l,f,c
 13130  011B48  5007               	movf	_rxMessage+6,w,c
 13131  011B4A  22DA               	addwfc	fsr2h,f,c
 13132  011B4C  50DF               	movf	indf2,w,c
 13133  011B4E  0100               	movlb	0	; () banked
 13134  011B50  6F77               	movwf	??_AddConnection& (0+255),b
 13135  011B52  0E01               	movlw	1
 13136  011B54  1777               	andwf	??_AddConnection& (0+255),f,b
 13137  011B56  517C               	movf	AddConnection@connectionSlot& (0+255),w,b
 13138  011B58  0D0E               	mullw	14
 13139  011B5A  0E2A               	movlw	low (_ConnectionTable+12)
 13140  011B5C  24F3               	addwf	prodl,w,c
 13141  011B5E  6ED9               	movwf	fsr2l,c
 13142  011B60  0E02               	movlw	high (_ConnectionTable+12)
 13143  011B62  20F4               	addwfc	prodh,w,c
 13144  011B64  6EDA               	movwf	fsr2h,c
 13145  011B66  50DF               	movf	223,w,c
 13146  011B68  1977               	xorwf	??_AddConnection& (0+255),w,b
 13147  011B6A  0BFE               	andlw	-2
 13148  011B6C  1977               	xorwf	??_AddConnection& (0+255),w,b
 13149  011B6E  6EDF               	movwf	223,c
 13150                           
 13151                           ; BSR set to: 2
 13152                           ;miwi_p2p.c: 2615: for(i = 0; i < 1; i++)
 13153  011B70  6B7D               	clrf	AddConnection@i& (0+255),b
 13154  011B72                     l12044:
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;miwi_p2p.c: 2616: {
 13158                           ;miwi_p2p.c: 2617: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 13159  011B72  517D               	movf	AddConnection@i& (0+255),w,b
 13160  011B74  2406               	addwf	_rxMessage+5,w,c
 13161  011B76  6F77               	movwf	??_AddConnection& (0+255),b
 13162  011B78  0E00               	movlw	0
 13163  011B7A  2007               	addwfc	_rxMessage+6,w,c
 13164  011B7C  6F78               	movwf	(??_AddConnection+1)& (0+255),b
 13165  011B7E  0E03               	movlw	3
 13166  011B80  2577               	addwf	??_AddConnection& (0+255),w,b
 13167  011B82  6ED9               	movwf	fsr2l,c
 13168  011B84  0E00               	movlw	0
 13169  011B86  2178               	addwfc	(??_AddConnection+1)& (0+255),w,b
 13170  011B88  6EDA               	movwf	fsr2h,c
 13171  011B8A  517C               	movf	AddConnection@connectionSlot& (0+255),w,b
 13172  011B8C  0D0E               	mullw	14
 13173  011B8E  0E1E               	movlw	low _ConnectionTable
 13174  011B90  6F79               	movwf	(??_AddConnection+2)& (0+255),b
 13175  011B92  0E02               	movlw	high _ConnectionTable
 13176  011B94  6F7A               	movwf	(??_AddConnection+3)& (0+255),b
 13177  011B96  0E0D               	movlw	13
 13178  011B98  2779               	addwf	(??_AddConnection+2)& (0+255),f,b
 13179  011B9A  0E00               	movlw	0
 13180  011B9C  237A               	addwfc	(??_AddConnection+3)& (0+255),f,b
 13181  011B9E  50F3               	movf	prodl,w,c
 13182  011BA0  2779               	addwf	(??_AddConnection+2)& (0+255),f,b
 13183  011BA2  50F4               	movf	prodh,w,c
 13184  011BA4  237A               	addwfc	(??_AddConnection+3)& (0+255),f,b
 13185  011BA6  517D               	movf	AddConnection@i& (0+255),w,b
 13186  011BA8  2579               	addwf	(??_AddConnection+2)& (0+255),w,b
 13187  011BAA  6EE1               	movwf	fsr1l,c
 13188  011BAC  0E00               	movlw	0
 13189  011BAE  217A               	addwfc	(??_AddConnection+3)& (0+255),w,b
 13190  011BB0  6EE2               	movwf	fsr1h,c
 13191  011BB2  CFDF FFE7          	movff	indf2,indf1
 13192                           
 13193                           ; BSR set to: 0
 13194  011BB6  2B7D               	incf	AddConnection@i& (0+255),f,b
 13195                           
 13196                           ; BSR set to: 0
 13197  011BB8  517D               	movf	AddConnection@i& (0+255),w,b
 13198  011BBA  E0DB               	bz	l12044
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;miwi_p2p.c: 2618: }
 13202                           ;miwi_p2p.c: 2625: LatestConnection = connectionSlot;
 13203  011BBC  C07C  F0DF         	movff	AddConnection@connectionSlot,_LatestConnection
 13204                           
 13205                           ;miwi_p2p.c: 2626: P2PStatus.bits.SearchConnection = 0;
 13206  011BC0  99E1               	bcf	_P2PStatus& (0+255),4,b	;volatile
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;miwi_p2p.c: 2627: }
 13210                           ;miwi_p2p.c: 2628: conn_size = Total_Connections();
 13211  011BC2  EC74  F097         	call	_Total_Connections	;wreg free
 13212  011BC6  6FE8               	movwf	_conn_size& (0+255),b
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;miwi_p2p.c: 2630: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 13216  011BC8  0EE8               	movlw	low _conn_size
 13217  011BCA  6F6E               	movwf	NVMWrite@source& (0+255),b
 13218  011BCC  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
 13219  011BCE  C027  F070         	movff	_nvmEdc,NVMWrite@addr
 13220  011BD2  C028  F071         	movff	_nvmEdc+1,NVMWrite@addr+1
 13221  011BD6  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
 13222  011BD8  0E01               	movlw	1
 13223  011BDA  6F72               	movwf	NVMWrite@count& (0+255),b
 13224  011BDC  EC32  F093         	call	_NVMWrite	;wreg free
 13225  011BE0  D780               	goto	l12022
 13226  011BE2                     __end_of_AddConnection:
 13227                           	opt stack 0
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           intcon	equ	0xFF2
 13235                           intcon2	equ	0xFF1
 13236                           intcon3	equ	0xFF0
 13237                           postinc0	equ	0xFEE
 13238                           wreg	equ	0xFE8
 13239                           indf1	equ	0xFE7
 13240                           postinc1	equ	0xFE6
 13241                           postdec1	equ	0xFE5
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           indf2	equ	0xFDF
 13245                           postinc2	equ	0xFDE
 13246                           postdec2	equ	0xFDD
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8
 13250                           
 13251 ;; *************** function _isSameAddress *****************
 13252 ;; Defined at:
 13253 ;;		line 2154 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;  Address1        2   13[BANK0 ] PTR unsigned char 
 13256 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 13257 ;;  Address2        2   15[BANK0 ] PTR unsigned char 
 13258 ;;		 -> ConnectionTable(140), 
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;  i               1   19[BANK0 ] unsigned char 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  1    wreg      unsigned char 
 13263 ;; Registers used:
 13264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13265 ;; Tracked objects:
 13266 ;;		On entry : F/0
 13267 ;;		On exit  : F/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;Total ram usage:        7 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; Hardware stack levels required when called:    5
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_P2PTasks
 13281 ;;		_AddConnection
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text56
 13286  0133A0                     __ptext56:
 13287                           	opt stack 0
 13288  0133A0                     _isSameAddress:
 13289                           	opt stack 20
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;miwi_p2p.c: 2156: uint8_t i;
 13293                           ;miwi_p2p.c: 2158: for(i = 0; i < 8; i++)
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;incstack = 0
 13297  0133A0  6B73               	clrf	isSameAddress@i& (0+255),b
 13298  0133A2                     l11478:
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;miwi_p2p.c: 2159: {
 13302                           ;miwi_p2p.c: 2160: if( Address1[i] != Address2[i] )
 13303  0133A2  5173               	movf	isSameAddress@i& (0+255),w,b
 13304  0133A4  256F               	addwf	isSameAddress@Address2& (0+255),w,b
 13305  0133A6  6ED9               	movwf	fsr2l,c
 13306  0133A8  0E00               	movlw	0
 13307  0133AA  2170               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 13308  0133AC  6EDA               	movwf	fsr2h,c
 13309  0133AE  5173               	movf	isSameAddress@i& (0+255),w,b
 13310  0133B0  256D               	addwf	isSameAddress@Address1& (0+255),w,b
 13311  0133B2  6EE1               	movwf	fsr1l,c
 13312  0133B4  0E00               	movlw	0
 13313  0133B6  216E               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 13314  0133B8  6EE2               	movwf	fsr1h,c
 13315  0133BA  50DE               	movf	postinc2,w,c
 13316  0133BC  18E6               	xorwf	postinc1,w,c
 13317  0133BE  E001               	bz	l11484
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;miwi_p2p.c: 2161: {
 13321                           ;miwi_p2p.c: 2162: return 0;
 13322  0133C0  0C00               	retlw	0
 13323  0133C2                     l11484:
 13324                           
 13325                           ; BSR set to: 0
 13326  0133C2  2B73               	incf	isSameAddress@i& (0+255),f,b
 13327                           
 13328                           ; BSR set to: 0
 13329  0133C4  0E07               	movlw	7
 13330  0133C6  6573               	cpfsgt	isSameAddress@i& (0+255),b
 13331  0133C8  D7EC               	goto	l11478
 13332  0133CA  0C01               	retlw	1
 13333  0133CC                     __end_of_isSameAddress:
 13334                           	opt stack 0
 13335                           tblptru	equ	0xFF8
 13336                           tblptrh	equ	0xFF7
 13337                           tblptrl	equ	0xFF6
 13338                           tablat	equ	0xFF5
 13339                           prodh	equ	0xFF4
 13340                           prodl	equ	0xFF3
 13341                           intcon	equ	0xFF2
 13342                           intcon2	equ	0xFF1
 13343                           intcon3	equ	0xFF0
 13344                           postinc0	equ	0xFEE
 13345                           wreg	equ	0xFE8
 13346                           indf1	equ	0xFE7
 13347                           postinc1	equ	0xFE6
 13348                           postdec1	equ	0xFE5
 13349                           fsr1h	equ	0xFE2
 13350                           fsr1l	equ	0xFE1
 13351                           indf2	equ	0xFDF
 13352                           postinc2	equ	0xFDE
 13353                           postdec2	equ	0xFDD
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function _Total_Connections *****************
 13359 ;; Defined at:
 13360 ;;		line 67 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  i               1   14[BANK0 ] unsigned char 
 13365 ;;  count           1   13[BANK0 ] unsigned char 
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  1    wreg      unsigned char 
 13368 ;; Registers used:
 13369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13370 ;; Tracked objects:
 13371 ;;		On entry : F/0
 13372 ;;		On exit  : F/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13379 ;;Total ram usage:        2 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:    5
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_AddConnection
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text57
 13390  012EE8                     __ptext57:
 13391                           	opt stack 0
 13392  012EE8                     _Total_Connections:
 13393                           	opt stack 19
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;miwi_p2p.c: 69: uint8_t count=0 , i;
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;incstack = 0
 13400  012EE8  6B6D               	clrf	Total_Connections@count& (0+255),b
 13401                           
 13402                           ;miwi_p2p.c: 70: for (i=0;i<10;i++)
 13403  012EEA  6B6E               	clrf	Total_Connections@i& (0+255),b
 13404  012EEC                     l11428:
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;miwi_p2p.c: 71: {
 13408                           ;miwi_p2p.c: 73: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 13409  012EEC  516E               	movf	Total_Connections@i& (0+255),w,b
 13410  012EEE  0D0E               	mullw	14
 13411  012EF0  0E22               	movlw	low (_ConnectionTable+4)
 13412  012EF2  24F3               	addwf	prodl,w,c
 13413  012EF4  6ED9               	movwf	fsr2l,c
 13414  012EF6  0E02               	movlw	high (_ConnectionTable+4)
 13415  012EF8  20F4               	addwfc	prodh,w,c
 13416  012EFA  6EDA               	movwf	fsr2h,c
 13417  012EFC  50DF               	movf	indf2,w,c
 13418  012EFE  E114               	bnz	l11434
 13419                           
 13420                           ; BSR set to: 0
 13421  012F00  516E               	movf	Total_Connections@i& (0+255),w,b
 13422  012F02  0D0E               	mullw	14
 13423  012F04  0E23               	movlw	low (_ConnectionTable+5)
 13424  012F06  24F3               	addwf	prodl,w,c
 13425  012F08  6ED9               	movwf	fsr2l,c
 13426  012F0A  0E02               	movlw	high (_ConnectionTable+5)
 13427  012F0C  20F4               	addwfc	prodh,w,c
 13428  012F0E  6EDA               	movwf	fsr2h,c
 13429  012F10  50DF               	movf	indf2,w,c
 13430  012F12  E10A               	bnz	l11434
 13431                           
 13432                           ; BSR set to: 0
 13433  012F14  516E               	movf	Total_Connections@i& (0+255),w,b
 13434  012F16  0D0E               	mullw	14
 13435  012F18  0E24               	movlw	low (_ConnectionTable+6)
 13436  012F1A  24F3               	addwf	prodl,w,c
 13437  012F1C  6ED9               	movwf	fsr2l,c
 13438  012F1E  0E02               	movlw	high (_ConnectionTable+6)
 13439  012F20  20F4               	addwfc	prodh,w,c
 13440  012F22  6EDA               	movwf	fsr2h,c
 13441  012F24  50DF               	movf	indf2,w,c
 13442  012F26  E001               	bz	l364
 13443  012F28                     l11434:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;miwi_p2p.c: 74: {
 13447                           ;miwi_p2p.c: 75: count++;
 13448  012F28  2B6D               	incf	Total_Connections@count& (0+255),f,b
 13449  012F2A                     l364:
 13450                           
 13451                           ; BSR set to: 0
 13452  012F2A  2B6E               	incf	Total_Connections@i& (0+255),f,b
 13453                           
 13454                           ; BSR set to: 0
 13455  012F2C  0E09               	movlw	9
 13456  012F2E  656E               	cpfsgt	Total_Connections@i& (0+255),b
 13457  012F30  D7DD               	goto	l11428
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;miwi_p2p.c: 76: }
 13461                           ;miwi_p2p.c: 83: }
 13462                           ;miwi_p2p.c: 84: return count;
 13463  012F32  516D               	movf	Total_Connections@count& (0+255),w,b
 13464                           
 13465                           ; BSR set to: 0
 13466  012F34  0012               	return		;funcret
 13467  012F36                     __end_of_Total_Connections:
 13468                           	opt stack 0
 13469                           tblptru	equ	0xFF8
 13470                           tblptrh	equ	0xFF7
 13471                           tblptrl	equ	0xFF6
 13472                           tablat	equ	0xFF5
 13473                           prodh	equ	0xFF4
 13474                           prodl	equ	0xFF3
 13475                           intcon	equ	0xFF2
 13476                           intcon2	equ	0xFF1
 13477                           intcon3	equ	0xFF0
 13478                           postinc0	equ	0xFEE
 13479                           wreg	equ	0xFE8
 13480                           indf1	equ	0xFE7
 13481                           postinc1	equ	0xFE6
 13482                           postdec1	equ	0xFE5
 13483                           fsr1h	equ	0xFE2
 13484                           fsr1l	equ	0xFE1
 13485                           indf2	equ	0xFDF
 13486                           postinc2	equ	0xFDE
 13487                           postdec2	equ	0xFDD
 13488                           fsr2h	equ	0xFDA
 13489                           fsr2l	equ	0xFD9
 13490                           status	equ	0xFD8
 13491                           
 13492 ;; *************** function _MiApp_DiscardMessage *****************
 13493 ;; Defined at:
 13494 ;;		line 2405 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;		None
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13503 ;; Tracked objects:
 13504 ;;		On entry : F/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;Total ram usage:        0 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:    6
 13515 ;; This function calls:
 13516 ;;		_MiMAC_DiscardPacket
 13517 ;; This function is called by:
 13518 ;;		_MiApp_EstablishConnection
 13519 ;;		_Process_RxMessage
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text58
 13524  013692                     __ptext58:
 13525                           	opt stack 0
 13526  013692                     _MiApp_DiscardMessage:
 13527                           	opt stack 21
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;miwi_p2p.c: 2407: P2PStatus.bits.RxHasUserData = 0;
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;incstack = 0
 13534  013692  97E1               	bcf	_P2PStatus& (0+255),3,b	;volatile
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;miwi_p2p.c: 2408: MiMAC_DiscardPacket();
 13538  013694  EFCD  F09A         	goto	_MiMAC_DiscardPacket	;wreg free
 13539  013698                     __end_of_MiApp_DiscardMessage:
 13540                           	opt stack 0
 13541                           tblptru	equ	0xFF8
 13542                           tblptrh	equ	0xFF7
 13543                           tblptrl	equ	0xFF6
 13544                           tablat	equ	0xFF5
 13545                           prodh	equ	0xFF4
 13546                           prodl	equ	0xFF3
 13547                           intcon	equ	0xFF2
 13548                           intcon2	equ	0xFF1
 13549                           intcon3	equ	0xFF0
 13550                           postinc0	equ	0xFEE
 13551                           wreg	equ	0xFE8
 13552                           indf1	equ	0xFE7
 13553                           postinc1	equ	0xFE6
 13554                           postdec1	equ	0xFE5
 13555                           fsr1h	equ	0xFE2
 13556                           fsr1l	equ	0xFE1
 13557                           indf2	equ	0xFDF
 13558                           postinc2	equ	0xFDE
 13559                           postdec2	equ	0xFDD
 13560                           fsr2h	equ	0xFDA
 13561                           fsr2l	equ	0xFD9
 13562                           status	equ	0xFD8
 13563                           
 13564 ;; *************** function _MiMAC_DiscardPacket *****************
 13565 ;; Defined at:
 13566 ;;		line 1050 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;		None
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;		None
 13571 ;; Return value:  Size  Location     Type
 13572 ;;                  1    wreg      void 
 13573 ;; Registers used:
 13574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;Total ram usage:        0 bytes
 13585 ;; Hardware stack levels used:    1
 13586 ;; Hardware stack levels required when called:    5
 13587 ;; This function calls:
 13588 ;;		Nothing
 13589 ;; This function is called by:
 13590 ;;		_P2PTasks
 13591 ;;		_MiApp_DiscardMessage
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text59
 13596  01359A                     __ptext59:
 13597                           	opt stack 0
 13598  01359A                     _MiMAC_DiscardPacket:
 13599                           	opt stack 20
 13600                           
 13601                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 13602                           
 13603                           ;incstack = 0
 13604  01359A  0E02               	movlw	2
 13605  01359C  6017               	cpfslt	_ReceivedBankIndex,c
 13606  01359E  0C02               	retlw	2
 13607                           
 13608                           ;drv_mrf_miwi_89xa.c: 1053: {
 13609                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 13610  0135A0  5017               	movf	_ReceivedBankIndex,w,c
 13611  0135A2  0D39               	mullw	57
 13612  0135A4  0E00               	movlw	low _RxPacket
 13613  0135A6  24F3               	addwf	prodl,w,c
 13614  0135A8  6ED9               	movwf	fsr2l,c
 13615  0135AA  0E03               	movlw	high _RxPacket
 13616  0135AC  20F4               	addwfc	prodh,w,c
 13617  0135AE  6EDA               	movwf	fsr2h,c
 13618  0135B0  0E00               	movlw	0
 13619  0135B2  6ADF               	clrf	indf2,c
 13620                           
 13621                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 13622  0135B4  6817               	setf	_ReceivedBankIndex,c
 13623  0135B6  0012               	return		;funcret
 13624  0135B8                     __end_of_MiMAC_DiscardPacket:
 13625                           	opt stack 0
 13626                           tblptru	equ	0xFF8
 13627                           tblptrh	equ	0xFF7
 13628                           tblptrl	equ	0xFF6
 13629                           tablat	equ	0xFF5
 13630                           prodh	equ	0xFF4
 13631                           prodl	equ	0xFF3
 13632                           intcon	equ	0xFF2
 13633                           intcon2	equ	0xFF1
 13634                           intcon3	equ	0xFF0
 13635                           postinc0	equ	0xFEE
 13636                           wreg	equ	0xFE8
 13637                           indf1	equ	0xFE7
 13638                           postinc1	equ	0xFE6
 13639                           postdec1	equ	0xFE5
 13640                           fsr1h	equ	0xFE2
 13641                           fsr1l	equ	0xFE1
 13642                           indf2	equ	0xFDF
 13643                           postinc2	equ	0xFDE
 13644                           postdec2	equ	0xFDD
 13645                           fsr2h	equ	0xFDA
 13646                           fsr2l	equ	0xFD9
 13647                           status	equ	0xFD8
 13648                           
 13649 ;; *************** function _MiApp_ConnectionMode *****************
 13650 ;; Defined at:
 13651 ;;		line 3210 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;  Mode            1    wreg     unsigned char 
 13654 ;; Auto vars:     Size  Location     Type
 13655 ;;  Mode            1   24[BANK0 ] unsigned char 
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  1    wreg      void 
 13658 ;; Registers used:
 13659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;Total ram usage:        2 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    8
 13672 ;; This function calls:
 13673 ;;		_NVMWrite
 13674 ;; This function is called by:
 13675 ;;		_Initialize_Demo
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text60
 13680  0130FC                     __ptext60:
 13681                           	opt stack 0
 13682  0130FC                     _MiApp_ConnectionMode:
 13683                           	opt stack 21
 13684                           
 13685                           ;incstack = 0
 13686                           ;MiApp_ConnectionMode@Mode stored from wreg
 13687  0130FC  0100               	movlb	0	; () banked
 13688  0130FE  6F78               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 13689                           
 13690                           ;miwi_p2p.c: 3212: if( Mode > 3 )
 13691  013100  0E03               	movlw	3
 13692  013102  6578               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 13693  013104  D001               	goto	l690
 13694  013106  0C03               	retlw	3
 13695  013108                     l690:
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;miwi_p2p.c: 3215: }
 13699                           ;miwi_p2p.c: 3216: ConnMode = Mode;
 13700  013108  C078  F0EC         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;miwi_p2p.c: 3217: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 13704  01310C  C0EC  F077         	movff	_ConnMode,??_MiApp_ConnectionMode
 13705  013110  3B77               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 13706  013112  0EF0               	movlw	240
 13707  013114  1777               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 13708  013116  51E0               	movf	_P2PCapacityInfo& (0+255),w,b
 13709  013118  0B0F               	andlw	15
 13710  01311A  1177               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 13711  01311C  6FE0               	movwf	_P2PCapacityInfo& (0+255),b
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;miwi_p2p.c: 3220: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 13715  01311E  0EEC               	movlw	low _ConnMode
 13716  013120  6F6E               	movwf	NVMWrite@source& (0+255),b
 13717  013122  6B6F               	clrf	(NVMWrite@source+1)& (0+255),b
 13718  013124  C023  F070         	movff	_nvmConnMode,NVMWrite@addr
 13719  013128  C024  F071         	movff	_nvmConnMode+1,NVMWrite@addr+1
 13720  01312C  6B73               	clrf	(NVMWrite@count+1)& (0+255),b
 13721  01312E  0E01               	movlw	1
 13722  013130  6F72               	movwf	NVMWrite@count& (0+255),b
 13723  013132  EF32  F093         	goto	_NVMWrite	;wreg free
 13724  013136                     __end_of_MiApp_ConnectionMode:
 13725                           	opt stack 0
 13726                           tblptru	equ	0xFF8
 13727                           tblptrh	equ	0xFF7
 13728                           tblptrl	equ	0xFF6
 13729                           tablat	equ	0xFF5
 13730                           prodh	equ	0xFF4
 13731                           prodl	equ	0xFF3
 13732                           intcon	equ	0xFF2
 13733                           intcon2	equ	0xFF1
 13734                           intcon3	equ	0xFF0
 13735                           postinc0	equ	0xFEE
 13736                           wreg	equ	0xFE8
 13737                           indf1	equ	0xFE7
 13738                           postinc1	equ	0xFE6
 13739                           postdec1	equ	0xFE5
 13740                           fsr1h	equ	0xFE2
 13741                           fsr1l	equ	0xFE1
 13742                           indf2	equ	0xFDF
 13743                           postinc2	equ	0xFDE
 13744                           postdec2	equ	0xFDD
 13745                           fsr2h	equ	0xFDA
 13746                           fsr2l	equ	0xFD9
 13747                           status	equ	0xFD8
 13748                           
 13749 ;; *************** function _NVMWrite *****************
 13750 ;; Defined at:
 13751 ;;		line 255 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;  source          2   14[BANK0 ] PTR unsigned char 
 13754 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), role(1), 
 13755 ;;		 -> conn_size(1), ConnectionTable(140), 
 13756 ;;  addr            2   16[BANK0 ] unsigned int 
 13757 ;;  count           2   18[BANK0 ] unsigned int 
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;  PageCounter     1   22[BANK0 ] unsigned char 
 13760 ;;  oldRFIE         1   21[BANK0 ] unsigned char 
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      void 
 13763 ;; Registers used:
 13764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : F/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13770 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;Total ram usage:        9 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:    7
 13777 ;; This function calls:
 13778 ;;		_MacroNop
 13779 ;;		_SPIGet
 13780 ;;		_SPIPut
 13781 ;; This function is called by:
 13782 ;;		_P2PTasks
 13783 ;;		_MiApp_ProtocolInit
 13784 ;;		_MiApp_EstablishConnection
 13785 ;;		_MiApp_SetChannel
 13786 ;;		_AddConnection
 13787 ;;		_MiApp_RemoveConnection
 13788 ;;		_MiApp_ConnectionMode
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text61
 13793  012664                     __ptext61:
 13794                           	opt stack 0
 13795  012664                     _NVMWrite:
 13796                           	opt stack 18
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;miwi_nvm.c: 263: uint8_t oldRFIE = INTCON3bits.INT3IE;
 13800                           
 13801                           ; BSR set to: 0
 13802                           
 13803                           ;incstack = 0
 13804  012664  0E00               	movlw	0
 13805  012666  BAF0               	btfsc	intcon3,5,c	;volatile
 13806  012668  0E01               	movlw	1
 13807  01266A  6F75               	movwf	NVMWrite@oldRFIE& (0+255),b
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;miwi_nvm.c: 264: INTCON3bits.INT3IE = 0;
 13811  01266C  9AF0               	bcf	intcon3,5,c	;volatile
 13812  01266E                     l11354:
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;miwi_nvm.c: 270: {
 13816                           ;miwi_nvm.c: 271: LATAbits.LATA3 = 0;
 13817  01266E  9689               	bcf	3977,3,c	;volatile
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;miwi_nvm.c: 272: SPIPut( 0x05 );
 13821  012670  0E05               	movlw	5
 13822  012672  ECEB  F09A         	call	_SPIPut
 13823                           
 13824                           ;miwi_nvm.c: 273: PageCounter = SPIGet();
 13825  012676  EC37  F09B         	call	_SPIGet	;wreg free
 13826  01267A  0100               	movlb	0	; () banked
 13827  01267C  6F76               	movwf	NVMWrite@PageCounter& (0+255),b
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;miwi_nvm.c: 274: LATAbits.LATA3 = 1;
 13831  01267E  8689               	bsf	3977,3,c	;volatile
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;miwi_nvm.c: 275: MacroNop();
 13835  012680  EC4E  F09B         	call	_MacroNop	;wreg free
 13836                           
 13837                           ;miwi_nvm.c: 276: } while(PageCounter & 0x01 );
 13838  012684  0100               	movlb	0	; () banked
 13839  012686  B176               	btfsc	NVMWrite@PageCounter& (0+255),0,b
 13840  012688  D7F2               	goto	l11354
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;miwi_nvm.c: 278: LATAbits.LATA3 = 0;
 13844  01268A  9689               	bcf	3977,3,c	;volatile
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;miwi_nvm.c: 279: SPIPut( 0x06 );
 13848  01268C  0E06               	movlw	6
 13849  01268E  ECEB  F09A         	call	_SPIPut
 13850                           
 13851                           ;miwi_nvm.c: 280: LATAbits.LATA3 = 1;
 13852  012692  8689               	bsf	3977,3,c	;volatile
 13853                           
 13854                           ;miwi_nvm.c: 281: MacroNop();
 13855  012694  EC4E  F09B         	call	_MacroNop	;wreg free
 13856                           
 13857                           ;miwi_nvm.c: 282: LATAbits.LATA3 = 0;
 13858  012698  9689               	bcf	3977,3,c	;volatile
 13859                           
 13860                           ;miwi_nvm.c: 297: SPIPut( 0x02 );
 13861  01269A  0E02               	movlw	2
 13862  01269C  ECEB  F09A         	call	_SPIPut
 13863                           
 13864                           ;miwi_nvm.c: 298: SPIPut( addr>>8 );
 13865  0126A0  0100               	movlb	0	; () banked
 13866  0126A2  5171               	movf	(NVMWrite@addr+1)& (0+255),w,b
 13867  0126A4  ECEB  F09A         	call	_SPIPut
 13868                           
 13869                           ;miwi_nvm.c: 299: SPIPut( addr );
 13870  0126A8  0100               	movlb	0	; () banked
 13871  0126AA  5170               	movf	NVMWrite@addr& (0+255),w,b
 13872  0126AC  ECEB  F09A         	call	_SPIPut
 13873                           
 13874                           ;miwi_nvm.c: 301: PageCounter = 0;
 13875  0126B0  0100               	movlb	0	; () banked
 13876  0126B2  6B76               	clrf	NVMWrite@PageCounter& (0+255),b
 13877                           
 13878                           ;miwi_nvm.c: 302: while( count > 0 )
 13879  0126B4  D01A               	goto	l11396
 13880  0126B6                     l11382:
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;miwi_nvm.c: 303: {
 13884                           ;miwi_nvm.c: 304: SPIPut( *source++ );
 13885  0126B6  C06E  FFD9         	movff	NVMWrite@source,fsr2l
 13886  0126BA  C06F  FFDA         	movff	NVMWrite@source+1,fsr2h
 13887  0126BE  50DF               	movf	indf2,w,c
 13888  0126C0  ECEB  F09A         	call	_SPIPut
 13889  0126C4  0100               	movlb	0	; () banked
 13890  0126C6  4B6E               	infsnz	NVMWrite@source& (0+255),f,b
 13891  0126C8  2B6F               	incf	(NVMWrite@source+1)& (0+255),f,b
 13892                           
 13893                           ; BSR set to: 0
 13894                           ;miwi_nvm.c: 305: count--;
 13895  0126CA  0772               	decf	NVMWrite@count& (0+255),f,b
 13896  0126CC  A0D8               	btfss	status,0,c
 13897  0126CE  0773               	decf	(NVMWrite@count+1)& (0+255),f,b
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;miwi_nvm.c: 306: PageCounter++;
 13901  0126D0  2B76               	incf	NVMWrite@PageCounter& (0+255),f,b
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;miwi_nvm.c: 307: if( ((addr + PageCounter) & (64-1)) == 0 )
 13905  0126D2  5176               	movf	NVMWrite@PageCounter& (0+255),w,b
 13906  0126D4  2570               	addwf	NVMWrite@addr& (0+255),w,b
 13907  0126D6  6F74               	movwf	??_NVMWrite& (0+255),b
 13908  0126D8  0E3F               	movlw	63
 13909  0126DA  1774               	andwf	??_NVMWrite& (0+255),f,b
 13910  0126DC  E106               	bnz	l11396
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;miwi_nvm.c: 308: {
 13914                           ;miwi_nvm.c: 309: LATAbits.LATA3 = 1;
 13915  0126DE  8689               	bsf	3977,3,c	;volatile
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;miwi_nvm.c: 310: addr += PageCounter;
 13919  0126E0  5176               	movf	NVMWrite@PageCounter& (0+255),w,b
 13920  0126E2  2770               	addwf	NVMWrite@addr& (0+255),f,b
 13921  0126E4  0E00               	movlw	0
 13922  0126E6  2371               	addwfc	(NVMWrite@addr+1)& (0+255),f,b
 13923                           
 13924                           ;miwi_nvm.c: 311: goto EEPROM_NEXT_PAGE;
 13925  0126E8  D7C2               	goto	l11354
 13926  0126EA                     l11396:
 13927                           
 13928                           ; BSR set to: 0
 13929  0126EA  5172               	movf	NVMWrite@count& (0+255),w,b
 13930  0126EC  1173               	iorwf	(NVMWrite@count+1)& (0+255),w,b
 13931  0126EE  E1E3               	bnz	l11382
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;miwi_nvm.c: 312: }
 13935                           ;miwi_nvm.c: 313: }
 13936                           ;miwi_nvm.c: 314: LATAbits.LATA3 = 1;
 13937  0126F0  8689               	bsf	3977,3,c	;volatile
 13938                           
 13939                           ;miwi_nvm.c: 319: INTCON3bits.INT3IE = oldRFIE;
 13940  0126F2  B175               	btfsc	NVMWrite@oldRFIE& (0+255),0,b
 13941  0126F4  D002               	bra	u11185
 13942  0126F6  9AF0               	bcf	intcon3,5,c	;volatile
 13943  0126F8  D001               	bra	u11186
 13944  0126FA                     u11185:
 13945  0126FA  8AF0               	bsf	intcon3,5,c	;volatile
 13946  0126FC                     u11186:
 13947  0126FC  0012               	return		;funcret
 13948  0126FE                     __end_of_NVMWrite:
 13949                           	opt stack 0
 13950                           tblptru	equ	0xFF8
 13951                           tblptrh	equ	0xFF7
 13952                           tblptrl	equ	0xFF6
 13953                           tablat	equ	0xFF5
 13954                           prodh	equ	0xFF4
 13955                           prodl	equ	0xFF3
 13956                           intcon	equ	0xFF2
 13957                           intcon2	equ	0xFF1
 13958                           intcon3	equ	0xFF0
 13959                           postinc0	equ	0xFEE
 13960                           wreg	equ	0xFE8
 13961                           indf1	equ	0xFE7
 13962                           postinc1	equ	0xFE6
 13963                           postdec1	equ	0xFE5
 13964                           fsr1h	equ	0xFE2
 13965                           fsr1l	equ	0xFE1
 13966                           indf2	equ	0xFDF
 13967                           postinc2	equ	0xFDE
 13968                           postdec2	equ	0xFDD
 13969                           fsr2h	equ	0xFDA
 13970                           fsr2l	equ	0xFD9
 13971                           status	equ	0xFD8
 13972                           
 13973 ;; *************** function _SPIGet *****************
 13974 ;; Defined at:
 13975 ;;		line 94 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;		None
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;		None
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1    wreg      unsigned char 
 13982 ;; Registers used:
 13983 ;;		wreg, status,2, cstack
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;Total ram usage:        0 bytes
 13994 ;; Hardware stack levels used:    1
 13995 ;; Hardware stack levels required when called:    6
 13996 ;; This function calls:
 13997 ;;		_SPIPut
 13998 ;; This function is called by:
 13999 ;;		_RegisterRead
 14000 ;;		_NVMRead
 14001 ;;		_NVMWrite
 14002 ;;		_EEPROM_Read
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text62
 14007  01366E                     __ptext62:
 14008                           	opt stack 0
 14009  01366E                     _SPIGet:
 14010                           	opt stack 14
 14011                           
 14012                           ;spi.c: 115: SPIPut(0x00);
 14013                           
 14014                           ;incstack = 0
 14015  01366E  0E00               	movlw	0
 14016  013670  ECEB  F09A         	call	_SPIPut
 14017                           
 14018                           ;spi.c: 116: return SSP1BUF;
 14019  013674  50C9               	movf	4041,w,c	;volatile
 14020  013676  0012               	return		;funcret
 14021  013678                     __end_of_SPIGet:
 14022                           	opt stack 0
 14023                           tblptru	equ	0xFF8
 14024                           tblptrh	equ	0xFF7
 14025                           tblptrl	equ	0xFF6
 14026                           tablat	equ	0xFF5
 14027                           prodh	equ	0xFF4
 14028                           prodl	equ	0xFF3
 14029                           intcon	equ	0xFF2
 14030                           intcon2	equ	0xFF1
 14031                           intcon3	equ	0xFF0
 14032                           postinc0	equ	0xFEE
 14033                           wreg	equ	0xFE8
 14034                           indf1	equ	0xFE7
 14035                           postinc1	equ	0xFE6
 14036                           postdec1	equ	0xFE5
 14037                           fsr1h	equ	0xFE2
 14038                           fsr1l	equ	0xFE1
 14039                           indf2	equ	0xFDF
 14040                           postinc2	equ	0xFDE
 14041                           postdec2	equ	0xFDD
 14042                           fsr2h	equ	0xFDA
 14043                           fsr2l	equ	0xFD9
 14044                           status	equ	0xFD8
 14045                           
 14046 ;; *************** function _MacroNop *****************
 14047 ;; Defined at:
 14048 ;;		line 320 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      void 
 14055 ;; Registers used:
 14056 ;;		None
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14066 ;;Total ram usage:        0 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:    5
 14069 ;; This function calls:
 14070 ;;		Nothing
 14071 ;; This function is called by:
 14072 ;;		_NVMWrite
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           	psect	text63
 14077  01369C                     __ptext63:
 14078                           	opt stack 0
 14079  01369C                     _MacroNop:
 14080                           	opt stack 19
 14081                           
 14082                           ;miwi_p2p.c: 326: __nop();
 14083                           
 14084                           ;incstack = 0
 14085  01369C  F000               	nop	
 14086  01369E  0012               	return		;funcret
 14087  0136A0                     __end_of_MacroNop:
 14088                           	opt stack 0
 14089                           tblptru	equ	0xFF8
 14090                           tblptrh	equ	0xFF7
 14091                           tblptrl	equ	0xFF6
 14092                           tablat	equ	0xFF5
 14093                           prodh	equ	0xFF4
 14094                           prodl	equ	0xFF3
 14095                           intcon	equ	0xFF2
 14096                           intcon2	equ	0xFF1
 14097                           intcon3	equ	0xFF0
 14098                           postinc0	equ	0xFEE
 14099                           wreg	equ	0xFE8
 14100                           indf1	equ	0xFE7
 14101                           postinc1	equ	0xFE6
 14102                           postdec1	equ	0xFE5
 14103                           fsr1h	equ	0xFE2
 14104                           fsr1l	equ	0xFE1
 14105                           indf2	equ	0xFDF
 14106                           postinc2	equ	0xFDE
 14107                           postdec2	equ	0xFDD
 14108                           fsr2h	equ	0xFDA
 14109                           fsr2l	equ	0xFD9
 14110                           status	equ	0xFD8
 14111                           
 14112 ;; *************** function _DemoOutput_ChannelError *****************
 14113 ;; Defined at:
 14114 ;;		line 275 in file "../src/demo_ouput.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  channel         1    wreg     unsigned char 
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;  channel         1    0[COMRAM] unsigned char 
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      void 
 14121 ;; Registers used:
 14122 ;;		wreg
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;Total ram usage:        0 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; Hardware stack levels required when called:    5
 14135 ;; This function calls:
 14136 ;;		Nothing
 14137 ;; This function is called by:
 14138 ;;		_Initialize_Demo
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text64
 14143  0136A4                     __ptext64:
 14144                           	opt stack 0
 14145  0136A4                     _DemoOutput_ChannelError:
 14146                           	opt stack 24
 14147                           
 14148                           ;incstack = 0
 14149  0136A4  0012               	return		;funcret
 14150  0136A6                     __end_of_DemoOutput_ChannelError:
 14151                           	opt stack 0
 14152                           tblptru	equ	0xFF8
 14153                           tblptrh	equ	0xFF7
 14154                           tblptrl	equ	0xFF6
 14155                           tablat	equ	0xFF5
 14156                           prodh	equ	0xFF4
 14157                           prodl	equ	0xFF3
 14158                           intcon	equ	0xFF2
 14159                           intcon2	equ	0xFF1
 14160                           intcon3	equ	0xFF0
 14161                           postinc0	equ	0xFEE
 14162                           wreg	equ	0xFE8
 14163                           indf1	equ	0xFE7
 14164                           postinc1	equ	0xFE6
 14165                           postdec1	equ	0xFE5
 14166                           fsr1h	equ	0xFE2
 14167                           fsr1l	equ	0xFE1
 14168                           indf2	equ	0xFDF
 14169                           postinc2	equ	0xFDE
 14170                           postdec2	equ	0xFDD
 14171                           fsr2h	equ	0xFDA
 14172                           fsr2l	equ	0xFD9
 14173                           status	equ	0xFD8
 14174                           
 14175 ;; *************** function _DemoOutput_Channel *****************
 14176 ;; Defined at:
 14177 ;;		line 192 in file "../src/demo_ouput.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;  channel         1    wreg     unsigned char 
 14180 ;;  Step            1   65[BANK0 ] unsigned char 
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;  channel         1   66[BANK0 ] unsigned char 
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  1    wreg      void 
 14185 ;; Registers used:
 14186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14187 ;; Tracked objects:
 14188 ;;		On entry : F/0
 14189 ;;		On exit  : F/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14192 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;Total ram usage:        2 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:   10
 14199 ;; This function calls:
 14200 ;;		_LCDDisplay
 14201 ;; This function is called by:
 14202 ;;		_Initialize_Demo
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206                           	psect	text65
 14207  013536                     __ptext65:
 14208                           	opt stack 0
 14209  013536                     _DemoOutput_Channel:
 14210                           	opt stack 19
 14211                           
 14212                           ;incstack = 0
 14213                           ;DemoOutput_Channel@channel stored from wreg
 14214  013536  6FA2               	movwf	DemoOutput_Channel@channel& (0+255),b
 14215                           
 14216                           ;demo_ouput.c: 194: if( Step == 0 )
 14217  013538  0100               	movlb	0	; () banked
 14218  01353A  51A1               	movf	DemoOutput_Channel@Step& (0+255),w,b
 14219  01353C  E104               	bnz	l13002
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;demo_ouput.c: 195: {
 14223                           ;demo_ouput.c: 196: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 14224  01353E  0EAD               	movlw	low STR_4
 14225  013540  6F9C               	movwf	LCDDisplay@text& (0+255),b
 14226  013542  0EFE               	movlw	high STR_4
 14227  013544  D003               	goto	L9
 14228  013546                     l13002:
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;demo_ouput.c: 203: else
 14232                           ;demo_ouput.c: 204: {
 14233                           ;demo_ouput.c: 205: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 14234  013546  0ECD               	movlw	low STR_5
 14235  013548  6F9C               	movwf	LCDDisplay@text& (0+255),b
 14236  01354A  0EFE               	movlw	high STR_5
 14237  01354C                     L9:
 14238  01354C  6F9D               	movwf	(LCDDisplay@text+1)& (0+255),b
 14239  01354E  C0A2  F09E         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 14240  013552  0E01               	movlw	1
 14241  013554  6F9F               	movwf	LCDDisplay@delay& (0+255),b
 14242  013556  EF04  F098         	goto	_LCDDisplay	;wreg free
 14243  01355A                     __end_of_DemoOutput_Channel:
 14244                           	opt stack 0
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           intcon2	equ	0xFF1
 14253                           intcon3	equ	0xFF0
 14254                           postinc0	equ	0xFEE
 14255                           wreg	equ	0xFE8
 14256                           indf1	equ	0xFE7
 14257                           postinc1	equ	0xFE6
 14258                           postdec1	equ	0xFE5
 14259                           fsr1h	equ	0xFE2
 14260                           fsr1l	equ	0xFE1
 14261                           indf2	equ	0xFDF
 14262                           postinc2	equ	0xFDE
 14263                           postdec2	equ	0xFDD
 14264                           fsr2h	equ	0xFDA
 14265                           fsr2l	equ	0xFD9
 14266                           status	equ	0xFD8
 14267                           
 14268 ;; *************** function _DemoOutput_Greeting *****************
 14269 ;; Defined at:
 14270 ;;		line 55 in file "../src/demo_ouput.c"
 14271 ;; Parameters:    Size  Location     Type
 14272 ;;		None
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;		None
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      void 
 14277 ;; Registers used:
 14278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14279 ;; Tracked objects:
 14280 ;;		On entry : F/0
 14281 ;;		On exit  : F/0
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14288 ;;Total ram usage:        0 bytes
 14289 ;; Hardware stack levels used:    1
 14290 ;; Hardware stack levels required when called:   10
 14291 ;; This function calls:
 14292 ;;		_LCDDisplay
 14293 ;; This function is called by:
 14294 ;;		_main
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           	psect	text66
 14299  013642                     __ptext66:
 14300                           	opt stack 0
 14301  013642                     _DemoOutput_Greeting:
 14302                           	opt stack 20
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;demo_ouput.c: 101: LCDDisplay((char *)"Simple STAR     MRF89XA Node", 0, 1);
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;incstack = 0
 14309  013642  0EEC               	movlw	low STR_3
 14310  013644  6F9C               	movwf	LCDDisplay@text& (0+255),b
 14311  013646  0EFE               	movlw	high STR_3
 14312  013648  6F9D               	movwf	(LCDDisplay@text+1)& (0+255),b
 14313  01364A  6B9E               	clrf	LCDDisplay@value& (0+255),b
 14314  01364C  0E01               	movlw	1
 14315  01364E  6F9F               	movwf	LCDDisplay@delay& (0+255),b
 14316  013650  EF04  F098         	goto	_LCDDisplay	;wreg free
 14317  013654                     __end_of_DemoOutput_Greeting:
 14318                           	opt stack 0
 14319                           tblptru	equ	0xFF8
 14320                           tblptrh	equ	0xFF7
 14321                           tblptrl	equ	0xFF6
 14322                           tablat	equ	0xFF5
 14323                           prodh	equ	0xFF4
 14324                           prodl	equ	0xFF3
 14325                           intcon	equ	0xFF2
 14326                           intcon2	equ	0xFF1
 14327                           intcon3	equ	0xFF0
 14328                           postinc0	equ	0xFEE
 14329                           wreg	equ	0xFE8
 14330                           indf1	equ	0xFE7
 14331                           postinc1	equ	0xFE6
 14332                           postdec1	equ	0xFE5
 14333                           fsr1h	equ	0xFE2
 14334                           fsr1l	equ	0xFE1
 14335                           indf2	equ	0xFDF
 14336                           postinc2	equ	0xFDE
 14337                           postdec2	equ	0xFDD
 14338                           fsr2h	equ	0xFDA
 14339                           fsr2l	equ	0xFD9
 14340                           status	equ	0xFD8
 14341                           
 14342 ;; *************** function _LCDDisplay *****************
 14343 ;; Defined at:
 14344 ;;		line 340 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;  text            2   60[BANK0 ] PTR unsigned char 
 14347 ;;		 -> STR_15(21), STR_13(20), STR_6(16), STR_5(31), 
 14348 ;;		 -> STR_4(32), STR_3(29), 
 14349 ;;  value           1   62[BANK0 ] unsigned char 
 14350 ;;  delay           1   63[BANK0 ] unsigned char 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  i               1   64[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : F/0
 14359 ;;		On exit  : F/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;Total ram usage:        5 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    9
 14369 ;; This function calls:
 14370 ;;		_DELAY_ms
 14371 ;;		_LCD_Erase
 14372 ;;		_LCD_Update
 14373 ;;		_sprintf
 14374 ;; This function is called by:
 14375 ;;		_DemoOutput_Greeting
 14376 ;;		_DemoOutput_Channel
 14377 ;;		_run_star_demo
 14378 ;;		_freezer_feature
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           	psect	text67
 14383  013008                     __ptext67:
 14384                           	opt stack 0
 14385  013008                     _LCDDisplay:
 14386                           	opt stack 20
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;lcd.c: 343: LCD_Erase();
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;incstack = 0
 14393  013008  EC4E  F09A         	call	_LCD_Erase	;wreg free
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;lcd.c: 344: sprintf((char *)LCDText, (char*)text, value);
 14397  01300C  0EB6               	movlw	low _LCDText
 14398  01300E  6F79               	movwf	sprintf@sp& (0+255),b
 14399  013010  0E01               	movlw	high _LCDText
 14400  013012  6F7A               	movwf	(sprintf@sp+1)& (0+255),b
 14401  013014  C09C  F07B         	movff	LCDDisplay@text,sprintf@f
 14402  013018  C09D  F07C         	movff	LCDDisplay@text+1,sprintf@f+1
 14403  01301C  C09E  F07D         	movff	LCDDisplay@value,?_sprintf+4
 14404  013020  6B7E               	clrf	(?_sprintf+5)& (0+255),b
 14405  013022  EC00  F080         	call	_sprintf	;wreg free
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;lcd.c: 345: LCD_Update();
 14409  013026  EC9A  F094         	call	_LCD_Update	;wreg free
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;lcd.c: 348: if( delay )
 14413  01302A  519F               	movf	LCDDisplay@delay& (0+255),w,b
 14414  01302C  B4D8               	btfsc	status,2,c
 14415  01302E  0012               	return	
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;lcd.c: 349: {
 14419                           ;lcd.c: 350: uint8_t i;
 14420                           ;lcd.c: 351: for(i = 0; i < 8; i++)
 14421  013030  6BA0               	clrf	LCDDisplay@i& (0+255),b
 14422  013032                     l12782:
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;lcd.c: 352: {
 14426                           ;lcd.c: 353: DELAY_ms(250);
 14427  013032  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
 14428  013034  0EFA               	movlw	250
 14429  013036  6F6D               	movwf	DELAY_ms@ms& (0+255),b
 14430  013038  EC40  F091         	call	_DELAY_ms	;wreg free
 14431                           
 14432                           ; BSR set to: 0
 14433  01303C  2BA0               	incf	LCDDisplay@i& (0+255),f,b
 14434                           
 14435                           ; BSR set to: 0
 14436  01303E  0E07               	movlw	7
 14437  013040  65A0               	cpfsgt	LCDDisplay@i& (0+255),b
 14438  013042  D7F7               	goto	l12782
 14439  013044  0C07               	retlw	7
 14440  013046                     __end_of_LCDDisplay:
 14441                           	opt stack 0
 14442                           tblptru	equ	0xFF8
 14443                           tblptrh	equ	0xFF7
 14444                           tblptrl	equ	0xFF6
 14445                           tablat	equ	0xFF5
 14446                           prodh	equ	0xFF4
 14447                           prodl	equ	0xFF3
 14448                           intcon	equ	0xFF2
 14449                           intcon2	equ	0xFF1
 14450                           intcon3	equ	0xFF0
 14451                           postinc0	equ	0xFEE
 14452                           wreg	equ	0xFE8
 14453                           indf1	equ	0xFE7
 14454                           postinc1	equ	0xFE6
 14455                           postdec1	equ	0xFE5
 14456                           fsr1h	equ	0xFE2
 14457                           fsr1l	equ	0xFE1
 14458                           indf2	equ	0xFDF
 14459                           postinc2	equ	0xFDE
 14460                           postdec2	equ	0xFDD
 14461                           fsr2h	equ	0xFDA
 14462                           fsr2l	equ	0xFD9
 14463                           status	equ	0xFD8
 14464                           
 14465 ;; *************** function _sprintf *****************
 14466 ;; Defined at:
 14467 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;  sp              2   25[BANK0 ] PTR unsigned char 
 14470 ;;		 -> LCDText(33), 
 14471 ;;  f               2   27[BANK0 ] PTR const unsigned char 
 14472 ;;		 -> STR_15(21), STR_14(18), STR_13(20), STR_12(17), 
 14473 ;;		 -> STR_11(22), STR_10(22), STR_9(25), STR_8(22), 
 14474 ;;		 -> STR_7(17), STR_6(16), STR_5(31), STR_4(32), 
 14475 ;;		 -> STR_3(29), STR_2(17), STR_1(17), 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  idx             1   41[BANK0 ] unsigned char 
 14478 ;;  tmpval          4    0        struct .
 14479 ;;  flag            2   58[BANK0 ] unsigned short 
 14480 ;;  width           2   55[BANK0 ] int 
 14481 ;;  val             2   52[BANK0 ] unsigned int 
 14482 ;;  len             2   49[BANK0 ] unsigned int 
 14483 ;;  c               1   57[BANK0 ] char 
 14484 ;;  prec            1   54[BANK0 ] char 
 14485 ;;  ap              1   51[BANK0 ] PTR void [1]
 14486 ;;		 -> ?_sprintf(2), 
 14487 ;;  cp              1   48[BANK0 ] PTR const unsigned char 
 14488 ;;		 -> sprintf@c(1), 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  2   25[BANK0 ] int 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14493 ;; Tracked objects:
 14494 ;;		On entry : F/0
 14495 ;;		On exit  : F/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14498 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14502 ;;Total ram usage:       35 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    6
 14505 ;; This function calls:
 14506 ;;		___lwdiv
 14507 ;;		___lwmod
 14508 ;;		___wmul
 14509 ;;		_isdigit
 14510 ;; This function is called by:
 14511 ;;		_LCDTRXCount
 14512 ;;		_LCDDisplay
 14513 ;;		_Source_END_DEVICE_INFO
 14514 ;;		_run_star_demo
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text68
 14519  010000                     __ptext68:
 14520                           	opt stack 0
 14521  010000                     _sprintf:
 14522                           	opt stack 22
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;doprnt.c: 494: va_list ap;
 14526                           ;doprnt.c: 499: signed char c;
 14527                           ;doprnt.c: 501: int width;
 14528                           ;doprnt.c: 506: signed char prec;
 14529                           ;doprnt.c: 508: unsigned short flag;
 14530                           ;doprnt.c: 523: union {
 14531                           ;doprnt.c: 524: unsigned long vd;
 14532                           ;doprnt.c: 525: double integ;
 14533                           ;doprnt.c: 526: } tmpval;
 14534                           ;doprnt.c: 528: unsigned int val;
 14535                           ;doprnt.c: 529: unsigned len;
 14536                           ;doprnt.c: 530: const char * cp;
 14537                           ;doprnt.c: 533: *ap = __va_start();
 14538                           
 14539                           ; BSR set to: 0
 14540                           ;incstack = 0
 14541  010000  0E7D               	movlw	low (?_sprintf+4)
 14542  010002  6F93               	movwf	sprintf@ap& (0+255),b
 14543                           
 14544                           ;doprnt.c: 536: while(c = *f++) {
 14545  010004  D3A0               	goto	l9512
 14546  010006                     l9190:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 538: if(c != '%')
 14550  010006  0E25               	movlw	37
 14551  010008  1999               	xorwf	sprintf@c& (0+255),w,b
 14552  01000A  E009               	bz	l1189
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;doprnt.c: 540: {
 14556                           ;doprnt.c: 541: ((*sp++ = (c)));
 14557  01000C  C079  FFD9         	movff	sprintf@sp,fsr2l
 14558  010010  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 14559  010014  C099  FFDF         	movff	sprintf@c,indf2
 14560                           
 14561                           ; BSR set to: 0
 14562  010018  4B79               	infsnz	sprintf@sp& (0+255),f,b
 14563  01001A  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 14564                           
 14565                           ;doprnt.c: 542: continue;
 14566  01001C  D394               	goto	l9512
 14567  01001E                     l1189:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;doprnt.c: 543: }
 14571                           ;doprnt.c: 546: width = 0;
 14572  01001E  6B97               	clrf	sprintf@width& (0+255),b
 14573  010020  6B98               	clrf	(sprintf@width+1)& (0+255),b
 14574                           
 14575                           ;doprnt.c: 548: flag = 0;
 14576  010022  6B9A               	clrf	sprintf@flag& (0+255),b
 14577  010024  6B9B               	clrf	(sprintf@flag+1)& (0+255),b
 14578  010026  D009               	goto	l9206
 14579  010028                     l9196:
 14580                           
 14581                           ; BSR set to: 0
 14582                           ;doprnt.c: 554: flag |= 0x08;
 14583  010028  879A               	bsf	sprintf@flag& (0+255),3,b
 14584  01002A  D005               	goto	L1
 14585  01002C                     l9198:
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;doprnt.c: 561: flag |= 0x01;
 14589  01002C  819A               	bsf	sprintf@flag& (0+255),0,b
 14590  01002E  D003               	goto	L1
 14591  010030                     l9200:
 14592                           
 14593                           ; BSR set to: 0
 14594                           ;doprnt.c: 574: flag |= 0x800;
 14595  010030  879B               	bsf	(sprintf@flag+1)& (0+255),3,b
 14596  010032  D001               	goto	L1
 14597  010034                     l9202:
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;doprnt.c: 580: flag |= 0x04;
 14601  010034  859A               	bsf	sprintf@flag& (0+255),2,b
 14602  010036                     L1:
 14603                           
 14604                           ;doprnt.c: 581: f++;
 14605  010036  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14606  010038  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14607  01003A                     l9206:
 14608                           
 14609                           ; BSR set to: 0
 14610  01003A  C07B  FFF6         	movff	sprintf@f,tblptrl
 14611  01003E  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14612  010042                     	if	0	;tblptru may be non-zero
 14613  010042                     	endif
 14614  010042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14615  010042  0E00               	movlw	low (__mediumconst shr (0+16))
 14616  010044  6EF8               	movwf	tblptru,c
 14617  010046                     	endif
 14618  010046  0008               	tblrd		*
 14619  010048  50F5               	movf	tablat,w,c
 14620                           
 14621                           ; Switch size 1, requested type "speed"
 14622                           ; Number of cases is 4, Range of values is 32 to 48
 14623                           ; switch strategies available:
 14624                           ; Name         Instructions Cycles
 14625                           ; simple_byte           13     7 (average)
 14626                           ;	Chosen strategy is simple_byte
 14627  01004A  0A20               	xorlw	32	; case 32
 14628  01004C  E0EF               	bz	l9198
 14629  01004E  0A03               	xorlw	3	; case 35
 14630  010050  E0EF               	bz	l9200
 14631  010052  0A0E               	xorlw	14	; case 45
 14632  010054  E0E9               	bz	l9196
 14633  010056  0A1D               	xorlw	29	; case 48
 14634  010058  E0ED               	bz	l9202
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;doprnt.c: 593: if(flag & 0x08)
 14638  01005A  B79A               	btfsc	sprintf@flag& (0+255),3,b
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;doprnt.c: 594: flag &= ~0x04;
 14642  01005C  959A               	bcf	sprintf@flag& (0+255),2,b
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14646  01005E  C07B  FFF6         	movff	sprintf@f,tblptrl
 14647  010062  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14648  010066                     	if	0	;tblptru may be non-zero
 14649  010066                     	endif
 14650  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14651  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 14652  010068  6EF8               	movwf	tblptru,c
 14653  01006A                     	endif
 14654  01006A  0008               	tblrd		*
 14655  01006C  50F5               	movf	tablat,w,c
 14656  01006E  ECDC  F09A         	call	_isdigit
 14657  010072  E332               	bnc	l9222
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;doprnt.c: 598: width = 0;
 14661  010074  6B97               	clrf	sprintf@width& (0+255),b
 14662  010076  6B98               	clrf	(sprintf@width+1)& (0+255),b
 14663  010078                     l9214:
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 600: width *= 10;
 14667  010078  C097  F06D         	movff	sprintf@width,___wmul@multiplier
 14668  01007C  C098  F06E         	movff	sprintf@width+1,___wmul@multiplier+1
 14669  010080  6B70               	clrf	(___wmul@multiplicand+1)& (0+255),b
 14670  010082  0E0A               	movlw	10
 14671  010084  6F6F               	movwf	___wmul@multiplicand& (0+255),b
 14672  010086  EC75  F09A         	call	___wmul	;wreg free
 14673  01008A  C06D  F097         	movff	?___wmul,sprintf@width
 14674  01008E  C06E  F098         	movff	?___wmul+1,sprintf@width+1
 14675                           
 14676                           ; BSR set to: 0
 14677                           ;doprnt.c: 601: width += *f++ - '0';
 14678  010092  0ED0               	movlw	208
 14679  010094  6F85               	movwf	??_sprintf& (0+255),b
 14680  010096  6986               	setf	(??_sprintf+1)& (0+255),b
 14681  010098  C07B  FFF6         	movff	sprintf@f,tblptrl
 14682  01009C  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14683  0100A0                     	if	0	;tblptru may be non-zero
 14684  0100A0                     	endif
 14685  0100A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14686  0100A0  0E00               	movlw	low (__mediumconst shr (0+16))
 14687  0100A2  6EF8               	movwf	tblptru,c
 14688  0100A4                     	endif
 14689  0100A4  0008               	tblrd		*
 14690  0100A6  50F5               	movf	tablat,w,c
 14691  0100A8  6F87               	movwf	(??_sprintf+2)& (0+255),b
 14692  0100AA  6B88               	clrf	(??_sprintf+3)& (0+255),b
 14693  0100AC  5185               	movf	??_sprintf& (0+255),w,b
 14694  0100AE  2787               	addwf	(??_sprintf+2)& (0+255),f,b
 14695  0100B0  5186               	movf	(??_sprintf+1)& (0+255),w,b
 14696  0100B2  2388               	addwfc	(??_sprintf+3)& (0+255),f,b
 14697  0100B4  5187               	movf	(??_sprintf+2)& (0+255),w,b
 14698  0100B6  2797               	addwf	sprintf@width& (0+255),f,b
 14699  0100B8  5188               	movf	(??_sprintf+3)& (0+255),w,b
 14700  0100BA  2398               	addwfc	(sprintf@width+1)& (0+255),f,b
 14701                           
 14702                           ; BSR set to: 0
 14703  0100BC  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14704  0100BE  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14708  0100C0  C07B  FFF6         	movff	sprintf@f,tblptrl
 14709  0100C4  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14710  0100C8                     	if	0	;tblptru may be non-zero
 14711  0100C8                     	endif
 14712  0100C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14713  0100C8  0E00               	movlw	low (__mediumconst shr (0+16))
 14714  0100CA  6EF8               	movwf	tblptru,c
 14715  0100CC                     	endif
 14716  0100CC  0008               	tblrd		*
 14717  0100CE  50F5               	movf	tablat,w,c
 14718  0100D0  ECDC  F09A         	call	_isdigit
 14719  0100D4  E316               	bnc	l9230
 14720  0100D6  D7D0               	goto	l9214
 14721  0100D8                     l9222:
 14722                           
 14723                           ; BSR set to: 0
 14724  0100D8  C07B  FFF6         	movff	sprintf@f,tblptrl
 14725  0100DC  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14726  0100E0                     	if	0	;tblptru may be non-zero
 14727  0100E0                     	endif
 14728  0100E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14729  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 14730  0100E2  6EF8               	movwf	tblptru,c
 14731  0100E4                     	endif
 14732  0100E4  0008               	tblrd		*
 14733  0100E6  50F5               	movf	tablat,w,c
 14734  0100E8  0A2A               	xorlw	42
 14735  0100EA  E10B               	bnz	l9230
 14736                           
 14737                           ; BSR set to: 0
 14738                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 14739  0100EC  5193               	movf	sprintf@ap& (0+255),w,b
 14740  0100EE  6ED9               	movwf	fsr2l,c
 14741  0100F0  6ADA               	clrf	fsr2h,c
 14742  0100F2  CFDE F097          	movff	postinc2,sprintf@width
 14743  0100F6  CFDD F098          	movff	postdec2,sprintf@width+1
 14744                           
 14745                           ; BSR set to: 0
 14746  0100FA  0E02               	movlw	2
 14747  0100FC  2793               	addwf	sprintf@ap& (0+255),f,b
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 606: f++;
 14751  0100FE  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14752  010100  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14753  010102                     l9230:
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;doprnt.c: 608: }
 14757                           ;doprnt.c: 611: if(*f == '.') {
 14758  010102  C07B  FFF6         	movff	sprintf@f,tblptrl
 14759  010106  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14760  01010A                     	if	0	;tblptru may be non-zero
 14761  01010A                     	endif
 14762  01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14763  01010A  0E00               	movlw	low (__mediumconst shr (0+16))
 14764  01010C  6EF8               	movwf	tblptru,c
 14765  01010E                     	endif
 14766  01010E  0008               	tblrd		*
 14767  010110  50F5               	movf	tablat,w,c
 14768  010112  0A2E               	xorlw	46
 14769  010114  E136               	bnz	l1205
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;doprnt.c: 612: flag |= 0x4000;
 14773  010116  8D9B               	bsf	(sprintf@flag+1)& (0+255),6,b
 14774                           
 14775                           ;doprnt.c: 613: f++;
 14776  010118  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14777  01011A  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;doprnt.c: 615: if(*f == '*') {
 14781  01011C  C07B  FFF6         	movff	sprintf@f,tblptrl
 14782  010120  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14783  010124                     	if	0	;tblptru may be non-zero
 14784  010124                     	endif
 14785  010124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14786  010124  0E00               	movlw	low (__mediumconst shr (0+16))
 14787  010126  6EF8               	movwf	tblptru,c
 14788  010128                     	endif
 14789  010128  0008               	tblrd		*
 14790  01012A  50F5               	movf	tablat,w,c
 14791  01012C  0A2A               	xorlw	42
 14792  01012E  E10A               	bnz	l1206
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 14796  010130  5193               	movf	sprintf@ap& (0+255),w,b
 14797  010132  6ED9               	movwf	fsr2l,c
 14798  010134  6ADA               	clrf	fsr2h,c
 14799  010136  50DF               	movf	indf2,w,c
 14800  010138  6F96               	movwf	sprintf@prec& (0+255),b
 14801                           
 14802                           ; BSR set to: 0
 14803  01013A  0E02               	movlw	2
 14804  01013C  2793               	addwf	sprintf@ap& (0+255),f,b
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;doprnt.c: 617: f++;
 14808  01013E  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14809  010140  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14810                           
 14811                           ;doprnt.c: 618: } else
 14812  010142  D08E               	goto	l9298
 14813  010144                     l1206:
 14814                           
 14815                           ; BSR set to: 0
 14816                           ;doprnt.c: 620: {
 14817                           ;doprnt.c: 621: prec = 0;
 14818  010144  6B96               	clrf	sprintf@prec& (0+255),b
 14819                           
 14820                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14821  010146  D011               	goto	l9246
 14822  010148                     l9242:
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14826  010148  C07B  FFF6         	movff	sprintf@f,tblptrl
 14827  01014C  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14828  010150                     	if	0	;tblptru may be non-zero
 14829  010150                     	endif
 14830  010150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14831  010150  0E00               	movlw	low (__mediumconst shr (0+16))
 14832  010152  6EF8               	movwf	tblptru,c
 14833  010154                     	endif
 14834  010154  0008               	tblrd		*
 14835  010156  CFF5 F085          	movff	tablat,??_sprintf
 14836  01015A  5196               	movf	sprintf@prec& (0+255),w,b
 14837  01015C  0D0A               	mullw	10
 14838  01015E  50F3               	movf	prodl,w,c
 14839  010160  2585               	addwf	??_sprintf& (0+255),w,b
 14840  010162  0FD0               	addlw	208
 14841  010164  6F96               	movwf	sprintf@prec& (0+255),b
 14842                           
 14843                           ; BSR set to: 0
 14844  010166  4B7B               	infsnz	sprintf@f& (0+255),f,b
 14845  010168  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 14846  01016A                     l9246:
 14847                           
 14848                           ; BSR set to: 0
 14849  01016A  C07B  FFF6         	movff	sprintf@f,tblptrl
 14850  01016E  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 14851  010172                     	if	0	;tblptru may be non-zero
 14852  010172                     	endif
 14853  010172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14854  010172  0E00               	movlw	low (__mediumconst shr (0+16))
 14855  010174  6EF8               	movwf	tblptru,c
 14856  010176                     	endif
 14857  010176  0008               	tblrd		*
 14858  010178  50F5               	movf	tablat,w,c
 14859  01017A  ECDC  F09A         	call	_isdigit
 14860  01017E  E370               	bnc	l9298
 14861  010180  D7E3               	goto	l9242
 14862  010182                     l1205:
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;doprnt.c: 626: prec = 0;
 14866  010182  6B96               	clrf	sprintf@prec& (0+255),b
 14867  010184  D06D               	goto	l9298
 14868  010186                     l9248:
 14869                           
 14870                           ; BSR set to: 0
 14871                           ;doprnt.c: 691: flag |= 0x40;
 14872  010186  8D9A               	bsf	sprintf@flag& (0+255),6,b
 14873                           
 14874                           ;doprnt.c: 693: break;
 14875  010188  D08A               	goto	l9300
 14876  01018A                     l9250:
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;doprnt.c: 714: flag |= 0x20;
 14880  01018A  8B9A               	bsf	sprintf@flag& (0+255),5,b
 14881  01018C                     l1220:
 14882                           
 14883                           ; BSR set to: 0
 14884                           ;doprnt.c: 721: flag |= 0x80;
 14885  01018C  8F9A               	bsf	sprintf@flag& (0+255),7,b
 14886                           
 14887                           ;doprnt.c: 723: break;
 14888  01018E  D087               	goto	l9300
 14889  010190                     l9252:
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;doprnt.c: 753: if(prec && prec < len)
 14893  010190  5196               	movf	sprintf@prec& (0+255),w,b
 14894  010192  E00F               	bz	l9258
 14895                           
 14896                           ; BSR set to: 0
 14897  010194  C096  F085         	movff	sprintf@prec,??_sprintf
 14898  010198  6B86               	clrf	(??_sprintf+1)& (0+255),b
 14899  01019A  BF85               	btfsc	??_sprintf& (0+255),7,b
 14900  01019C  0786               	decf	(??_sprintf+1)& (0+255),f,b
 14901  01019E  5191               	movf	sprintf@len& (0+255),w,b
 14902  0101A0  5D85               	subwf	??_sprintf& (0+255),w,b
 14903  0101A2  5192               	movf	(sprintf@len+1)& (0+255),w,b
 14904  0101A4  5986               	subwfb	(??_sprintf+1)& (0+255),w,b
 14905  0101A6  E205               	bc	l9258
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;doprnt.c: 754: len = prec;
 14909  0101A8  5196               	movf	sprintf@prec& (0+255),w,b
 14910  0101AA  6F91               	movwf	sprintf@len& (0+255),b
 14911  0101AC  6B92               	clrf	(sprintf@len+1)& (0+255),b
 14912  0101AE  BF91               	btfsc	sprintf@len& (0+255),7,b
 14913  0101B0  0792               	decf	(sprintf@len+1)& (0+255),f,b
 14914  0101B2                     l9258:
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;doprnt.c: 757: if(width > len)
 14918  0101B2  5197               	movf	sprintf@width& (0+255),w,b
 14919  0101B4  5D91               	subwf	sprintf@len& (0+255),w,b
 14920  0101B6  5198               	movf	(sprintf@width+1)& (0+255),w,b
 14921  0101B8  5992               	subwfb	(sprintf@len+1)& (0+255),w,b
 14922  0101BA  E205               	bc	l1223
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;doprnt.c: 758: width -= len;
 14926  0101BC  5191               	movf	sprintf@len& (0+255),w,b
 14927  0101BE  5F97               	subwf	sprintf@width& (0+255),f,b
 14928  0101C0  5192               	movf	(sprintf@len+1)& (0+255),w,b
 14929  0101C2  5B98               	subwfb	(sprintf@width+1)& (0+255),f,b
 14930  0101C4  D002               	goto	l1224
 14931  0101C6                     l1223:
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;doprnt.c: 759: else
 14935                           ;doprnt.c: 760: width = 0;
 14936  0101C6  6B97               	clrf	sprintf@width& (0+255),b
 14937  0101C8  6B98               	clrf	(sprintf@width+1)& (0+255),b
 14938  0101CA                     l1224:
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;doprnt.c: 762: if(!(flag & 0x08))
 14942  0101CA  B79A               	btfsc	sprintf@flag& (0+255),3,b
 14943  0101CC  D01D               	goto	l9276
 14944  0101CE  D008               	goto	l9268
 14945  0101D0                     l9264:
 14946                           
 14947                           ; BSR set to: 0
 14948                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14949  0101D0  C079  FFD9         	movff	sprintf@sp,fsr2l
 14950  0101D4  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 14951  0101D8  0E20               	movlw	32
 14952  0101DA  6EDF               	movwf	indf2,c
 14953                           
 14954                           ; BSR set to: 0
 14955  0101DC  4B79               	infsnz	sprintf@sp& (0+255),f,b
 14956  0101DE  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 14957  0101E0                     l9268:
 14958                           
 14959                           ; BSR set to: 0
 14960  0101E0  0797               	decf	sprintf@width& (0+255),f,b
 14961  0101E2  A0D8               	btfss	status,0,c
 14962  0101E4  0798               	decf	(sprintf@width+1)& (0+255),f,b
 14963  0101E6  2997               	incf	sprintf@width& (0+255),w,b
 14964  0101E8  E1F3               	bnz	l9264
 14965  0101EA  2998               	incf	(sprintf@width+1)& (0+255),w,b
 14966  0101EC  E00D               	bz	l9276
 14967  0101EE  D7F0               	goto	l9264
 14968  0101F0                     l9270:
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14972  0101F0  5190               	movf	sprintf@cp& (0+255),w,b
 14973  0101F2  6ED9               	movwf	fsr2l,c
 14974  0101F4  6ADA               	clrf	fsr2h,c
 14975  0101F6  C079  FFE1         	movff	sprintf@sp,fsr1l
 14976  0101FA  C07A  FFE2         	movff	sprintf@sp+1,fsr1h
 14977  0101FE  CFDF FFE7          	movff	indf2,indf1
 14978                           
 14979                           ; BSR set to: 0
 14980  010202  2B90               	incf	sprintf@cp& (0+255),f,b
 14981                           
 14982                           ; BSR set to: 0
 14983  010204  4B79               	infsnz	sprintf@sp& (0+255),f,b
 14984  010206  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 14985  010208                     l9276:
 14986                           
 14987                           ; BSR set to: 0
 14988  010208  0791               	decf	sprintf@len& (0+255),f,b
 14989  01020A  A0D8               	btfss	status,0,c
 14990  01020C  0792               	decf	(sprintf@len+1)& (0+255),f,b
 14991  01020E  2991               	incf	sprintf@len& (0+255),w,b
 14992  010210  E1EF               	bnz	l9270
 14993  010212  2992               	incf	(sprintf@len+1)& (0+255),w,b
 14994  010214  E1ED               	bnz	l9270
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;doprnt.c: 770: if(flag & 0x08)
 14998  010216  A79A               	btfss	sprintf@flag& (0+255),3,b
 14999  010218  D296               	goto	l9512
 15000  01021A  D008               	goto	l9284
 15001  01021C                     l9280:
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;doprnt.c: 772: ((*sp++ = (' ')));
 15005  01021C  C079  FFD9         	movff	sprintf@sp,fsr2l
 15006  010220  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15007  010224  0E20               	movlw	32
 15008  010226  6EDF               	movwf	indf2,c
 15009                           
 15010                           ; BSR set to: 0
 15011  010228  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15012  01022A  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15013  01022C                     l9284:
 15014                           
 15015                           ; BSR set to: 0
 15016  01022C  0797               	decf	sprintf@width& (0+255),f,b
 15017  01022E  A0D8               	btfss	status,0,c
 15018  010230  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15019  010232  2997               	incf	sprintf@width& (0+255),w,b
 15020  010234  E1F3               	bnz	l9280
 15021  010236  2998               	incf	(sprintf@width+1)& (0+255),w,b
 15022  010238  E101 D285          	bz	l9512
 15023  01023C  D7EF               	goto	l9280
 15024  01023E                     l9286:
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15028  01023E  5193               	movf	sprintf@ap& (0+255),w,b
 15029  010240  6ED9               	movwf	fsr2l,c
 15030  010242  6ADA               	clrf	fsr2h,c
 15031  010244  50DF               	movf	indf2,w,c
 15032  010246  6F99               	movwf	sprintf@c& (0+255),b
 15033                           
 15034                           ; BSR set to: 0
 15035  010248  0E02               	movlw	2
 15036  01024A  2793               	addwf	sprintf@ap& (0+255),f,b
 15037  01024C                     l9290:
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;doprnt.c: 805: cp = (char *)&c;
 15041  01024C  0E99               	movlw	low sprintf@c
 15042  01024E  6F90               	movwf	sprintf@cp& (0+255),b
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;doprnt.c: 806: len = 1;
 15046  010250  0E00               	movlw	0
 15047  010252  6F92               	movwf	(sprintf@len+1)& (0+255),b
 15048  010254  0E01               	movlw	1
 15049  010256  6F91               	movwf	sprintf@len& (0+255),b
 15050                           
 15051                           ;doprnt.c: 807: goto dostring;
 15052  010258  D79B               	goto	l9252
 15053  01025A                     l9294:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;doprnt.c: 818: flag |= 0xC0;
 15057  01025A  0EC0               	movlw	192
 15058  01025C  139A               	iorwf	sprintf@flag& (0+255),f,b
 15059                           
 15060                           ;doprnt.c: 819: break;
 15061  01025E  D01F               	goto	l9300
 15062  010260                     l9298:
 15063                           
 15064                           ; BSR set to: 0
 15065  010260  C07B  FFF6         	movff	sprintf@f,tblptrl
 15066  010264  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 15067  010268  4B7B               	infsnz	sprintf@f& (0+255),f,b
 15068  01026A  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 15069  01026C                     	if	0	;tblptru may be non-zero
 15070  01026C                     	endif
 15071  01026C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15072  01026C  0E00               	movlw	low (__mediumconst shr (0+16))
 15073  01026E  6EF8               	movwf	tblptru,c
 15074  010270                     	endif
 15075  010270  0008               	tblrd		*
 15076  010272  CFF5 F099          	movff	tablat,sprintf@c
 15077  010276  5199               	movf	sprintf@c& (0+255),w,b
 15078                           
 15079                           ; Switch size 1, requested type "speed"
 15080                           ; Number of cases is 8, Range of values is 0 to 120
 15081                           ; switch strategies available:
 15082                           ; Name         Instructions Cycles
 15083                           ; simple_byte           25    13 (average)
 15084                           ;	Chosen strategy is simple_byte
 15085  010278  E101 D273          	bz	l9514
 15086  01027C  0A58               	xorlw	88	; case 88
 15087  01027E  E085               	bz	l9250
 15088  010280  0A3B               	xorlw	59	; case 99
 15089  010282  E0DD               	bz	l9286
 15090  010284  0A07               	xorlw	7	; case 100
 15091  010286  E00B               	bz	l9300
 15092  010288  0A0D               	xorlw	13	; case 105
 15093  01028A  E009               	bz	l9300
 15094  01028C  0A06               	xorlw	6	; case 111
 15095  01028E  E101 D77A          	bz	l9248
 15096  010292  0A1A               	xorlw	26	; case 117
 15097  010294  E0E2               	bz	l9294
 15098  010296  0A0D               	xorlw	13	; case 120
 15099  010298  E101 D778          	bz	l1220
 15100  01029C  D7D7               	goto	l9290
 15101  01029E                     l9300:
 15102                           
 15103                           ; BSR set to: 0
 15104                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15105  01029E  C09A  F085         	movff	sprintf@flag,??_sprintf
 15106  0102A2  0EC0               	movlw	192
 15107  0102A4  1785               	andwf	??_sprintf& (0+255),f,b
 15108  0102A6  E112               	bnz	l9312
 15109                           
 15110                           ; BSR set to: 0
 15111                           ;doprnt.c: 1253: {
 15112                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 15113  0102A8  5193               	movf	sprintf@ap& (0+255),w,b
 15114  0102AA  6ED9               	movwf	fsr2l,c
 15115  0102AC  6ADA               	clrf	fsr2h,c
 15116  0102AE  CFDE F094          	movff	postinc2,sprintf@val
 15117  0102B2  CFDD F095          	movff	postdec2,sprintf@val+1
 15118                           
 15119                           ; BSR set to: 0
 15120  0102B6  0E02               	movlw	2
 15121  0102B8  2793               	addwf	sprintf@ap& (0+255),f,b
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;doprnt.c: 1261: if((int)val < 0) {
 15125  0102BA  AF95               	btfss	(sprintf@val+1)& (0+255),7,b
 15126  0102BC  D010               	goto	l9316
 15127                           
 15128                           ; BSR set to: 0
 15129                           ;doprnt.c: 1262: flag |= 0x03;
 15130  0102BE  0E03               	movlw	3
 15131  0102C0  139A               	iorwf	sprintf@flag& (0+255),f,b
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;doprnt.c: 1263: val = -val;
 15135  0102C2  6D94               	negf	sprintf@val& (0+255),b
 15136  0102C4  1F95               	comf	(sprintf@val+1)& (0+255),f,b
 15137  0102C6  B0D8               	btfsc	status,0,c
 15138  0102C8  2B95               	incf	(sprintf@val+1)& (0+255),f,b
 15139  0102CA  D009               	goto	l9316
 15140  0102CC                     l9312:
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;doprnt.c: 1268: else
 15144                           ;doprnt.c: 1273: {
 15145                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15146  0102CC  5193               	movf	sprintf@ap& (0+255),w,b
 15147  0102CE  6ED9               	movwf	fsr2l,c
 15148  0102D0  6ADA               	clrf	fsr2h,c
 15149  0102D2  CFDE F094          	movff	postinc2,sprintf@val
 15150  0102D6  CFDD F095          	movff	postdec2,sprintf@val+1
 15151                           
 15152                           ; BSR set to: 0
 15153  0102DA  0E02               	movlw	2
 15154  0102DC  2793               	addwf	sprintf@ap& (0+255),f,b
 15155  0102DE                     l9316:
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;doprnt.c: 1287: }
 15159                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15160  0102DE  5196               	movf	sprintf@prec& (0+255),w,b
 15161  0102E0  E150               	bnz	l9366
 15162                           
 15163                           ; BSR set to: 0
 15164  0102E2  5194               	movf	sprintf@val& (0+255),w,b
 15165  0102E4  1195               	iorwf	(sprintf@val+1)& (0+255),w,b
 15166  0102E6  E14D               	bnz	l9366
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;doprnt.c: 1291: prec++;
 15170  0102E8  2B96               	incf	sprintf@prec& (0+255),f,b
 15171  0102EA  D04B               	goto	l9366
 15172  0102EC                     l9322:
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;doprnt.c: 1302: case 0xC0:
 15176                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15177  0102EC  0E01               	movlw	1
 15178  0102EE  6F99               	movwf	sprintf@c& (0+255),b
 15179  0102F0                     l9324:
 15180                           
 15181                           ; BSR set to: 0
 15182  0102F0  0E05               	movlw	5
 15183  0102F2  1999               	xorwf	sprintf@c& (0+255),w,b
 15184  0102F4  E04F               	bz	l9368
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;doprnt.c: 1306: if(val < dpowers[c])
 15188  0102F6  5199               	movf	sprintf@c& (0+255),w,b
 15189  0102F8  0D02               	mullw	2
 15190  0102FA  0E9B               	movlw	low _dpowers
 15191  0102FC  24F3               	addwf	prodl,w,c
 15192  0102FE  6EF6               	movwf	tblptrl,c
 15193  010300  0EFE               	movlw	high _dpowers
 15194  010302  20F4               	addwfc	prodh,w,c
 15195  010304  6EF7               	movwf	tblptrh,c
 15196  010306                     	if	1	;There are 3 active tblptr bytes
 15197  010306  6AF8               	clrf	tblptru,c
 15198  010308  0E00               	movlw	low (__mediumconst shr (0+16))
 15199  01030A  22F8               	addwfc	tblptru,f,c
 15200  01030C                     	endif
 15201  01030C  0009               	tblrd		*+
 15202  01030E  50F5               	movf	tablat,w,c
 15203  010310  5D94               	subwf	sprintf@val& (0+255),w,b
 15204  010312  0009               	tblrd		*+
 15205  010314  50F5               	movf	tablat,w,c
 15206  010316  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
 15207  010318  E33D               	bnc	l9368
 15208                           
 15209                           ; BSR set to: 0
 15210  01031A  2B99               	incf	sprintf@c& (0+255),f,b
 15211  01031C  D7E9               	goto	l9324
 15212  01031E                     l9336:
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15216  01031E  0E01               	movlw	1
 15217  010320  6F99               	movwf	sprintf@c& (0+255),b
 15218  010322                     l9338:
 15219                           
 15220                           ; BSR set to: 0
 15221  010322  0E04               	movlw	4
 15222  010324  1999               	xorwf	sprintf@c& (0+255),w,b
 15223  010326  E036               	bz	l9368
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15227  010328  5199               	movf	sprintf@c& (0+255),w,b
 15228  01032A  0D02               	mullw	2
 15229  01032C  0EA5               	movlw	low _hexpowers
 15230  01032E  24F3               	addwf	prodl,w,c
 15231  010330  6EF6               	movwf	tblptrl,c
 15232  010332  0EFE               	movlw	high _hexpowers
 15233  010334  20F4               	addwfc	prodh,w,c
 15234  010336  6EF7               	movwf	tblptrh,c
 15235  010338                     	if	1	;There are 3 active tblptr bytes
 15236  010338  6AF8               	clrf	tblptru,c
 15237  01033A  0E00               	movlw	low (__mediumconst shr (0+16))
 15238  01033C  22F8               	addwfc	tblptru,f,c
 15239  01033E                     	endif
 15240  01033E  0009               	tblrd		*+
 15241  010340  50F5               	movf	tablat,w,c
 15242  010342  5D94               	subwf	sprintf@val& (0+255),w,b
 15243  010344  0009               	tblrd		*+
 15244  010346  50F5               	movf	tablat,w,c
 15245  010348  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
 15246  01034A  E324               	bnc	l9368
 15247                           
 15248                           ; BSR set to: 0
 15249  01034C  2B99               	incf	sprintf@c& (0+255),f,b
 15250  01034E  D7E9               	goto	l9338
 15251  010350                     l9350:
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 15255  010350  0E01               	movlw	1
 15256  010352  6F99               	movwf	sprintf@c& (0+255),b
 15257  010354                     l9352:
 15258                           
 15259                           ; BSR set to: 0
 15260  010354  0E06               	movlw	6
 15261  010356  1999               	xorwf	sprintf@c& (0+255),w,b
 15262  010358  E01D               	bz	l9368
 15263                           
 15264                           ; BSR set to: 0
 15265                           ;doprnt.c: 1329: if(val < octpowers[c])
 15266  01035A  5199               	movf	sprintf@c& (0+255),w,b
 15267  01035C  0D02               	mullw	2
 15268  01035E  0E8F               	movlw	low _octpowers
 15269  010360  24F3               	addwf	prodl,w,c
 15270  010362  6EF6               	movwf	tblptrl,c
 15271  010364  0EFE               	movlw	high _octpowers
 15272  010366  20F4               	addwfc	prodh,w,c
 15273  010368  6EF7               	movwf	tblptrh,c
 15274  01036A                     	if	1	;There are 3 active tblptr bytes
 15275  01036A  6AF8               	clrf	tblptru,c
 15276  01036C  0E00               	movlw	low (__mediumconst shr (0+16))
 15277  01036E  22F8               	addwfc	tblptru,f,c
 15278  010370                     	endif
 15279  010370  0009               	tblrd		*+
 15280  010372  50F5               	movf	tablat,w,c
 15281  010374  5D94               	subwf	sprintf@val& (0+255),w,b
 15282  010376  0009               	tblrd		*+
 15283  010378  50F5               	movf	tablat,w,c
 15284  01037A  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
 15285  01037C  E30B               	bnc	l9368
 15286                           
 15287                           ; BSR set to: 0
 15288  01037E  2B99               	incf	sprintf@c& (0+255),f,b
 15289  010380  D7E9               	goto	l9352
 15290  010382                     l9366:
 15291                           
 15292                           ; BSR set to: 0
 15293  010382  519A               	movf	sprintf@flag& (0+255),w,b
 15294  010384  0BC0               	andlw	192
 15295                           
 15296                           ; Switch size 1, requested type "speed"
 15297                           ; Number of cases is 4, Range of values is 0 to 192
 15298                           ; switch strategies available:
 15299                           ; Name         Instructions Cycles
 15300                           ; simple_byte           13     7 (average)
 15301                           ;	Chosen strategy is simple_byte
 15302  010386  E0B2               	bz	l9322
 15303  010388  0A40               	xorlw	64	; case 64
 15304  01038A  E0E2               	bz	l9350
 15305  01038C  0AC0               	xorlw	192	; case 128
 15306  01038E  E0C7               	bz	l9336
 15307  010390  0A40               	xorlw	64	; case 192
 15308  010392  E0AC               	bz	l9322
 15309  010394                     l9368:
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;doprnt.c: 1339: if(c < prec)
 15313  010394  5199               	movf	sprintf@c& (0+255),w,b
 15314  010396  0A80               	xorlw	128
 15315  010398  6F85               	movwf	??_sprintf& (0+255),b
 15316  01039A  5196               	movf	sprintf@prec& (0+255),w,b
 15317  01039C  0A80               	xorlw	128
 15318  01039E  5D85               	subwf	??_sprintf& (0+255),w,b
 15319  0103A0  E203               	bc	l9372
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;doprnt.c: 1340: c = prec;
 15323  0103A2  C096  F099         	movff	sprintf@prec,sprintf@c
 15324  0103A6  D009               	goto	l9376
 15325  0103A8                     l9372:
 15326                           
 15327                           ; BSR set to: 0
 15328                           ;doprnt.c: 1341: else if(prec < c)
 15329  0103A8  5196               	movf	sprintf@prec& (0+255),w,b
 15330  0103AA  0A80               	xorlw	128
 15331  0103AC  6F85               	movwf	??_sprintf& (0+255),b
 15332  0103AE  5199               	movf	sprintf@c& (0+255),w,b
 15333  0103B0  0A80               	xorlw	128
 15334  0103B2  5D85               	subwf	??_sprintf& (0+255),w,b
 15335  0103B4  E202               	bc	l9376
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;doprnt.c: 1342: prec = c;
 15339  0103B6  C099  F096         	movff	sprintf@c,sprintf@prec
 15340  0103BA                     l9376:
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;doprnt.c: 1345: if(width && flag & 0x03)
 15344  0103BA  5197               	movf	sprintf@width& (0+255),w,b
 15345  0103BC  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15346  0103BE  E008               	bz	l9382
 15347                           
 15348                           ; BSR set to: 0
 15349  0103C0  C09A  F085         	movff	sprintf@flag,??_sprintf
 15350  0103C4  0E03               	movlw	3
 15351  0103C6  1785               	andwf	??_sprintf& (0+255),f,b
 15352  0103C8  E003               	bz	l9382
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;doprnt.c: 1346: width--;
 15356  0103CA  0797               	decf	sprintf@width& (0+255),f,b
 15357  0103CC  A0D8               	btfss	status,0,c
 15358  0103CE  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15359  0103D0                     l9382:
 15360                           
 15361                           ; BSR set to: 0
 15362                           ;doprnt.c: 1348: if(flag & 0x4000) {
 15363  0103D0  AD9B               	btfss	(sprintf@flag+1)& (0+255),6,b
 15364  0103D2  D013               	goto	l9388
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;doprnt.c: 1349: if(width > prec)
 15368  0103D4  0E80               	movlw	128
 15369  0103D6  BF96               	btfsc	sprintf@prec& (0+255),7,b
 15370  0103D8  0E7F               	movlw	127
 15371  0103DA  6F85               	movwf	??_sprintf& (0+255),b
 15372  0103DC  5197               	movf	sprintf@width& (0+255),w,b
 15373  0103DE  5D96               	subwf	sprintf@prec& (0+255),w,b
 15374  0103E0  5198               	movf	(sprintf@width+1)& (0+255),w,b
 15375  0103E2  0A80               	xorlw	128
 15376  0103E4  5985               	subwfb	??_sprintf& (0+255),w,b
 15377  0103E6  E207               	bc	l1263
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;doprnt.c: 1350: width -= prec;
 15381  0103E8  5196               	movf	sprintf@prec& (0+255),w,b
 15382  0103EA  5F97               	subwf	sprintf@width& (0+255),f,b
 15383  0103EC  0E00               	movlw	0
 15384  0103EE  BF96               	btfsc	sprintf@prec& (0+255),7,b
 15385  0103F0  0EFF               	movlw	255
 15386  0103F2  5B98               	subwfb	(sprintf@width+1)& (0+255),f,b
 15387  0103F4  D002               	goto	l9388
 15388  0103F6                     l1263:
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;doprnt.c: 1351: else
 15392                           ;doprnt.c: 1352: width = 0;
 15393  0103F6  6B97               	clrf	sprintf@width& (0+255),b
 15394  0103F8  6B98               	clrf	(sprintf@width+1)& (0+255),b
 15395  0103FA                     l9388:
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;doprnt.c: 1353: }
 15399                           ;doprnt.c: 1357: if((flag & (
 15400                           ;doprnt.c: 1359: 0x04|
 15401                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 15402  0103FA  0EC4               	movlw	196
 15403  0103FC  6F85               	movwf	??_sprintf& (0+255),b
 15404  0103FE  0E08               	movlw	8
 15405  010400  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15406  010402  C09A  F087         	movff	sprintf@flag,??_sprintf+2
 15407  010406  C09B  F088         	movff	sprintf@flag+1,??_sprintf+3
 15408  01040A  5185               	movf	??_sprintf& (0+255),w,b
 15409  01040C  1787               	andwf	(??_sprintf+2)& (0+255),f,b
 15410  01040E  5186               	movf	(??_sprintf+1)& (0+255),w,b
 15411  010410  1788               	andwf	(??_sprintf+3)& (0+255),f,b
 15412  010412  0E40               	movlw	64
 15413  010414  1987               	xorwf	(??_sprintf+2)& (0+255),w,b
 15414  010416  E10A               	bnz	l9394
 15415  010418  0E08               	movlw	8
 15416  01041A  1988               	xorwf	(??_sprintf+3)& (0+255),w,b
 15417  01041C  E107               	bnz	l9394
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;doprnt.c: 1362: if(width)
 15421  01041E  5197               	movf	sprintf@width& (0+255),w,b
 15422  010420  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15423  010422  E024               	bz	l9400
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;doprnt.c: 1363: width--;
 15427  010424  0797               	decf	sprintf@width& (0+255),f,b
 15428  010426  A0D8               	btfss	status,0,c
 15429  010428  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15430  01042A  D020               	goto	l9400
 15431  01042C                     l9394:
 15432                           
 15433                           ; BSR set to: 0
 15434                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15435  01042C  0EC0               	movlw	192
 15436  01042E  6F85               	movwf	??_sprintf& (0+255),b
 15437  010430  0E08               	movlw	8
 15438  010432  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15439  010434  C09A  F087         	movff	sprintf@flag,??_sprintf+2
 15440  010438  C09B  F088         	movff	sprintf@flag+1,??_sprintf+3
 15441  01043C  5185               	movf	??_sprintf& (0+255),w,b
 15442  01043E  1787               	andwf	(??_sprintf+2)& (0+255),f,b
 15443  010440  5186               	movf	(??_sprintf+1)& (0+255),w,b
 15444  010442  1788               	andwf	(??_sprintf+3)& (0+255),f,b
 15445  010444  0E80               	movlw	128
 15446  010446  1987               	xorwf	(??_sprintf+2)& (0+255),w,b
 15447  010448  E111               	bnz	l9400
 15448  01044A  0E08               	movlw	8
 15449  01044C  1988               	xorwf	(??_sprintf+3)& (0+255),w,b
 15450  01044E  E10E               	bnz	l9400
 15451                           
 15452                           ; BSR set to: 0
 15453                           ;doprnt.c: 1372: if(width > 2)
 15454  010450  BF98               	btfsc	(sprintf@width+1)& (0+255),7,b
 15455  010452  D00A               	goto	l1269
 15456  010454  5198               	movf	(sprintf@width+1)& (0+255),w,b
 15457  010456  E103               	bnz	u8830
 15458  010458  0E03               	movlw	3
 15459  01045A  5D97               	subwf	sprintf@width& (0+255),w,b
 15460  01045C  E305               	bnc	l1269
 15461  01045E                     u8830:
 15462                           
 15463                           ; BSR set to: 0
 15464                           ;doprnt.c: 1373: width -= 2;
 15465  01045E  0EFE               	movlw	254
 15466  010460  2797               	addwf	sprintf@width& (0+255),f,b
 15467  010462  0EFF               	movlw	255
 15468  010464  2398               	addwfc	(sprintf@width+1)& (0+255),f,b
 15469  010466  D002               	goto	l9400
 15470  010468                     l1269:
 15471                           
 15472                           ; BSR set to: 0
 15473                           ;doprnt.c: 1374: else
 15474                           ;doprnt.c: 1375: width = 0;
 15475  010468  6B97               	clrf	sprintf@width& (0+255),b
 15476  01046A  6B98               	clrf	(sprintf@width+1)& (0+255),b
 15477  01046C                     l9400:
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;doprnt.c: 1376: }
 15481                           ;doprnt.c: 1381: if(width > c)
 15482  01046C  0E80               	movlw	128
 15483  01046E  BF99               	btfsc	sprintf@c& (0+255),7,b
 15484  010470  0E7F               	movlw	127
 15485  010472  6F85               	movwf	??_sprintf& (0+255),b
 15486  010474  5197               	movf	sprintf@width& (0+255),w,b
 15487  010476  5D99               	subwf	sprintf@c& (0+255),w,b
 15488  010478  5198               	movf	(sprintf@width+1)& (0+255),w,b
 15489  01047A  0A80               	xorlw	128
 15490  01047C  5985               	subwfb	??_sprintf& (0+255),w,b
 15491  01047E  E207               	bc	l1271
 15492                           
 15493                           ; BSR set to: 0
 15494                           ;doprnt.c: 1382: width -= c;
 15495  010480  5199               	movf	sprintf@c& (0+255),w,b
 15496  010482  5F97               	subwf	sprintf@width& (0+255),f,b
 15497  010484  0E00               	movlw	0
 15498  010486  BF99               	btfsc	sprintf@c& (0+255),7,b
 15499  010488  0EFF               	movlw	255
 15500  01048A  5B98               	subwfb	(sprintf@width+1)& (0+255),f,b
 15501  01048C  D002               	goto	l1272
 15502  01048E                     l1271:
 15503                           
 15504                           ; BSR set to: 0
 15505                           ;doprnt.c: 1383: else
 15506                           ;doprnt.c: 1384: width = 0;
 15507  01048E  6B97               	clrf	sprintf@width& (0+255),b
 15508  010490  6B98               	clrf	(sprintf@width+1)& (0+255),b
 15509  010492                     l1272:
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;doprnt.c: 1387: if(flag & 0x04) {
 15513  010492  A59A               	btfss	sprintf@flag& (0+255),2,b
 15514  010494  D04F               	goto	l9438
 15515                           
 15516                           ; BSR set to: 0
 15517                           ;doprnt.c: 1392: if(flag & 0x03)
 15518  010496  C09A  F085         	movff	sprintf@flag,??_sprintf
 15519  01049A  0E03               	movlw	3
 15520  01049C  1785               	andwf	??_sprintf& (0+255),f,b
 15521  01049E  E009               	bz	l1274
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 15525  0104A0  C079  FFD9         	movff	sprintf@sp,fsr2l
 15526  0104A4  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15527  0104A8  0E2D               	movlw	45
 15528  0104AA  6EDF               	movwf	indf2,c
 15529  0104AC                     l9408:
 15530                           
 15531                           ; BSR set to: 0
 15532  0104AC  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15533  0104AE  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15534  0104B0  D031               	goto	l9430
 15535  0104B2                     l1274:
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;doprnt.c: 1396: else
 15539                           ;doprnt.c: 1399: if(flag & 0x01)
 15540  0104B2  A19A               	btfss	sprintf@flag& (0+255),0,b
 15541  0104B4  D006               	goto	l9414
 15542                           
 15543                           ; BSR set to: 0
 15544                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 15545  0104B6  C079  FFD9         	movff	sprintf@sp,fsr2l
 15546  0104BA  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15547  0104BE  0E20               	movlw	32
 15548  0104C0  D7F4               	goto	L2
 15549  0104C2                     l9414:
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15553  0104C2  0EC0               	movlw	192
 15554  0104C4  6F85               	movwf	??_sprintf& (0+255),b
 15555  0104C6  0E08               	movlw	8
 15556  0104C8  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15557  0104CA  C09A  F087         	movff	sprintf@flag,??_sprintf+2
 15558  0104CE  C09B  F088         	movff	sprintf@flag+1,??_sprintf+3
 15559  0104D2  5185               	movf	??_sprintf& (0+255),w,b
 15560  0104D4  1787               	andwf	(??_sprintf+2)& (0+255),f,b
 15561  0104D6  5186               	movf	(??_sprintf+1)& (0+255),w,b
 15562  0104D8  1788               	andwf	(??_sprintf+3)& (0+255),f,b
 15563  0104DA  0E80               	movlw	128
 15564  0104DC  1987               	xorwf	(??_sprintf+2)& (0+255),w,b
 15565  0104DE  E11A               	bnz	l9430
 15566  0104E0  0E08               	movlw	8
 15567  0104E2  1988               	xorwf	(??_sprintf+3)& (0+255),w,b
 15568  0104E4  E117               	bnz	l9430
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 15572  0104E6  C079  FFD9         	movff	sprintf@sp,fsr2l
 15573  0104EA  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15574  0104EE  0E30               	movlw	48
 15575  0104F0  6EDF               	movwf	indf2,c
 15576                           
 15577                           ; BSR set to: 0
 15578  0104F2  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15579  0104F4  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 15583  0104F6  BB9A               	btfsc	sprintf@flag& (0+255),5,b
 15584  0104F8  D003               	goto	l9424
 15585                           
 15586                           ; BSR set to: 0
 15587  0104FA  6B8B               	clrf	(_sprintf$3189+1)& (0+255),b
 15588  0104FC  0E78               	movlw	120
 15589  0104FE  D002               	goto	L3
 15590  010500                     l9424:
 15591                           
 15592                           ; BSR set to: 0
 15593  010500  6B8B               	clrf	(_sprintf$3189+1)& (0+255),b
 15594  010502  0E58               	movlw	88
 15595  010504                     L3:
 15596  010504  6F8A               	movwf	_sprintf$3189& (0+255),b
 15597                           
 15598                           ; BSR set to: 0
 15599  010506  C079  FFD9         	movff	sprintf@sp,fsr2l
 15600  01050A  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15601  01050E  C08A  FFDF         	movff	_sprintf$3189,indf2
 15602  010512  D7CC               	goto	l9408
 15603  010514                     l9430:
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;doprnt.c: 1412: }
 15607                           ;doprnt.c: 1415: if(width)
 15608  010514  5197               	movf	sprintf@width& (0+255),w,b
 15609  010516  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15610  010518  E101 D0FD          	bz	l9502
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 15614  01051C  C079  FFD9         	movff	sprintf@sp,fsr2l
 15615  010520  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15616  010524  0E30               	movlw	48
 15617  010526  6EDF               	movwf	indf2,c
 15618                           
 15619                           ; BSR set to: 0
 15620  010528  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15621  01052A  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15622                           
 15623                           ; BSR set to: 0
 15624                           ;doprnt.c: 1418: while(--width);
 15625  01052C  0797               	decf	sprintf@width& (0+255),f,b
 15626  01052E  A0D8               	btfss	status,0,c
 15627  010530  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15628  010532  D7F0               	goto	l9430
 15629  010534                     l9438:
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;doprnt.c: 1422: {
 15633                           ;doprnt.c: 1424: if(width
 15634                           ;doprnt.c: 1426: && !(flag & 0x08)
 15635                           ;doprnt.c: 1428: )
 15636  010534  5197               	movf	sprintf@width& (0+255),w,b
 15637  010536  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15638  010538  E010               	bz	l9448
 15639                           
 15640                           ; BSR set to: 0
 15641  01053A  B79A               	btfsc	sprintf@flag& (0+255),3,b
 15642  01053C  D00E               	goto	l9448
 15643  01053E                     l9442:
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15647  01053E  C079  FFD9         	movff	sprintf@sp,fsr2l
 15648  010542  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15649  010546  0E20               	movlw	32
 15650  010548  6EDF               	movwf	indf2,c
 15651                           
 15652                           ; BSR set to: 0
 15653  01054A  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15654  01054C  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;doprnt.c: 1431: while(--width);
 15658  01054E  0797               	decf	sprintf@width& (0+255),f,b
 15659  010550  A0D8               	btfss	status,0,c
 15660  010552  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15661  010554  5197               	movf	sprintf@width& (0+255),w,b
 15662  010556  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15663  010558  E1F2               	bnz	l9442
 15664  01055A                     l9448:
 15665                           
 15666                           ; BSR set to: 0
 15667                           ;doprnt.c: 1438: if(flag & 0x03)
 15668  01055A  C09A  F085         	movff	sprintf@flag,??_sprintf
 15669  01055E  0E03               	movlw	3
 15670  010560  1785               	andwf	??_sprintf& (0+255),f,b
 15671  010562  E009               	bz	l1290
 15672                           
 15673                           ; BSR set to: 0
 15674                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15675  010564  C079  FFD9         	movff	sprintf@sp,fsr2l
 15676  010568  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15677  01056C  0E2D               	movlw	45
 15678  01056E  6EDF               	movwf	indf2,c
 15679                           
 15680                           ; BSR set to: 0
 15681  010570  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15682  010572  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15683  010574  D008               	goto	l9458
 15684  010576                     l1290:
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;doprnt.c: 1443: else if(flag & 0x01)
 15688  010576  A19A               	btfss	sprintf@flag& (0+255),0,b
 15689  010578  D006               	goto	l9458
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 15693  01057A  C079  FFD9         	movff	sprintf@sp,fsr2l
 15694  01057E  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15695  010582  0E20               	movlw	32
 15696  010584  D7F4               	goto	L4
 15697  010586                     l9458:
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 15701  010586  0EC0               	movlw	192
 15702  010588  6F85               	movwf	??_sprintf& (0+255),b
 15703  01058A  0E08               	movlw	8
 15704  01058C  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15705  01058E  C09A  F087         	movff	sprintf@flag,??_sprintf+2
 15706  010592  C09B  F088         	movff	sprintf@flag+1,??_sprintf+3
 15707  010596  5185               	movf	??_sprintf& (0+255),w,b
 15708  010598  1787               	andwf	(??_sprintf+2)& (0+255),f,b
 15709  01059A  5186               	movf	(??_sprintf+1)& (0+255),w,b
 15710  01059C  1788               	andwf	(??_sprintf+3)& (0+255),f,b
 15711  01059E  0E40               	movlw	64
 15712  0105A0  1987               	xorwf	(??_sprintf+2)& (0+255),w,b
 15713  0105A2  E10C               	bnz	l9464
 15714  0105A4  0E08               	movlw	8
 15715  0105A6  1988               	xorwf	(??_sprintf+3)& (0+255),w,b
 15716  0105A8  E109               	bnz	l9464
 15717                           
 15718                           ; BSR set to: 0
 15719                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 15720  0105AA  C079  FFD9         	movff	sprintf@sp,fsr2l
 15721  0105AE  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15722  0105B2  0E30               	movlw	48
 15723  0105B4  6EDF               	movwf	indf2,c
 15724  0105B6                     l9462:
 15725                           
 15726                           ; BSR set to: 0
 15727  0105B6  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15728  0105B8  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15729  0105BA  D0AD               	goto	l9502
 15730  0105BC                     l9464:
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;doprnt.c: 1450: else
 15734                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15735  0105BC  0EC0               	movlw	192
 15736  0105BE  6F85               	movwf	??_sprintf& (0+255),b
 15737  0105C0  0E08               	movlw	8
 15738  0105C2  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15739  0105C4  C09A  F087         	movff	sprintf@flag,??_sprintf+2
 15740  0105C8  C09B  F088         	movff	sprintf@flag+1,??_sprintf+3
 15741  0105CC  5185               	movf	??_sprintf& (0+255),w,b
 15742  0105CE  1787               	andwf	(??_sprintf+2)& (0+255),f,b
 15743  0105D0  5186               	movf	(??_sprintf+1)& (0+255),w,b
 15744  0105D2  1788               	andwf	(??_sprintf+3)& (0+255),f,b
 15745  0105D4  0E80               	movlw	128
 15746  0105D6  1987               	xorwf	(??_sprintf+2)& (0+255),w,b
 15747  0105D8  E11B               	bnz	l1286
 15748  0105DA  0E08               	movlw	8
 15749  0105DC  1988               	xorwf	(??_sprintf+3)& (0+255),w,b
 15750  0105DE  E001 D09A          	bnz	l9502
 15751                           
 15752                           ; BSR set to: 0
 15753                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 15754  0105E2  C079  FFD9         	movff	sprintf@sp,fsr2l
 15755  0105E6  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15756  0105EA  0E30               	movlw	48
 15757  0105EC  6EDF               	movwf	indf2,c
 15758                           
 15759                           ; BSR set to: 0
 15760  0105EE  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15761  0105F0  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 15765  0105F2  BB9A               	btfsc	sprintf@flag& (0+255),5,b
 15766  0105F4  D003               	goto	l9474
 15767                           
 15768                           ; BSR set to: 0
 15769  0105F6  6B8D               	clrf	(_sprintf$3190+1)& (0+255),b
 15770  0105F8  0E78               	movlw	120
 15771  0105FA  D002               	goto	L5
 15772  0105FC                     l9474:
 15773                           
 15774                           ; BSR set to: 0
 15775  0105FC  6B8D               	clrf	(_sprintf$3190+1)& (0+255),b
 15776  0105FE  0E58               	movlw	88
 15777  010600                     L5:
 15778  010600  6F8C               	movwf	_sprintf$3190& (0+255),b
 15779                           
 15780                           ; BSR set to: 0
 15781  010602  C079  FFD9         	movff	sprintf@sp,fsr2l
 15782  010606  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15783  01060A  C08C  FFDF         	movff	_sprintf$3190,indf2
 15784  01060E  D7D3               	goto	l9462
 15785  010610                     l1286:
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;doprnt.c: 1466: }
 15789                           ;doprnt.c: 1469: }
 15790                           ;doprnt.c: 1474: while(prec--) {
 15791  010610  D082               	goto	l9502
 15792  010612                     l9480:
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;doprnt.c: 1486: case 0xC0:
 15796                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15797  010612  5196               	movf	sprintf@prec& (0+255),w,b
 15798  010614  0D02               	mullw	2
 15799  010616  0E9B               	movlw	low _dpowers
 15800  010618  24F3               	addwf	prodl,w,c
 15801  01061A  6EF6               	movwf	tblptrl,c
 15802  01061C  0EFE               	movlw	high _dpowers
 15803  01061E  20F4               	addwfc	prodh,w,c
 15804  010620  6EF7               	movwf	tblptrh,c
 15805  010622                     	if	1	;There are 3 active tblptr bytes
 15806  010622  6AF8               	clrf	tblptru,c
 15807  010624  0E00               	movlw	low (__mediumconst shr (0+16))
 15808  010626  22F8               	addwfc	tblptru,f,c
 15809  010628                     	endif
 15810  010628  0009               	tblrd		*+
 15811  01062A  CFF5 F06F          	movff	tablat,___lwdiv@divisor
 15812  01062E  000A               	tblrd		*-
 15813  010630  CFF5 F070          	movff	tablat,___lwdiv@divisor+1
 15814  010634  C094  F06D         	movff	sprintf@val,___lwdiv@dividend
 15815  010638  C095  F06E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15816  01063C  ECC0  F097         	call	___lwdiv	;wreg free
 15817  010640  C06D  F074         	movff	?___lwdiv,___lwmod@dividend
 15818  010644  C06E  F075         	movff	?___lwdiv+1,___lwmod@dividend+1
 15819  010648  6B77               	clrf	(___lwmod@divisor+1)& (0+255),b
 15820  01064A  0E0A               	movlw	10
 15821  01064C  6F76               	movwf	___lwmod@divisor& (0+255),b
 15822  01064E  EC23  F098         	call	___lwmod	;wreg free
 15823  010652  5174               	movf	?___lwmod& (0+255),w,b
 15824  010654  D04D               	goto	L6
 15825  010656                     l9482:
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;doprnt.c: 1499: {
 15829                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15830  010656  C094  F06D         	movff	sprintf@val,___lwdiv@dividend
 15831  01065A  C095  F06E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15832  01065E  5196               	movf	sprintf@prec& (0+255),w,b
 15833  010660  0D02               	mullw	2
 15834  010662  0EA5               	movlw	low _hexpowers
 15835  010664  24F3               	addwf	prodl,w,c
 15836  010666  6EF6               	movwf	tblptrl,c
 15837  010668  0EFE               	movlw	high _hexpowers
 15838  01066A  20F4               	addwfc	prodh,w,c
 15839  01066C  6EF7               	movwf	tblptrh,c
 15840  01066E                     	if	1	;There are 3 active tblptr bytes
 15841  01066E  6AF8               	clrf	tblptru,c
 15842  010670  0E00               	movlw	low (__mediumconst shr (0+16))
 15843  010672  22F8               	addwfc	tblptru,f,c
 15844  010674                     	endif
 15845  010674  0009               	tblrd		*+
 15846  010676  CFF5 F06F          	movff	tablat,___lwdiv@divisor
 15847  01067A  000A               	tblrd		*-
 15848  01067C  CFF5 F070          	movff	tablat,___lwdiv@divisor+1
 15849  010680  ECC0  F097         	call	___lwdiv	;wreg free
 15850  010684  516D               	movf	?___lwdiv& (0+255),w,b
 15851  010686  0B0F               	andlw	15
 15852  010688  6F89               	movwf	sprintf@idx& (0+255),b
 15853                           
 15854                           ; BSR set to: 0
 15855                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15856  01068A  BB9A               	btfsc	sprintf@flag& (0+255),5,b
 15857  01068C  D004               	goto	l9488
 15858                           
 15859                           ; BSR set to: 0
 15860  01068E  0E9A               	movlw	low STR_17
 15861  010690  6F8E               	movwf	_sprintf$3196& (0+255),b
 15862  010692  0EFF               	movlw	high STR_17
 15863  010694  D003               	goto	L7
 15864  010696                     l9488:
 15865                           
 15866                           ; BSR set to: 0
 15867  010696  0E89               	movlw	low STR_16
 15868  010698  6F8E               	movwf	_sprintf$3196& (0+255),b
 15869  01069A  0EFF               	movlw	high STR_16
 15870  01069C                     L7:
 15871  01069C  6F8F               	movwf	(_sprintf$3196+1)& (0+255),b
 15872                           
 15873                           ; BSR set to: 0
 15874  01069E  5189               	movf	sprintf@idx& (0+255),w,b
 15875  0106A0  258E               	addwf	_sprintf$3196& (0+255),w,b
 15876  0106A2  6F85               	movwf	??_sprintf& (0+255),b
 15877  0106A4  0E00               	movlw	0
 15878  0106A6  218F               	addwfc	(_sprintf$3196+1)& (0+255),w,b
 15879  0106A8  6F86               	movwf	(??_sprintf+1)& (0+255),b
 15880  0106AA  C085  FFF6         	movff	??_sprintf,tblptrl
 15881  0106AE  C086  FFF7         	movff	??_sprintf+1,tblptrh
 15882  0106B2                     	if	0	;tblptru may be non-zero
 15883  0106B2                     	endif
 15884  0106B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15885  0106B2  0E00               	movlw	low (__mediumconst shr (0+16))
 15886  0106B4  6EF8               	movwf	tblptru,c
 15887  0106B6                     	endif
 15888  0106B6  0008               	tblrd		*
 15889  0106B8  CFF5 F099          	movff	tablat,sprintf@c
 15890                           
 15891                           ;doprnt.c: 1508: }
 15892                           ;doprnt.c: 1510: break;
 15893  0106BC  D025               	goto	l9498
 15894  0106BE                     l9492:
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 15898  0106BE  C094  F06D         	movff	sprintf@val,___lwdiv@dividend
 15899  0106C2  C095  F06E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15900  0106C6  5196               	movf	sprintf@prec& (0+255),w,b
 15901  0106C8  0D02               	mullw	2
 15902  0106CA  0E8F               	movlw	low _octpowers
 15903  0106CC  24F3               	addwf	prodl,w,c
 15904  0106CE  6EF6               	movwf	tblptrl,c
 15905  0106D0  0EFE               	movlw	high _octpowers
 15906  0106D2  20F4               	addwfc	prodh,w,c
 15907  0106D4  6EF7               	movwf	tblptrh,c
 15908  0106D6                     	if	1	;There are 3 active tblptr bytes
 15909  0106D6  6AF8               	clrf	tblptru,c
 15910  0106D8  0E00               	movlw	low (__mediumconst shr (0+16))
 15911  0106DA  22F8               	addwfc	tblptru,f,c
 15912  0106DC                     	endif
 15913  0106DC  0009               	tblrd		*+
 15914  0106DE  CFF5 F06F          	movff	tablat,___lwdiv@divisor
 15915  0106E2  000A               	tblrd		*-
 15916  0106E4  CFF5 F070          	movff	tablat,___lwdiv@divisor+1
 15917  0106E8  ECC0  F097         	call	___lwdiv	;wreg free
 15918  0106EC  516D               	movf	?___lwdiv& (0+255),w,b
 15919  0106EE  0B07               	andlw	7
 15920  0106F0                     L6:
 15921  0106F0  0F30               	addlw	48
 15922  0106F2  6F99               	movwf	sprintf@c& (0+255),b
 15923                           
 15924                           ;doprnt.c: 1520: break;
 15925  0106F4  D009               	goto	l9498
 15926  0106F6                     l9496:
 15927                           
 15928                           ; BSR set to: 0
 15929  0106F6  519A               	movf	sprintf@flag& (0+255),w,b
 15930  0106F8  0BC0               	andlw	192
 15931                           
 15932                           ; Switch size 1, requested type "speed"
 15933                           ; Number of cases is 4, Range of values is 0 to 192
 15934                           ; switch strategies available:
 15935                           ; Name         Instructions Cycles
 15936                           ; simple_byte           13     7 (average)
 15937                           ;	Chosen strategy is simple_byte
 15938  0106FA  E08B               	bz	l9480
 15939  0106FC  0A40               	xorlw	64	; case 64
 15940  0106FE  E0DF               	bz	l9492
 15941  010700  0AC0               	xorlw	192	; case 128
 15942  010702  E0A9               	bz	l9482
 15943  010704  0A40               	xorlw	64	; case 192
 15944  010706  E085               	bz	l9480
 15945  010708                     l9498:
 15946                           
 15947                           ; BSR set to: 0
 15948                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15949  010708  C079  FFD9         	movff	sprintf@sp,fsr2l
 15950  01070C  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15951  010710  C099  FFDF         	movff	sprintf@c,indf2
 15952  010714  D750               	goto	l9462
 15953  010716                     l9502:
 15954                           
 15955                           ; BSR set to: 0
 15956  010716  0796               	decf	sprintf@prec& (0+255),f,b
 15957  010718  2996               	incf	sprintf@prec& (0+255),w,b
 15958  01071A  E1ED               	bnz	l9496
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;doprnt.c: 1525: }
 15962                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 15963  01071C  B79A               	btfsc	sprintf@flag& (0+255),3,b
 15964                           
 15965                           ; BSR set to: 0
 15966  01071E  BF98               	btfsc	(sprintf@width+1)& (0+255),7,b
 15967  010720  D012               	goto	l9512
 15968  010722  5198               	movf	(sprintf@width+1)& (0+255),w,b
 15969  010724  E102               	bnz	u9030
 15970  010726  0597               	decf	sprintf@width& (0+255),w,b
 15971  010728  E30E               	bnc	l9512
 15972  01072A                     u9030:
 15973  01072A                     l9506:
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 15977  01072A  C079  FFD9         	movff	sprintf@sp,fsr2l
 15978  01072E  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 15979  010732  0E20               	movlw	32
 15980  010734  6EDF               	movwf	indf2,c
 15981                           
 15982                           ; BSR set to: 0
 15983  010736  4B79               	infsnz	sprintf@sp& (0+255),f,b
 15984  010738  2B7A               	incf	(sprintf@sp+1)& (0+255),f,b
 15985                           
 15986                           ; BSR set to: 0
 15987                           ;doprnt.c: 1531: while(--width);
 15988  01073A  0797               	decf	sprintf@width& (0+255),f,b
 15989  01073C  A0D8               	btfss	status,0,c
 15990  01073E  0798               	decf	(sprintf@width+1)& (0+255),f,b
 15991  010740  5197               	movf	sprintf@width& (0+255),w,b
 15992  010742  1198               	iorwf	(sprintf@width+1)& (0+255),w,b
 15993  010744  E1F2               	bnz	l9506
 15994  010746                     l9512:
 15995                           
 15996                           ; BSR set to: 0
 15997  010746  C07B  FFF6         	movff	sprintf@f,tblptrl
 15998  01074A  C07C  FFF7         	movff	sprintf@f+1,tblptrh
 15999  01074E  4B7B               	infsnz	sprintf@f& (0+255),f,b
 16000  010750  2B7C               	incf	(sprintf@f+1)& (0+255),f,b
 16001  010752                     	if	0	;tblptru may be non-zero
 16002  010752                     	endif
 16003  010752                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16004  010752  0E00               	movlw	low (__mediumconst shr (0+16))
 16005  010754  6EF8               	movwf	tblptru,c
 16006  010756                     	endif
 16007  010756  0008               	tblrd		*
 16008  010758  CFF5 F099          	movff	tablat,sprintf@c
 16009  01075C  5199               	movf	sprintf@c& (0+255),w,b
 16010  01075E  E001 D452          	bnz	l9190
 16011  010762                     l9514:
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;doprnt.c: 1538: *sp = 0;
 16015  010762  C079  FFD9         	movff	sprintf@sp,fsr2l
 16016  010766  C07A  FFDA         	movff	sprintf@sp+1,fsr2h
 16017  01076A  6ADF               	clrf	indf2,c
 16018                           
 16019                           ; BSR set to: 0
 16020  01076C  0C00               	retlw	0	;funcret
 16021  01076E                     __end_of_sprintf:
 16022                           	opt stack 0
 16023                           tblptru	equ	0xFF8
 16024                           tblptrh	equ	0xFF7
 16025                           tblptrl	equ	0xFF6
 16026                           tablat	equ	0xFF5
 16027                           prodh	equ	0xFF4
 16028                           prodl	equ	0xFF3
 16029                           intcon	equ	0xFF2
 16030                           intcon2	equ	0xFF1
 16031                           intcon3	equ	0xFF0
 16032                           postinc0	equ	0xFEE
 16033                           wreg	equ	0xFE8
 16034                           indf1	equ	0xFE7
 16035                           postinc1	equ	0xFE6
 16036                           postdec1	equ	0xFE5
 16037                           fsr1h	equ	0xFE2
 16038                           fsr1l	equ	0xFE1
 16039                           indf2	equ	0xFDF
 16040                           postinc2	equ	0xFDE
 16041                           postdec2	equ	0xFDD
 16042                           fsr2h	equ	0xFDA
 16043                           fsr2l	equ	0xFD9
 16044                           status	equ	0xFD8
 16045                           
 16046 ;; *************** function _isdigit *****************
 16047 ;; Defined at:
 16048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 16049 ;; Parameters:    Size  Location     Type
 16050 ;;  c               1    wreg     unsigned char 
 16051 ;; Auto vars:     Size  Location     Type
 16052 ;;  c               1   15[BANK0 ] unsigned char 
 16053 ;; Return value:  Size  Location     Type
 16054 ;;		None               void
 16055 ;; Registers used:
 16056 ;;		wreg, status,2, status,0
 16057 ;; Tracked objects:
 16058 ;;		On entry : F/0
 16059 ;;		On exit  : F/0
 16060 ;;		Unchanged: 0/0
 16061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16065 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16066 ;;Total ram usage:        3 bytes
 16067 ;; Hardware stack levels used:    1
 16068 ;; Hardware stack levels required when called:    5
 16069 ;; This function calls:
 16070 ;;		Nothing
 16071 ;; This function is called by:
 16072 ;;		_sprintf
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text69
 16077  0135B8                     __ptext69:
 16078                           	opt stack 0
 16079  0135B8                     _isdigit:
 16080                           	opt stack 22
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;incstack = 0
 16084                           ;isdigit@c stored from wreg
 16085  0135B8  6F6F               	movwf	isdigit@c& (0+255),b
 16086  0135BA  0100               	movlb	0	; () banked
 16087  0135BC  6B6E               	clrf	_isdigit$3420& (0+255),b
 16088                           
 16089                           ; BSR set to: 0
 16090  0135BE  0E3A               	movlw	58
 16091  0135C0  616F               	cpfslt	isdigit@c& (0+255),b
 16092  0135C2  D005               	goto	l8670
 16093                           
 16094                           ; BSR set to: 0
 16095  0135C4  0E2F               	movlw	47
 16096  0135C6  656F               	cpfsgt	isdigit@c& (0+255),b
 16097  0135C8  D002               	goto	l8670
 16098                           
 16099                           ; BSR set to: 0
 16100  0135CA  0E01               	movlw	1
 16101  0135CC  6F6E               	movwf	_isdigit$3420& (0+255),b
 16102  0135CE                     l8670:
 16103                           
 16104                           ; BSR set to: 0
 16105  0135CE  C06E  F06D         	movff	_isdigit$3420,??_isdigit
 16106  0135D2  316D               	rrcf	??_isdigit& (0+255),w,b
 16107                           
 16108                           ; BSR set to: 0
 16109  0135D4  0012               	return		;funcret
 16110  0135D6                     __end_of_isdigit:
 16111                           	opt stack 0
 16112                           tblptru	equ	0xFF8
 16113                           tblptrh	equ	0xFF7
 16114                           tblptrl	equ	0xFF6
 16115                           tablat	equ	0xFF5
 16116                           prodh	equ	0xFF4
 16117                           prodl	equ	0xFF3
 16118                           intcon	equ	0xFF2
 16119                           intcon2	equ	0xFF1
 16120                           intcon3	equ	0xFF0
 16121                           postinc0	equ	0xFEE
 16122                           wreg	equ	0xFE8
 16123                           indf1	equ	0xFE7
 16124                           postinc1	equ	0xFE6
 16125                           postdec1	equ	0xFE5
 16126                           fsr1h	equ	0xFE2
 16127                           fsr1l	equ	0xFE1
 16128                           indf2	equ	0xFDF
 16129                           postinc2	equ	0xFDE
 16130                           postdec2	equ	0xFDD
 16131                           fsr2h	equ	0xFDA
 16132                           fsr2l	equ	0xFD9
 16133                           status	equ	0xFD8
 16134                           
 16135 ;; *************** function ___wmul *****************
 16136 ;; Defined at:
 16137 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  multiplier      2   13[BANK0 ] unsigned int 
 16140 ;;  multiplicand    2   15[BANK0 ] unsigned int 
 16141 ;; Auto vars:     Size  Location     Type
 16142 ;;  product         2   17[BANK0 ] unsigned int 
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  2   13[BANK0 ] unsigned int 
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0, prodl, prodh
 16147 ;; Tracked objects:
 16148 ;;		On entry : F/0
 16149 ;;		On exit  : F/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16155 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16156 ;;Total ram usage:        6 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    5
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_sprintf
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           
 16166                           	psect	text70
 16167  0134EA                     __ptext70:
 16168                           	opt stack 0
 16169  0134EA                     ___wmul:
 16170                           	opt stack 22
 16171                           
 16172                           ; BSR set to: 0
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;incstack = 0
 16176  0134EA  516D               	movf	___wmul@multiplier& (0+255),w,b
 16177  0134EC  036F               	mulwf	___wmul@multiplicand& (0+255),b
 16178  0134EE  CFF3 F071          	movff	prodl,___wmul@product
 16179  0134F2  CFF4 F072          	movff	prodh,___wmul@product+1
 16180  0134F6  516D               	movf	___wmul@multiplier& (0+255),w,b
 16181  0134F8  0370               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16182  0134FA  50F3               	movf	prodl,w,c
 16183  0134FC  2772               	addwf	(___wmul@product+1)& (0+255),f,b
 16184  0134FE  516E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16185  013500  036F               	mulwf	___wmul@multiplicand& (0+255),b
 16186  013502  50F3               	movf	prodl,w,c
 16187  013504  2772               	addwf	(___wmul@product+1)& (0+255),f,b
 16188                           
 16189                           ; BSR set to: 0
 16190  013506  C071  F06D         	movff	___wmul@product,?___wmul
 16191  01350A  C072  F06E         	movff	___wmul@product+1,?___wmul+1
 16192                           
 16193                           ; BSR set to: 0
 16194  01350E  0012               	return		;funcret
 16195  013510                     __end_of___wmul:
 16196                           	opt stack 0
 16197                           tblptru	equ	0xFF8
 16198                           tblptrh	equ	0xFF7
 16199                           tblptrl	equ	0xFF6
 16200                           tablat	equ	0xFF5
 16201                           prodh	equ	0xFF4
 16202                           prodl	equ	0xFF3
 16203                           intcon	equ	0xFF2
 16204                           intcon2	equ	0xFF1
 16205                           intcon3	equ	0xFF0
 16206                           postinc0	equ	0xFEE
 16207                           wreg	equ	0xFE8
 16208                           indf1	equ	0xFE7
 16209                           postinc1	equ	0xFE6
 16210                           postdec1	equ	0xFE5
 16211                           fsr1h	equ	0xFE2
 16212                           fsr1l	equ	0xFE1
 16213                           indf2	equ	0xFDF
 16214                           postinc2	equ	0xFDE
 16215                           postdec2	equ	0xFDD
 16216                           fsr2h	equ	0xFDA
 16217                           fsr2l	equ	0xFD9
 16218                           status	equ	0xFD8
 16219                           
 16220 ;; *************** function ___lwmod *****************
 16221 ;; Defined at:
 16222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;  dividend        2   20[BANK0 ] unsigned int 
 16225 ;;  divisor         2   22[BANK0 ] unsigned int 
 16226 ;; Auto vars:     Size  Location     Type
 16227 ;;  counter         1   24[BANK0 ] unsigned char 
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  2   20[BANK0 ] unsigned int 
 16230 ;; Registers used:
 16231 ;;		wreg, status,2, status,0
 16232 ;; Tracked objects:
 16233 ;;		On entry : F/0
 16234 ;;		On exit  : F/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16240 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16241 ;;Total ram usage:        5 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    5
 16244 ;; This function calls:
 16245 ;;		Nothing
 16246 ;; This function is called by:
 16247 ;;		_sprintf
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           	psect	text71
 16252  013046                     __ptext71:
 16253                           	opt stack 0
 16254  013046                     ___lwmod:
 16255                           	opt stack 22
 16256                           
 16257                           ; BSR set to: 0
 16258                           
 16259                           ; BSR set to: 0
 16260                           ;incstack = 0
 16261  013046  5176               	movf	___lwmod@divisor& (0+255),w,b
 16262  013048  1177               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16263  01304A  E017               	bz	l1729
 16264                           
 16265                           ; BSR set to: 0
 16266  01304C  0E01               	movlw	1
 16267  01304E  6F78               	movwf	___lwmod@counter& (0+255),b
 16268  013050  D004               	goto	l8788
 16269  013052                     l8786:
 16270                           
 16271                           ; BSR set to: 0
 16272  013052  90D8               	bcf	status,0,c
 16273  013054  3776               	rlcf	___lwmod@divisor& (0+255),f,b
 16274  013056  3777               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16275  013058  2B78               	incf	___lwmod@counter& (0+255),f,b
 16276  01305A                     l8788:
 16277                           
 16278                           ; BSR set to: 0
 16279  01305A  AF77               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16280  01305C  D7FA               	goto	l8786
 16281  01305E                     l8790:
 16282                           
 16283                           ; BSR set to: 0
 16284  01305E  5176               	movf	___lwmod@divisor& (0+255),w,b
 16285  013060  5D74               	subwf	___lwmod@dividend& (0+255),w,b
 16286  013062  5177               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16287  013064  5975               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16288  013066  E304               	bnc	l8794
 16289                           
 16290                           ; BSR set to: 0
 16291  013068  5176               	movf	___lwmod@divisor& (0+255),w,b
 16292  01306A  5F74               	subwf	___lwmod@dividend& (0+255),f,b
 16293  01306C  5177               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16294  01306E  5B75               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16295  013070                     l8794:
 16296                           
 16297                           ; BSR set to: 0
 16298  013070  90D8               	bcf	status,0,c
 16299  013072  3377               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16300  013074  3376               	rrcf	___lwmod@divisor& (0+255),f,b
 16301                           
 16302                           ; BSR set to: 0
 16303  013076  2F78               	decfsz	___lwmod@counter& (0+255),f,b
 16304  013078  D7F2               	goto	l8790
 16305  01307A                     l1729:
 16306                           
 16307                           ; BSR set to: 0
 16308  01307A  C074  F074         	movff	___lwmod@dividend,?___lwmod
 16309  01307E  C075  F075         	movff	___lwmod@dividend+1,?___lwmod+1
 16310                           
 16311                           ; BSR set to: 0
 16312  013082  0012               	return		;funcret
 16313  013084                     __end_of___lwmod:
 16314                           	opt stack 0
 16315                           tblptru	equ	0xFF8
 16316                           tblptrh	equ	0xFF7
 16317                           tblptrl	equ	0xFF6
 16318                           tablat	equ	0xFF5
 16319                           prodh	equ	0xFF4
 16320                           prodl	equ	0xFF3
 16321                           intcon	equ	0xFF2
 16322                           intcon2	equ	0xFF1
 16323                           intcon3	equ	0xFF0
 16324                           postinc0	equ	0xFEE
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           fsr2h	equ	0xFDA
 16335                           fsr2l	equ	0xFD9
 16336                           status	equ	0xFD8
 16337                           
 16338 ;; *************** function ___lwdiv *****************
 16339 ;; Defined at:
 16340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;  dividend        2   13[BANK0 ] unsigned int 
 16343 ;;  divisor         2   15[BANK0 ] unsigned int 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  quotient        2   18[BANK0 ] unsigned int 
 16346 ;;  counter         1   17[BANK0 ] unsigned char 
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  2   13[BANK0 ] unsigned int 
 16349 ;; Registers used:
 16350 ;;		wreg, status,2, status,0
 16351 ;; Tracked objects:
 16352 ;;		On entry : F/0
 16353 ;;		On exit  : F/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16356 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16357 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16359 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16360 ;;Total ram usage:        7 bytes
 16361 ;; Hardware stack levels used:    1
 16362 ;; Hardware stack levels required when called:    5
 16363 ;; This function calls:
 16364 ;;		Nothing
 16365 ;; This function is called by:
 16366 ;;		_sprintf
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           	psect	text72
 16371  012F80                     __ptext72:
 16372                           	opt stack 0
 16373  012F80                     ___lwdiv:
 16374                           	opt stack 22
 16375                           
 16376                           ; BSR set to: 0
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;incstack = 0
 16380  012F80  6B72               	clrf	___lwdiv@quotient& (0+255),b
 16381  012F82  6B73               	clrf	(___lwdiv@quotient+1)& (0+255),b
 16382                           
 16383                           ; BSR set to: 0
 16384  012F84  516F               	movf	___lwdiv@divisor& (0+255),w,b
 16385  012F86  1170               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16386  012F88  E01B               	bz	l1719
 16387                           
 16388                           ; BSR set to: 0
 16389  012F8A  0E01               	movlw	1
 16390  012F8C  6F71               	movwf	___lwdiv@counter& (0+255),b
 16391  012F8E  D004               	goto	l8768
 16392  012F90                     l8766:
 16393                           
 16394                           ; BSR set to: 0
 16395  012F90  90D8               	bcf	status,0,c
 16396  012F92  376F               	rlcf	___lwdiv@divisor& (0+255),f,b
 16397  012F94  3770               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16398  012F96  2B71               	incf	___lwdiv@counter& (0+255),f,b
 16399  012F98                     l8768:
 16400                           
 16401                           ; BSR set to: 0
 16402  012F98  AF70               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16403  012F9A  D7FA               	goto	l8766
 16404  012F9C                     l8770:
 16405                           
 16406                           ; BSR set to: 0
 16407  012F9C  90D8               	bcf	status,0,c
 16408  012F9E  3772               	rlcf	___lwdiv@quotient& (0+255),f,b
 16409  012FA0  3773               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16410                           
 16411                           ; BSR set to: 0
 16412  012FA2  516F               	movf	___lwdiv@divisor& (0+255),w,b
 16413  012FA4  5D6D               	subwf	___lwdiv@dividend& (0+255),w,b
 16414  012FA6  5170               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16415  012FA8  596E               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16416  012FAA  E305               	bnc	l8778
 16417                           
 16418                           ; BSR set to: 0
 16419  012FAC  516F               	movf	___lwdiv@divisor& (0+255),w,b
 16420  012FAE  5F6D               	subwf	___lwdiv@dividend& (0+255),f,b
 16421  012FB0  5170               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16422  012FB2  5B6E               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16423                           
 16424                           ; BSR set to: 0
 16425  012FB4  8172               	bsf	___lwdiv@quotient& (0+255),0,b
 16426  012FB6                     l8778:
 16427                           
 16428                           ; BSR set to: 0
 16429  012FB6  90D8               	bcf	status,0,c
 16430  012FB8  3370               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16431  012FBA  336F               	rrcf	___lwdiv@divisor& (0+255),f,b
 16432                           
 16433                           ; BSR set to: 0
 16434  012FBC  2F71               	decfsz	___lwdiv@counter& (0+255),f,b
 16435  012FBE  D7EE               	goto	l8770
 16436  012FC0                     l1719:
 16437                           
 16438                           ; BSR set to: 0
 16439  012FC0  C072  F06D         	movff	___lwdiv@quotient,?___lwdiv
 16440  012FC4  C073  F06E         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16441                           
 16442                           ; BSR set to: 0
 16443  012FC8  0012               	return		;funcret
 16444  012FCA                     __end_of___lwdiv:
 16445                           	opt stack 0
 16446                           tblptru	equ	0xFF8
 16447                           tblptrh	equ	0xFF7
 16448                           tblptrl	equ	0xFF6
 16449                           tablat	equ	0xFF5
 16450                           prodh	equ	0xFF4
 16451                           prodl	equ	0xFF3
 16452                           intcon	equ	0xFF2
 16453                           intcon2	equ	0xFF1
 16454                           intcon3	equ	0xFF0
 16455                           postinc0	equ	0xFEE
 16456                           wreg	equ	0xFE8
 16457                           indf1	equ	0xFE7
 16458                           postinc1	equ	0xFE6
 16459                           postdec1	equ	0xFE5
 16460                           fsr1h	equ	0xFE2
 16461                           fsr1l	equ	0xFE1
 16462                           indf2	equ	0xFDF
 16463                           postinc2	equ	0xFDE
 16464                           postdec2	equ	0xFDD
 16465                           fsr2h	equ	0xFDA
 16466                           fsr2l	equ	0xFD9
 16467                           status	equ	0xFD8
 16468                           
 16469 ;; *************** function _LCD_Update *****************
 16470 ;; Defined at:
 16471 ;;		line 232 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;		None
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;  i               1   28[BANK0 ] unsigned char 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      void 
 16478 ;; Registers used:
 16479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16480 ;; Tracked objects:
 16481 ;;		On entry : F/0
 16482 ;;		On exit  : F/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16489 ;;Total ram usage:        1 bytes
 16490 ;; Hardware stack levels used:    1
 16491 ;; Hardware stack levels required when called:    8
 16492 ;; This function calls:
 16493 ;;		_LCD_d_write
 16494 ;;		_LCD_i_write
 16495 ;; This function is called by:
 16496 ;;		_LCDTRXCount
 16497 ;;		_LCDDisplay
 16498 ;;		_Source_END_DEVICE_INFO
 16499 ;;		_run_star_demo
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text73
 16504  012934                     __ptext73:
 16505                           	opt stack 0
 16506  012934                     _LCD_Update:
 16507                           	opt stack 20
 16508                           
 16509                           ; BSR set to: 0
 16510                           ;lcd.c: 234: uint8_t i;
 16511                           ;lcd.c: 236: LCD_i_write(0x80);
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;incstack = 0
 16515  012934  0E80               	movlw	128
 16516  012936  EC9B  F098         	call	_LCD_i_write
 16517                           
 16518                           ;lcd.c: 237: for(i = 0; i < 16; i++)
 16519  01293A  0100               	movlb	0	; () banked
 16520  01293C  6B7C               	clrf	LCD_Update@i& (0+255),b
 16521  01293E                     l12076:
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;lcd.c: 238: {
 16525                           ;lcd.c: 239: if( LCDText[i] == 0 )
 16526  01293E  0EB6               	movlw	low _LCDText
 16527  012940  257C               	addwf	LCD_Update@i& (0+255),w,b
 16528  012942  6ED9               	movwf	fsr2l,c
 16529  012944  6ADA               	clrf	fsr2h,c
 16530  012946  0E01               	movlw	high _LCDText
 16531  012948  22DA               	addwfc	fsr2h,f,c
 16532  01294A  50DF               	movf	indf2,w,c
 16533  01294C  E104               	bnz	l12080
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;lcd.c: 240: {
 16537                           ;lcd.c: 241: LCD_d_write(' ');
 16538  01294E  0E20               	movlw	32
 16539  012950  EC60  F098         	call	_LCD_d_write
 16540                           
 16541                           ;lcd.c: 242: }
 16542  012954  D009               	goto	l12082
 16543  012956                     l12080:
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;lcd.c: 243: else
 16547                           ;lcd.c: 244: {
 16548                           ;lcd.c: 245: LCD_d_write(LCDText[i]);
 16549  012956  0EB6               	movlw	low _LCDText
 16550  012958  257C               	addwf	LCD_Update@i& (0+255),w,b
 16551  01295A  6ED9               	movwf	fsr2l,c
 16552  01295C  6ADA               	clrf	fsr2h,c
 16553  01295E  0E01               	movlw	high _LCDText
 16554  012960  22DA               	addwfc	fsr2h,f,c
 16555  012962  50DF               	movf	indf2,w,c
 16556  012964  EC60  F098         	call	_LCD_d_write
 16557  012968                     l12082:
 16558  012968  0100               	movlb	0	; () banked
 16559  01296A  2B7C               	incf	LCD_Update@i& (0+255),f,b
 16560                           
 16561                           ; BSR set to: 0
 16562  01296C  0E0F               	movlw	15
 16563  01296E  657C               	cpfsgt	LCD_Update@i& (0+255),b
 16564  012970  D7E6               	goto	l12076
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;lcd.c: 246: }
 16568                           ;lcd.c: 247: }
 16569                           ;lcd.c: 248: LCD_i_write(0xC0);
 16570  012972  0EC0               	movlw	192
 16571  012974  EC9B  F098         	call	_LCD_i_write
 16572                           
 16573                           ;lcd.c: 249: for(i = 16; i < 32; i++)
 16574  012978  0E10               	movlw	16
 16575  01297A  0100               	movlb	0	; () banked
 16576  01297C  6F7C               	movwf	LCD_Update@i& (0+255),b
 16577  01297E                     l12094:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;lcd.c: 250: {
 16581                           ;lcd.c: 251: if( LCDText[i] == 0 )
 16582  01297E  0EB6               	movlw	low _LCDText
 16583  012980  257C               	addwf	LCD_Update@i& (0+255),w,b
 16584  012982  6ED9               	movwf	fsr2l,c
 16585  012984  6ADA               	clrf	fsr2h,c
 16586  012986  0E01               	movlw	high _LCDText
 16587  012988  22DA               	addwfc	fsr2h,f,c
 16588  01298A  50DF               	movf	indf2,w,c
 16589  01298C  E104               	bnz	l12098
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;lcd.c: 252: {
 16593                           ;lcd.c: 253: LCD_d_write(' ');
 16594  01298E  0E20               	movlw	32
 16595  012990  EC60  F098         	call	_LCD_d_write
 16596                           
 16597                           ;lcd.c: 254: }
 16598  012994  D009               	goto	l12100
 16599  012996                     l12098:
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;lcd.c: 255: else
 16603                           ;lcd.c: 256: {
 16604                           ;lcd.c: 257: LCD_d_write(LCDText[i]);
 16605  012996  0EB6               	movlw	low _LCDText
 16606  012998  257C               	addwf	LCD_Update@i& (0+255),w,b
 16607  01299A  6ED9               	movwf	fsr2l,c
 16608  01299C  6ADA               	clrf	fsr2h,c
 16609  01299E  0E01               	movlw	high _LCDText
 16610  0129A0  22DA               	addwfc	fsr2h,f,c
 16611  0129A2  50DF               	movf	indf2,w,c
 16612  0129A4  EC60  F098         	call	_LCD_d_write
 16613  0129A8                     l12100:
 16614  0129A8  0100               	movlb	0	; () banked
 16615  0129AA  2B7C               	incf	LCD_Update@i& (0+255),f,b
 16616                           
 16617                           ; BSR set to: 0
 16618  0129AC  0E1F               	movlw	31
 16619  0129AE  657C               	cpfsgt	LCD_Update@i& (0+255),b
 16620  0129B0  D7E6               	goto	l12094
 16621  0129B2  0C1F               	retlw	31
 16622  0129B4                     __end_of_LCD_Update:
 16623                           	opt stack 0
 16624                           tblptru	equ	0xFF8
 16625                           tblptrh	equ	0xFF7
 16626                           tblptrl	equ	0xFF6
 16627                           tablat	equ	0xFF5
 16628                           prodh	equ	0xFF4
 16629                           prodl	equ	0xFF3
 16630                           intcon	equ	0xFF2
 16631                           intcon2	equ	0xFF1
 16632                           intcon3	equ	0xFF0
 16633                           postinc0	equ	0xFEE
 16634                           wreg	equ	0xFE8
 16635                           indf1	equ	0xFE7
 16636                           postinc1	equ	0xFE6
 16637                           postdec1	equ	0xFE5
 16638                           fsr1h	equ	0xFE2
 16639                           fsr1l	equ	0xFE1
 16640                           indf2	equ	0xFDF
 16641                           postinc2	equ	0xFDE
 16642                           postdec2	equ	0xFDD
 16643                           fsr2h	equ	0xFDA
 16644                           fsr2l	equ	0xFD9
 16645                           status	equ	0xFD8
 16646                           
 16647 ;; *************** function _LCD_i_write *****************
 16648 ;; Defined at:
 16649 ;;		line 117 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;  v               1    wreg     unsigned char 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  v               1   27[BANK0 ] unsigned char 
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16658 ;; Tracked objects:
 16659 ;;		On entry : F/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16667 ;;Total ram usage:        1 bytes
 16668 ;; Hardware stack levels used:    1
 16669 ;; Hardware stack levels required when called:    7
 16670 ;; This function calls:
 16671 ;;		_DELAY_ms
 16672 ;;		_LCDWritePortA
 16673 ;;		_LCDWritePortB
 16674 ;; This function is called by:
 16675 ;;		_LCD_Update
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679                           	psect	text74
 16680  013136                     __ptext74:
 16681                           	opt stack 0
 16682  013136                     _LCD_i_write:
 16683                           	opt stack 20
 16684                           
 16685                           ; BSR set to: 0
 16686                           ;incstack = 0
 16687                           ;LCD_i_write@v stored from wreg
 16688  013136  6F7B               	movwf	LCD_i_write@v& (0+255),b
 16689                           
 16690                           ;lcd.c: 119: LCDWritePortA(0);
 16691  013138  0E00               	movlw	0
 16692  01313A  EC24  F099         	call	_LCDWritePortA
 16693                           
 16694                           ;lcd.c: 120: DELAY_ms(1);
 16695  01313E  0100               	movlb	0	; () banked
 16696  013140  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
 16697  013142  0E01               	movlw	1
 16698  013144  6F6D               	movwf	DELAY_ms@ms& (0+255),b
 16699  013146  EC40  F091         	call	_DELAY_ms	;wreg free
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;lcd.c: 121: LCDWritePortB(v);
 16703  01314A  517B               	movf	LCD_i_write@v& (0+255),w,b
 16704  01314C  EC0A  F099         	call	_LCDWritePortB
 16705                           
 16706                           ;lcd.c: 122: __nop();
 16707  013150  F000               	nop	
 16708                           
 16709                           ;lcd.c: 123: __nop();
 16710  013152  F000               	nop	
 16711                           
 16712                           ;lcd.c: 124: __nop();
 16713  013154  F000               	nop	
 16714                           
 16715                           ;lcd.c: 125: __nop();
 16716  013156  F000               	nop	
 16717                           
 16718                           ;lcd.c: 126: LCDWritePortA(0x40);
 16719  013158  0E40               	movlw	64
 16720  01315A  EC24  F099         	call	_LCDWritePortA
 16721                           
 16722                           ;lcd.c: 127: __nop();
 16723  01315E  F000               	nop	
 16724                           
 16725                           ;lcd.c: 128: __nop();
 16726  013160  F000               	nop	
 16727                           
 16728                           ;lcd.c: 129: __nop();
 16729  013162  F000               	nop	
 16730                           
 16731                           ;lcd.c: 130: __nop();
 16732  013164  F000               	nop	
 16733                           
 16734                           ;lcd.c: 131: __nop();
 16735  013166  F000               	nop	
 16736                           
 16737                           ;lcd.c: 132: __nop();
 16738  013168  F000               	nop	
 16739                           
 16740                           ;lcd.c: 133: LCDWritePortA(0x00);
 16741  01316A  0E00               	movlw	0
 16742  01316C  EF24  F099         	goto	_LCDWritePortA
 16743  013170                     __end_of_LCD_i_write:
 16744                           	opt stack 0
 16745                           tblptru	equ	0xFF8
 16746                           tblptrh	equ	0xFF7
 16747                           tblptrl	equ	0xFF6
 16748                           tablat	equ	0xFF5
 16749                           prodh	equ	0xFF4
 16750                           prodl	equ	0xFF3
 16751                           intcon	equ	0xFF2
 16752                           intcon2	equ	0xFF1
 16753                           intcon3	equ	0xFF0
 16754                           postinc0	equ	0xFEE
 16755                           wreg	equ	0xFE8
 16756                           indf1	equ	0xFE7
 16757                           postinc1	equ	0xFE6
 16758                           postdec1	equ	0xFE5
 16759                           fsr1h	equ	0xFE2
 16760                           fsr1l	equ	0xFE1
 16761                           indf2	equ	0xFDF
 16762                           postinc2	equ	0xFDE
 16763                           postdec2	equ	0xFDD
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _LCD_d_write *****************
 16769 ;; Defined at:
 16770 ;;		line 137 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  v               1    wreg     unsigned char 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  v               1   27[BANK0 ] unsigned char 
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  1    wreg      void 
 16777 ;; Registers used:
 16778 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16779 ;; Tracked objects:
 16780 ;;		On entry : F/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16787 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16788 ;;Total ram usage:        1 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:    7
 16791 ;; This function calls:
 16792 ;;		_DELAY_ms
 16793 ;;		_LCDWritePortA
 16794 ;;		_LCDWritePortB
 16795 ;; This function is called by:
 16796 ;;		_LCD_Update
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text75
 16801  0130C0                     __ptext75:
 16802                           	opt stack 0
 16803  0130C0                     _LCD_d_write:
 16804                           	opt stack 20
 16805                           
 16806                           ;incstack = 0
 16807                           ;LCD_d_write@v stored from wreg
 16808  0130C0  6F7B               	movwf	LCD_d_write@v& (0+255),b
 16809                           
 16810                           ;lcd.c: 139: DELAY_ms(1);
 16811  0130C2  0100               	movlb	0	; () banked
 16812  0130C4  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
 16813  0130C6  0E01               	movlw	1
 16814  0130C8  6F6D               	movwf	DELAY_ms@ms& (0+255),b
 16815  0130CA  EC40  F091         	call	_DELAY_ms	;wreg free
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;lcd.c: 140: LCDWritePortA(0x80);
 16819  0130CE  0E80               	movlw	128
 16820  0130D0  EC24  F099         	call	_LCDWritePortA
 16821                           
 16822                           ;lcd.c: 141: LCDWritePortB(v);
 16823  0130D4  0100               	movlb	0	; () banked
 16824  0130D6  517B               	movf	LCD_d_write@v& (0+255),w,b
 16825  0130D8  EC0A  F099         	call	_LCDWritePortB
 16826                           
 16827                           ;lcd.c: 142: __nop();
 16828  0130DC  F000               	nop	
 16829                           
 16830                           ;lcd.c: 143: __nop();
 16831  0130DE  F000               	nop	
 16832                           
 16833                           ;lcd.c: 144: __nop();
 16834  0130E0  F000               	nop	
 16835                           
 16836                           ;lcd.c: 145: __nop();
 16837  0130E2  F000               	nop	
 16838                           
 16839                           ;lcd.c: 146: LCDWritePortA(0xC0);
 16840  0130E4  0EC0               	movlw	192
 16841  0130E6  EC24  F099         	call	_LCDWritePortA
 16842                           
 16843                           ;lcd.c: 147: __nop();
 16844  0130EA  F000               	nop	
 16845                           
 16846                           ;lcd.c: 148: __nop();
 16847  0130EC  F000               	nop	
 16848                           
 16849                           ;lcd.c: 149: __nop();
 16850  0130EE  F000               	nop	
 16851                           
 16852                           ;lcd.c: 150: __nop();
 16853  0130F0  F000               	nop	
 16854                           
 16855                           ;lcd.c: 151: __nop();
 16856  0130F2  F000               	nop	
 16857                           
 16858                           ;lcd.c: 152: __nop();
 16859  0130F4  F000               	nop	
 16860                           
 16861                           ;lcd.c: 153: LCDWritePortA(0);
 16862  0130F6  0E00               	movlw	0
 16863  0130F8  EF24  F099         	goto	_LCDWritePortA
 16864  0130FC                     __end_of_LCD_d_write:
 16865                           	opt stack 0
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           intcon2	equ	0xFF1
 16874                           intcon3	equ	0xFF0
 16875                           postinc0	equ	0xFEE
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postinc1	equ	0xFE6
 16879                           postdec1	equ	0xFE5
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _LCD_Erase *****************
 16890 ;; Defined at:
 16891 ;;		line 278 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;		None
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      void 
 16898 ;; Registers used:
 16899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : F/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:    8
 16912 ;; This function calls:
 16913 ;;		_DELAY_ms
 16914 ;;		_LCDInitWrite
 16915 ;;		_memset
 16916 ;; This function is called by:
 16917 ;;		_LCDTRXCount
 16918 ;;		_LCDDisplay
 16919 ;;		_Source_END_DEVICE_INFO
 16920 ;;		_run_star_demo
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           	psect	text76
 16925  01349C                     __ptext76:
 16926                           	opt stack 0
 16927  01349C                     _LCD_Erase:
 16928                           	opt stack 20
 16929                           
 16930                           ;lcd.c: 281: LCDInitWrite(0x01);
 16931                           
 16932                           ;incstack = 0
 16933  01349C  0E01               	movlw	1
 16934  01349E  ECEF  F098         	call	_LCDInitWrite
 16935                           
 16936                           ;lcd.c: 282: DELAY_ms(2);
 16937  0134A2  0100               	movlb	0	; () banked
 16938  0134A4  6B6E               	clrf	(DELAY_ms@ms+1)& (0+255),b
 16939  0134A6  0E02               	movlw	2
 16940  0134A8  6F6D               	movwf	DELAY_ms@ms& (0+255),b
 16941  0134AA  EC40  F091         	call	_DELAY_ms	;wreg free
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;lcd.c: 285: memset(LCDText, ' ', 32);
 16945  0134AE  0EB6               	movlw	low _LCDText
 16946  0134B0  6F6D               	movwf	memset@p1& (0+255),b
 16947  0134B2  0E01               	movlw	high _LCDText
 16948  0134B4  6F6E               	movwf	(memset@p1+1)& (0+255),b
 16949  0134B6  6B70               	clrf	(memset@c+1)& (0+255),b
 16950  0134B8  0E20               	movlw	32
 16951  0134BA  6F6F               	movwf	memset@c& (0+255),b
 16952  0134BC  6B72               	clrf	(memset@n+1)& (0+255),b
 16953  0134BE  6F71               	movwf	memset@n& (0+255),b
 16954  0134C0  EF11  F09A         	goto	_memset	;wreg free
 16955  0134C4                     __end_of_LCD_Erase:
 16956                           	opt stack 0
 16957                           tblptru	equ	0xFF8
 16958                           tblptrh	equ	0xFF7
 16959                           tblptrl	equ	0xFF6
 16960                           tablat	equ	0xFF5
 16961                           prodh	equ	0xFF4
 16962                           prodl	equ	0xFF3
 16963                           intcon	equ	0xFF2
 16964                           intcon2	equ	0xFF1
 16965                           intcon3	equ	0xFF0
 16966                           postinc0	equ	0xFEE
 16967                           wreg	equ	0xFE8
 16968                           indf1	equ	0xFE7
 16969                           postinc1	equ	0xFE6
 16970                           postdec1	equ	0xFE5
 16971                           fsr1h	equ	0xFE2
 16972                           fsr1l	equ	0xFE1
 16973                           indf2	equ	0xFDF
 16974                           postinc2	equ	0xFDE
 16975                           postdec2	equ	0xFDD
 16976                           fsr2h	equ	0xFDA
 16977                           fsr2l	equ	0xFD9
 16978                           status	equ	0xFD8
 16979                           
 16980 ;; *************** function _memset *****************
 16981 ;; Defined at:
 16982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;  p1              2   13[BANK0 ] PTR void 
 16985 ;;		 -> LCDText(33), 
 16986 ;;  c               2   15[BANK0 ] int 
 16987 ;;  n               2   17[BANK0 ] unsigned int 
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;  p               2   19[BANK0 ] PTR unsigned char 
 16990 ;;		 -> LCDText(33), 
 16991 ;; Return value:  Size  Location     Type
 16992 ;;                  2   13[BANK0 ] PTR void 
 16993 ;; Registers used:
 16994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16995 ;; Tracked objects:
 16996 ;;		On entry : F/0
 16997 ;;		On exit  : F/0
 16998 ;;		Unchanged: 0/0
 16999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17000 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17004 ;;Total ram usage:        8 bytes
 17005 ;; Hardware stack levels used:    1
 17006 ;; Hardware stack levels required when called:    5
 17007 ;; This function calls:
 17008 ;;		Nothing
 17009 ;; This function is called by:
 17010 ;;		_LCD_Erase
 17011 ;; This function uses a non-reentrant model
 17012 ;;
 17013                           
 17014                           	psect	text77
 17015  013422                     __ptext77:
 17016                           	opt stack 0
 17017  013422                     _memset:
 17018                           	opt stack 22
 17019                           
 17020                           ; BSR set to: 0
 17021                           
 17022                           ; BSR set to: 0
 17023                           ;incstack = 0
 17024  013422  C06D  F073         	movff	memset@p1,memset@p
 17025  013426  C06E  F074         	movff	memset@p1+1,memset@p+1
 17026  01342A  D008               	goto	l8660
 17027  01342C                     l8656:
 17028                           
 17029                           ; BSR set to: 0
 17030  01342C  C073  FFD9         	movff	memset@p,fsr2l
 17031  013430  C074  FFDA         	movff	memset@p+1,fsr2h
 17032  013434  C06F  FFDF         	movff	memset@c,indf2
 17033                           
 17034                           ; BSR set to: 0
 17035  013438  4B73               	infsnz	memset@p& (0+255),f,b
 17036  01343A  2B74               	incf	(memset@p+1)& (0+255),f,b
 17037  01343C                     l8660:
 17038                           
 17039                           ; BSR set to: 0
 17040  01343C  0771               	decf	memset@n& (0+255),f,b
 17041  01343E  A0D8               	btfss	status,0,c
 17042  013440  0772               	decf	(memset@n+1)& (0+255),f,b
 17043  013442  2971               	incf	memset@n& (0+255),w,b
 17044  013444  E1F3               	bnz	l8656
 17045  013446  2972               	incf	(memset@n+1)& (0+255),w,b
 17046  013448  E1F1               	bnz	l8656
 17047                           
 17048                           ; BSR set to: 0
 17049  01344A  0012               	return		;funcret
 17050  01344C                     __end_of_memset:
 17051                           	opt stack 0
 17052                           tblptru	equ	0xFF8
 17053                           tblptrh	equ	0xFF7
 17054                           tblptrl	equ	0xFF6
 17055                           tablat	equ	0xFF5
 17056                           prodh	equ	0xFF4
 17057                           prodl	equ	0xFF3
 17058                           intcon	equ	0xFF2
 17059                           intcon2	equ	0xFF1
 17060                           intcon3	equ	0xFF0
 17061                           postinc0	equ	0xFEE
 17062                           wreg	equ	0xFE8
 17063                           indf1	equ	0xFE7
 17064                           postinc1	equ	0xFE6
 17065                           postdec1	equ	0xFE5
 17066                           fsr1h	equ	0xFE2
 17067                           fsr1l	equ	0xFE1
 17068                           indf2	equ	0xFDF
 17069                           postinc2	equ	0xFDE
 17070                           postdec2	equ	0xFDD
 17071                           fsr2h	equ	0xFDA
 17072                           fsr2l	equ	0xFD9
 17073                           status	equ	0xFD8
 17074                           
 17075 ;; *************** function _LCDInitWrite *****************
 17076 ;; Defined at:
 17077 ;;		line 96 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;  v               1    wreg     unsigned char 
 17080 ;; Auto vars:     Size  Location     Type
 17081 ;;  v               1   16[BANK0 ] unsigned char 
 17082 ;; Return value:  Size  Location     Type
 17083 ;;                  1    wreg      void 
 17084 ;; Registers used:
 17085 ;;		wreg, status,2, cstack
 17086 ;; Tracked objects:
 17087 ;;		On entry : 0/0
 17088 ;;		On exit  : 0/0
 17089 ;;		Unchanged: 0/0
 17090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17095 ;;Total ram usage:        1 bytes
 17096 ;; Hardware stack levels used:    1
 17097 ;; Hardware stack levels required when called:    7
 17098 ;; This function calls:
 17099 ;;		_LCDWritePortA
 17100 ;;		_LCDWritePortB
 17101 ;; This function is called by:
 17102 ;;		_LCD_Initialize
 17103 ;;		_LCD_Erase
 17104 ;; This function uses a non-reentrant model
 17105 ;;
 17106                           
 17107                           	psect	text78
 17108  0131DE                     __ptext78:
 17109                           	opt stack 0
 17110  0131DE                     _LCDInitWrite:
 17111                           	opt stack 20
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;incstack = 0
 17115                           ;LCDInitWrite@v stored from wreg
 17116  0131DE  0100               	movlb	0	; () banked
 17117  0131E0  6F70               	movwf	LCDInitWrite@v& (0+255),b
 17118                           
 17119                           ;lcd.c: 98: LCDWritePortA(0);
 17120  0131E2  0E00               	movlw	0
 17121  0131E4  EC24  F099         	call	_LCDWritePortA
 17122                           
 17123                           ;lcd.c: 99: LCDWritePortB(v);
 17124  0131E8  0100               	movlb	0	; () banked
 17125  0131EA  5170               	movf	LCDInitWrite@v& (0+255),w,b
 17126  0131EC  EC0A  F099         	call	_LCDWritePortB
 17127                           
 17128                           ;lcd.c: 100: __nop();
 17129  0131F0  F000               	nop	
 17130                           
 17131                           ;lcd.c: 101: __nop();
 17132  0131F2  F000               	nop	
 17133                           
 17134                           ;lcd.c: 102: __nop();
 17135  0131F4  F000               	nop	
 17136                           
 17137                           ;lcd.c: 104: LCDWritePortA(0x40);
 17138  0131F6  0E40               	movlw	64
 17139  0131F8  EC24  F099         	call	_LCDWritePortA
 17140                           
 17141                           ;lcd.c: 105: __nop();
 17142  0131FC  F000               	nop	
 17143                           
 17144                           ;lcd.c: 106: __nop();
 17145  0131FE  F000               	nop	
 17146                           
 17147                           ;lcd.c: 107: __nop();
 17148  013200  F000               	nop	
 17149                           
 17150                           ;lcd.c: 108: __nop();
 17151  013202  F000               	nop	
 17152                           
 17153                           ;lcd.c: 109: __nop();
 17154  013204  F000               	nop	
 17155                           
 17156                           ;lcd.c: 110: __nop();
 17157  013206  F000               	nop	
 17158                           
 17159                           ;lcd.c: 111: __nop();
 17160  013208  F000               	nop	
 17161                           
 17162                           ;lcd.c: 112: __nop();
 17163  01320A  F000               	nop	
 17164                           
 17165                           ;lcd.c: 113: __nop();
 17166  01320C  F000               	nop	
 17167                           
 17168                           ;lcd.c: 114: LCDWritePortA(0);
 17169  01320E  0E00               	movlw	0
 17170  013210  EF24  F099         	goto	_LCDWritePortA
 17171  013214                     __end_of_LCDInitWrite:
 17172                           	opt stack 0
 17173                           tblptru	equ	0xFF8
 17174                           tblptrh	equ	0xFF7
 17175                           tblptrl	equ	0xFF6
 17176                           tablat	equ	0xFF5
 17177                           prodh	equ	0xFF4
 17178                           prodl	equ	0xFF3
 17179                           intcon	equ	0xFF2
 17180                           intcon2	equ	0xFF1
 17181                           intcon3	equ	0xFF0
 17182                           postinc0	equ	0xFEE
 17183                           wreg	equ	0xFE8
 17184                           indf1	equ	0xFE7
 17185                           postinc1	equ	0xFE6
 17186                           postdec1	equ	0xFE5
 17187                           fsr1h	equ	0xFE2
 17188                           fsr1l	equ	0xFE1
 17189                           indf2	equ	0xFDF
 17190                           postinc2	equ	0xFDE
 17191                           postdec2	equ	0xFDD
 17192                           fsr2h	equ	0xFDA
 17193                           fsr2l	equ	0xFD9
 17194                           status	equ	0xFD8
 17195                           
 17196 ;; *************** function _LCDWritePortB *****************
 17197 ;; Defined at:
 17198 ;;		line 84 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  v               1    wreg     unsigned char 
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;  v               1   14[BANK0 ] unsigned char 
 17203 ;;  preRFIE         1   15[BANK0 ] unsigned char 
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  1    wreg      void 
 17206 ;; Registers used:
 17207 ;;		wreg, status,2, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : F/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;Total ram usage:        2 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:    6
 17220 ;; This function calls:
 17221 ;;		_SPIPut
 17222 ;; This function is called by:
 17223 ;;		_LCDInitWrite
 17224 ;;		_LCD_i_write
 17225 ;;		_LCD_d_write
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           	psect	text79
 17230  013214                     __ptext79:
 17231                           	opt stack 0
 17232  013214                     _LCDWritePortB:
 17233                           	opt stack 20
 17234                           
 17235                           ;incstack = 0
 17236                           ;LCDWritePortB@v stored from wreg
 17237  013214  6F6E               	movwf	LCDWritePortB@v& (0+255),b
 17238                           
 17239                           ;lcd.c: 86: uint8_t preRFIE = INTCON3bits.INT3IE;
 17240  013216  0E00               	movlw	0
 17241  013218  BAF0               	btfsc	intcon3,5,c	;volatile
 17242  01321A  0E01               	movlw	1
 17243  01321C  0100               	movlb	0	; () banked
 17244  01321E  6F6F               	movwf	LCDWritePortB@preRFIE& (0+255),b
 17245                           
 17246                           ;lcd.c: 87: INTCON3bits.INT3IE = 0;
 17247  013220  9AF0               	bcf	intcon3,5,c	;volatile
 17248                           
 17249                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
 17250  013222  9489               	bcf	3977,2,c	;volatile
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;lcd.c: 89: SPIPut(0x40);
 17254  013224  0E40               	movlw	64
 17255  013226  ECEB  F09A         	call	_SPIPut
 17256                           
 17257                           ;lcd.c: 90: SPIPut(0x13);
 17258  01322A  0E13               	movlw	19
 17259  01322C  ECEB  F09A         	call	_SPIPut
 17260                           
 17261                           ;lcd.c: 91: SPIPut(v);
 17262  013230  0100               	movlb	0	; () banked
 17263  013232  516E               	movf	LCDWritePortB@v& (0+255),w,b
 17264  013234  ECEB  F09A         	call	_SPIPut
 17265                           
 17266                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
 17267  013238  8489               	bsf	3977,2,c	;volatile
 17268                           
 17269                           ;lcd.c: 93: INTCON3bits.INT3IE = preRFIE;
 17270  01323A  0100               	movlb	0	; () banked
 17271  01323C  B16F               	btfsc	LCDWritePortB@preRFIE& (0+255),0,b
 17272  01323E  D002               	bra	u11205
 17273  013240  9AF0               	bcf	intcon3,5,c	;volatile
 17274  013242  D001               	bra	u11206
 17275  013244                     u11205:
 17276  013244  8AF0               	bsf	intcon3,5,c	;volatile
 17277  013246                     u11206:
 17278  013246  0012               	return		;funcret
 17279  013248                     __end_of_LCDWritePortB:
 17280                           	opt stack 0
 17281                           tblptru	equ	0xFF8
 17282                           tblptrh	equ	0xFF7
 17283                           tblptrl	equ	0xFF6
 17284                           tablat	equ	0xFF5
 17285                           prodh	equ	0xFF4
 17286                           prodl	equ	0xFF3
 17287                           intcon	equ	0xFF2
 17288                           intcon2	equ	0xFF1
 17289                           intcon3	equ	0xFF0
 17290                           postinc0	equ	0xFEE
 17291                           wreg	equ	0xFE8
 17292                           indf1	equ	0xFE7
 17293                           postinc1	equ	0xFE6
 17294                           postdec1	equ	0xFE5
 17295                           fsr1h	equ	0xFE2
 17296                           fsr1l	equ	0xFE1
 17297                           indf2	equ	0xFDF
 17298                           postinc2	equ	0xFDE
 17299                           postdec2	equ	0xFDD
 17300                           fsr2h	equ	0xFDA
 17301                           fsr2l	equ	0xFD9
 17302                           status	equ	0xFD8
 17303                           
 17304 ;; *************** function _LCDWritePortA *****************
 17305 ;; Defined at:
 17306 ;;		line 72 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;  v               1    wreg     unsigned char 
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;  v               1   14[BANK0 ] unsigned char 
 17311 ;;  preRFIE         1   15[BANK0 ] unsigned char 
 17312 ;; Return value:  Size  Location     Type
 17313 ;;                  1    wreg      void 
 17314 ;; Registers used:
 17315 ;;		wreg, status,2, cstack
 17316 ;; Tracked objects:
 17317 ;;		On entry : 0/0
 17318 ;;		On exit  : 0/0
 17319 ;;		Unchanged: 0/0
 17320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17325 ;;Total ram usage:        2 bytes
 17326 ;; Hardware stack levels used:    1
 17327 ;; Hardware stack levels required when called:    6
 17328 ;; This function calls:
 17329 ;;		_SPIPut
 17330 ;; This function is called by:
 17331 ;;		_LCDInitWrite
 17332 ;;		_LCD_i_write
 17333 ;;		_LCD_d_write
 17334 ;;		_LCD_Initialize
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           	psect	text80
 17339  013248                     __ptext80:
 17340                           	opt stack 0
 17341  013248                     _LCDWritePortA:
 17342                           	opt stack 20
 17343                           
 17344                           ;incstack = 0
 17345                           ;LCDWritePortA@v stored from wreg
 17346  013248  0100               	movlb	0	; () banked
 17347  01324A  6F6E               	movwf	LCDWritePortA@v& (0+255),b
 17348                           
 17349                           ;lcd.c: 74: uint8_t preRFIE = INTCON3bits.INT3IE;
 17350  01324C  0E00               	movlw	0
 17351  01324E  BAF0               	btfsc	intcon3,5,c	;volatile
 17352  013250  0E01               	movlw	1
 17353  013252  6F6F               	movwf	LCDWritePortA@preRFIE& (0+255),b
 17354                           
 17355                           ;lcd.c: 75: INTCON3bits.INT3IE = 0;
 17356  013254  9AF0               	bcf	intcon3,5,c	;volatile
 17357                           
 17358                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
 17359  013256  9489               	bcf	3977,2,c	;volatile
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;lcd.c: 77: SPIPut(0x40);
 17363  013258  0E40               	movlw	64
 17364  01325A  ECEB  F09A         	call	_SPIPut
 17365                           
 17366                           ;lcd.c: 78: SPIPut(0x12);
 17367  01325E  0E12               	movlw	18
 17368  013260  ECEB  F09A         	call	_SPIPut
 17369                           
 17370                           ;lcd.c: 79: SPIPut(v);
 17371  013264  0100               	movlb	0	; () banked
 17372  013266  516E               	movf	LCDWritePortA@v& (0+255),w,b
 17373  013268  ECEB  F09A         	call	_SPIPut
 17374                           
 17375                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
 17376  01326C  8489               	bsf	3977,2,c	;volatile
 17377                           
 17378                           ;lcd.c: 81: INTCON3bits.INT3IE = preRFIE;
 17379  01326E  0100               	movlb	0	; () banked
 17380  013270  B16F               	btfsc	LCDWritePortA@preRFIE& (0+255),0,b
 17381  013272  D002               	bra	u11195
 17382  013274  9AF0               	bcf	intcon3,5,c	;volatile
 17383  013276  D001               	bra	u11196
 17384  013278                     u11195:
 17385  013278  8AF0               	bsf	intcon3,5,c	;volatile
 17386  01327A                     u11196:
 17387  01327A  0012               	return		;funcret
 17388  01327C                     __end_of_LCDWritePortA:
 17389                           	opt stack 0
 17390                           tblptru	equ	0xFF8
 17391                           tblptrh	equ	0xFF7
 17392                           tblptrl	equ	0xFF6
 17393                           tablat	equ	0xFF5
 17394                           prodh	equ	0xFF4
 17395                           prodl	equ	0xFF3
 17396                           intcon	equ	0xFF2
 17397                           intcon2	equ	0xFF1
 17398                           intcon3	equ	0xFF0
 17399                           postinc0	equ	0xFEE
 17400                           wreg	equ	0xFE8
 17401                           indf1	equ	0xFE7
 17402                           postinc1	equ	0xFE6
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           fsr2h	equ	0xFDA
 17410                           fsr2l	equ	0xFD9
 17411                           status	equ	0xFD8
 17412                           
 17413 ;; *************** function _SPIPut *****************
 17414 ;; Defined at:
 17415 ;;		line 45 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  v               1    wreg     unsigned char 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;  v               1   13[BANK0 ] unsigned char 
 17420 ;;  i               1    0        unsigned char 
 17421 ;; Return value:  Size  Location     Type
 17422 ;;                  1    wreg      void 
 17423 ;; Registers used:
 17424 ;;		wreg
 17425 ;; Tracked objects:
 17426 ;;		On entry : 0/0
 17427 ;;		On exit  : 0/0
 17428 ;;		Unchanged: 0/0
 17429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17434 ;;Total ram usage:        1 bytes
 17435 ;; Hardware stack levels used:    1
 17436 ;; Hardware stack levels required when called:    5
 17437 ;; This function calls:
 17438 ;;		Nothing
 17439 ;; This function is called by:
 17440 ;;		_RegisterSet
 17441 ;;		_RegisterRead
 17442 ;;		_WriteFIFO
 17443 ;;		_NVMRead
 17444 ;;		_NVMWrite
 17445 ;;		_EEPROM_Read
 17446 ;;		_LCDInitPortA
 17447 ;;		_LCDInitPortB
 17448 ;;		_LCDWritePortA
 17449 ;;		_LCDWritePortB
 17450 ;;		_SPIGet
 17451 ;; This function uses a non-reentrant model
 17452 ;;
 17453                           
 17454                           	psect	text81
 17455  0135D6                     __ptext81:
 17456                           	opt stack 0
 17457  0135D6                     _SPIPut:
 17458                           	opt stack 20
 17459                           
 17460                           ;incstack = 0
 17461                           ;SPIPut@v stored from wreg
 17462  0135D6  0100               	movlb	0	; () banked
 17463  0135D8  6F6D               	movwf	SPIPut@v& (0+255),b
 17464                           
 17465                           ;spi.c: 47: uint8_t i;
 17466                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 17467  0135DA  969E               	bcf	3998,3,c	;volatile
 17468                           
 17469                           ;spi.c: 64: i = SSP1BUF;
 17470  0135DC  50C9               	movf	4041,w,c	;volatile
 17471  0135DE                     l808:
 17472                           
 17473                           ;spi.c: 67: {
 17474                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 17475  0135DE  9EC6               	bcf	4038,7,c	;volatile
 17476                           
 17477                           ;spi.c: 69: SSP1BUF = v;
 17478  0135E0  C06D  FFC9         	movff	SPIPut@v,4041	;volatile
 17479                           
 17480                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 17481  0135E4  BEC6               	btfsc	4038,7,c	;volatile
 17482  0135E6  D7FB               	goto	l808
 17483  0135E8                     l810:
 17484  0135E8  A69E               	btfss	3998,3,c	;volatile
 17485  0135EA  D7FE               	goto	l810
 17486                           
 17487                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 17488  0135EC  969E               	bcf	3998,3,c	;volatile
 17489  0135EE  0012               	return		;funcret
 17490  0135F0                     __end_of_SPIPut:
 17491                           	opt stack 0
 17492                           tblptru	equ	0xFF8
 17493                           tblptrh	equ	0xFF7
 17494                           tblptrl	equ	0xFF6
 17495                           tablat	equ	0xFF5
 17496                           prodh	equ	0xFF4
 17497                           prodl	equ	0xFF3
 17498                           intcon	equ	0xFF2
 17499                           intcon2	equ	0xFF1
 17500                           intcon3	equ	0xFF0
 17501                           postinc0	equ	0xFEE
 17502                           wreg	equ	0xFE8
 17503                           indf1	equ	0xFE7
 17504                           postinc1	equ	0xFE6
 17505                           postdec1	equ	0xFE5
 17506                           fsr1h	equ	0xFE2
 17507                           fsr1l	equ	0xFE1
 17508                           indf2	equ	0xFDF
 17509                           postinc2	equ	0xFDE
 17510                           postdec2	equ	0xFDD
 17511                           fsr2h	equ	0xFDA
 17512                           fsr2l	equ	0xFD9
 17513                           status	equ	0xFD8
 17514                           
 17515 ;; *************** function _DELAY_ms *****************
 17516 ;; Defined at:
 17517 ;;		line 108 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;  ms              2   13[BANK0 ] unsigned int 
 17520 ;; Auto vars:     Size  Location     Type
 17521 ;;  cyclesRequir    4   23[BANK0 ] long 
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  1    wreg      void 
 17524 ;; Registers used:
 17525 ;;		wreg, status,2, status,0, prodl, prodh
 17526 ;; Tracked objects:
 17527 ;;		On entry : F/0
 17528 ;;		On exit  : F/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17534 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17535 ;;Total ram usage:       14 bytes
 17536 ;; Hardware stack levels used:    1
 17537 ;; Hardware stack levels required when called:    5
 17538 ;; This function calls:
 17539 ;;		Nothing
 17540 ;; This function is called by:
 17541 ;;		_MiMAC_Init
 17542 ;;		_LCD_i_write
 17543 ;;		_LCD_d_write
 17544 ;;		_LCD_Initialize
 17545 ;;		_LCD_Erase
 17546 ;;		_LCDDisplay
 17547 ;;		_Source_END_DEVICE_INFO
 17548 ;;		_Process_RxMessage
 17549 ;;		_run_star_demo
 17550 ;;		_freezer_feature
 17551 ;; This function uses a non-reentrant model
 17552 ;;
 17553                           
 17554                           	psect	text82
 17555  012280                     __ptext82:
 17556                           	opt stack 0
 17557  012280                     _DELAY_ms:
 17558                           	opt stack 21
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay;
 17562                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
 17563                           
 17564                           ;incstack = 0
 17565  012280  516D               	movf	DELAY_ms@ms& (0+255),w,b
 17566  012282  6F6F               	movwf	??_DELAY_ms& (0+255),b
 17567  012284  516E               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 17568  012286  6F70               	movwf	(??_DELAY_ms+1)& (0+255),b
 17569  012288  6B71               	clrf	(??_DELAY_ms+2)& (0+255),b
 17570  01228A  6B72               	clrf	(??_DELAY_ms+3)& (0+255),b
 17571  01228C  0EC4               	movlw	196
 17572  01228E  036F               	mulwf	??_DELAY_ms& (0+255),b
 17573  012290  CFF3 F073          	movff	prodl,??_DELAY_ms+4
 17574  012294  CFF4 F074          	movff	prodh,??_DELAY_ms+5
 17575  012298  6B75               	clrf	(??_DELAY_ms+6)& (0+255),b
 17576  01229A  6B76               	clrf	(??_DELAY_ms+7)& (0+255),b
 17577  01229C  0370               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17578  01229E  50F3               	movf	prodl,w,c
 17579  0122A0  2774               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 17580  0122A2  50F4               	movf	prodh,w,c
 17581  0122A4  2375               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 17582  0122A6  0E00               	movlw	0
 17583  0122A8  2376               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17584  0122AA  0E09               	movlw	9
 17585  0122AC  036F               	mulwf	??_DELAY_ms& (0+255),b
 17586  0122AE  50F3               	movf	prodl,w,c
 17587  0122B0  2774               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 17588  0122B2  50F4               	movf	prodh,w,c
 17589  0122B4  2375               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 17590  0122B6  0E00               	movlw	0
 17591  0122B8  2376               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17592  0122BA  0EC4               	movlw	196
 17593  0122BC  0371               	mulwf	(??_DELAY_ms+2)& (0+255),b
 17594  0122BE  50F3               	movf	prodl,w,c
 17595  0122C0  2775               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17596  0122C2  50F4               	movf	prodh,w,c
 17597  0122C4  2376               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17598  0122C6  0E09               	movlw	9
 17599  0122C8  0370               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17600  0122CA  50F3               	movf	prodl,w,c
 17601  0122CC  2775               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17602  0122CE  50F4               	movf	prodh,w,c
 17603  0122D0  2376               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17604  0122D2  0E00               	movlw	0
 17605  0122D4  036F               	mulwf	??_DELAY_ms& (0+255),b
 17606  0122D6  50F3               	movf	prodl,w,c
 17607  0122D8  2775               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17608  0122DA  50F4               	movf	prodh,w,c
 17609  0122DC  2376               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17610  0122DE  0EC4               	movlw	196
 17611  0122E0  0372               	mulwf	(??_DELAY_ms+3)& (0+255),b
 17612  0122E2  50F3               	movf	prodl,w,c
 17613  0122E4  2776               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17614  0122E6  0E09               	movlw	9
 17615  0122E8  0371               	mulwf	(??_DELAY_ms+2)& (0+255),b
 17616  0122EA  50F3               	movf	prodl,w,c
 17617  0122EC  2776               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17618  0122EE  0E00               	movlw	0
 17619  0122F0  0370               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17620  0122F2  50F3               	movf	prodl,w,c
 17621  0122F4  2776               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17622  0122F6  0E00               	movlw	0
 17623  0122F8  036F               	mulwf	??_DELAY_ms& (0+255),b
 17624  0122FA  50F3               	movf	prodl,w,c
 17625  0122FC  2776               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17626  0122FE  C073  F077         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 17627  012302  C074  F078         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 17628  012306  C075  F079         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 17629  01230A  C076  F07A         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 17633  01230E  0E56               	movlw	86
 17634  012310  2777               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 17635  012312  0EFF               	movlw	255
 17636  012314  2378               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 17637  012316  2379               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 17638  012318  237A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 17642  01231A  BF7A               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 17643  01231C  0CFF               	retlw	255
 17644  01231E  517A               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 17645  012320  1179               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 17646  012322  1178               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 17647  012324  E10C               	bnz	l709
 17648  012326  0EC4               	movlw	196
 17649  012328  5D77               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 17650  01232A  E209               	bc	l709
 17651  01232C  0012               	return	
 17652  01232E                     l710:
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;delay.c: 128: {
 17656                           ;delay.c: 129: __nop();
 17657  01232E  F000               	nop	
 17658                           
 17659                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 17660  012330  0ED9               	movlw	217
 17661  012332  0100               	movlb	0	; () banked
 17662  012334  2777               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 17663  012336  0EFF               	movlw	255
 17664  012338  2378               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 17665  01233A  2379               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 17666  01233C  237A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 17667  01233E                     l709:
 17668                           
 17669                           ; BSR set to: 0
 17670  01233E  BF7A               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 17671  012340  0012               	return	
 17672  012342  517A               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 17673  012344  1179               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 17674  012346  1178               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 17675  012348  E1F2               	bnz	l710
 17676  01234A  0577               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 17677  01234C  E2F0               	bc	l710
 17678                           
 17679                           ; BSR set to: 0
 17680  01234E  0012               	return		;funcret
 17681  012350                     __end_of_DELAY_ms:
 17682                           	opt stack 0
 17683                           tblptru	equ	0xFF8
 17684                           tblptrh	equ	0xFF7
 17685                           tblptrl	equ	0xFF6
 17686                           tablat	equ	0xFF5
 17687                           prodh	equ	0xFF4
 17688                           prodl	equ	0xFF3
 17689                           intcon	equ	0xFF2
 17690                           intcon2	equ	0xFF1
 17691                           intcon3	equ	0xFF0
 17692                           postinc0	equ	0xFEE
 17693                           wreg	equ	0xFE8
 17694                           indf1	equ	0xFE7
 17695                           postinc1	equ	0xFE6
 17696                           postdec1	equ	0xFE5
 17697                           fsr1h	equ	0xFE2
 17698                           fsr1l	equ	0xFE1
 17699                           indf2	equ	0xFDF
 17700                           postinc2	equ	0xFDE
 17701                           postdec2	equ	0xFDD
 17702                           fsr2h	equ	0xFDA
 17703                           fsr2l	equ	0xFD9
 17704                           status	equ	0xFD8
 17705                           
 17706 ;; *************** function _high_isr *****************
 17707 ;; Defined at:
 17708 ;;		line 1240 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17709 ;; Parameters:    Size  Location     Type
 17710 ;;		None
 17711 ;; Auto vars:     Size  Location     Type
 17712 ;;  ackInfoIndex    1    9[BANK0 ] unsigned char 
 17713 ;;  i               1   12[BANK0 ] unsigned char 
 17714 ;;  fifo_stat       1    2[BANK0 ] unsigned char 
 17715 ;;  ackPacket       4    3[BANK0 ] unsigned char [4]
 17716 ;;  counter         2    0[BANK0 ] unsigned int 
 17717 ;;  BankIndex       1   11[BANK0 ] unsigned char 
 17718 ;;  PacketLen       1   10[BANK0 ] unsigned char 
 17719 ;;  RxPacketPtr     1    8[BANK0 ] unsigned char 
 17720 ;;  bAck            1    7[BANK0 ] unsigned char 
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  1    wreg      void 
 17723 ;; Registers used:
 17724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/0
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17731 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17732 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17733 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17734 ;;Total ram usage:       23 bytes
 17735 ;; Hardware stack levels used:    1
 17736 ;; Hardware stack levels required when called:    4
 17737 ;; This function calls:
 17738 ;;		_UserInterruptHandler
 17739 ;;		i2_MiWi_TickGet
 17740 ;;		i2_RegisterRead
 17741 ;;		i2_SPIGet
 17742 ;;		i2_TxPacket
 17743 ;; This function is called by:
 17744 ;;		Interrupt level 2
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           	psect	intcode
 17749  000008                     __pintcode:
 17750                           	opt stack 0
 17751  000008                     _high_isr:
 17752                           	opt stack 12
 17753                           
 17754                           ; BSR set to: 0
 17755                           ;incstack = 0
 17756  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17757  00000A  CFE1 F04F          	movff	fsr1l,??_high_isr+4
 17758  00000E  CFE2 F050          	movff	fsr1h,??_high_isr+5
 17759  000012  CFD9 F051          	movff	fsr2l,??_high_isr+6
 17760  000016  CFDA F052          	movff	fsr2h,??_high_isr+7
 17761  00001A  CFF3 F053          	movff	prodl,??_high_isr+8
 17762  00001E  CFF4 F054          	movff	prodh,??_high_isr+9
 17763                           
 17764                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT3IF && INTCON3bits.INT3IE )
 17765  000022  B4F0               	btfsc	intcon3,2,c	;volatile
 17766  000024  AAF0               	btfss	intcon3,5,c	;volatile
 17767  000026  D1B0               	goto	i2l11060
 17768                           
 17769                           ;drv_mrf_miwi_89xa.c: 1256: {
 17770                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 17771  000028  0E60               	movlw	96
 17772  00002A  1814               	xorwf	_RF_Mode,w,c
 17773  00002C  E001 D1A7          	bnz	i2l11054
 17774                           
 17775                           ;drv_mrf_miwi_89xa.c: 1258: {
 17776                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 17777                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 17778                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 17779                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 17780                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 17781                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 17782                           ;drv_mrf_miwi_89xa.c: 1267: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 17783  000030  0E28               	movlw	40
 17784  000032  ECE6  F099         	call	i2_RegisterRead
 17785  000036  6E4B               	movwf	??_high_isr& (0+255),c
 17786  000038  90D8               	bcf	status,0,c
 17787  00003A  304B               	rrcf	??_high_isr,w,c
 17788  00003C  6E16               	movwf	_RSSIVal,c
 17789                           
 17790                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 17791  00003E  C016  F015         	movff	_RSSIVal,_RSSILock
 17792                           
 17793                           ;drv_mrf_miwi_89xa.c: 1272: LATCbits.LATC2 = 0;
 17794  000042  948B               	bcf	3979,2,c	;volatile
 17795                           
 17796                           ;drv_mrf_miwi_89xa.c: 1273: PacketLen = SPIGet();
 17797  000044  EC3C  F09B         	call	i2_SPIGet	;wreg free
 17798  000048  0100               	movlb	0	; () banked
 17799  00004A  6F6A               	movwf	high_isr@PacketLen& (0+255),b
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;drv_mrf_miwi_89xa.c: 1274: LATCbits.LATC2 = 1;
 17803  00004C  848B               	bsf	3979,2,c	;volatile
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;drv_mrf_miwi_89xa.c: 1277: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 17807  00004E  6B6B               	clrf	high_isr@BankIndex& (0+255),b
 17808  000050                     i2l10904:
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;drv_mrf_miwi_89xa.c: 1278: {
 17812                           ;drv_mrf_miwi_89xa.c: 1279: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 17813  000050  516B               	movf	high_isr@BankIndex& (0+255),w,b
 17814  000052  0D39               	mullw	57
 17815  000054  0E00               	movlw	low _RxPacket
 17816  000056  24F3               	addwf	prodl,w,c
 17817  000058  6ED9               	movwf	fsr2l,c
 17818  00005A  0E03               	movlw	high _RxPacket
 17819  00005C  20F4               	addwfc	prodh,w,c
 17820  00005E  6EDA               	movwf	fsr2h,c
 17821  000060  A0DF               	btfss	indf2,0,c
 17822  000062  D005               	goto	i2l10912
 17823                           
 17824                           ; BSR set to: 3
 17825  000064  0100               	movlb	0	; () banked
 17826  000066  2B6B               	incf	high_isr@BankIndex& (0+255),f,b
 17827                           
 17828                           ; BSR set to: 0
 17829  000068  0E01               	movlw	1
 17830  00006A  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 17831  00006C  D7F1               	goto	i2l10904
 17832  00006E                     i2l10912:
 17833                           
 17834                           ;drv_mrf_miwi_89xa.c: 1282: }
 17835                           ;drv_mrf_miwi_89xa.c: 1283: }
 17836                           ;drv_mrf_miwi_89xa.c: 1286: if( PacketLen == 2 )
 17837  00006E  0E02               	movlw	2
 17838  000070  0100               	movlb	0	; () banked
 17839  000072  196A               	xorwf	high_isr@PacketLen& (0+255),w,b
 17840  000074  E103               	bnz	i2l176
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;drv_mrf_miwi_89xa.c: 1287: {
 17844                           ;drv_mrf_miwi_89xa.c: 1288: bAck = 1;
 17845  000076  0E01               	movlw	1
 17846  000078  6F67               	movwf	high_isr@bAck& (0+255),b
 17847                           
 17848                           ;drv_mrf_miwi_89xa.c: 1289: }
 17849  00007A  D001               	goto	i2l10916
 17850  00007C                     i2l176:
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;drv_mrf_miwi_89xa.c: 1290: else
 17854                           ;drv_mrf_miwi_89xa.c: 1291: {
 17855                           ;drv_mrf_miwi_89xa.c: 1292: bAck = 0;
 17856  00007C  6B67               	clrf	high_isr@bAck& (0+255),b
 17857  00007E                     i2l10916:
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;drv_mrf_miwi_89xa.c: 1293: }
 17861                           ;drv_mrf_miwi_89xa.c: 1296: if( PacketLen >= (35+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 17862  00007E  0E37               	movlw	55
 17863  000080  616A               	cpfslt	high_isr@PacketLen& (0+255),b
 17864  000082  D007               	goto	i2l10924
 17865                           
 17866                           ; BSR set to: 0
 17867  000084  516A               	movf	high_isr@PacketLen& (0+255),w,b
 17868  000086  E005               	bz	i2l10924
 17869                           
 17870                           ; BSR set to: 0
 17871  000088  0E01               	movlw	1
 17872  00008A  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 17873  00008C  D012               	goto	i2l178
 17874                           
 17875                           ; BSR set to: 0
 17876  00008E  5167               	movf	high_isr@bAck& (0+255),w,b
 17877  000090  E110               	bnz	i2l178
 17878  000092                     i2l10924:
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;drv_mrf_miwi_89xa.c: 1299: {
 17882                           ;drv_mrf_miwi_89xa.c: 1300: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 17883  000092  0E1A               	movlw	26
 17884  000094  ECE6  F099         	call	i2_RegisterRead
 17885  000098  D007               	goto	L8
 17886  00009A                     i2l183:
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;drv_mrf_miwi_89xa.c: 1302: {
 17890                           ;drv_mrf_miwi_89xa.c: 1303: LATCbits.LATC2 = 0;
 17891  00009A  948B               	bcf	3979,2,c	;volatile
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;drv_mrf_miwi_89xa.c: 1304: SPIGet();
 17895  00009C  EC3C  F09B         	call	i2_SPIGet	;wreg free
 17896                           
 17897                           ;drv_mrf_miwi_89xa.c: 1305: LATCbits.LATC2 = 1;
 17898  0000A0  848B               	bsf	3979,2,c	;volatile
 17899                           
 17900                           ;drv_mrf_miwi_89xa.c: 1306: fifo_stat = RegisterRead(0x1A00>>8);
 17901  0000A2  0E1A               	movlw	26
 17902  0000A4  ECE6  F099         	call	i2_RegisterRead
 17903  0000A8                     L8:
 17904  0000A8  0100               	movlb	0	; () banked
 17905  0000AA  6F62               	movwf	high_isr@fifo_stat& (0+255),b
 17906                           
 17907                           ; BSR set to: 0
 17908  0000AC  B362               	btfsc	high_isr@fifo_stat& (0+255),1,b
 17909  0000AE  D7F5               	goto	i2l183
 17910  0000B0  D169               	goto	i2l11056
 17911  0000B2                     i2l178:
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;drv_mrf_miwi_89xa.c: 1310: }
 17915                           ;drv_mrf_miwi_89xa.c: 1312: RxPacketPtr = 0;
 17916  0000B2  6B68               	clrf	high_isr@RxPacketPtr& (0+255),b
 17917                           
 17918                           ;drv_mrf_miwi_89xa.c: 1313: counter = PacketLen;
 17919  0000B4  C06A  F060         	movff	high_isr@PacketLen,high_isr@counter
 17920  0000B8  6B61               	clrf	(high_isr@counter+1)& (0+255),b
 17921                           
 17922                           ;drv_mrf_miwi_89xa.c: 1315: while(counter >= 1)
 17923  0000BA  D15D               	goto	i2l11052
 17924  0000BC                     i2l10934:
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;drv_mrf_miwi_89xa.c: 1318: if(1)
 17928  0000BC  0760               	decf	high_isr@counter& (0+255),f,b
 17929  0000BE  A0D8               	btfss	status,0,c
 17930  0000C0  0761               	decf	(high_isr@counter+1)& (0+255),f,b
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;drv_mrf_miwi_89xa.c: 1319: {
 17934                           ;drv_mrf_miwi_89xa.c: 1321: if( bAck )
 17935  0000C2  5167               	movf	high_isr@bAck& (0+255),w,b
 17936  0000C4  E008               	bz	i2l189
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;drv_mrf_miwi_89xa.c: 1322: {
 17940                           ;drv_mrf_miwi_89xa.c: 1323: LATCbits.LATC2 = 0;
 17941  0000C6  948B               	bcf	3979,2,c	;volatile
 17942                           
 17943                           ; BSR set to: 0
 17944                           ;drv_mrf_miwi_89xa.c: 1324: ackPacket[RxPacketPtr++] = SPIGet();
 17945  0000C8  5168               	movf	high_isr@RxPacketPtr& (0+255),w,b
 17946  0000CA  0F63               	addlw	low high_isr@ackPacket
 17947  0000CC  6ED9               	movwf	fsr2l,c
 17948  0000CE  6ADA               	clrf	fsr2h,c
 17949  0000D0  EC3C  F09B         	call	i2_SPIGet	;wreg free
 17950  0000D4  D016               	goto	L10
 17951  0000D6                     i2l189:
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;drv_mrf_miwi_89xa.c: 1328: else
 17955                           ;drv_mrf_miwi_89xa.c: 1329: {
 17956                           ;drv_mrf_miwi_89xa.c: 1330: LATCbits.LATC2 = 0;
 17957  0000D6  948B               	bcf	3979,2,c	;volatile
 17958                           
 17959                           ; BSR set to: 0
 17960                           ;drv_mrf_miwi_89xa.c: 1331: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 17961  0000D8  516B               	movf	high_isr@BankIndex& (0+255),w,b
 17962  0000DA  0D39               	mullw	57
 17963  0000DC  0E00               	movlw	low _RxPacket
 17964  0000DE  6E4B               	movwf	??_high_isr& (0+255),c
 17965  0000E0  0E03               	movlw	high _RxPacket
 17966  0000E2  6E4C               	movwf	(??_high_isr+1)& (0+255),c
 17967  0000E4  2A4B               	incf	??_high_isr,f,c
 17968  0000E6  0E00               	movlw	0
 17969  0000E8  224C               	addwfc	??_high_isr+1,f,c
 17970  0000EA  50F3               	movf	prodl,w,c
 17971  0000EC  264B               	addwf	??_high_isr,f,c
 17972  0000EE  50F4               	movf	prodh,w,c
 17973  0000F0  224C               	addwfc	??_high_isr+1,f,c
 17974  0000F2  5168               	movf	high_isr@RxPacketPtr& (0+255),w,b
 17975  0000F4  244B               	addwf	??_high_isr,w,c
 17976  0000F6  6ED9               	movwf	fsr2l,c
 17977  0000F8  0E00               	movlw	0
 17978  0000FA  204C               	addwfc	??_high_isr+1,w,c
 17979  0000FC  6EDA               	movwf	fsr2h,c
 17980  0000FE  EC3C  F09B         	call	i2_SPIGet	;wreg free
 17981  000102                     L10:
 17982  000102  6EDF               	movwf	indf2,c
 17983  000104  0100               	movlb	0	; () banked
 17984  000106  2B68               	incf	high_isr@RxPacketPtr& (0+255),f,b
 17985                           
 17986                           ; BSR set to: 0
 17987                           ;drv_mrf_miwi_89xa.c: 1332: LATCbits.LATC2 = 1;
 17988  000108  848B               	bsf	3979,2,c	;volatile
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;drv_mrf_miwi_89xa.c: 1333: }
 17992                           ;drv_mrf_miwi_89xa.c: 1336: if( RxPacketPtr >= PacketLen )
 17993  00010A  516A               	movf	high_isr@PacketLen& (0+255),w,b
 17994  00010C  5D68               	subwf	high_isr@RxPacketPtr& (0+255),w,b
 17995  00010E  E201 D132          	bnc	i2l11052
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;drv_mrf_miwi_89xa.c: 1337: {
 17999                           ;drv_mrf_miwi_89xa.c: 1338: uint8_t i;
 18000                           ;drv_mrf_miwi_89xa.c: 1340: if( bAck )
 18001  000112  5167               	movf	high_isr@bAck& (0+255),w,b
 18002  000114  E023               	bz	i2l192
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;drv_mrf_miwi_89xa.c: 1341: {
 18006                           ;drv_mrf_miwi_89xa.c: 1343: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 18007  000116  5163               	movf	high_isr@ackPacket& (0+255),w,b
 18008  000118  0B03               	andlw	3
 18009  00011A  0A02               	xorlw	2
 18010  00011C  E107               	bnz	i2l10966
 18011                           
 18012                           ; BSR set to: 0
 18013                           ;drv_mrf_miwi_89xa.c: 1344: {
 18014                           ;drv_mrf_miwi_89xa.c: 1345: if( ackPacket[1] == TxMACSeq )
 18015  00011E  5019               	movf	_TxMACSeq,w,c
 18016  000120  1964               	xorwf	(high_isr@ackPacket+1)& (0+255),w,b
 18017  000122  E001 D12F          	bnz	i2l11056
 18018                           
 18019                           ; BSR set to: 0
 18020                           ;drv_mrf_miwi_89xa.c: 1346: {
 18021                           ;drv_mrf_miwi_89xa.c: 1347: hasAck = 1;
 18022  000126  0E01               	movlw	1
 18023  000128  6FE3               	movwf	_hasAck& (0+255),b	;volatile
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;drv_mrf_miwi_89xa.c: 1350: goto RETURN_HERE;
 18027  00012A  D12C               	goto	i2l11056
 18028  00012C                     i2l10966:
 18029                           
 18030                           ; BSR set to: 0
 18031                           ;drv_mrf_miwi_89xa.c: 1352: else
 18032                           ;drv_mrf_miwi_89xa.c: 1354: if( BankIndex >= 2 )
 18033  00012C  0E01               	movlw	1
 18034  00012E  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 18035  000130  D001               	goto	i2l10970
 18036  000132  D7AF               	goto	i2l10924
 18037  000134                     i2l10970:
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;drv_mrf_miwi_89xa.c: 1358: }
 18041                           ;drv_mrf_miwi_89xa.c: 1359: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 18042  000134  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18043  000136  0D39               	mullw	57
 18044  000138  0E01               	movlw	low (_RxPacket+1)
 18045  00013A  24F3               	addwf	prodl,w,c
 18046  00013C  6ED9               	movwf	fsr2l,c
 18047  00013E  0E03               	movlw	high (_RxPacket+1)
 18048  000140  20F4               	addwfc	prodh,w,c
 18049  000142  6EDA               	movwf	fsr2h,c
 18050  000144  C063  FFDF         	movff	high_isr@ackPacket,indf2
 18051                           
 18052                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 18053  000148  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18054  00014A  0D39               	mullw	57
 18055  00014C  0E02               	movlw	low (_RxPacket+2)
 18056  00014E  24F3               	addwf	prodl,w,c
 18057  000150  6ED9               	movwf	fsr2l,c
 18058  000152  0E03               	movlw	high (_RxPacket+2)
 18059  000154  20F4               	addwfc	prodh,w,c
 18060  000156  6EDA               	movwf	fsr2h,c
 18061  000158  C064  FFDF         	movff	high_isr@ackPacket+1,indf2
 18062  00015C                     i2l192:
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;drv_mrf_miwi_89xa.c: 1362: }
 18066                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].PayloadLen = PacketLen;
 18067  00015C  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18068  00015E  0D39               	mullw	57
 18069  000160  0E38               	movlw	low (_RxPacket+56)
 18070  000162  24F3               	addwf	prodl,w,c
 18071  000164  6ED9               	movwf	fsr2l,c
 18072  000166  0E03               	movlw	high (_RxPacket+56)
 18073  000168  20F4               	addwfc	prodh,w,c
 18074  00016A  6EDA               	movwf	fsr2h,c
 18075  00016C  C06A  FFDF         	movff	high_isr@PacketLen,indf2
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;drv_mrf_miwi_89xa.c: 1381: {
 18079                           ;drv_mrf_miwi_89xa.c: 1382: uint8_t ackInfoIndex = 0xFF;
 18080  000170  6969               	setf	high_isr@ackInfoIndex& (0+255),b
 18081                           
 18082                           ;drv_mrf_miwi_89xa.c: 1384: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 18083  000172  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18084  000174  0D39               	mullw	57
 18085  000176  0E01               	movlw	low (_RxPacket+1)
 18086  000178  24F3               	addwf	prodl,w,c
 18087  00017A  6ED9               	movwf	fsr2l,c
 18088  00017C  0E03               	movlw	high (_RxPacket+1)
 18089  00017E  20F4               	addwfc	prodh,w,c
 18090  000180  6EDA               	movwf	fsr2h,c
 18091  000182  ACDF               	btfss	indf2,6,c
 18092  000184  D033               	goto	i2l10986
 18093                           
 18094                           ; BSR set to: 3
 18095                           ;drv_mrf_miwi_89xa.c: 1385: {
 18096                           ;drv_mrf_miwi_89xa.c: 1386: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 18097  000186  0100               	movlb	0	; () banked
 18098  000188  6B6C               	clrf	high_isr@i& (0+255),b
 18099  00018A  D028               	goto	i2l10984
 18100  00018C                     i2l10976:
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;drv_mrf_miwi_89xa.c: 1387: {
 18104                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 18105  00018C  516C               	movf	high_isr@i& (0+255),w,b
 18106  00018E  240C               	addwf	_MACInitParams+1,w,c
 18107  000190  6ED9               	movwf	fsr2l,c
 18108  000192  0E00               	movlw	0
 18109  000194  200D               	addwfc	_MACInitParams+2,w,c
 18110  000196  6EDA               	movwf	fsr2h,c
 18111  000198  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18112  00019A  0D39               	mullw	57
 18113  00019C  0E00               	movlw	low _RxPacket
 18114  00019E  6E4C               	movwf	(??_high_isr+1)& (0+255),c
 18115  0001A0  0E03               	movlw	high _RxPacket
 18116  0001A2  6E4D               	movwf	(??_high_isr+2)& (0+255),c
 18117  0001A4  0E03               	movlw	3
 18118  0001A6  264C               	addwf	??_high_isr+1,f,c
 18119  0001A8  0E00               	movlw	0
 18120  0001AA  224D               	addwfc	??_high_isr+2,f,c
 18121  0001AC  50F3               	movf	prodl,w,c
 18122  0001AE  264C               	addwf	??_high_isr+1,f,c
 18123  0001B0  50F4               	movf	prodh,w,c
 18124  0001B2  224D               	addwfc	??_high_isr+2,f,c
 18125  0001B4  516C               	movf	high_isr@i& (0+255),w,b
 18126  0001B6  244C               	addwf	??_high_isr+1,w,c
 18127  0001B8  6EE1               	movwf	fsr1l,c
 18128  0001BA  0E00               	movlw	0
 18129  0001BC  204D               	addwfc	??_high_isr+2,w,c
 18130  0001BE  6EE2               	movwf	fsr1h,c
 18131  0001C0  50DE               	movf	postinc2,w,c
 18132  0001C2  18E6               	xorwf	postinc1,w,c
 18133  0001C4  E00A               	bz	i2l10982
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;drv_mrf_miwi_89xa.c: 1391: RxPacket[BankIndex].PayloadLen = 0;
 18137                           
 18138                           ; BSR set to: 0
 18139  0001C6  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18140  0001C8  0D39               	mullw	57
 18141  0001CA  0E38               	movlw	low (_RxPacket+56)
 18142  0001CC  24F3               	addwf	prodl,w,c
 18143  0001CE  6ED9               	movwf	fsr2l,c
 18144  0001D0  0E03               	movlw	high (_RxPacket+56)
 18145  0001D2  20F4               	addwfc	prodh,w,c
 18146  0001D4  6EDA               	movwf	fsr2h,c
 18147  0001D6  6ADF               	clrf	indf2,c
 18148                           
 18149                           ;drv_mrf_miwi_89xa.c: 1392: goto IGNORE_HERE;
 18150  0001D8  D75C               	goto	i2l10924
 18151  0001DA                     i2l10982:
 18152                           
 18153                           ; BSR set to: 0
 18154  0001DA  2B6C               	incf	high_isr@i& (0+255),f,b
 18155  0001DC                     i2l10984:
 18156                           
 18157                           ; BSR set to: 0
 18158  0001DC  300B               	rrcf	_MACInitParams,w,c
 18159  0001DE  32E8               	rrcf	wreg,f,c
 18160  0001E0  32E8               	rrcf	wreg,f,c
 18161  0001E2  0B0F               	andlw	15
 18162  0001E4  6E4B               	movwf	??_high_isr& (0+255),c
 18163  0001E6  504B               	movf	??_high_isr,w,c
 18164  0001E8  5D6C               	subwf	high_isr@i& (0+255),w,b
 18165  0001EA  E3D0               	bnc	i2l10976
 18166  0001EC                     i2l10986:
 18167                           
 18168                           ;drv_mrf_miwi_89xa.c: 1393: }
 18169                           ;drv_mrf_miwi_89xa.c: 1394: }
 18170                           ;drv_mrf_miwi_89xa.c: 1395: }
 18171                           ;drv_mrf_miwi_89xa.c: 1398: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 18172  0001EC  0100               	movlb	0	; () banked
 18173  0001EE  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18174  0001F0  0D39               	mullw	57
 18175  0001F2  0E01               	movlw	low (_RxPacket+1)
 18176  0001F4  24F3               	addwf	prodl,w,c
 18177  0001F6  6ED9               	movwf	fsr2l,c
 18178  0001F8  0E03               	movlw	high (_RxPacket+1)
 18179  0001FA  20F4               	addwfc	prodh,w,c
 18180  0001FC  6EDA               	movwf	fsr2h,c
 18181  0001FE  AADF               	btfss	indf2,5,c
 18182  000200  D037               	goto	i2l202
 18183                           
 18184                           ; BSR set to: 3
 18185                           ;drv_mrf_miwi_89xa.c: 1399: {
 18186                           ;drv_mrf_miwi_89xa.c: 1401: for(i = 0; i < 2; i++)
 18187  000202  6B6C               	clrf	high_isr@i& (0+255),b
 18188  000204                     i2l10994:
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;drv_mrf_miwi_89xa.c: 1402: {
 18192                           ;drv_mrf_miwi_89xa.c: 1403: ackPacket[i] = MACTxBuffer[i];
 18193  000204  0E00               	movlw	low _MACTxBuffer
 18194  000206  256C               	addwf	high_isr@i& (0+255),w,b
 18195  000208  6ED9               	movwf	fsr2l,c
 18196  00020A  6ADA               	clrf	fsr2h,c
 18197  00020C  0E01               	movlw	high _MACTxBuffer
 18198  00020E  22DA               	addwfc	fsr2h,f,c
 18199  000210  516C               	movf	high_isr@i& (0+255),w,b
 18200  000212  0F63               	addlw	low high_isr@ackPacket
 18201  000214  6EE1               	movwf	fsr1l,c
 18202  000216  6AE2               	clrf	fsr1h,c
 18203  000218  CFDF FFE7          	movff	indf2,indf1
 18204                           
 18205                           ; BSR set to: 0
 18206  00021C  2B6C               	incf	high_isr@i& (0+255),f,b
 18207                           
 18208                           ; BSR set to: 0
 18209  00021E  0E01               	movlw	1
 18210  000220  656C               	cpfsgt	high_isr@i& (0+255),b
 18211  000222  D7F0               	goto	i2l10994
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;drv_mrf_miwi_89xa.c: 1404: }
 18215                           ;drv_mrf_miwi_89xa.c: 1405: MACTxBuffer[0] = 0x02 | 0x04;
 18216  000224  0E06               	movlw	6
 18217  000226  0101               	movlb	1	; () banked
 18218  000228  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 18219                           
 18220                           ; BSR set to: 1
 18221                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 18222  00022A  0100               	movlb	0	; () banked
 18223  00022C  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18224  00022E  0D39               	mullw	57
 18225  000230  0E02               	movlw	low (_RxPacket+2)
 18226  000232  24F3               	addwf	prodl,w,c
 18227  000234  6ED9               	movwf	fsr2l,c
 18228  000236  0E03               	movlw	high (_RxPacket+2)
 18229  000238  20F4               	addwfc	prodh,w,c
 18230  00023A  6EDA               	movwf	fsr2h,c
 18231  00023C  50DF               	movf	indf2,w,c
 18232  00023E  0101               	movlb	1	; () banked
 18233  000240  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 18234                           
 18235                           ; BSR set to: 1
 18236                           ;drv_mrf_miwi_89xa.c: 1407: INTCON3bits.INT3IF = 0;
 18237  000242  94F0               	bcf	intcon3,2,c	;volatile
 18238                           
 18239                           ; BSR set to: 1
 18240                           ;drv_mrf_miwi_89xa.c: 1408: TxPacket(2, 0);
 18241  000244  6A37               	clrf	i2TxPacket@CCA,c
 18242  000246  0E02               	movlw	2
 18243  000248  ECD0  F08F         	call	i2_TxPacket
 18244                           
 18245                           ;drv_mrf_miwi_89xa.c: 1411: for(i = 0; i < 2; i++)
 18246  00024C  0100               	movlb	0	; () banked
 18247  00024E  6B6C               	clrf	high_isr@i& (0+255),b
 18248  000250                     i2l11014:
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;drv_mrf_miwi_89xa.c: 1412: {
 18252                           ;drv_mrf_miwi_89xa.c: 1413: MACTxBuffer[i] = ackPacket[i];
 18253  000250  516C               	movf	high_isr@i& (0+255),w,b
 18254  000252  0F63               	addlw	low high_isr@ackPacket
 18255  000254  6ED9               	movwf	fsr2l,c
 18256  000256  6ADA               	clrf	fsr2h,c
 18257  000258  0E00               	movlw	low _MACTxBuffer
 18258  00025A  256C               	addwf	high_isr@i& (0+255),w,b
 18259  00025C  6EE1               	movwf	fsr1l,c
 18260  00025E  6AE2               	clrf	fsr1h,c
 18261  000260  0E01               	movlw	high _MACTxBuffer
 18262  000262  22E2               	addwfc	fsr1h,f,c
 18263  000264  CFDF FFE7          	movff	indf2,indf1
 18264                           
 18265                           ; BSR set to: 0
 18266  000268  2B6C               	incf	high_isr@i& (0+255),f,b
 18267                           
 18268                           ; BSR set to: 0
 18269  00026A  0E01               	movlw	1
 18270  00026C  656C               	cpfsgt	high_isr@i& (0+255),b
 18271  00026E  D7F0               	goto	i2l11014
 18272  000270                     i2l202:
 18273                           
 18274                           ;drv_mrf_miwi_89xa.c: 1414: }
 18275                           ;drv_mrf_miwi_89xa.c: 1415: }
 18276                           ;drv_mrf_miwi_89xa.c: 1419: for(i = 0; i < 5; i++)
 18277  000270  0100               	movlb	0	; () banked
 18278  000272  6B6C               	clrf	high_isr@i& (0+255),b
 18279  000274                     i2l11024:
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;drv_mrf_miwi_89xa.c: 1420: {
 18283                           ;drv_mrf_miwi_89xa.c: 1421: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 18284  000274  516C               	movf	high_isr@i& (0+255),w,b
 18285  000276  0D06               	mullw	6
 18286  000278  0E00               	movlw	low _AckInfo
 18287  00027A  24F3               	addwf	prodl,w,c
 18288  00027C  6ED9               	movwf	fsr2l,c
 18289  00027E  0E02               	movlw	high _AckInfo
 18290  000280  20F4               	addwfc	prodh,w,c
 18291  000282  6EDA               	movwf	fsr2h,c
 18292  000284  50DF               	movf	indf2,w,c
 18293  000286  E026               	bz	i2l11030
 18294                           
 18295                           ; BSR set to: 0
 18296  000288  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18297  00028A  0D39               	mullw	57
 18298  00028C  0E02               	movlw	low (_RxPacket+2)
 18299  00028E  24F3               	addwf	prodl,w,c
 18300  000290  6ED9               	movwf	fsr2l,c
 18301  000292  0E03               	movlw	high (_RxPacket+2)
 18302  000294  20F4               	addwfc	prodh,w,c
 18303  000296  6EDA               	movwf	fsr2h,c
 18304  000298  516C               	movf	high_isr@i& (0+255),w,b
 18305  00029A  0D06               	mullw	6
 18306  00029C  0E01               	movlw	low (_AckInfo+1)
 18307  00029E  24F3               	addwf	prodl,w,c
 18308  0002A0  6EE1               	movwf	fsr1l,c
 18309  0002A2  0E02               	movlw	high (_AckInfo+1)
 18310  0002A4  20F4               	addwfc	prodh,w,c
 18311  0002A6  6EE2               	movwf	fsr1h,c
 18312  0002A8  50DE               	movf	postinc2,w,c
 18313  0002AA  18E6               	xorwf	postinc1,w,c
 18314  0002AC  E113               	bnz	i2l11030
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;drv_mrf_miwi_89xa.c: 1422: {
 18318                           ;drv_mrf_miwi_89xa.c: 1423: AckInfo[i].startTick = MiWi_TickGet();
 18319  0002AE  EC23  F097         	call	i2_MiWi_TickGet	;wreg free
 18320  0002B2  516C               	movf	high_isr@i& (0+255),w,b
 18321  0002B4  0D06               	mullw	6
 18322  0002B6  0E02               	movlw	low (_AckInfo+2)
 18323  0002B8  24F3               	addwf	prodl,w,c
 18324  0002BA  6ED9               	movwf	fsr2l,c
 18325  0002BC  0E02               	movlw	high (_AckInfo+2)
 18326  0002BE  20F4               	addwfc	prodh,w,c
 18327  0002C0  6EDA               	movwf	fsr2h,c
 18328  0002C2  C02D  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 18329  0002C6  C02E  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 18330  0002CA  C02F  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 18331  0002CE  C030  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 18332                           
 18333                           ;drv_mrf_miwi_89xa.c: 1424: break;
 18334  0002D2  D012               	goto	i2l11040
 18335  0002D4                     i2l11030:
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;drv_mrf_miwi_89xa.c: 1425: }
 18339                           ;drv_mrf_miwi_89xa.c: 1426: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 18340  0002D4  2969               	incf	high_isr@ackInfoIndex& (0+255),w,b
 18341  0002D6  E10C               	bnz	i2l11036
 18342                           
 18343                           ; BSR set to: 0
 18344  0002D8  516C               	movf	high_isr@i& (0+255),w,b
 18345  0002DA  0D06               	mullw	6
 18346  0002DC  0E00               	movlw	low _AckInfo
 18347  0002DE  24F3               	addwf	prodl,w,c
 18348  0002E0  6ED9               	movwf	fsr2l,c
 18349  0002E2  0E02               	movlw	high _AckInfo
 18350  0002E4  20F4               	addwfc	prodh,w,c
 18351  0002E6  6EDA               	movwf	fsr2h,c
 18352  0002E8  50DF               	movf	indf2,w,c
 18353  0002EA  E102               	bnz	i2l11036
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;drv_mrf_miwi_89xa.c: 1427: {
 18357                           ;drv_mrf_miwi_89xa.c: 1428: ackInfoIndex = i;
 18358  0002EC  C06C  F069         	movff	high_isr@i,high_isr@ackInfoIndex
 18359  0002F0                     i2l11036:
 18360                           
 18361                           ; BSR set to: 0
 18362  0002F0  2B6C               	incf	high_isr@i& (0+255),f,b
 18363                           
 18364                           ; BSR set to: 0
 18365  0002F2  0E04               	movlw	4
 18366  0002F4  656C               	cpfsgt	high_isr@i& (0+255),b
 18367  0002F6  D7BE               	goto	i2l11024
 18368  0002F8                     i2l11040:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;drv_mrf_miwi_89xa.c: 1429: }
 18372                           ;drv_mrf_miwi_89xa.c: 1430: }
 18373                           ;drv_mrf_miwi_89xa.c: 1432: if( i >= 5 )
 18374  0002F8  0E04               	movlw	4
 18375  0002FA  656C               	cpfsgt	high_isr@i& (0+255),b
 18376  0002FC  D043               	goto	i2l11056
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;drv_mrf_miwi_89xa.c: 1433: {
 18380                           ;drv_mrf_miwi_89xa.c: 1434: if( ackInfoIndex < 5 )
 18381  0002FE  0E05               	movlw	5
 18382  000300  6169               	cpfslt	high_isr@ackInfoIndex& (0+255),b
 18383  000302  D02E               	goto	i2l11050
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;drv_mrf_miwi_89xa.c: 1435: {
 18387                           ;drv_mrf_miwi_89xa.c: 1436: AckInfo[ackInfoIndex].Valid = 1;
 18388  000304  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 18389  000306  0D06               	mullw	6
 18390  000308  0E00               	movlw	low _AckInfo
 18391  00030A  24F3               	addwf	prodl,w,c
 18392  00030C  6ED9               	movwf	fsr2l,c
 18393  00030E  0E02               	movlw	high _AckInfo
 18394  000310  20F4               	addwfc	prodh,w,c
 18395  000312  6EDA               	movwf	fsr2h,c
 18396  000314  0E01               	movlw	1
 18397  000316  6EDF               	movwf	indf2,c
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 18401  000318  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18402  00031A  0D39               	mullw	57
 18403  00031C  0E02               	movlw	low (_RxPacket+2)
 18404  00031E  24F3               	addwf	prodl,w,c
 18405  000320  6ED9               	movwf	fsr2l,c
 18406  000322  0E03               	movlw	high (_RxPacket+2)
 18407  000324  20F4               	addwfc	prodh,w,c
 18408  000326  6EDA               	movwf	fsr2h,c
 18409  000328  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 18410  00032A  0D06               	mullw	6
 18411  00032C  0E01               	movlw	low (_AckInfo+1)
 18412  00032E  24F3               	addwf	prodl,w,c
 18413  000330  6EE1               	movwf	fsr1l,c
 18414  000332  0E02               	movlw	high (_AckInfo+1)
 18415  000334  20F4               	addwfc	prodh,w,c
 18416  000336  6EE2               	movwf	fsr1h,c
 18417  000338  CFDF FFE7          	movff	indf2,indf1
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 18421  00033C  EC23  F097         	call	i2_MiWi_TickGet	;wreg free
 18422  000340  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 18423  000342  0D06               	mullw	6
 18424  000344  0E02               	movlw	low (_AckInfo+2)
 18425  000346  24F3               	addwf	prodl,w,c
 18426  000348  6ED9               	movwf	fsr2l,c
 18427  00034A  0E02               	movlw	high (_AckInfo+2)
 18428  00034C  20F4               	addwfc	prodh,w,c
 18429  00034E  6EDA               	movwf	fsr2h,c
 18430  000350  C02D  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 18431  000354  C02E  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 18432  000358  C02F  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 18433  00035C  C030  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 18434  000360                     i2l11050:
 18435                           
 18436                           ; BSR set to: 0
 18437                           ;drv_mrf_miwi_89xa.c: 1439: }
 18438                           ;drv_mrf_miwi_89xa.c: 1442: RxPacket[BankIndex].flags.bits.Valid = 1;
 18439  000360  516B               	movf	high_isr@BankIndex& (0+255),w,b
 18440  000362  0D39               	mullw	57
 18441  000364  0E00               	movlw	low _RxPacket
 18442  000366  24F3               	addwf	prodl,w,c
 18443  000368  6ED9               	movwf	fsr2l,c
 18444  00036A  0E03               	movlw	high _RxPacket
 18445  00036C  20F4               	addwfc	prodh,w,c
 18446  00036E  6EDA               	movwf	fsr2h,c
 18447  000370  0103               	movlb	3	; () banked
 18448  000372  80DF               	bsf	indf2,0,c
 18449  000374  D007               	goto	i2l11056
 18450  000376                     i2l11052:
 18451                           
 18452                           ; BSR set to: 0
 18453  000376  5160               	movf	high_isr@counter& (0+255),w,b
 18454  000378  1161               	iorwf	(high_isr@counter+1)& (0+255),w,b
 18455  00037A  E004               	bz	i2l11056
 18456  00037C  D69F               	goto	i2l10934
 18457  00037E                     i2l11054:
 18458                           
 18459                           ;drv_mrf_miwi_89xa.c: 1457: else
 18460                           ;drv_mrf_miwi_89xa.c: 1458: {
 18461                           ;drv_mrf_miwi_89xa.c: 1460: IRQ1_Received = 1;
 18462  00037E  0E01               	movlw	1
 18463  000380  0100               	movlb	0	; () banked
 18464  000382  6FDE               	movwf	_IRQ1_Received& (0+255),b	;volatile
 18465  000384                     i2l11056:
 18466                           
 18467                           ;drv_mrf_miwi_89xa.c: 1464: INTCON3bits.INT3IF = 0;
 18468  000384  94F0               	bcf	intcon3,2,c	;volatile
 18469                           
 18470                           ;drv_mrf_miwi_89xa.c: 1466: __nop();
 18471  000386  F000               	nop	
 18472  000388                     i2l11060:
 18473                           
 18474                           ;drv_mrf_miwi_89xa.c: 1467: }
 18475                           ;drv_mrf_miwi_89xa.c: 1487: if(PIR1bits.TMR1IF)
 18476  000388  B09E               	btfsc	3998,0,c	;volatile
 18477                           
 18478                           ;drv_mrf_miwi_89xa.c: 1488: {
 18479                           ;drv_mrf_miwi_89xa.c: 1489: if(PIE1bits.TMR1IE)
 18480  00038A  A09D               	btfss	3997,0,c	;volatile
 18481  00038C  D006               	goto	i2l11072
 18482                           
 18483                           ;drv_mrf_miwi_89xa.c: 1490: {
 18484                           ;drv_mrf_miwi_89xa.c: 1492: PIR1bits.TMR1IF = 0;
 18485  00038E  909E               	bcf	3998,0,c	;volatile
 18486                           
 18487                           ;drv_mrf_miwi_89xa.c: 1493: timerExtension1++;
 18488  000390  2A22               	incf	_timerExtension1,f,c	;volatile
 18489                           
 18490                           ;drv_mrf_miwi_89xa.c: 1494: if(timerExtension1 == 0)
 18491  000392  5022               	movf	_timerExtension1,w,c	;volatile
 18492  000394  E102               	bnz	i2l11072
 18493                           
 18494                           ;drv_mrf_miwi_89xa.c: 1495: {
 18495                           ;drv_mrf_miwi_89xa.c: 1496: timerExtension2++;
 18496  000396  0100               	movlb	0	; () banked
 18497  000398  2BE5               	incf	_timerExtension2& (0+255),f,b	;volatile
 18498  00039A                     i2l11072:
 18499                           
 18500                           ;drv_mrf_miwi_89xa.c: 1497: }
 18501                           ;drv_mrf_miwi_89xa.c: 1498: }
 18502                           ;drv_mrf_miwi_89xa.c: 1499: }
 18503                           ;drv_mrf_miwi_89xa.c: 1501: UserInterruptHandler();
 18504  00039A  EC54  F09B         	call	_UserInterruptHandler	;wreg free
 18505  00039E  C054  FFF4         	movff	??_high_isr+9,prodh
 18506  0003A2  C053  FFF3         	movff	??_high_isr+8,prodl
 18507  0003A6  C052  FFDA         	movff	??_high_isr+7,fsr2h
 18508  0003AA  C051  FFD9         	movff	??_high_isr+6,fsr2l
 18509  0003AE  C050  FFE2         	movff	??_high_isr+5,fsr1h
 18510  0003B2  C04F  FFE1         	movff	??_high_isr+4,fsr1l
 18511  0003B6  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18512  0003B8  0011               	retfie		f
 18513  0003BA                     __end_of_high_isr:
 18514                           	opt stack 0
 18515                           tblptru	equ	0xFF8
 18516                           tblptrh	equ	0xFF7
 18517                           tblptrl	equ	0xFF6
 18518                           tablat	equ	0xFF5
 18519                           prodh	equ	0xFF4
 18520                           prodl	equ	0xFF3
 18521                           intcon	equ	0xFF2
 18522                           intcon2	equ	0xFF1
 18523                           intcon3	equ	0xFF0
 18524                           postinc0	equ	0xFEE
 18525                           wreg	equ	0xFE8
 18526                           indf1	equ	0xFE7
 18527                           postinc1	equ	0xFE6
 18528                           postdec1	equ	0xFE5
 18529                           fsr1h	equ	0xFE2
 18530                           fsr1l	equ	0xFE1
 18531                           indf2	equ	0xFDF
 18532                           postinc2	equ	0xFDE
 18533                           postdec2	equ	0xFDD
 18534                           fsr2h	equ	0xFDA
 18535                           fsr2l	equ	0xFD9
 18536                           status	equ	0xFD8
 18537                           
 18538 ;; *************** function i2_TxPacket *****************
 18539 ;; Defined at:
 18540 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;  TxPacketLen     1    wreg     unsigned char 
 18543 ;;  CCA             1   10[COMRAM] unsigned char 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;  TxPacketLen     1   15[COMRAM] unsigned char 
 18546 ;;  TxPacket        4   21[COMRAM] struct _MIWI_TICK
 18547 ;;  TxPacket        4   17[COMRAM] struct _MIWI_TICK
 18548 ;;  TxPacket        1   29[COMRAM] unsigned char 
 18549 ;;  TxPacket        1   28[COMRAM] unsigned char 
 18550 ;;  TxPacket        1   27[COMRAM] unsigned char 
 18551 ;;  TxPacket        1   26[COMRAM] unsigned char 
 18552 ;;  TxPacket        1   25[COMRAM] unsigned char 
 18553 ;;  TxPacket        1   16[COMRAM] unsigned char 
 18554 ;; Return value:  Size  Location     Type
 18555 ;;                  1    wreg      unsigned char 
 18556 ;; Registers used:
 18557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18558 ;; Tracked objects:
 18559 ;;		On entry : F/1
 18560 ;;		On exit  : 0/0
 18561 ;;		Unchanged: 0/0
 18562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18564 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18566 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18567 ;;Total ram usage:       20 bytes
 18568 ;; Hardware stack levels used:    1
 18569 ;; Hardware stack levels required when called:    3
 18570 ;; This function calls:
 18571 ;;		i2_DELAY_10us
 18572 ;;		i2_MiWi_TickGet
 18573 ;;		i2_RegisterRead
 18574 ;;		i2_RegisterSet
 18575 ;;		i2_SetRFMode
 18576 ;;		i2_WriteFIFO
 18577 ;; This function is called by:
 18578 ;;		_high_isr
 18579 ;; This function uses a non-reentrant model
 18580 ;;
 18581                           
 18582                           	psect	text84
 18583  011FA0                     __ptext84:
 18584                           	opt stack 0
 18585  011FA0                     i2_TxPacket:
 18586                           	opt stack 12
 18587                           
 18588                           ;incstack = 0
 18589                           ;i2TxPacket@TxPacketLen stored from wreg
 18590  011FA0  6E3C               	movwf	i2TxPacket@TxPacketLen,c
 18591                           
 18592                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 18593                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 18594                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 18595                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 18596                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 18597                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 18598  011FA2  0E03               	movlw	3
 18599  011FA4  6E47               	movwf	i2TxPacket@reTry,c
 18600                           
 18601                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 18602  011FA6  D084               	goto	i2l10880
 18603  011FA8                     i2l82:
 18604                           
 18605                           ;drv_mrf_miwi_89xa.c: 305: {
 18606                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 18607                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 18608  011FA8  6A48               	clrf	i2TxPacket@allowedTxFailure,c
 18609  011FAA                     i2l83:
 18610                           
 18611                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 18612  011FAA  0100               	movlb	0	; () banked
 18613  011FAC  6BE3               	clrf	_hasAck& (0+255),b	;volatile
 18614                           
 18615                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 18616  011FAE  6A46               	clrf	i2TxPacket@CCARetries,c
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 18620  011FB0  5037               	movf	i2TxPacket@CCA,w,c
 18621  011FB2  E019               	bz	i2l84
 18622  011FB4                     i2l10822:
 18623                           
 18624                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 18625  011FB4  0E28               	movlw	40
 18626  011FB6  ECE6  F099         	call	i2_RegisterRead
 18627  011FBA  6E49               	movwf	i2TxPacket@rssival,c
 18628                           
 18629                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 18630  011FBC  90D8               	bcf	status,0,c
 18631  011FBE  3249               	rrcf	i2TxPacket@rssival,f,c
 18632                           
 18633                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 18634  011FC0  0E41               	movlw	65
 18635  011FC2  6449               	cpfsgt	i2TxPacket@rssival,c
 18636  011FC4  D010               	goto	i2l84
 18637                           
 18638                           ;drv_mrf_miwi_89xa.c: 326: {
 18639                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 18640  011FC6  2A46               	incf	i2TxPacket@CCARetries,f,c
 18641  011FC8  0446               	decf	i2TxPacket@CCARetries,w,c
 18642  011FCA  6E38               	movwf	??i2_TxPacket& (0+255),c
 18643  011FCC  0E04               	movlw	4
 18644  011FCE  6438               	cpfsgt	??i2_TxPacket,c
 18645  011FD0  D001               	goto	i2l10832
 18646  011FD2  0C04               	retlw	4
 18647  011FD4                     i2l10832:
 18648                           
 18649                           ;drv_mrf_miwi_89xa.c: 331: }
 18650                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 18651  011FD4  0E01               	movlw	1
 18652  011FD6  6E2D               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 18653  011FD8  0E00               	movlw	0
 18654  011FDA  6A2E               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 18655  011FDC  6A2F               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 18656  011FDE  6A30               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 18657  011FE0  EC53  F09B         	call	i2_DELAY_10us	;wreg free
 18658                           
 18659                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 18660  011FE4  D7E7               	goto	i2l10822
 18661  011FE6                     i2l84:
 18662                           
 18663                           ;drv_mrf_miwi_89xa.c: 334: }
 18664                           ;drv_mrf_miwi_89xa.c: 335: }
 18665                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
 18666  011FE6  9AF0               	bcf	intcon3,5,c	;volatile
 18667                           
 18668                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 18669  011FE8  0E20               	movlw	32
 18670  011FEA  EC67  F096         	call	i2_SetRFMode
 18671                           
 18672                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 18673  011FEE  0E1A               	movlw	26
 18674  011FF0  6E2F               	movwf	i2RegisterSet@setting+1,c
 18675  011FF2  0EC9               	movlw	201
 18676  011FF4  6E2E               	movwf	i2RegisterSet@setting,c
 18677  011FF6  EC88  F09A         	call	i2_RegisterSet	;wreg free
 18678                           
 18679                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 18680  011FFA  503C               	movf	i2TxPacket@TxPacketLen,w,c
 18681  011FFC  ECAD  F09A         	call	i2_WriteFIFO
 18682                           
 18683                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 18684  012000  6A4A               	clrf	i2TxPacket@i,c
 18685  012002  D00A               	goto	i2l10846
 18686  012004                     i2l10842:
 18687                           
 18688                           ;drv_mrf_miwi_89xa.c: 347: {
 18689                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 18690  012004  0E00               	movlw	low _MACTxBuffer
 18691  012006  244A               	addwf	i2TxPacket@i,w,c
 18692  012008  6ED9               	movwf	fsr2l,c
 18693  01200A  6ADA               	clrf	fsr2h,c
 18694  01200C  0E01               	movlw	high _MACTxBuffer
 18695  01200E  22DA               	addwfc	fsr2h,f,c
 18696  012010  50DF               	movf	indf2,w,c
 18697  012012  ECAD  F09A         	call	i2_WriteFIFO
 18698  012016  2A4A               	incf	i2TxPacket@i,f,c
 18699  012018                     i2l10846:
 18700  012018  503C               	movf	i2TxPacket@TxPacketLen,w,c
 18701  01201A  5C4A               	subwf	i2TxPacket@i,w,c
 18702  01201C  E3F3               	bnc	i2l10842
 18703                           
 18704                           ;drv_mrf_miwi_89xa.c: 349: }
 18705                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 18706  01201E  0E80               	movlw	128
 18707  012020  EC67  F096         	call	i2_SetRFMode
 18708                           
 18709                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
 18710  012024  8AF0               	bsf	intcon3,5,c	;volatile
 18711  012026                     i2l10852:
 18712  012026  0100               	movlb	0	; () banked
 18713  012028  51DE               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 18714  01202A  E102               	bnz	i2l96
 18715                           
 18716                           ; BSR set to: 0
 18717  01202C  A4F0               	btfss	intcon3,2,c	;volatile
 18718  01202E  D7FB               	goto	i2l10852
 18719  012030                     i2l96:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;drv_mrf_miwi_89xa.c: 358: };
 18723                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 18724  012030  6BDE               	clrf	_IRQ1_Received& (0+255),b	;volatile
 18725                           
 18726                           ; BSR set to: 0
 18727                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 18728  012032  0E20               	movlw	32
 18729  012034  EC67  F096         	call	i2_SetRFMode
 18730                           
 18731                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 18732  012038  0E60               	movlw	96
 18733  01203A  EC67  F096         	call	i2_SetRFMode
 18734                           
 18735                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 18736  01203E  0101               	movlb	1	; () banked
 18737  012040  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 18738  012042  D00E               	goto	i2l10866
 18739                           
 18740                           ; BSR set to: 1
 18741                           ;drv_mrf_miwi_89xa.c: 368: {
 18742                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 18743  012044  C101  F019         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 18744                           
 18745                           ; BSR set to: 1
 18746                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 18747  012048  EC23  F097         	call	i2_MiWi_TickGet	;wreg free
 18748  01204C  C02D  F03E         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 18749  012050  C02E  F03F         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 18750  012054  C02F  F040         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 18751  012058  C030  F041         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 18752  01205C                     i2l10864:
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;drv_mrf_miwi_89xa.c: 372: {
 18756                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 18757  01205C  51E3               	movf	_hasAck& (0+255),w,b	;volatile
 18758  01205E  E003               	bz	i2l10868
 18759  012060                     i2l10866:
 18760                           
 18761                           ;drv_mrf_miwi_89xa.c: 374: {
 18762                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 18763  012060  0E01               	movlw	1
 18764  012062  6E3D               	movwf	i2TxPacket@status,c
 18765                           
 18766                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 18767  012064  0C01               	retlw	1
 18768  012066                     i2l10868:
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;drv_mrf_miwi_89xa.c: 377: }
 18772                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 18773  012066  EC23  F097         	call	i2_MiWi_TickGet	;wreg free
 18774  01206A  C02D  F042         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 18775  01206E  C02E  F043         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 18776  012072  C02F  F044         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 18777  012076  C030  F045         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 18778                           
 18779                           ; BSR set to: 0
 18780                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 18781  01207A  503E               	movf	i2TxPacket@t1,w,c
 18782  01207C  5C42               	subwf	i2TxPacket@t2,w,c
 18783  01207E  6E38               	movwf	??i2_TxPacket& (0+255),c
 18784  012080  503F               	movf	i2TxPacket@t1+1,w,c
 18785  012082  5843               	subwfb	i2TxPacket@t2+1,w,c
 18786  012084  6E39               	movwf	(??i2_TxPacket+1)& (0+255),c
 18787  012086  5040               	movf	i2TxPacket@t1+2,w,c
 18788  012088  5844               	subwfb	i2TxPacket@t2+2,w,c
 18789  01208A  6E3A               	movwf	(??i2_TxPacket+2)& (0+255),c
 18790  01208C  5041               	movf	i2TxPacket@t1+3,w,c
 18791  01208E  5845               	subwfb	i2TxPacket@t2+3,w,c
 18792  012090  6E3B               	movwf	(??i2_TxPacket+3)& (0+255),c
 18793  012092  503B               	movf	??i2_TxPacket+3,w,c
 18794  012094  103A               	iorwf	??i2_TxPacket+2,w,c
 18795  012096  E105               	bnz	i2u1042_40
 18796  012098  0E0A               	movlw	10
 18797  01209A  5C38               	subwf	??i2_TxPacket,w,c
 18798  01209C  0E3D               	movlw	61
 18799  01209E  5839               	subwfb	??i2_TxPacket+1,w,c
 18800  0120A0  E3DD               	bnc	i2l10864
 18801  0120A2                     i2u1042_40:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;drv_mrf_miwi_89xa.c: 382: }
 18805                           ;drv_mrf_miwi_89xa.c: 383: }
 18806                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 18807  0120A2  2A48               	incf	i2TxPacket@allowedTxFailure,f,c
 18808  0120A4  0448               	decf	i2TxPacket@allowedTxFailure,w,c
 18809  0120A6  6E38               	movwf	??i2_TxPacket& (0+255),c
 18810  0120A8  0E04               	movlw	4
 18811  0120AA  6038               	cpfslt	??i2_TxPacket,c
 18812  0120AC  D001               	goto	i2l10880
 18813  0120AE  D77D               	goto	i2l83
 18814  0120B0                     i2l10880:
 18815  0120B0  0647               	decf	i2TxPacket@reTry,f,c
 18816  0120B2  2847               	incf	i2TxPacket@reTry,w,c
 18817  0120B4  E001 D778          	bnz	i2l82
 18818                           
 18819                           ;drv_mrf_miwi_89xa.c: 394: }
 18820                           ;drv_mrf_miwi_89xa.c: 395: }
 18821                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 18822  0120B8  6A3D               	clrf	i2TxPacket@status,c
 18823  0120BA  0012               	return		;funcret
 18824  0120BC                     __end_ofi2_TxPacket:
 18825                           	opt stack 0
 18826                           tblptru	equ	0xFF8
 18827                           tblptrh	equ	0xFF7
 18828                           tblptrl	equ	0xFF6
 18829                           tablat	equ	0xFF5
 18830                           prodh	equ	0xFF4
 18831                           prodl	equ	0xFF3
 18832                           intcon	equ	0xFF2
 18833                           intcon2	equ	0xFF1
 18834                           intcon3	equ	0xFF0
 18835                           postinc0	equ	0xFEE
 18836                           wreg	equ	0xFE8
 18837                           indf1	equ	0xFE7
 18838                           postinc1	equ	0xFE6
 18839                           postdec1	equ	0xFE5
 18840                           fsr1h	equ	0xFE2
 18841                           fsr1l	equ	0xFE1
 18842                           indf2	equ	0xFDF
 18843                           postinc2	equ	0xFDE
 18844                           postdec2	equ	0xFDD
 18845                           fsr2h	equ	0xFDA
 18846                           fsr2l	equ	0xFD9
 18847                           status	equ	0xFD8
 18848                           
 18849 ;; *************** function i2_WriteFIFO *****************
 18850 ;; Defined at:
 18851 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18852 ;; Parameters:    Size  Location     Type
 18853 ;;  Data            1    wreg     unsigned char 
 18854 ;; Auto vars:     Size  Location     Type
 18855 ;;  Data            1    1[COMRAM] unsigned char 
 18856 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 18857 ;; Return value:  Size  Location     Type
 18858 ;;                  1    wreg      void 
 18859 ;; Registers used:
 18860 ;;		wreg, status,2, cstack
 18861 ;; Tracked objects:
 18862 ;;		On entry : 0/0
 18863 ;;		On exit  : 0/0
 18864 ;;		Unchanged: 0/0
 18865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18870 ;;Total ram usage:        2 bytes
 18871 ;; Hardware stack levels used:    1
 18872 ;; Hardware stack levels required when called:    1
 18873 ;; This function calls:
 18874 ;;		i2_SPIPut
 18875 ;; This function is called by:
 18876 ;;		i2_TxPacket
 18877 ;; This function uses a non-reentrant model
 18878 ;;
 18879                           
 18880                           	psect	text85
 18881  01355A                     __ptext85:
 18882                           	opt stack 0
 18883  01355A                     i2_WriteFIFO:
 18884                           	opt stack 13
 18885                           
 18886                           ;incstack = 0
 18887                           ;i2WriteFIFO@Data stored from wreg
 18888  01355A  6E2E               	movwf	i2WriteFIFO@Data,c
 18889                           
 18890                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
 18891  01355C  0E00               	movlw	0
 18892  01355E  BAF0               	btfsc	intcon3,5,c	;volatile
 18893  013560  0E01               	movlw	1
 18894  013562  6E2F               	movwf	i2WriteFIFO@IRQ1select,c
 18895                           
 18896                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
 18897  013564  9AF0               	bcf	intcon3,5,c	;volatile
 18898                           
 18899                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 18900  013566  948B               	bcf	3979,2,c	;volatile
 18901                           
 18902                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 18903  013568  502E               	movf	i2WriteFIFO@Data,w,c
 18904  01356A  ECF8  F09A         	call	i2_SPIPut
 18905                           
 18906                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 18907  01356E  848B               	bsf	3979,2,c	;volatile
 18908                           
 18909                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
 18910  013570  B02F               	btfsc	i2WriteFIFO@IRQ1select,0,c
 18911  013572  D002               	bra	i2u1025_45
 18912  013574  9AF0               	bcf	intcon3,5,c	;volatile
 18913  013576  D001               	bra	i2u1025_46
 18914  013578                     i2u1025_45:
 18915  013578  8AF0               	bsf	intcon3,5,c	;volatile
 18916  01357A                     i2u1025_46:
 18917  01357A  0012               	return		;funcret
 18918  01357C                     __end_ofi2_WriteFIFO:
 18919                           	opt stack 0
 18920                           tblptru	equ	0xFF8
 18921                           tblptrh	equ	0xFF7
 18922                           tblptrl	equ	0xFF6
 18923                           tablat	equ	0xFF5
 18924                           prodh	equ	0xFF4
 18925                           prodl	equ	0xFF3
 18926                           intcon	equ	0xFF2
 18927                           intcon2	equ	0xFF1
 18928                           intcon3	equ	0xFF0
 18929                           postinc0	equ	0xFEE
 18930                           wreg	equ	0xFE8
 18931                           indf1	equ	0xFE7
 18932                           postinc1	equ	0xFE6
 18933                           postdec1	equ	0xFE5
 18934                           fsr1h	equ	0xFE2
 18935                           fsr1l	equ	0xFE1
 18936                           indf2	equ	0xFDF
 18937                           postinc2	equ	0xFDE
 18938                           postdec2	equ	0xFDD
 18939                           fsr2h	equ	0xFDA
 18940                           fsr2l	equ	0xFD9
 18941                           status	equ	0xFD8
 18942                           
 18943 ;; *************** function i2_SetRFMode *****************
 18944 ;; Defined at:
 18945 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;  mode            1    wreg     unsigned char 
 18948 ;; Auto vars:     Size  Location     Type
 18949 ;;  mode            1    4[COMRAM] unsigned char 
 18950 ;; Return value:  Size  Location     Type
 18951 ;;                  1    wreg      void 
 18952 ;; Registers used:
 18953 ;;		wreg, status,2, status,0, cstack
 18954 ;; Tracked objects:
 18955 ;;		On entry : 0/0
 18956 ;;		On exit  : 0/0
 18957 ;;		Unchanged: 0/0
 18958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18963 ;;Total ram usage:        1 bytes
 18964 ;; Hardware stack levels used:    1
 18965 ;; Hardware stack levels required when called:    2
 18966 ;; This function calls:
 18967 ;;		i2_RegisterSet
 18968 ;; This function is called by:
 18969 ;;		i2_TxPacket
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text86
 18974  012CCE                     __ptext86:
 18975                           	opt stack 0
 18976  012CCE                     i2_SetRFMode:
 18977                           	opt stack 12
 18978                           
 18979                           ;incstack = 0
 18980                           ;i2SetRFMode@mode stored from wreg
 18981  012CCE  6E31               	movwf	i2SetRFMode@mode,c
 18982                           
 18983                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 18984  012CD0  D027               	goto	i2l10648
 18985  012CD2                     i2l10626:
 18986                           
 18987                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 18988  012CD2  6A2F               	clrf	i2RegisterSet@setting+1,c
 18989  012CD4  0E8E               	movlw	142
 18990  012CD6  6E2E               	movwf	i2RegisterSet@setting,c
 18991  012CD8  EC88  F09A         	call	i2_RegisterSet	;wreg free
 18992                           
 18993                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 18994  012CDC  0E80               	movlw	128
 18995  012CDE  6E14               	movwf	_RF_Mode,c
 18996                           
 18997                           ;drv_mrf_miwi_89xa.c: 673: break;
 18998  012CE0  0C80               	retlw	128
 18999  012CE2                     i2l10630:
 19000                           
 19001                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 19002  012CE2  6A2F               	clrf	i2RegisterSet@setting+1,c
 19003  012CE4  0E6E               	movlw	110
 19004  012CE6  6E2E               	movwf	i2RegisterSet@setting,c
 19005  012CE8  EC88  F09A         	call	i2_RegisterSet	;wreg free
 19006                           
 19007                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 19008  012CEC  0E60               	movlw	96
 19009  012CEE  6E14               	movwf	_RF_Mode,c
 19010                           
 19011                           ;drv_mrf_miwi_89xa.c: 677: break;
 19012  012CF0  0C60               	retlw	96
 19013  012CF2                     i2l10634:
 19014                           
 19015                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 19016  012CF2  6A2F               	clrf	i2RegisterSet@setting+1,c
 19017  012CF4  0E4E               	movlw	78
 19018  012CF6  6E2E               	movwf	i2RegisterSet@setting,c
 19019  012CF8  EC88  F09A         	call	i2_RegisterSet	;wreg free
 19020                           
 19021                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 19022  012CFC  0E40               	movlw	64
 19023  012CFE  6E14               	movwf	_RF_Mode,c
 19024                           
 19025                           ;drv_mrf_miwi_89xa.c: 681: break;
 19026  012D00  0C40               	retlw	64
 19027  012D02                     i2l10638:
 19028                           
 19029                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 19030  012D02  6A2F               	clrf	i2RegisterSet@setting+1,c
 19031  012D04  0E2E               	movlw	46
 19032  012D06  6E2E               	movwf	i2RegisterSet@setting,c
 19033  012D08  EC88  F09A         	call	i2_RegisterSet	;wreg free
 19034                           
 19035                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 19036  012D0C  0E20               	movlw	32
 19037  012D0E  6E14               	movwf	_RF_Mode,c
 19038                           
 19039                           ;drv_mrf_miwi_89xa.c: 685: break;
 19040  012D10  0C20               	retlw	32
 19041  012D12                     i2l10642:
 19042                           
 19043                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 19044  012D12  6A2F               	clrf	i2RegisterSet@setting+1,c
 19045  012D14  0E0E               	movlw	14
 19046  012D16  6E2E               	movwf	i2RegisterSet@setting,c
 19047  012D18  EC88  F09A         	call	i2_RegisterSet	;wreg free
 19048                           
 19049                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 19050  012D1C  6A14               	clrf	_RF_Mode,c
 19051                           
 19052                           ;drv_mrf_miwi_89xa.c: 689: break;
 19053  012D1E  0012               	return	
 19054  012D20                     i2l10648:
 19055  012D20  5031               	movf	i2SetRFMode@mode,w,c
 19056                           
 19057                           ; Switch size 1, requested type "speed"
 19058                           ; Number of cases is 5, Range of values is 0 to 128
 19059                           ; switch strategies available:
 19060                           ; Name         Instructions Cycles
 19061                           ; simple_byte           16     9 (average)
 19062                           ;	Chosen strategy is simple_byte
 19063  012D22  E0F7               	bz	i2l10642
 19064  012D24  0A20               	xorlw	32	; case 32
 19065  012D26  E0ED               	bz	i2l10638
 19066  012D28  0A60               	xorlw	96	; case 64
 19067  012D2A  E0E3               	bz	i2l10634
 19068  012D2C  0A20               	xorlw	32	; case 96
 19069  012D2E  E0D9               	bz	i2l10630
 19070  012D30  0AE0               	xorlw	224	; case 128
 19071  012D32  E0CF               	bz	i2l10626
 19072  012D34  0012               	return		;funcret
 19073  012D36                     __end_ofi2_SetRFMode:
 19074                           	opt stack 0
 19075                           tblptru	equ	0xFF8
 19076                           tblptrh	equ	0xFF7
 19077                           tblptrl	equ	0xFF6
 19078                           tablat	equ	0xFF5
 19079                           prodh	equ	0xFF4
 19080                           prodl	equ	0xFF3
 19081                           intcon	equ	0xFF2
 19082                           intcon2	equ	0xFF1
 19083                           intcon3	equ	0xFF0
 19084                           postinc0	equ	0xFEE
 19085                           wreg	equ	0xFE8
 19086                           indf1	equ	0xFE7
 19087                           postinc1	equ	0xFE6
 19088                           postdec1	equ	0xFE5
 19089                           fsr1h	equ	0xFE2
 19090                           fsr1l	equ	0xFE1
 19091                           indf2	equ	0xFDF
 19092                           postinc2	equ	0xFDE
 19093                           postdec2	equ	0xFDD
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function i2_RegisterSet *****************
 19099 ;; Defined at:
 19100 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  setting         2    1[COMRAM] unsigned int 
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 19105 ;; Return value:  Size  Location     Type
 19106 ;;                  1    wreg      void 
 19107 ;; Registers used:
 19108 ;;		wreg, status,2, cstack
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/0
 19111 ;;		On exit  : 0/0
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19118 ;;Total ram usage:        3 bytes
 19119 ;; Hardware stack levels used:    1
 19120 ;; Hardware stack levels required when called:    1
 19121 ;; This function calls:
 19122 ;;		i2_SPIPut
 19123 ;; This function is called by:
 19124 ;;		i2_TxPacket
 19125 ;;		i2_SetRFMode
 19126 ;; This function uses a non-reentrant model
 19127 ;;
 19128                           
 19129                           	psect	text87
 19130  013510                     __ptext87:
 19131                           	opt stack 0
 19132  013510                     i2_RegisterSet:
 19133                           	opt stack 12
 19134                           
 19135                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
 19136                           
 19137                           ;incstack = 0
 19138  013510  0E00               	movlw	0
 19139  013512  BAF0               	btfsc	intcon3,5,c	;volatile
 19140  013514  0E01               	movlw	1
 19141  013516  6E30               	movwf	i2RegisterSet@IRQ1select,c
 19142                           
 19143                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
 19144  013518  9AF0               	bcf	intcon3,5,c	;volatile
 19145                           
 19146                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 19147  01351A  968D               	bcf	3981,3,c	;volatile
 19148                           
 19149                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 19150  01351C  502F               	movf	i2RegisterSet@setting+1,w,c
 19151  01351E  ECF8  F09A         	call	i2_SPIPut
 19152                           
 19153                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 19154  013522  502E               	movf	i2RegisterSet@setting,w,c
 19155  013524  ECF8  F09A         	call	i2_SPIPut
 19156                           
 19157                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 19158  013528  868D               	bsf	3981,3,c	;volatile
 19159                           
 19160                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
 19161  01352A  B030               	btfsc	i2RegisterSet@IRQ1select,0,c
 19162  01352C  D002               	bra	i2u994_45
 19163  01352E  9AF0               	bcf	intcon3,5,c	;volatile
 19164  013530  D001               	bra	i2u994_46
 19165  013532                     i2u994_45:
 19166  013532  8AF0               	bsf	intcon3,5,c	;volatile
 19167  013534                     i2u994_46:
 19168  013534  0012               	return		;funcret
 19169  013536                     __end_ofi2_RegisterSet:
 19170                           	opt stack 0
 19171                           tblptru	equ	0xFF8
 19172                           tblptrh	equ	0xFF7
 19173                           tblptrl	equ	0xFF6
 19174                           tablat	equ	0xFF5
 19175                           prodh	equ	0xFF4
 19176                           prodl	equ	0xFF3
 19177                           intcon	equ	0xFF2
 19178                           intcon2	equ	0xFF1
 19179                           intcon3	equ	0xFF0
 19180                           postinc0	equ	0xFEE
 19181                           wreg	equ	0xFE8
 19182                           indf1	equ	0xFE7
 19183                           postinc1	equ	0xFE6
 19184                           postdec1	equ	0xFE5
 19185                           fsr1h	equ	0xFE2
 19186                           fsr1l	equ	0xFE1
 19187                           indf2	equ	0xFDF
 19188                           postinc2	equ	0xFDE
 19189                           postdec2	equ	0xFDD
 19190                           fsr2h	equ	0xFDA
 19191                           fsr2l	equ	0xFD9
 19192                           status	equ	0xFD8
 19193                           
 19194 ;; *************** function i2_RegisterRead *****************
 19195 ;; Defined at:
 19196 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 19197 ;; Parameters:    Size  Location     Type
 19198 ;;  address         1    wreg     unsigned char 
 19199 ;; Auto vars:     Size  Location     Type
 19200 ;;  address         1    1[COMRAM] unsigned char 
 19201 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 19202 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 19203 ;; Return value:  Size  Location     Type
 19204 ;;                  1    wreg      unsigned char 
 19205 ;; Registers used:
 19206 ;;		wreg, status,2, status,0, cstack
 19207 ;; Tracked objects:
 19208 ;;		On entry : 0/0
 19209 ;;		On exit  : 0/0
 19210 ;;		Unchanged: 0/0
 19211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19216 ;;Total ram usage:        3 bytes
 19217 ;; Hardware stack levels used:    1
 19218 ;; Hardware stack levels required when called:    2
 19219 ;; This function calls:
 19220 ;;		i2_SPIGet
 19221 ;;		i2_SPIPut
 19222 ;; This function is called by:
 19223 ;;		_high_isr
 19224 ;;		i2_TxPacket
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text88
 19229  0133CC                     __ptext88:
 19230                           	opt stack 0
 19231  0133CC                     i2_RegisterRead:
 19232                           	opt stack 12
 19233                           
 19234                           ;incstack = 0
 19235                           ;i2RegisterRead@address stored from wreg
 19236  0133CC  6E2E               	movwf	i2RegisterRead@address,c
 19237                           
 19238                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 19239                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
 19240  0133CE  0E00               	movlw	0
 19241  0133D0  BAF0               	btfsc	intcon3,5,c	;volatile
 19242  0133D2  0E01               	movlw	1
 19243  0133D4  6E30               	movwf	i2RegisterRead@IRQ1select,c
 19244                           
 19245                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
 19246  0133D6  9AF0               	bcf	intcon3,5,c	;volatile
 19247                           
 19248                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 19249  0133D8  968D               	bcf	3981,3,c	;volatile
 19250                           
 19251                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 19252  0133DA  8C2E               	bsf	i2RegisterRead@address,6,c
 19253                           
 19254                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 19255  0133DC  502E               	movf	i2RegisterRead@address,w,c
 19256  0133DE  ECF8  F09A         	call	i2_SPIPut
 19257                           
 19258                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 19259  0133E2  EC3C  F09B         	call	i2_SPIGet	;wreg free
 19260  0133E6  6E2F               	movwf	i2RegisterRead@value,c
 19261                           
 19262                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 19263  0133E8  868D               	bsf	3981,3,c	;volatile
 19264                           
 19265                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
 19266  0133EA  B030               	btfsc	i2RegisterRead@IRQ1select,0,c
 19267  0133EC  D002               	bra	i2u1024_45
 19268  0133EE  9AF0               	bcf	intcon3,5,c	;volatile
 19269  0133F0  D001               	bra	i2u1024_46
 19270  0133F2                     i2u1024_45:
 19271  0133F2  8AF0               	bsf	intcon3,5,c	;volatile
 19272  0133F4                     i2u1024_46:
 19273                           
 19274                           ;drv_mrf_miwi_89xa.c: 222: return value;
 19275  0133F4  502F               	movf	i2RegisterRead@value,w,c
 19276  0133F6  0012               	return		;funcret
 19277  0133F8                     __end_ofi2_RegisterRead:
 19278                           	opt stack 0
 19279                           tblptru	equ	0xFF8
 19280                           tblptrh	equ	0xFF7
 19281                           tblptrl	equ	0xFF6
 19282                           tablat	equ	0xFF5
 19283                           prodh	equ	0xFF4
 19284                           prodl	equ	0xFF3
 19285                           intcon	equ	0xFF2
 19286                           intcon2	equ	0xFF1
 19287                           intcon3	equ	0xFF0
 19288                           postinc0	equ	0xFEE
 19289                           wreg	equ	0xFE8
 19290                           indf1	equ	0xFE7
 19291                           postinc1	equ	0xFE6
 19292                           postdec1	equ	0xFE5
 19293                           fsr1h	equ	0xFE2
 19294                           fsr1l	equ	0xFE1
 19295                           indf2	equ	0xFDF
 19296                           postinc2	equ	0xFDE
 19297                           postdec2	equ	0xFDD
 19298                           fsr2h	equ	0xFDA
 19299                           fsr2l	equ	0xFD9
 19300                           status	equ	0xFD8
 19301                           
 19302 ;; *************** function i2_SPIGet *****************
 19303 ;; Defined at:
 19304 ;;		line 94 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 19305 ;; Parameters:    Size  Location     Type
 19306 ;;		None
 19307 ;; Auto vars:     Size  Location     Type
 19308 ;;		None
 19309 ;; Return value:  Size  Location     Type
 19310 ;;                  1    wreg      unsigned char 
 19311 ;; Registers used:
 19312 ;;		wreg, status,2, cstack
 19313 ;; Tracked objects:
 19314 ;;		On entry : 0/0
 19315 ;;		On exit  : 0/0
 19316 ;;		Unchanged: 0/0
 19317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;Total ram usage:        0 bytes
 19323 ;; Hardware stack levels used:    1
 19324 ;; Hardware stack levels required when called:    1
 19325 ;; This function calls:
 19326 ;;		i2_SPIPut
 19327 ;; This function is called by:
 19328 ;;		_high_isr
 19329 ;;		i2_RegisterRead
 19330 ;; This function uses a non-reentrant model
 19331 ;;
 19332                           
 19333                           	psect	text89
 19334  013678                     __ptext89:
 19335                           	opt stack 0
 19336  013678                     i2_SPIGet:
 19337                           	opt stack 12
 19338                           
 19339                           ;spi.c: 115: SPIPut(0x00);
 19340                           
 19341                           ;incstack = 0
 19342  013678  0E00               	movlw	0
 19343  01367A  ECF8  F09A         	call	i2_SPIPut
 19344                           
 19345                           ;spi.c: 116: return SSP1BUF;
 19346  01367E  50C9               	movf	4041,w,c	;volatile
 19347  013680  0012               	return		;funcret
 19348  013682                     __end_ofi2_SPIGet:
 19349                           	opt stack 0
 19350                           tblptru	equ	0xFF8
 19351                           tblptrh	equ	0xFF7
 19352                           tblptrl	equ	0xFF6
 19353                           tablat	equ	0xFF5
 19354                           prodh	equ	0xFF4
 19355                           prodl	equ	0xFF3
 19356                           intcon	equ	0xFF2
 19357                           intcon2	equ	0xFF1
 19358                           intcon3	equ	0xFF0
 19359                           postinc0	equ	0xFEE
 19360                           wreg	equ	0xFE8
 19361                           indf1	equ	0xFE7
 19362                           postinc1	equ	0xFE6
 19363                           postdec1	equ	0xFE5
 19364                           fsr1h	equ	0xFE2
 19365                           fsr1l	equ	0xFE1
 19366                           indf2	equ	0xFDF
 19367                           postinc2	equ	0xFDE
 19368                           postdec2	equ	0xFDD
 19369                           fsr2h	equ	0xFDA
 19370                           fsr2l	equ	0xFD9
 19371                           status	equ	0xFD8
 19372                           
 19373 ;; *************** function i2_SPIPut *****************
 19374 ;; Defined at:
 19375 ;;		line 45 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;  v               1    wreg     unsigned char 
 19378 ;; Auto vars:     Size  Location     Type
 19379 ;;  v               1    0[COMRAM] unsigned char 
 19380 ;;  SPIPut          1    0        unsigned char 
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg
 19385 ;; Tracked objects:
 19386 ;;		On entry : 0/0
 19387 ;;		On exit  : 0/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19394 ;;Total ram usage:        1 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; This function calls:
 19397 ;;		Nothing
 19398 ;; This function is called by:
 19399 ;;		i2_RegisterSet
 19400 ;;		i2_RegisterRead
 19401 ;;		i2_WriteFIFO
 19402 ;;		i2_SPIGet
 19403 ;; This function uses a non-reentrant model
 19404 ;;
 19405                           
 19406                           	psect	text90
 19407  0135F0                     __ptext90:
 19408                           	opt stack 0
 19409  0135F0                     i2_SPIPut:
 19410                           	opt stack 13
 19411                           
 19412                           ;incstack = 0
 19413                           ;i2SPIPut@v stored from wreg
 19414  0135F0  6E2D               	movwf	i2SPIPut@v,c
 19415                           
 19416                           ;spi.c: 47: uint8_t i;
 19417                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 19418  0135F2  969E               	bcf	3998,3,c	;volatile
 19419                           
 19420                           ;spi.c: 64: i = SSP1BUF;
 19421  0135F4  50C9               	movf	4041,w,c	;volatile
 19422  0135F6                     i2l808:
 19423                           
 19424                           ;spi.c: 67: {
 19425                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 19426  0135F6  9EC6               	bcf	4038,7,c	;volatile
 19427                           
 19428                           ;spi.c: 69: SSP1BUF = v;
 19429  0135F8  C02D  FFC9         	movff	i2SPIPut@v,4041	;volatile
 19430                           
 19431                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 19432  0135FC  BEC6               	btfsc	4038,7,c	;volatile
 19433  0135FE  D7FB               	goto	i2l808
 19434  013600                     i2l810:
 19435  013600  A69E               	btfss	3998,3,c	;volatile
 19436  013602  D7FE               	goto	i2l810
 19437                           
 19438                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 19439  013604  969E               	bcf	3998,3,c	;volatile
 19440  013606  0012               	return		;funcret
 19441  013608                     __end_ofi2_SPIPut:
 19442                           	opt stack 0
 19443                           tblptru	equ	0xFF8
 19444                           tblptrh	equ	0xFF7
 19445                           tblptrl	equ	0xFF6
 19446                           tablat	equ	0xFF5
 19447                           prodh	equ	0xFF4
 19448                           prodl	equ	0xFF3
 19449                           intcon	equ	0xFF2
 19450                           intcon2	equ	0xFF1
 19451                           intcon3	equ	0xFF0
 19452                           postinc0	equ	0xFEE
 19453                           wreg	equ	0xFE8
 19454                           indf1	equ	0xFE7
 19455                           postinc1	equ	0xFE6
 19456                           postdec1	equ	0xFE5
 19457                           fsr1h	equ	0xFE2
 19458                           fsr1l	equ	0xFE1
 19459                           indf2	equ	0xFDF
 19460                           postinc2	equ	0xFDE
 19461                           postdec2	equ	0xFDD
 19462                           fsr2h	equ	0xFDA
 19463                           fsr2l	equ	0xFD9
 19464                           status	equ	0xFD8
 19465                           
 19466 ;; *************** function i2_MiWi_TickGet *****************
 19467 ;; Defined at:
 19468 ;;		line 106 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;		None
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 19473 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 19474 ;;  MiWi_TickGet    1    4[COMRAM] unsigned char 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  4    0[COMRAM] struct _MIWI_TICK
 19477 ;; Registers used:
 19478 ;;		wreg, status,2, status,0
 19479 ;; Tracked objects:
 19480 ;;		On entry : E/0
 19481 ;;		On exit  : F/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19485 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19488 ;;Total ram usage:       10 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; This function calls:
 19491 ;;		Nothing
 19492 ;; This function is called by:
 19493 ;;		_high_isr
 19494 ;;		i2_TxPacket
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text91
 19499  012E46                     __ptext91:
 19500                           	opt stack 0
 19501  012E46                     i2_MiWi_TickGet:
 19502                           	opt stack 14
 19503                           
 19504                           ;symbol.c: 108: MIWI_TICK currentTime;
 19505                           ;symbol.c: 109: uint8_t IntFlag1;
 19506                           ;symbol.c: 110: uint8_t IntFlag2;
 19507                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 19508                           
 19509                           ;incstack = 0
 19510  012E46  6A35               	clrf	i2MiWi_TickGet@currentTime+2,c
 19511                           
 19512                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 19513  012E48  6A36               	clrf	i2MiWi_TickGet@currentTime+3,c
 19514                           
 19515                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 19516  012E4A  909D               	bcf	3997,0,c	;volatile
 19517  012E4C                     i2l10664:
 19518                           
 19519                           ;symbol.c: 120: {
 19520                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 19521  012E4C  0E00               	movlw	0
 19522  012E4E  B09E               	btfsc	3998,0,c	;volatile
 19523  012E50  0E01               	movlw	1
 19524  012E52  6E32               	movwf	i2MiWi_TickGet@IntFlag1,c
 19525                           
 19526                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 19527  012E54  CFCE F033          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 19528                           
 19529                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 19530  012E58  CFCF F034          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 19531                           
 19532                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 19533  012E5C  0E00               	movlw	0
 19534  012E5E  B09E               	btfsc	3998,0,c	;volatile
 19535  012E60  0E01               	movlw	1
 19536  012E62  6E31               	movwf	i2MiWi_TickGet@IntFlag2,c
 19537                           
 19538                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 19539  012E64  5031               	movf	i2MiWi_TickGet@IntFlag2,w,c
 19540  012E66  1832               	xorwf	i2MiWi_TickGet@IntFlag1,w,c
 19541  012E68  E1F1               	bnz	i2l10664
 19542                           
 19543                           ;symbol.c: 127: if( IntFlag1 > 0 )
 19544  012E6A  5032               	movf	i2MiWi_TickGet@IntFlag1,w,c
 19545  012E6C  E006               	bz	i2l10682
 19546                           
 19547                           ;symbol.c: 128: {
 19548                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 19549  012E6E  909E               	bcf	3998,0,c	;volatile
 19550                           
 19551                           ;symbol.c: 130: timerExtension1++;
 19552  012E70  2A22               	incf	_timerExtension1,f,c	;volatile
 19553                           
 19554                           ;symbol.c: 131: if(timerExtension1 == 0)
 19555  012E72  5022               	movf	_timerExtension1,w,c	;volatile
 19556  012E74  E102               	bnz	i2l10682
 19557                           
 19558                           ;symbol.c: 132: {
 19559                           ;symbol.c: 133: timerExtension2++;
 19560  012E76  0100               	movlb	0	; () banked
 19561  012E78  2BE5               	incf	_timerExtension2& (0+255),f,b	;volatile
 19562  012E7A                     i2l10682:
 19563                           
 19564                           ;symbol.c: 134: }
 19565                           ;symbol.c: 135: }
 19566                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 19567  012E7A  5022               	movf	_timerExtension1,w,c	;volatile
 19568  012E7C  2635               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 19569                           
 19570                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 19571  012E7E  0100               	movlb	0	; () banked
 19572  012E80  51E5               	movf	_timerExtension2& (0+255),w,b	;volatile
 19573  012E82  2636               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 19577  012E84  809D               	bsf	3997,0,c	;volatile
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;symbol.c: 143: return currentTime;
 19581  012E86  C033  F02D         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 19582  012E8A  C034  F02E         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 19583  012E8E  C035  F02F         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 19584  012E92  C036  F030         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 19585                           
 19586                           ; BSR set to: 0
 19587  012E96  0012               	return		;funcret
 19588  012E98                     __end_ofi2_MiWi_TickGet:
 19589                           	opt stack 0
 19590                           tblptru	equ	0xFF8
 19591                           tblptrh	equ	0xFF7
 19592                           tblptrl	equ	0xFF6
 19593                           tablat	equ	0xFF5
 19594                           prodh	equ	0xFF4
 19595                           prodl	equ	0xFF3
 19596                           intcon	equ	0xFF2
 19597                           intcon2	equ	0xFF1
 19598                           intcon3	equ	0xFF0
 19599                           postinc0	equ	0xFEE
 19600                           wreg	equ	0xFE8
 19601                           indf1	equ	0xFE7
 19602                           postinc1	equ	0xFE6
 19603                           postdec1	equ	0xFE5
 19604                           fsr1h	equ	0xFE2
 19605                           fsr1l	equ	0xFE1
 19606                           indf2	equ	0xFDF
 19607                           postinc2	equ	0xFDE
 19608                           postdec2	equ	0xFDD
 19609                           fsr2h	equ	0xFDA
 19610                           fsr2l	equ	0xFD9
 19611                           status	equ	0xFD8
 19612                           
 19613 ;; *************** function i2_DELAY_10us *****************
 19614 ;; Defined at:
 19615 ;;		line 46 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
 19616 ;; Parameters:    Size  Location     Type
 19617 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 19618 ;; Auto vars:     Size  Location     Type
 19619 ;;  DELAY_10us      4    0        volatile long 
 19620 ;; Return value:  Size  Location     Type
 19621 ;;                  1    wreg      void 
 19622 ;; Registers used:
 19623 ;;		None
 19624 ;; Tracked objects:
 19625 ;;		On entry : 0/0
 19626 ;;		On exit  : 0/0
 19627 ;;		Unchanged: 0/0
 19628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19630 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19632 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19633 ;;Total ram usage:        8 bytes
 19634 ;; Hardware stack levels used:    1
 19635 ;; This function calls:
 19636 ;;		Nothing
 19637 ;; This function is called by:
 19638 ;;		i2_TxPacket
 19639 ;; This function uses a non-reentrant model
 19640 ;;
 19641                           
 19642                           	psect	text92
 19643  0136A6                     __ptext92:
 19644                           	opt stack 0
 19645  0136A6                     i2_DELAY_10us:
 19646                           	opt stack 14
 19647                           
 19648                           ;delay.c: 52: {
 19649                           ;delay.c: 58: }
 19650                           
 19651                           ; BSR set to: 0
 19652                           ;incstack = 0
 19653  0136A6  0012               	return		;funcret
 19654  0136A8                     __end_ofi2_DELAY_10us:
 19655                           	opt stack 0
 19656                           tblptru	equ	0xFF8
 19657                           tblptrh	equ	0xFF7
 19658                           tblptrl	equ	0xFF6
 19659                           tablat	equ	0xFF5
 19660                           prodh	equ	0xFF4
 19661                           prodl	equ	0xFF3
 19662                           intcon	equ	0xFF2
 19663                           intcon2	equ	0xFF1
 19664                           intcon3	equ	0xFF0
 19665                           postinc0	equ	0xFEE
 19666                           wreg	equ	0xFE8
 19667                           indf1	equ	0xFE7
 19668                           postinc1	equ	0xFE6
 19669                           postdec1	equ	0xFE5
 19670                           fsr1h	equ	0xFE2
 19671                           fsr1l	equ	0xFE1
 19672                           indf2	equ	0xFDF
 19673                           postinc2	equ	0xFDE
 19674                           postdec2	equ	0xFDD
 19675                           fsr2h	equ	0xFDA
 19676                           fsr2l	equ	0xFD9
 19677                           status	equ	0xFD8
 19678                           
 19679 ;; *************** function _UserInterruptHandler *****************
 19680 ;; Defined at:
 19681 ;;		line 160 in file "../src/system_config/pic18exp_pic18f87j11_89xa/system.c"
 19682 ;; Parameters:    Size  Location     Type
 19683 ;;		None
 19684 ;; Auto vars:     Size  Location     Type
 19685 ;;		None
 19686 ;; Return value:  Size  Location     Type
 19687 ;;                  1    wreg      void 
 19688 ;; Registers used:
 19689 ;;		None
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/0
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19699 ;;Total ram usage:        0 bytes
 19700 ;; Hardware stack levels used:    1
 19701 ;; This function calls:
 19702 ;;		Nothing
 19703 ;; This function is called by:
 19704 ;;		_high_isr
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text93
 19709  0136A8                     __ptext93:
 19710                           	opt stack 0
 19711  0136A8                     _UserInterruptHandler:
 19712                           	opt stack 15
 19713                           
 19714                           ;incstack = 0
 19715  0136A8  0012               	return		;funcret
 19716  0136AA                     __end_of_UserInterruptHandler:
 19717                           	opt stack 0
 19718                           tblptru	equ	0xFF8
 19719                           tblptrh	equ	0xFF7
 19720                           tblptrl	equ	0xFF6
 19721                           tablat	equ	0xFF5
 19722                           prodh	equ	0xFF4
 19723                           prodl	equ	0xFF3
 19724                           intcon	equ	0xFF2
 19725                           intcon2	equ	0xFF1
 19726                           intcon3	equ	0xFF0
 19727                           postinc0	equ	0xFEE
 19728                           wreg	equ	0xFE8
 19729                           indf1	equ	0xFE7
 19730                           postinc1	equ	0xFE6
 19731                           postdec1	equ	0xFE5
 19732                           fsr1h	equ	0xFE2
 19733                           fsr1l	equ	0xFE1
 19734                           indf2	equ	0xFDF
 19735                           postinc2	equ	0xFDE
 19736                           postdec2	equ	0xFDD
 19737                           fsr2h	equ	0xFDA
 19738                           fsr2l	equ	0xFD9
 19739                           status	equ	0xFD8
 19740                           tblptru	equ	0xFF8
 19741                           tblptrh	equ	0xFF7
 19742                           tblptrl	equ	0xFF6
 19743                           tablat	equ	0xFF5
 19744                           prodh	equ	0xFF4
 19745                           prodl	equ	0xFF3
 19746                           intcon	equ	0xFF2
 19747                           intcon2	equ	0xFF1
 19748                           intcon3	equ	0xFF0
 19749                           postinc0	equ	0xFEE
 19750                           wreg	equ	0xFE8
 19751                           indf1	equ	0xFE7
 19752                           postinc1	equ	0xFE6
 19753                           postdec1	equ	0xFE5
 19754                           fsr1h	equ	0xFE2
 19755                           fsr1l	equ	0xFE1
 19756                           indf2	equ	0xFDF
 19757                           postinc2	equ	0xFDE
 19758                           postdec2	equ	0xFDD
 19759                           fsr2h	equ	0xFDA
 19760                           fsr2l	equ	0xFD9
 19761                           status	equ	0xFD8
 19762                           
 19763                           	psect	rparam
 19764  0000                     tblptru	equ	0xFF8
 19765                           tblptrh	equ	0xFF7
 19766                           tblptrl	equ	0xFF6
 19767                           tablat	equ	0xFF5
 19768                           prodh	equ	0xFF4
 19769                           prodl	equ	0xFF3
 19770                           intcon	equ	0xFF2
 19771                           intcon2	equ	0xFF1
 19772                           intcon3	equ	0xFF0
 19773                           postinc0	equ	0xFEE
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postinc1	equ	0xFE6
 19777                           postdec1	equ	0xFE5
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           fsr2h	equ	0xFDA
 19784                           fsr2l	equ	0xFD9
 19785                           status	equ	0xFD8
 19786                           
 19787                           	psect	temp
 19788  000056                     btemp:
 19789                           	opt stack 0
 19790  000056                     	ds	1
 19791  0000                     int$flags	set	btemp
 19792                           tblptru	equ	0xFF8
 19793                           tblptrh	equ	0xFF7
 19794                           tblptrl	equ	0xFF6
 19795                           tablat	equ	0xFF5
 19796                           prodh	equ	0xFF4
 19797                           prodl	equ	0xFF3
 19798                           intcon	equ	0xFF2
 19799                           intcon2	equ	0xFF1
 19800                           intcon3	equ	0xFF0
 19801                           postinc0	equ	0xFEE
 19802                           wreg	equ	0xFE8
 19803                           indf1	equ	0xFE7
 19804                           postinc1	equ	0xFE6
 19805                           postdec1	equ	0xFE5
 19806                           fsr1h	equ	0xFE2
 19807                           fsr1l	equ	0xFE1
 19808                           indf2	equ	0xFDF
 19809                           postinc2	equ	0xFDE
 19810                           postdec2	equ	0xFDD
 19811                           fsr2h	equ	0xFDA
 19812                           fsr2l	equ	0xFD9
 19813                           status	equ	0xFD8


Data Sizes:
    Strings     338
    Constant    284
    Data        10
    BSS         561
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      85
    BANK0           160    126     141
    BANK1           256      0     227
    BANK2           256     46     216
    BANK3           256      0     114
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3196	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[21]), STR_14(CODE[18]), STR_13(CODE[20]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[25]), STR_8(CODE[22]), 
		 -> STR_7(CODE[17]), STR_6(CODE[16]), STR_5(CODE[31]), STR_4(CODE[32]), 
		 -> STR_3(CODE[29]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[21]), STR_13(CODE[20]), STR_6(CODE[16]), STR_5(CODE[31]), 
		 -> STR_4(CODE[32]), STR_3(CODE[29]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S849$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK3[114]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    S849$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK3[114]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmmyIndex(COMRAM[2]), nvmRole(COMRAM[2]), nvmEdc(COMRAM[2]), nvmOutFrameCounter(BANK1[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(COMRAM[2]), nvmCurrentChannel(COMRAM[2]), nvmMyPANID(BANK1[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 35
		 -> TxBuffer(BANK1[35]), 

    S293$DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK3[114]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK3[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S38$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S307$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK3[114]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    S307$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK3[114]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMRead->_SPIPut
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _MiApp_SetChannel->_NVMWrite
    _MiMAC_SetChannel->_SetRFMode
    _EEPROM_Read->_SPIPut
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _store_connection_tb->_handle_lost_connection
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->_SPIPut
    _SPIGet->_SPIPut
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _run_star_demo->_MiApp_UnicastStar

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  694358
                                            125 BANK0      1     1      0
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     14    14      0   22181
                                             65 BANK0     14    14      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2384
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2384
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      90
                                             14 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      90
                                             14 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  462285
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0  462285
                                            113 BANK0     12    12      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     426
                                             13 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    1     1      0  139726
                                             96 BANK0      1     1      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               2     0      2   17023
                                             60 BANK0      2     0      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   15662
                                             62 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   15215
                                             60 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   52    51      1  118740
                                             96 BANK0      5     4      1
                                              0 BANK2     46    46      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   12298
                                             62 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     612
                                             23 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      2     2      0  188365
                                            113 BANK0      2     2      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0      22
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     800
                                             23 BANK0      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   5     5      0   28150
                                             31 BANK0      5     5      0
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
                            _NVMRead
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     1      6    2496
                                             14 BANK0      7     1      6
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1505
                                             19 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1490
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3    6191
                                             27 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    9915
                                             23 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    4233
                                             18 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    1311
                                             14 BANK0      4     0      4
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  124249
                                             96 BANK0     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                           _NVMWrite
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  105157
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            21    21      0  105157
                                             75 BANK0     21    21      0
                      _AddConnection
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  6     4      2    1045
                                             20 BANK0      6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                             13 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     1     1      0   12304
                                             62 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   12419
                                             62 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0    1362
                                             23 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      12    12      0   14762
                                             62 BANK0     12    12      0
                         _SendPacket
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     848
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     872
                                             13 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   13830
                                             68 BANK0      7     2      5
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   13071
                                             66 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   12703
                                             62 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           6     4      2     607
                                             13 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 2     2      0   18910
                                             68 BANK0      2     2      0
             _MiApp_RemoveConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                               6     6      0   18604
                                             62 BANK0      6     6      0
                           _NVMWrite
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          10     6      4   12256
                                             52 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                     9     3      6    7186
                                             43 BANK0      9     3      6
                           _TxPacket
 ---------------------------------------------------------------------------------
 (9) _TxPacket                                            20    19      1    5899
                                             23 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (10) _WriteFIFO                                           2     2      0     132
                                             14 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SetRFMode                                           1     1      0    2014
                                             17 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (11) _RegisterSet                                         3     1      2    1972
                                             14 BANK0      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _RegisterRead                                        3     3      0     228
                                             14 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        10     6      4     516
                                             13 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (10) _DELAY_10us                                          8     4      4     265
                                             13 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    8180
                                             23 BANK0      7     7      0
                           _NVMWrite
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4    1232
                                             13 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    5682
                                             23 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             9     3      6    5598
                                             14 BANK0      9     3      6
                           _MacroNop
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (11) _SPIGet                                              0     0      0      42
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   19457
                                             65 BANK0      2     1      1
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   19089
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   19089
                                             60 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    7985
                                             25 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             13 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             20 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                             13 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0    4504
                                             28 BANK0      1     1      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    2072
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    2072
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2521
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     449
                                             13 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     306
                                             16 BANK0      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0     132
                                             14 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0     132
                                             14 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      42
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                            14    12      2    1766
                                             13 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           23    23      0    4310
                                             30 COMRAM    10    10      0
                                              0 BANK0     13    13      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (16) i2_TxPacket                                         20    19      1    1809
                                             10 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (17) i2_WriteFIFO                                         2     2      0      96
                                              1 COMRAM     2     2      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SetRFMode                                         1     1      0     368
                                              4 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (18) i2_RegisterSet                                       3     1      2     337
                                              1 COMRAM     3     1      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_RegisterRead                                      3     3      0     164
                                              1 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_SPIGet                                            0     0      0      31
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_SPIPut                                            2     2      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_MiWi_TickGet                                     10     6      4     288
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) i2_DELAY_10us                                        8     4      4     137
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _Total_Connections
             _isSameAddress
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             ___awdiv
             ___awmod
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPIGet
               _SPIPut
             _SPIPut
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
           _isSameAddress
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
         _NVMWrite
           _MacroNop
           _SPIGet
             _SPIPut
           _SPIPut
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPIGet
           _SPIPut
         _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_StartConnection
       _MiWi_TickGet
     _STAR_DEMO_OPTIONS_MESSAGE
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _NVMWrite
           _MacroNop
           _SPIGet
             _SPIPut
           _SPIPut
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
               _DELAY_ms
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
         _Source_END_DEVICE_INFO
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      72      11       44.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2E      D8       9       84.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E3       7       88.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      55       1       90.4%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30F      12        0.0%
DATA                 0      0     30F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Feb 15 11:39:23 2017

                                   i2_TxPacket 1FA0                         _PUSH_BUTTON_press_time 017B  
                                            _i 00E4                                 _LCD_Initialize 29B4  
                     ??_Source_END_DEVICE_INFO 009E                            P2PTasks@final_index 00B7  
                            _Process_RxMessage 2F36                      __end_of_MiApp_UnicastStar 1A7E  
                         ?_MiMAC_DiscardPacket 002D                                 ?_isSameAddress 006D  
                                ?_LCDInitPortA 002D                                  ?_LCDInitPortB 002D  
                                           l82 1E82                                             l83 1E84  
                                           l84 1EBE                                             l96 1F10  
                                 ___awdiv@sign 0072                                             _t1 0183  
                                           _t2 0187                                  ?_LCDInitWrite 002D  
                                  ?_LCD_Update 002D                            ___wmul@multiplicand 006F  
                          MiApp_ProtocolInit@i 0083                          Find_InActiveDevices@i 00A5  
                           ?_Process_RxMessage 002D                        MiApp_RemoveConnection@i 00A3  
                      MiApp_RemoveConnection@j 009E                                   NVMRead@count 0072  
                                   _MiMAC_Init 2350                                _P2PCapacityInfo 00E0  
                                          l144 2134                                            l145 216C  
                                          l139 20EE                                            l163 18BA  
                                          l157 181A                                            l513 0EA2  
                                          l364 2F2A                                            l445 0E90  
                                          l710 232E                                            l623 1D1A  
                                          l552 15C2                                            l472 0B62  
                                          l810 35E8                                            l618 1C92  
                                          l484 0CA4                                            l709 233E  
                               ?i2_RegisterSet 002E                                            l670 1AE8  
                                          l808 35DE                                            l690 3108  
                                          l976 27B2                                   ___awmod@sign 0072  
                              ??_AddConnection 0077                                    LCDDisplay@i 00A0  
                                          prod 000FF3                                            wreg 000FE8  
                          ??_Process_RxMessage 00C0                            __size_of_DELAY_10us 0002  
                                  i2_WriteFIFO 355A                                  NVMInit@result 0073  
            __end_of_MiApp_EstablishConnection 1D3A                 __size_of_MiApp_StartConnection 003C  
                __end_of_MiApp_StartConnection 30C0                                   ?_LCD_d_write 002D  
                            _Total_Connections 2EE8                                           l1101 1138  
                                         l1104 1230                                           l1220 018C  
                                         l1205 0182                                           l1206 0144  
                                         l1223 01C6                                           l1224 01CA  
                                         l1090 0F4A                                           l1155 28BE  
                                         l1164 2B9E                                           l1158 292C  
                                         l1271 048E                                           l1263 03F6  
                                         l1272 0492                                           l1097 1038  
                                         l1290 0576                                           l1274 04B2  
                                         l1269 0468                                           l1189 001E  
                                         l1286 0610                                           l1719 2FC0  
                                         l1729 307A                                           l7250 3456  
                                         l9200 0030                                ?i2_RegisterRead 002D  
                                         l9202 0034                                           l7258 346C  
                                         l9300 029E                                           l9230 0102  
                                         l9214 0078                                           l9222 00D8  
                                         l9206 003A                                           l6822 3358  
                                         l9400 046C                                           l9312 02CC  
                                         l9322 02EC                                           l9250 018A  
                                         l9242 0148                                           l9324 02F0  
                                         l9316 02DE                                           l9252 0190  
                                         l9502 0716                                           l9414 04C2  
                                         l9430 0514                                           l9350 0350  
                                         l9270 01F0                                           l9246 016A  
                                         l9190 0006           __size_of_Forward_Packet_PANCr_to_EDy 0092  
                                         l9424 0500                                           l9408 04AC  
                                         l9352 0354                                           l9336 031E  
                                         l9280 021C                                           l9264 01D0  
                                         l9248 0186                                           l9512 0746  
                                         l9506 072A                                           l9442 053E  
                                         l9338 0322                                           l9514 0762  
                                         l9290 024C                                           l9258 01B2  
                                         l8660 343C                                           l9372 03A8  
                                         l9284 022C                                           l9268 01E0  
                                         l9276 0208                                           l9196 0028  
                                         l8670 35CE                                           l9462 05B6  
                                         l9438 0534                                           l9382 03D0  
                                         l9366 0382                                           l9294 025A  
                                         l9286 023E                                           l9198 002C  
                                         l8656 342C                                           l9480 0612  
                                         l9464 05BC                                           l9448 055A  
                                         l9376 03BA                                           l9368 0394  
                                         l8770 2F9C                                           l9482 0656  
                                         l9474 05FC                                           l9458 0586  
                                         l9394 042C                                           l9298 0260  
                                         l9492 06BE                                           l9388 03FA  
                                         l8766 2F90                                           l8790 305E  
                                         l8768 2F98                                           l9496 06F6  
                                         l9488 0696                                           l8778 2FB6  
                                         l8794 3070                                           l8786 3052  
                                         l9498 0708                                           l8788 305A  
                                         STR_1 FFDE                                           STR_2 FFCD  
                                         STR_3 FEEC                                           STR_4 FEAD  
                                         STR_5 FECD                                           STR_6 FFEF  
                                         STR_7 FFBC                                           STR_8 FF38  
                                         STR_9 FF09                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                         __size_of_ButtonPressed 0090  
                    DemoOutput_Channel@channel 00A2                                           u9030 072A  
                                         i2l82 1FA8                                           i2l83 1FAA  
                                         i2l84 1FE6                                           i2l96 2030  
                                         u8830 045E                                   ?_LCD_i_write 002D  
                    freezer_feature@switch_val 00AD                                           _MiWi FD91  
                           ?_Total_Connections 002D                      MiApp_StartConnection@Mode 007C  
                       MiApp_UnicastStar@SecEn 00C0                     MiMAC_SetChannel@offsetFreq 0072  
                                         _main 357C                                __end_of_NVMInit 248E  
                              __end_of_NVMRead 2E46                                           _role 00EB  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           fsr1l 000FE1  
                                         indf2 000FDF                                           fsr2l 000FD9  
                                         btemp 0056                             __size_of_LCD_Erase 0028  
       __end_of_MiApp_BroadcastConnectionTable 1764        __size_of_MiApp_BroadcastConnectionTable 0214  
               _MiApp_BroadcastConnectionTable 1550                                           prodh 000FF4  
                                         prodl 000FF3                                           start 03BA  
                       __size_of_run_star_demo 0488                               __end_of_DELAY_ms 2350  
                                 _sprintf$3190 008C                                   _sprintf$3196 008E  
                                 _sprintf$3189 008A                            ??_Total_Connections 006D  
                       __end_of_LCD_Initialize 2A2E                      __end_of_Process_RxMessage 2F80  
                               _InitConfigRegs FE0F                                   high_isr@bAck 0067  
                                 ___param_bank 000010                          ??_MiMAC_DiscardPacket 006D  
                               NVMRead@oldRFIE 0074                                 ??_LCDInitPortA 006E  
                               ??_LCDInitPortB 006E                                 ??_LCDInitWrite 0070  
                             __end_of_P2PTasks 0EAA                   __end_of_MiApp_DiscardMessage 3698  
                             _send_link_status 31A8                                     _Find_Index 25C8  
                                        l12100 29A8                                          l12020 1ADE  
                                        l12012 1AD8                                          l12004 1AC6  
                                        l11212 1E8C                                          l12030 1AEE  
                                        l12022 1AE2                                          l12008 1AD0  
                                        l11224 1EAC                                          l11304 2124  
                                        l12200 09F6                                          l12120 07EA  
                                        l13002 3546                                          l11170 2C40  
                                        l11162 2C20                                          l11154 2C00  
                                        l11234 1EE2                                          l11322 2190  
                                        l11314 215C                                          l12044 1B72  
                                        l11180 2EA0                                          l11260 1F48  
                                        l11244 1F06                                          l11316 2170  
                                        l11308 213C                                          l11500 1D44  
                                        l12204 09FA                                          l11166 2C30  
                                        l11158 2C10                                          l11238 1EF8  
                                        l12134 088A                                          l12126 0838  
                                        l12080 2956                                          l11176 2C4E  
                                        l11256 1F3C                                          l11272 1F92  
                                        l11520 1D9A                                          l12320 0C08  
                                        l12304 0B7A                                          l12144 08F8  
                                        l13104 11B6                                          l13008 0EC4  
                                        l12082 2968                                          l11354 266E  
                                        l11434 2F28                                          l11274 1F9C  
                                        l11258 1F40                                          l12410 0DC4  
                                        l12402 0DB0                                          l12242 0A60  
                                        l12218 0A0C                                          l13130 1282  
                                        l13042 0F54                                          l13026 0EE8  
                                        l13018 0EE0                                          l12076 293E  
                                        l11428 2EEC                                          l11284 20C4  
                                        l11516 1D8E                                          l11700 2C90  
                                        l12332 0C2C                                          l12324 0C0E  
                                        l12308 0B82                                          l12236 0A4C  
                                        l12180 099A                                          l12164 0966  
                                        l13132 1284                                          l13124 124E  
                                        l12094 297E                                          l11382 26B6  
                                        l11198 2ECC                                          l11702 2C98  
                                        l11454 2A72                                          l12414 0DCE  
                                        l12334 0C48                                          l12270 0AE2  
                                        l12254 0A82                                          l12182 09A0  
                                        l12174 0980                                          l13070 10E0  
                                        l13054 10C2                                          l13134 1286  
                                        l11544 1E30                                          l11528 1DE4  
                                        l11704 2C9C                                          l11712 2CB8  
                                        l11448 2A3A                                          l11456 2A76  
                                        l12192 09C0                                          l12600 1918  
                                        l13080 1134                                          l13048 0FCC  
                                        l13136 128C                                          l13304 3594  
                                        l12098 2996                                          l11298 2104  
                                        l12426 0E48                                          l12418 0DD6  
                                        l12370 0D3E                                          l12362 0CCA  
                                        l12354 0CAC                                          l12346 0C8E  
                                        l12282 0B1E                                          l12266 0AD8  
                                        l13146 12A2                                          l13138 1292  
                                        l11396 26EA                                          l11484 33C2  
                                        l11812 2660                                          l11804 264E  
                                        l11660 2AD8                                          l11716 2CC4  
                                        l11708 2CAE                                          l12196 09C8  
                                        l12436 0E4C                                          l12516 2372  
                                        l12604 1936                                          l13164 132A  
                                        l11478 33A2                                          l11806 2652  
                                        l11662 2AE0                                          l11654 2AC8  
                                        l11910 156A                                          l11750 181C  
                                        l11726 1766                                          l11822 21A8  
                                        l12358 0CC2                                          l12294 0B40  
                                        l12438 0E94                                          l12710 1CCC  
                                        l12526 238E                                          l12630 19EE  
                                        l11808 2658                                          l11680 2B14  
                                        l11672 2AFE                                          l11664 2AE4  
                                        l11648 2AB8                                          l11912 1570  
                                        l11760 1878                                          l11736 180C  
                                        l12384 0D52                                          l12376 0D44  
                                        l12720 1CFA                                          l12624 19CA  
                                        l11826 21CE                                          l12394 0D7C  
                                        l12730 1D1C                                          l12458 2538  
                                        l13274 2BB8                                          l12810 27D4  
                                        l13258 2930                                          l11860 275A  
                                        l11676 2B08                                          l11692 2C78  
                                        l11836 2274                                          l12724 1D06  
                                        l12572 32C0                                          l12564 2E30  
                                        l13284 2BE2                                          l12636 1A22  
                                        l11918 15BE                                          l11766 18BE  
                                        l12590 32AC                                          l12558 2E16  
                                        l13286 2BF4                                          l12646 1A76  
                                        l11880 2D9A                                          l11696 2C84  
                                        l11936 1622                                          l12920 14B8  
                                        l12648 1A7A                                          l12840 2F70  
                                        l11890 2DE6                                          l11794 25CC  
                                        l11954 16B8                                          l11970 16F0  
                                        l11778 18FE                                          l12674 1C30  
                                        l12666 1C06                                          l12578 32D6  
                                        l12922 1506                                          l12906 1408  
                                        l12818 281E                                          l11972 172C  
                                        l11948 16A2                                          l12844 2F7C  
                                        l12782 3032                                          l11966 16EA  
                                        l12918 1434                                          l12854 1338  
                                        l11888 2DD8                                          l11984 174A  
                                        l11976 1734                                          l11968 16EE  
                                        l12954 30B2                                          l11996 1A86  
                                        l11988 175A                                          l12868 136A  
                                        l12948 3088                                          l12896 139C  
                                        ?_main 002D                                __end_of___awdiv 2B1E  
                                        STR_10 FF22                                          STR_11 FF22  
                                        STR_12 FFAB                  MiApp_EstablishConnection@Mode 00C0  
                                        STR_13 FF63                                          STR_14 FF77  
                                        STR_15 FF4E                                          STR_16 FF89  
                                        STR_17 FF9A                                __end_of___awmod 2CCE  
                              __end_of___lbmod 3474                                          u11008 20D2  
                                        u11130 24EA                                          u12010 08DC  
                                        u11115 24D0                                          u11116 24D4  
                                        u11108 24BA                                          u11205 3244  
                                        u11125 24DC                                          u11206 3246  
                                        u11126 24E0                                          u11070 249E  
                                        u11090 24B6                                          u12050 093A  
                                        u11148 24EE                                ___awdiv@divisor 006F  
                                        u12045 0926                                          u12047 0928  
                                        u11088 24A2                                          _T1CON 000FCD  
                                        u11185 26FA                                          u11186 26FC  
                                        u11530 17FA                                          u11195 3278  
                                        u12075 0956                                          u11196 327A  
                                        u12068 093E                                          u12077 0958  
                                        u13070 12F0                                          u10815 341E  
                                        u10816 3420                                          u10825 330A  
                                        u10826 330C                                          u10835 34E6  
                                        u10836 34E8                                          u12620 1C6E  
                                  LCD_Update@i 007C                                          u10950 1F84  
                                        u12535 2E42                                          u12536 2E44  
                                        u12705 333E                                          u12706 3340  
                                        u12580 1A72                                          u10990 20CE  
                                        u11970 0824                                          u12770 281C  
                                        u11980 0872                                          u12695 339C  
                                        u12696 339E                                          u12875 1522  
                                        u12876 1526                                __end_of___lwdiv 2FCA  
                              __end_of___lwmod 3084                                          i2l202 0270  
                                        i2l183 009A                                          i2l192 015C  
                                        i2l176 007C                                          i2l178 00B2  
                                        i2l189 00D6                                          i2l810 3600  
                                        i2l808 35F6                                ___awdiv@counter 0071  
                     __size_of_InitSymbolTimer 0012                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                             SendPacket@tParam 009B                                  P2PTasks@tick2 00B3  
                                P2PTasks@tick3 00B8                               __end_ofi2_SPIGet 3682  
                                _LCDWritePortA 3248                                  _LCDWritePortB 3214  
                       ?_DemoOutput_UpdateTxRx 009E                              high_isr@BankIndex 006B  
                             __end_ofi2_SPIPut 3608                      __end_of_Total_Connections 2F36  
                                        _RxNum 0018                         run_star_demo@select_ed 00DC  
                                        _TxNum 001A                         i2MiWi_TickGet@IntFlag1 0032  
                       i2MiWi_TickGet@IntFlag2 0031                            __size_of_LCDDisplay 003E  
                __size_of_MiApp_ConnectionMode 003A                           freezer_feature@tick1 00A5  
                         freezer_feature@tick2 00A9                                __end_of_dpowers FEA5  
                          __size_of_LCDInitSPI 0008                               SendPacket@status 0099  
                   store_connection_tb@payload 0074                  __size_of_MiApp_UnicastAddress 0014  
                                  _SW_Ack_SrED 3474                                __end_of_isdigit 35D6  
                                        _tick1 018B                                          _tick4 018F  
                             __end_of_NVMWrite 26FE                               __end_of_NVMalloc 3372  
                                        tablat 000FF5                                 ButtonPressed@t 007B  
                          __size_of_LCD_Update 0080                        ?_MiApp_RemoveConnection 002D  
                                        status 000FD8                                __end_of_sprintf 076E  
                       run_star_demo@update_ed 00D9                         __end_of_InitConfigRegs FE4F  
                                ?i2_DELAY_10us 002D                      __size_of_MiMAC_SetChannel 009C  
                         __size_of_EEPROM_Read 0032                    __end_of_DemoOutput_Greeting 3654  
                              ?_LCD_Initialize 002D                                   __end_of_MiWi FE0F  
                              __initialization 2820                                ??_isSameAddress 0071  
                                  ?i2_TxPacket 0037                      __size_of_MiMAC_SendPacket 00E8  
         STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 006D                               __end_of_MacroNop 36A0  
                                 __end_of_main 359A                        handle_lost_connection@i 0073  
                   __size_of_MiApp_UnicastStar 0174                __size_of_Source_END_DEVICE_INFO 006E  
                               TxPacket@status 0089                                  _ButtonPressed 2790  
                              ??i2_RegisterSet 0030         MiApp_UnicastConnection@ConnectionIndex 00A3  
                                ??_RegisterSet 0070                              high_isr@PacketLen 006A  
                                       ??_main 00DD                                    ?_MiMAC_Init 007B  
                      _DemoOutput_ChannelError 36A4                                  __activetblptr 000003  
                                 NVMWrite@addr 0070                              __end_of_LCD_Erase 34C4  
                                _run_star_demo 0EAA                           __end_of_MiWi_TickGet 2EE8  
                                _IRQ1_Received 00DE                                 ?_LCDWritePortA 002D  
                               ?_LCDWritePortB 002D                        MiApp_SetChannel@channel 0077  
                         store_connection_tb@i 0079                           store_connection_tb@j 0078  
                             __end_of_TxPacket 1FA0                   __size_of_store_connection_tb 00DC  
                             __end_of_Run_Demo 369C              MiApp_ProtocolInit@bNetworkFreezer 007F  
                         _MiMAC_ReceivedPacket 1764                                i2SetRFMode@mode 0031  
                                   _SendPacket 248E                                      ??_NVMInit 0073  
                                    ??_NVMRead 0074                                         _ANCON0 000FC1  
                                       _ANCON1 000FC2                               ___awdiv@dividend 006D  
                     ?_MiApp_UnicastConnection 00A2                                 P2PTasks@p_1213 00BD  
               __end_of_MiApp_RemoveConnection 1E78                                         _MACSeq 0011  
                               __CFG_WDTEN$OFF 000000                                         _OSCCON 000FD3  
                               __CFG_WDTPS$128 000000                                         _PVALUE FE4F  
                                       _SVALUE FE6F                                         _SPIGet 366E  
                                       _SPIPut 35D6                MiApp_StartConnection@ChannelMap 0078  
                      i2RegisterSet@IRQ1select 0030                           __size_of_LCDTRXCount 003E  
                               ??i2_DELAY_10us 0031                  __size_of_UserInterruptHandler 0002  
                                 ??_DELAY_10us 0071                                  LCDInitWrite@v 0070  
                                   TxPacket@t1 007C                                     TxPacket@t2 0080  
                           __size_of_SetRFMode 006C                                 P2PTasks@status 00BE  
                               __CFG_XINST$OFF 000000                                         _TxData 00E2  
                   __size_of_Process_RxMessage 004A                               __end_of_high_isr 03BA  
                                       ___wmul 34EA                        ??_MiApp_BroadcastPacket 009E  
                                    ??___awdiv 0071                                 ?_ButtonPressed 002D  
                                    ??___awmod 0071                                      ??___lbmod 006E  
                                       _hasAck 00E3                       __size_of_freezer_feature 008A  
                    __size_of_MiApp_SetChannel 0032                                      ??___lwdiv 0071  
                                    ??___lwmod 0078                                         _memset 3422  
                                  ?_Find_Index 006D                                         clear_0 286A  
                                       clear_1 2876                                         clear_2 2882  
                                       clear_3 288E                                         clear_4 289A  
                             ___awdiv@quotient 0073                                         _nvmEdc 0027  
                              ___awmod@divisor 006F                                ___awmod@counter 0071  
                                 NVMalloc@size 006D                                 ?_run_star_demo 002D  
                            high_isr@ackPacket 0063                                   __pdataCOMRAM 0055  
                                    ??_isdigit 006D                                 LCDDisplay@text 009C  
                                 __mediumconst FD90                          ?_MiMAC_ReceivedPacket 002D  
                  __size_of_DemoOutput_Channel 0024                                         tblptrh 000FF7  
                                       tblptrl 000FF6                     __size_of_Total_Connections 004E  
                                       tblptru 000FF8                    ??_MiApp_EstablishConnection 00C1  
                     MiApp_UnicastStar@datalen 02D5                                      ?_DELAY_ms 006D  
                                 LCD_d_write@v 007B                             __end_of_DELAY_10us 36A4  
                                   _TxSynCount 001B                            __end_of_RegisterSet 3422  
                                ?_RegisterRead 002D                            __size_ofi2_TxPacket 011C  
                                    ??_sprintf 0085                         _Source_END_DEVICE_INFO 2B1E  
                            _ReceivedBankIndex 0017                              ??_InitSymbolTimer 006D  
                         __end_of_LCDInitPortA 33A0                           __end_of_LCDInitPortB 3342  
                                 ?i2_SetRFMode 002D                           __end_of_LCDInitWrite 3214  
                              __CFG_FOSC$HSPLL 000000                              _SYSTEM_Initialize 2D36  
                                    ?_P2PTasks 002D                                ___lbmod@divisor 006D  
                         _MiApp_DiscardMessage 3692                            _PUSH_BUTTON_pressed 0013  
                         __size_of_LCD_d_write 003C                                     __accesstop 0060  
                           __size_of_WriteFIFO 0026                        __end_of__initialization 28A0  
                              ___lbmod@counter 006F                  __size_of_Find_InActiveDevices 005A  
                                    P2PTasks@i 00BF                           __size_of_LCD_i_write 003A  
                                    P2PTasks@p 00BC                                   LCD_i_write@v 007B  
              MiMAC_ReceivedPacket@currentTick 007F                             ?_SYSTEM_Initialize 002D  
                          __size_of_MiMAC_Init 00A0                                  ___rparam_used 000001  
                               _chk_sel_status 001C                               _LatestConnection 00DF  
MiApp_BroadcastConnectionTable@broadcast_count 00A6                                   ??_LCDDisplay 00A0  
                              NVMWrite@oldRFIE 0075                                   ??_LCDInitSPI 006D  
                   _myConnectionIndex_in_PanCo 00EA                              high_isr@fifo_stat 0062  
                               __pcstackCOMRAM 002D                                      ?i2_SPIGet 002D  
        Forward_Packet_PANCr_to_EDy@fw_payload 00A4                                      ?i2_SPIPut 002D  
                                 __pidataBANK0 36AB                                   __pidataBANK1 3682  
                          ??_SYSTEM_Initialize 007B                          i2RegisterRead@address 002E  
                     __size_of_Initialize_Demo 006E                      ??_DemoOutput_ChannelError 006D  
                                 ??_LCD_Update 007C                                      ?_NVMWrite 006E  
                      run_star_demo@switch_val 00DB                   ?_Forward_Packet_PANCr_to_EDy 00A4  
                                    ?_NVMalloc 006D                                ??_LCDWritePortA 006E  
                              ??_LCDWritePortB 006E                                TxPacket@rssival 0087  
                              _ConnectionTable 021E                               ??i2_RegisterRead 002E  
              __end_of_MiApp_UnicastConnection 31A8                              __end_of_SetRFMode 2C66  
                                 ?i2_WriteFIFO 002D                                     ??_DELAY_ms 006F  
                    _END_DEVICES_Short_Address 0137                                 ??_RegisterRead 006E  
                                  ?_SendPacket 0094                             __end_of_LCDDisplay 3046  
                    __end_of_SYSTEM_Initialize 2D98                                   sprintf@width 0097  
                           __end_of_LCDInitSPI 3692                          isSameAddress@Address1 006D  
                        isSameAddress@Address2 006F                                      ?_MacroNop 002D  
                                   __pbssBANK0 00DE                                     __pbssBANK1 0100  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                        ?_MiApp_DiscardMessage 002D                       __end_of_send_link_status 31DE  
                                   ??_P2PTasks 00AB                    __size_of_MiApp_ProtocolInit 021E  
                                NVMWrite@count 0072                            __size_of_Find_Index 009C  
                                      ?_SPIGet 002D                                        ?_SPIPut 002D  
                           RegisterSet@setting 006E                             __end_of_LCD_Update 29B4  
                    SendPacket@SecurityEnabled 0097                                 isSameAddress@i 0073  
                   MiApp_BroadcastPacket@SecEn 009E                            i2RegisterRead@value 002F  
                             _MiMAC_SetChannel 252C                      _MiApp_EstablishConnection 1BE2  
                              ??_ButtonPressed 0077                                      ?_TxPacket 0077  
                             _MiMAC_SendPacket 20BC                                     ??i2_SPIGet 002E  
                                   ??i2_SPIPut 002D                                      ?_Run_Demo 002D  
                                      ?___wmul 006D                          __size_of_MiWi_TickGet 0050  
                                      ?_memset 006D                                ??_run_star_demo 00D1  
                                      SPIPut@v 006D                                     ??_NVMWrite 0074  
             run_star_demo@sw_layer_ack_status 00D8                                     ??_NVMalloc 0071  
                            __end_of_WriteFIFO 34EA                        ??_DemoOutput_UpdateTxRx 009F  
                                  _RegisterSet 33F8                              ??_freezer_feature 00A1  
                                      i2l11030 02D4                                        i2l11014 0250  
                                      i2l11040 02F8                                        i2l11024 0274  
                                      i2l11050 0360                                        i2l11036 02F0  
                                      i2l11052 0376                                        i2l11060 0388  
                                      i2l11054 037E                                        i2l11072 039A  
                                      i2l11056 0384                                        i2l10630 2CE2  
                ??_Forward_Packet_PANCr_to_EDy 00A9                                        i2l10642 2D12  
                                      i2l10634 2CF2                                        i2l10626 2CD2  
                                      i2l10638 2D02                                        i2l10822 1FB4  
                                      i2l10664 2E4C                                        i2l10648 2D20  
                                      i2l10832 1FD4                                        i2l10912 006E  
                                      i2l10904 0050                         ??_MiMAC_ReceivedPacket 0077  
                                      i2l10682 2E7A                                        i2l10842 2004  
                                      i2l10852 2026                                        i2l10924 0092  
                                      i2l10916 007E                                        i2l10846 2018  
                                      i2l10934 00BC                                        i2l10864 205C  
                                      i2l10880 20B0                                        i2l10866 2060  
                                      i2l10970 0134                                        i2l10868 2066  
                                      i2l10982 01DA                                        i2l10966 012C  
                                      i2l10976 018C                                        i2l10984 01DC  
                                      i2l10994 0204                                        i2l10986 01EC  
                                      _LCDText 01B6                           __end_ofi2_DELAY_10us 36A8  
                        i2WriteFIFO@IRQ1select 002F                          __end_of_AddConnection 1BE2  
                                      _SSP1BUF 000FC9                                        _FW_Stat 0010  
                                 ?_SW_Ack_SrED 009E                                        _NVMInit 23F0  
                                      _NVMRead 2DF2                                        _RF_Mode 0014  
                                      _AckInfo 0200                                      ?_high_isr 002D  
                                      _RSSIVal 0016                                     ??_MacroNop 006D  
           __size_of_STAR_DEMO_OPTIONS_MESSAGE 0002                          _MiApp_StartConnection 3084  
                             ??_LCD_Initialize 007B                     ?_STAR_DEMO_OPTIONS_MESSAGE 002D  
                  AddConnection@connectionSlot 007C                                _timerExtension1 0022  
                              _timerExtension2 00E5                                    TxPacket@CCA 0077  
                     MiApp_ConnectionMode@Mode 0078                                __size_of_SPIGet 000A  
                             _AdditionalNodeID 0055                                __size_of_SPIPut 001A  
                  __end_of_MiMAC_DiscardPacket 35B8                                P2PTasks@tmpTick 00AF  
                                   DELAY_ms@ms 006D                                   _MiWi_TickGet 2E98  
                                      __Hparam 0000                            _store_connection_tb 21A4  
                                      __Lparam 0000                   __end_of_MiApp_ConnectionMode 3136  
                                 ??i2_TxPacket 0038                                     ??_TxPacket 0078  
                 __end_of_MiApp_UnicastAddress 3630                                     ??_Run_Demo 00DD  
                      __size_ofi2_MiWi_TickGet 0052                                        ___awdiv 2AA6  
                                      ___awmod 2C66                                        ___lbmod 344C  
                              __size_of___wmul 0026                           Find_Index@return_val 0071  
                             _MiApp_SetChannel 327C                            __size_of_SendPacket 009E  
                                      ___lwdiv 2F80                                        ___lwmod 3046  
                     ??_handle_lost_connection 006D                                        __pcinit 2820  
                              __size_of_memset 002A                 DemoOutput_ChannelError@channel 002D  
                                      __ramtop 1000                                        __ptext0 357C  
                                      __ptext1 28AA                                   ??_MiMAC_Init 007E  
                                      __ptext2 2D36                                        __ptext3 29B4  
                                      __ptext4 368A                                        __ptext5 3312  
                                      __ptext6 3372                                        __ptext7 3698  
                                      __ptext8 0EAA                                        __ptext9 344C  
                            __end_of_hexpowers FEAD                                      _T1CONbits 000FCD  
                                      _dpowers FE9B                  Initialize_Demo@freezer_enable 00D1  
                     ??_MiApp_MessageAvailable 00C0                                        _rec_ack 0020  
                                      _isdigit 35B8                              ??_Initialize_Demo 00D1  
                                _myLongAddress 01DB                               ___awmod@dividend 006D  
                        __size_of_LCDInitPortA 002E                          __size_of_LCDInitPortB 0030  
                         ?_store_connection_tb 0074                         DemoOutput_Channel@Step 00A1  
                        __size_of_LCDInitWrite 0036                                        _nvmRole 0029  
                       RegisterRead@IRQ1select 0070                           LCDWritePortA@preRFIE 006F  
                                    _P2PStatus 00E1                                      _LCD_Erase 349C  
                                  _MyindexinPC 0012                           LCDWritePortB@preRFIE 006F  
                   __size_of_SYSTEM_Initialize 0062                                        _sprintf 0000  
                           MiApp_UnicastStar@i 02D7                         ??_MiApp_DiscardMessage 006D  
                                   ??_high_isr 004B                             __end_ofi2_TxPacket 20BC  
                         end_of_initialization 28A0                   MiApp_RemoveConnection@j_1366 00A0  
                            __end_of_octpowers FE9B                                      i2SPIPut@v 002D  
                                ??_EEPROM_Read 0072                                        memset@c 006F  
                                      memset@n 0071                                        memset@p 0073  
                MiMAC_SendPacket@MACPayloadLen 0090                           __size_ofi2_SetRFMode 0068  
                              LCDDisplay@delay 009F              i2DELAY_10us@tenMicroSecondCounter 002D  
              DELAY_10us@tenMicroSecondCounter 006D                                     _nvmMyPANID 01D7  
            __end_of_STAR_DEMO_OPTIONS_MESSAGE 36A2                                      i2u1024_45 33F2  
                                    i2u1024_46 33F4                                      i2u1025_45 3578  
                                    i2u1025_46 357A                                      i2u1042_40 20A2  
                              LCDDisplay@value 009E                             __end_of_MiMAC_Init 23F0  
                 MiApp_UnicastConnection@SecEn 00A2               __size_of_MiApp_UnicastConnection 0038  
                      MiMAC_SetChannel@channel 0074                                        postdec1 000FE5  
                                      postdec2 000FDD                           __end_of_RegisterRead 3312  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                          __end_of_isSameAddress 33CC  
         DELAY_ms@cyclesRequiredForEntireDelay 0077                            RegisterRead@address 006E  
               __size_of_MiApp_BroadcastPacket 0014                                   _LCDInitPortA 3372  
                                 _LCDInitPortB 3312                                  WriteFIFO@Data 006E  
                                 ??_Find_Index 006F                     run_star_demo@PressedButton 00DA  
                __end_of_MiApp_BroadcastPacket 361C                                   _LCDInitWrite 31DE  
                 __size_of_DemoOutput_Greeting 0012                                      _PORTAbits 000F80  
                                    _PORTBbits 000F81                                _InitSymbolTimer 3630  
                             NVMalloc@location 006F                          __end_ofi2_RegisterSet 3536  
                 __end_of_UserInterruptHandler 36AA                          ??_store_connection_tb 0076  
                                   _nvmmyIndex 002B                        ?_Source_END_DEVICE_INFO 009C  
                             ___lbmod@dividend 006E                                      _TRISAbits 000F92  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISDbits 000F95                                      _TRISEbits 000F96  
                                    _TRISFbits 000F97                                     ?_LCD_Erase 002D  
                         MiWi_TickGet@IntFlag1 0072                           MiWi_TickGet@IntFlag2 0071  
                      MiMAC_SendPacket@TxIndex 0092                                    NVMRead@addr 0070  
                         __size_ofi2_WriteFIFO 0022                                    NVMRead@dest 006E  
                       ?_MiApp_StartConnection 0077                              __size_of_DELAY_ms 00D0  
                                ??_LCDTRXCount 009D                                    ___lbmod@rem 0070  
                   MiMAC_SendPacket@transParam 008B                      MiApp_UnicastAddress@SecEn 00A1  
                           __end_of_Find_Index 2664                                 __end_of_PVALUE FE6F  
                            __size_of_P2PTasks 073C                                 __end_of_SVALUE FE8F  
                               __end_of_SPIGet 3678                                 __end_of_SPIPut 35F0  
                          __end_of_EEPROM_Read 32E0                                 __end_of___wmul 3510  
                            __size_ofi2_SPIGet 000A                __size_of_handle_lost_connection 0078  
                        __size_ofi2_DELAY_10us 0002                              __size_ofi2_SPIPut 0018  
                 __end_of_Find_InActiveDevices 2DF2                                  __pidataCOMRAM 36AA  
           __size_of_MiApp_EstablishConnection 0158                                 __end_of_memset 344C  
                   __end_of_DemoOutput_Channel 355A                 __end_of_Source_END_DEVICE_INFO 2B8C  
                            __size_of_NVMWrite 009A                __size_of_MiApp_MessageAvailable 000C  
             MiMAC_ReceivedPacket@PayloadIndex 0083                       __end_of_MiMAC_SetChannel 25C8  
                            __size_of_NVMalloc 0030                            start_initialization 2820  
                                TxPacket@reTry 0085                            WriteFIFO@IRQ1select 006F  
                     __end_of_MiMAC_SendPacket 21A4                                   ??_SendPacket 0098  
                         _MiApp_ConnectionMode 30FC                             TxPacket@CCARetries 0084  
                   i2TxPacket@allowedTxFailure 0048                                high_isr@counter 0060  
                                ??_LCD_d_write 007B                           _MiApp_UnicastAddress 361C  
                                    _SetRFMode 2BFA                                  ??_LCD_i_write 007B  
                         __size_of_SW_Ack_SrED 0028                              ?_send_link_status 002D  
            Forward_Packet_PANCr_to_EDy@status 00A9                              __size_of_MacroNop 0004  
                                     ??_SPIGet 006E                                       ??_SPIPut 006D  
                           ??_send_link_status 009E                                 _currentChannel 00E9  
                                 i2_DELAY_10us 36A6                                      TxPacket@i 008A  
                          __end_of_LCDTRXCount 3008    MiApp_EstablishConnection@connectionInterval 00C7  
                              _freezer_feature 28AA                        __end_of_InitSymbolTimer 3642  
                               i2_MiWi_TickGet 2E46                                       ??___wmul 0071  
            MiApp_UnicastAddress@PermanentAddr 00A0                                    __pdataBANK0 00EC  
                                  __pdataBANK1 01DB                              __size_of_TxPacket 0128  
                           __end_of_SendPacket 252C                                       ??_memset 0073  
                            __size_of_Run_Demo 0004                                   ?_RegisterSet 006E  
                            RegisterRead@value 006F                 __size_of_DemoOutput_UpdateTxRx 000E  
                        __end_of_LCDWritePortA 327C                        MiWi_TickGet@currentTime 0073  
                        __end_of_LCDWritePortB 3248                  __end_of_DemoOutput_UpdateTxRx 3662  
                                  __pbssCOMRAM 0001                       ??_MiApp_RemoveConnection 009E  
                                    _WriteFIFO 34C4                                  __pcstackBANK0 0060  
                                __pcstackBANK2 02AA                          ?_MiApp_ConnectionMode 002D  
                          SendPacket@Broadcast 009A                                    ??_LCD_Erase 007B  
       MiApp_UnicastAddress@DestinationAddress 009E                          ?_MiApp_UnicastAddress 009E  
                                 _isdigit$3420 006E                                       ?_NVMInit 002D  
                   __end_of_MiApp_ProtocolInit 1550                                       ?_NVMRead 006E  
                               NVMWrite@source 006E                     MiApp_EstablishConnection@i 00D0  
                     __end_of_MiApp_SetChannel 32AE                                     ?_SetRFMode 002D  
                       _handle_lost_connection 2A2E                                    MiMAC_Init@i 007E  
                            __size_of_high_isr 03B2                                    sprintf@flag 009A  
                  ??_STAR_DEMO_OPTIONS_MESSAGE 006D                                    _EEPROM_Read 32AE  
                                  sprintf@prec 0096                            __end_of_LCD_d_write 30FC  
                        __size_of_RegisterRead 0032                         _MiApp_MessageAvailable 3662  
                         _UserInterruptHandler 36A8                         __end_ofi2_MiWi_TickGet 2E98  
                          __end_of_LCD_i_write 3170                              MiMAC_SendPacket@i 0093  
                             ___lwdiv@dividend 006D                        _MiApp_UnicastConnection 3170  
                     ?_DemoOutput_ChannelError 002D                                      __pintcode 0008  
                                __pmediumconst FD90                                _Initialize_Demo 2B8C  
                        __end_of_ButtonPressed 2820                                       ?___awdiv 006D  
                                     ?___awmod 006D                                       ?___lbmod 006D  
                                     ?___lwdiv 006D                                       ?___lwmod 0074  
                                    _end_nodes 001E                                      _conn_size 00E8  
                        __end_of_run_star_demo 1332                   Forward_Packet_PANCr_to_EDy@i 00AA  
                                     ?_isdigit 002D                                     ?_WriteFIFO 002D  
                __size_of_MiMAC_ReceivedPacket 01A6                                       _DELAY_ms 2280  
                          AddConnection@status 007B                                      _hexpowers FEA5  
                             ___lwdiv@quotient 0072                                       ?_sprintf 0079  
                          NVMWrite@PageCounter 0076                                   _RegisterRead 32E0  
                                    _link_stat 015F                                    _LCDTRXCount 2FCA  
                                     _P2PTasks 076E                            _DemoOutput_Greeting 3642  
                         _Find_InActiveDevices 2D98                        __end_of_freezer_feature 2934  
                               ___wmul@product 0071                        __size_ofi2_RegisterRead 002C  
                                     _LATAbits 000F89                           i2RegisterSet@setting 002E  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                                       _LATFbits 000F8E  
                        ?_UserInterruptHandler 002D                                      _octpowers FE8F  
                                     _PIE1bits 000F9D                     DemoOutput_UpdateTxRx@RxNum 009E  
                   DemoOutput_UpdateTxRx@TxNum 009F                                ?i2_MiWi_TickGet 002D  
                                     _PIR1bits 000F9E                                      _rxMessage 0001  
                           _nvmConnectionTable 00E6                                       i2u994_45 3532  
                                     i2u994_46 3534                            high_isr@RxPacketPtr 0068  
                                     i2_SPIGet 3678                                       i2_SPIPut 35F0  
                             ?_InitSymbolTimer 002D                                       _SSP1CON1 000FC6  
                       __size_of_AddConnection 0164            MiApp_BroadcastConnectionTable@count 00A5  
                                     _SSP1STAT 000FC7                   __size_of_MiMAC_DiscardPacket 001E  
     MiApp_EstablishConnection@ActiveScanIndex 002D              MiApp_StartConnection@ScanDuration 0077  
          __end_of_Forward_Packet_PANCr_to_EDy 2790                    _Forward_Packet_PANCr_to_EDy 26FE  
                                  _MACRxPacket 0173                           ?_DemoOutput_Greeting 002D  
                                     _RSSILock 0015                      _STAR_DEMO_OPTIONS_MESSAGE 36A0  
                                     _NVMWrite 2664                                    _MACTxBuffer 0100  
                                SetRFMode@mode 0071                                       _NVMalloc 3342  
                            ___wmul@multiplier 006D     MiApp_UnicastStar@EndDevice_ConnectionIndex 02D6  
                                    high_isr@i 006C                ?_MiApp_BroadcastConnectionTable 002D  
             ??_MiApp_BroadcastConnectionTable 009E                          i2TxPacket@TxPacketLen 003C  
                       ??_MiApp_ConnectionMode 0077                             main@freezer_enable 00DD  
                       ??_MiApp_UnicastAddress 00A2                        ??_MiApp_StartConnection 007C  
              __size_of_MiApp_RemoveConnection 013E                            SendPacket@isCommand 0096  
                         high_isr@ackInfoIndex 0069                                 _nextEEPosition 000E  
       DELAY_10us@cyclesRequiredForEntireDelay 0071                                       _ConnMode 00EC  
                                  _INTCON2bits 000FF1                                    _INTCON3bits 000FF0  
               MiApp_EstablishConnection@retry 00C6                                    _LCD_d_write 30C0  
        Forward_Packet_PANCr_to_EDy@EDxAddress 00A7                                      copy_data0 2834  
                                ??i2_SetRFMode 0031                                    ??_SetRFMode 0071  
                                     _MacroNop 369C                   MiApp_UnicastStar@copy_txdata 02AA  
                             __size_of_NVMInit 009E                               __size_of_NVMRead 0054  
                                  _LCD_i_write 3136                  __size_of_MiApp_DiscardMessage 0006  
                        ?_Find_InActiveDevices 002D          MiApp_RemoveConnection@ConnectionIndex 00A2  
                                     _TxMACSeq 0019                __end_of_DemoOutput_ChannelError 36A6  
                    ??_MiApp_UnicastConnection 00A3                        __end_of_Initialize_Demo 2BFA  
                          _display_connections 001D                                     _DELAY_10us 36A2  
                                     __Hrparam 0000                                       _RxPacket 0300  
                                     _TxBuffer 0193                                   _nvmDelayTick 017F  
                                     __Lrparam 0000                                       _TxPacket 1E78  
                                     _Run_Demo 3698                             Total_Connections@i 006E  
                      __size_of_LCD_Initialize 007A                MiApp_BroadcastConnectionTable@i 00A8  
              MiApp_BroadcastConnectionTable@j 00A9                MiApp_BroadcastConnectionTable@k 00A7  
                        MiMAC_ReceivedPacket@i 0084                               __size_of___awdiv 0078  
                             __size_of___awmod 0068                               __size_of___lbmod 0028  
                  __end_of_store_connection_tb 2280                          ??_DemoOutput_Greeting 00A1  
                             __size_of___lwdiv 004A                               __size_of___lwmod 003E  
                     i2RegisterRead@IRQ1select 0030                          _MiApp_BroadcastPacket 3608  
                                   sprintf@idx 0089                                     sprintf@len 0091  
                                   sprintf@val 0094                           __size_of_RegisterSet 002A  
                              _lost_connection 001F                                  ??i2_WriteFIFO 002E  
                                  ??_WriteFIFO 006E                               __size_of_isdigit 001E  
                            ?_MiMAC_SetChannel 0072                                ___lwdiv@divisor 006F  
                              ___lwdiv@counter 0071                                       __ptext10 2F36  
                                     __ptext11 2B1E                                       __ptext20 1332  
                                     __ptext12 3654                                       __ptext21 2DF2  
                                     __ptext13 2FCA                                       __ptext30 3662  
                                     __ptext22 23F0                                       __ptext14 190A  
                                     __ptext31 076E                                       __ptext23 3342  
                                     __ptext15 3608                                       __ptext40 26FE  
                                     __ptext32 21A4                                       __ptext24 2350  
                                     __ptext16 2790                                       __ptext41 3170  
                                     __ptext33 2A2E                                       __ptext25 327C  
                                     __ptext17 2B8C                                       __ptext50 2BFA  
                                     __ptext42 361C                                       __ptext34 31A8  
                                     __ptext26 252C                                       __ptext18 36A0  
                                     __ptext51 33F8                                       __ptext43 25C8  
                                     __ptext35 3474                                       __ptext27 3630  
                                     __ptext19 3084                                       __ptext60 30FC  
                                     __ptext52 32E0                                       __ptext44 2D98  
                                     __ptext36 1764                                       __ptext28 32AE  
                                     __ptext61 2664                                       __ptext53 2E98  
                                     __ptext45 1D3A                                       __ptext37 1550  
                                     __ptext29 1BE2                                       __ptext70 34EA  
                                     __ptext62 366E                                       __ptext54 36A2  
                                     __ptext46 248E                                       __ptext38 2C66  
                                     __ptext71 3046                                       __ptext63 369C  
                                     __ptext55 1A7E                                       __ptext47 20BC  
                                     __ptext39 2AA6                                       __ptext80 3248  
                                     __ptext72 2F80                                       __ptext64 36A4  
                                     __ptext56 33A0                                       __ptext48 1E78  
                                     __ptext81 35D6                                       __ptext73 2934  
                                     __ptext65 3536                                       __ptext57 2EE8  
                                     __ptext49 34C4                                       __ptext90 35F0  
                                     __ptext82 2280                                       __ptext74 3136  
                                     __ptext66 3642                                       __ptext58 3692  
                                     __ptext91 2E46                                       __ptext75 30C0  
                                     __ptext67 3008                                       __ptext59 359A  
                                     __ptext92 36A6                                       __ptext84 1FA0  
                                     __ptext76 349C                                       __ptext68 0000  
                                     __ptext93 36A8                                       __ptext85 355A  
                                     __ptext77 3422                                       __ptext69 35B8  
                                     __ptext86 2CCE                                       __ptext78 31DE  
                                     __ptext87 3510                                       __ptext79 3214  
                                     __ptext88 33CC                                       __ptext89 3678  
                                 _SSP1CON1bits 000FC6                                  _AddConnection 1A7E  
                     TxPacket@allowedTxFailure 0086                             ??_MiMAC_SetChannel 0073  
                            ?_MiMAC_SendPacket 008B                                       _high_isr 0008  
                 Source_END_DEVICE_INFO@SrAddr 009C                               __size_of_sprintf 076E  
                       __size_of_isSameAddress 002C                             ??_MiMAC_SendPacket 0091  
                             Initialize_Demo@i 00D2                             _DemoOutput_Channel 3536  
                       ??_UserInterruptHandler 002D                                  __size_of_main 001E  
                             ?_freezer_feature 002D                         __size_ofi2_RegisterSet 0026  
                          __end_ofi2_SetRFMode 2D36                         _MiApp_RemoveConnection 1D3A  
                          ?_DemoOutput_Channel 00A1                                     _LCDDisplay 3008  
                                     _temp_bit 0021                                     _LCDInitSPI 368A  
                                     int$flags 0056                             LCDTRXCount@rxCount 009C  
                  MiApp_EstablishConnection@t1 00C8                    MiApp_EstablishConnection@t2 00CC  
                           LCDTRXCount@txCount 009D                                     _LCD_Update 2934  
                    __size_of_send_link_status 0036                            MiApp_UnicastStar@t1 02CD  
                          MiApp_UnicastStar@t2 02D1                     MiMAC_SendPacket@MACPayload 008E  
                                  Find_Index@i 0072                          _permanent_connections 0169  
                                   _INTCONbits 000FF2                                 AddConnection@i 007D  
                         ??_DemoOutput_Channel 00A2                     handle_lost_connection@stat 0072  
                              i2WriteFIFO@Data 002E                        ?_handle_lost_connection 002D  
                               ?_AddConnection 002D                    ButtonPressed@tickDifference 0077  
                                     isdigit@c 006F                                       memset@p1 006D  
                                ??_SW_Ack_SrED 00A0                            LCDInitPortA@preRFIE 006E  
                                  _nvmConnMode 0023                           SW_Ack_SrED@Dest_Addr 009E  
                       Total_Connections@count 006D                    MiApp_ProtocolInit@initValue 0080  
                          LCDInitPortB@preRFIE 006E                         ??_Find_InActiveDevices 00A4  
                                     intlevel2 0000                              ?_MiApp_SetChannel 002D  
                                    sprintf@ap 0093                                      sprintf@cp 0090  
                                    sprintf@sp 0079                        ?_MiApp_MessageAvailable 002D  
                          __end_ofi2_WriteFIFO 357C                                 i2_RegisterRead 33CC  
                             ___lwmod@dividend 0074                                   ?_EEPROM_Read 006E  
                           ??_MiApp_SetChannel 0077                               ?_Initialize_Demo 002D  
                                ?_MiWi_TickGet 006D                                    ?_DELAY_10us 006D  
                               LCDWritePortA@v 006E                                 LCDWritePortB@v 006E  
                           _MiApp_ProtocolInit 1332                   SendPacket@DestinationAddress 0094  
                                _MACInitParams 000B                            MiMAC_Init@initValue 007B  
                                _isSameAddress 33A0                            ?_MiApp_ProtocolInit 002D  
                            _MiApp_UnicastStar 190A                         ?_MiApp_BroadcastPacket 002D  
                                     sprintf@c 0099                                       sprintf@f 007B  
                           ?_MiApp_UnicastStar 00C0                                  i2_RegisterSet 3510  
             __size_of_DemoOutput_ChannelError 0002                 __end_of_handle_lost_connection 2AA6  
                              ___lwmod@divisor 0076     MiApp_EstablishConnection@tmpConnectionMode 00C5  
                              ___lwmod@counter 0078                              i2TxPacket@rssival 0049  
                          TxPacket@TxPacketLen 0088                     ?_MiApp_EstablishConnection 00C0  
                        _DemoOutput_UpdateTxRx 3654                           i2TxPacket@CCARetries 0046  
                                   _WDTCONbits 000FC0                            ??_MiApp_UnicastStar 00C1  
               __end_of_MiApp_MessageAvailable 366E                         __end_ofi2_RegisterRead 33F8  
                          _MiMAC_DiscardPacket 359A                                    i2_SetRFMode 2CCE  
                           _nvmOutFrameCounter 01D9                              _nvmCurrentChannel 0025  
                         ??_MiApp_ProtocolInit 007F                               i2TxPacket@status 003D  
                                 ?_LCDTRXCount 009C                               ??i2_MiWi_TickGet 0031  
                  send_link_status@send_status 009E                               EEPROM_Read@count 0071  
                              i2TxPacket@reTry 0047                                 ??_MiWi_TickGet 0071  
            Process_RxMessage@User_data_status 00C0                            __end_of_SW_Ack_SrED 349C  
                              EEPROM_Read@addr 0070                                  i2TxPacket@CCA 0037  
                    i2MiWi_TickGet@currentTime 0033                                EEPROM_Read@dest 006E  
             Forward_Packet_PANCr_to_EDy@index 00A6                          RegisterSet@IRQ1select 0070  
                 __end_of_MiMAC_ReceivedPacket 190A                             Find_Index@DestAddr 006D  
                    freezer_feature@return_val 00AE                                   i2TxPacket@t1 003E  
                                 i2TxPacket@t2 0042                                    ?_LCDDisplay 009C  
                       __size_of_LCDWritePortA 0034                         __size_of_LCDWritePortB 0034  
                                  i2TxPacket@i 004A                                    ?_LCDInitSPI 002D  
