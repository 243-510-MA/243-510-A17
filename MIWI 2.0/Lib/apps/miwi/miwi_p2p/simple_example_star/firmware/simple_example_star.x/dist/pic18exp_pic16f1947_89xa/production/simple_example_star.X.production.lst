

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 27 14:22:06 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    17                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	text84,local,class=CODE,merge=1,delta=2
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text86,local,class=CODE,merge=1,delta=2
   110                           	psect	text87,local,class=CODE,merge=1,delta=2
   111                           	psect	text88,local,class=CODE,merge=1,delta=2
   112                           	psect	text89,local,class=CODE,merge=1,delta=2
   113                           	psect	text90,local,class=CODE,merge=1,delta=2
   114                           	psect	text91,local,class=CODE,merge=1,delta=2
   115                           	psect	text92,local,class=CODE,merge=1,delta=2
   116                           	psect	text93,local,class=CODE,merge=1,delta=2
   117                           	psect	text94,local,class=CODE,merge=1,delta=2
   118                           	psect	text95,local,class=CODE,merge=1,delta=2
   119                           	psect	text96,local,class=CODE,merge=1,delta=2
   120                           	psect	text97,local,class=CODE,merge=1,delta=2
   121                           	psect	text98,local,class=CODE,merge=1,delta=2
   122                           	dabs	1,0x620,48
   123                           	dabs	1,0x5A0,80
   124                           	dabs	1,0x564,12
   125                           	dabs	1,0x520,68
   126                           	dabs	1,0x4C2,46
   127                           	dabs	1,0x2364,0,_ConnectionTable
   128                           	dabs	1,0x22F2,0,_RxPacket
   129                           	dabs	1,0x7E,2
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  0110                     	;# 
   187  0111                     	;# 
   188  0112                     	;# 
   189  0113                     	;# 
   190  0114                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0117                     	;# 
   194  0118                     	;# 
   195  0119                     	;# 
   196  011A                     	;# 
   197  011B                     	;# 
   198  011D                     	;# 
   199  011E                     	;# 
   200  011F                     	;# 
   201  018C                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0191                     	;# 
   205  0192                     	;# 
   206  0193                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0194                     	;# 
   210  0195                     	;# 
   211  0196                     	;# 
   212  0199                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019D                     	;# 
   223  019D                     	;# 
   224  019E                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  020D                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0219                     	;# 
   245  021A                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021D                     	;# 
   249  021E                     	;# 
   250  021F                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  0291                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0298                     	;# 
   262  0298                     	;# 
   263  0299                     	;# 
   264  029A                     	;# 
   265  029B                     	;# 
   266  029C                     	;# 
   267  029C                     	;# 
   268  029D                     	;# 
   269  029E                     	;# 
   270  029F                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  0311                     	;# 
   274  0311                     	;# 
   275  0312                     	;# 
   276  0313                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0315                     	;# 
   280  0316                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  040C                     	;# 
   295  040D                     	;# 
   296  0415                     	;# 
   297  0416                     	;# 
   298  0417                     	;# 
   299  041C                     	;# 
   300  041D                     	;# 
   301  041E                     	;# 
   302  048D                     	;# 
   303  0491                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0493                     	;# 
   307  0494                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0791                     	;# 
   312  0792                     	;# 
   313  0793                     	;# 
   314  0794                     	;# 
   315  0795                     	;# 
   316  0798                     	;# 
   317  0799                     	;# 
   318  079A                     	;# 
   319  079B                     	;# 
   320  079C                     	;# 
   321  079D                     	;# 
   322  07A0                     	;# 
   323  07A1                     	;# 
   324  07A2                     	;# 
   325  07A3                     	;# 
   326  07A4                     	;# 
   327  07A5                     	;# 
   328  07A6                     	;# 
   329  07A7                     	;# 
   330  07A8                     	;# 
   331  07A9                     	;# 
   332  07AA                     	;# 
   333  07AB                     	;# 
   334  07AC                     	;# 
   335  07AD                     	;# 
   336  07AE                     	;# 
   337  07AF                     	;# 
   338  07B0                     	;# 
   339  07B1                     	;# 
   340  07B2                     	;# 
   341  07B3                     	;# 
   342  07B4                     	;# 
   343  07B5                     	;# 
   344  07B6                     	;# 
   345  07B7                     	;# 
   346  0FE4                     	;# 
   347  0FE5                     	;# 
   348  0FE6                     	;# 
   349  0FE7                     	;# 
   350  0FE8                     	;# 
   351  0FE9                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEF                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  008C                     	;# 
   390  008D                     	;# 
   391  008E                     	;# 
   392  008F                     	;# 
   393  0090                     	;# 
   394  0091                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0095                     	;# 
   399  0096                     	;# 
   400  0097                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009A                     	;# 
   404  009B                     	;# 
   405  009B                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0110                     	;# 
   414  0111                     	;# 
   415  0112                     	;# 
   416  0113                     	;# 
   417  0114                     	;# 
   418  0115                     	;# 
   419  0116                     	;# 
   420  0117                     	;# 
   421  0118                     	;# 
   422  0119                     	;# 
   423  011A                     	;# 
   424  011B                     	;# 
   425  011D                     	;# 
   426  011E                     	;# 
   427  011F                     	;# 
   428  018C                     	;# 
   429  0190                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0199                     	;# 
   440  0199                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019C                     	;# 
   448  019C                     	;# 
   449  019D                     	;# 
   450  019D                     	;# 
   451  019E                     	;# 
   452  019E                     	;# 
   453  019F                     	;# 
   454  019F                     	;# 
   455  020D                     	;# 
   456  0211                     	;# 
   457  0211                     	;# 
   458  0212                     	;# 
   459  0212                     	;# 
   460  0213                     	;# 
   461  0213                     	;# 
   462  0214                     	;# 
   463  0214                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0216                     	;# 
   468  0216                     	;# 
   469  0217                     	;# 
   470  0217                     	;# 
   471  0219                     	;# 
   472  021A                     	;# 
   473  021B                     	;# 
   474  021C                     	;# 
   475  021D                     	;# 
   476  021E                     	;# 
   477  021F                     	;# 
   478  028C                     	;# 
   479  028D                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  030C                     	;# 
   499  030D                     	;# 
   500  0311                     	;# 
   501  0311                     	;# 
   502  0312                     	;# 
   503  0313                     	;# 
   504  0314                     	;# 
   505  0315                     	;# 
   506  0315                     	;# 
   507  0316                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  031C                     	;# 
   513  031C                     	;# 
   514  031D                     	;# 
   515  031E                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  0394                     	;# 
   519  0395                     	;# 
   520  0396                     	;# 
   521  040C                     	;# 
   522  040D                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  048D                     	;# 
   530  0491                     	;# 
   531  0492                     	;# 
   532  0493                     	;# 
   533  0493                     	;# 
   534  0494                     	;# 
   535  0495                     	;# 
   536  0496                     	;# 
   537  0497                     	;# 
   538  0791                     	;# 
   539  0792                     	;# 
   540  0793                     	;# 
   541  0794                     	;# 
   542  0795                     	;# 
   543  0798                     	;# 
   544  0799                     	;# 
   545  079A                     	;# 
   546  079B                     	;# 
   547  079C                     	;# 
   548  079D                     	;# 
   549  07A0                     	;# 
   550  07A1                     	;# 
   551  07A2                     	;# 
   552  07A3                     	;# 
   553  07A4                     	;# 
   554  07A5                     	;# 
   555  07A6                     	;# 
   556  07A7                     	;# 
   557  07A8                     	;# 
   558  07A9                     	;# 
   559  07AA                     	;# 
   560  07AB                     	;# 
   561  07AC                     	;# 
   562  07AD                     	;# 
   563  07AE                     	;# 
   564  07AF                     	;# 
   565  07B0                     	;# 
   566  07B1                     	;# 
   567  07B2                     	;# 
   568  07B3                     	;# 
   569  07B4                     	;# 
   570  07B5                     	;# 
   571  07B6                     	;# 
   572  07B7                     	;# 
   573  0FE4                     	;# 
   574  0FE5                     	;# 
   575  0FE6                     	;# 
   576  0FE7                     	;# 
   577  0FE8                     	;# 
   578  0FE9                     	;# 
   579  0FEA                     	;# 
   580  0FEB                     	;# 
   581  0FED                     	;# 
   582  0FEE                     	;# 
   583  0FEF                     	;# 
   584  0000                     	;# 
   585  0001                     	;# 
   586  0002                     	;# 
   587  0003                     	;# 
   588  0004                     	;# 
   589  0005                     	;# 
   590  0006                     	;# 
   591  0007                     	;# 
   592  0008                     	;# 
   593  0009                     	;# 
   594  000A                     	;# 
   595  000B                     	;# 
   596  000C                     	;# 
   597  000D                     	;# 
   598  000E                     	;# 
   599  000F                     	;# 
   600  0010                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0013                     	;# 
   604  0014                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001C                     	;# 
   614  001E                     	;# 
   615  001F                     	;# 
   616  008C                     	;# 
   617  008D                     	;# 
   618  008E                     	;# 
   619  008F                     	;# 
   620  0090                     	;# 
   621  0091                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  0110                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  011A                     	;# 
   651  011B                     	;# 
   652  011D                     	;# 
   653  011E                     	;# 
   654  011F                     	;# 
   655  018C                     	;# 
   656  0190                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0193                     	;# 
   663  0194                     	;# 
   664  0195                     	;# 
   665  0196                     	;# 
   666  0199                     	;# 
   667  0199                     	;# 
   668  019A                     	;# 
   669  019A                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019C                     	;# 
   675  019C                     	;# 
   676  019D                     	;# 
   677  019D                     	;# 
   678  019E                     	;# 
   679  019E                     	;# 
   680  019F                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0219                     	;# 
   699  021A                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021D                     	;# 
   703  021E                     	;# 
   704  021F                     	;# 
   705  028C                     	;# 
   706  028D                     	;# 
   707  0291                     	;# 
   708  0291                     	;# 
   709  0292                     	;# 
   710  0293                     	;# 
   711  0294                     	;# 
   712  0295                     	;# 
   713  0295                     	;# 
   714  0296                     	;# 
   715  0298                     	;# 
   716  0298                     	;# 
   717  0299                     	;# 
   718  029A                     	;# 
   719  029B                     	;# 
   720  029C                     	;# 
   721  029C                     	;# 
   722  029D                     	;# 
   723  029E                     	;# 
   724  029F                     	;# 
   725  030C                     	;# 
   726  030D                     	;# 
   727  0311                     	;# 
   728  0311                     	;# 
   729  0312                     	;# 
   730  0313                     	;# 
   731  0314                     	;# 
   732  0315                     	;# 
   733  0315                     	;# 
   734  0316                     	;# 
   735  0318                     	;# 
   736  0318                     	;# 
   737  0319                     	;# 
   738  031A                     	;# 
   739  031C                     	;# 
   740  031C                     	;# 
   741  031D                     	;# 
   742  031E                     	;# 
   743  038C                     	;# 
   744  038D                     	;# 
   745  0394                     	;# 
   746  0395                     	;# 
   747  0396                     	;# 
   748  040C                     	;# 
   749  040D                     	;# 
   750  0415                     	;# 
   751  0416                     	;# 
   752  0417                     	;# 
   753  041C                     	;# 
   754  041D                     	;# 
   755  041E                     	;# 
   756  048D                     	;# 
   757  0491                     	;# 
   758  0492                     	;# 
   759  0493                     	;# 
   760  0493                     	;# 
   761  0494                     	;# 
   762  0495                     	;# 
   763  0496                     	;# 
   764  0497                     	;# 
   765  0791                     	;# 
   766  0792                     	;# 
   767  0793                     	;# 
   768  0794                     	;# 
   769  0795                     	;# 
   770  0798                     	;# 
   771  0799                     	;# 
   772  079A                     	;# 
   773  079B                     	;# 
   774  079C                     	;# 
   775  079D                     	;# 
   776  07A0                     	;# 
   777  07A1                     	;# 
   778  07A2                     	;# 
   779  07A3                     	;# 
   780  07A4                     	;# 
   781  07A5                     	;# 
   782  07A6                     	;# 
   783  07A7                     	;# 
   784  07A8                     	;# 
   785  07A9                     	;# 
   786  07AA                     	;# 
   787  07AB                     	;# 
   788  07AC                     	;# 
   789  07AD                     	;# 
   790  07AE                     	;# 
   791  07AF                     	;# 
   792  07B0                     	;# 
   793  07B1                     	;# 
   794  07B2                     	;# 
   795  07B3                     	;# 
   796  07B4                     	;# 
   797  07B5                     	;# 
   798  07B6                     	;# 
   799  07B7                     	;# 
   800  0FE4                     	;# 
   801  0FE5                     	;# 
   802  0FE6                     	;# 
   803  0FE7                     	;# 
   804  0FE8                     	;# 
   805  0FE9                     	;# 
   806  0FEA                     	;# 
   807  0FEB                     	;# 
   808  0FED                     	;# 
   809  0FEE                     	;# 
   810  0FEF                     	;# 
   811  0000                     	;# 
   812  0001                     	;# 
   813  0002                     	;# 
   814  0003                     	;# 
   815  0004                     	;# 
   816  0005                     	;# 
   817  0006                     	;# 
   818  0007                     	;# 
   819  0008                     	;# 
   820  0009                     	;# 
   821  000A                     	;# 
   822  000B                     	;# 
   823  000C                     	;# 
   824  000D                     	;# 
   825  000E                     	;# 
   826  000F                     	;# 
   827  0010                     	;# 
   828  0011                     	;# 
   829  0012                     	;# 
   830  0013                     	;# 
   831  0014                     	;# 
   832  0015                     	;# 
   833  0016                     	;# 
   834  0016                     	;# 
   835  0017                     	;# 
   836  0018                     	;# 
   837  0019                     	;# 
   838  001A                     	;# 
   839  001B                     	;# 
   840  001C                     	;# 
   841  001E                     	;# 
   842  001F                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  008F                     	;# 
   847  0090                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0093                     	;# 
   851  0094                     	;# 
   852  0095                     	;# 
   853  0096                     	;# 
   854  0097                     	;# 
   855  0098                     	;# 
   856  0099                     	;# 
   857  009A                     	;# 
   858  009B                     	;# 
   859  009B                     	;# 
   860  009C                     	;# 
   861  009D                     	;# 
   862  009E                     	;# 
   863  010C                     	;# 
   864  010D                     	;# 
   865  010E                     	;# 
   866  010F                     	;# 
   867  0110                     	;# 
   868  0111                     	;# 
   869  0112                     	;# 
   870  0113                     	;# 
   871  0114                     	;# 
   872  0115                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  0118                     	;# 
   876  0119                     	;# 
   877  011A                     	;# 
   878  011B                     	;# 
   879  011D                     	;# 
   880  011E                     	;# 
   881  011F                     	;# 
   882  018C                     	;# 
   883  0190                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019D                     	;# 
   905  019E                     	;# 
   906  019E                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  020D                     	;# 
   910  0211                     	;# 
   911  0211                     	;# 
   912  0212                     	;# 
   913  0212                     	;# 
   914  0213                     	;# 
   915  0213                     	;# 
   916  0214                     	;# 
   917  0214                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0216                     	;# 
   922  0216                     	;# 
   923  0217                     	;# 
   924  0217                     	;# 
   925  0219                     	;# 
   926  021A                     	;# 
   927  021B                     	;# 
   928  021C                     	;# 
   929  021D                     	;# 
   930  021E                     	;# 
   931  021F                     	;# 
   932  028C                     	;# 
   933  028D                     	;# 
   934  0291                     	;# 
   935  0291                     	;# 
   936  0292                     	;# 
   937  0293                     	;# 
   938  0294                     	;# 
   939  0295                     	;# 
   940  0295                     	;# 
   941  0296                     	;# 
   942  0298                     	;# 
   943  0298                     	;# 
   944  0299                     	;# 
   945  029A                     	;# 
   946  029B                     	;# 
   947  029C                     	;# 
   948  029C                     	;# 
   949  029D                     	;# 
   950  029E                     	;# 
   951  029F                     	;# 
   952  030C                     	;# 
   953  030D                     	;# 
   954  0311                     	;# 
   955  0311                     	;# 
   956  0312                     	;# 
   957  0313                     	;# 
   958  0314                     	;# 
   959  0315                     	;# 
   960  0315                     	;# 
   961  0316                     	;# 
   962  0318                     	;# 
   963  0318                     	;# 
   964  0319                     	;# 
   965  031A                     	;# 
   966  031C                     	;# 
   967  031C                     	;# 
   968  031D                     	;# 
   969  031E                     	;# 
   970  038C                     	;# 
   971  038D                     	;# 
   972  0394                     	;# 
   973  0395                     	;# 
   974  0396                     	;# 
   975  040C                     	;# 
   976  040D                     	;# 
   977  0415                     	;# 
   978  0416                     	;# 
   979  0417                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  048D                     	;# 
   984  0491                     	;# 
   985  0492                     	;# 
   986  0493                     	;# 
   987  0493                     	;# 
   988  0494                     	;# 
   989  0495                     	;# 
   990  0496                     	;# 
   991  0497                     	;# 
   992  0791                     	;# 
   993  0792                     	;# 
   994  0793                     	;# 
   995  0794                     	;# 
   996  0795                     	;# 
   997  0798                     	;# 
   998  0799                     	;# 
   999  079A                     	;# 
  1000  079B                     	;# 
  1001  079C                     	;# 
  1002  079D                     	;# 
  1003  07A0                     	;# 
  1004  07A1                     	;# 
  1005  07A2                     	;# 
  1006  07A3                     	;# 
  1007  07A4                     	;# 
  1008  07A5                     	;# 
  1009  07A6                     	;# 
  1010  07A7                     	;# 
  1011  07A8                     	;# 
  1012  07A9                     	;# 
  1013  07AA                     	;# 
  1014  07AB                     	;# 
  1015  07AC                     	;# 
  1016  07AD                     	;# 
  1017  07AE                     	;# 
  1018  07AF                     	;# 
  1019  07B0                     	;# 
  1020  07B1                     	;# 
  1021  07B2                     	;# 
  1022  07B3                     	;# 
  1023  07B4                     	;# 
  1024  07B5                     	;# 
  1025  07B6                     	;# 
  1026  07B7                     	;# 
  1027  0FE4                     	;# 
  1028  0FE5                     	;# 
  1029  0FE6                     	;# 
  1030  0FE7                     	;# 
  1031  0FE8                     	;# 
  1032  0FE9                     	;# 
  1033  0FEA                     	;# 
  1034  0FEB                     	;# 
  1035  0FED                     	;# 
  1036  0FEE                     	;# 
  1037  0FEF                     	;# 
  1038  0000                     	;# 
  1039  0001                     	;# 
  1040  0002                     	;# 
  1041  0003                     	;# 
  1042  0004                     	;# 
  1043  0005                     	;# 
  1044  0006                     	;# 
  1045  0007                     	;# 
  1046  0008                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  000E                     	;# 
  1053  000F                     	;# 
  1054  0010                     	;# 
  1055  0011                     	;# 
  1056  0012                     	;# 
  1057  0013                     	;# 
  1058  0014                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  001E                     	;# 
  1069  001F                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  008F                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0094                     	;# 
  1079  0095                     	;# 
  1080  0096                     	;# 
  1081  0097                     	;# 
  1082  0098                     	;# 
  1083  0099                     	;# 
  1084  009A                     	;# 
  1085  009B                     	;# 
  1086  009B                     	;# 
  1087  009C                     	;# 
  1088  009D                     	;# 
  1089  009E                     	;# 
  1090  010C                     	;# 
  1091  010D                     	;# 
  1092  010E                     	;# 
  1093  010F                     	;# 
  1094  0110                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011D                     	;# 
  1107  011E                     	;# 
  1108  011F                     	;# 
  1109  018C                     	;# 
  1110  0190                     	;# 
  1111  0191                     	;# 
  1112  0191                     	;# 
  1113  0192                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0199                     	;# 
  1121  0199                     	;# 
  1122  019A                     	;# 
  1123  019A                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019C                     	;# 
  1129  019C                     	;# 
  1130  019D                     	;# 
  1131  019D                     	;# 
  1132  019E                     	;# 
  1133  019E                     	;# 
  1134  019F                     	;# 
  1135  019F                     	;# 
  1136  020D                     	;# 
  1137  0211                     	;# 
  1138  0211                     	;# 
  1139  0212                     	;# 
  1140  0212                     	;# 
  1141  0213                     	;# 
  1142  0213                     	;# 
  1143  0214                     	;# 
  1144  0214                     	;# 
  1145  0215                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0216                     	;# 
  1149  0216                     	;# 
  1150  0217                     	;# 
  1151  0217                     	;# 
  1152  0219                     	;# 
  1153  021A                     	;# 
  1154  021B                     	;# 
  1155  021C                     	;# 
  1156  021D                     	;# 
  1157  021E                     	;# 
  1158  021F                     	;# 
  1159  028C                     	;# 
  1160  028D                     	;# 
  1161  0291                     	;# 
  1162  0291                     	;# 
  1163  0292                     	;# 
  1164  0293                     	;# 
  1165  0294                     	;# 
  1166  0295                     	;# 
  1167  0295                     	;# 
  1168  0296                     	;# 
  1169  0298                     	;# 
  1170  0298                     	;# 
  1171  0299                     	;# 
  1172  029A                     	;# 
  1173  029B                     	;# 
  1174  029C                     	;# 
  1175  029C                     	;# 
  1176  029D                     	;# 
  1177  029E                     	;# 
  1178  029F                     	;# 
  1179  030C                     	;# 
  1180  030D                     	;# 
  1181  0311                     	;# 
  1182  0311                     	;# 
  1183  0312                     	;# 
  1184  0313                     	;# 
  1185  0314                     	;# 
  1186  0315                     	;# 
  1187  0315                     	;# 
  1188  0316                     	;# 
  1189  0318                     	;# 
  1190  0318                     	;# 
  1191  0319                     	;# 
  1192  031A                     	;# 
  1193  031C                     	;# 
  1194  031C                     	;# 
  1195  031D                     	;# 
  1196  031E                     	;# 
  1197  038C                     	;# 
  1198  038D                     	;# 
  1199  0394                     	;# 
  1200  0395                     	;# 
  1201  0396                     	;# 
  1202  040C                     	;# 
  1203  040D                     	;# 
  1204  0415                     	;# 
  1205  0416                     	;# 
  1206  0417                     	;# 
  1207  041C                     	;# 
  1208  041D                     	;# 
  1209  041E                     	;# 
  1210  048D                     	;# 
  1211  0491                     	;# 
  1212  0492                     	;# 
  1213  0493                     	;# 
  1214  0493                     	;# 
  1215  0494                     	;# 
  1216  0495                     	;# 
  1217  0496                     	;# 
  1218  0497                     	;# 
  1219  0791                     	;# 
  1220  0792                     	;# 
  1221  0793                     	;# 
  1222  0794                     	;# 
  1223  0795                     	;# 
  1224  0798                     	;# 
  1225  0799                     	;# 
  1226  079A                     	;# 
  1227  079B                     	;# 
  1228  079C                     	;# 
  1229  079D                     	;# 
  1230  07A0                     	;# 
  1231  07A1                     	;# 
  1232  07A2                     	;# 
  1233  07A3                     	;# 
  1234  07A4                     	;# 
  1235  07A5                     	;# 
  1236  07A6                     	;# 
  1237  07A7                     	;# 
  1238  07A8                     	;# 
  1239  07A9                     	;# 
  1240  07AA                     	;# 
  1241  07AB                     	;# 
  1242  07AC                     	;# 
  1243  07AD                     	;# 
  1244  07AE                     	;# 
  1245  07AF                     	;# 
  1246  07B0                     	;# 
  1247  07B1                     	;# 
  1248  07B2                     	;# 
  1249  07B3                     	;# 
  1250  07B4                     	;# 
  1251  07B5                     	;# 
  1252  07B6                     	;# 
  1253  07B7                     	;# 
  1254  0FE4                     	;# 
  1255  0FE5                     	;# 
  1256  0FE6                     	;# 
  1257  0FE7                     	;# 
  1258  0FE8                     	;# 
  1259  0FE9                     	;# 
  1260  0FEA                     	;# 
  1261  0FEB                     	;# 
  1262  0FED                     	;# 
  1263  0FEE                     	;# 
  1264  0FEF                     	;# 
  1265  0000                     	;# 
  1266  0001                     	;# 
  1267  0002                     	;# 
  1268  0003                     	;# 
  1269  0004                     	;# 
  1270  0005                     	;# 
  1271  0006                     	;# 
  1272  0007                     	;# 
  1273  0008                     	;# 
  1274  0009                     	;# 
  1275  000A                     	;# 
  1276  000B                     	;# 
  1277  000C                     	;# 
  1278  000D                     	;# 
  1279  000E                     	;# 
  1280  000F                     	;# 
  1281  0010                     	;# 
  1282  0011                     	;# 
  1283  0012                     	;# 
  1284  0013                     	;# 
  1285  0014                     	;# 
  1286  0015                     	;# 
  1287  0016                     	;# 
  1288  0016                     	;# 
  1289  0017                     	;# 
  1290  0018                     	;# 
  1291  0019                     	;# 
  1292  001A                     	;# 
  1293  001B                     	;# 
  1294  001C                     	;# 
  1295  001E                     	;# 
  1296  001F                     	;# 
  1297  008C                     	;# 
  1298  008D                     	;# 
  1299  008E                     	;# 
  1300  008F                     	;# 
  1301  0090                     	;# 
  1302  0091                     	;# 
  1303  0092                     	;# 
  1304  0093                     	;# 
  1305  0094                     	;# 
  1306  0095                     	;# 
  1307  0096                     	;# 
  1308  0097                     	;# 
  1309  0098                     	;# 
  1310  0099                     	;# 
  1311  009A                     	;# 
  1312  009B                     	;# 
  1313  009B                     	;# 
  1314  009C                     	;# 
  1315  009D                     	;# 
  1316  009E                     	;# 
  1317  010C                     	;# 
  1318  010D                     	;# 
  1319  010E                     	;# 
  1320  010F                     	;# 
  1321  0110                     	;# 
  1322  0111                     	;# 
  1323  0112                     	;# 
  1324  0113                     	;# 
  1325  0114                     	;# 
  1326  0115                     	;# 
  1327  0116                     	;# 
  1328  0117                     	;# 
  1329  0118                     	;# 
  1330  0119                     	;# 
  1331  011A                     	;# 
  1332  011B                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011F                     	;# 
  1336  018C                     	;# 
  1337  0190                     	;# 
  1338  0191                     	;# 
  1339  0191                     	;# 
  1340  0192                     	;# 
  1341  0193                     	;# 
  1342  0193                     	;# 
  1343  0193                     	;# 
  1344  0194                     	;# 
  1345  0195                     	;# 
  1346  0196                     	;# 
  1347  0199                     	;# 
  1348  0199                     	;# 
  1349  019A                     	;# 
  1350  019A                     	;# 
  1351  019B                     	;# 
  1352  019B                     	;# 
  1353  019B                     	;# 
  1354  019B                     	;# 
  1355  019C                     	;# 
  1356  019C                     	;# 
  1357  019D                     	;# 
  1358  019D                     	;# 
  1359  019E                     	;# 
  1360  019E                     	;# 
  1361  019F                     	;# 
  1362  019F                     	;# 
  1363  020D                     	;# 
  1364  0211                     	;# 
  1365  0211                     	;# 
  1366  0212                     	;# 
  1367  0212                     	;# 
  1368  0213                     	;# 
  1369  0213                     	;# 
  1370  0214                     	;# 
  1371  0214                     	;# 
  1372  0215                     	;# 
  1373  0215                     	;# 
  1374  0215                     	;# 
  1375  0216                     	;# 
  1376  0216                     	;# 
  1377  0217                     	;# 
  1378  0217                     	;# 
  1379  0219                     	;# 
  1380  021A                     	;# 
  1381  021B                     	;# 
  1382  021C                     	;# 
  1383  021D                     	;# 
  1384  021E                     	;# 
  1385  021F                     	;# 
  1386  028C                     	;# 
  1387  028D                     	;# 
  1388  0291                     	;# 
  1389  0291                     	;# 
  1390  0292                     	;# 
  1391  0293                     	;# 
  1392  0294                     	;# 
  1393  0295                     	;# 
  1394  0295                     	;# 
  1395  0296                     	;# 
  1396  0298                     	;# 
  1397  0298                     	;# 
  1398  0299                     	;# 
  1399  029A                     	;# 
  1400  029B                     	;# 
  1401  029C                     	;# 
  1402  029C                     	;# 
  1403  029D                     	;# 
  1404  029E                     	;# 
  1405  029F                     	;# 
  1406  030C                     	;# 
  1407  030D                     	;# 
  1408  0311                     	;# 
  1409  0311                     	;# 
  1410  0312                     	;# 
  1411  0313                     	;# 
  1412  0314                     	;# 
  1413  0315                     	;# 
  1414  0315                     	;# 
  1415  0316                     	;# 
  1416  0318                     	;# 
  1417  0318                     	;# 
  1418  0319                     	;# 
  1419  031A                     	;# 
  1420  031C                     	;# 
  1421  031C                     	;# 
  1422  031D                     	;# 
  1423  031E                     	;# 
  1424  038C                     	;# 
  1425  038D                     	;# 
  1426  0394                     	;# 
  1427  0395                     	;# 
  1428  0396                     	;# 
  1429  040C                     	;# 
  1430  040D                     	;# 
  1431  0415                     	;# 
  1432  0416                     	;# 
  1433  0417                     	;# 
  1434  041C                     	;# 
  1435  041D                     	;# 
  1436  041E                     	;# 
  1437  048D                     	;# 
  1438  0491                     	;# 
  1439  0492                     	;# 
  1440  0493                     	;# 
  1441  0493                     	;# 
  1442  0494                     	;# 
  1443  0495                     	;# 
  1444  0496                     	;# 
  1445  0497                     	;# 
  1446  0791                     	;# 
  1447  0792                     	;# 
  1448  0793                     	;# 
  1449  0794                     	;# 
  1450  0795                     	;# 
  1451  0798                     	;# 
  1452  0799                     	;# 
  1453  079A                     	;# 
  1454  079B                     	;# 
  1455  079C                     	;# 
  1456  079D                     	;# 
  1457  07A0                     	;# 
  1458  07A1                     	;# 
  1459  07A2                     	;# 
  1460  07A3                     	;# 
  1461  07A4                     	;# 
  1462  07A5                     	;# 
  1463  07A6                     	;# 
  1464  07A7                     	;# 
  1465  07A8                     	;# 
  1466  07A9                     	;# 
  1467  07AA                     	;# 
  1468  07AB                     	;# 
  1469  07AC                     	;# 
  1470  07AD                     	;# 
  1471  07AE                     	;# 
  1472  07AF                     	;# 
  1473  07B0                     	;# 
  1474  07B1                     	;# 
  1475  07B2                     	;# 
  1476  07B3                     	;# 
  1477  07B4                     	;# 
  1478  07B5                     	;# 
  1479  07B6                     	;# 
  1480  07B7                     	;# 
  1481  0FE4                     	;# 
  1482  0FE5                     	;# 
  1483  0FE6                     	;# 
  1484  0FE7                     	;# 
  1485  0FE8                     	;# 
  1486  0FE9                     	;# 
  1487  0FEA                     	;# 
  1488  0FEB                     	;# 
  1489  0FED                     	;# 
  1490  0FEE                     	;# 
  1491  0FEF                     	;# 
  1492  0000                     	;# 
  1493  0001                     	;# 
  1494  0002                     	;# 
  1495  0003                     	;# 
  1496  0004                     	;# 
  1497  0005                     	;# 
  1498  0006                     	;# 
  1499  0007                     	;# 
  1500  0008                     	;# 
  1501  0009                     	;# 
  1502  000A                     	;# 
  1503  000B                     	;# 
  1504  000C                     	;# 
  1505  000D                     	;# 
  1506  000E                     	;# 
  1507  000F                     	;# 
  1508  0010                     	;# 
  1509  0011                     	;# 
  1510  0012                     	;# 
  1511  0013                     	;# 
  1512  0014                     	;# 
  1513  0015                     	;# 
  1514  0016                     	;# 
  1515  0016                     	;# 
  1516  0017                     	;# 
  1517  0018                     	;# 
  1518  0019                     	;# 
  1519  001A                     	;# 
  1520  001B                     	;# 
  1521  001C                     	;# 
  1522  001E                     	;# 
  1523  001F                     	;# 
  1524  008C                     	;# 
  1525  008D                     	;# 
  1526  008E                     	;# 
  1527  008F                     	;# 
  1528  0090                     	;# 
  1529  0091                     	;# 
  1530  0092                     	;# 
  1531  0093                     	;# 
  1532  0094                     	;# 
  1533  0095                     	;# 
  1534  0096                     	;# 
  1535  0097                     	;# 
  1536  0098                     	;# 
  1537  0099                     	;# 
  1538  009A                     	;# 
  1539  009B                     	;# 
  1540  009B                     	;# 
  1541  009C                     	;# 
  1542  009D                     	;# 
  1543  009E                     	;# 
  1544  010C                     	;# 
  1545  010D                     	;# 
  1546  010E                     	;# 
  1547  010F                     	;# 
  1548  0110                     	;# 
  1549  0111                     	;# 
  1550  0112                     	;# 
  1551  0113                     	;# 
  1552  0114                     	;# 
  1553  0115                     	;# 
  1554  0116                     	;# 
  1555  0117                     	;# 
  1556  0118                     	;# 
  1557  0119                     	;# 
  1558  011A                     	;# 
  1559  011B                     	;# 
  1560  011D                     	;# 
  1561  011E                     	;# 
  1562  011F                     	;# 
  1563  018C                     	;# 
  1564  0190                     	;# 
  1565  0191                     	;# 
  1566  0191                     	;# 
  1567  0192                     	;# 
  1568  0193                     	;# 
  1569  0193                     	;# 
  1570  0193                     	;# 
  1571  0194                     	;# 
  1572  0195                     	;# 
  1573  0196                     	;# 
  1574  0199                     	;# 
  1575  0199                     	;# 
  1576  019A                     	;# 
  1577  019A                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019C                     	;# 
  1583  019C                     	;# 
  1584  019D                     	;# 
  1585  019D                     	;# 
  1586  019E                     	;# 
  1587  019E                     	;# 
  1588  019F                     	;# 
  1589  019F                     	;# 
  1590  020D                     	;# 
  1591  0211                     	;# 
  1592  0211                     	;# 
  1593  0212                     	;# 
  1594  0212                     	;# 
  1595  0213                     	;# 
  1596  0213                     	;# 
  1597  0214                     	;# 
  1598  0214                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0216                     	;# 
  1603  0216                     	;# 
  1604  0217                     	;# 
  1605  0217                     	;# 
  1606  0219                     	;# 
  1607  021A                     	;# 
  1608  021B                     	;# 
  1609  021C                     	;# 
  1610  021D                     	;# 
  1611  021E                     	;# 
  1612  021F                     	;# 
  1613  028C                     	;# 
  1614  028D                     	;# 
  1615  0291                     	;# 
  1616  0291                     	;# 
  1617  0292                     	;# 
  1618  0293                     	;# 
  1619  0294                     	;# 
  1620  0295                     	;# 
  1621  0295                     	;# 
  1622  0296                     	;# 
  1623  0298                     	;# 
  1624  0298                     	;# 
  1625  0299                     	;# 
  1626  029A                     	;# 
  1627  029B                     	;# 
  1628  029C                     	;# 
  1629  029C                     	;# 
  1630  029D                     	;# 
  1631  029E                     	;# 
  1632  029F                     	;# 
  1633  030C                     	;# 
  1634  030D                     	;# 
  1635  0311                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0315                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0318                     	;# 
  1644  0318                     	;# 
  1645  0319                     	;# 
  1646  031A                     	;# 
  1647  031C                     	;# 
  1648  031C                     	;# 
  1649  031D                     	;# 
  1650  031E                     	;# 
  1651  038C                     	;# 
  1652  038D                     	;# 
  1653  0394                     	;# 
  1654  0395                     	;# 
  1655  0396                     	;# 
  1656  040C                     	;# 
  1657  040D                     	;# 
  1658  0415                     	;# 
  1659  0416                     	;# 
  1660  0417                     	;# 
  1661  041C                     	;# 
  1662  041D                     	;# 
  1663  041E                     	;# 
  1664  048D                     	;# 
  1665  0491                     	;# 
  1666  0492                     	;# 
  1667  0493                     	;# 
  1668  0493                     	;# 
  1669  0494                     	;# 
  1670  0495                     	;# 
  1671  0496                     	;# 
  1672  0497                     	;# 
  1673  0791                     	;# 
  1674  0792                     	;# 
  1675  0793                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0798                     	;# 
  1679  0799                     	;# 
  1680  079A                     	;# 
  1681  079B                     	;# 
  1682  079C                     	;# 
  1683  079D                     	;# 
  1684  07A0                     	;# 
  1685  07A1                     	;# 
  1686  07A2                     	;# 
  1687  07A3                     	;# 
  1688  07A4                     	;# 
  1689  07A5                     	;# 
  1690  07A6                     	;# 
  1691  07A7                     	;# 
  1692  07A8                     	;# 
  1693  07A9                     	;# 
  1694  07AA                     	;# 
  1695  07AB                     	;# 
  1696  07AC                     	;# 
  1697  07AD                     	;# 
  1698  07AE                     	;# 
  1699  07AF                     	;# 
  1700  07B0                     	;# 
  1701  07B1                     	;# 
  1702  07B2                     	;# 
  1703  07B3                     	;# 
  1704  07B4                     	;# 
  1705  07B5                     	;# 
  1706  07B6                     	;# 
  1707  07B7                     	;# 
  1708  0FE4                     	;# 
  1709  0FE5                     	;# 
  1710  0FE6                     	;# 
  1711  0FE7                     	;# 
  1712  0FE8                     	;# 
  1713  0FE9                     	;# 
  1714  0FEA                     	;# 
  1715  0FEB                     	;# 
  1716  0FED                     	;# 
  1717  0FEE                     	;# 
  1718  0FEF                     	;# 
  1719  0000                     	;# 
  1720  0001                     	;# 
  1721  0002                     	;# 
  1722  0003                     	;# 
  1723  0004                     	;# 
  1724  0005                     	;# 
  1725  0006                     	;# 
  1726  0007                     	;# 
  1727  0008                     	;# 
  1728  0009                     	;# 
  1729  000A                     	;# 
  1730  000B                     	;# 
  1731  000C                     	;# 
  1732  000D                     	;# 
  1733  000E                     	;# 
  1734  000F                     	;# 
  1735  0010                     	;# 
  1736  0011                     	;# 
  1737  0012                     	;# 
  1738  0013                     	;# 
  1739  0014                     	;# 
  1740  0015                     	;# 
  1741  0016                     	;# 
  1742  0016                     	;# 
  1743  0017                     	;# 
  1744  0018                     	;# 
  1745  0019                     	;# 
  1746  001A                     	;# 
  1747  001B                     	;# 
  1748  001C                     	;# 
  1749  001E                     	;# 
  1750  001F                     	;# 
  1751  008C                     	;# 
  1752  008D                     	;# 
  1753  008E                     	;# 
  1754  008F                     	;# 
  1755  0090                     	;# 
  1756  0091                     	;# 
  1757  0092                     	;# 
  1758  0093                     	;# 
  1759  0094                     	;# 
  1760  0095                     	;# 
  1761  0096                     	;# 
  1762  0097                     	;# 
  1763  0098                     	;# 
  1764  0099                     	;# 
  1765  009A                     	;# 
  1766  009B                     	;# 
  1767  009B                     	;# 
  1768  009C                     	;# 
  1769  009D                     	;# 
  1770  009E                     	;# 
  1771  010C                     	;# 
  1772  010D                     	;# 
  1773  010E                     	;# 
  1774  010F                     	;# 
  1775  0110                     	;# 
  1776  0111                     	;# 
  1777  0112                     	;# 
  1778  0113                     	;# 
  1779  0114                     	;# 
  1780  0115                     	;# 
  1781  0116                     	;# 
  1782  0117                     	;# 
  1783  0118                     	;# 
  1784  0119                     	;# 
  1785  011A                     	;# 
  1786  011B                     	;# 
  1787  011D                     	;# 
  1788  011E                     	;# 
  1789  011F                     	;# 
  1790  018C                     	;# 
  1791  0190                     	;# 
  1792  0191                     	;# 
  1793  0191                     	;# 
  1794  0192                     	;# 
  1795  0193                     	;# 
  1796  0193                     	;# 
  1797  0193                     	;# 
  1798  0194                     	;# 
  1799  0195                     	;# 
  1800  0196                     	;# 
  1801  0199                     	;# 
  1802  0199                     	;# 
  1803  019A                     	;# 
  1804  019A                     	;# 
  1805  019B                     	;# 
  1806  019B                     	;# 
  1807  019B                     	;# 
  1808  019B                     	;# 
  1809  019C                     	;# 
  1810  019C                     	;# 
  1811  019D                     	;# 
  1812  019D                     	;# 
  1813  019E                     	;# 
  1814  019E                     	;# 
  1815  019F                     	;# 
  1816  019F                     	;# 
  1817  020D                     	;# 
  1818  0211                     	;# 
  1819  0211                     	;# 
  1820  0212                     	;# 
  1821  0212                     	;# 
  1822  0213                     	;# 
  1823  0213                     	;# 
  1824  0214                     	;# 
  1825  0214                     	;# 
  1826  0215                     	;# 
  1827  0215                     	;# 
  1828  0215                     	;# 
  1829  0216                     	;# 
  1830  0216                     	;# 
  1831  0217                     	;# 
  1832  0217                     	;# 
  1833  0219                     	;# 
  1834  021A                     	;# 
  1835  021B                     	;# 
  1836  021C                     	;# 
  1837  021D                     	;# 
  1838  021E                     	;# 
  1839  021F                     	;# 
  1840  028C                     	;# 
  1841  028D                     	;# 
  1842  0291                     	;# 
  1843  0291                     	;# 
  1844  0292                     	;# 
  1845  0293                     	;# 
  1846  0294                     	;# 
  1847  0295                     	;# 
  1848  0295                     	;# 
  1849  0296                     	;# 
  1850  0298                     	;# 
  1851  0298                     	;# 
  1852  0299                     	;# 
  1853  029A                     	;# 
  1854  029B                     	;# 
  1855  029C                     	;# 
  1856  029C                     	;# 
  1857  029D                     	;# 
  1858  029E                     	;# 
  1859  029F                     	;# 
  1860  030C                     	;# 
  1861  030D                     	;# 
  1862  0311                     	;# 
  1863  0311                     	;# 
  1864  0312                     	;# 
  1865  0313                     	;# 
  1866  0314                     	;# 
  1867  0315                     	;# 
  1868  0315                     	;# 
  1869  0316                     	;# 
  1870  0318                     	;# 
  1871  0318                     	;# 
  1872  0319                     	;# 
  1873  031A                     	;# 
  1874  031C                     	;# 
  1875  031C                     	;# 
  1876  031D                     	;# 
  1877  031E                     	;# 
  1878  038C                     	;# 
  1879  038D                     	;# 
  1880  0394                     	;# 
  1881  0395                     	;# 
  1882  0396                     	;# 
  1883  040C                     	;# 
  1884  040D                     	;# 
  1885  0415                     	;# 
  1886  0416                     	;# 
  1887  0417                     	;# 
  1888  041C                     	;# 
  1889  041D                     	;# 
  1890  041E                     	;# 
  1891  048D                     	;# 
  1892  0491                     	;# 
  1893  0492                     	;# 
  1894  0493                     	;# 
  1895  0493                     	;# 
  1896  0494                     	;# 
  1897  0495                     	;# 
  1898  0496                     	;# 
  1899  0497                     	;# 
  1900  0791                     	;# 
  1901  0792                     	;# 
  1902  0793                     	;# 
  1903  0794                     	;# 
  1904  0795                     	;# 
  1905  0798                     	;# 
  1906  0799                     	;# 
  1907  079A                     	;# 
  1908  079B                     	;# 
  1909  079C                     	;# 
  1910  079D                     	;# 
  1911  07A0                     	;# 
  1912  07A1                     	;# 
  1913  07A2                     	;# 
  1914  07A3                     	;# 
  1915  07A4                     	;# 
  1916  07A5                     	;# 
  1917  07A6                     	;# 
  1918  07A7                     	;# 
  1919  07A8                     	;# 
  1920  07A9                     	;# 
  1921  07AA                     	;# 
  1922  07AB                     	;# 
  1923  07AC                     	;# 
  1924  07AD                     	;# 
  1925  07AE                     	;# 
  1926  07AF                     	;# 
  1927  07B0                     	;# 
  1928  07B1                     	;# 
  1929  07B2                     	;# 
  1930  07B3                     	;# 
  1931  07B4                     	;# 
  1932  07B5                     	;# 
  1933  07B6                     	;# 
  1934  07B7                     	;# 
  1935  0FE4                     	;# 
  1936  0FE5                     	;# 
  1937  0FE6                     	;# 
  1938  0FE7                     	;# 
  1939  0FE8                     	;# 
  1940  0FE9                     	;# 
  1941  0FEA                     	;# 
  1942  0FEB                     	;# 
  1943  0FED                     	;# 
  1944  0FEE                     	;# 
  1945  0FEF                     	;# 
  1946  0000                     	;# 
  1947  0001                     	;# 
  1948  0002                     	;# 
  1949  0003                     	;# 
  1950  0004                     	;# 
  1951  0005                     	;# 
  1952  0006                     	;# 
  1953  0007                     	;# 
  1954  0008                     	;# 
  1955  0009                     	;# 
  1956  000A                     	;# 
  1957  000B                     	;# 
  1958  000C                     	;# 
  1959  000D                     	;# 
  1960  000E                     	;# 
  1961  000F                     	;# 
  1962  0010                     	;# 
  1963  0011                     	;# 
  1964  0012                     	;# 
  1965  0013                     	;# 
  1966  0014                     	;# 
  1967  0015                     	;# 
  1968  0016                     	;# 
  1969  0016                     	;# 
  1970  0017                     	;# 
  1971  0018                     	;# 
  1972  0019                     	;# 
  1973  001A                     	;# 
  1974  001B                     	;# 
  1975  001C                     	;# 
  1976  001E                     	;# 
  1977  001F                     	;# 
  1978  008C                     	;# 
  1979  008D                     	;# 
  1980  008E                     	;# 
  1981  008F                     	;# 
  1982  0090                     	;# 
  1983  0091                     	;# 
  1984  0092                     	;# 
  1985  0093                     	;# 
  1986  0094                     	;# 
  1987  0095                     	;# 
  1988  0096                     	;# 
  1989  0097                     	;# 
  1990  0098                     	;# 
  1991  0099                     	;# 
  1992  009A                     	;# 
  1993  009B                     	;# 
  1994  009B                     	;# 
  1995  009C                     	;# 
  1996  009D                     	;# 
  1997  009E                     	;# 
  1998  010C                     	;# 
  1999  010D                     	;# 
  2000  010E                     	;# 
  2001  010F                     	;# 
  2002  0110                     	;# 
  2003  0111                     	;# 
  2004  0112                     	;# 
  2005  0113                     	;# 
  2006  0114                     	;# 
  2007  0115                     	;# 
  2008  0116                     	;# 
  2009  0117                     	;# 
  2010  0118                     	;# 
  2011  0119                     	;# 
  2012  011A                     	;# 
  2013  011B                     	;# 
  2014  011D                     	;# 
  2015  011E                     	;# 
  2016  011F                     	;# 
  2017  018C                     	;# 
  2018  0190                     	;# 
  2019  0191                     	;# 
  2020  0191                     	;# 
  2021  0192                     	;# 
  2022  0193                     	;# 
  2023  0193                     	;# 
  2024  0193                     	;# 
  2025  0194                     	;# 
  2026  0195                     	;# 
  2027  0196                     	;# 
  2028  0199                     	;# 
  2029  0199                     	;# 
  2030  019A                     	;# 
  2031  019A                     	;# 
  2032  019B                     	;# 
  2033  019B                     	;# 
  2034  019B                     	;# 
  2035  019B                     	;# 
  2036  019C                     	;# 
  2037  019C                     	;# 
  2038  019D                     	;# 
  2039  019D                     	;# 
  2040  019E                     	;# 
  2041  019E                     	;# 
  2042  019F                     	;# 
  2043  019F                     	;# 
  2044  020D                     	;# 
  2045  0211                     	;# 
  2046  0211                     	;# 
  2047  0212                     	;# 
  2048  0212                     	;# 
  2049  0213                     	;# 
  2050  0213                     	;# 
  2051  0214                     	;# 
  2052  0214                     	;# 
  2053  0215                     	;# 
  2054  0215                     	;# 
  2055  0215                     	;# 
  2056  0216                     	;# 
  2057  0216                     	;# 
  2058  0217                     	;# 
  2059  0217                     	;# 
  2060  0219                     	;# 
  2061  021A                     	;# 
  2062  021B                     	;# 
  2063  021C                     	;# 
  2064  021D                     	;# 
  2065  021E                     	;# 
  2066  021F                     	;# 
  2067  028C                     	;# 
  2068  028D                     	;# 
  2069  0291                     	;# 
  2070  0291                     	;# 
  2071  0292                     	;# 
  2072  0293                     	;# 
  2073  0294                     	;# 
  2074  0295                     	;# 
  2075  0295                     	;# 
  2076  0296                     	;# 
  2077  0298                     	;# 
  2078  0298                     	;# 
  2079  0299                     	;# 
  2080  029A                     	;# 
  2081  029B                     	;# 
  2082  029C                     	;# 
  2083  029C                     	;# 
  2084  029D                     	;# 
  2085  029E                     	;# 
  2086  029F                     	;# 
  2087  030C                     	;# 
  2088  030D                     	;# 
  2089  0311                     	;# 
  2090  0311                     	;# 
  2091  0312                     	;# 
  2092  0313                     	;# 
  2093  0314                     	;# 
  2094  0315                     	;# 
  2095  0315                     	;# 
  2096  0316                     	;# 
  2097  0318                     	;# 
  2098  0318                     	;# 
  2099  0319                     	;# 
  2100  031A                     	;# 
  2101  031C                     	;# 
  2102  031C                     	;# 
  2103  031D                     	;# 
  2104  031E                     	;# 
  2105  038C                     	;# 
  2106  038D                     	;# 
  2107  0394                     	;# 
  2108  0395                     	;# 
  2109  0396                     	;# 
  2110  040C                     	;# 
  2111  040D                     	;# 
  2112  0415                     	;# 
  2113  0416                     	;# 
  2114  0417                     	;# 
  2115  041C                     	;# 
  2116  041D                     	;# 
  2117  041E                     	;# 
  2118  048D                     	;# 
  2119  0491                     	;# 
  2120  0492                     	;# 
  2121  0493                     	;# 
  2122  0493                     	;# 
  2123  0494                     	;# 
  2124  0495                     	;# 
  2125  0496                     	;# 
  2126  0497                     	;# 
  2127  0791                     	;# 
  2128  0792                     	;# 
  2129  0793                     	;# 
  2130  0794                     	;# 
  2131  0795                     	;# 
  2132  0798                     	;# 
  2133  0799                     	;# 
  2134  079A                     	;# 
  2135  079B                     	;# 
  2136  079C                     	;# 
  2137  079D                     	;# 
  2138  07A0                     	;# 
  2139  07A1                     	;# 
  2140  07A2                     	;# 
  2141  07A3                     	;# 
  2142  07A4                     	;# 
  2143  07A5                     	;# 
  2144  07A6                     	;# 
  2145  07A7                     	;# 
  2146  07A8                     	;# 
  2147  07A9                     	;# 
  2148  07AA                     	;# 
  2149  07AB                     	;# 
  2150  07AC                     	;# 
  2151  07AD                     	;# 
  2152  07AE                     	;# 
  2153  07AF                     	;# 
  2154  07B0                     	;# 
  2155  07B1                     	;# 
  2156  07B2                     	;# 
  2157  07B3                     	;# 
  2158  07B4                     	;# 
  2159  07B5                     	;# 
  2160  07B6                     	;# 
  2161  07B7                     	;# 
  2162  0FE4                     	;# 
  2163  0FE5                     	;# 
  2164  0FE6                     	;# 
  2165  0FE7                     	;# 
  2166  0FE8                     	;# 
  2167  0FE9                     	;# 
  2168  0FEA                     	;# 
  2169  0FEB                     	;# 
  2170  0FED                     	;# 
  2171  0FEE                     	;# 
  2172  0FEF                     	;# 
  2173  0000                     	;# 
  2174  0001                     	;# 
  2175  0002                     	;# 
  2176  0003                     	;# 
  2177  0004                     	;# 
  2178  0005                     	;# 
  2179  0006                     	;# 
  2180  0007                     	;# 
  2181  0008                     	;# 
  2182  0009                     	;# 
  2183  000A                     	;# 
  2184  000B                     	;# 
  2185  000C                     	;# 
  2186  000D                     	;# 
  2187  000E                     	;# 
  2188  000F                     	;# 
  2189  0010                     	;# 
  2190  0011                     	;# 
  2191  0012                     	;# 
  2192  0013                     	;# 
  2193  0014                     	;# 
  2194  0015                     	;# 
  2195  0016                     	;# 
  2196  0016                     	;# 
  2197  0017                     	;# 
  2198  0018                     	;# 
  2199  0019                     	;# 
  2200  001A                     	;# 
  2201  001B                     	;# 
  2202  001C                     	;# 
  2203  001E                     	;# 
  2204  001F                     	;# 
  2205  008C                     	;# 
  2206  008D                     	;# 
  2207  008E                     	;# 
  2208  008F                     	;# 
  2209  0090                     	;# 
  2210  0091                     	;# 
  2211  0092                     	;# 
  2212  0093                     	;# 
  2213  0094                     	;# 
  2214  0095                     	;# 
  2215  0096                     	;# 
  2216  0097                     	;# 
  2217  0098                     	;# 
  2218  0099                     	;# 
  2219  009A                     	;# 
  2220  009B                     	;# 
  2221  009B                     	;# 
  2222  009C                     	;# 
  2223  009D                     	;# 
  2224  009E                     	;# 
  2225  010C                     	;# 
  2226  010D                     	;# 
  2227  010E                     	;# 
  2228  010F                     	;# 
  2229  0110                     	;# 
  2230  0111                     	;# 
  2231  0112                     	;# 
  2232  0113                     	;# 
  2233  0114                     	;# 
  2234  0115                     	;# 
  2235  0116                     	;# 
  2236  0117                     	;# 
  2237  0118                     	;# 
  2238  0119                     	;# 
  2239  011A                     	;# 
  2240  011B                     	;# 
  2241  011D                     	;# 
  2242  011E                     	;# 
  2243  011F                     	;# 
  2244  018C                     	;# 
  2245  0190                     	;# 
  2246  0191                     	;# 
  2247  0191                     	;# 
  2248  0192                     	;# 
  2249  0193                     	;# 
  2250  0193                     	;# 
  2251  0193                     	;# 
  2252  0194                     	;# 
  2253  0195                     	;# 
  2254  0196                     	;# 
  2255  0199                     	;# 
  2256  0199                     	;# 
  2257  019A                     	;# 
  2258  019A                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019B                     	;# 
  2263  019C                     	;# 
  2264  019C                     	;# 
  2265  019D                     	;# 
  2266  019D                     	;# 
  2267  019E                     	;# 
  2268  019E                     	;# 
  2269  019F                     	;# 
  2270  019F                     	;# 
  2271  020D                     	;# 
  2272  0211                     	;# 
  2273  0211                     	;# 
  2274  0212                     	;# 
  2275  0212                     	;# 
  2276  0213                     	;# 
  2277  0213                     	;# 
  2278  0214                     	;# 
  2279  0214                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0215                     	;# 
  2283  0216                     	;# 
  2284  0216                     	;# 
  2285  0217                     	;# 
  2286  0217                     	;# 
  2287  0219                     	;# 
  2288  021A                     	;# 
  2289  021B                     	;# 
  2290  021C                     	;# 
  2291  021D                     	;# 
  2292  021E                     	;# 
  2293  021F                     	;# 
  2294  028C                     	;# 
  2295  028D                     	;# 
  2296  0291                     	;# 
  2297  0291                     	;# 
  2298  0292                     	;# 
  2299  0293                     	;# 
  2300  0294                     	;# 
  2301  0295                     	;# 
  2302  0295                     	;# 
  2303  0296                     	;# 
  2304  0298                     	;# 
  2305  0298                     	;# 
  2306  0299                     	;# 
  2307  029A                     	;# 
  2308  029B                     	;# 
  2309  029C                     	;# 
  2310  029C                     	;# 
  2311  029D                     	;# 
  2312  029E                     	;# 
  2313  029F                     	;# 
  2314  030C                     	;# 
  2315  030D                     	;# 
  2316  0311                     	;# 
  2317  0311                     	;# 
  2318  0312                     	;# 
  2319  0313                     	;# 
  2320  0314                     	;# 
  2321  0315                     	;# 
  2322  0315                     	;# 
  2323  0316                     	;# 
  2324  0318                     	;# 
  2325  0318                     	;# 
  2326  0319                     	;# 
  2327  031A                     	;# 
  2328  031C                     	;# 
  2329  031C                     	;# 
  2330  031D                     	;# 
  2331  031E                     	;# 
  2332  038C                     	;# 
  2333  038D                     	;# 
  2334  0394                     	;# 
  2335  0395                     	;# 
  2336  0396                     	;# 
  2337  040C                     	;# 
  2338  040D                     	;# 
  2339  0415                     	;# 
  2340  0416                     	;# 
  2341  0417                     	;# 
  2342  041C                     	;# 
  2343  041D                     	;# 
  2344  041E                     	;# 
  2345  048D                     	;# 
  2346  0491                     	;# 
  2347  0492                     	;# 
  2348  0493                     	;# 
  2349  0493                     	;# 
  2350  0494                     	;# 
  2351  0495                     	;# 
  2352  0496                     	;# 
  2353  0497                     	;# 
  2354  0791                     	;# 
  2355  0792                     	;# 
  2356  0793                     	;# 
  2357  0794                     	;# 
  2358  0795                     	;# 
  2359  0798                     	;# 
  2360  0799                     	;# 
  2361  079A                     	;# 
  2362  079B                     	;# 
  2363  079C                     	;# 
  2364  079D                     	;# 
  2365  07A0                     	;# 
  2366  07A1                     	;# 
  2367  07A2                     	;# 
  2368  07A3                     	;# 
  2369  07A4                     	;# 
  2370  07A5                     	;# 
  2371  07A6                     	;# 
  2372  07A7                     	;# 
  2373  07A8                     	;# 
  2374  07A9                     	;# 
  2375  07AA                     	;# 
  2376  07AB                     	;# 
  2377  07AC                     	;# 
  2378  07AD                     	;# 
  2379  07AE                     	;# 
  2380  07AF                     	;# 
  2381  07B0                     	;# 
  2382  07B1                     	;# 
  2383  07B2                     	;# 
  2384  07B3                     	;# 
  2385  07B4                     	;# 
  2386  07B5                     	;# 
  2387  07B6                     	;# 
  2388  07B7                     	;# 
  2389  0FE4                     	;# 
  2390  0FE5                     	;# 
  2391  0FE6                     	;# 
  2392  0FE7                     	;# 
  2393  0FE8                     	;# 
  2394  0FE9                     	;# 
  2395  0FEA                     	;# 
  2396  0FEB                     	;# 
  2397  0FED                     	;# 
  2398  0FEE                     	;# 
  2399  0FEF                     	;# 
  2400  0000                     	;# 
  2401  0001                     	;# 
  2402  0002                     	;# 
  2403  0003                     	;# 
  2404  0004                     	;# 
  2405  0005                     	;# 
  2406  0006                     	;# 
  2407  0007                     	;# 
  2408  0008                     	;# 
  2409  0009                     	;# 
  2410  000A                     	;# 
  2411  000B                     	;# 
  2412  000C                     	;# 
  2413  000D                     	;# 
  2414  000E                     	;# 
  2415  000F                     	;# 
  2416  0010                     	;# 
  2417  0011                     	;# 
  2418  0012                     	;# 
  2419  0013                     	;# 
  2420  0014                     	;# 
  2421  0015                     	;# 
  2422  0016                     	;# 
  2423  0016                     	;# 
  2424  0017                     	;# 
  2425  0018                     	;# 
  2426  0019                     	;# 
  2427  001A                     	;# 
  2428  001B                     	;# 
  2429  001C                     	;# 
  2430  001E                     	;# 
  2431  001F                     	;# 
  2432  008C                     	;# 
  2433  008D                     	;# 
  2434  008E                     	;# 
  2435  008F                     	;# 
  2436  0090                     	;# 
  2437  0091                     	;# 
  2438  0092                     	;# 
  2439  0093                     	;# 
  2440  0094                     	;# 
  2441  0095                     	;# 
  2442  0096                     	;# 
  2443  0097                     	;# 
  2444  0098                     	;# 
  2445  0099                     	;# 
  2446  009A                     	;# 
  2447  009B                     	;# 
  2448  009B                     	;# 
  2449  009C                     	;# 
  2450  009D                     	;# 
  2451  009E                     	;# 
  2452  010C                     	;# 
  2453  010D                     	;# 
  2454  010E                     	;# 
  2455  010F                     	;# 
  2456  0110                     	;# 
  2457  0111                     	;# 
  2458  0112                     	;# 
  2459  0113                     	;# 
  2460  0114                     	;# 
  2461  0115                     	;# 
  2462  0116                     	;# 
  2463  0117                     	;# 
  2464  0118                     	;# 
  2465  0119                     	;# 
  2466  011A                     	;# 
  2467  011B                     	;# 
  2468  011D                     	;# 
  2469  011E                     	;# 
  2470  011F                     	;# 
  2471  018C                     	;# 
  2472  0190                     	;# 
  2473  0191                     	;# 
  2474  0191                     	;# 
  2475  0192                     	;# 
  2476  0193                     	;# 
  2477  0193                     	;# 
  2478  0193                     	;# 
  2479  0194                     	;# 
  2480  0195                     	;# 
  2481  0196                     	;# 
  2482  0199                     	;# 
  2483  0199                     	;# 
  2484  019A                     	;# 
  2485  019A                     	;# 
  2486  019B                     	;# 
  2487  019B                     	;# 
  2488  019B                     	;# 
  2489  019B                     	;# 
  2490  019C                     	;# 
  2491  019C                     	;# 
  2492  019D                     	;# 
  2493  019D                     	;# 
  2494  019E                     	;# 
  2495  019E                     	;# 
  2496  019F                     	;# 
  2497  019F                     	;# 
  2498  020D                     	;# 
  2499  0211                     	;# 
  2500  0211                     	;# 
  2501  0212                     	;# 
  2502  0212                     	;# 
  2503  0213                     	;# 
  2504  0213                     	;# 
  2505  0214                     	;# 
  2506  0214                     	;# 
  2507  0215                     	;# 
  2508  0215                     	;# 
  2509  0215                     	;# 
  2510  0216                     	;# 
  2511  0216                     	;# 
  2512  0217                     	;# 
  2513  0217                     	;# 
  2514  0219                     	;# 
  2515  021A                     	;# 
  2516  021B                     	;# 
  2517  021C                     	;# 
  2518  021D                     	;# 
  2519  021E                     	;# 
  2520  021F                     	;# 
  2521  028C                     	;# 
  2522  028D                     	;# 
  2523  0291                     	;# 
  2524  0291                     	;# 
  2525  0292                     	;# 
  2526  0293                     	;# 
  2527  0294                     	;# 
  2528  0295                     	;# 
  2529  0295                     	;# 
  2530  0296                     	;# 
  2531  0298                     	;# 
  2532  0298                     	;# 
  2533  0299                     	;# 
  2534  029A                     	;# 
  2535  029B                     	;# 
  2536  029C                     	;# 
  2537  029C                     	;# 
  2538  029D                     	;# 
  2539  029E                     	;# 
  2540  029F                     	;# 
  2541  030C                     	;# 
  2542  030D                     	;# 
  2543  0311                     	;# 
  2544  0311                     	;# 
  2545  0312                     	;# 
  2546  0313                     	;# 
  2547  0314                     	;# 
  2548  0315                     	;# 
  2549  0315                     	;# 
  2550  0316                     	;# 
  2551  0318                     	;# 
  2552  0318                     	;# 
  2553  0319                     	;# 
  2554  031A                     	;# 
  2555  031C                     	;# 
  2556  031C                     	;# 
  2557  031D                     	;# 
  2558  031E                     	;# 
  2559  038C                     	;# 
  2560  038D                     	;# 
  2561  0394                     	;# 
  2562  0395                     	;# 
  2563  0396                     	;# 
  2564  040C                     	;# 
  2565  040D                     	;# 
  2566  0415                     	;# 
  2567  0416                     	;# 
  2568  0417                     	;# 
  2569  041C                     	;# 
  2570  041D                     	;# 
  2571  041E                     	;# 
  2572  048D                     	;# 
  2573  0491                     	;# 
  2574  0492                     	;# 
  2575  0493                     	;# 
  2576  0493                     	;# 
  2577  0494                     	;# 
  2578  0495                     	;# 
  2579  0496                     	;# 
  2580  0497                     	;# 
  2581  0791                     	;# 
  2582  0792                     	;# 
  2583  0793                     	;# 
  2584  0794                     	;# 
  2585  0795                     	;# 
  2586  0798                     	;# 
  2587  0799                     	;# 
  2588  079A                     	;# 
  2589  079B                     	;# 
  2590  079C                     	;# 
  2591  079D                     	;# 
  2592  07A0                     	;# 
  2593  07A1                     	;# 
  2594  07A2                     	;# 
  2595  07A3                     	;# 
  2596  07A4                     	;# 
  2597  07A5                     	;# 
  2598  07A6                     	;# 
  2599  07A7                     	;# 
  2600  07A8                     	;# 
  2601  07A9                     	;# 
  2602  07AA                     	;# 
  2603  07AB                     	;# 
  2604  07AC                     	;# 
  2605  07AD                     	;# 
  2606  07AE                     	;# 
  2607  07AF                     	;# 
  2608  07B0                     	;# 
  2609  07B1                     	;# 
  2610  07B2                     	;# 
  2611  07B3                     	;# 
  2612  07B4                     	;# 
  2613  07B5                     	;# 
  2614  07B6                     	;# 
  2615  07B7                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  000F                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0014                     	;# 
  2648  0015                     	;# 
  2649  0016                     	;# 
  2650  0016                     	;# 
  2651  0017                     	;# 
  2652  0018                     	;# 
  2653  0019                     	;# 
  2654  001A                     	;# 
  2655  001B                     	;# 
  2656  001C                     	;# 
  2657  001E                     	;# 
  2658  001F                     	;# 
  2659  008C                     	;# 
  2660  008D                     	;# 
  2661  008E                     	;# 
  2662  008F                     	;# 
  2663  0090                     	;# 
  2664  0091                     	;# 
  2665  0092                     	;# 
  2666  0093                     	;# 
  2667  0094                     	;# 
  2668  0095                     	;# 
  2669  0096                     	;# 
  2670  0097                     	;# 
  2671  0098                     	;# 
  2672  0099                     	;# 
  2673  009A                     	;# 
  2674  009B                     	;# 
  2675  009B                     	;# 
  2676  009C                     	;# 
  2677  009D                     	;# 
  2678  009E                     	;# 
  2679  010C                     	;# 
  2680  010D                     	;# 
  2681  010E                     	;# 
  2682  010F                     	;# 
  2683  0110                     	;# 
  2684  0111                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0115                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0118                     	;# 
  2692  0119                     	;# 
  2693  011A                     	;# 
  2694  011B                     	;# 
  2695  011D                     	;# 
  2696  011E                     	;# 
  2697  011F                     	;# 
  2698  018C                     	;# 
  2699  0190                     	;# 
  2700  0191                     	;# 
  2701  0191                     	;# 
  2702  0192                     	;# 
  2703  0193                     	;# 
  2704  0193                     	;# 
  2705  0193                     	;# 
  2706  0194                     	;# 
  2707  0195                     	;# 
  2708  0196                     	;# 
  2709  0199                     	;# 
  2710  0199                     	;# 
  2711  019A                     	;# 
  2712  019A                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019C                     	;# 
  2718  019C                     	;# 
  2719  019D                     	;# 
  2720  019D                     	;# 
  2721  019E                     	;# 
  2722  019E                     	;# 
  2723  019F                     	;# 
  2724  019F                     	;# 
  2725  020D                     	;# 
  2726  0211                     	;# 
  2727  0211                     	;# 
  2728  0212                     	;# 
  2729  0212                     	;# 
  2730  0213                     	;# 
  2731  0213                     	;# 
  2732  0214                     	;# 
  2733  0214                     	;# 
  2734  0215                     	;# 
  2735  0215                     	;# 
  2736  0215                     	;# 
  2737  0216                     	;# 
  2738  0216                     	;# 
  2739  0217                     	;# 
  2740  0217                     	;# 
  2741  0219                     	;# 
  2742  021A                     	;# 
  2743  021B                     	;# 
  2744  021C                     	;# 
  2745  021D                     	;# 
  2746  021E                     	;# 
  2747  021F                     	;# 
  2748  028C                     	;# 
  2749  028D                     	;# 
  2750  0291                     	;# 
  2751  0291                     	;# 
  2752  0292                     	;# 
  2753  0293                     	;# 
  2754  0294                     	;# 
  2755  0295                     	;# 
  2756  0295                     	;# 
  2757  0296                     	;# 
  2758  0298                     	;# 
  2759  0298                     	;# 
  2760  0299                     	;# 
  2761  029A                     	;# 
  2762  029B                     	;# 
  2763  029C                     	;# 
  2764  029C                     	;# 
  2765  029D                     	;# 
  2766  029E                     	;# 
  2767  029F                     	;# 
  2768  030C                     	;# 
  2769  030D                     	;# 
  2770  0311                     	;# 
  2771  0311                     	;# 
  2772  0312                     	;# 
  2773  0313                     	;# 
  2774  0314                     	;# 
  2775  0315                     	;# 
  2776  0315                     	;# 
  2777  0316                     	;# 
  2778  0318                     	;# 
  2779  0318                     	;# 
  2780  0319                     	;# 
  2781  031A                     	;# 
  2782  031C                     	;# 
  2783  031C                     	;# 
  2784  031D                     	;# 
  2785  031E                     	;# 
  2786  038C                     	;# 
  2787  038D                     	;# 
  2788  0394                     	;# 
  2789  0395                     	;# 
  2790  0396                     	;# 
  2791  040C                     	;# 
  2792  040D                     	;# 
  2793  0415                     	;# 
  2794  0416                     	;# 
  2795  0417                     	;# 
  2796  041C                     	;# 
  2797  041D                     	;# 
  2798  041E                     	;# 
  2799  048D                     	;# 
  2800  0491                     	;# 
  2801  0492                     	;# 
  2802  0493                     	;# 
  2803  0493                     	;# 
  2804  0494                     	;# 
  2805  0495                     	;# 
  2806  0496                     	;# 
  2807  0497                     	;# 
  2808  0791                     	;# 
  2809  0792                     	;# 
  2810  0793                     	;# 
  2811  0794                     	;# 
  2812  0795                     	;# 
  2813  0798                     	;# 
  2814  0799                     	;# 
  2815  079A                     	;# 
  2816  079B                     	;# 
  2817  079C                     	;# 
  2818  079D                     	;# 
  2819  07A0                     	;# 
  2820  07A1                     	;# 
  2821  07A2                     	;# 
  2822  07A3                     	;# 
  2823  07A4                     	;# 
  2824  07A5                     	;# 
  2825  07A6                     	;# 
  2826  07A7                     	;# 
  2827  07A8                     	;# 
  2828  07A9                     	;# 
  2829  07AA                     	;# 
  2830  07AB                     	;# 
  2831  07AC                     	;# 
  2832  07AD                     	;# 
  2833  07AE                     	;# 
  2834  07AF                     	;# 
  2835  07B0                     	;# 
  2836  07B1                     	;# 
  2837  07B2                     	;# 
  2838  07B3                     	;# 
  2839  07B4                     	;# 
  2840  07B5                     	;# 
  2841  07B6                     	;# 
  2842  07B7                     	;# 
  2843  0FE4                     	;# 
  2844  0FE5                     	;# 
  2845  0FE6                     	;# 
  2846  0FE7                     	;# 
  2847  0FE8                     	;# 
  2848  0FE9                     	;# 
  2849  0FEA                     	;# 
  2850  0FEB                     	;# 
  2851  0FED                     	;# 
  2852  0FEE                     	;# 
  2853  0FEF                     	;# 
  2854  0000                     	;# 
  2855  0001                     	;# 
  2856  0002                     	;# 
  2857  0003                     	;# 
  2858  0004                     	;# 
  2859  0005                     	;# 
  2860  0006                     	;# 
  2861  0007                     	;# 
  2862  0008                     	;# 
  2863  0009                     	;# 
  2864  000A                     	;# 
  2865  000B                     	;# 
  2866  000C                     	;# 
  2867  000D                     	;# 
  2868  000E                     	;# 
  2869  000F                     	;# 
  2870  0010                     	;# 
  2871  0011                     	;# 
  2872  0012                     	;# 
  2873  0013                     	;# 
  2874  0014                     	;# 
  2875  0015                     	;# 
  2876  0016                     	;# 
  2877  0016                     	;# 
  2878  0017                     	;# 
  2879  0018                     	;# 
  2880  0019                     	;# 
  2881  001A                     	;# 
  2882  001B                     	;# 
  2883  001C                     	;# 
  2884  001E                     	;# 
  2885  001F                     	;# 
  2886  008C                     	;# 
  2887  008D                     	;# 
  2888  008E                     	;# 
  2889  008F                     	;# 
  2890  0090                     	;# 
  2891  0091                     	;# 
  2892  0092                     	;# 
  2893  0093                     	;# 
  2894  0094                     	;# 
  2895  0095                     	;# 
  2896  0096                     	;# 
  2897  0097                     	;# 
  2898  0098                     	;# 
  2899  0099                     	;# 
  2900  009A                     	;# 
  2901  009B                     	;# 
  2902  009B                     	;# 
  2903  009C                     	;# 
  2904  009D                     	;# 
  2905  009E                     	;# 
  2906  010C                     	;# 
  2907  010D                     	;# 
  2908  010E                     	;# 
  2909  010F                     	;# 
  2910  0110                     	;# 
  2911  0111                     	;# 
  2912  0112                     	;# 
  2913  0113                     	;# 
  2914  0114                     	;# 
  2915  0115                     	;# 
  2916  0116                     	;# 
  2917  0117                     	;# 
  2918  0118                     	;# 
  2919  0119                     	;# 
  2920  011A                     	;# 
  2921  011B                     	;# 
  2922  011D                     	;# 
  2923  011E                     	;# 
  2924  011F                     	;# 
  2925  018C                     	;# 
  2926  0190                     	;# 
  2927  0191                     	;# 
  2928  0191                     	;# 
  2929  0192                     	;# 
  2930  0193                     	;# 
  2931  0193                     	;# 
  2932  0193                     	;# 
  2933  0194                     	;# 
  2934  0195                     	;# 
  2935  0196                     	;# 
  2936  0199                     	;# 
  2937  0199                     	;# 
  2938  019A                     	;# 
  2939  019A                     	;# 
  2940  019B                     	;# 
  2941  019B                     	;# 
  2942  019B                     	;# 
  2943  019B                     	;# 
  2944  019C                     	;# 
  2945  019C                     	;# 
  2946  019D                     	;# 
  2947  019D                     	;# 
  2948  019E                     	;# 
  2949  019E                     	;# 
  2950  019F                     	;# 
  2951  019F                     	;# 
  2952  020D                     	;# 
  2953  0211                     	;# 
  2954  0211                     	;# 
  2955  0212                     	;# 
  2956  0212                     	;# 
  2957  0213                     	;# 
  2958  0213                     	;# 
  2959  0214                     	;# 
  2960  0214                     	;# 
  2961  0215                     	;# 
  2962  0215                     	;# 
  2963  0215                     	;# 
  2964  0216                     	;# 
  2965  0216                     	;# 
  2966  0217                     	;# 
  2967  0217                     	;# 
  2968  0219                     	;# 
  2969  021A                     	;# 
  2970  021B                     	;# 
  2971  021C                     	;# 
  2972  021D                     	;# 
  2973  021E                     	;# 
  2974  021F                     	;# 
  2975  028C                     	;# 
  2976  028D                     	;# 
  2977  0291                     	;# 
  2978  0291                     	;# 
  2979  0292                     	;# 
  2980  0293                     	;# 
  2981  0294                     	;# 
  2982  0295                     	;# 
  2983  0295                     	;# 
  2984  0296                     	;# 
  2985  0298                     	;# 
  2986  0298                     	;# 
  2987  0299                     	;# 
  2988  029A                     	;# 
  2989  029B                     	;# 
  2990  029C                     	;# 
  2991  029C                     	;# 
  2992  029D                     	;# 
  2993  029E                     	;# 
  2994  029F                     	;# 
  2995  030C                     	;# 
  2996  030D                     	;# 
  2997  0311                     	;# 
  2998  0311                     	;# 
  2999  0312                     	;# 
  3000  0313                     	;# 
  3001  0314                     	;# 
  3002  0315                     	;# 
  3003  0315                     	;# 
  3004  0316                     	;# 
  3005  0318                     	;# 
  3006  0318                     	;# 
  3007  0319                     	;# 
  3008  031A                     	;# 
  3009  031C                     	;# 
  3010  031C                     	;# 
  3011  031D                     	;# 
  3012  031E                     	;# 
  3013  038C                     	;# 
  3014  038D                     	;# 
  3015  0394                     	;# 
  3016  0395                     	;# 
  3017  0396                     	;# 
  3018  040C                     	;# 
  3019  040D                     	;# 
  3020  0415                     	;# 
  3021  0416                     	;# 
  3022  0417                     	;# 
  3023  041C                     	;# 
  3024  041D                     	;# 
  3025  041E                     	;# 
  3026  048D                     	;# 
  3027  0491                     	;# 
  3028  0492                     	;# 
  3029  0493                     	;# 
  3030  0493                     	;# 
  3031  0494                     	;# 
  3032  0495                     	;# 
  3033  0496                     	;# 
  3034  0497                     	;# 
  3035  0791                     	;# 
  3036  0792                     	;# 
  3037  0793                     	;# 
  3038  0794                     	;# 
  3039  0795                     	;# 
  3040  0798                     	;# 
  3041  0799                     	;# 
  3042  079A                     	;# 
  3043  079B                     	;# 
  3044  079C                     	;# 
  3045  079D                     	;# 
  3046  07A0                     	;# 
  3047  07A1                     	;# 
  3048  07A2                     	;# 
  3049  07A3                     	;# 
  3050  07A4                     	;# 
  3051  07A5                     	;# 
  3052  07A6                     	;# 
  3053  07A7                     	;# 
  3054  07A8                     	;# 
  3055  07A9                     	;# 
  3056  07AA                     	;# 
  3057  07AB                     	;# 
  3058  07AC                     	;# 
  3059  07AD                     	;# 
  3060  07AE                     	;# 
  3061  07AF                     	;# 
  3062  07B0                     	;# 
  3063  07B1                     	;# 
  3064  07B2                     	;# 
  3065  07B3                     	;# 
  3066  07B4                     	;# 
  3067  07B5                     	;# 
  3068  07B6                     	;# 
  3069  07B7                     	;# 
  3070  0FE4                     	;# 
  3071  0FE5                     	;# 
  3072  0FE6                     	;# 
  3073  0FE7                     	;# 
  3074  0FE8                     	;# 
  3075  0FE9                     	;# 
  3076  0FEA                     	;# 
  3077  0FEB                     	;# 
  3078  0FED                     	;# 
  3079  0FEE                     	;# 
  3080  0FEF                     	;# 
  3081  0000                     	;# 
  3082  0001                     	;# 
  3083  0002                     	;# 
  3084  0003                     	;# 
  3085  0004                     	;# 
  3086  0005                     	;# 
  3087  0006                     	;# 
  3088  0007                     	;# 
  3089  0008                     	;# 
  3090  0009                     	;# 
  3091  000A                     	;# 
  3092  000B                     	;# 
  3093  000C                     	;# 
  3094  000D                     	;# 
  3095  000E                     	;# 
  3096  000F                     	;# 
  3097  0010                     	;# 
  3098  0011                     	;# 
  3099  0012                     	;# 
  3100  0013                     	;# 
  3101  0014                     	;# 
  3102  0015                     	;# 
  3103  0016                     	;# 
  3104  0016                     	;# 
  3105  0017                     	;# 
  3106  0018                     	;# 
  3107  0019                     	;# 
  3108  001A                     	;# 
  3109  001B                     	;# 
  3110  001C                     	;# 
  3111  001E                     	;# 
  3112  001F                     	;# 
  3113  008C                     	;# 
  3114  008D                     	;# 
  3115  008E                     	;# 
  3116  008F                     	;# 
  3117  0090                     	;# 
  3118  0091                     	;# 
  3119  0092                     	;# 
  3120  0093                     	;# 
  3121  0094                     	;# 
  3122  0095                     	;# 
  3123  0096                     	;# 
  3124  0097                     	;# 
  3125  0098                     	;# 
  3126  0099                     	;# 
  3127  009A                     	;# 
  3128  009B                     	;# 
  3129  009B                     	;# 
  3130  009C                     	;# 
  3131  009D                     	;# 
  3132  009E                     	;# 
  3133  010C                     	;# 
  3134  010D                     	;# 
  3135  010E                     	;# 
  3136  010F                     	;# 
  3137  0110                     	;# 
  3138  0111                     	;# 
  3139  0112                     	;# 
  3140  0113                     	;# 
  3141  0114                     	;# 
  3142  0115                     	;# 
  3143  0116                     	;# 
  3144  0117                     	;# 
  3145  0118                     	;# 
  3146  0119                     	;# 
  3147  011A                     	;# 
  3148  011B                     	;# 
  3149  011D                     	;# 
  3150  011E                     	;# 
  3151  011F                     	;# 
  3152  018C                     	;# 
  3153  0190                     	;# 
  3154  0191                     	;# 
  3155  0191                     	;# 
  3156  0192                     	;# 
  3157  0193                     	;# 
  3158  0193                     	;# 
  3159  0193                     	;# 
  3160  0194                     	;# 
  3161  0195                     	;# 
  3162  0196                     	;# 
  3163  0199                     	;# 
  3164  0199                     	;# 
  3165  019A                     	;# 
  3166  019A                     	;# 
  3167  019B                     	;# 
  3168  019B                     	;# 
  3169  019B                     	;# 
  3170  019B                     	;# 
  3171  019C                     	;# 
  3172  019C                     	;# 
  3173  019D                     	;# 
  3174  019D                     	;# 
  3175  019E                     	;# 
  3176  019E                     	;# 
  3177  019F                     	;# 
  3178  019F                     	;# 
  3179  020D                     	;# 
  3180  0211                     	;# 
  3181  0211                     	;# 
  3182  0212                     	;# 
  3183  0212                     	;# 
  3184  0213                     	;# 
  3185  0213                     	;# 
  3186  0214                     	;# 
  3187  0214                     	;# 
  3188  0215                     	;# 
  3189  0215                     	;# 
  3190  0215                     	;# 
  3191  0216                     	;# 
  3192  0216                     	;# 
  3193  0217                     	;# 
  3194  0217                     	;# 
  3195  0219                     	;# 
  3196  021A                     	;# 
  3197  021B                     	;# 
  3198  021C                     	;# 
  3199  021D                     	;# 
  3200  021E                     	;# 
  3201  021F                     	;# 
  3202  028C                     	;# 
  3203  028D                     	;# 
  3204  0291                     	;# 
  3205  0291                     	;# 
  3206  0292                     	;# 
  3207  0293                     	;# 
  3208  0294                     	;# 
  3209  0295                     	;# 
  3210  0295                     	;# 
  3211  0296                     	;# 
  3212  0298                     	;# 
  3213  0298                     	;# 
  3214  0299                     	;# 
  3215  029A                     	;# 
  3216  029B                     	;# 
  3217  029C                     	;# 
  3218  029C                     	;# 
  3219  029D                     	;# 
  3220  029E                     	;# 
  3221  029F                     	;# 
  3222  030C                     	;# 
  3223  030D                     	;# 
  3224  0311                     	;# 
  3225  0311                     	;# 
  3226  0312                     	;# 
  3227  0313                     	;# 
  3228  0314                     	;# 
  3229  0315                     	;# 
  3230  0315                     	;# 
  3231  0316                     	;# 
  3232  0318                     	;# 
  3233  0318                     	;# 
  3234  0319                     	;# 
  3235  031A                     	;# 
  3236  031C                     	;# 
  3237  031C                     	;# 
  3238  031D                     	;# 
  3239  031E                     	;# 
  3240  038C                     	;# 
  3241  038D                     	;# 
  3242  0394                     	;# 
  3243  0395                     	;# 
  3244  0396                     	;# 
  3245  040C                     	;# 
  3246  040D                     	;# 
  3247  0415                     	;# 
  3248  0416                     	;# 
  3249  0417                     	;# 
  3250  041C                     	;# 
  3251  041D                     	;# 
  3252  041E                     	;# 
  3253  048D                     	;# 
  3254  0491                     	;# 
  3255  0492                     	;# 
  3256  0493                     	;# 
  3257  0493                     	;# 
  3258  0494                     	;# 
  3259  0495                     	;# 
  3260  0496                     	;# 
  3261  0497                     	;# 
  3262  0791                     	;# 
  3263  0792                     	;# 
  3264  0793                     	;# 
  3265  0794                     	;# 
  3266  0795                     	;# 
  3267  0798                     	;# 
  3268  0799                     	;# 
  3269  079A                     	;# 
  3270  079B                     	;# 
  3271  079C                     	;# 
  3272  079D                     	;# 
  3273  07A0                     	;# 
  3274  07A1                     	;# 
  3275  07A2                     	;# 
  3276  07A3                     	;# 
  3277  07A4                     	;# 
  3278  07A5                     	;# 
  3279  07A6                     	;# 
  3280  07A7                     	;# 
  3281  07A8                     	;# 
  3282  07A9                     	;# 
  3283  07AA                     	;# 
  3284  07AB                     	;# 
  3285  07AC                     	;# 
  3286  07AD                     	;# 
  3287  07AE                     	;# 
  3288  07AF                     	;# 
  3289  07B0                     	;# 
  3290  07B1                     	;# 
  3291  07B2                     	;# 
  3292  07B3                     	;# 
  3293  07B4                     	;# 
  3294  07B5                     	;# 
  3295  07B6                     	;# 
  3296  07B7                     	;# 
  3297  0FE4                     	;# 
  3298  0FE5                     	;# 
  3299  0FE6                     	;# 
  3300  0FE7                     	;# 
  3301  0FE8                     	;# 
  3302  0FE9                     	;# 
  3303  0FEA                     	;# 
  3304  0FEB                     	;# 
  3305  0FED                     	;# 
  3306  0FEE                     	;# 
  3307  0FEF                     	;# 
  3308  0000                     	;# 
  3309  0001                     	;# 
  3310  0002                     	;# 
  3311  0003                     	;# 
  3312  0004                     	;# 
  3313  0005                     	;# 
  3314  0006                     	;# 
  3315  0007                     	;# 
  3316  0008                     	;# 
  3317  0009                     	;# 
  3318  000A                     	;# 
  3319  000B                     	;# 
  3320  000C                     	;# 
  3321  000D                     	;# 
  3322  000E                     	;# 
  3323  000F                     	;# 
  3324  0010                     	;# 
  3325  0011                     	;# 
  3326  0012                     	;# 
  3327  0013                     	;# 
  3328  0014                     	;# 
  3329  0015                     	;# 
  3330  0016                     	;# 
  3331  0016                     	;# 
  3332  0017                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  001A                     	;# 
  3336  001B                     	;# 
  3337  001C                     	;# 
  3338  001E                     	;# 
  3339  001F                     	;# 
  3340  008C                     	;# 
  3341  008D                     	;# 
  3342  008E                     	;# 
  3343  008F                     	;# 
  3344  0090                     	;# 
  3345  0091                     	;# 
  3346  0092                     	;# 
  3347  0093                     	;# 
  3348  0094                     	;# 
  3349  0095                     	;# 
  3350  0096                     	;# 
  3351  0097                     	;# 
  3352  0098                     	;# 
  3353  0099                     	;# 
  3354  009A                     	;# 
  3355  009B                     	;# 
  3356  009B                     	;# 
  3357  009C                     	;# 
  3358  009D                     	;# 
  3359  009E                     	;# 
  3360  010C                     	;# 
  3361  010D                     	;# 
  3362  010E                     	;# 
  3363  010F                     	;# 
  3364  0110                     	;# 
  3365  0111                     	;# 
  3366  0112                     	;# 
  3367  0113                     	;# 
  3368  0114                     	;# 
  3369  0115                     	;# 
  3370  0116                     	;# 
  3371  0117                     	;# 
  3372  0118                     	;# 
  3373  0119                     	;# 
  3374  011A                     	;# 
  3375  011B                     	;# 
  3376  011D                     	;# 
  3377  011E                     	;# 
  3378  011F                     	;# 
  3379  018C                     	;# 
  3380  0190                     	;# 
  3381  0191                     	;# 
  3382  0191                     	;# 
  3383  0192                     	;# 
  3384  0193                     	;# 
  3385  0193                     	;# 
  3386  0193                     	;# 
  3387  0194                     	;# 
  3388  0195                     	;# 
  3389  0196                     	;# 
  3390  0199                     	;# 
  3391  0199                     	;# 
  3392  019A                     	;# 
  3393  019A                     	;# 
  3394  019B                     	;# 
  3395  019B                     	;# 
  3396  019B                     	;# 
  3397  019B                     	;# 
  3398  019C                     	;# 
  3399  019C                     	;# 
  3400  019D                     	;# 
  3401  019D                     	;# 
  3402  019E                     	;# 
  3403  019E                     	;# 
  3404  019F                     	;# 
  3405  019F                     	;# 
  3406  020D                     	;# 
  3407  0211                     	;# 
  3408  0211                     	;# 
  3409  0212                     	;# 
  3410  0212                     	;# 
  3411  0213                     	;# 
  3412  0213                     	;# 
  3413  0214                     	;# 
  3414  0214                     	;# 
  3415  0215                     	;# 
  3416  0215                     	;# 
  3417  0215                     	;# 
  3418  0216                     	;# 
  3419  0216                     	;# 
  3420  0217                     	;# 
  3421  0217                     	;# 
  3422  0219                     	;# 
  3423  021A                     	;# 
  3424  021B                     	;# 
  3425  021C                     	;# 
  3426  021D                     	;# 
  3427  021E                     	;# 
  3428  021F                     	;# 
  3429  028C                     	;# 
  3430  028D                     	;# 
  3431  0291                     	;# 
  3432  0291                     	;# 
  3433  0292                     	;# 
  3434  0293                     	;# 
  3435  0294                     	;# 
  3436  0295                     	;# 
  3437  0295                     	;# 
  3438  0296                     	;# 
  3439  0298                     	;# 
  3440  0298                     	;# 
  3441  0299                     	;# 
  3442  029A                     	;# 
  3443  029B                     	;# 
  3444  029C                     	;# 
  3445  029C                     	;# 
  3446  029D                     	;# 
  3447  029E                     	;# 
  3448  029F                     	;# 
  3449  030C                     	;# 
  3450  030D                     	;# 
  3451  0311                     	;# 
  3452  0311                     	;# 
  3453  0312                     	;# 
  3454  0313                     	;# 
  3455  0314                     	;# 
  3456  0315                     	;# 
  3457  0315                     	;# 
  3458  0316                     	;# 
  3459  0318                     	;# 
  3460  0318                     	;# 
  3461  0319                     	;# 
  3462  031A                     	;# 
  3463  031C                     	;# 
  3464  031C                     	;# 
  3465  031D                     	;# 
  3466  031E                     	;# 
  3467  038C                     	;# 
  3468  038D                     	;# 
  3469  0394                     	;# 
  3470  0395                     	;# 
  3471  0396                     	;# 
  3472  040C                     	;# 
  3473  040D                     	;# 
  3474  0415                     	;# 
  3475  0416                     	;# 
  3476  0417                     	;# 
  3477  041C                     	;# 
  3478  041D                     	;# 
  3479  041E                     	;# 
  3480  048D                     	;# 
  3481  0491                     	;# 
  3482  0492                     	;# 
  3483  0493                     	;# 
  3484  0493                     	;# 
  3485  0494                     	;# 
  3486  0495                     	;# 
  3487  0496                     	;# 
  3488  0497                     	;# 
  3489  0791                     	;# 
  3490  0792                     	;# 
  3491  0793                     	;# 
  3492  0794                     	;# 
  3493  0795                     	;# 
  3494  0798                     	;# 
  3495  0799                     	;# 
  3496  079A                     	;# 
  3497  079B                     	;# 
  3498  079C                     	;# 
  3499  079D                     	;# 
  3500  07A0                     	;# 
  3501  07A1                     	;# 
  3502  07A2                     	;# 
  3503  07A3                     	;# 
  3504  07A4                     	;# 
  3505  07A5                     	;# 
  3506  07A6                     	;# 
  3507  07A7                     	;# 
  3508  07A8                     	;# 
  3509  07A9                     	;# 
  3510  07AA                     	;# 
  3511  07AB                     	;# 
  3512  07AC                     	;# 
  3513  07AD                     	;# 
  3514  07AE                     	;# 
  3515  07AF                     	;# 
  3516  07B0                     	;# 
  3517  07B1                     	;# 
  3518  07B2                     	;# 
  3519  07B3                     	;# 
  3520  07B4                     	;# 
  3521  07B5                     	;# 
  3522  07B6                     	;# 
  3523  07B7                     	;# 
  3524  0FE4                     	;# 
  3525  0FE5                     	;# 
  3526  0FE6                     	;# 
  3527  0FE7                     	;# 
  3528  0FE8                     	;# 
  3529  0FE9                     	;# 
  3530  0FEA                     	;# 
  3531  0FEB                     	;# 
  3532  0FED                     	;# 
  3533  0FEE                     	;# 
  3534  0FEF                     	;_RxPacket
  3535                           
  3536                           	psect	idataBANK0
  3537  34F7                     __pidataBANK0:	
  3538                           
  3539                           ;initializer for _AdditionalNodeID
  3540  34F7  3401               	retlw	1
  3541                           
  3542                           ;initializer for _myChannel
  3543  34F8  3419               	retlw	25
  3544                           
  3545                           ;initializer for _ConnMode
  3546  34F9  3403               	retlw	3
  3547                           
  3548                           	psect	idataBANK3
  3549  350A                     __pidataBANK3:	
  3550                           
  3551                           ;initializer for _myLongAddress
  3552  350A  34FF               	retlw	255
  3553  350B  3411               	retlw	17
  3554  350C  3422               	retlw	34
  3555  350D  3433               	retlw	51
  3556  350E  3444               	retlw	68
  3557  350F  3455               	retlw	85
  3558  3510  3466               	retlw	102
  3559  3511  3411               	retlw	17
  3560                           
  3561                           	psect	stringtext
  3562  2000                     __pstringtext:	
  3563  2000                     _MiWi:	
  3564  2000  3420               	retlw	32
  3565  2001  34B2               	retlw	178
  3566  2002  3420               	retlw	32
  3567  2003  3420               	retlw	32
  3568  2004  3420               	retlw	32
  3569  2005  34B2               	retlw	178
  3570  2006  3420               	retlw	32
  3571  2007  3420               	retlw	32
  3572  2008  34B2               	retlw	178
  3573  2009  3420               	retlw	32
  3574  200A  34B2               	retlw	178
  3575  200B  3420               	retlw	32
  3576  200C  3420               	retlw	32
  3577  200D  3420               	retlw	32
  3578  200E  3420               	retlw	32
  3579  200F  3420               	retlw	32
  3580  2010  34B2               	retlw	178
  3581  2011  3420               	retlw	32
  3582  2012  34B2               	retlw	178
  3583  2013  340D               	retlw	13
  3584  2014  340A               	retlw	10
  3585  2015  34B2               	retlw	178
  3586  2016  3420               	retlw	32
  3587  2017  34B2               	retlw	178
  3588  2018  3420               	retlw	32
  3589  2019  34B2               	retlw	178
  3590  201A  3420               	retlw	32
  3591  201B  34B2               	retlw	178
  3592  201C  3420               	retlw	32
  3593  201D  3420               	retlw	32
  3594  201E  3420               	retlw	32
  3595  201F  34B2               	retlw	178
  3596  2020  3420               	retlw	32
  3597  2021  3420               	retlw	32
  3598  2022  34B2               	retlw	178
  3599  2023  3420               	retlw	32
  3600  2024  3420               	retlw	32
  3601  2025  34B2               	retlw	178
  3602  2026  3420               	retlw	32
  3603  2027  3420               	retlw	32
  3604  2028  340D               	retlw	13
  3605  2029  340A               	retlw	10
  3606  202A  34B2               	retlw	178
  3607  202B  3420               	retlw	32
  3608  202C  3420               	retlw	32
  3609  202D  34B2               	retlw	178
  3610  202E  3420               	retlw	32
  3611  202F  3420               	retlw	32
  3612  2030  34B2               	retlw	178
  3613  2031  3420               	retlw	32
  3614  2032  34B2               	retlw	178
  3615  2033  3420               	retlw	32
  3616  2034  34B2               	retlw	178
  3617  2035  3420               	retlw	32
  3618  2036  3420               	retlw	32
  3619  2037  34B2               	retlw	178
  3620  2038  3420               	retlw	32
  3621  2039  3420               	retlw	32
  3622  203A  34B2               	retlw	178
  3623  203B  3420               	retlw	32
  3624  203C  34B2               	retlw	178
  3625  203D  340D               	retlw	13
  3626  203E  340A               	retlw	10
  3627  203F  34B2               	retlw	178
  3628  2040  3420               	retlw	32
  3629  2041  3420               	retlw	32
  3630  2042  34B2               	retlw	178
  3631  2043  3420               	retlw	32
  3632  2044  3420               	retlw	32
  3633  2045  34B2               	retlw	178
  3634  2046  3420               	retlw	32
  3635  2047  34B2               	retlw	178
  3636  2048  3420               	retlw	32
  3637  2049  3420               	retlw	32
  3638  204A  34B2               	retlw	178
  3639  204B  3420               	retlw	32
  3640  204C  34B2               	retlw	178
  3641  204D  3420               	retlw	32
  3642  204E  34B2               	retlw	178
  3643  204F  3420               	retlw	32
  3644  2050  3420               	retlw	32
  3645  2051  34B2               	retlw	178
  3646  2052  340D               	retlw	13
  3647  2053  340A               	retlw	10
  3648  2054  34B2               	retlw	178
  3649  2055  3420               	retlw	32
  3650  2056  3420               	retlw	32
  3651  2057  34B2               	retlw	178
  3652  2058  3420               	retlw	32
  3653  2059  3420               	retlw	32
  3654  205A  34B2               	retlw	178
  3655  205B  3420               	retlw	32
  3656  205C  34B2               	retlw	178
  3657  205D  3420               	retlw	32
  3658  205E  3420               	retlw	32
  3659  205F  3420               	retlw	32
  3660  2060  34B2               	retlw	178
  3661  2061  3420               	retlw	32
  3662  2062  34B2               	retlw	178
  3663  2063  3420               	retlw	32
  3664  2064  3420               	retlw	32
  3665  2065  3420               	retlw	32
  3666  2066  34B2               	retlw	178
  3667  2067  340D               	retlw	13
  3668  2068  340A               	retlw	10
  3669  2069  3420               	retlw	32
  3670  206A  3420               	retlw	32
  3671  206B  3420               	retlw	32
  3672  206C  3420               	retlw	32
  3673  206D  3420               	retlw	32
  3674  206E  3420               	retlw	32
  3675  206F  3420               	retlw	32
  3676  2070  3420               	retlw	32
  3677  2071  3420               	retlw	32
  3678  2072  3420               	retlw	32
  3679  2073  3420               	retlw	32
  3680  2074  3420               	retlw	32
  3681  2075  3420               	retlw	32
  3682  2076  3420               	retlw	32
  3683  2077  3420               	retlw	32
  3684  2078  3420               	retlw	32
  3685  2079  3420               	retlw	32
  3686  207A  3420               	retlw	32
  3687  207B  3420               	retlw	32
  3688  207C  340D               	retlw	13
  3689  207D  340A               	retlw	10
  3690  207E                     __end_of_MiWi:	
  3691  207E                     _DE:	
  3692  207E  34B2               	retlw	178
  3693  207F  34B2               	retlw	178
  3694  2080  34B2               	retlw	178
  3695  2081  3420               	retlw	32
  3696  2082  3420               	retlw	32
  3697  2083  34B2               	retlw	178
  3698  2084  34B2               	retlw	178
  3699  2085  34B2               	retlw	178
  3700  2086  34B2               	retlw	178
  3701  2087  340D               	retlw	13
  3702  2088  340A               	retlw	10
  3703  2089  34B2               	retlw	178
  3704  208A  3420               	retlw	32
  3705  208B  3420               	retlw	32
  3706  208C  34B2               	retlw	178
  3707  208D  3420               	retlw	32
  3708  208E  34B2               	retlw	178
  3709  208F  3420               	retlw	32
  3710  2090  3420               	retlw	32
  3711  2091  3420               	retlw	32
  3712  2092  340D               	retlw	13
  3713  2093  340A               	retlw	10
  3714  2094  34B2               	retlw	178
  3715  2095  3420               	retlw	32
  3716  2096  3420               	retlw	32
  3717  2097  34B2               	retlw	178
  3718  2098  3420               	retlw	32
  3719  2099  34B2               	retlw	178
  3720  209A  34B2               	retlw	178
  3721  209B  34B2               	retlw	178
  3722  209C  34B2               	retlw	178
  3723  209D  340D               	retlw	13
  3724  209E  340A               	retlw	10
  3725  209F  34B2               	retlw	178
  3726  20A0  3420               	retlw	32
  3727  20A1  3420               	retlw	32
  3728  20A2  34B2               	retlw	178
  3729  20A3  3420               	retlw	32
  3730  20A4  34B2               	retlw	178
  3731  20A5  3420               	retlw	32
  3732  20A6  3420               	retlw	32
  3733  20A7  3420               	retlw	32
  3734  20A8  340D               	retlw	13
  3735  20A9  340A               	retlw	10
  3736  20AA  34B2               	retlw	178
  3737  20AB  34B2               	retlw	178
  3738  20AC  34B2               	retlw	178
  3739  20AD  3420               	retlw	32
  3740  20AE  3420               	retlw	32
  3741  20AF  34B2               	retlw	178
  3742  20B0  34B2               	retlw	178
  3743  20B1  34B2               	retlw	178
  3744  20B2  34B2               	retlw	178
  3745  20B3  340D               	retlw	13
  3746  20B4  340A               	retlw	10
  3747  20B5  3420               	retlw	32
  3748  20B6  3420               	retlw	32
  3749  20B7  3420               	retlw	32
  3750  20B8  3420               	retlw	32
  3751  20B9  3420               	retlw	32
  3752  20BA  3420               	retlw	32
  3753  20BB  3420               	retlw	32
  3754  20BC  3420               	retlw	32
  3755  20BD  3420               	retlw	32
  3756  20BE  340D               	retlw	13
  3757  20BF  340A               	retlw	10
  3758  20C0                     __end_of_DE:	
  3759  20C0                     _InitConfigRegs:	
  3760  20C0  342E               	retlw	46
  3761  20C1  3400               	retlw	0
  3762  20C2  3484               	retlw	132
  3763  20C3  3402               	retlw	2
  3764  20C4  3409               	retlw	9
  3765  20C5  3404               	retlw	4
  3766  20C6  3409               	retlw	9
  3767  20C7  3406               	retlw	6
  3768  20C8  340C               	retlw	12
  3769  20C9  3408               	retlw	8
  3770  20CA  34C1               	retlw	193
  3771  20CB  340A               	retlw	10
  3772  20CC  3477               	retlw	119
  3773  20CD  340C               	retlw	12
  3774  20CE  3464               	retlw	100
  3775  20CF  340E               	retlw	14
  3776  20D0  3432               	retlw	50
  3777  20D1  3410               	retlw	16
  3778  20D2  3400               	retlw	0
  3779  20D3  3412               	retlw	18
  3780  20D4  3400               	retlw	0
  3781  20D5  3414               	retlw	20
  3782  20D6  3400               	retlw	0
  3783  20D7  3416               	retlw	22
  3784  20D8  3438               	retlw	56
  3785  20D9  3418               	retlw	24
  3786  20DA  34C8               	retlw	200
  3787  20DB  341A               	retlw	26
  3788  20DC  340D               	retlw	13
  3789  20DD  341C               	retlw	28
  3790  20DE  3400               	retlw	0
  3791  20DF  341E               	retlw	30
  3792  20E0  3472               	retlw	114
  3793  20E1  3420               	retlw	32
  3794  20E2  3438               	retlw	56
  3795  20E3  3422               	retlw	34
  3796  20E4  3438               	retlw	56
  3797  20E5  3424               	retlw	36
  3798  20E6  3407               	retlw	7
  3799  20E7  3426               	retlw	38
  3800  20E8  3400               	retlw	0
  3801  20E9  3428               	retlw	40
  3802  20EA  3400               	retlw	0
  3803  20EB  342A               	retlw	42
  3804  20EC  3469               	retlw	105
  3805  20ED  342C               	retlw	44
  3806  20EE  3481               	retlw	129
  3807  20EF  342E               	retlw	46
  3808  20F0  347E               	retlw	126
  3809  20F1  3430               	retlw	48
  3810  20F2  3496               	retlw	150
  3811  20F3  3432               	retlw	50
  3812  20F4  34F8               	retlw	248
  3813  20F5  3434               	retlw	52
  3814  20F6  3488               	retlw	136
  3815  20F7  3436               	retlw	54
  3816  20F8  3440               	retlw	64
  3817  20F9  3438               	retlw	56
  3818  20FA  3400               	retlw	0
  3819  20FB  343A               	retlw	58
  3820  20FC  34E8               	retlw	232
  3821  20FD  343C               	retlw	60
  3822  20FE  3400               	retlw	0
  3823  20FF  343E               	retlw	62
  3824  2100                     __end_of_InitConfigRegs:	
  3825  2100                     _PVALUE:	
  3826  2100  3454               	retlw	84
  3827  2101  3454               	retlw	84
  3828  2102  3454               	retlw	84
  3829  2103  3454               	retlw	84
  3830  2104  3454               	retlw	84
  3831  2105  3454               	retlw	84
  3832  2106  3454               	retlw	84
  3833  2107  3454               	retlw	84
  3834  2108  3454               	retlw	84
  3835  2109  3454               	retlw	84
  3836  210A  3454               	retlw	84
  3837  210B  3454               	retlw	84
  3838  210C  3454               	retlw	84
  3839  210D  3454               	retlw	84
  3840  210E  3455               	retlw	85
  3841  210F  3455               	retlw	85
  3842  2110  3455               	retlw	85
  3843  2111  3455               	retlw	85
  3844  2112  3455               	retlw	85
  3845  2113  3455               	retlw	85
  3846  2114  3455               	retlw	85
  3847  2115  3455               	retlw	85
  3848  2116  3455               	retlw	85
  3849  2117  3455               	retlw	85
  3850  2118  3455               	retlw	85
  3851  2119  3455               	retlw	85
  3852  211A  3455               	retlw	85
  3853  211B  3455               	retlw	85
  3854  211C  3455               	retlw	85
  3855  211D  3455               	retlw	85
  3856  211E  3455               	retlw	85
  3857  211F  3455               	retlw	85
  3858  2120                     __end_of_PVALUE:	
  3859  2120                     _SVALUE:	
  3860  2120  342D               	retlw	45
  3861  2121  3430               	retlw	48
  3862  2122  3433               	retlw	51
  3863  2123  3435               	retlw	53
  3864  2124  3438               	retlw	56
  3865  2125  343B               	retlw	59
  3866  2126  343E               	retlw	62
  3867  2127  3441               	retlw	65
  3868  2128  3443               	retlw	67
  3869  2129  3446               	retlw	70
  3870  212A  3449               	retlw	73
  3871  212B  344C               	retlw	76
  3872  212C  344F               	retlw	79
  3873  212D  3451               	retlw	81
  3874  212E  3409               	retlw	9
  3875  212F  340C               	retlw	12
  3876  2130  340F               	retlw	15
  3877  2131  3412               	retlw	18
  3878  2132  3415               	retlw	21
  3879  2133  3417               	retlw	23
  3880  2134  341A               	retlw	26
  3881  2135  341D               	retlw	29
  3882  2136  3420               	retlw	32
  3883  2137  3423               	retlw	35
  3884  2138  3425               	retlw	37
  3885  2139  3428               	retlw	40
  3886  213A  342B               	retlw	43
  3887  213B  342E               	retlw	46
  3888  213C  3431               	retlw	49
  3889  213D  3433               	retlw	51
  3890  213E  3436               	retlw	54
  3891  213F  3439               	retlw	57
  3892  2140                     __end_of_SVALUE:	
  3893  2140                     _octpowers:	
  3894  2140  3401               	retlw	1
  3895  2141  3400               	retlw	0
  3896  2142  3408               	retlw	8
  3897  2143  3400               	retlw	0
  3898  2144  3440               	retlw	64
  3899  2145  3400               	retlw	0
  3900  2146  3400               	retlw	0
  3901  2147  3402               	retlw	2
  3902  2148  3400               	retlw	0
  3903  2149  3410               	retlw	16
  3904  214A  3400               	retlw	0
  3905  214B  3480               	retlw	128
  3906  214C                     __end_of_octpowers:	
  3907  214C                     _dpowers:	
  3908  214C  3401               	retlw	1
  3909  214D  3400               	retlw	0
  3910  214E  340A               	retlw	10
  3911  214F  3400               	retlw	0
  3912  2150  3464               	retlw	100
  3913  2151  3400               	retlw	0
  3914  2152  34E8               	retlw	232
  3915  2153  3403               	retlw	3
  3916  2154  3410               	retlw	16
  3917  2155  3427               	retlw	39
  3918  2156                     __end_of_dpowers:	
  3919  2156                     _hexpowers:	
  3920  2156  3401               	retlw	1
  3921  2157  3400               	retlw	0
  3922  2158  3410               	retlw	16
  3923  2159  3400               	retlw	0
  3924  215A  3400               	retlw	0
  3925  215B  3401               	retlw	1
  3926  215C  3400               	retlw	0
  3927  215D  3410               	retlw	16
  3928  215E                     __end_of_hexpowers:	
  3929  000B                     _INTCONbits	set	11
  3930  0011                     _PIR1bits	set	17
  3931  000C                     _PORTAbits	set	12
  3932  000D                     _PORTBbits	set	13
  3933  0018                     _T1CON	set	24
  3934  0018                     _T1CONbits	set	24
  3935  0017                     _TMR1H	set	23
  3936  0016                     _TMR1L	set	22
  3937  0099                     _OSCCON	set	153
  3938  0091                     _PIE1bits	set	145
  3939  008C                     _TRISA	set	140
  3940  008C                     _TRISAbits	set	140
  3941  008D                     _TRISB	set	141
  3942  008D                     _TRISBbits	set	141
  3943  008E                     _TRISC	set	142
  3944  008E                     _TRISCbits	set	142
  3945  008F                     _TRISD	set	143
  3946  008F                     _TRISDbits	set	143
  3947  0090                     _TRISEbits	set	144
  3948  010C                     _LATA	set	268
  3949  010C                     _LATAbits	set	268
  3950  010D                     _LATB	set	269
  3951  010E                     _LATC	set	270
  3952  010E                     _LATCbits	set	270
  3953  010F                     _LATD	set	271
  3954  010F                     _LATDbits	set	271
  3955  0110                     _LATEbits	set	272
  3956  018C                     _ANSELA	set	396
  3957  0211                     _SSP1BUF	set	529
  3958  0215                     _SSP1CON1	set	533
  3959  0215                     _SSP1CON1bits	set	533
  3960  0214                     _SSP1STAT	set	532
  3961  030C                     _TRISFbits	set	780
  3962  0396                     _IOCBFbits	set	918
  3963  0395                     _IOCBNbits	set	917
  3964  038C                     _LATFbits	set	908
  3965  215E                     STR_2:	
  3966  215E  3443               	retlw	67	;'C'
  3967  215F  346F               	retlw	111	;'o'
  3968  2160  346E               	retlw	110	;'n'
  3969  2161  346E               	retlw	110	;'n'
  3970  2162  3465               	retlw	101	;'e'
  3971  2163  3463               	retlw	99	;'c'
  3972  2164  3474               	retlw	116	;'t'
  3973  2165  3469               	retlw	105	;'i'
  3974  2166  346E               	retlw	110	;'n'
  3975  2167  3467               	retlw	103	;'g'
  3976  2168  3420               	retlw	32	;' '
  3977  2169  3450               	retlw	80	;'P'
  3978  216A  3465               	retlw	101	;'e'
  3979  216B  3465               	retlw	101	;'e'
  3980  216C  3472               	retlw	114	;'r'
  3981  216D  3420               	retlw	32	;' '
  3982  216E  3420               	retlw	32	;' '
  3983  216F  346F               	retlw	111	;'o'
  3984  2170  346E               	retlw	110	;'n'
  3985  2171  3420               	retlw	32	;' '
  3986  2172  3443               	retlw	67	;'C'
  3987  2173  3468               	retlw	104	;'h'
  3988  2174  3461               	retlw	97	;'a'
  3989  2175  346E               	retlw	110	;'n'
  3990  2176  346E               	retlw	110	;'n'
  3991  2177  3465               	retlw	101	;'e'
  3992  2178  346C               	retlw	108	;'l'
  3993  2179  3420               	retlw	32	;' '
  3994  217A  3425               	retlw	37	;'%'
  3995  217B  3464               	retlw	100	;'d'
  3996  217C  3420               	retlw	32	;' '
  3997  217D  3400               	retlw	0
  3998  217E                     STR_3:	
  3999  217E  3420               	retlw	32	;' '
  4000  217F  3443               	retlw	67	;'C'
  4001  2180  346F               	retlw	111	;'o'
  4002  2181  346E               	retlw	110	;'n'
  4003  2182  346E               	retlw	110	;'n'
  4004  2183  3465               	retlw	101	;'e'
  4005  2184  3463               	retlw	99	;'c'
  4006  2185  3474               	retlw	116	;'t'
  4007  2186  3465               	retlw	101	;'e'
  4008  2187  3464               	retlw	100	;'d'
  4009  2188  3420               	retlw	32	;' '
  4010  2189  3450               	retlw	80	;'P'
  4011  218A  3465               	retlw	101	;'e'
  4012  218B  3465               	retlw	101	;'e'
  4013  218C  3472               	retlw	114	;'r'
  4014  218D  3420               	retlw	32	;' '
  4015  218E  3420               	retlw	32	;' '
  4016  218F  346F               	retlw	111	;'o'
  4017  2190  346E               	retlw	110	;'n'
  4018  2191  3420               	retlw	32	;' '
  4019  2192  3443               	retlw	67	;'C'
  4020  2193  3468               	retlw	104	;'h'
  4021  2194  3461               	retlw	97	;'a'
  4022  2195  346E               	retlw	110	;'n'
  4023  2196  346E               	retlw	110	;'n'
  4024  2197  3465               	retlw	101	;'e'
  4025  2198  346C               	retlw	108	;'l'
  4026  2199  3420               	retlw	32	;' '
  4027  219A  3425               	retlw	37	;'%'
  4028  219B  3464               	retlw	100	;'d'
  4029  219C  3400               	retlw	0
  4030  219D                     STR_1:	
  4031  219D  3453               	retlw	83	;'S'
  4032  219E  3469               	retlw	105	;'i'
  4033  219F  346D               	retlw	109	;'m'
  4034  21A0  3470               	retlw	112	;'p'
  4035  21A1  346C               	retlw	108	;'l'
  4036  21A2  3465               	retlw	101	;'e'
  4037  21A3  3420               	retlw	32	;' '
  4038  21A4  3453               	retlw	83	;'S'
  4039  21A5  3454               	retlw	84	;'T'
  4040  21A6  3441               	retlw	65	;'A'
  4041  21A7  3452               	retlw	82	;'R'
  4042  21A8  3420               	retlw	32	;' '
  4043  21A9  3420               	retlw	32	;' '
  4044  21AA  3420               	retlw	32	;' '
  4045  21AB  3420               	retlw	32	;' '
  4046  21AC  3420               	retlw	32	;' '
  4047  21AD  344D               	retlw	77	;'M'
  4048  21AE  3452               	retlw	82	;'R'
  4049  21AF  3446               	retlw	70	;'F'
  4050  21B0  3438               	retlw	56	;'8'
  4051  21B1  3439               	retlw	57	;'9'
  4052  21B2  3458               	retlw	88	;'X'
  4053  21B3  3441               	retlw	65	;'A'
  4054  21B4  3420               	retlw	32	;' '
  4055  21B5  344E               	retlw	78	;'N'
  4056  21B6  346F               	retlw	111	;'o'
  4057  21B7  3464               	retlw	100	;'d'
  4058  21B8  3465               	retlw	101	;'e'
  4059  21B9  3400               	retlw	0
  4060  21BA                     STR_7:	
  4061  21BA  3452               	retlw	82	;'R'
  4062  21BB  3442               	retlw	66	;'B'
  4063  21BC  3430               	retlw	48	;'0'
  4064  21BD  343A               	retlw	58	;':'
  4065  21BE  3425               	retlw	37	;'%'
  4066  21BF  3430               	retlw	48	;'0'
  4067  21C0  3432               	retlw	50	;'2'
  4068  21C1  3464               	retlw	100	;'d'
  4069  21C2  342D               	retlw	45	;'-'
  4070  21C3  3425               	retlw	37	;'%'
  4071  21C4  3430               	retlw	48	;'0'
  4072  21C5  3432               	retlw	50	;'2'
  4073  21C6  3478               	retlw	120	;'x'
  4074  21C7  3425               	retlw	37	;'%'
  4075  21C8  3430               	retlw	48	;'0'
  4076  21C9  3432               	retlw	50	;'2'
  4077  21CA  3478               	retlw	120	;'x'
  4078  21CB  3425               	retlw	37	;'%'
  4079  21CC  3430               	retlw	48	;'0'
  4080  21CD  3432               	retlw	50	;'2'
  4081  21CE  3478               	retlw	120	;'x'
  4082  21CF  342D               	retlw	45	;'-'
  4083  21D0  346D               	retlw	109	;'m'
  4084  21D1  3465               	retlw	101	;'e'
  4085  21D2  3400               	retlw	0
  4086  21D3                     STR_8:	
  4087  21D3  3452               	retlw	82	;'R'
  4088  21D4  3442               	retlw	66	;'B'
  4089  21D5  3430               	retlw	48	;'0'
  4090  21D6  343A               	retlw	58	;':'
  4091  21D7  3425               	retlw	37	;'%'
  4092  21D8  3430               	retlw	48	;'0'
  4093  21D9  3432               	retlw	50	;'2'
  4094  21DA  3464               	retlw	100	;'d'
  4095  21DB  342D               	retlw	45	;'-'
  4096  21DC  3425               	retlw	37	;'%'
  4097  21DD  3430               	retlw	48	;'0'
  4098  21DE  3432               	retlw	50	;'2'
  4099  21DF  3478               	retlw	120	;'x'
  4100  21E0  3425               	retlw	37	;'%'
  4101  21E1  3430               	retlw	48	;'0'
  4102  21E2  3432               	retlw	50	;'2'
  4103  21E3  3478               	retlw	120	;'x'
  4104  21E4  3425               	retlw	37	;'%'
  4105  21E5  3430               	retlw	48	;'0'
  4106  21E6  3432               	retlw	50	;'2'
  4107  21E7  3478               	retlw	120	;'x'
  4108  21E8  3400               	retlw	0
  4109  21E9                     STR_6:	
  4110  21E9  3420               	retlw	32	;' '
  4111  21EA  3441               	retlw	65	;'A'
  4112  21EB  3464               	retlw	100	;'d'
  4113  21EC  3464               	retlw	100	;'d'
  4114  21ED  3472               	retlw	114	;'r'
  4115  21EE  3465               	retlw	101	;'e'
  4116  21EF  3473               	retlw	115	;'s'
  4117  21F0  3473               	retlw	115	;'s'
  4118  21F1  343A               	retlw	58	;':'
  4119  21F2  3425               	retlw	37	;'%'
  4120  21F3  3430               	retlw	48	;'0'
  4121  21F4  3432               	retlw	50	;'2'
  4122  21F5  3478               	retlw	120	;'x'
  4123  21F6  3425               	retlw	37	;'%'
  4124  21F7  3430               	retlw	48	;'0'
  4125  21F8  3432               	retlw	50	;'2'
  4126  21F9  3478               	retlw	120	;'x'
  4127  21FA  3425               	retlw	37	;'%'
  4128  21FB  3430               	retlw	48	;'0'
  4129  21FC  3432               	retlw	50	;'2'
  4130  21FD  3478               	retlw	120	;'x'
  4131  21FE  3400               	retlw	0
  4132  21FF                     STR_13:	
  4133  21FF  3452               	retlw	82	;'R'
  4134  2200  3465               	retlw	101	;'e'
  4135  2201  3473               	retlw	115	;'s'
  4136  2202  3474               	retlw	116	;'t'
  4137  2203  346F               	retlw	111	;'o'
  4138  2204  3472               	retlw	114	;'r'
  4139  2205  3469               	retlw	105	;'i'
  4140  2206  346E               	retlw	110	;'n'
  4141  2207  3467               	retlw	103	;'g'
  4142  2208  3420               	retlw	32	;' '
  4143  2209  344E               	retlw	78	;'N'
  4144  220A  3465               	retlw	101	;'e'
  4145  220B  3474               	retlw	116	;'t'
  4146  220C  3477               	retlw	119	;'w'
  4147  220D  346F               	retlw	111	;'o'
  4148  220E  3472               	retlw	114	;'r'
  4149  220F  346B               	retlw	107	;'k'
  4150  2210  3420               	retlw	32	;' '
  4151  2211  3421               	retlw	33	;'!'
  4152  2212  3421               	retlw	33	;'!'
  4153  2213  3400               	retlw	0
  4154  2214                     STR_11:	
  4155  2214  3444               	retlw	68	;'D'
  4156  2215  3461               	retlw	97	;'a'
  4157  2216  3474               	retlw	116	;'t'
  4158  2217  3461               	retlw	97	;'a'
  4159  2218  345F               	retlw	95	;'_'
  4160  2219  3453               	retlw	83	;'S'
  4161  221A  3465               	retlw	101	;'e'
  4162  221B  346E               	retlw	110	;'n'
  4163  221C  3464               	retlw	100	;'d'
  4164  221D  3469               	retlw	105	;'i'
  4165  221E  346E               	retlw	110	;'n'
  4166  221F  3467               	retlw	103	;'g'
  4167  2220  345F               	retlw	95	;'_'
  4168  2221  3446               	retlw	70	;'F'
  4169  2222  3461               	retlw	97	;'a'
  4170  2223  3469               	retlw	105	;'i'
  4171  2224  346C               	retlw	108	;'l'
  4172  2225  3421               	retlw	33	;'!'
  4173  2226  3421               	retlw	33	;'!'
  4174  2227  3400               	retlw	0
  4175  2228                     STR_12:	
  4176  2228  3445               	retlw	69	;'E'
  4177  2229  344E               	retlw	78	;'N'
  4178  222A  3444               	retlw	68	;'D'
  4179  222B  345F               	retlw	95	;'_'
  4180  222C  3444               	retlw	68	;'D'
  4181  222D  3445               	retlw	69	;'E'
  4182  222E  3456               	retlw	86	;'V'
  4183  222F  3449               	retlw	73	;'I'
  4184  2230  3443               	retlw	67	;'C'
  4185  2231  3445               	retlw	69	;'E'
  4186  2232  3453               	retlw	83	;'S'
  4187  2233  3420               	retlw	32	;' '
  4188  2234  343A               	retlw	58	;':'
  4189  2235  3425               	retlw	37	;'%'
  4190  2236  3430               	retlw	48	;'0'
  4191  2237  3432               	retlw	50	;'2'
  4192  2238  3464               	retlw	100	;'d'
  4193  2239  3400               	retlw	0
  4194  223A                     STR_16:	
  4195  223A  3430               	retlw	48	;'0'
  4196  223B  3431               	retlw	49	;'1'
  4197  223C  3432               	retlw	50	;'2'
  4198  223D  3433               	retlw	51	;'3'
  4199  223E  3434               	retlw	52	;'4'
  4200  223F  3435               	retlw	53	;'5'
  4201  2240  3436               	retlw	54	;'6'
  4202  2241  3437               	retlw	55	;'7'
  4203  2242  3438               	retlw	56	;'8'
  4204  2243  3439               	retlw	57	;'9'
  4205  2244  3441               	retlw	65	;'A'
  4206  2245  3442               	retlw	66	;'B'
  4207  2246  3443               	retlw	67	;'C'
  4208  2247  3444               	retlw	68	;'D'
  4209  2248  3445               	retlw	69	;'E'
  4210  2249  3446               	retlw	70	;'F'
  4211  224A  3400               	retlw	0
  4212  224B                     STR_17:	
  4213  224B  3430               	retlw	48	;'0'
  4214  224C  3431               	retlw	49	;'1'
  4215  224D  3432               	retlw	50	;'2'
  4216  224E  3433               	retlw	51	;'3'
  4217  224F  3434               	retlw	52	;'4'
  4218  2250  3435               	retlw	53	;'5'
  4219  2251  3436               	retlw	54	;'6'
  4220  2252  3437               	retlw	55	;'7'
  4221  2253  3438               	retlw	56	;'8'
  4222  2254  3439               	retlw	57	;'9'
  4223  2255  3461               	retlw	97	;'a'
  4224  2256  3462               	retlw	98	;'b'
  4225  2257  3463               	retlw	99	;'c'
  4226  2258  3464               	retlw	100	;'d'
  4227  2259  3465               	retlw	101	;'e'
  4228  225A  3466               	retlw	102	;'f'
  4229  225B  3400               	retlw	0
  4230  225C                     STR_15:	
  4231  225C  3452               	retlw	82	;'R'
  4232  225D  3458               	retlw	88	;'X'
  4233  225E  3420               	retlw	32	;' '
  4234  225F  344D               	retlw	77	;'M'
  4235  2260  3465               	retlw	101	;'e'
  4236  2261  3473               	retlw	115	;'s'
  4237  2262  3473               	retlw	115	;'s'
  4238  2263  3461               	retlw	97	;'a'
  4239  2264  3467               	retlw	103	;'g'
  4240  2265  3465               	retlw	101	;'e'
  4241  2266  3473               	retlw	115	;'s'
  4242  2267  343A               	retlw	58	;':'
  4243  2268  3420               	retlw	32	;' '
  4244  2269  3425               	retlw	37	;'%'
  4245  226A  3433               	retlw	51	;'3'
  4246  226B  3464               	retlw	100	;'d'
  4247  226C  3400               	retlw	0
  4248  226D                     STR_14:	
  4249  226D  3454               	retlw	84	;'T'
  4250  226E  3458               	retlw	88	;'X'
  4251  226F  3420               	retlw	32	;' '
  4252  2270  344D               	retlw	77	;'M'
  4253  2271  3465               	retlw	101	;'e'
  4254  2272  3473               	retlw	115	;'s'
  4255  2273  3473               	retlw	115	;'s'
  4256  2274  3461               	retlw	97	;'a'
  4257  2275  3467               	retlw	103	;'g'
  4258  2276  3465               	retlw	101	;'e'
  4259  2277  3473               	retlw	115	;'s'
  4260  2278  343A               	retlw	58	;':'
  4261  2279  3420               	retlw	32	;' '
  4262  227A  3425               	retlw	37	;'%'
  4263  227B  3433               	retlw	51	;'3'
  4264  227C  3464               	retlw	100	;'d'
  4265  227D  3400               	retlw	0
  4266  227E                     STR_10:	
  4267  227E  3452               	retlw	82	;'R'
  4268  227F  3442               	retlw	66	;'B'
  4269  2280  3432               	retlw	50	;'2'
  4270  2281  343A               	retlw	58	;':'
  4271  2282  3420               	retlw	32	;' '
  4272  2283  3443               	retlw	67	;'C'
  4273  2284  3468               	retlw	104	;'h'
  4274  2285  3461               	retlw	97	;'a'
  4275  2286  346E               	retlw	110	;'n'
  4276  2287  3467               	retlw	103	;'g'
  4277  2288  3465               	retlw	101	;'e'
  4278  2289  3420               	retlw	32	;' '
  4279  228A  346E               	retlw	110	;'n'
  4280  228B  346F               	retlw	111	;'o'
  4281  228C  3464               	retlw	100	;'d'
  4282  228D  3465               	retlw	101	;'e'
  4283  228E  3400               	retlw	0
  4284  228F                     STR_5:	
  4285  228F  3444               	retlw	68	;'D'
  4286  2290  3461               	retlw	97	;'a'
  4287  2291  3474               	retlw	116	;'t'
  4288  2292  3461               	retlw	97	;'a'
  4289  2293  3420               	retlw	32	;' '
  4290  2294  3450               	retlw	80	;'P'
  4291  2295  3461               	retlw	97	;'a'
  4292  2296  3463               	retlw	99	;'c'
  4293  2297  346B               	retlw	107	;'k'
  4294  2298  3465               	retlw	101	;'e'
  4295  2299  3474               	retlw	116	;'t'
  4296  229A  3420               	retlw	32	;' '
  4297  229B  3466               	retlw	102	;'f'
  4298  229C  3472               	retlw	114	;'r'
  4299  229D  346F               	retlw	111	;'o'
  4300  229E  346D               	retlw	109	;'m'
  4301  229F  3400               	retlw	0
  4302  22A0                     STR_4:	
  4303  22A0  3420               	retlw	32	;' '
  4304  22A1  3455               	retlw	85	;'U'
  4305  22A2  346E               	retlw	110	;'n'
  4306  22A3  3469               	retlw	105	;'i'
  4307  22A4  3463               	retlw	99	;'c'
  4308  22A5  3461               	retlw	97	;'a'
  4309  22A6  3473               	retlw	115	;'s'
  4310  22A7  3474               	retlw	116	;'t'
  4311  22A8  3420               	retlw	32	;' '
  4312  22A9  3446               	retlw	70	;'F'
  4313  22AA  3461               	retlw	97	;'a'
  4314  22AB  3469               	retlw	105	;'i'
  4315  22AC  346C               	retlw	108	;'l'
  4316  22AD  3465               	retlw	101	;'e'
  4317  22AE  3464               	retlw	100	;'d'
  4318  22AF  3400               	retlw	0
  4319  21D3                     
  4320                           ; #config settings
  4321  0000                     
  4322                           	psect	cinit
  4323  039A                     start_initialization:	
  4324  039A                     __initialization:		;BIGRAM
  4325                           
  4326                           ; Initialize objects allocated to BANK0
  4327  039A  31B4  24F7  3183   	fcall	__pidataBANK0	;fetch initializer
  4328  039D  00ED               	movwf	__pdataBANK0& (0+127)
  4329  039E  31B4  24F8  3183   	fcall	__pidataBANK0+1	;fetch initializer
  4330  03A1  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  4331  03A2  31B4  24F9  3183   	fcall	__pidataBANK0+2	;fetch initializer
  4332  03A5  00EF               	movwf	(__pdataBANK0+2)& (0+127)
  4333                           
  4334                           ; Initialize objects allocated to BANK3
  4335  03A6  300A               	movlw	low __pidataBANK3
  4336  03A7  0084               	movwf	4
  4337  03A8  30B5               	movlw	(high __pidataBANK3)| (0+128)
  4338  03A9  0085               	movwf	5
  4339  03AA  0023               	movlb	3	; select bank3
  4340  03AB  0012               	moviw fsr0++
  4341  03AC  00E7               	movwf	__pdataBANK3& (0+127)
  4342  03AD  0012               	moviw fsr0++
  4343  03AE  00E8               	movwf	(__pdataBANK3+1)& (0+127)
  4344  03AF  0012               	moviw fsr0++
  4345  03B0  00E9               	movwf	(__pdataBANK3+2)& (0+127)
  4346  03B1  0012               	moviw fsr0++
  4347  03B2  00EA               	movwf	(__pdataBANK3+3)& (0+127)
  4348  03B3  0012               	moviw fsr0++
  4349  03B4  00EB               	movwf	(__pdataBANK3+4)& (0+127)
  4350  03B5  0012               	moviw fsr0++
  4351  03B6  00EC               	movwf	(__pdataBANK3+5)& (0+127)
  4352  03B7  0012               	moviw fsr0++
  4353  03B8  00ED               	movwf	(__pdataBANK3+6)& (0+127)
  4354  03B9  0012               	moviw fsr0++
  4355  03BA  00EE               	movwf	(__pdataBANK3+7)& (0+127)
  4356                           
  4357                           ; Clear objects allocated to BIGRAM
  4358  03BB  30F2               	movlw	low (0+8946)
  4359  03BC  0084               	movwf	4
  4360  03BD  3022               	movlw	high (0+8946)
  4361  03BE  0085               	movwf	5
  4362  03BF  30FE               	movlw	254
  4363  03C0  00FE               	movwf	btemp
  4364  03C1  3000               	movlw	0
  4365  03C2  00FF               	movwf	btemp+1
  4366  03C3  31A2  22B1  3183   	fcall	clear_ram0
  4367                           
  4368                           ; Clear objects allocated to COMMON
  4369  03C6  01FD               	clrf	__pbssCOMMON& (0+127)
  4370                           
  4371                           ; Clear objects allocated to BANK0
  4372  03C7  3058               	movlw	low __pbssBANK0
  4373  03C8  0084               	movwf	4
  4374  03C9  3000               	movlw	high __pbssBANK0
  4375  03CA  0085               	movwf	5
  4376  03CB  3015               	movlw	21
  4377  03CC  00FE               	movwf	btemp
  4378  03CD  3000               	movlw	0
  4379  03CE  00FF               	movwf	btemp+1
  4380  03CF  31A2  22B1  3183   	fcall	clear_ram0
  4381                           
  4382                           ; Clear objects allocated to BANK2
  4383  03D2  0022               	movlb	2	; select bank2
  4384  03D3  01EE               	clrf	__pbssBANK2& (0+127)
  4385  03D4  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  4386                           
  4387                           ; Clear objects allocated to BANK3
  4388  03D5  30A0               	movlw	low __pbssBANK3
  4389  03D6  0084               	movwf	4
  4390  03D7  3001               	movlw	high __pbssBANK3
  4391  03D8  0085               	movwf	5
  4392  03D9  3047               	movlw	71
  4393  03DA  00FE               	movwf	btemp
  4394  03DB  3000               	movlw	0
  4395  03DC  00FF               	movwf	btemp+1
  4396  03DD  31A2  22B1  3183   	fcall	clear_ram0
  4397                           
  4398                           ; Clear objects allocated to BANK4
  4399  03E0  3020               	movlw	low __pbssBANK4
  4400  03E1  0084               	movwf	4
  4401  03E2  3002               	movlw	high __pbssBANK4
  4402  03E3  0085               	movwf	5
  4403  03E4  3037               	movlw	55
  4404  03E5  00FE               	movwf	btemp
  4405  03E6  3000               	movlw	0
  4406  03E7  00FF               	movwf	btemp+1
  4407  03E8  31A2  22B1  3183   	fcall	clear_ram0
  4408                           
  4409                           ; Clear objects allocated to BANK5
  4410  03EB  30A0               	movlw	low __pbssBANK5
  4411  03EC  0084               	movwf	4
  4412  03ED  3002               	movlw	high __pbssBANK5
  4413  03EE  0085               	movwf	5
  4414  03EF  3049               	movlw	73
  4415  03F0  00FE               	movwf	btemp
  4416  03F1  3000               	movlw	0
  4417  03F2  00FF               	movwf	btemp+1
  4418  03F3  31A2  22B1  3183   	fcall	clear_ram0
  4419                           
  4420                           ; Clear objects allocated to BANK6
  4421  03F6  3020               	movlw	low __pbssBANK6
  4422  03F7  0084               	movwf	4
  4423  03F8  3003               	movlw	high __pbssBANK6
  4424  03F9  0085               	movwf	5
  4425  03FA  3037               	movlw	55
  4426  03FB  00FE               	movwf	btemp
  4427  03FC  3000               	movlw	0
  4428  03FD  00FF               	movwf	btemp+1
  4429  03FE  31A2  22B1  3183   	fcall	clear_ram0
  4430                           
  4431                           ; Clear objects allocated to BANK7
  4432  0401  30A0               	movlw	low __pbssBANK7
  4433  0402  0084               	movwf	4
  4434  0403  3003               	movlw	high __pbssBANK7
  4435  0404  0085               	movwf	5
  4436  0405  301E               	movlw	30
  4437  0406  00FE               	movwf	btemp
  4438  0407  3000               	movlw	0
  4439  0408  00FF               	movwf	btemp+1
  4440  0409  31A2  22B1         	fcall	clear_ram0
  4441  040B                     end_of_initialization:	
  4442                           ;End of C runtime variable initialization code
  4443                           
  4444  040B                     __end_of__initialization:	
  4445  040B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4446  040C  0020               	movlb	0
  4447  040D  31B6  2E1D         	ljmp	_main	;jump to C main() function
  4448                           
  4449                           	psect	bssCOMMON
  4450  007D                     __pbssCOMMON:	
  4451  007D                     _P2PStatus:	
  4452  007D                     	ds	1
  4453                           
  4454                           	psect	bssBANK0
  4455  0058                     __pbssBANK0:	
  4456  0058                     _MACInitParams:	
  4457  0058                     	ds	2
  4458  005A                     _IRQ1_Received:	
  4459  005A                     	ds	1
  4460  005B                     _LatestConnection:	
  4461  005B                     	ds	1
  4462  005C                     _P2PCapacityInfo:	
  4463  005C                     	ds	1
  4464  005D                     _PUSH_BUTTON_pressed:	
  4465  005D                     	ds	1
  4466  005E                     _ReceivedBankIndex:	
  4467  005E                     	ds	1
  4468  005F                     _RxNum:	
  4469  005F                     	ds	1
  4470  0060                     _TxNum:	
  4471  0060                     	ds	1
  4472  0061                     _TxSynCount:	
  4473  0061                     	ds	1
  4474  0062                     _end_nodes:	
  4475  0062                     	ds	1
  4476  0063                     _hasAck:	
  4477  0063                     	ds	1
  4478  0064                     _i:	
  4479  0064                     	ds	1
  4480  0065                     _rec_ack:	
  4481  0065                     	ds	1
  4482  0066                     _timerExtension1:	
  4483  0066                     	ds	1
  4484  0067                     _timerExtension2:	
  4485  0067                     	ds	1
  4486  0068                     _nvmConnectionTable:	
  4487  0068                     	ds	2
  4488  006A                     _conn_size:	
  4489  006A                     	ds	1
  4490  006B                     _currentChannel:	
  4491  006B                     	ds	1
  4492  006C                     _myConnectionIndex_in_PanCo:	
  4493  006C                     	ds	1
  4494                           
  4495                           	psect	dataBANK0
  4496  006D                     __pdataBANK0:	
  4497  006D                     _AdditionalNodeID:	
  4498  006D                     	ds	1
  4499  006E                     _myChannel:	
  4500  006E                     	ds	1
  4501  006F                     _ConnMode:	
  4502  006F                     	ds	1
  4503                           
  4504                           	psect	bssBANK2
  4505  016E                     __pbssBANK2:	
  4506  016E                     _TxData:	
  4507  016E                     	ds	1
  4508  016F                     _role:	
  4509  016F                     	ds	1
  4510                           
  4511                           	psect	bssBANK3
  4512  01A0                     __pbssBANK3:	
  4513  01A0                     _rxMessage:	
  4514  01A0                     	ds	10
  4515  01AA                     _MACRxPacket:	
  4516  01AA                     	ds	8
  4517  01B2                     _PUSH_BUTTON_press_time:	
  4518  01B2                     	ds	4
  4519  01B6                     _nvmDelayTick:	
  4520  01B6                     	ds	4
  4521  01BA                     _t1:	
  4522  01BA                     	ds	4
  4523  01BE                     _t2:	
  4524  01BE                     	ds	4
  4525  01C2                     _tick1:	
  4526  01C2                     	ds	4
  4527  01C6                     _tick4:	
  4528  01C6                     	ds	4
  4529  01CA                     _nextEEPosition:	
  4530  01CA                     	ds	2
  4531  01CC                     _MACSeq:	
  4532  01CC                     	ds	1
  4533  01CD                     _MyindexinPC:	
  4534  01CD                     	ds	1
  4535  01CE                     _NumOfActiveScanResponse:	
  4536  01CE                     	ds	1
  4537  01CF                     _RF_Mode:	
  4538  01CF                     	ds	1
  4539  01D0                     _RSSILock:	
  4540  01D0                     	ds	1
  4541  01D1                     _RSSIVal:	
  4542  01D1                     	ds	1
  4543  01D2                     _TxMACSeq:	
  4544  01D2                     	ds	1
  4545  01D3                     _TxSynCount2:	
  4546  01D3                     	ds	1
  4547  01D4                     _chk_sel_status:	
  4548  01D4                     	ds	1
  4549  01D5                     _display_connections:	
  4550  01D5                     	ds	1
  4551  01D6                     _fix_me:	
  4552  01D6                     	ds	1
  4553  01D7                     _lost_connection:	
  4554  01D7                     	ds	1
  4555  01D8                     _temp_bit:	
  4556  01D8                     	ds	1
  4557  01D9                     _nvmConnMode:	
  4558  01D9                     	ds	2
  4559  01DB                     _nvmCurrentChannel:	
  4560  01DB                     	ds	2
  4561  01DD                     _nvmEdc:	
  4562  01DD                     	ds	2
  4563  01DF                     _nvmMyPANID:	
  4564  01DF                     	ds	2
  4565  01E1                     _nvmOutFrameCounter:	
  4566  01E1                     	ds	2
  4567  01E3                     _nvmRole:	
  4568  01E3                     	ds	2
  4569  01E5                     _nvmmyIndex:	
  4570  01E5                     	ds	2
  4571                           
  4572                           	psect	dataBANK3
  4573  01E7                     __pdataBANK3:	
  4574  01E7                     _myLongAddress:	
  4575  01E7                     	ds	8
  4576                           
  4577                           	psect	bssBANK4
  4578  0220                     __pbssBANK4:	
  4579  0220                     _link_stat:	
  4580  0220                     	ds	10
  4581  022A                     _permanent_connections:	
  4582  022A                     	ds	10
  4583  0234                     _TxBuffer:	
  4584  0234                     	ds	35
  4585                           
  4586                           	psect	bssBANK5
  4587  02A0                     __pbssBANK5:	
  4588  02A0                     _END_DEVICES_Short_Address:	
  4589  02A0                     	ds	40
  4590  02C8                     _LCDText:	
  4591  02C8                     	ds	33
  4592                           
  4593                           	psect	bssBANK6
  4594  0320                     __pbssBANK6:	
  4595  0320                     _MACTxBuffer:	
  4596  0320                     	ds	55
  4597                           
  4598                           	psect	bssBANK7
  4599  03A0                     __pbssBANK7:	
  4600  03A0                     _AckInfo:	
  4601  03A0                     	ds	30
  4602                           
  4603                           	psect	clrtext
  4604  22B1                     clear_ram0:	
  4605                           ;	Called with FSR0 containing the base address, and
  4606                           ;	btemp/btemp+1 has the size to clear
  4607                           
  4608  22B1  0064               	clrwdt	;clear the watchdog before getting into this loop
  4609  22B2                     clrloop0:	
  4610  22B2  0180               	clrf	0	;clear RAM location pointed to by FSR
  4611  22B3  3101               	addfsr 0,1
  4612  22B4  3001               	movlw	1
  4613  22B5  02FE               	subwf	126,f
  4614  22B6  3000               	movlw	0
  4615  22B7  3BFF               	subwfb	127,f
  4616  22B8  087F               	movf	127,w
  4617  22B9  047E               	iorwf	126,w
  4618  22BA  1903               	btfsc	3,2
  4619  22BB  3400               	retlw	0	;all done for this memory range, return
  4620  22BC  2AB2               	goto	clrloop0	;have we reached the end yet?
  4621                           
  4622                           	psect	cstackBANK2
  4623  0120                     __pcstackBANK2:	
  4624  0120                     ??_Find_InActiveDevices:	
  4625  0120                     ?_Forward_Packet_PANCr_to_EDy:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0120                     Forward_Packet_PANCr_to_EDy@fw_payload:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631                           
  4632                           ; 2 bytes @ 0x0
  4633  0120                     	ds	2
  4634  0122                     Forward_Packet_PANCr_to_EDy@index:	
  4635                           
  4636                           ; 1 bytes @ 0x2
  4637  0122                     	ds	1
  4638  0123                     Forward_Packet_PANCr_to_EDy@EDxAddress:	
  4639                           
  4640                           ; 2 bytes @ 0x3
  4641  0123                     	ds	2
  4642  0125                     ??_Forward_Packet_PANCr_to_EDy:	
  4643                           
  4644                           ; 1 bytes @ 0x5
  4645  0125                     	ds	3
  4646  0128                     Forward_Packet_PANCr_to_EDy@status:	
  4647                           
  4648                           ; 1 bytes @ 0x8
  4649  0128                     	ds	1
  4650  0129                     Forward_Packet_PANCr_to_EDy@i:	
  4651                           
  4652                           ; 1 bytes @ 0x9
  4653  0129                     	ds	1
  4654  012A                     ??_P2PTasks:	
  4655                           
  4656                           ; 1 bytes @ 0xA
  4657  012A                     	ds	8
  4658  0132                     P2PTasks@tmpTick:	
  4659                           
  4660                           ; 4 bytes @ 0x12
  4661  0132                     	ds	4
  4662  0136                     P2PTasks@FW_Stat:	
  4663                           
  4664                           ; 1 bytes @ 0x16
  4665  0136                     	ds	1
  4666  0137                     P2PTasks@tick2:	
  4667                           
  4668                           ; 4 bytes @ 0x17
  4669  0137                     	ds	4
  4670  013B                     P2PTasks@final_index:	
  4671                           
  4672                           ; 1 bytes @ 0x1B
  4673  013B                     	ds	1
  4674  013C                     P2PTasks@tick3:	
  4675                           
  4676                           ; 4 bytes @ 0x1C
  4677  013C                     	ds	4
  4678  0140                     P2PTasks@p:	
  4679                           
  4680                           ; 1 bytes @ 0x20
  4681  0140                     	ds	1
  4682  0141                     P2PTasks@p_1091:	
  4683                           
  4684                           ; 1 bytes @ 0x21
  4685  0141                     	ds	1
  4686  0142                     P2PTasks@status:	
  4687                           
  4688                           ; 1 bytes @ 0x22
  4689  0142                     	ds	1
  4690  0143                     P2PTasks@i:	
  4691                           
  4692                           ; 1 bytes @ 0x23
  4693  0143                     	ds	1
  4694  0144                     ??_MiApp_MessageAvailable:	
  4695                           
  4696                           ; 1 bytes @ 0x24
  4697  0144                     	ds	1
  4698  0145                     ??_MiApp_UnicastStar:	
  4699  0145                     ?_MiApp_EstablishConnection:	
  4700                           ; 1 bytes @ 0x25
  4701                           
  4702  0145                     ??_Process_RxMessage:	
  4703                           ; 1 bytes @ 0x25
  4704                           
  4705  0145                     MiApp_EstablishConnection@Mode:	
  4706                           ; 1 bytes @ 0x25
  4707                           
  4708                           
  4709                           ; 1 bytes @ 0x25
  4710  0145                     	ds	1
  4711  0146                     ??_MiApp_EstablishConnection:	
  4712                           
  4713                           ; 1 bytes @ 0x26
  4714  0146                     	ds	1
  4715  0147                     Process_RxMessage@User_data_status:	
  4716                           
  4717                           ; 1 bytes @ 0x27
  4718  0147                     	ds	6
  4719  014D                     MiApp_UnicastStar@status:	
  4720                           
  4721                           ; 1 bytes @ 0x2D
  4722  014D                     	ds	1
  4723  014E                     MiApp_EstablishConnection@tmpConnectionMode:	
  4724  014E                     MiApp_UnicastStar@t1:	
  4725                           ; 1 bytes @ 0x2E
  4726                           
  4727                           
  4728                           ; 4 bytes @ 0x2E
  4729  014E                     	ds	1
  4730  014F                     MiApp_EstablishConnection@retry:	
  4731                           
  4732                           ; 1 bytes @ 0x2F
  4733  014F                     	ds	1
  4734  0150                     MiApp_EstablishConnection@t1:	
  4735                           
  4736                           ; 4 bytes @ 0x30
  4737  0150                     	ds	2
  4738  0152                     MiApp_UnicastStar@t2:	
  4739                           
  4740                           ; 4 bytes @ 0x32
  4741  0152                     	ds	2
  4742  0154                     MiApp_EstablishConnection@connectionInterval:	
  4743                           
  4744                           ; 1 bytes @ 0x34
  4745  0154                     	ds	1
  4746  0155                     MiApp_EstablishConnection@t2:	
  4747                           
  4748                           ; 4 bytes @ 0x35
  4749  0155                     	ds	1
  4750  0156                     MiApp_UnicastStar@SecEn:	
  4751                           
  4752                           ; 1 bytes @ 0x36
  4753  0156                     	ds	3
  4754  0159                     MiApp_EstablishConnection@i:	
  4755                           
  4756                           ; 1 bytes @ 0x39
  4757  0159                     	ds	1
  4758  015A                     ??_Initialize_Demo:	
  4759  015A                     ??_run_star_demo:	
  4760                           ; 1 bytes @ 0x3A
  4761                           
  4762                           
  4763                           ; 1 bytes @ 0x3A
  4764  015A                     	ds	1
  4765  015B                     Initialize_Demo@freezer_enable:	
  4766                           
  4767                           ; 1 bytes @ 0x3B
  4768  015B                     	ds	1
  4769  015C                     Initialize_Demo@i:	
  4770                           
  4771                           ; 1 bytes @ 0x3C
  4772  015C                     	ds	10
  4773  0166                     run_star_demo@mac_ack_status:	
  4774                           
  4775                           ; 1 bytes @ 0x46
  4776  0166                     	ds	1
  4777  0167                     run_star_demo@sw_layer_ack_status:	
  4778                           
  4779                           ; 1 bytes @ 0x47
  4780  0167                     	ds	1
  4781  0168                     run_star_demo@update_ed:	
  4782                           
  4783                           ; 1 bytes @ 0x48
  4784  0168                     	ds	1
  4785  0169                     run_star_demo@PressedButton:	
  4786                           
  4787                           ; 1 bytes @ 0x49
  4788  0169                     	ds	1
  4789  016A                     run_star_demo@switch_val:	
  4790                           
  4791                           ; 1 bytes @ 0x4A
  4792  016A                     	ds	1
  4793  016B                     run_star_demo@select_ed:	
  4794                           
  4795                           ; 1 bytes @ 0x4B
  4796  016B                     	ds	1
  4797  016C                     ??_main:	
  4798                           
  4799                           ; 1 bytes @ 0x4C
  4800  016C                     	ds	1
  4801  016D                     main@freezer_enable:	
  4802                           
  4803                           ; 1 bytes @ 0x4D
  4804  016D                     	ds	1
  4805                           
  4806                           	psect	cstackBANK1
  4807  00A0                     __pcstackBANK1:	
  4808  00A0                     ??_SPIPut:	
  4809  00A0                     ??_MacroNop:	
  4810                           ; 1 bytes @ 0x0
  4811                           
  4812  00A0                     ??_InitSymbolTimer:	
  4813                           ; 1 bytes @ 0x0
  4814                           
  4815  00A0                     ?_memset:	
  4816                           ; 1 bytes @ 0x0
  4817                           
  4818  00A0                     ??_isdigit:	
  4819                           ; 1 bytes @ 0x0
  4820                           
  4821  00A0                     ?_NVMalloc:	
  4822                           ; 1 bytes @ 0x0
  4823                           
  4824  00A0                     ??_handle_lost_connection:	
  4825                           ; 1 bytes @ 0x0
  4826                           
  4827  00A0                     ??_DemoOutput_ChannelError:	
  4828                           ; 1 bytes @ 0x0
  4829                           
  4830  00A0                     ??_STAR_DEMO_OPTIONS_MESSAGE:	
  4831                           ; 1 bytes @ 0x0
  4832                           
  4833  00A0                     ??_LCDInitSPI:	
  4834                           ; 1 bytes @ 0x0
  4835                           
  4836  00A0                     ?___bmul:	
  4837                           ; 1 bytes @ 0x0
  4838                           
  4839  00A0                     ?___awdiv:	
  4840                           ; 1 bytes @ 0x0
  4841                           
  4842  00A0                     ?___awmod:	
  4843                           ; 2 bytes @ 0x0
  4844                           
  4845  00A0                     ?___lwdiv:	
  4846                           ; 2 bytes @ 0x0
  4847                           
  4848  00A0                     ?_MiWi_TickGet:	
  4849                           ; 2 bytes @ 0x0
  4850                           
  4851  00A0                     ?___lmul:	
  4852                           ; 4 bytes @ 0x0
  4853                           
  4854  00A0                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:	
  4855                           ; 4 bytes @ 0x0
  4856                           
  4857  00A0                     ___bmul@multiplicand:	
  4858                           ; 1 bytes @ 0x0
  4859                           
  4860  00A0                     _isdigit$2639:	
  4861                           ; 1 bytes @ 0x0
  4862                           
  4863  00A0                     NVMalloc@size:	
  4864                           ; 1 bytes @ 0x0
  4865                           
  4866  00A0                     ___awdiv@divisor:	
  4867                           ; 2 bytes @ 0x0
  4868                           
  4869  00A0                     ___awmod@divisor:	
  4870                           ; 2 bytes @ 0x0
  4871                           
  4872  00A0                     ___lwdiv@divisor:	
  4873                           ; 2 bytes @ 0x0
  4874                           
  4875  00A0                     memset@c:	
  4876                           ; 2 bytes @ 0x0
  4877                           
  4878  00A0                     ___lmul@multiplier:	
  4879                           ; 2 bytes @ 0x0
  4880                           
  4881                           
  4882                           ; 4 bytes @ 0x0
  4883  00A0                     	ds	1
  4884  00A1                     ??___bmul:	
  4885  00A1                     SPIPut@i:	
  4886                           ; 1 bytes @ 0x1
  4887                           
  4888  00A1                     isdigit@c:	
  4889                           ; 1 bytes @ 0x1
  4890                           
  4891                           
  4892                           ; 1 bytes @ 0x1
  4893  00A1                     	ds	1
  4894  00A2                     handle_lost_connection@stat:	
  4895  00A2                     SPIPut@v:	
  4896                           ; 1 bytes @ 0x2
  4897                           
  4898  00A2                     ___bmul@product:	
  4899                           ; 1 bytes @ 0x2
  4900                           
  4901  00A2                     NVMalloc@location:	
  4902                           ; 1 bytes @ 0x2
  4903                           
  4904  00A2                     ___awdiv@dividend:	
  4905                           ; 2 bytes @ 0x2
  4906                           
  4907  00A2                     ___awmod@dividend:	
  4908                           ; 2 bytes @ 0x2
  4909                           
  4910  00A2                     ___lwdiv@dividend:	
  4911                           ; 2 bytes @ 0x2
  4912                           
  4913  00A2                     memset@n:	
  4914                           ; 2 bytes @ 0x2
  4915                           
  4916                           
  4917                           ; 2 bytes @ 0x2
  4918  00A2                     	ds	1
  4919  00A3                     ??_RegisterRead:	
  4920  00A3                     ??_SPIGet:	
  4921                           ; 1 bytes @ 0x3
  4922                           
  4923  00A3                     ?_EEPROM_Read:	
  4924                           ; 1 bytes @ 0x3
  4925                           
  4926  00A3                     ?_RegisterSet:	
  4927                           ; 1 bytes @ 0x3
  4928                           
  4929  00A3                     ??_WriteFIFO:	
  4930                           ; 1 bytes @ 0x3
  4931                           
  4932  00A3                     ?_NVMRead:	
  4933                           ; 1 bytes @ 0x3
  4934                           
  4935  00A3                     ??_LCDInitPortA:	
  4936                           ; 1 bytes @ 0x3
  4937                           
  4938  00A3                     ??_LCDInitPortB:	
  4939                           ; 1 bytes @ 0x3
  4940                           
  4941  00A3                     ??_LCDWritePortA:	
  4942                           ; 1 bytes @ 0x3
  4943                           
  4944  00A3                     ??_LCDWritePortB:	
  4945                           ; 1 bytes @ 0x3
  4946                           
  4947  00A3                     WriteFIFO@Data:	
  4948                           ; 1 bytes @ 0x3
  4949                           
  4950  00A3                     handle_lost_connection@i:	
  4951                           ; 1 bytes @ 0x3
  4952                           
  4953  00A3                     EEPROM_Read@addr:	
  4954                           ; 1 bytes @ 0x3
  4955                           
  4956  00A3                     LCDInitPortA@preRFIE:	
  4957                           ; 1 bytes @ 0x3
  4958                           
  4959  00A3                     LCDInitPortB@preRFIE:	
  4960                           ; 1 bytes @ 0x3
  4961                           
  4962  00A3                     LCDWritePortA@v:	
  4963                           ; 1 bytes @ 0x3
  4964                           
  4965  00A3                     LCDWritePortB@v:	
  4966                           ; 1 bytes @ 0x3
  4967                           
  4968  00A3                     ___bmul@multiplier:	
  4969                           ; 1 bytes @ 0x3
  4970                           
  4971  00A3                     RegisterSet@setting:	
  4972                           ; 1 bytes @ 0x3
  4973                           
  4974  00A3                     NVMRead@dest:	
  4975                           ; 2 bytes @ 0x3
  4976                           
  4977                           
  4978                           ; 2 bytes @ 0x3
  4979  00A3                     	ds	1
  4980  00A4                     ??_MiWi_TickGet:	
  4981  00A4                     ??_memset:	
  4982                           ; 1 bytes @ 0x4
  4983                           
  4984  00A4                     ??_NVMalloc:	
  4985                           ; 1 bytes @ 0x4
  4986                           
  4987  00A4                     ?_store_connection_tb:	
  4988                           ; 1 bytes @ 0x4
  4989                           
  4990  00A4                     ??___awdiv:	
  4991                           ; 1 bytes @ 0x4
  4992                           
  4993  00A4                     ??___awmod:	
  4994                           ; 1 bytes @ 0x4
  4995                           
  4996  00A4                     ??___lwdiv:	
  4997                           ; 1 bytes @ 0x4
  4998                           
  4999  00A4                     RegisterRead@value:	
  5000                           ; 1 bytes @ 0x4
  5001                           
  5002  00A4                     WriteFIFO@IRQ1select:	
  5003                           ; 1 bytes @ 0x4
  5004                           
  5005  00A4                     EEPROM_Read@count:	
  5006                           ; 1 bytes @ 0x4
  5007                           
  5008  00A4                     LCDWritePortA@preRFIE:	
  5009                           ; 1 bytes @ 0x4
  5010                           
  5011  00A4                     LCDWritePortB@preRFIE:	
  5012                           ; 1 bytes @ 0x4
  5013                           
  5014  00A4                     store_connection_tb@payload:	
  5015                           ; 1 bytes @ 0x4
  5016                           
  5017  00A4                     ___lmul@multiplicand:	
  5018                           ; 2 bytes @ 0x4
  5019                           
  5020                           
  5021                           ; 4 bytes @ 0x4
  5022  00A4                     	ds	1
  5023  00A5                     ??_EEPROM_Read:	
  5024  00A5                     ??_RegisterSet:	
  5025                           ; 1 bytes @ 0x5
  5026                           
  5027  00A5                     ??_LCDInitWrite:	
  5028                           ; 1 bytes @ 0x5
  5029                           
  5030  00A5                     RegisterSet@IRQ1select:	
  5031                           ; 1 bytes @ 0x5
  5032                           
  5033  00A5                     RegisterRead@IRQ1select:	
  5034                           ; 1 bytes @ 0x5
  5035                           
  5036  00A5                     LCDInitWrite@v:	
  5037                           ; 1 bytes @ 0x5
  5038                           
  5039  00A5                     MiWi_TickGet@IntFlag2:	
  5040                           ; 1 bytes @ 0x5
  5041                           
  5042  00A5                     ___awdiv@counter:	
  5043                           ; 1 bytes @ 0x5
  5044                           
  5045  00A5                     ___awmod@counter:	
  5046                           ; 1 bytes @ 0x5
  5047                           
  5048  00A5                     memset@p1:	
  5049                           ; 1 bytes @ 0x5
  5050                           
  5051  00A5                     NVMRead@addr:	
  5052                           ; 1 bytes @ 0x5
  5053                           
  5054  00A5                     ___lwdiv@quotient:	
  5055                           ; 2 bytes @ 0x5
  5056                           
  5057                           
  5058                           ; 2 bytes @ 0x5
  5059  00A5                     	ds	1
  5060  00A6                     ??_SetRFMode:	
  5061  00A6                     ??_NVMInit:	
  5062                           ; 1 bytes @ 0x6
  5063                           
  5064  00A6                     ??_store_connection_tb:	
  5065                           ; 1 bytes @ 0x6
  5066                           
  5067  00A6                     RegisterRead@address:	
  5068                           ; 1 bytes @ 0x6
  5069                           
  5070  00A6                     EEPROM_Read@dest:	
  5071                           ; 1 bytes @ 0x6
  5072                           
  5073  00A6                     MiWi_TickGet@IntFlag1:	
  5074                           ; 1 bytes @ 0x6
  5075                           
  5076  00A6                     ___awdiv@sign:	
  5077                           ; 1 bytes @ 0x6
  5078                           
  5079  00A6                     ___awmod@sign:	
  5080                           ; 1 bytes @ 0x6
  5081                           
  5082  00A6                     memset@p:	
  5083                           ; 1 bytes @ 0x6
  5084                           
  5085                           
  5086                           ; 1 bytes @ 0x6
  5087  00A6                     	ds	1
  5088  00A7                     ?___wmul:	
  5089  00A7                     SetRFMode@mode:	
  5090                           ; 2 bytes @ 0x7
  5091                           
  5092  00A7                     NVMInit@result:	
  5093                           ; 1 bytes @ 0x7
  5094                           
  5095  00A7                     ___lwdiv@counter:	
  5096                           ; 1 bytes @ 0x7
  5097                           
  5098  00A7                     NVMRead@count:	
  5099                           ; 1 bytes @ 0x7
  5100                           
  5101  00A7                     ___wmul@multiplier:	
  5102                           ; 2 bytes @ 0x7
  5103                           
  5104  00A7                     ___awdiv@quotient:	
  5105                           ; 2 bytes @ 0x7
  5106                           
  5107  00A7                     MiWi_TickGet@currentTime:	
  5108                           ; 2 bytes @ 0x7
  5109                           
  5110                           
  5111                           ; 4 bytes @ 0x7
  5112  00A7                     	ds	1
  5113  00A8                     ?_MiMAC_SetChannel:	
  5114  00A8                     ??___lmul:	
  5115                           ; 1 bytes @ 0x8
  5116                           
  5117  00A8                     ?___lwmod:	
  5118                           ; 1 bytes @ 0x8
  5119                           
  5120  00A8                     MiMAC_SetChannel@offsetFreq:	
  5121                           ; 2 bytes @ 0x8
  5122                           
  5123  00A8                     ___lwmod@divisor:	
  5124                           ; 1 bytes @ 0x8
  5125                           
  5126  00A8                     ___lmul@product:	
  5127                           ; 2 bytes @ 0x8
  5128                           
  5129                           
  5130                           ; 4 bytes @ 0x8
  5131  00A8                     	ds	1
  5132  00A9                     ??_MiMAC_SetChannel:	
  5133  00A9                     ??_NVMRead:	
  5134                           ; 1 bytes @ 0x9
  5135                           
  5136  00A9                     ___wmul@multiplicand:	
  5137                           ; 1 bytes @ 0x9
  5138                           
  5139                           
  5140                           ; 2 bytes @ 0x9
  5141  00A9                     	ds	1
  5142  00AA                     MiMAC_SetChannel@channel:	
  5143  00AA                     NVMRead@oldRFIE:	
  5144                           ; 1 bytes @ 0xA
  5145                           
  5146  00AA                     store_connection_tb@connections_perpacket:	
  5147                           ; 1 bytes @ 0xA
  5148                           
  5149  00AA                     ___lwmod@dividend:	
  5150                           ; 1 bytes @ 0xA
  5151                           
  5152                           
  5153                           ; 2 bytes @ 0xA
  5154  00AA                     	ds	1
  5155  00AB                     ?_MiApp_StartConnection:	
  5156  00AB                     ??_ButtonPressed:	
  5157                           ; 1 bytes @ 0xB
  5158                           
  5159  00AB                     ??___wmul:	
  5160                           ; 1 bytes @ 0xB
  5161                           
  5162  00AB                     store_connection_tb@j:	
  5163                           ; 1 bytes @ 0xB
  5164                           
  5165  00AB                     MiApp_StartConnection@ScanDuration:	
  5166                           ; 1 bytes @ 0xB
  5167                           
  5168  00AB                     ___wmul@product:	
  5169                           ; 1 bytes @ 0xB
  5170                           
  5171                           
  5172                           ; 2 bytes @ 0xB
  5173  00AB                     	ds	1
  5174  00AC                     ?_DELAY_10us:	
  5175  00AC                     ?_DELAY_ms:	
  5176                           ; 1 bytes @ 0xC
  5177                           
  5178  00AC                     ??___lwmod:	
  5179                           ; 1 bytes @ 0xC
  5180                           
  5181  00AC                     store_connection_tb@i:	
  5182                           ; 1 bytes @ 0xC
  5183                           
  5184  00AC                     DELAY_ms@ms:	
  5185                           ; 1 bytes @ 0xC
  5186                           
  5187  00AC                     MiApp_StartConnection@ChannelMap:	
  5188                           ; 2 bytes @ 0xC
  5189                           
  5190  00AC                     DELAY_10us@tenMicroSecondCounter:	
  5191                           ; 4 bytes @ 0xC
  5192                           
  5193                           
  5194                           ; 4 bytes @ 0xC
  5195  00AC                     	ds	1
  5196  00AD                     ?_isSameAddress:	
  5197  00AD                     ??_MiMAC_ReceivedPacket:	
  5198                           ; 1 bytes @ 0xD
  5199                           
  5200  00AD                     ??_MiMAC_DiscardPacket:	
  5201                           ; 1 bytes @ 0xD
  5202                           
  5203  00AD                     ?_NVMWrite:	
  5204                           ; 1 bytes @ 0xD
  5205                           
  5206  00AD                     ??_Total_Connections:	
  5207                           ; 1 bytes @ 0xD
  5208                           
  5209  00AD                     ?_Find_Index:	
  5210                           ; 1 bytes @ 0xD
  5211                           
  5212  00AD                     ___lwmod@counter:	
  5213                           ; 1 bytes @ 0xD
  5214                           
  5215  00AD                     NVMWrite@source:	
  5216                           ; 1 bytes @ 0xD
  5217                           
  5218  00AD                     Find_Index@DestAddr:	
  5219                           ; 2 bytes @ 0xD
  5220                           
  5221  00AD                     isSameAddress@Address1:	
  5222                           ; 2 bytes @ 0xD
  5223                           
  5224                           
  5225                           ; 2 bytes @ 0xD
  5226  00AD                     	ds	1
  5227  00AE                     ??_DELAY_ms:	
  5228  00AE                     ?_sprintf:	
  5229                           ; 1 bytes @ 0xE
  5230                           
  5231  00AE                     sprintf@f:	
  5232                           ; 2 bytes @ 0xE
  5233                           
  5234  00AE                     DELAY_ms@cyclesRequiredForEntireDelay:	
  5235                           ; 2 bytes @ 0xE
  5236                           
  5237                           
  5238                           ; 4 bytes @ 0xE
  5239  00AE                     	ds	1
  5240  00AF                     ??_Find_Index:	
  5241  00AF                     NVMWrite@addr:	
  5242                           ; 1 bytes @ 0xF
  5243                           
  5244  00AF                     isSameAddress@Address2:	
  5245                           ; 2 bytes @ 0xF
  5246                           
  5247                           
  5248                           ; 2 bytes @ 0xF
  5249  00AF                     	ds	1
  5250  00B0                     ??_DELAY_10us:	
  5251  00B0                     ??_MiApp_StartConnection:	
  5252                           ; 1 bytes @ 0x10
  5253                           
  5254  00B0                     MiApp_StartConnection@Mode:	
  5255                           ; 1 bytes @ 0x10
  5256                           
  5257  00B0                     DELAY_10us@cyclesRequiredForEntireDelay:	
  5258                           ; 1 bytes @ 0x10
  5259                           
  5260                           
  5261                           ; 4 bytes @ 0x10
  5262  00B0                     	ds	1
  5263  00B1                     ??_isSameAddress:	
  5264  00B1                     ??_MiApp_DiscardMessage:	
  5265                           ; 1 bytes @ 0x11
  5266                           
  5267  00B1                     NVMWrite@count:	
  5268                           ; 1 bytes @ 0x11
  5269                           
  5270                           
  5271                           ; 2 bytes @ 0x11
  5272  00B1                     	ds	1
  5273  00B2                     ??_LCD_Erase:	
  5274  00B2                     ??_SYSTEM_Initialize:	
  5275                           ; 1 bytes @ 0x12
  5276                           
  5277  00B2                     ?_MiMAC_Init:	
  5278                           ; 1 bytes @ 0x12
  5279                           
  5280  00B2                     ??_LCD_i_write:	
  5281                           ; 1 bytes @ 0x12
  5282                           
  5283  00B2                     ??_LCD_d_write:	
  5284                           ; 1 bytes @ 0x12
  5285                           
  5286  00B2                     ??_LCD_Initialize:	
  5287                           ; 1 bytes @ 0x12
  5288                           
  5289  00B2                     LCD_i_write@v:	
  5290                           ; 1 bytes @ 0x12
  5291                           
  5292  00B2                     LCD_d_write@v:	
  5293                           ; 1 bytes @ 0x12
  5294                           
  5295  00B2                     MiMAC_Init@initValue:	
  5296                           ; 1 bytes @ 0x12
  5297                           
  5298                           
  5299                           ; 2 bytes @ 0x12
  5300  00B2                     	ds	1
  5301  00B3                     ??_LCD_Update:	
  5302  00B3                     ??_NVMWrite:	
  5303                           ; 1 bytes @ 0x13
  5304                           
  5305  00B3                     Total_Connections@count:	
  5306                           ; 1 bytes @ 0x13
  5307                           
  5308  00B3                     ButtonPressed@tickDifference:	
  5309                           ; 1 bytes @ 0x13
  5310                           
  5311                           
  5312                           ; 4 bytes @ 0x13
  5313  00B3                     	ds	1
  5314  00B4                     ?_TxPacket:	
  5315  00B4                     ??_MiMAC_Init:	
  5316                           ; 1 bytes @ 0x14
  5317                           
  5318  00B4                     TxPacket@CCA:	
  5319                           ; 1 bytes @ 0x14
  5320                           
  5321  00B4                     Total_Connections@i:	
  5322                           ; 1 bytes @ 0x14
  5323                           
  5324  00B4                     LCD_Update@i:	
  5325                           ; 1 bytes @ 0x14
  5326                           
  5327                           
  5328                           ; 1 bytes @ 0x14
  5329  00B4                     	ds	1
  5330  00B5                     ??_TxPacket:	
  5331  00B5                     Find_Index@i:	
  5332                           ; 1 bytes @ 0x15
  5333                           
  5334  00B5                     isSameAddress@i:	
  5335                           ; 1 bytes @ 0x15
  5336                           
  5337                           
  5338                           ; 1 bytes @ 0x15
  5339  00B5                     	ds	2
  5340  00B7                     NVMWrite@oldRFIE:	
  5341  00B7                     MiMAC_ReceivedPacket@currentTick:	
  5342                           ; 1 bytes @ 0x17
  5343                           
  5344  00B7                     ButtonPressed@t:	
  5345                           ; 4 bytes @ 0x17
  5346                           
  5347                           
  5348                           ; 4 bytes @ 0x17
  5349  00B7                     	ds	1
  5350  00B8                     ??_sprintf:	
  5351  00B8                     MiMAC_Init@i:	
  5352                           ; 1 bytes @ 0x18
  5353                           
  5354  00B8                     NVMWrite@PageCounter:	
  5355                           ; 1 bytes @ 0x18
  5356                           
  5357                           
  5358                           ; 1 bytes @ 0x18
  5359  00B8                     	ds	1
  5360  00B9                     ??_AddConnection:	
  5361  00B9                     ??_MiApp_SetChannel:	
  5362                           ; 1 bytes @ 0x19
  5363                           
  5364  00B9                     ??_MiApp_ConnectionMode:	
  5365                           ; 1 bytes @ 0x19
  5366                           
  5367                           
  5368                           ; 1 bytes @ 0x19
  5369  00B9                     	ds	1
  5370  00BA                     MiApp_SetChannel@channel:	
  5371                           
  5372                           ; 1 bytes @ 0x1A
  5373  00BA                     	ds	1
  5374  00BB                     ??_MiApp_ProtocolInit:	
  5375  00BB                     MiMAC_ReceivedPacket@PayloadIndex:	
  5376                           ; 1 bytes @ 0x1B
  5377                           
  5378  00BB                     MiApp_ConnectionMode@Mode:	
  5379                           ; 1 bytes @ 0x1B
  5380                           
  5381                           
  5382                           ; 1 bytes @ 0x1B
  5383  00BB                     	ds	1
  5384  00BC                     MiMAC_ReceivedPacket@i:	
  5385  00BC                     _sprintf$2446:	
  5386                           ; 1 bytes @ 0x1C
  5387                           
  5388                           
  5389                           ; 2 bytes @ 0x1C
  5390  00BC                     	ds	1
  5391  00BD                     TxPacket@t1:	
  5392                           
  5393                           ; 4 bytes @ 0x1D
  5394  00BD                     	ds	1
  5395  00BE                     _sprintf$2447:	
  5396                           
  5397                           ; 2 bytes @ 0x1E
  5398  00BE                     	ds	2
  5399  00C0                     _sprintf$2453:	
  5400                           
  5401                           ; 2 bytes @ 0x20
  5402  00C0                     	ds	1
  5403  00C1                     MiApp_ProtocolInit@bNetworkFreezer:	
  5404  00C1                     TxPacket@t2:	
  5405                           ; 1 bytes @ 0x21
  5406                           
  5407                           
  5408                           ; 4 bytes @ 0x21
  5409  00C1                     	ds	1
  5410  00C2                     sprintf@idx:	
  5411  00C2                     MiApp_ProtocolInit@initValue:	
  5412                           ; 1 bytes @ 0x22
  5413                           
  5414                           
  5415                           ; 2 bytes @ 0x22
  5416  00C2                     	ds	1
  5417  00C3                     sprintf@cp:	
  5418                           
  5419                           ; 1 bytes @ 0x23
  5420  00C3                     	ds	1
  5421  00C4                     MiApp_ProtocolInit@i:	
  5422  00C4                     sprintf@len:	
  5423                           ; 1 bytes @ 0x24
  5424                           
  5425                           
  5426                           ; 2 bytes @ 0x24
  5427  00C4                     	ds	1
  5428  00C5                     TxPacket@CCARetries:	
  5429                           
  5430                           ; 1 bytes @ 0x25
  5431  00C5                     	ds	1
  5432  00C6                     TxPacket@reTry:	
  5433  00C6                     AddConnection@status:	
  5434                           ; 1 bytes @ 0x26
  5435                           
  5436  00C6                     sprintf@ap:	
  5437                           ; 1 bytes @ 0x26
  5438                           
  5439                           
  5440                           ; 1 bytes @ 0x26
  5441  00C6                     	ds	1
  5442  00C7                     TxPacket@allowedTxFailure:	
  5443  00C7                     AddConnection@connectionSlot:	
  5444                           ; 1 bytes @ 0x27
  5445                           
  5446  00C7                     sprintf@val:	
  5447                           ; 1 bytes @ 0x27
  5448                           
  5449                           
  5450                           ; 2 bytes @ 0x27
  5451  00C7                     	ds	1
  5452  00C8                     TxPacket@status:	
  5453  00C8                     AddConnection@i:	
  5454                           ; 1 bytes @ 0x28
  5455                           
  5456                           
  5457                           ; 1 bytes @ 0x28
  5458  00C8                     	ds	1
  5459  00C9                     TxPacket@TxPacketLen:	
  5460  00C9                     sprintf@prec:	
  5461                           ; 1 bytes @ 0x29
  5462                           
  5463                           
  5464                           ; 1 bytes @ 0x29
  5465  00C9                     	ds	1
  5466  00CA                     TxPacket@i:	
  5467  00CA                     sprintf@width:	
  5468                           ; 1 bytes @ 0x2A
  5469                           
  5470                           
  5471                           ; 2 bytes @ 0x2A
  5472  00CA                     	ds	1
  5473  00CB                     TxPacket@rssival:	
  5474                           
  5475                           ; 1 bytes @ 0x2B
  5476  00CB                     	ds	1
  5477  00CC                     ?_MiMAC_SendPacket:	
  5478  00CC                     sprintf@c:	
  5479                           ; 1 bytes @ 0x2C
  5480                           
  5481  00CC                     MiMAC_SendPacket@transParam:	
  5482                           ; 1 bytes @ 0x2C
  5483                           
  5484                           
  5485                           ; 3 bytes @ 0x2C
  5486  00CC                     	ds	1
  5487  00CD                     sprintf@flag:	
  5488                           
  5489                           ; 2 bytes @ 0x2D
  5490  00CD                     	ds	2
  5491  00CF                     MiMAC_SendPacket@MACPayload:	
  5492  00CF                     sprintf@sp:	
  5493                           ; 1 bytes @ 0x2F
  5494                           
  5495                           
  5496                           ; 1 bytes @ 0x2F
  5497  00CF                     	ds	1
  5498  00D0                     ?_LCDDisplay:	
  5499  00D0                     ?_LCDTRXCount:	
  5500                           ; 1 bytes @ 0x30
  5501                           
  5502  00D0                     ?_Source_END_DEVICE_INFO:	
  5503                           ; 1 bytes @ 0x30
  5504                           
  5505  00D0                     MiMAC_SendPacket@MACPayloadLen:	
  5506                           ; 1 bytes @ 0x30
  5507                           
  5508  00D0                     LCDTRXCount@rxCount:	
  5509                           ; 1 bytes @ 0x30
  5510                           
  5511  00D0                     Source_END_DEVICE_INFO@SrAddr:	
  5512                           ; 1 bytes @ 0x30
  5513                           
  5514  00D0                     LCDDisplay@text:	
  5515                           ; 2 bytes @ 0x30
  5516                           
  5517                           
  5518                           ; 2 bytes @ 0x30
  5519  00D0                     	ds	1
  5520  00D1                     ??_LCDTRXCount:	
  5521  00D1                     ??_MiMAC_SendPacket:	
  5522                           ; 1 bytes @ 0x31
  5523                           
  5524                           
  5525                           ; 1 bytes @ 0x31
  5526  00D1                     	ds	1
  5527  00D2                     ??_Source_END_DEVICE_INFO:	
  5528  00D2                     LCDDisplay@value:	
  5529                           ; 1 bytes @ 0x32
  5530                           
  5531                           
  5532                           ; 1 bytes @ 0x32
  5533  00D2                     	ds	1
  5534  00D3                     LCDTRXCount@txCount:	
  5535  00D3                     LCDDisplay@delay:	
  5536                           ; 1 bytes @ 0x33
  5537                           
  5538                           
  5539                           ; 1 bytes @ 0x33
  5540  00D3                     	ds	1
  5541  00D4                     ??_LCDDisplay:	
  5542  00D4                     ?_DemoOutput_UpdateTxRx:	
  5543                           ; 1 bytes @ 0x34
  5544                           
  5545  00D4                     MiMAC_SendPacket@TxIndex:	
  5546                           ; 1 bytes @ 0x34
  5547                           
  5548  00D4                     DemoOutput_UpdateTxRx@RxNum:	
  5549                           ; 1 bytes @ 0x34
  5550                           
  5551                           
  5552                           ; 1 bytes @ 0x34
  5553  00D4                     	ds	1
  5554  00D5                     ??_DemoOutput_UpdateTxRx:	
  5555  00D5                     MiMAC_SendPacket@i:	
  5556                           ; 1 bytes @ 0x35
  5557                           
  5558                           
  5559                           ; 1 bytes @ 0x35
  5560  00D5                     	ds	1
  5561  00D6                     ?_SendPacket:	
  5562  00D6                     DemoOutput_UpdateTxRx@TxNum:	
  5563                           ; 1 bytes @ 0x36
  5564                           
  5565  00D6                     LCDDisplay@i:	
  5566                           ; 1 bytes @ 0x36
  5567                           
  5568  00D6                     SendPacket@DestinationAddress:	
  5569                           ; 1 bytes @ 0x36
  5570                           
  5571                           
  5572                           ; 2 bytes @ 0x36
  5573  00D6                     	ds	1
  5574  00D7                     ??_DemoOutput_UnicastFail:	
  5575  00D7                     ??_freezer_feature:	
  5576                           ; 1 bytes @ 0x37
  5577                           
  5578  00D7                     ??_DemoOutput_Greeting:	
  5579                           ; 1 bytes @ 0x37
  5580                           
  5581  00D7                     ?_DemoOutput_Channel:	
  5582                           ; 1 bytes @ 0x37
  5583                           
  5584  00D7                     DemoOutput_Channel@Step:	
  5585                           ; 1 bytes @ 0x37
  5586                           
  5587                           
  5588                           ; 1 bytes @ 0x37
  5589  00D7                     	ds	1
  5590  00D8                     ??_DemoOutput_Channel:	
  5591  00D8                     SendPacket@isCommand:	
  5592                           ; 1 bytes @ 0x38
  5593                           
  5594                           
  5595                           ; 1 bytes @ 0x38
  5596  00D8                     	ds	1
  5597  00D9                     SendPacket@SecurityEnabled:	
  5598  00D9                     DemoOutput_Channel@channel:	
  5599                           ; 1 bytes @ 0x39
  5600                           
  5601                           
  5602                           ; 1 bytes @ 0x39
  5603  00D9                     	ds	1
  5604  00DA                     ??_SendPacket:	
  5605                           
  5606                           ; 1 bytes @ 0x3A
  5607  00DA                     	ds	3
  5608  00DD                     SendPacket@status:	
  5609                           
  5610                           ; 1 bytes @ 0x3D
  5611  00DD                     	ds	1
  5612  00DE                     SendPacket@Broadcast:	
  5613                           
  5614                           ; 1 bytes @ 0x3E
  5615  00DE                     	ds	1
  5616  00DF                     SendPacket@tParam:	
  5617  00DF                     freezer_feature@tick1:	
  5618                           ; 3 bytes @ 0x3F
  5619                           
  5620                           
  5621                           ; 4 bytes @ 0x3F
  5622  00DF                     	ds	3
  5623  00E2                     ??_send_link_status:	
  5624  00E2                     ??_MiApp_BroadcastConnectionTable:	
  5625                           ; 1 bytes @ 0x42
  5626                           
  5627  00E2                     ?_SW_Ack_SrED:	
  5628                           ; 1 bytes @ 0x42
  5629                           
  5630  00E2                     ?_MiApp_UnicastAddress:	
  5631                           ; 1 bytes @ 0x42
  5632                           
  5633  00E2                     ??_MiApp_RemoveConnection:	
  5634                           ; 1 bytes @ 0x42
  5635                           
  5636  00E2                     ??_MiApp_BroadcastPacket:	
  5637                           ; 1 bytes @ 0x42
  5638                           
  5639  00E2                     MiApp_UnicastAddress@DestinationAddress:	
  5640                           ; 1 bytes @ 0x42
  5641                           
  5642  00E2                     SW_Ack_SrED@Dest_Addr:	
  5643                           ; 2 bytes @ 0x42
  5644                           
  5645                           
  5646                           ; 2 bytes @ 0x42
  5647  00E2                     	ds	1
  5648  00E3                     MiApp_BroadcastPacket@SecEn:	
  5649  00E3                     send_link_status@send_status:	
  5650                           ; 1 bytes @ 0x43
  5651                           
  5652  00E3                     freezer_feature@tick2:	
  5653                           ; 1 bytes @ 0x43
  5654                           
  5655                           
  5656                           ; 4 bytes @ 0x43
  5657  00E3                     	ds	1
  5658  00E4                     ??_SW_Ack_SrED:	
  5659  00E4                     MiApp_UnicastAddress@PermanentAddr:	
  5660                           ; 1 bytes @ 0x44
  5661                           
  5662                           
  5663                           ; 1 bytes @ 0x44
  5664  00E4                     	ds	1
  5665  00E5                     MiApp_UnicastAddress@SecEn:	
  5666                           
  5667                           ; 1 bytes @ 0x45
  5668  00E5                     	ds	1
  5669  00E6                     ??_MiApp_UnicastAddress:	
  5670                           
  5671                           ; 1 bytes @ 0x46
  5672  00E6                     	ds	1
  5673  00E7                     ?_MiApp_UnicastConnection:	
  5674  00E7                     MiApp_UnicastConnection@SecEn:	
  5675                           ; 1 bytes @ 0x47
  5676                           
  5677  00E7                     freezer_feature@switch_val:	
  5678                           ; 1 bytes @ 0x47
  5679                           
  5680                           
  5681                           ; 1 bytes @ 0x47
  5682  00E7                     	ds	1
  5683  00E8                     ??_MiApp_UnicastConnection:	
  5684  00E8                     MiApp_RemoveConnection@j:	
  5685                           ; 1 bytes @ 0x48
  5686                           
  5687                           
  5688                           ; 2 bytes @ 0x48
  5689  00E8                     	ds	1
  5690  00E9                     MiApp_BroadcastConnectionTable@k:	
  5691                           
  5692                           ; 1 bytes @ 0x49
  5693  00E9                     	ds	1
  5694  00EA                     MiApp_BroadcastConnectionTable@count:	
  5695  00EA                     MiApp_RemoveConnection@j_1240:	
  5696                           ; 1 bytes @ 0x4A
  5697                           
  5698                           
  5699                           ; 2 bytes @ 0x4A
  5700  00EA                     	ds	1
  5701  00EB                     MiApp_BroadcastConnectionTable@broadcast_count:	
  5702                           
  5703                           ; 1 bytes @ 0x4B
  5704  00EB                     	ds	1
  5705  00EC                     MiApp_BroadcastConnectionTable@i:	
  5706  00EC                     MiApp_RemoveConnection@ConnectionIndex:	
  5707                           ; 1 bytes @ 0x4C
  5708                           
  5709                           
  5710                           ; 1 bytes @ 0x4C
  5711  00EC                     	ds	1
  5712  00ED                     MiApp_BroadcastConnectionTable@j:	
  5713  00ED                     MiApp_RemoveConnection@i:	
  5714                           ; 1 bytes @ 0x4D
  5715                           
  5716                           
  5717                           ; 1 bytes @ 0x4D
  5718  00ED                     	ds	1
  5719  00EE                     Find_InActiveDevices@i:	
  5720                           
  5721                           ; 1 bytes @ 0x4E
  5722  00EE                     	ds	1
  5723  00EF                     MiApp_UnicastConnection@ConnectionIndex:	
  5724                           
  5725                           ; 1 bytes @ 0x4F
  5726  00EF                     	ds	1
  5727  00F0                     ??_Run_Demo:	
  5728                           
  5729                           	psect	cstackCOMMON
  5730  0070                     __pcstackCOMMON:	
  5731                           ; 1 bytes @ 0x50
  5732                           
  5733  0070                     ?_isdigit:	
  5734  0070                     ?_RegisterRead:	
  5735                           ; 1 bit 
  5736                           
  5737  0070                     ?_SPIPut:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ?_SPIGet:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_SetRFMode:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ?_UserInterruptHandler:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ??_UserInterruptHandler:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ?_MacroNop:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ?_Find_InActiveDevices:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ?_send_link_status:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     ?_MiApp_BroadcastConnectionTable:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0070                     ?_AddConnection:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0070                     ?_InitSymbolTimer:	
  5768                           ; 1 bytes @ 0x0
  5769                           
  5770  0070                     ?_MiApp_SetChannel:	
  5771                           ; 1 bytes @ 0x0
  5772                           
  5773  0070                     ?_MiApp_MessageAvailable:	
  5774                           ; 1 bytes @ 0x0
  5775                           
  5776  0070                     ?_MiApp_RemoveConnection:	
  5777                           ; 1 bytes @ 0x0
  5778                           
  5779  0070                     ?_MiApp_DiscardMessage:	
  5780                           ; 1 bytes @ 0x0
  5781                           
  5782  0070                     ?_LCD_Erase:	
  5783                           ; 1 bytes @ 0x0
  5784                           
  5785  0070                     ?_LCD_Update:	
  5786                           ; 1 bytes @ 0x0
  5787                           
  5788  0070                     ?_SYSTEM_Initialize:	
  5789                           ; 1 bytes @ 0x0
  5790                           
  5791  0070                     ?_freezer_feature:	
  5792                           ; 1 bytes @ 0x0
  5793                           
  5794  0070                     ?_Initialize_Demo:	
  5795                           ; 1 bytes @ 0x0
  5796                           
  5797  0070                     ?_Run_Demo:	
  5798                           ; 1 bytes @ 0x0
  5799                           
  5800  0070                     ?_WriteFIFO:	
  5801                           ; 1 bytes @ 0x0
  5802                           
  5803  0070                     ?_MiMAC_ReceivedPacket:	
  5804                           ; 1 bytes @ 0x0
  5805                           
  5806  0070                     ?_MiMAC_DiscardPacket:	
  5807                           ; 1 bytes @ 0x0
  5808                           
  5809  0070                     ?_high_isr:	
  5810                           ; 1 bytes @ 0x0
  5811                           
  5812  0070                     ?_NVMInit:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  0070                     ?_Total_Connections:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  0070                     ?_handle_lost_connection:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_P2PTasks:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ?_MiApp_ProtocolInit:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_MiApp_BroadcastPacket:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ?_MiApp_UnicastStar:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_MiApp_ConnectionMode:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_DemoOutput_Greeting:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ?_DemoOutput_ChannelError:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_STAR_DEMO_OPTIONS_MESSAGE:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ?_ButtonPressed:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_main:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ?_Process_RxMessage:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     ?_run_star_demo:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857  0070                     ?_LCDInitSPI:	
  5858                           ; 1 bytes @ 0x0
  5859                           
  5860  0070                     ?_LCDInitPortA:	
  5861                           ; 1 bytes @ 0x0
  5862                           
  5863  0070                     ?_LCDInitPortB:	
  5864                           ; 1 bytes @ 0x0
  5865                           
  5866  0070                     ?_LCDWritePortA:	
  5867                           ; 1 bytes @ 0x0
  5868                           
  5869  0070                     ?_LCDWritePortB:	
  5870                           ; 1 bytes @ 0x0
  5871                           
  5872  0070                     ?_LCDInitWrite:	
  5873                           ; 1 bytes @ 0x0
  5874                           
  5875  0070                     ?_LCD_i_write:	
  5876                           ; 1 bytes @ 0x0
  5877                           
  5878  0070                     ?_LCD_d_write:	
  5879                           ; 1 bytes @ 0x0
  5880                           
  5881  0070                     ?_LCD_Initialize:	
  5882                           ; 1 bytes @ 0x0
  5883                           
  5884  0070                     ?i1_RegisterRead:	
  5885                           ; 1 bytes @ 0x0
  5886                           
  5887  0070                     ?i1_WriteFIFO:	
  5888                           ; 1 bytes @ 0x0
  5889                           
  5890  0070                     ?i1_SetRFMode:	
  5891                           ; 1 bytes @ 0x0
  5892                           
  5893  0070                     ?i1_SPIPut:	
  5894                           ; 1 bytes @ 0x0
  5895                           
  5896  0070                     ??i1_SPIPut:	
  5897                           ; 1 bytes @ 0x0
  5898                           
  5899  0070                     ?i1_SPIGet:	
  5900                           ; 1 bytes @ 0x0
  5901                           
  5902  0070                     ?i1___bmul:	
  5903                           ; 1 bytes @ 0x0
  5904                           
  5905  0070                     ?_DemoOutput_UnicastFail:	
  5906                           ; 1 bytes @ 0x0
  5907                           
  5908  0070                     ?i1___wmul:	
  5909                           ; 2 bytes @ 0x0
  5910                           
  5911  0070                     ?i1_MiWi_TickGet:	
  5912                           ; 2 bytes @ 0x0
  5913                           
  5914  0070                     ?i1___lmul:	
  5915                           ; 4 bytes @ 0x0
  5916                           
  5917  0070                     MiApp_EstablishConnection@ActiveScanIndex:	
  5918                           ; 4 bytes @ 0x0
  5919                           
  5920  0070                     DemoOutput_ChannelError@channel:	
  5921                           ; 1 bytes @ 0x0
  5922                           
  5923  0070                     i1___bmul@multiplicand:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0070                     i1___wmul@multiplier:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     i1___lmul@multiplier:	
  5930                           ; 2 bytes @ 0x0
  5931                           
  5932                           
  5933                           ; 4 bytes @ 0x0
  5934  0070                     	ds	1
  5935  0071                     ??i1___bmul:	
  5936  0071                     i1SPIPut@i:	
  5937                           ; 1 bytes @ 0x1
  5938                           
  5939                           
  5940                           ; 1 bytes @ 0x1
  5941  0071                     	ds	1
  5942  0072                     i1SPIPut@v:	
  5943  0072                     i1___bmul@multiplier:	
  5944                           ; 1 bytes @ 0x2
  5945                           
  5946  0072                     i1___wmul@multiplicand:	
  5947                           ; 1 bytes @ 0x2
  5948                           
  5949                           
  5950                           ; 2 bytes @ 0x2
  5951  0072                     	ds	1
  5952  0073                     ?i1_RegisterSet:	
  5953  0073                     ??i1_RegisterRead:	
  5954                           ; 1 bytes @ 0x3
  5955                           
  5956  0073                     ??i1_WriteFIFO:	
  5957                           ; 1 bytes @ 0x3
  5958                           
  5959  0073                     ??i1_SPIGet:	
  5960                           ; 1 bytes @ 0x3
  5961                           
  5962  0073                     i1WriteFIFO@Data:	
  5963                           ; 1 bytes @ 0x3
  5964                           
  5965  0073                     i1___bmul@product:	
  5966                           ; 1 bytes @ 0x3
  5967                           
  5968  0073                     i1RegisterSet@setting:	
  5969                           ; 1 bytes @ 0x3
  5970                           
  5971                           
  5972                           ; 2 bytes @ 0x3
  5973  0073                     	ds	1
  5974  0074                     ??i1_MiWi_TickGet:	
  5975  0074                     ??i1___wmul:	
  5976                           ; 1 bytes @ 0x4
  5977                           
  5978  0074                     i1RegisterRead@address:	
  5979                           ; 1 bytes @ 0x4
  5980                           
  5981  0074                     i1WriteFIFO@IRQ1select:	
  5982                           ; 1 bytes @ 0x4
  5983                           
  5984  0074                     i1___wmul@product:	
  5985                           ; 1 bytes @ 0x4
  5986                           
  5987  0074                     i1___lmul@multiplicand:	
  5988                           ; 2 bytes @ 0x4
  5989                           
  5990                           
  5991                           ; 4 bytes @ 0x4
  5992  0074                     	ds	1
  5993  0075                     ??i1_RegisterSet:	
  5994  0075                     i1RegisterSet@IRQ1select:	
  5995                           ; 1 bytes @ 0x5
  5996                           
  5997  0075                     i1RegisterRead@value:	
  5998                           ; 1 bytes @ 0x5
  5999                           
  6000  0075                     i1MiWi_TickGet@IntFlag2:	
  6001                           ; 1 bytes @ 0x5
  6002                           
  6003                           
  6004                           ; 1 bytes @ 0x5
  6005  0075                     	ds	1
  6006  0076                     ??i1_SetRFMode:	
  6007  0076                     i1RegisterRead@IRQ1select:	
  6008                           ; 1 bytes @ 0x6
  6009                           
  6010  0076                     i1MiWi_TickGet@IntFlag1:	
  6011                           ; 1 bytes @ 0x6
  6012                           
  6013                           
  6014                           ; 1 bytes @ 0x6
  6015  0076                     	ds	1
  6016  0077                     i1SetRFMode@mode:	
  6017  0077                     i1MiWi_TickGet@currentTime:	
  6018                           ; 1 bytes @ 0x7
  6019                           
  6020                           
  6021                           ; 4 bytes @ 0x7
  6022  0077                     	ds	1
  6023  0078                     ??i1___lmul:	
  6024  0078                     i1___lmul@product:	
  6025                           ; 1 bytes @ 0x8
  6026                           
  6027                           
  6028                           ; 4 bytes @ 0x8
  6029  0078                     	ds	4
  6030  007C                     ?i1_TxPacket:	
  6031  007C                     ??i1_DELAY_10us:	
  6032                           ; 1 bytes @ 0xC
  6033                           
  6034  007C                     i1TxPacket@CCA:	
  6035                           ; 1 bytes @ 0xC
  6036                           
  6037                           
  6038                           ; 1 bytes @ 0xC
  6039  007C                     	ds	1
  6040                           
  6041                           	psect	cstackBANK0
  6042  0020                     __pcstackBANK0:	
  6043  0020                     ?i1_DELAY_10us:	
  6044  0020                     i1DELAY_10us@tenMicroSecondCounter:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047                           
  6048                           ; 4 bytes @ 0x0
  6049  0020                     	ds	4
  6050  0024                     i1DELAY_10us@cyclesRequiredForEntireDelay:	
  6051                           
  6052                           ; 4 bytes @ 0x4
  6053  0024                     	ds	4
  6054  0028                     ??i1_TxPacket:	
  6055                           
  6056                           ; 1 bytes @ 0x8
  6057  0028                     	ds	8
  6058  0030                     i1TxPacket@TxPacketLen:	
  6059                           
  6060                           ; 1 bytes @ 0x10
  6061  0030                     	ds	1
  6062  0031                     i1TxPacket@status:	
  6063                           
  6064                           ; 1 bytes @ 0x11
  6065  0031                     	ds	1
  6066  0032                     i1TxPacket@t1:	
  6067                           
  6068                           ; 4 bytes @ 0x12
  6069  0032                     	ds	4
  6070  0036                     i1TxPacket@t2:	
  6071                           
  6072                           ; 4 bytes @ 0x16
  6073  0036                     	ds	4
  6074  003A                     i1TxPacket@CCARetries:	
  6075                           
  6076                           ; 1 bytes @ 0x1A
  6077  003A                     	ds	1
  6078  003B                     i1TxPacket@reTry:	
  6079                           
  6080                           ; 1 bytes @ 0x1B
  6081  003B                     	ds	1
  6082  003C                     i1TxPacket@allowedTxFailure:	
  6083                           
  6084                           ; 1 bytes @ 0x1C
  6085  003C                     	ds	1
  6086  003D                     i1TxPacket@i:	
  6087                           
  6088                           ; 1 bytes @ 0x1D
  6089  003D                     	ds	1
  6090  003E                     i1TxPacket@rssival:	
  6091                           
  6092                           ; 1 bytes @ 0x1E
  6093  003E                     	ds	1
  6094  003F                     ??_high_isr:	
  6095                           
  6096                           ; 1 bytes @ 0x1F
  6097  003F                     	ds	12
  6098  004B                     high_isr@counter:	
  6099                           
  6100                           ; 2 bytes @ 0x2B
  6101  004B                     	ds	2
  6102  004D                     high_isr@fifo_stat:	
  6103                           
  6104                           ; 1 bytes @ 0x2D
  6105  004D                     	ds	1
  6106  004E                     high_isr@ackPacket:	
  6107                           
  6108                           ; 4 bytes @ 0x2E
  6109  004E                     	ds	4
  6110  0052                     high_isr@bAck:	
  6111                           
  6112                           ; 1 bytes @ 0x32
  6113  0052                     	ds	1
  6114  0053                     high_isr@RxPacketPtr:	
  6115                           
  6116                           ; 1 bytes @ 0x33
  6117  0053                     	ds	1
  6118  0054                     high_isr@ackInfoIndex:	
  6119                           
  6120                           ; 1 bytes @ 0x34
  6121  0054                     	ds	1
  6122  0055                     high_isr@PacketLen:	
  6123                           
  6124                           ; 1 bytes @ 0x35
  6125  0055                     	ds	1
  6126  0056                     high_isr@BankIndex:	
  6127                           
  6128                           ; 1 bytes @ 0x36
  6129  0056                     	ds	1
  6130  0057                     high_isr@i:	
  6131                           
  6132                           ; 1 bytes @ 0x37
  6133  0057                     	ds	1
  6134                           
  6135                           	psect	maintext
  6136  361D                     __pmaintext:	
  6137 ;;
  6138 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6139 ;;
  6140 ;; *************** function _main *****************
  6141 ;; Defined at:
  6142 ;;		line 56 in file "../src/main.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  freezer_enab    1   77[BANK2 ] unsigned char 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : B1F/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;Total ram usage:        2 bytes
  6161 ;; Hardware stack levels required when called:   19
  6162 ;; This function calls:
  6163 ;;		_DemoOutput_Greeting
  6164 ;;		_InitSymbolTimer
  6165 ;;		_Initialize_Demo
  6166 ;;		_Run_Demo
  6167 ;;		_SYSTEM_Initialize
  6168 ;;		_freezer_feature
  6169 ;; This function is called by:
  6170 ;;		Startup code after reset
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function _main
  6176  361D                     _main:	
  6177                           
  6178                           ;main.c: 58: bool freezer_enable = 0;
  6179                           
  6180                           ;incstack = 0
  6181 ;; hardware stack exceeded
  6182                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6183  361D  0022               	movlb	2	; select bank2
  6184  361E  01ED               	clrf	main@freezer_enable^(0+256)
  6185                           
  6186                           ;main.c: 60: SYSTEM_Initialize();
  6187  361F  31AA  22C7  31B6   	fcall	_SYSTEM_Initialize
  6188                           
  6189                           ;main.c: 66: InitSymbolTimer ();
  6190  3622  31B5  253B  31B6   	fcall	_InitSymbolTimer
  6191                           
  6192                           ;main.c: 68: DemoOutput_Greeting();
  6193  3625  31B5  2525  31B6   	fcall	_DemoOutput_Greeting
  6194                           
  6195                           ;main.c: 72: freezer_enable = freezer_feature();
  6196  3628  31AF  279F  31B6   	fcall	_freezer_feature
  6197  362B  0022               	movlb	2	; select bank2
  6198  362C  00EC               	movwf	??_main^(0+256)
  6199  362D  086C               	movf	??_main^(0+256),w
  6200  362E  00ED               	movwf	main@freezer_enable^(0+256)
  6201                           
  6202                           ;main.c: 76: Initialize_Demo(freezer_enable);
  6203  362F  086D               	movf	main@freezer_enable^(0+256),w
  6204  3630  31A3  232D  31B6   	fcall	_Initialize_Demo
  6205  3633                     l8379:	
  6206                           ;main.c: 77: while(1)
  6207                           
  6208                           
  6209                           ;main.c: 78: {
  6210                           ;main.c: 80: Run_Demo();
  6211  3633  31B4  24F4  31B6   	fcall	_Run_Demo
  6212  3636  2E33               	goto	l8379
  6213  3637                     __end_of_main:	
  6214                           
  6215                           	psect	text1
  6216  2F9F                     __ptext1:	
  6217 ;; *************** function _freezer_feature *****************
  6218 ;; Defined at:
  6219 ;;		line 62 in file "../src/task.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  tick2           4   67[BANK1 ] struct _MIWI_TICK
  6224 ;;  tick1           4   63[BANK1 ] struct _MIWI_TICK
  6225 ;;  switch_val      1   71[BANK1 ] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      unsigned char 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;Total ram usage:       17 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:   10
  6242 ;; This function calls:
  6243 ;;		_ButtonPressed
  6244 ;;		_DELAY_ms
  6245 ;;		_LCDDisplay
  6246 ;;		_MiWi_TickGet
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           
  6253                           ;psect for function _freezer_feature
  6254  2F9F                     _freezer_feature:	
  6255                           
  6256                           ;task.c: 64: MIWI_TICK tick1, tick2;
  6257                           ;task.c: 65: uint8_t switch_val;
  6258                           ;task.c: 66: tick1 = MiWi_TickGet();
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in _freezer_feature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6262  2F9F  31AB  23D9  31AF   	fcall	_MiWi_TickGet
  6263  2FA2  0021               	movlb	1	; select bank1
  6264  2FA3  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  6265  2FA4  00E2               	movwf	(freezer_feature@tick1+3)^(0+128)
  6266  2FA5  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  6267  2FA6  00E1               	movwf	(freezer_feature@tick1+2)^(0+128)
  6268  2FA7  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  6269  2FA8  00E0               	movwf	(freezer_feature@tick1+1)^(0+128)
  6270  2FA9  0820               	movf	?_MiWi_TickGet^(0+128),w
  6271  2FAA  00DF               	movwf	freezer_feature@tick1^(0+128)
  6272                           
  6273                           ;task.c: 68: {
  6274                           ;task.c: 69: tick2 = MiWi_TickGet();
  6275                           
  6276                           ;task.c: 67: while(1)
  6277  2FAB  31AB  23D9  31AF   	fcall	_MiWi_TickGet
  6278  2FAE  0021               	movlb	1	; select bank1
  6279  2FAF  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  6280  2FB0  00E6               	movwf	(freezer_feature@tick2+3)^(0+128)
  6281  2FB1  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  6282  2FB2  00E5               	movwf	(freezer_feature@tick2+2)^(0+128)
  6283  2FB3  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  6284  2FB4  00E4               	movwf	(freezer_feature@tick2+1)^(0+128)
  6285  2FB5  0820               	movf	?_MiWi_TickGet^(0+128),w
  6286  2FB6  00E3               	movwf	freezer_feature@tick2^(0+128)
  6287                           
  6288                           ;task.c: 70: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
  6289  2FB7  0863               	movf	freezer_feature@tick2^(0+128),w
  6290  2FB8  00D7               	movwf	??_freezer_feature^(0+128)
  6291  2FB9  0864               	movf	(freezer_feature@tick2+1)^(0+128),w
  6292  2FBA  00D8               	movwf	(??_freezer_feature^(0+128)+1)
  6293  2FBB  0865               	movf	(freezer_feature@tick2+2)^(0+128),w
  6294  2FBC  00D9               	movwf	(??_freezer_feature^(0+128)+2)
  6295  2FBD  0866               	movf	(freezer_feature@tick2+3)^(0+128),w
  6296  2FBE  00DA               	movwf	(??_freezer_feature^(0+128)+3)
  6297  2FBF  095F               	comf	freezer_feature@tick1^(0+128),w
  6298  2FC0  00DB               	movwf	(??_freezer_feature+4)^(0+128)
  6299  2FC1  0960               	comf	(freezer_feature@tick1+1)^(0+128),w
  6300  2FC2  00DC               	movwf	((??_freezer_feature+4)^(0+128)+1)
  6301  2FC3  0961               	comf	(freezer_feature@tick1+2)^(0+128),w
  6302  2FC4  00DD               	movwf	((??_freezer_feature+4)^(0+128)+2)
  6303  2FC5  0962               	comf	(freezer_feature@tick1+3)^(0+128),w
  6304  2FC6  00DE               	movwf	((??_freezer_feature+4)^(0+128)+3)
  6305  2FC7  0ADB               	incf	(??_freezer_feature+4)^(0+128),f
  6306  2FC8  1903               	skipnz
  6307  2FC9  0ADC               	incf	((??_freezer_feature+4)^(0+128)+1),f
  6308  2FCA  1903               	skipnz
  6309  2FCB  0ADD               	incf	((??_freezer_feature+4)^(0+128)+2),f
  6310  2FCC  1903               	skipnz
  6311  2FCD  0ADE               	incf	((??_freezer_feature+4)^(0+128)+3),f
  6312  2FCE  085B               	movf	(??_freezer_feature+4)^(0+128),w
  6313  2FCF  07D7               	addwf	??_freezer_feature^(0+128),f
  6314  2FD0  085C               	movf	(??_freezer_feature+5)^(0+128),w
  6315  2FD1  3DD8               	addwfc	(??_freezer_feature^(0+128)+1),f
  6316  2FD2  085D               	movf	(??_freezer_feature+6)^(0+128),w
  6317  2FD3  3DD9               	addwfc	(??_freezer_feature^(0+128)+2),f
  6318  2FD4  085E               	movf	(??_freezer_feature+7)^(0+128),w
  6319  2FD5  3DDA               	addwfc	(??_freezer_feature^(0+128)+3),f
  6320  2FD6  085A               	movf	(??_freezer_feature^(0+128)+3),w
  6321  2FD7  1D03               	btfss	3,2
  6322  2FD8  0008               	return
  6323  2FD9  30D1               	movlw	209
  6324  2FDA  0257               	subwf	??_freezer_feature^(0+128),w
  6325  2FDB  3012               	movlw	18
  6326  2FDC  3B58               	subwfb	(??_freezer_feature^(0+128)+1),w
  6327  2FDD  3013               	movlw	19
  6328  2FDE  3B59               	subwfb	(??_freezer_feature^(0+128)+2),w
  6329  2FDF  1803               	btfsc	3,0
  6330  2FE0  0008               	return
  6331                           
  6332                           ;task.c: 72: switch_val = ButtonPressed ();
  6333                           
  6334                           ;task.c: 71: break;
  6335  2FE1  31A5  2588  31AF   	fcall	_ButtonPressed
  6336  2FE4  0021               	movlb	1	; select bank1
  6337  2FE5  00D7               	movwf	??_freezer_feature^(0+128)
  6338  2FE6  0857               	movf	??_freezer_feature^(0+128),w
  6339  2FE7  00E7               	movwf	freezer_feature@switch_val^(0+128)
  6340                           
  6341                           ;task.c: 73: if(switch_val == 2)
  6342  2FE8  3002               	movlw	2
  6343  2FE9  0667               	xorwf	freezer_feature@switch_val^(0+128),w
  6344  2FEA  1D03               	btfss	3,2
  6345  2FEB  2FFE               	goto	l7917
  6346                           
  6347                           ;task.c: 74: {
  6348                           ;task.c: 75: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  6349  2FEC  30FF               	movlw	low (STR_13| (0+32768))
  6350  2FED  00D0               	movwf	LCDDisplay@text^(0+128)
  6351  2FEE  30A1               	movlw	high (STR_13| (0+32768))
  6352  2FEF  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
  6353  2FF0  01D2               	clrf	LCDDisplay@value^(0+128)
  6354  2FF1  01D3               	clrf	LCDDisplay@delay^(0+128)
  6355  2FF2  31A9  21B5  31AF   	fcall	_LCDDisplay
  6356                           
  6357                           ;task.c: 76: DELAY_ms(1000);
  6358  2FF5  30E8               	movlw	232
  6359  2FF6  0021               	movlb	1	; select bank1
  6360  2FF7  00AC               	movwf	DELAY_ms@ms^(0+128)
  6361  2FF8  3003               	movlw	3
  6362  2FF9  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6363  2FFA  31AC  2423         	fcall	_DELAY_ms
  6364                           
  6365                           ;task.c: 77: return 1;
  6366  2FFC  3001               	movlw	1
  6367  2FFD  0008               	return
  6368  2FFE                     l7917:	
  6369                           ;task.c: 78: }
  6370                           
  6371                           
  6372                           ;task.c: 79: else
  6373                           ;task.c: 80: {
  6374                           ;task.c: 81: return 0;
  6375  2FFE  3000               	movlw	0
  6376  2FFF  0008               	return
  6377  3000                     __end_of_freezer_feature:	
  6378                           
  6379                           	psect	text2
  6380  2AC7                     __ptext2:	
  6381 ;; *************** function _SYSTEM_Initialize *****************
  6382 ;; Defined at:
  6383 ;;		line 65 in file "../src/system_config/pic18exp_pic16f1947_89xa/system.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;		None
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    9
  6404 ;; This function calls:
  6405 ;;		_LCD_Initialize
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _SYSTEM_Initialize
  6413  2AC7                     _SYSTEM_Initialize:	
  6414                           
  6415                           ;system.c: 69: OSCCON = 0x70;
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6419  2AC7  3070               	movlw	112
  6420  2AC8  0021               	movlb	1	; select bank1
  6421  2AC9  0099               	movwf	25	;volatile
  6422                           
  6423                           ;system.c: 79: ANSELA = 0;
  6424  2ACA  0023               	movlb	3	; select bank3
  6425  2ACB  018C               	clrf	12	;volatile
  6426                           
  6427                           ;system.c: 82: TRISA = 0xFF;
  6428  2ACC  30FF               	movlw	255
  6429  2ACD  0021               	movlb	1	; select bank1
  6430  2ACE  008C               	movwf	12	;volatile
  6431                           
  6432                           ;system.c: 83: TRISB = 0xFF;
  6433  2ACF  30FF               	movlw	255
  6434  2AD0  008D               	movwf	13	;volatile
  6435                           
  6436                           ;system.c: 84: TRISC = 0xFF;
  6437  2AD1  30FF               	movlw	255
  6438  2AD2  008E               	movwf	14	;volatile
  6439                           
  6440                           ;system.c: 85: TRISD = 0x00;
  6441  2AD3  018F               	clrf	15	;volatile
  6442                           
  6443                           ;system.c: 87: LATA = 0;
  6444  2AD4  0022               	movlb	2	; select bank2
  6445  2AD5  018C               	clrf	12	;volatile
  6446                           
  6447                           ;system.c: 88: LATB = 0;
  6448  2AD6  018D               	clrf	13	;volatile
  6449                           
  6450                           ;system.c: 89: LATC = 0;
  6451  2AD7  018E               	clrf	14	;volatile
  6452                           
  6453                           ;system.c: 90: LATD = 0;
  6454  2AD8  018F               	clrf	15	;volatile
  6455                           
  6456                           ;system.c: 93: TRISBbits.TRISB0 = 1;
  6457  2AD9  0021               	movlb	1	; select bank1
  6458  2ADA  140D               	bsf	13,0	;volatile
  6459                           
  6460                           ;system.c: 94: TRISAbits.TRISA5 = 1;
  6461  2ADB  168C               	bsf	12,5	;volatile
  6462                           
  6463                           ;system.c: 95: TRISDbits.TRISD7 = 0;
  6464  2ADC  138F               	bcf	15,7	;volatile
  6465                           
  6466                           ;system.c: 96: TRISDbits.TRISD6 = 0;
  6467  2ADD  130F               	bcf	15,6	;volatile
  6468                           
  6469                           ;system.c: 101: TRISBbits.TRISB5 = 1;
  6470  2ADE  168D               	bsf	13,5	;volatile
  6471                           
  6472                           ;system.c: 104: TRISCbits.TRISC4 = 1;
  6473  2ADF  160E               	bsf	14,4	;volatile
  6474                           
  6475                           ;system.c: 105: TRISCbits.TRISC5 = 0;
  6476  2AE0  128E               	bcf	14,5	;volatile
  6477                           
  6478                           ;system.c: 106: TRISCbits.TRISC3 = 0;
  6479  2AE1  118E               	bcf	14,3	;volatile
  6480                           
  6481                           ;system.c: 112: SSP1STAT = 0xC0;
  6482  2AE2  30C0               	movlw	192
  6483  2AE3  0024               	movlb	4	; select bank4
  6484  2AE4  0094               	movwf	20	;volatile
  6485                           
  6486                           ;system.c: 113: SSP1CON1 = 0x21;
  6487  2AE5  3021               	movlw	33
  6488  2AE6  0095               	movwf	21	;volatile
  6489                           
  6490                           ;system.c: 124: TRISEbits.TRISE3 = 0;
  6491  2AE7  0021               	movlb	1	; select bank1
  6492  2AE8  1190               	bcf	16,3	;volatile
  6493                           
  6494                           ;system.c: 125: TRISCbits.TRISC2 = 0;
  6495  2AE9  110E               	bcf	14,2	;volatile
  6496                           
  6497                           ;system.c: 126: TRISDbits.TRISD7 = 0;
  6498  2AEA  138F               	bcf	15,7	;volatile
  6499                           
  6500                           ;system.c: 127: TRISDbits.TRISD6 = 0;
  6501  2AEB  130F               	bcf	15,6	;volatile
  6502                           
  6503                           ;system.c: 128: IOCBFbits.IOCBF3 = 0;
  6504  2AEC  0027               	movlb	7	; select bank7
  6505  2AED  1196               	bcf	22,3	;volatile
  6506                           
  6507                           ;system.c: 129: INTCONbits.IOCIE = 1;
  6508  2AEE  158B               	bsf	11,3	;volatile
  6509                           
  6510                           ;system.c: 135: LATEbits.LATE3 = 1;
  6511  2AEF  0022               	movlb	2	; select bank2
  6512  2AF0  1590               	bsf	16,3	;volatile
  6513                           
  6514                           ;system.c: 136: LATCbits.LATC2 = 1;
  6515  2AF1  150E               	bsf	14,2	;volatile
  6516                           
  6517                           ;system.c: 141: SSP1STAT = 0x40;
  6518  2AF2  3040               	movlw	64
  6519  2AF3  0024               	movlb	4	; select bank4
  6520  2AF4  0094               	movwf	20	;volatile
  6521                           
  6522                           ;system.c: 142: SSP1CON1 = 0x21;
  6523  2AF5  3021               	movlw	33
  6524  2AF6  0095               	movwf	21	;volatile
  6525                           
  6526                           ;system.c: 145: IOCBNbits.IOCBN3 = 1;
  6527  2AF7  0027               	movlb	7	; select bank7
  6528  2AF8  1595               	bsf	21,3	;volatile
  6529                           
  6530                           ;system.c: 151: TRISAbits.TRISA3 = 0;
  6531  2AF9  0021               	movlb	1	; select bank1
  6532  2AFA  118C               	bcf	12,3	;volatile
  6533                           
  6534                           ;system.c: 152: LATAbits.LATA3 = 1;
  6535  2AFB  0022               	movlb	2	; select bank2
  6536  2AFC  158C               	bsf	12,3	;volatile
  6537                           
  6538                           ;system.c: 158: TRISEbits.TRISE2 = 0;
  6539  2AFD  0021               	movlb	1	; select bank1
  6540  2AFE  1110               	bcf	16,2	;volatile
  6541                           
  6542                           ;system.c: 159: LATEbits.LATE2 = 1;
  6543  2AFF  0022               	movlb	2	; select bank2
  6544  2B00  1510               	bsf	16,2	;volatile
  6545                           
  6546                           ;system.c: 165: INTCONbits.GIE = 1;
  6547  2B01  178B               	bsf	11,7	;volatile
  6548                           
  6549                           ;system.c: 166: INTCONbits.PEIE = 1;
  6550  2B02  170B               	bsf	11,6	;volatile
  6551                           
  6552                           ;system.c: 167: INTCONbits.IOCIE = 1;
  6553  2B03  158B               	bsf	11,3	;volatile
  6554                           
  6555                           ;system.c: 170: LCD_Initialize();
  6556  2B04  31AF  2748         	fcall	_LCD_Initialize
  6557  2B06  0008               	return
  6558  2B07                     __end_of_SYSTEM_Initialize:	
  6559                           
  6560                           	psect	text3
  6561  2F48                     __ptext3:	
  6562 ;; *************** function _LCD_Initialize *****************
  6563 ;; Defined at:
  6564 ;;		line 207 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0, pclath, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    8
  6585 ;; This function calls:
  6586 ;;		_DELAY_ms
  6587 ;;		_LCDInitPortA
  6588 ;;		_LCDInitPortB
  6589 ;;		_LCDInitSPI
  6590 ;;		_LCDInitWrite
  6591 ;;		_LCDWritePortA
  6592 ;; This function is called by:
  6593 ;;		_SYSTEM_Initialize
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           
  6598                           ;psect for function _LCD_Initialize
  6599  2F48                     _LCD_Initialize:	
  6600                           
  6601                           ;lcd.c: 210: (TRISAbits.TRISA2) = 0;
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6605  2F48  0021               	movlb	1	; select bank1
  6606  2F49  110C               	bcf	12,2	;volatile
  6607                           
  6608                           ;lcd.c: 211: (LATAbits.LATA2) = 1;
  6609  2F4A  0022               	movlb	2	; select bank2
  6610  2F4B  150C               	bsf	12,2	;volatile
  6611                           
  6612                           ;lcd.c: 212: DELAY_ms(10);
  6613  2F4C  300A               	movlw	10
  6614  2F4D  0021               	movlb	1	; select bank1
  6615  2F4E  00AC               	movwf	DELAY_ms@ms^(0+128)
  6616  2F4F  3000               	movlw	0
  6617  2F50  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6618  2F51  31AC  2423  31AF   	fcall	_DELAY_ms
  6619                           
  6620                           ;lcd.c: 214: (TRISFbits.TRISF6) = 0;
  6621  2F54  0026               	movlb	6	; select bank6
  6622  2F55  130C               	bcf	12,6	;volatile
  6623                           
  6624                           ;lcd.c: 215: (LATFbits.LATF6) = 0;
  6625  2F56  0027               	movlb	7	; select bank7
  6626  2F57  130C               	bcf	12,6	;volatile
  6627                           
  6628                           ;lcd.c: 216: DELAY_ms(10);
  6629  2F58  300A               	movlw	10
  6630  2F59  0021               	movlb	1	; select bank1
  6631  2F5A  00AC               	movwf	DELAY_ms@ms^(0+128)
  6632  2F5B  3000               	movlw	0
  6633  2F5C  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6634  2F5D  31AC  2423  31AF   	fcall	_DELAY_ms
  6635                           
  6636                           ;lcd.c: 217: (LATFbits.LATF6) = 1;
  6637  2F60  0027               	movlb	7	; select bank7
  6638  2F61  170C               	bsf	12,6	;volatile
  6639                           
  6640                           ;lcd.c: 220: LCDInitSPI();
  6641  2F62  31A8  2000  31AF   	fcall	_LCDInitSPI
  6642                           
  6643                           ;lcd.c: 223: LCDInitPortA();
  6644  2F65  31B6  26C0  31AF   	fcall	_LCDInitPortA
  6645                           
  6646                           ;lcd.c: 226: LCDInitPortB();
  6647  2F68  3188  2001  31AF   	fcall	_LCDInitPortB
  6648                           
  6649                           ;lcd.c: 228: LCDWritePortA(0);
  6650  2F6B  3000               	movlw	0
  6651  2F6C  31B6  26DC  31AF   	fcall	_LCDWritePortA
  6652                           
  6653                           ;lcd.c: 231: DELAY_ms(10);
  6654  2F6F  300A               	movlw	10
  6655  2F70  0021               	movlb	1	; select bank1
  6656  2F71  00AC               	movwf	DELAY_ms@ms^(0+128)
  6657  2F72  3000               	movlw	0
  6658  2F73  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6659  2F74  31AC  2423  31AF   	fcall	_DELAY_ms
  6660                           
  6661                           ;lcd.c: 232: LCDInitWrite(0x3C);
  6662  2F77  303C               	movlw	60
  6663  2F78  31B7  2718  31AF   	fcall	_LCDInitWrite
  6664                           
  6665                           ;lcd.c: 234: DELAY_ms(10);
  6666  2F7B  300A               	movlw	10
  6667  2F7C  0021               	movlb	1	; select bank1
  6668  2F7D  00AC               	movwf	DELAY_ms@ms^(0+128)
  6669  2F7E  3000               	movlw	0
  6670  2F7F  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6671  2F80  31AC  2423  31AF   	fcall	_DELAY_ms
  6672                           
  6673                           ;lcd.c: 235: LCDInitWrite(0x0C);
  6674  2F83  300C               	movlw	12
  6675  2F84  31B7  2718  31AF   	fcall	_LCDInitWrite
  6676                           
  6677                           ;lcd.c: 237: DELAY_ms(10);
  6678  2F87  300A               	movlw	10
  6679  2F88  0021               	movlb	1	; select bank1
  6680  2F89  00AC               	movwf	DELAY_ms@ms^(0+128)
  6681  2F8A  3000               	movlw	0
  6682  2F8B  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6683  2F8C  31AC  2423  31AF   	fcall	_DELAY_ms
  6684                           
  6685                           ;lcd.c: 238: LCDInitWrite(0x01);
  6686  2F8F  3001               	movlw	1
  6687  2F90  31B7  2718  31AF   	fcall	_LCDInitWrite
  6688                           
  6689                           ;lcd.c: 240: DELAY_ms(10);
  6690  2F93  300A               	movlw	10
  6691  2F94  0021               	movlb	1	; select bank1
  6692  2F95  00AC               	movwf	DELAY_ms@ms^(0+128)
  6693  2F96  3000               	movlw	0
  6694  2F97  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6695  2F98  31AC  2423  31AF   	fcall	_DELAY_ms
  6696                           
  6697                           ;lcd.c: 241: LCDInitWrite(0x0C);
  6698  2F9B  300C               	movlw	12
  6699  2F9C  31B7  2718         	fcall	_LCDInitWrite
  6700  2F9E  0008               	return
  6701  2F9F                     __end_of_LCD_Initialize:	
  6702                           
  6703                           	psect	text4
  6704  2800                     __ptext4:	
  6705 ;; *************** function _LCDInitSPI *****************
  6706 ;; Defined at:
  6707 ;;		line 41 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		None
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    5
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_LCD_Initialize
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _LCDInitSPI
  6737  2800                     _LCDInitSPI:	
  6738                           
  6739                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _LCDInitSPI: []
  6743  2800  0021               	movlb	1	; select bank1
  6744  2801  128E               	bcf	14,5	;volatile
  6745                           
  6746                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
  6747  2802  118E               	bcf	14,3	;volatile
  6748                           
  6749                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
  6750  2803  0020               	movlb	0	; select bank0
  6751  2804  1191               	bcf	17,3	;volatile
  6752  2805  0008               	return
  6753  2806                     __end_of_LCDInitSPI:	
  6754                           
  6755                           	psect	text5
  6756  0801                     __ptext5:	
  6757 ;; *************** function _LCDInitPortB *****************
  6758 ;; Defined at:
  6759 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  preRFIE         1    3[BANK1 ] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0, pclath, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;Total ram usage:        1 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    6
  6780 ;; This function calls:
  6781 ;;		_SPIPut
  6782 ;; This function is called by:
  6783 ;;		_LCD_Initialize
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function _LCDInitPortB
  6789  0801                     _LCDInitPortB:	
  6790                           
  6791                           ;lcd.c: 62: uint8_t preRFIE = INTCONbits.IOCIE;
  6792                           
  6793                           ;incstack = 0
  6794                           ; Regs used in _LCDInitPortB: [wreg+status,2+status,0+pclath+cstack]
  6795  0801  3000               	movlw	0
  6796  0802  198B               	btfsc	11,3	;volatile
  6797  0803  3001               	movlw	1
  6798  0804  0021               	movlb	1	; select bank1
  6799  0805  00A3               	movwf	LCDInitPortB@preRFIE^(0+128)
  6800                           
  6801                           ;lcd.c: 63: INTCONbits.IOCIE = 0;
  6802  0806  118B               	bcf	11,3	;volatile
  6803                           
  6804                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  6805  0807  0022               	movlb	2	; select bank2
  6806  0808  110C               	bcf	12,2	;volatile
  6807                           
  6808                           ;lcd.c: 65: SPIPut(0x40);
  6809  0809  3040               	movlw	64
  6810  080A  31B5  25D3  3188   	fcall	_SPIPut
  6811                           
  6812                           ;lcd.c: 66: SPIPut(0x01);
  6813  080D  3001               	movlw	1
  6814  080E  31B5  25D3  3188   	fcall	_SPIPut
  6815                           
  6816                           ;lcd.c: 67: SPIPut(0x00);
  6817  0811  3000               	movlw	0
  6818  0812  31B5  25D3         	fcall	_SPIPut
  6819                           
  6820                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  6821  0814  0022               	movlb	2	; select bank2
  6822  0815  150C               	bsf	12,2	;volatile
  6823                           
  6824                           ;lcd.c: 69: INTCONbits.IOCIE = preRFIE;
  6825  0816  0021               	movlb	1	; select bank1
  6826  0817  0C23               	rrf	LCDInitPortB@preRFIE^(0+128),w
  6827  0818  1C03               	skipc
  6828  0819  118B               	bcf	11,3	;volatile
  6829  081A  1803               	skipnc
  6830  081B  158B               	bsf	11,3	;volatile
  6831  081C  0008               	return
  6832  081D                     __end_of_LCDInitPortB:	
  6833                           
  6834                           	psect	text6
  6835  36C0                     __ptext6:	
  6836 ;; *************** function _LCDInitPortA *****************
  6837 ;; Defined at:
  6838 ;;		line 48 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  preRFIE         1    3[BANK1 ] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0, pclath, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;Total ram usage:        1 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    6
  6859 ;; This function calls:
  6860 ;;		_SPIPut
  6861 ;; This function is called by:
  6862 ;;		_LCD_Initialize
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           
  6867                           ;psect for function _LCDInitPortA
  6868  36C0                     _LCDInitPortA:	
  6869                           
  6870                           ;lcd.c: 50: uint8_t preRFIE = INTCONbits.IOCIE;
  6871                           
  6872                           ;incstack = 0
  6873                           ; Regs used in _LCDInitPortA: [wreg+status,2+status,0+pclath+cstack]
  6874  36C0  3000               	movlw	0
  6875  36C1  198B               	btfsc	11,3	;volatile
  6876  36C2  3001               	movlw	1
  6877  36C3  0021               	movlb	1	; select bank1
  6878  36C4  00A3               	movwf	LCDInitPortA@preRFIE^(0+128)
  6879                           
  6880                           ;lcd.c: 51: INTCONbits.IOCIE = 0;
  6881  36C5  118B               	bcf	11,3	;volatile
  6882                           
  6883                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  6884  36C6  0022               	movlb	2	; select bank2
  6885  36C7  110C               	bcf	12,2	;volatile
  6886                           
  6887                           ;lcd.c: 53: SPIPut(0x40);
  6888  36C8  3040               	movlw	64
  6889  36C9  31B5  25D3  31B6   	fcall	_SPIPut
  6890                           
  6891                           ;lcd.c: 54: SPIPut(0x00);
  6892  36CC  3000               	movlw	0
  6893  36CD  31B5  25D3  31B6   	fcall	_SPIPut
  6894                           
  6895                           ;lcd.c: 55: SPIPut(0x00);
  6896  36D0  3000               	movlw	0
  6897  36D1  31B5  25D3         	fcall	_SPIPut
  6898                           
  6899                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  6900  36D3  0022               	movlb	2	; select bank2
  6901  36D4  150C               	bsf	12,2	;volatile
  6902                           
  6903                           ;lcd.c: 57: INTCONbits.IOCIE = preRFIE;
  6904  36D5  0021               	movlb	1	; select bank1
  6905  36D6  0C23               	rrf	LCDInitPortA@preRFIE^(0+128),w
  6906  36D7  1C03               	skipc
  6907  36D8  118B               	bcf	11,3	;volatile
  6908  36D9  1803               	skipnc
  6909  36DA  158B               	bsf	11,3	;volatile
  6910  36DB  0008               	return
  6911  36DC                     __end_of_LCDInitPortA:	
  6912                           
  6913                           	psect	text7
  6914  34F4                     __ptext7:	
  6915 ;; *************** function _Run_Demo *****************
  6916 ;; Defined at:
  6917 ;;		line 238 in file "../src/task.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:   18
  6938 ;; This function calls:
  6939 ;;		_run_star_demo
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           
  6946                           ;psect for function _Run_Demo
  6947  34F4                     _Run_Demo:	
  6948                           
  6949                           ;task.c: 244: run_star_demo();
  6950                           
  6951                           ;incstack = 0
  6952 ;; hardware stack exceeded
  6953                           ; Regs used in _Run_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6954  34F4  319C  2401         	fcall	_run_star_demo
  6955  34F6  0008               	return
  6956  34F7                     __end_of_Run_Demo:	
  6957                           
  6958                           	psect	text8
  6959  1C01                     __ptext8:	
  6960 ;; *************** function _run_star_demo *****************
  6961 ;; Defined at:
  6962 ;;		line 90 in file "../src/star_demo.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  switch_val      1   74[BANK2 ] unsigned char 
  6967 ;;  sw_layer_ack    1   71[BANK2 ] unsigned char 
  6968 ;;  mac_ack_stat    1   70[BANK2 ] unsigned char 
  6969 ;;  select_ed       1   75[BANK2 ] unsigned char 
  6970 ;;  update_ed       1   72[BANK2 ] unsigned char 
  6971 ;;  PressedButto    1   73[BANK2 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;Total ram usage:       18 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:   17
  6988 ;; This function calls:
  6989 ;;		_ButtonPressed
  6990 ;;		_DELAY_ms
  6991 ;;		_DemoOutput_UpdateTxRx
  6992 ;;		_LCDDisplay
  6993 ;;		_LCD_Erase
  6994 ;;		_LCD_Update
  6995 ;;		_MiApp_BroadcastPacket
  6996 ;;		_MiApp_EstablishConnection
  6997 ;;		_MiApp_UnicastConnection
  6998 ;;		_MiApp_UnicastStar
  6999 ;;		_MiWi_TickGet
  7000 ;;		_Process_RxMessage
  7001 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  7002 ;;		___awmod
  7003 ;;		___wmul
  7004 ;;		_sprintf
  7005 ;; This function is called by:
  7006 ;;		_Run_Demo
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _run_star_demo
  7012  1C01                     _run_star_demo:	
  7013                           
  7014                           ;star_demo.c: 92: t1 = MiWi_TickGet ();
  7015                           
  7016                           ;incstack = 0
  7017 ;; hardware stack exceeded
  7018                           ; Regs used in _run_star_demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7019  1C01  31AB  23D9  319C   	fcall	_MiWi_TickGet
  7020  1C04  0021               	movlb	1	; select bank1
  7021  1C05  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  7022  1C06  0023               	movlb	3	; select bank3
  7023  1C07  00BD               	movwf	(_t1+3)^(0+384)
  7024  1C08  0021               	movlb	1	; select bank1
  7025  1C09  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  7026  1C0A  0023               	movlb	3	; select bank3
  7027  1C0B  00BC               	movwf	(_t1+2)^(0+384)
  7028  1C0C  0021               	movlb	1	; select bank1
  7029  1C0D  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  7030  1C0E  0023               	movlb	3	; select bank3
  7031  1C0F  00BB               	movwf	(_t1+1)^(0+384)
  7032  1C10  0021               	movlb	1	; select bank1
  7033  1C11  0820               	movf	?_MiWi_TickGet^(0+128),w
  7034  1C12  0023               	movlb	3	; select bank3
  7035  1C13  00BA               	movwf	_t1^(0+384)
  7036                           
  7037                           ;star_demo.c: 93: display_connections = 1;
  7038  1C14  01D5               	clrf	_display_connections^(0+384)
  7039  1C15  0AD5               	incf	_display_connections^(0+384),f
  7040  1C16                     l7697:	
  7041                           ;star_demo.c: 94: while(display_connections)
  7042                           
  7043  1C16  0023               	movlb	3	; select bank3
  7044  1C17  0855               	movf	_display_connections^(0+384),w
  7045  1C18  1903               	btfsc	3,2
  7046  1C19  0008               	return
  7047                           
  7048                           ;star_demo.c: 95: {
  7049                           ;star_demo.c: 97: if (Process_RxMessage ())
  7050  1C1A  31AE  264B  319C   	fcall	_Process_RxMessage
  7051  1C1D  3A00               	xorlw	0
  7052  1C1E  1D03               	btfss	3,2
  7053  1C1F  2F78               	goto	l7671
  7054                           
  7055                           ;star_demo.c: 101: else
  7056                           ;star_demo.c: 102: {
  7057                           ;star_demo.c: 110: uint8_t PressedButton = ButtonPressed();
  7058                           
  7059                           ;star_demo.c: 98: {
  7060                           ;star_demo.c: 100: }
  7061  1C20  31A5  2588  319C   	fcall	_ButtonPressed
  7062  1C23  0022               	movlb	2	; select bank2
  7063  1C24  00DA               	movwf	??_run_star_demo^(0+256)
  7064  1C25  085A               	movf	??_run_star_demo^(0+256),w
  7065  1C26  00E9               	movwf	run_star_demo@PressedButton^(0+256)
  7066                           
  7067                           ;star_demo.c: 111: if ( PressedButton == 1 || PressedButton == 2)
  7068  1C27  0369               	decf	run_star_demo@PressedButton^(0+256),w
  7069  1C28  1903               	btfsc	3,2
  7070  1C29  2C2E               	goto	l7543
  7071  1C2A  3002               	movlw	2
  7072  1C2B  0669               	xorwf	run_star_demo@PressedButton^(0+256),w
  7073  1C2C  1D03               	btfss	3,2
  7074  1C2D  2F78               	goto	l7671
  7075  1C2E                     l7543:	
  7076                           
  7077                           ;star_demo.c: 112: {
  7078                           ;star_demo.c: 114: if (role)
  7079  1C2E  086F               	movf	_role^(0+256),w
  7080  1C2F  1903               	btfsc	3,2
  7081  1C30  2CA0               	goto	l7565
  7082                           
  7083                           ;star_demo.c: 115: {
  7084                           ;star_demo.c: 123: {TxData = 0;};
  7085  1C31  01EE               	clrf	_TxData^(0+256)
  7086                           
  7087                           ;star_demo.c: 124: for(i = 0; i < 21; i++)
  7088  1C32  0020               	movlb	0	; select bank0
  7089  1C33  01E4               	clrf	_i
  7090  1C34  3015               	movlw	21
  7091  1C35  0264               	subwf	_i,w
  7092  1C36  1803               	btfsc	3,0
  7093  1C37  2C84               	goto	l7559
  7094  1C38                     l7551:	
  7095                           
  7096                           ;star_demo.c: 125: {
  7097                           ;star_demo.c: 126: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  7098  1C38  0861               	movf	_TxSynCount,w
  7099  1C39  0022               	movlb	2	; select bank2
  7100  1C3A  00DA               	movwf	??_run_star_demo^(0+256)
  7101  1C3B  01DB               	clrf	(??_run_star_demo^(0+256)+1)
  7102  1C3C  085A               	movf	??_run_star_demo^(0+256),w
  7103  1C3D  0021               	movlb	1	; select bank1
  7104  1C3E  00A2               	movwf	___awmod@dividend^(0+128)
  7105  1C3F  0022               	movlb	2	; select bank2
  7106  1C40  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7107  1C41  0021               	movlb	1	; select bank1
  7108  1C42  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  7109  1C43  3006               	movlw	6
  7110  1C44  00A0               	movwf	___awmod@divisor^(0+128)
  7111  1C45  3000               	movlw	0
  7112  1C46  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  7113  1C47  31AB  234A  319C   	fcall	___awmod
  7114  1C4A  0021               	movlb	1	; select bank1
  7115  1C4B  0821               	movf	(?___awmod+1)^(0+128),w
  7116  1C4C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  7117  1C4D  0820               	movf	?___awmod^(0+128),w
  7118  1C4E  00A7               	movwf	___wmul@multiplier^(0+128)
  7119  1C4F  3015               	movlw	21
  7120  1C50  00A9               	movwf	___wmul@multiplicand^(0+128)
  7121  1C51  3000               	movlw	0
  7122  1C52  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  7123  1C53  31B6  26A4  319C   	fcall	___wmul
  7124  1C56  3000               	movlw	low (_MiWi| (0+32768))
  7125  1C57  0022               	movlb	2	; select bank2
  7126  1C58  00DC               	movwf	(??_run_star_demo+2)^(0+256)
  7127  1C59  30A0               	movlw	high (_MiWi| (0+32768))
  7128  1C5A  00DD               	movwf	((??_run_star_demo+2)^(0+256)+1)
  7129  1C5B  0021               	movlb	1	; select bank1
  7130  1C5C  0827               	movf	?___wmul^(0+128),w
  7131  1C5D  0022               	movlb	2	; select bank2
  7132  1C5E  075C               	addwf	(??_run_star_demo+2)^(0+256),w
  7133  1C5F  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7134  1C60  0021               	movlb	1	; select bank1
  7135  1C61  0828               	movf	(?___wmul+1)^(0+128),w
  7136  1C62  0022               	movlb	2	; select bank2
  7137  1C63  3D5D               	addwfc	(??_run_star_demo+3)^(0+256),w
  7138  1C64  00DF               	movwf	(??_run_star_demo+5)^(0+256)
  7139  1C65  0020               	movlb	0	; select bank0
  7140  1C66  0864               	movf	_i,w
  7141  1C67  0022               	movlb	2	; select bank2
  7142  1C68  075E               	addwf	(??_run_star_demo+4)^(0+256),w
  7143  1C69  0084               	movwf	4
  7144  1C6A  085F               	movf	((??_run_star_demo+4)^(0+256)+1),w
  7145  1C6B  1803               	skipnc
  7146  1C6C  0A5F               	incf	((??_run_star_demo+4)^(0+256)+1),w
  7147  1C6D  0085               	movwf	5
  7148  1C6E  0800               	movf	0,w	;code access
  7149  1C6F  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7150  1C70  086E               	movf	_TxData^(0+256),w
  7151  1C71  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7152  1C72  0086               	movwf	6
  7153  1C73  3002               	movlw	2	; select bank4/5
  7154  1C74  0087               	movwf	7
  7155  1C75  0860               	movf	(??_run_star_demo+6)^(0+256),w
  7156  1C76  0081               	movwf	1
  7157  1C77  3001               	movlw	1
  7158  1C78  00DA               	movwf	??_run_star_demo^(0+256)
  7159  1C79  085A               	movf	??_run_star_demo^(0+256),w
  7160  1C7A  07EE               	addwf	_TxData^(0+256),f
  7161  1C7B  3001               	movlw	1
  7162  1C7C  00DA               	movwf	??_run_star_demo^(0+256)
  7163  1C7D  085A               	movf	??_run_star_demo^(0+256),w
  7164  1C7E  0020               	movlb	0	; select bank0
  7165  1C7F  07E4               	addwf	_i,f
  7166  1C80  3015               	movlw	21
  7167  1C81  0264               	subwf	_i,w
  7168  1C82  1C03               	skipc
  7169  1C83  2C38               	goto	l7551
  7170  1C84                     l7559:	
  7171                           
  7172                           ;star_demo.c: 127: }
  7173                           ;star_demo.c: 128: TxSynCount++;
  7174  1C84  3001               	movlw	1
  7175  1C85  0022               	movlb	2	; select bank2
  7176  1C86  00DA               	movwf	??_run_star_demo^(0+256)
  7177  1C87  085A               	movf	??_run_star_demo^(0+256),w
  7178  1C88  0020               	movlb	0	; select bank0
  7179  1C89  07E1               	addwf	_TxSynCount,f
  7180                           
  7181                           ;star_demo.c: 145: MiApp_BroadcastPacket (0);
  7182  1C8A  3000               	movlw	0
  7183  1C8B  31B5  2563  319C   	fcall	_MiApp_BroadcastPacket
  7184                           
  7185                           ;star_demo.c: 148: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  7186  1C8E  0020               	movlb	0	; select bank0
  7187  1C8F  085F               	movf	_RxNum,w
  7188  1C90  0022               	movlb	2	; select bank2
  7189  1C91  00DA               	movwf	??_run_star_demo^(0+256)
  7190  1C92  085A               	movf	??_run_star_demo^(0+256),w
  7191  1C93  0021               	movlb	1	; select bank1
  7192  1C94  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  7193  1C95  3001               	movlw	1
  7194  1C96  0022               	movlb	2	; select bank2
  7195  1C97  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7196  1C98  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7197  1C99  0020               	movlb	0	; select bank0
  7198  1C9A  07E0               	addwf	_TxNum,f
  7199  1C9B  0860               	movf	_TxNum,w
  7200  1C9C  31B5  251B  319C   	fcall	_DemoOutput_UpdateTxRx
  7201                           
  7202                           ;star_demo.c: 150: }
  7203  1C9F  2F78               	goto	l7671
  7204  1CA0                     l7565:	
  7205                           
  7206                           ;star_demo.c: 151: else
  7207                           ;star_demo.c: 152: {
  7208                           ;star_demo.c: 154: uint8_t select_ed = 0;
  7209  1CA0  0022               	movlb	2	; select bank2
  7210  1CA1  01EB               	clrf	run_star_demo@select_ed^(0+256)
  7211                           
  7212                           ;star_demo.c: 155: chk_sel_status = 1;
  7213  1CA2  0023               	movlb	3	; select bank3
  7214  1CA3  01D4               	clrf	_chk_sel_status^(0+384)
  7215  1CA4  0AD4               	incf	_chk_sel_status^(0+384),f
  7216                           
  7217                           ;star_demo.c: 156: bool update_ed = 1;
  7218  1CA5  0022               	movlb	2	; select bank2
  7219  1CA6  01E8               	clrf	run_star_demo@update_ed^(0+256)
  7220  1CA7  0AE8               	incf	run_star_demo@update_ed^(0+256),f
  7221  1CA8                     l7669:	
  7222                           ;star_demo.c: 157: while(update_ed == 1)
  7223                           
  7224  1CA8  0022               	movlb	2	; select bank2
  7225  1CA9  0368               	decf	run_star_demo@update_ed^(0+256),w
  7226  1CAA  1D03               	btfss	3,2
  7227  1CAB  2F78               	goto	l7671
  7228                           
  7229                           ;star_demo.c: 158: {
  7230                           ;star_demo.c: 160: LCD_Erase();
  7231  1CAC  31B5  25EA  319C   	fcall	_LCD_Erase
  7232                           
  7233                           ;star_demo.c: 161: if (myConnectionIndex_in_PanCo == select_ed)
  7234  1CAF  0020               	movlb	0	; select bank0
  7235  1CB0  086C               	movf	_myConnectionIndex_in_PanCo,w
  7236  1CB1  0022               	movlb	2	; select bank2
  7237  1CB2  066B               	xorwf	run_star_demo@select_ed^(0+256),w
  7238  1CB3  1D03               	skipz
  7239  1CB4  2D0A               	goto	l7577
  7240                           
  7241                           ;star_demo.c: 162: {
  7242                           ;star_demo.c: 163: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  7243                           ;star_demo.c: 164: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  7244  1CB5  30BA               	movlw	low (STR_7| (0+32768))
  7245  1CB6  0021               	movlb	1	; select bank1
  7246  1CB7  00AE               	movwf	sprintf@f^(0+128)
  7247  1CB8  30A1               	movlw	high (STR_7| (0+32768))
  7248  1CB9  00AF               	movwf	(sprintf@f^(0+128)+1)
  7249  1CBA  0022               	movlb	2	; select bank2
  7250  1CBB  086B               	movf	run_star_demo@select_ed^(0+256),w
  7251  1CBC  00DA               	movwf	??_run_star_demo^(0+256)
  7252  1CBD  3001               	movlw	1
  7253  1CBE                     u8135:	
  7254  1CBE  35DA               	lslf	??_run_star_demo^(0+256),f
  7255  1CBF  3EFF               	addlw	-1
  7256  1CC0  1D03               	skipz
  7257  1CC1  2CBE               	goto	u8135
  7258  1CC2  355A               	lslf	??_run_star_demo^(0+256),w
  7259  1CC3  3E03               	addlw	3
  7260  1CC4  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7261  1CC5  0086               	movwf	6
  7262  1CC6  3002               	movlw	2	; select bank5/6
  7263  1CC7  0087               	movwf	7
  7264  1CC8  0801               	movf	1,w
  7265  1CC9  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7266  1CCA  01DC               	clrf	((??_run_star_demo+1)^(0+256)+1)
  7267  1CCB  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7268  1CCC  0021               	movlb	1	; select bank1
  7269  1CCD  00B0               	movwf	(?_sprintf^(0+128)+2)
  7270  1CCE  0022               	movlb	2	; select bank2
  7271  1CCF  085C               	movf	(??_run_star_demo+2)^(0+256),w
  7272  1CD0  0021               	movlb	1	; select bank1
  7273  1CD1  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  7274  1CD2  0022               	movlb	2	; select bank2
  7275  1CD3  086B               	movf	run_star_demo@select_ed^(0+256),w
  7276  1CD4  00DD               	movwf	(??_run_star_demo+3)^(0+256)
  7277  1CD5  3001               	movlw	1
  7278  1CD6                     u8145:	
  7279  1CD6  35DD               	lslf	(??_run_star_demo+3)^(0+256),f
  7280  1CD7  3EFF               	addlw	-1
  7281  1CD8  1D03               	skipz
  7282  1CD9  2CD6               	goto	u8145
  7283  1CDA  355D               	lslf	(??_run_star_demo+3)^(0+256),w
  7284  1CDB  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7285  1CDC  0086               	movwf	6
  7286  1CDD  3002               	movlw	2	; select bank5/6
  7287  1CDE  0087               	movwf	7
  7288  1CDF  0801               	movf	1,w
  7289  1CE0  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7290  1CE1  01DF               	clrf	((??_run_star_demo+4)^(0+256)+1)
  7291  1CE2  085E               	movf	(??_run_star_demo+4)^(0+256),w
  7292  1CE3  0021               	movlb	1	; select bank1
  7293  1CE4  00B2               	movwf	(?_sprintf^(0+128)+4)
  7294  1CE5  0022               	movlb	2	; select bank2
  7295  1CE6  085F               	movf	(??_run_star_demo+5)^(0+256),w
  7296  1CE7  0021               	movlb	1	; select bank1
  7297  1CE8  00B3               	movwf	((?_sprintf+1)^(0+128)+4)
  7298  1CE9  0022               	movlb	2	; select bank2
  7299  1CEA  086B               	movf	run_star_demo@select_ed^(0+256),w
  7300  1CEB  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7301  1CEC  3001               	movlw	1
  7302  1CED                     u8155:	
  7303  1CED  35E0               	lslf	(??_run_star_demo+6)^(0+256),f
  7304  1CEE  3EFF               	addlw	-1
  7305  1CEF  1D03               	skipz
  7306  1CF0  2CED               	goto	u8155
  7307  1CF1  3560               	lslf	(??_run_star_demo+6)^(0+256),w
  7308  1CF2  3E01               	addlw	1
  7309  1CF3  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7310  1CF4  0086               	movwf	6
  7311  1CF5  3002               	movlw	2	; select bank5/6
  7312  1CF6  0087               	movwf	7
  7313  1CF7  0801               	movf	1,w
  7314  1CF8  00E1               	movwf	(??_run_star_demo+7)^(0+256)
  7315  1CF9  01E2               	clrf	((??_run_star_demo+7)^(0+256)+1)
  7316  1CFA  0861               	movf	(??_run_star_demo+7)^(0+256),w
  7317  1CFB  0021               	movlb	1	; select bank1
  7318  1CFC  00B4               	movwf	(?_sprintf^(0+128)+6)
  7319  1CFD  0022               	movlb	2	; select bank2
  7320  1CFE  0862               	movf	(??_run_star_demo+8)^(0+256),w
  7321  1CFF  0021               	movlb	1	; select bank1
  7322  1D00  00B5               	movwf	((?_sprintf+1)^(0+128)+6)
  7323  1D01  0022               	movlb	2	; select bank2
  7324  1D02  086B               	movf	run_star_demo@select_ed^(0+256),w
  7325  1D03  00E3               	movwf	(??_run_star_demo+9)^(0+256)
  7326  1D04  3001               	movlw	1
  7327  1D05                     u8165:	
  7328  1D05  35E3               	lslf	(??_run_star_demo+9)^(0+256),f
  7329  1D06  3EFF               	addlw	-1
  7330  1D07  1D03               	skipz
  7331  1D08  2D05               	goto	u8165
  7332  1D09  2D5E               	goto	L1
  7333  1D0A                     l7577:	
  7334                           ;star_demo.c: 165: }
  7335                           
  7336                           
  7337                           ;star_demo.c: 166: else
  7338                           ;star_demo.c: 167: {
  7339                           ;star_demo.c: 168: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  7340                           ;star_demo.c: 169: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  7341  1D0A  30D3               	movlw	low (STR_8| (0+32768))
  7342  1D0B  0021               	movlb	1	; select bank1
  7343  1D0C  00AE               	movwf	sprintf@f^(0+128)
  7344  1D0D  30A1               	movlw	high (STR_8| (0+32768))
  7345  1D0E  00AF               	movwf	(sprintf@f^(0+128)+1)
  7346  1D0F  0022               	movlb	2	; select bank2
  7347  1D10  086B               	movf	run_star_demo@select_ed^(0+256),w
  7348  1D11  00DA               	movwf	??_run_star_demo^(0+256)
  7349  1D12  3001               	movlw	1
  7350  1D13                     u8175:	
  7351  1D13  35DA               	lslf	??_run_star_demo^(0+256),f
  7352  1D14  3EFF               	addlw	-1
  7353  1D15  1D03               	skipz
  7354  1D16  2D13               	goto	u8175
  7355  1D17  355A               	lslf	??_run_star_demo^(0+256),w
  7356  1D18  3E03               	addlw	3
  7357  1D19  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7358  1D1A  0086               	movwf	6
  7359  1D1B  3002               	movlw	2	; select bank5/6
  7360  1D1C  0087               	movwf	7
  7361  1D1D  0801               	movf	1,w
  7362  1D1E  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7363  1D1F  01DC               	clrf	((??_run_star_demo+1)^(0+256)+1)
  7364  1D20  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7365  1D21  0021               	movlb	1	; select bank1
  7366  1D22  00B0               	movwf	(?_sprintf^(0+128)+2)
  7367  1D23  0022               	movlb	2	; select bank2
  7368  1D24  085C               	movf	(??_run_star_demo+2)^(0+256),w
  7369  1D25  0021               	movlb	1	; select bank1
  7370  1D26  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  7371  1D27  0022               	movlb	2	; select bank2
  7372  1D28  086B               	movf	run_star_demo@select_ed^(0+256),w
  7373  1D29  00DD               	movwf	(??_run_star_demo+3)^(0+256)
  7374  1D2A  3001               	movlw	1
  7375  1D2B                     u8185:	
  7376  1D2B  35DD               	lslf	(??_run_star_demo+3)^(0+256),f
  7377  1D2C  3EFF               	addlw	-1
  7378  1D2D  1D03               	skipz
  7379  1D2E  2D2B               	goto	u8185
  7380  1D2F  355D               	lslf	(??_run_star_demo+3)^(0+256),w
  7381  1D30  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7382  1D31  0086               	movwf	6
  7383  1D32  3002               	movlw	2	; select bank5/6
  7384  1D33  0087               	movwf	7
  7385  1D34  0801               	movf	1,w
  7386  1D35  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7387  1D36  01DF               	clrf	((??_run_star_demo+4)^(0+256)+1)
  7388  1D37  085E               	movf	(??_run_star_demo+4)^(0+256),w
  7389  1D38  0021               	movlb	1	; select bank1
  7390  1D39  00B2               	movwf	(?_sprintf^(0+128)+4)
  7391  1D3A  0022               	movlb	2	; select bank2
  7392  1D3B  085F               	movf	(??_run_star_demo+5)^(0+256),w
  7393  1D3C  0021               	movlb	1	; select bank1
  7394  1D3D  00B3               	movwf	((?_sprintf+1)^(0+128)+4)
  7395  1D3E  0022               	movlb	2	; select bank2
  7396  1D3F  086B               	movf	run_star_demo@select_ed^(0+256),w
  7397  1D40  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7398  1D41  3001               	movlw	1
  7399  1D42                     u8195:	
  7400  1D42  35E0               	lslf	(??_run_star_demo+6)^(0+256),f
  7401  1D43  3EFF               	addlw	-1
  7402  1D44  1D03               	skipz
  7403  1D45  2D42               	goto	u8195
  7404  1D46  3560               	lslf	(??_run_star_demo+6)^(0+256),w
  7405  1D47  3E01               	addlw	1
  7406  1D48  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7407  1D49  0086               	movwf	6
  7408  1D4A  3002               	movlw	2	; select bank5/6
  7409  1D4B  0087               	movwf	7
  7410  1D4C  0801               	movf	1,w
  7411  1D4D  00E1               	movwf	(??_run_star_demo+7)^(0+256)
  7412  1D4E  01E2               	clrf	((??_run_star_demo+7)^(0+256)+1)
  7413  1D4F  0861               	movf	(??_run_star_demo+7)^(0+256),w
  7414  1D50  0021               	movlb	1	; select bank1
  7415  1D51  00B4               	movwf	(?_sprintf^(0+128)+6)
  7416  1D52  0022               	movlb	2	; select bank2
  7417  1D53  0862               	movf	(??_run_star_demo+8)^(0+256),w
  7418  1D54  0021               	movlb	1	; select bank1
  7419  1D55  00B5               	movwf	((?_sprintf+1)^(0+128)+6)
  7420  1D56  0022               	movlb	2	; select bank2
  7421  1D57  086B               	movf	run_star_demo@select_ed^(0+256),w
  7422  1D58  00E3               	movwf	(??_run_star_demo+9)^(0+256)
  7423  1D59  3001               	movlw	1
  7424  1D5A                     u8205:	
  7425  1D5A  35E3               	lslf	(??_run_star_demo+9)^(0+256),f
  7426  1D5B  3EFF               	addlw	-1
  7427  1D5C  1D03               	skipz
  7428  1D5D  2D5A               	goto	u8205
  7429  1D5E                     L1:	
  7430  1D5E  3563               	lslf	(??_run_star_demo+9)^(0+256),w
  7431  1D5F  3E02               	addlw	2
  7432  1D60  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7433  1D61  0086               	movwf	6
  7434  1D62  3002               	movlw	2	; select bank5/6
  7435  1D63  0087               	movwf	7
  7436  1D64  0801               	movf	1,w
  7437  1D65  00E4               	movwf	(??_run_star_demo+10)^(0+256)
  7438  1D66  01E5               	clrf	((??_run_star_demo+10)^(0+256)+1)
  7439  1D67  0864               	movf	(??_run_star_demo+10)^(0+256),w
  7440  1D68  0021               	movlb	1	; select bank1
  7441  1D69  00B6               	movwf	(?_sprintf^(0+128)+8)
  7442  1D6A  0022               	movlb	2	; select bank2
  7443  1D6B  0865               	movf	(??_run_star_demo+11)^(0+256),w
  7444  1D6C  0021               	movlb	1	; select bank1
  7445  1D6D  00B7               	movwf	((?_sprintf+1)^(0+128)+8)
  7446  1D6E  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
  7447  1D6F  3193  238C  319C   	fcall	_sprintf
  7448                           
  7449                           ;star_demo.c: 170: }
  7450                           ;star_demo.c: 171: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  7451                           ;star_demo.c: 172: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  7452  1D72  30D3               	movlw	low (STR_8| (0+32768))
  7453  1D73  0021               	movlb	1	; select bank1
  7454  1D74  00AE               	movwf	sprintf@f^(0+128)
  7455  1D75  30A1               	movlw	high (STR_8| (0+32768))
  7456  1D76  00AF               	movwf	(sprintf@f^(0+128)+1)
  7457  1D77  0022               	movlb	2	; select bank2
  7458  1D78  086B               	movf	run_star_demo@select_ed^(0+256),w
  7459  1D79  00DA               	movwf	??_run_star_demo^(0+256)
  7460  1D7A  3001               	movlw	1
  7461  1D7B                     u8215:	
  7462  1D7B  35DA               	lslf	??_run_star_demo^(0+256),f
  7463  1D7C  3EFF               	addlw	-1
  7464  1D7D  1D03               	skipz
  7465  1D7E  2D7B               	goto	u8215
  7466  1D7F  355A               	lslf	??_run_star_demo^(0+256),w
  7467  1D80  3E03               	addlw	3
  7468  1D81  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7469  1D82  0086               	movwf	6
  7470  1D83  3002               	movlw	2	; select bank5/6
  7471  1D84  0087               	movwf	7
  7472  1D85  0801               	movf	1,w
  7473  1D86  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7474  1D87  01DC               	clrf	((??_run_star_demo+1)^(0+256)+1)
  7475  1D88  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7476  1D89  0021               	movlb	1	; select bank1
  7477  1D8A  00B0               	movwf	(?_sprintf^(0+128)+2)
  7478  1D8B  0022               	movlb	2	; select bank2
  7479  1D8C  085C               	movf	(??_run_star_demo+2)^(0+256),w
  7480  1D8D  0021               	movlb	1	; select bank1
  7481  1D8E  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  7482  1D8F  0022               	movlb	2	; select bank2
  7483  1D90  086B               	movf	run_star_demo@select_ed^(0+256),w
  7484  1D91  00DD               	movwf	(??_run_star_demo+3)^(0+256)
  7485  1D92  3001               	movlw	1
  7486  1D93                     u8225:	
  7487  1D93  35DD               	lslf	(??_run_star_demo+3)^(0+256),f
  7488  1D94  3EFF               	addlw	-1
  7489  1D95  1D03               	skipz
  7490  1D96  2D93               	goto	u8225
  7491  1D97  355D               	lslf	(??_run_star_demo+3)^(0+256),w
  7492  1D98  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7493  1D99  0086               	movwf	6
  7494  1D9A  3002               	movlw	2	; select bank5/6
  7495  1D9B  0087               	movwf	7
  7496  1D9C  0801               	movf	1,w
  7497  1D9D  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7498  1D9E  01DF               	clrf	((??_run_star_demo+4)^(0+256)+1)
  7499  1D9F  085E               	movf	(??_run_star_demo+4)^(0+256),w
  7500  1DA0  0021               	movlb	1	; select bank1
  7501  1DA1  00B2               	movwf	(?_sprintf^(0+128)+4)
  7502  1DA2  0022               	movlb	2	; select bank2
  7503  1DA3  085F               	movf	(??_run_star_demo+5)^(0+256),w
  7504  1DA4  0021               	movlb	1	; select bank1
  7505  1DA5  00B3               	movwf	((?_sprintf+1)^(0+128)+4)
  7506  1DA6  0022               	movlb	2	; select bank2
  7507  1DA7  086B               	movf	run_star_demo@select_ed^(0+256),w
  7508  1DA8  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7509  1DA9  3001               	movlw	1
  7510  1DAA                     u8235:	
  7511  1DAA  35E0               	lslf	(??_run_star_demo+6)^(0+256),f
  7512  1DAB  3EFF               	addlw	-1
  7513  1DAC  1D03               	skipz
  7514  1DAD  2DAA               	goto	u8235
  7515  1DAE  3560               	lslf	(??_run_star_demo+6)^(0+256),w
  7516  1DAF  3E01               	addlw	1
  7517  1DB0  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7518  1DB1  0086               	movwf	6
  7519  1DB2  3002               	movlw	2	; select bank5/6
  7520  1DB3  0087               	movwf	7
  7521  1DB4  0801               	movf	1,w
  7522  1DB5  00E1               	movwf	(??_run_star_demo+7)^(0+256)
  7523  1DB6  01E2               	clrf	((??_run_star_demo+7)^(0+256)+1)
  7524  1DB7  0861               	movf	(??_run_star_demo+7)^(0+256),w
  7525  1DB8  0021               	movlb	1	; select bank1
  7526  1DB9  00B4               	movwf	(?_sprintf^(0+128)+6)
  7527  1DBA  0022               	movlb	2	; select bank2
  7528  1DBB  0862               	movf	(??_run_star_demo+8)^(0+256),w
  7529  1DBC  0021               	movlb	1	; select bank1
  7530  1DBD  00B5               	movwf	((?_sprintf+1)^(0+128)+6)
  7531  1DBE  0022               	movlb	2	; select bank2
  7532  1DBF  086B               	movf	run_star_demo@select_ed^(0+256),w
  7533  1DC0  00E3               	movwf	(??_run_star_demo+9)^(0+256)
  7534  1DC1  3001               	movlw	1
  7535  1DC2                     u8245:	
  7536  1DC2  35E3               	lslf	(??_run_star_demo+9)^(0+256),f
  7537  1DC3  3EFF               	addlw	-1
  7538  1DC4  1D03               	skipz
  7539  1DC5  2DC2               	goto	u8245
  7540  1DC6  3563               	lslf	(??_run_star_demo+9)^(0+256),w
  7541  1DC7  3E02               	addlw	2
  7542  1DC8  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7543  1DC9  0086               	movwf	6
  7544  1DCA  3002               	movlw	2	; select bank5/6
  7545  1DCB  0087               	movwf	7
  7546  1DCC  0801               	movf	1,w
  7547  1DCD  00E4               	movwf	(??_run_star_demo+10)^(0+256)
  7548  1DCE  01E5               	clrf	((??_run_star_demo+10)^(0+256)+1)
  7549  1DCF  0864               	movf	(??_run_star_demo+10)^(0+256),w
  7550  1DD0  0021               	movlb	1	; select bank1
  7551  1DD1  00B6               	movwf	(?_sprintf^(0+128)+8)
  7552  1DD2  0022               	movlb	2	; select bank2
  7553  1DD3  0865               	movf	(??_run_star_demo+11)^(0+256),w
  7554  1DD4  0021               	movlb	1	; select bank1
  7555  1DD5  00B7               	movwf	((?_sprintf+1)^(0+128)+8)
  7556  1DD6  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
  7557  1DD7  3193  238C  319C   	fcall	_sprintf
  7558                           
  7559                           ;star_demo.c: 173: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  7560  1DDA  307E               	movlw	low (STR_10| (0+32768))
  7561  1DDB  0021               	movlb	1	; select bank1
  7562  1DDC  00AE               	movwf	sprintf@f^(0+128)
  7563  1DDD  30A2               	movlw	high (STR_10| (0+32768))
  7564  1DDE  00AF               	movwf	(sprintf@f^(0+128)+1)
  7565  1DDF  30D8               	movlw	(low ((_LCDText| (0+512)+16)))& (0+255)
  7566  1DE0  3193  238C  319C   	fcall	_sprintf
  7567                           
  7568                           ;star_demo.c: 174: LCD_Update();
  7569  1DE3  31AD  2509  319C   	fcall	_LCD_Update
  7570                           
  7571                           ;star_demo.c: 175: chk_sel_status = 1;
  7572  1DE6  0023               	movlb	3	; select bank3
  7573  1DE7  01D4               	clrf	_chk_sel_status^(0+384)
  7574  1DE8  0AD4               	incf	_chk_sel_status^(0+384),f
  7575  1DE9                     l7667:	
  7576                           ;star_demo.c: 177: while(chk_sel_status)
  7577                           
  7578  1DE9  0023               	movlb	3	; select bank3
  7579  1DEA  0854               	movf	_chk_sel_status^(0+384),w
  7580  1DEB  1903               	btfsc	3,2
  7581  1DEC  2CA8               	goto	l7669
  7582                           
  7583                           ;star_demo.c: 178: {
  7584                           ;star_demo.c: 180: uint8_t switch_val = ButtonPressed();
  7585  1DED  31A5  2588  319C   	fcall	_ButtonPressed
  7586  1DF0  0022               	movlb	2	; select bank2
  7587  1DF1  00DA               	movwf	??_run_star_demo^(0+256)
  7588  1DF2  085A               	movf	??_run_star_demo^(0+256),w
  7589  1DF3  00EA               	movwf	run_star_demo@switch_val^(0+256)
  7590                           
  7591                           ;star_demo.c: 182: Process_RxMessage ();
  7592  1DF4  31AE  264B  319C   	fcall	_Process_RxMessage
  7593                           
  7594                           ;star_demo.c: 183: bool sw_layer_ack_status , mac_ack_status;
  7595                           ;star_demo.c: 184: if(switch_val == 1)
  7596  1DF7  0022               	movlb	2	; select bank2
  7597  1DF8  036A               	decf	run_star_demo@switch_val^(0+256),w
  7598  1DF9  1D03               	btfss	3,2
  7599  1DFA  2F53               	goto	l7657
  7600                           
  7601                           ;star_demo.c: 185: {
  7602                           ;star_demo.c: 186: update_ed = 0;
  7603  1DFB  01E8               	clrf	run_star_demo@update_ed^(0+256)
  7604                           
  7605                           ;star_demo.c: 187: chk_sel_status = 0;
  7606  1DFC  0023               	movlb	3	; select bank3
  7607  1DFD  01D4               	clrf	_chk_sel_status^(0+384)
  7608                           
  7609                           ;star_demo.c: 188: TxSynCount2++;
  7610  1DFE  3001               	movlw	1
  7611  1DFF  0022               	movlb	2	; select bank2
  7612  1E00  00DA               	movwf	??_run_star_demo^(0+256)
  7613  1E01  085A               	movf	??_run_star_demo^(0+256),w
  7614  1E02  0023               	movlb	3	; select bank3
  7615  1E03  07D3               	addwf	_TxSynCount2^(0+384),f
  7616                           
  7617                           ;star_demo.c: 189: if (myConnectionIndex_in_PanCo == select_ed)
  7618  1E04  0020               	movlb	0	; select bank0
  7619  1E05  086C               	movf	_myConnectionIndex_in_PanCo,w
  7620  1E06  0022               	movlb	2	; select bank2
  7621  1E07  066B               	xorwf	run_star_demo@select_ed^(0+256),w
  7622  1E08  1D03               	skipz
  7623  1E09  2E68               	goto	l7613
  7624                           
  7625                           ;star_demo.c: 190: {
  7626                           ;star_demo.c: 191: {TxData = 0;};
  7627  1E0A  01EE               	clrf	_TxData^(0+256)
  7628                           
  7629                           ;star_demo.c: 192: for (i = 0 ; i < 21 ; i++)
  7630  1E0B  0020               	movlb	0	; select bank0
  7631  1E0C  01E4               	clrf	_i
  7632  1E0D  3015               	movlw	21
  7633  1E0E  0264               	subwf	_i,w
  7634  1E0F  1803               	btfsc	3,0
  7635  1E10  2E5D               	goto	l7609
  7636  1E11                     l7601:	
  7637                           
  7638                           ;star_demo.c: 193: {
  7639                           ;star_demo.c: 194: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  7640  1E11  0861               	movf	_TxSynCount,w
  7641  1E12  0022               	movlb	2	; select bank2
  7642  1E13  00DA               	movwf	??_run_star_demo^(0+256)
  7643  1E14  01DB               	clrf	(??_run_star_demo^(0+256)+1)
  7644  1E15  085A               	movf	??_run_star_demo^(0+256),w
  7645  1E16  0021               	movlb	1	; select bank1
  7646  1E17  00A2               	movwf	___awmod@dividend^(0+128)
  7647  1E18  0022               	movlb	2	; select bank2
  7648  1E19  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7649  1E1A  0021               	movlb	1	; select bank1
  7650  1E1B  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  7651  1E1C  3006               	movlw	6
  7652  1E1D  00A0               	movwf	___awmod@divisor^(0+128)
  7653  1E1E  3000               	movlw	0
  7654  1E1F  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  7655  1E20  31AB  234A  319C   	fcall	___awmod
  7656  1E23  0021               	movlb	1	; select bank1
  7657  1E24  0821               	movf	(?___awmod+1)^(0+128),w
  7658  1E25  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  7659  1E26  0820               	movf	?___awmod^(0+128),w
  7660  1E27  00A7               	movwf	___wmul@multiplier^(0+128)
  7661  1E28  3015               	movlw	21
  7662  1E29  00A9               	movwf	___wmul@multiplicand^(0+128)
  7663  1E2A  3000               	movlw	0
  7664  1E2B  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  7665  1E2C  31B6  26A4  319C   	fcall	___wmul
  7666  1E2F  3000               	movlw	low (_MiWi| (0+32768))
  7667  1E30  0022               	movlb	2	; select bank2
  7668  1E31  00DC               	movwf	(??_run_star_demo+2)^(0+256)
  7669  1E32  30A0               	movlw	high (_MiWi| (0+32768))
  7670  1E33  00DD               	movwf	((??_run_star_demo+2)^(0+256)+1)
  7671  1E34  0021               	movlb	1	; select bank1
  7672  1E35  0827               	movf	?___wmul^(0+128),w
  7673  1E36  0022               	movlb	2	; select bank2
  7674  1E37  075C               	addwf	(??_run_star_demo+2)^(0+256),w
  7675  1E38  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7676  1E39  0021               	movlb	1	; select bank1
  7677  1E3A  0828               	movf	(?___wmul+1)^(0+128),w
  7678  1E3B  0022               	movlb	2	; select bank2
  7679  1E3C  3D5D               	addwfc	(??_run_star_demo+3)^(0+256),w
  7680  1E3D  00DF               	movwf	(??_run_star_demo+5)^(0+256)
  7681  1E3E  0020               	movlb	0	; select bank0
  7682  1E3F  0864               	movf	_i,w
  7683  1E40  0022               	movlb	2	; select bank2
  7684  1E41  075E               	addwf	(??_run_star_demo+4)^(0+256),w
  7685  1E42  0084               	movwf	4
  7686  1E43  085F               	movf	((??_run_star_demo+4)^(0+256)+1),w
  7687  1E44  1803               	skipnc
  7688  1E45  0A5F               	incf	((??_run_star_demo+4)^(0+256)+1),w
  7689  1E46  0085               	movwf	5
  7690  1E47  0800               	movf	0,w	;code access
  7691  1E48  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7692  1E49  086E               	movf	_TxData^(0+256),w
  7693  1E4A  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7694  1E4B  0086               	movwf	6
  7695  1E4C  3002               	movlw	2	; select bank4/5
  7696  1E4D  0087               	movwf	7
  7697  1E4E  0860               	movf	(??_run_star_demo+6)^(0+256),w
  7698  1E4F  0081               	movwf	1
  7699  1E50  3001               	movlw	1
  7700  1E51  00DA               	movwf	??_run_star_demo^(0+256)
  7701  1E52  085A               	movf	??_run_star_demo^(0+256),w
  7702  1E53  07EE               	addwf	_TxData^(0+256),f
  7703  1E54  3001               	movlw	1
  7704  1E55  00DA               	movwf	??_run_star_demo^(0+256)
  7705  1E56  085A               	movf	??_run_star_demo^(0+256),w
  7706  1E57  0020               	movlb	0	; select bank0
  7707  1E58  07E4               	addwf	_i,f
  7708  1E59  3015               	movlw	21
  7709  1E5A  0264               	subwf	_i,w
  7710  1E5B  1C03               	skipc
  7711  1E5C  2E11               	goto	l7601
  7712  1E5D                     l7609:	
  7713                           
  7714                           ;star_demo.c: 195: }
  7715                           ;star_demo.c: 202: mac_ack_status = MiApp_UnicastConnection (0, 0);
  7716  1E5D  0021               	movlb	1	; select bank1
  7717  1E5E  01E7               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
  7718  1E5F  3000               	movlw	0
  7719  1E60  31AC  24BC  319C   	fcall	_MiApp_UnicastConnection
  7720  1E63  0022               	movlb	2	; select bank2
  7721  1E64  00DA               	movwf	??_run_star_demo^(0+256)
  7722  1E65  085A               	movf	??_run_star_demo^(0+256),w
  7723  1E66  00E6               	movwf	run_star_demo@mac_ack_status^(0+256)
  7724  1E67  2F29               	goto	l7649
  7725  1E68                     l7613:	
  7726                           ;star_demo.c: 205: }
  7727                           
  7728                           ;star_demo.c: 204: TxNum++;
  7729                           
  7730                           
  7731                           ;star_demo.c: 207: else
  7732                           ;star_demo.c: 208: {
  7733                           ;star_demo.c: 213: {TxData = 0;};
  7734  1E68  0022               	movlb	2	; select bank2
  7735  1E69  01EE               	clrf	_TxData^(0+256)
  7736                           
  7737                           ;star_demo.c: 214: TxBuffer[TxData++] = 0xCC;
  7738  1E6A  30CC               	movlw	204
  7739  1E6B  00DA               	movwf	??_run_star_demo^(0+256)
  7740  1E6C  086E               	movf	_TxData^(0+256),w
  7741  1E6D  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7742  1E6E  0086               	movwf	6
  7743  1E6F  3002               	movlw	2	; select bank4/5
  7744  1E70  0087               	movwf	7
  7745  1E71  085A               	movf	??_run_star_demo^(0+256),w
  7746  1E72  0081               	movwf	1
  7747  1E73  3001               	movlw	1
  7748  1E74  00DA               	movwf	??_run_star_demo^(0+256)
  7749  1E75  085A               	movf	??_run_star_demo^(0+256),w
  7750  1E76  07EE               	addwf	_TxData^(0+256),f
  7751                           
  7752                           ;star_demo.c: 215: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  7753  1E77  086B               	movf	run_star_demo@select_ed^(0+256),w
  7754  1E78  00DA               	movwf	??_run_star_demo^(0+256)
  7755  1E79  3001               	movlw	1
  7756  1E7A                     u8295:	
  7757  1E7A  35DA               	lslf	??_run_star_demo^(0+256),f
  7758  1E7B  3EFF               	addlw	-1
  7759  1E7C  1D03               	skipz
  7760  1E7D  2E7A               	goto	u8295
  7761  1E7E  355A               	lslf	??_run_star_demo^(0+256),w
  7762  1E7F  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7763  1E80  0086               	movwf	6
  7764  1E81  3002               	movlw	2	; select bank5/6
  7765  1E82  0087               	movwf	7
  7766  1E83  0801               	movf	1,w
  7767  1E84  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7768  1E85  086E               	movf	_TxData^(0+256),w
  7769  1E86  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7770  1E87  0086               	movwf	6
  7771  1E88  3002               	movlw	2	; select bank4/5
  7772  1E89  0087               	movwf	7
  7773  1E8A  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7774  1E8B  0081               	movwf	1
  7775  1E8C  3001               	movlw	1
  7776  1E8D  00DA               	movwf	??_run_star_demo^(0+256)
  7777  1E8E  085A               	movf	??_run_star_demo^(0+256),w
  7778  1E8F  07EE               	addwf	_TxData^(0+256),f
  7779                           
  7780                           ;star_demo.c: 216: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  7781  1E90  086B               	movf	run_star_demo@select_ed^(0+256),w
  7782  1E91  00DA               	movwf	??_run_star_demo^(0+256)
  7783  1E92  3001               	movlw	1
  7784  1E93                     u8305:	
  7785  1E93  35DA               	lslf	??_run_star_demo^(0+256),f
  7786  1E94  3EFF               	addlw	-1
  7787  1E95  1D03               	skipz
  7788  1E96  2E93               	goto	u8305
  7789  1E97  355A               	lslf	??_run_star_demo^(0+256),w
  7790  1E98  3E01               	addlw	1
  7791  1E99  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7792  1E9A  0086               	movwf	6
  7793  1E9B  3002               	movlw	2	; select bank5/6
  7794  1E9C  0087               	movwf	7
  7795  1E9D  0801               	movf	1,w
  7796  1E9E  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7797  1E9F  086E               	movf	_TxData^(0+256),w
  7798  1EA0  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7799  1EA1  0086               	movwf	6
  7800  1EA2  3002               	movlw	2	; select bank4/5
  7801  1EA3  0087               	movwf	7
  7802  1EA4  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7803  1EA5  0081               	movwf	1
  7804  1EA6  3001               	movlw	1
  7805  1EA7  00DA               	movwf	??_run_star_demo^(0+256)
  7806  1EA8  085A               	movf	??_run_star_demo^(0+256),w
  7807  1EA9  07EE               	addwf	_TxData^(0+256),f
  7808                           
  7809                           ;star_demo.c: 217: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  7810  1EAA  086B               	movf	run_star_demo@select_ed^(0+256),w
  7811  1EAB  00DA               	movwf	??_run_star_demo^(0+256)
  7812  1EAC  3001               	movlw	1
  7813  1EAD                     u8315:	
  7814  1EAD  35DA               	lslf	??_run_star_demo^(0+256),f
  7815  1EAE  3EFF               	addlw	-1
  7816  1EAF  1D03               	skipz
  7817  1EB0  2EAD               	goto	u8315
  7818  1EB1  355A               	lslf	??_run_star_demo^(0+256),w
  7819  1EB2  3E02               	addlw	2
  7820  1EB3  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
  7821  1EB4  0086               	movwf	6
  7822  1EB5  3002               	movlw	2	; select bank5/6
  7823  1EB6  0087               	movwf	7
  7824  1EB7  0801               	movf	1,w
  7825  1EB8  00DB               	movwf	(??_run_star_demo+1)^(0+256)
  7826  1EB9  086E               	movf	_TxData^(0+256),w
  7827  1EBA  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7828  1EBB  0086               	movwf	6
  7829  1EBC  3002               	movlw	2	; select bank4/5
  7830  1EBD  0087               	movwf	7
  7831  1EBE  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7832  1EBF  0081               	movwf	1
  7833  1EC0  3001               	movlw	1
  7834  1EC1  00DA               	movwf	??_run_star_demo^(0+256)
  7835  1EC2  085A               	movf	??_run_star_demo^(0+256),w
  7836  1EC3  07EE               	addwf	_TxData^(0+256),f
  7837                           
  7838                           ;star_demo.c: 218: for (i = 4 ; i < 25 ; i++)
  7839  1EC4  3004               	movlw	4
  7840  1EC5  00DA               	movwf	??_run_star_demo^(0+256)
  7841  1EC6  085A               	movf	??_run_star_demo^(0+256),w
  7842  1EC7  0020               	movlb	0	; select bank0
  7843  1EC8  00E4               	movwf	_i
  7844  1EC9  3019               	movlw	25
  7845  1ECA  0264               	subwf	_i,w
  7846  1ECB  1803               	btfsc	3,0
  7847  1ECC  2F1E               	goto	l7645
  7848  1ECD                     l7637:	
  7849                           
  7850                           ;star_demo.c: 219: {
  7851                           ;star_demo.c: 220: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  7852  1ECD  0861               	movf	_TxSynCount,w
  7853  1ECE  0022               	movlb	2	; select bank2
  7854  1ECF  00DA               	movwf	??_run_star_demo^(0+256)
  7855  1ED0  01DB               	clrf	(??_run_star_demo^(0+256)+1)
  7856  1ED1  085A               	movf	??_run_star_demo^(0+256),w
  7857  1ED2  0021               	movlb	1	; select bank1
  7858  1ED3  00A2               	movwf	___awmod@dividend^(0+128)
  7859  1ED4  0022               	movlb	2	; select bank2
  7860  1ED5  085B               	movf	(??_run_star_demo+1)^(0+256),w
  7861  1ED6  0021               	movlb	1	; select bank1
  7862  1ED7  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  7863  1ED8  3006               	movlw	6
  7864  1ED9  00A0               	movwf	___awmod@divisor^(0+128)
  7865  1EDA  3000               	movlw	0
  7866  1EDB  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  7867  1EDC  31AB  234A  319C   	fcall	___awmod
  7868  1EDF  0021               	movlb	1	; select bank1
  7869  1EE0  0821               	movf	(?___awmod+1)^(0+128),w
  7870  1EE1  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  7871  1EE2  0820               	movf	?___awmod^(0+128),w
  7872  1EE3  00A7               	movwf	___wmul@multiplier^(0+128)
  7873  1EE4  3015               	movlw	21
  7874  1EE5  00A9               	movwf	___wmul@multiplicand^(0+128)
  7875  1EE6  3000               	movlw	0
  7876  1EE7  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  7877  1EE8  31B6  26A4  319C   	fcall	___wmul
  7878  1EEB  0020               	movlb	0	; select bank0
  7879  1EEC  0864               	movf	_i,w
  7880  1EED  3EFC               	addlw	252
  7881  1EEE  0022               	movlb	2	; select bank2
  7882  1EEF  00DC               	movwf	(??_run_star_demo+2)^(0+256)
  7883  1EF0  30FF               	movlw	255
  7884  1EF1  1803               	skipnc
  7885  1EF2  3000               	movlw	0
  7886  1EF3  00DD               	movwf	((??_run_star_demo+2)^(0+256)+1)
  7887  1EF4  3000               	movlw	low (_MiWi| (0+32768))
  7888  1EF5  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  7889  1EF6  30A0               	movlw	high (_MiWi| (0+32768))
  7890  1EF7  00DF               	movwf	((??_run_star_demo+4)^(0+256)+1)
  7891  1EF8  085C               	movf	(??_run_star_demo+2)^(0+256),w
  7892  1EF9  075E               	addwf	(??_run_star_demo+4)^(0+256),w
  7893  1EFA  00E0               	movwf	(??_run_star_demo+6)^(0+256)
  7894  1EFB  085D               	movf	(??_run_star_demo+3)^(0+256),w
  7895  1EFC  3D5F               	addwfc	(??_run_star_demo+5)^(0+256),w
  7896  1EFD  00E1               	movwf	(??_run_star_demo+7)^(0+256)
  7897  1EFE  0860               	movf	(??_run_star_demo+6)^(0+256),w
  7898  1EFF  0021               	movlb	1	; select bank1
  7899  1F00  0727               	addwf	?___wmul^(0+128),w
  7900  1F01  0084               	movwf	4
  7901  1F02  0022               	movlb	2	; select bank2
  7902  1F03  0861               	movf	(??_run_star_demo+7)^(0+256),w
  7903  1F04  0021               	movlb	1	; select bank1
  7904  1F05  3D28               	addwfc	(?___wmul+1)^(0+128),w
  7905  1F06  0085               	movwf	5
  7906  1F07  0800               	movf	0,w	;code access
  7907  1F08  0022               	movlb	2	; select bank2
  7908  1F09  00E2               	movwf	(??_run_star_demo+8)^(0+256)
  7909  1F0A  086E               	movf	_TxData^(0+256),w
  7910  1F0B  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7911  1F0C  0086               	movwf	6
  7912  1F0D  3002               	movlw	2	; select bank4/5
  7913  1F0E  0087               	movwf	7
  7914  1F0F  0862               	movf	(??_run_star_demo+8)^(0+256),w
  7915  1F10  0081               	movwf	1
  7916  1F11  3001               	movlw	1
  7917  1F12  00DA               	movwf	??_run_star_demo^(0+256)
  7918  1F13  085A               	movf	??_run_star_demo^(0+256),w
  7919  1F14  07EE               	addwf	_TxData^(0+256),f
  7920  1F15  3001               	movlw	1
  7921  1F16  00DA               	movwf	??_run_star_demo^(0+256)
  7922  1F17  085A               	movf	??_run_star_demo^(0+256),w
  7923  1F18  0020               	movlb	0	; select bank0
  7924  1F19  07E4               	addwf	_i,f
  7925  1F1A  3019               	movlw	25
  7926  1F1B  0264               	subwf	_i,w
  7927  1F1C  1C03               	skipc
  7928  1F1D  2ECD               	goto	l7637
  7929  1F1E                     l7645:	
  7930                           
  7931                           ;star_demo.c: 221: }
  7932                           ;star_demo.c: 225: sw_layer_ack_status = MiApp_UnicastStar (0);
  7933  1F1E  3000               	movlw	0
  7934  1F1F  31A4  2416  319C   	fcall	_MiApp_UnicastStar
  7935  1F22  0022               	movlb	2	; select bank2
  7936  1F23  00DA               	movwf	??_run_star_demo^(0+256)
  7937  1F24  085A               	movf	??_run_star_demo^(0+256),w
  7938  1F25  00E7               	movwf	run_star_demo@sw_layer_ack_status^(0+256)
  7939                           
  7940                           ;star_demo.c: 230: if (sw_layer_ack_status)
  7941  1F26  0867               	movf	run_star_demo@sw_layer_ack_status^(0+256),w
  7942  1F27  1903               	btfsc	3,2
  7943  1F28  2F2F               	goto	l7651
  7944  1F29                     l7649:	
  7945                           
  7946                           ;star_demo.c: 231: {
  7947                           ;star_demo.c: 232: TxNum++;
  7948  1F29  3001               	movlw	1
  7949  1F2A  00DA               	movwf	??_run_star_demo^(0+256)
  7950  1F2B  085A               	movf	??_run_star_demo^(0+256),w
  7951  1F2C  0020               	movlb	0	; select bank0
  7952  1F2D  07E0               	addwf	_TxNum,f
  7953                           
  7954                           ;star_demo.c: 233: }
  7955  1F2E  2F39               	goto	l898
  7956  1F2F                     l7651:	
  7957                           
  7958                           ;star_demo.c: 234: else
  7959                           ;star_demo.c: 235: {
  7960                           ;star_demo.c: 236: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  7961  1F2F  3014               	movlw	low (STR_11| (0+32768))
  7962  1F30  0021               	movlb	1	; select bank1
  7963  1F31  00D0               	movwf	LCDDisplay@text^(0+128)
  7964  1F32  30A2               	movlw	high (STR_11| (0+32768))
  7965  1F33  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
  7966  1F34  01D2               	clrf	LCDDisplay@value^(0+128)
  7967  1F35  01D3               	clrf	LCDDisplay@delay^(0+128)
  7968  1F36  31A9  21B5  319C   	fcall	_LCDDisplay
  7969  1F39                     l898:	
  7970                           
  7971                           ;star_demo.c: 237: }
  7972                           ;star_demo.c: 242: }
  7973                           ;star_demo.c: 243: DemoOutput_UpdateTxRx(TxNum, RxNum);
  7974  1F39  0020               	movlb	0	; select bank0
  7975  1F3A  085F               	movf	_RxNum,w
  7976  1F3B  0022               	movlb	2	; select bank2
  7977  1F3C  00DA               	movwf	??_run_star_demo^(0+256)
  7978  1F3D  085A               	movf	??_run_star_demo^(0+256),w
  7979  1F3E  0021               	movlb	1	; select bank1
  7980  1F3F  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  7981  1F40  0020               	movlb	0	; select bank0
  7982  1F41  0860               	movf	_TxNum,w
  7983  1F42  31B5  251B  319C   	fcall	_DemoOutput_UpdateTxRx
  7984                           
  7985                           ;star_demo.c: 244: DELAY_ms(1500);
  7986  1F45  30DC               	movlw	220
  7987  1F46  0021               	movlb	1	; select bank1
  7988  1F47  00AC               	movwf	DELAY_ms@ms^(0+128)
  7989  1F48  3005               	movlw	5
  7990  1F49  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7991  1F4A  31AC  2423  319C   	fcall	_DELAY_ms
  7992                           
  7993                           ;star_demo.c: 245: STAR_DEMO_OPTIONS_MESSAGE (role);
  7994  1F4D  0022               	movlb	2	; select bank2
  7995  1F4E  086F               	movf	_role^(0+256),w
  7996  1F4F  31B4  24F1  319C   	fcall	_STAR_DEMO_OPTIONS_MESSAGE
  7997                           
  7998                           ;star_demo.c: 246: }
  7999  1F52  2DE9               	goto	l7667
  8000  1F53                     l7657:	
  8001                           
  8002                           ;star_demo.c: 247: else if(switch_val == 2)
  8003  1F53  3002               	movlw	2
  8004  1F54  0022               	movlb	2	; select bank2
  8005  1F55  066A               	xorwf	run_star_demo@switch_val^(0+256),w
  8006  1F56  1D03               	btfss	3,2
  8007  1F57  2DE9               	goto	l7667
  8008                           
  8009                           ;star_demo.c: 248: {
  8010                           ;star_demo.c: 249: if (select_ed > end_nodes-1)
  8011  1F58  0020               	movlb	0	; select bank0
  8012  1F59  0862               	movf	_end_nodes,w
  8013  1F5A  3EFF               	addlw	255
  8014  1F5B  0022               	movlb	2	; select bank2
  8015  1F5C  00DA               	movwf	??_run_star_demo^(0+256)
  8016  1F5D  30FF               	movlw	255
  8017  1F5E  1803               	skipnc
  8018  1F5F  3000               	movlw	0
  8019  1F60  00DB               	movwf	(??_run_star_demo^(0+256)+1)
  8020  1F61  085B               	movf	(??_run_star_demo+1)^(0+256),w
  8021  1F62  3A80               	xorlw	128
  8022  1F63  00DC               	movwf	(??_run_star_demo+2)^(0+256)
  8023  1F64  3080               	movlw	128
  8024  1F65  025C               	subwf	(??_run_star_demo+2)^(0+256),w
  8025  1F66  1D03               	skipz
  8026  1F67  2F6A               	goto	u8365
  8027  1F68  086B               	movf	run_star_demo@select_ed^(0+256),w
  8028  1F69  025A               	subwf	??_run_star_demo^(0+256),w
  8029  1F6A                     u8365:	
  8030  1F6A  1803               	skipnc
  8031  1F6B  2F6F               	goto	l7663
  8032                           
  8033                           ;star_demo.c: 250: {
  8034                           ;star_demo.c: 252: select_ed = 0;
  8035  1F6C  0022               	movlb	2	; select bank2
  8036  1F6D  01EB               	clrf	run_star_demo@select_ed^(0+256)
  8037                           
  8038                           ;star_demo.c: 253: }
  8039  1F6E  2F75               	goto	l7665
  8040  1F6F                     l7663:	
  8041                           
  8042                           ;star_demo.c: 254: else
  8043                           ;star_demo.c: 255: {
  8044                           ;star_demo.c: 257: select_ed = select_ed+1;
  8045  1F6F  0022               	movlb	2	; select bank2
  8046  1F70  086B               	movf	run_star_demo@select_ed^(0+256),w
  8047  1F71  3E01               	addlw	1
  8048  1F72  00DA               	movwf	??_run_star_demo^(0+256)
  8049  1F73  085A               	movf	??_run_star_demo^(0+256),w
  8050  1F74  00EB               	movwf	run_star_demo@select_ed^(0+256)
  8051  1F75                     l7665:	
  8052                           
  8053                           ;star_demo.c: 258: }
  8054                           ;star_demo.c: 259: chk_sel_status = 0;
  8055  1F75  0023               	movlb	3	; select bank3
  8056  1F76  01D4               	clrf	_chk_sel_status^(0+384)
  8057  1F77  2DE9               	goto	l7667
  8058  1F78                     l7671:	
  8059                           
  8060                           ;star_demo.c: 261: }
  8061                           ;star_demo.c: 262: }
  8062                           ;star_demo.c: 264: }
  8063                           ;star_demo.c: 266: }
  8064                           ;star_demo.c: 267: }
  8065                           ;star_demo.c: 268: }
  8066                           ;star_demo.c: 272: if (lost_connection && !role)
  8067  1F78  0023               	movlb	3	; select bank3
  8068  1F79  0857               	movf	_lost_connection^(0+384),w
  8069  1F7A  1903               	btfsc	3,2
  8070  1F7B  2F87               	goto	l7679
  8071  1F7C  0022               	movlb	2	; select bank2
  8072  1F7D  086F               	movf	_role^(0+256),w
  8073  1F7E  1D03               	btfss	3,2
  8074  1F7F  2F87               	goto	l7679
  8075                           
  8076                           ;star_demo.c: 273: {
  8077                           ;star_demo.c: 274: MiApp_EstablishConnection(0xFF, 0x00);
  8078  1F80  01C5               	clrf	MiApp_EstablishConnection@Mode^(0+256)
  8079  1F81  30FF               	movlw	255
  8080  1F82  3199  215B  319C   	fcall	_MiApp_EstablishConnection
  8081                           
  8082                           ;star_demo.c: 275: lost_connection = 0;
  8083  1F85  0023               	movlb	3	; select bank3
  8084  1F86  01D7               	clrf	_lost_connection^(0+384)
  8085  1F87                     l7679:	
  8086                           
  8087                           ;star_demo.c: 277: }
  8088                           ;star_demo.c: 279: t2 = MiWi_TickGet ();
  8089  1F87  31AB  23D9  319C   	fcall	_MiWi_TickGet
  8090  1F8A  0021               	movlb	1	; select bank1
  8091  1F8B  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  8092  1F8C  0023               	movlb	3	; select bank3
  8093  1F8D  00C1               	movwf	(_t2+3)^(0+384)
  8094  1F8E  0021               	movlb	1	; select bank1
  8095  1F8F  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  8096  1F90  0023               	movlb	3	; select bank3
  8097  1F91  00C0               	movwf	(_t2+2)^(0+384)
  8098  1F92  0021               	movlb	1	; select bank1
  8099  1F93  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  8100  1F94  0023               	movlb	3	; select bank3
  8101  1F95  00BF               	movwf	(_t2+1)^(0+384)
  8102  1F96  0021               	movlb	1	; select bank1
  8103  1F97  0820               	movf	?_MiWi_TickGet^(0+128),w
  8104  1F98  0023               	movlb	3	; select bank3
  8105  1F99  00BE               	movwf	_t2^(0+384)
  8106                           
  8107                           ;star_demo.c: 281: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)*15) && role)
  8108  1F9A  083E               	movf	_t2^(0+384),w
  8109  1F9B  0022               	movlb	2	; select bank2
  8110  1F9C  00DA               	movwf	??_run_star_demo^(0+256)
  8111  1F9D  0023               	movlb	3	; select bank3
  8112  1F9E  083F               	movf	(_t2+1)^(0+384),w
  8113  1F9F  0022               	movlb	2	; select bank2
  8114  1FA0  00DB               	movwf	(??_run_star_demo^(0+256)+1)
  8115  1FA1  0023               	movlb	3	; select bank3
  8116  1FA2  0840               	movf	(_t2+2)^(0+384),w
  8117  1FA3  0022               	movlb	2	; select bank2
  8118  1FA4  00DC               	movwf	(??_run_star_demo^(0+256)+2)
  8119  1FA5  0023               	movlb	3	; select bank3
  8120  1FA6  0841               	movf	(_t2+3)^(0+384),w
  8121  1FA7  0022               	movlb	2	; select bank2
  8122  1FA8  00DD               	movwf	(??_run_star_demo^(0+256)+3)
  8123  1FA9  0023               	movlb	3	; select bank3
  8124  1FAA  093A               	comf	_t1^(0+384),w
  8125  1FAB  0022               	movlb	2	; select bank2
  8126  1FAC  00DE               	movwf	(??_run_star_demo+4)^(0+256)
  8127  1FAD  0023               	movlb	3	; select bank3
  8128  1FAE  093B               	comf	(_t1+1)^(0+384),w
  8129  1FAF  0022               	movlb	2	; select bank2
  8130  1FB0  00DF               	movwf	((??_run_star_demo+4)^(0+256)+1)
  8131  1FB1  0023               	movlb	3	; select bank3
  8132  1FB2  093C               	comf	(_t1+2)^(0+384),w
  8133  1FB3  0022               	movlb	2	; select bank2
  8134  1FB4  00E0               	movwf	((??_run_star_demo+4)^(0+256)+2)
  8135  1FB5  0023               	movlb	3	; select bank3
  8136  1FB6  093D               	comf	(_t1+3)^(0+384),w
  8137  1FB7  0022               	movlb	2	; select bank2
  8138  1FB8  00E1               	movwf	((??_run_star_demo+4)^(0+256)+3)
  8139  1FB9  0ADE               	incf	(??_run_star_demo+4)^(0+256),f
  8140  1FBA  1903               	skipnz
  8141  1FBB  0ADF               	incf	((??_run_star_demo+4)^(0+256)+1),f
  8142  1FBC  1903               	skipnz
  8143  1FBD  0AE0               	incf	((??_run_star_demo+4)^(0+256)+2),f
  8144  1FBE  1903               	skipnz
  8145  1FBF  0AE1               	incf	((??_run_star_demo+4)^(0+256)+3),f
  8146  1FC0  085E               	movf	(??_run_star_demo+4)^(0+256),w
  8147  1FC1  07DA               	addwf	??_run_star_demo^(0+256),f
  8148  1FC2  085F               	movf	(??_run_star_demo+5)^(0+256),w
  8149  1FC3  3DDB               	addwfc	(??_run_star_demo^(0+256)+1),f
  8150  1FC4  0860               	movf	(??_run_star_demo+6)^(0+256),w
  8151  1FC5  3DDC               	addwfc	(??_run_star_demo^(0+256)+2),f
  8152  1FC6  0861               	movf	(??_run_star_demo+7)^(0+256),w
  8153  1FC7  3DDD               	addwfc	(??_run_star_demo^(0+256)+3),f
  8154  1FC8  085D               	movf	(??_run_star_demo^(0+256)+3),w
  8155  1FC9  1D03               	btfss	3,2
  8156  1FCA  2FD3               	goto	l7683
  8157  1FCB  308D               	movlw	141
  8158  1FCC  025A               	subwf	??_run_star_demo^(0+256),w
  8159  1FCD  3086               	movlw	134
  8160  1FCE  3B5B               	subwfb	(??_run_star_demo^(0+256)+1),w
  8161  1FCF  3047               	movlw	71
  8162  1FD0  3B5C               	subwfb	(??_run_star_demo^(0+256)+2),w
  8163  1FD1  1C03               	btfss	3,0
  8164  1FD2  2C16               	goto	l7697
  8165  1FD3                     l7683:	
  8166  1FD3  086F               	movf	_role^(0+256),w
  8167  1FD4  1903               	btfsc	3,2
  8168  1FD5  2C16               	goto	l7697
  8169                           
  8170                           ;star_demo.c: 282: {
  8171                           ;star_demo.c: 283: LCD_Erase();
  8172  1FD6  31B5  25EA  319C   	fcall	_LCD_Erase
  8173                           
  8174                           ;star_demo.c: 284: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
  8175  1FD9  3028               	movlw	low (STR_12| (0+32768))
  8176  1FDA  0021               	movlb	1	; select bank1
  8177  1FDB  00AE               	movwf	sprintf@f^(0+128)
  8178  1FDC  30A2               	movlw	high (STR_12| (0+32768))
  8179  1FDD  00AF               	movwf	(sprintf@f^(0+128)+1)
  8180  1FDE  0020               	movlb	0	; select bank0
  8181  1FDF  086A               	movf	_conn_size,w
  8182  1FE0  0022               	movlb	2	; select bank2
  8183  1FE1  00DA               	movwf	??_run_star_demo^(0+256)
  8184  1FE2  01DB               	clrf	(??_run_star_demo^(0+256)+1)
  8185  1FE3  085A               	movf	??_run_star_demo^(0+256),w
  8186  1FE4  0021               	movlb	1	; select bank1
  8187  1FE5  00B0               	movwf	(?_sprintf^(0+128)+2)
  8188  1FE6  0022               	movlb	2	; select bank2
  8189  1FE7  085B               	movf	(??_run_star_demo+1)^(0+256),w
  8190  1FE8  0021               	movlb	1	; select bank1
  8191  1FE9  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8192  1FEA  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
  8193  1FEB  3193  238C  319C   	fcall	_sprintf
  8194                           
  8195                           ;star_demo.c: 285: LCD_Update();
  8196  1FEE  31AD  2509  319C   	fcall	_LCD_Update
  8197                           
  8198                           ;star_demo.c: 286: DELAY_ms(2000);
  8199  1FF1  30D0               	movlw	208
  8200  1FF2  0021               	movlb	1	; select bank1
  8201  1FF3  00AC               	movwf	DELAY_ms@ms^(0+128)
  8202  1FF4  3007               	movlw	7
  8203  1FF5  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8204  1FF6  31AC  2423  319C   	fcall	_DELAY_ms
  8205                           
  8206                           ;star_demo.c: 287: display_connections = 0;
  8207  1FF9  0023               	movlb	3	; select bank3
  8208  1FFA  01D5               	clrf	_display_connections^(0+384)
  8209                           
  8210                           ;star_demo.c: 288: STAR_DEMO_OPTIONS_MESSAGE (1);
  8211  1FFB  3001               	movlw	1
  8212  1FFC  31B4  24F1  319C   	fcall	_STAR_DEMO_OPTIONS_MESSAGE
  8213  1FFF  2C16               	goto	l7697
  8214  2000                     __end_of_run_star_demo:	
  8215                           
  8216                           	psect	text9
  8217  2E4B                     __ptext9:	
  8218 ;; *************** function _Process_RxMessage *****************
  8219 ;; Defined at:
  8220 ;;		line 44 in file "../src/star_demo.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  User_data_st    1   39[BANK2 ] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      unsigned char 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;Total ram usage:        3 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:   16
  8241 ;; This function calls:
  8242 ;;		_DELAY_ms
  8243 ;;		_DemoOutput_UpdateTxRx
  8244 ;;		_MiApp_DiscardMessage
  8245 ;;		_MiApp_MessageAvailable
  8246 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  8247 ;;		_Source_END_DEVICE_INFO
  8248 ;; This function is called by:
  8249 ;;		_run_star_demo
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _Process_RxMessage
  8255  2E4B                     _Process_RxMessage:	
  8256                           
  8257                           ;star_demo.c: 46: bool User_data_status = 0;
  8258                           
  8259                           ;incstack = 0
  8260 ;; hardware stack exceeded
  8261                           ; Regs used in _Process_RxMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8262  2E4B  0022               	movlb	2	; select bank2
  8263  2E4C  01C7               	clrf	Process_RxMessage@User_data_status^(0+256)
  8264                           
  8265                           ;star_demo.c: 53: User_data_status = MiApp_MessageAvailable();
  8266  2E4D  31B5  2512  31AE   	fcall	_MiApp_MessageAvailable
  8267  2E50  0022               	movlb	2	; select bank2
  8268  2E51  00C5               	movwf	??_Process_RxMessage^(0+256)
  8269  2E52  0845               	movf	??_Process_RxMessage^(0+256),w
  8270  2E53  00C7               	movwf	Process_RxMessage@User_data_status^(0+256)
  8271                           
  8272                           ;star_demo.c: 54: if(User_data_status)
  8273  2E54  0847               	movf	Process_RxMessage@User_data_status^(0+256),w
  8274  2E55  1903               	btfsc	3,2
  8275  2E56  2E9A               	goto	l7331
  8276                           
  8277                           ;star_demo.c: 55: {
  8278                           ;star_demo.c: 65: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  8279  2E57  3001               	movlw	1
  8280  2E58  00C5               	movwf	??_Process_RxMessage^(0+256)
  8281  2E59  0845               	movf	??_Process_RxMessage^(0+256),w
  8282  2E5A  0020               	movlb	0	; select bank0
  8283  2E5B  07DF               	addwf	_RxNum,f
  8284  2E5C  085F               	movf	_RxNum,w
  8285  2E5D  0022               	movlb	2	; select bank2
  8286  2E5E  00C6               	movwf	(??_Process_RxMessage+1)^(0+256)
  8287  2E5F  0846               	movf	(??_Process_RxMessage+1)^(0+256),w
  8288  2E60  0021               	movlb	1	; select bank1
  8289  2E61  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  8290  2E62  0020               	movlb	0	; select bank0
  8291  2E63  0860               	movf	_TxNum,w
  8292  2E64  31B5  251B  31AE   	fcall	_DemoOutput_UpdateTxRx
  8293                           
  8294                           ;star_demo.c: 66: DELAY_ms(2000);
  8295  2E67  30D0               	movlw	208
  8296  2E68  0021               	movlb	1	; select bank1
  8297  2E69  00AC               	movwf	DELAY_ms@ms^(0+128)
  8298  2E6A  3007               	movlw	7
  8299  2E6B  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8300  2E6C  31AC  2423  31AE   	fcall	_DELAY_ms
  8301                           
  8302                           ;star_demo.c: 68: LATDbits.LATD6 ^= 1;
  8303  2E6F  0022               	movlb	2	; select bank2
  8304  2E70  0E0F               	swapf	15,w	;volatile
  8305  2E71  00C5               	movwf	??_Process_RxMessage^(0+256)
  8306  2E72  0CC5               	rrf	??_Process_RxMessage^(0+256),f
  8307  2E73  0C45               	rrf	??_Process_RxMessage^(0+256),w
  8308  2E74  3901               	andlw	1
  8309  2E75  00C5               	movwf	??_Process_RxMessage^(0+256)
  8310  2E76  3001               	movlw	1
  8311  2E77  06C5               	xorwf	??_Process_RxMessage^(0+256),f
  8312  2E78  0EC5               	swapf	??_Process_RxMessage^(0+256),f
  8313  2E79  0DC5               	rlf	??_Process_RxMessage^(0+256),f
  8314  2E7A  0DC5               	rlf	??_Process_RxMessage^(0+256),f
  8315  2E7B  080F               	movf	15,w	;volatile
  8316  2E7C  0645               	xorwf	??_Process_RxMessage^(0+256),w
  8317  2E7D  39BF               	andlw	-65
  8318  2E7E  0645               	xorwf	??_Process_RxMessage^(0+256),w
  8319  2E7F  008F               	movwf	15	;volatile
  8320                           
  8321                           ;star_demo.c: 72: if (!role && !rxMessage.flags.bits.broadcast)
  8322  2E80  086F               	movf	_role^(0+256),w
  8323  2E81  1D03               	btfss	3,2
  8324  2E82  2E93               	goto	l7327
  8325  2E83  0023               	movlb	3	; select bank3
  8326  2E84  0820               	movf	_rxMessage^(0+384),w
  8327  2E85  3903               	andlw	3
  8328  2E86  3A00               	xorlw	0
  8329  2E87  1D03               	skipz
  8330  2E88  2E93               	goto	l7327
  8331                           
  8332                           ;star_demo.c: 73: {
  8333                           ;star_demo.c: 74: Source_END_DEVICE_INFO(rxMessage.Payload);
  8334  2E89  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
  8335  2E8A  0021               	movlb	1	; select bank1
  8336  2E8B  00D1               	movwf	(Source_END_DEVICE_INFO@SrAddr+1)^(0+128)
  8337  2E8C  0023               	movlb	3	; select bank3
  8338  2E8D  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
  8339  2E8E  0021               	movlb	1	; select bank1
  8340  2E8F  00D0               	movwf	Source_END_DEVICE_INFO@SrAddr^(0+128)
  8341  2E90  31AB  2307  31AE   	fcall	_Source_END_DEVICE_INFO
  8342  2E93                     l7327:	
  8343                           
  8344                           ;star_demo.c: 75: }
  8345                           ;star_demo.c: 83: MiApp_DiscardMessage();
  8346  2E93  31B4  24FA  31AE   	fcall	_MiApp_DiscardMessage
  8347                           
  8348                           ;star_demo.c: 84: STAR_DEMO_OPTIONS_MESSAGE (role);
  8349  2E96  0022               	movlb	2	; select bank2
  8350  2E97  086F               	movf	_role^(0+256),w
  8351  2E98  31B4  24F1         	fcall	_STAR_DEMO_OPTIONS_MESSAGE
  8352  2E9A                     l7331:	
  8353                           
  8354                           ;star_demo.c: 86: }
  8355                           ;star_demo.c: 87: return User_data_status;
  8356  2E9A  0022               	movlb	2	; select bank2
  8357  2E9B  0847               	movf	Process_RxMessage@User_data_status^(0+256),w
  8358  2E9C  0008               	return
  8359  2E9D                     __end_of_Process_RxMessage:	
  8360                           
  8361                           	psect	text10
  8362  2B07                     __ptext10:	
  8363 ;; *************** function _Source_END_DEVICE_INFO *****************
  8364 ;; Defined at:
  8365 ;;		line 301 in file "../src/demo_ouput.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  SrAddr          2   48[BANK1 ] PTR unsigned char 
  8368 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8380 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;Total ram usage:        8 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    9
  8387 ;; This function calls:
  8388 ;;		_DELAY_ms
  8389 ;;		_LCD_Erase
  8390 ;;		_LCD_Update
  8391 ;;		_sprintf
  8392 ;; This function is called by:
  8393 ;;		_Process_RxMessage
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           
  8398                           ;psect for function _Source_END_DEVICE_INFO
  8399  2B07                     _Source_END_DEVICE_INFO:	
  8400                           
  8401                           ;demo_ouput.c: 303: LCD_Erase();
  8402                           
  8403                           ;incstack = 0
  8404                           ; Regs used in _Source_END_DEVICE_INFO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8405  2B07  31B5  25EA  31AB   	fcall	_LCD_Erase
  8406                           
  8407                           ;demo_ouput.c: 304: sprintf((char *)&(LCDText), (char*)"Data Packet from");
  8408  2B0A  308F               	movlw	low (STR_5| (0+32768))
  8409  2B0B  0021               	movlb	1	; select bank1
  8410  2B0C  00AE               	movwf	sprintf@f^(0+128)
  8411  2B0D  30A2               	movlw	high (STR_5| (0+32768))
  8412  2B0E  00AF               	movwf	(sprintf@f^(0+128)+1)
  8413  2B0F  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
  8414  2B10  3193  238C  31AB   	fcall	_sprintf
  8415                           
  8416                           ;demo_ouput.c: 305: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
  8417  2B13  30E9               	movlw	low (STR_6| (0+32768))
  8418  2B14  0021               	movlb	1	; select bank1
  8419  2B15  00AE               	movwf	sprintf@f^(0+128)
  8420  2B16  30A1               	movlw	high (STR_6| (0+32768))
  8421  2B17  00AF               	movwf	(sprintf@f^(0+128)+1)
  8422  2B18  0850               	movf	Source_END_DEVICE_INFO@SrAddr^(0+128),w
  8423  2B19  0086               	movwf	6
  8424  2B1A  0851               	movf	(Source_END_DEVICE_INFO@SrAddr+1)^(0+128),w
  8425  2B1B  0087               	movwf	7
  8426  2B1C  0801               	movf	1,w
  8427  2B1D  00D2               	movwf	??_Source_END_DEVICE_INFO^(0+128)
  8428  2B1E  01D3               	clrf	(??_Source_END_DEVICE_INFO^(0+128)+1)
  8429  2B1F  0852               	movf	??_Source_END_DEVICE_INFO^(0+128),w
  8430  2B20  00B0               	movwf	(?_sprintf^(0+128)+2)
  8431  2B21  0853               	movf	(??_Source_END_DEVICE_INFO+1)^(0+128),w
  8432  2B22  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8433  2B23  0850               	movf	Source_END_DEVICE_INFO@SrAddr^(0+128),w
  8434  2B24  0086               	movwf	6
  8435  2B25  0851               	movf	(Source_END_DEVICE_INFO@SrAddr+1)^(0+128),w
  8436  2B26  0087               	movwf	7
  8437  2B27  3141               	addfsr 1,1
  8438  2B28  0801               	movf	1,w
  8439  2B29  00D4               	movwf	(??_Source_END_DEVICE_INFO+2)^(0+128)
  8440  2B2A  01D5               	clrf	((??_Source_END_DEVICE_INFO+2)^(0+128)+1)
  8441  2B2B  0854               	movf	(??_Source_END_DEVICE_INFO+2)^(0+128),w
  8442  2B2C  00B2               	movwf	(?_sprintf^(0+128)+4)
  8443  2B2D  0855               	movf	(??_Source_END_DEVICE_INFO+3)^(0+128),w
  8444  2B2E  00B3               	movwf	((?_sprintf+1)^(0+128)+4)
  8445  2B2F  0850               	movf	Source_END_DEVICE_INFO@SrAddr^(0+128),w
  8446  2B30  0086               	movwf	6
  8447  2B31  0851               	movf	(Source_END_DEVICE_INFO@SrAddr+1)^(0+128),w
  8448  2B32  0087               	movwf	7
  8449  2B33  3142               	addfsr 1,2
  8450  2B34  0801               	movf	1,w
  8451  2B35  00D6               	movwf	(??_Source_END_DEVICE_INFO+4)^(0+128)
  8452  2B36  01D7               	clrf	((??_Source_END_DEVICE_INFO+4)^(0+128)+1)
  8453  2B37  0856               	movf	(??_Source_END_DEVICE_INFO+4)^(0+128),w
  8454  2B38  00B4               	movwf	(?_sprintf^(0+128)+6)
  8455  2B39  0857               	movf	(??_Source_END_DEVICE_INFO+5)^(0+128),w
  8456  2B3A  00B5               	movwf	((?_sprintf+1)^(0+128)+6)
  8457  2B3B  30D8               	movlw	(low ((_LCDText| (0+512)+16)))& (0+255)
  8458  2B3C  3193  238C  31AB   	fcall	_sprintf
  8459                           
  8460                           ;demo_ouput.c: 306: LCD_Update();
  8461  2B3F  31AD  2509  31AB   	fcall	_LCD_Update
  8462                           
  8463                           ;demo_ouput.c: 307: DELAY_ms(1200);
  8464  2B42  30B0               	movlw	176
  8465  2B43  0021               	movlb	1	; select bank1
  8466  2B44  00AC               	movwf	DELAY_ms@ms^(0+128)
  8467  2B45  3004               	movlw	4
  8468  2B46  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8469  2B47  31AC  2423         	fcall	_DELAY_ms
  8470  2B49  0008               	return
  8471  2B4A                     __end_of_Source_END_DEVICE_INFO:	
  8472                           
  8473                           	psect	text11
  8474  351B                     __ptext11:	
  8475 ;; *************** function _DemoOutput_UpdateTxRx *****************
  8476 ;; Defined at:
  8477 ;;		line 278 in file "../src/demo_ouput.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  TxNum           1    wreg     unsigned char 
  8480 ;;  RxNum           1   52[BANK1 ] unsigned char 
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  TxNum           1   54[BANK1 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8492 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;Total ram usage:        3 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:   10
  8499 ;; This function calls:
  8500 ;;		_LCDTRXCount
  8501 ;; This function is called by:
  8502 ;;		_Process_RxMessage
  8503 ;;		_run_star_demo
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function _DemoOutput_UpdateTxRx
  8509  351B                     _DemoOutput_UpdateTxRx:	
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _DemoOutput_UpdateTxRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8513                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  8514  351B  0021               	movlb	1	; select bank1
  8515  351C  00D6               	movwf	DemoOutput_UpdateTxRx@TxNum^(0+128)
  8516                           
  8517                           ;demo_ouput.c: 280: LCDTRXCount(TxNum, RxNum);
  8518  351D  0854               	movf	DemoOutput_UpdateTxRx@RxNum^(0+128),w
  8519  351E  00D5               	movwf	??_DemoOutput_UpdateTxRx^(0+128)
  8520  351F  0855               	movf	??_DemoOutput_UpdateTxRx^(0+128),w
  8521  3520  00D0               	movwf	LCDTRXCount@rxCount^(0+128)
  8522  3521  0856               	movf	DemoOutput_UpdateTxRx@TxNum^(0+128),w
  8523  3522  31A9  2185         	fcall	_LCDTRXCount
  8524  3524  0008               	return
  8525  3525                     __end_of_DemoOutput_UpdateTxRx:	
  8526                           
  8527                           	psect	text12
  8528  2985                     __ptext12:	
  8529 ;; *************** function _LCDTRXCount *****************
  8530 ;; Defined at:
  8531 ;;		line 339 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  txCount         1    wreg     unsigned char 
  8534 ;;  rxCount         1   48[BANK1 ] unsigned char 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  txCount         1   51[BANK1 ] unsigned char 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        4 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    9
  8553 ;; This function calls:
  8554 ;;		_DELAY_ms
  8555 ;;		_LCD_Erase
  8556 ;;		_LCD_Update
  8557 ;;		_sprintf
  8558 ;; This function is called by:
  8559 ;;		_DemoOutput_UpdateTxRx
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _LCDTRXCount
  8565  2985                     _LCDTRXCount:	
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in _LCDTRXCount: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8569                           ;LCDTRXCount@txCount stored from wreg
  8570  2985  0021               	movlb	1	; select bank1
  8571  2986  00D3               	movwf	LCDTRXCount@txCount^(0+128)
  8572                           
  8573                           ;lcd.c: 342: LCD_Erase();
  8574  2987  31B5  25EA  31A9   	fcall	_LCD_Erase
  8575                           
  8576                           ;lcd.c: 343: DELAY_ms(5);
  8577  298A  3005               	movlw	5
  8578  298B  0021               	movlb	1	; select bank1
  8579  298C  00AC               	movwf	DELAY_ms@ms^(0+128)
  8580  298D  3000               	movlw	0
  8581  298E  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8582  298F  31AC  2423  31A9   	fcall	_DELAY_ms
  8583                           
  8584                           ;lcd.c: 344: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  8585  2992  306D               	movlw	low (STR_14| (0+32768))
  8586  2993  0021               	movlb	1	; select bank1
  8587  2994  00AE               	movwf	sprintf@f^(0+128)
  8588  2995  30A2               	movlw	high (STR_14| (0+32768))
  8589  2996  00AF               	movwf	(sprintf@f^(0+128)+1)
  8590  2997  0853               	movf	LCDTRXCount@txCount^(0+128),w
  8591  2998  00D1               	movwf	??_LCDTRXCount^(0+128)
  8592  2999  01D2               	clrf	(??_LCDTRXCount^(0+128)+1)
  8593  299A  0851               	movf	??_LCDTRXCount^(0+128),w
  8594  299B  00B0               	movwf	(?_sprintf^(0+128)+2)
  8595  299C  0852               	movf	(??_LCDTRXCount+1)^(0+128),w
  8596  299D  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8597  299E  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
  8598  299F  3193  238C  31A9   	fcall	_sprintf
  8599                           
  8600                           ;lcd.c: 345: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  8601  29A2  305C               	movlw	low (STR_15| (0+32768))
  8602  29A3  0021               	movlb	1	; select bank1
  8603  29A4  00AE               	movwf	sprintf@f^(0+128)
  8604  29A5  30A2               	movlw	high (STR_15| (0+32768))
  8605  29A6  00AF               	movwf	(sprintf@f^(0+128)+1)
  8606  29A7  0850               	movf	LCDTRXCount@rxCount^(0+128),w
  8607  29A8  00D1               	movwf	??_LCDTRXCount^(0+128)
  8608  29A9  01D2               	clrf	(??_LCDTRXCount^(0+128)+1)
  8609  29AA  0851               	movf	??_LCDTRXCount^(0+128),w
  8610  29AB  00B0               	movwf	(?_sprintf^(0+128)+2)
  8611  29AC  0852               	movf	(??_LCDTRXCount+1)^(0+128),w
  8612  29AD  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8613  29AE  30D8               	movlw	(low ((_LCDText| (0+512)+16)))& (0+255)
  8614  29AF  3193  238C  31A9   	fcall	_sprintf
  8615                           
  8616                           ;lcd.c: 346: LCD_Update();
  8617  29B2  31AD  2509         	fcall	_LCD_Update
  8618  29B4  0008               	return
  8619  29B5                     __end_of_LCDTRXCount:	
  8620                           
  8621                           	psect	text13
  8622  2416                     __ptext13:	
  8623 ;; *************** function _MiApp_UnicastStar *****************
  8624 ;; Defined at:
  8625 ;;		line 1988 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  SecEn           1    wreg     unsigned char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  SecEn           1   54[BANK2 ] unsigned char 
  8630 ;;  t2              4   50[BANK2 ] struct _MIWI_TICK
  8631 ;;  t1              4   46[BANK2 ] struct _MIWI_TICK
  8632 ;;  status          1   45[BANK2 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      unsigned char 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;Total ram usage:       18 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:   16
  8649 ;; This function calls:
  8650 ;;		_MiApp_MessageAvailable
  8651 ;;		_MiWi_TickGet
  8652 ;;		_SendPacket
  8653 ;; This function is called by:
  8654 ;;		_run_star_demo
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           
  8659                           ;psect for function _MiApp_UnicastStar
  8660  2416                     _MiApp_UnicastStar:	
  8661                           
  8662                           ;incstack = 0
  8663 ;; hardware stack exceeded
  8664                           ; Regs used in _MiApp_UnicastStar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8665                           ;MiApp_UnicastStar@SecEn stored from wreg
  8666  2416  0022               	movlb	2	; select bank2
  8667  2417  00D6               	movwf	MiApp_UnicastStar@SecEn^(0+256)
  8668                           
  8669                           ;miwi_p2p.c: 1990: rec_ack = 0;
  8670  2418  0020               	movlb	0	; select bank0
  8671  2419  01E5               	clrf	_rec_ack
  8672                           
  8673                           ;miwi_p2p.c: 1991: bool status;
  8674                           ;miwi_p2p.c: 1996: status = SendPacket(0, ConnectionTable[0].Address, 1, SecEn);
  8675  241A  3068               	movlw	104
  8676  241B  0021               	movlb	1	; select bank1
  8677  241C  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
  8678  241D  3023               	movlw	35
  8679  241E  00D7               	movwf	(SendPacket@DestinationAddress^(0+128)+1)
  8680  241F  01D8               	clrf	SendPacket@isCommand^(0+128)
  8681  2420  0AD8               	incf	SendPacket@isCommand^(0+128),f
  8682  2421  0022               	movlb	2	; select bank2
  8683  2422  0856               	movf	MiApp_UnicastStar@SecEn^(0+256),w
  8684  2423  00C5               	movwf	??_MiApp_UnicastStar^(0+256)
  8685  2424  0845               	movf	??_MiApp_UnicastStar^(0+256),w
  8686  2425  0021               	movlb	1	; select bank1
  8687  2426  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
  8688  2427  3000               	movlw	0
  8689  2428  31AB  2390  31A4   	fcall	_SendPacket
  8690  242B  0022               	movlb	2	; select bank2
  8691  242C  00C6               	movwf	(??_MiApp_UnicastStar+1)^(0+256)
  8692  242D  0846               	movf	(??_MiApp_UnicastStar+1)^(0+256),w
  8693  242E  00CD               	movwf	MiApp_UnicastStar@status^(0+256)
  8694                           
  8695                           ;miwi_p2p.c: 2001: MIWI_TICK t1, t2;
  8696                           ;miwi_p2p.c: 2003: t1 = MiWi_TickGet();
  8697  242F  31AB  23D9  31A4   	fcall	_MiWi_TickGet
  8698  2432  0021               	movlb	1	; select bank1
  8699  2433  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  8700  2434  0022               	movlb	2	; select bank2
  8701  2435  00D1               	movwf	(MiApp_UnicastStar@t1+3)^(0+256)
  8702  2436  0021               	movlb	1	; select bank1
  8703  2437  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  8704  2438  0022               	movlb	2	; select bank2
  8705  2439  00D0               	movwf	(MiApp_UnicastStar@t1+2)^(0+256)
  8706  243A  0021               	movlb	1	; select bank1
  8707  243B  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  8708  243C  0022               	movlb	2	; select bank2
  8709  243D  00CF               	movwf	(MiApp_UnicastStar@t1+1)^(0+256)
  8710  243E  0021               	movlb	1	; select bank1
  8711  243F  0820               	movf	?_MiWi_TickGet^(0+128),w
  8712  2440  0022               	movlb	2	; select bank2
  8713  2441  00CE               	movwf	MiApp_UnicastStar@t1^(0+256)
  8714  2442                     l7193:	
  8715                           ;miwi_p2p.c: 2004: while (!rec_ack)
  8716                           
  8717  2442  0020               	movlb	0	; select bank0
  8718  2443  0865               	movf	_rec_ack,w
  8719  2444  1D03               	btfss	3,2
  8720  2445  2C8C               	goto	l7195
  8721                           
  8722                           ;miwi_p2p.c: 2005: {
  8723                           ;miwi_p2p.c: 2006: t2 = MiWi_TickGet();
  8724  2446  31AB  23D9  31A4   	fcall	_MiWi_TickGet
  8725  2449  0021               	movlb	1	; select bank1
  8726  244A  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  8727  244B  0022               	movlb	2	; select bank2
  8728  244C  00D5               	movwf	(MiApp_UnicastStar@t2+3)^(0+256)
  8729  244D  0021               	movlb	1	; select bank1
  8730  244E  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  8731  244F  0022               	movlb	2	; select bank2
  8732  2450  00D4               	movwf	(MiApp_UnicastStar@t2+2)^(0+256)
  8733  2451  0021               	movlb	1	; select bank1
  8734  2452  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  8735  2453  0022               	movlb	2	; select bank2
  8736  2454  00D3               	movwf	(MiApp_UnicastStar@t2+1)^(0+256)
  8737  2455  0021               	movlb	1	; select bank1
  8738  2456  0820               	movf	?_MiWi_TickGet^(0+128),w
  8739  2457  0022               	movlb	2	; select bank2
  8740  2458  00D2               	movwf	MiApp_UnicastStar@t2^(0+256)
  8741                           
  8742                           ;miwi_p2p.c: 2007: MiApp_MessageAvailable();
  8743  2459  31B5  2512  31A4   	fcall	_MiApp_MessageAvailable
  8744                           
  8745                           ;miwi_p2p.c: 2009: if((t2.Val - t1.Val) > ((((uint32_t)(10000000)/32)/10)*2))
  8746  245C  0022               	movlb	2	; select bank2
  8747  245D  0852               	movf	MiApp_UnicastStar@t2^(0+256),w
  8748  245E  00C5               	movwf	??_MiApp_UnicastStar^(0+256)
  8749  245F  0853               	movf	(MiApp_UnicastStar@t2+1)^(0+256),w
  8750  2460  00C6               	movwf	(??_MiApp_UnicastStar^(0+256)+1)
  8751  2461  0854               	movf	(MiApp_UnicastStar@t2+2)^(0+256),w
  8752  2462  00C7               	movwf	(??_MiApp_UnicastStar^(0+256)+2)
  8753  2463  0855               	movf	(MiApp_UnicastStar@t2+3)^(0+256),w
  8754  2464  00C8               	movwf	(??_MiApp_UnicastStar^(0+256)+3)
  8755  2465  094E               	comf	MiApp_UnicastStar@t1^(0+256),w
  8756  2466  00C9               	movwf	(??_MiApp_UnicastStar+4)^(0+256)
  8757  2467  094F               	comf	(MiApp_UnicastStar@t1+1)^(0+256),w
  8758  2468  00CA               	movwf	((??_MiApp_UnicastStar+4)^(0+256)+1)
  8759  2469  0950               	comf	(MiApp_UnicastStar@t1+2)^(0+256),w
  8760  246A  00CB               	movwf	((??_MiApp_UnicastStar+4)^(0+256)+2)
  8761  246B  0951               	comf	(MiApp_UnicastStar@t1+3)^(0+256),w
  8762  246C  00CC               	movwf	((??_MiApp_UnicastStar+4)^(0+256)+3)
  8763  246D  0AC9               	incf	(??_MiApp_UnicastStar+4)^(0+256),f
  8764  246E  1903               	skipnz
  8765  246F  0ACA               	incf	((??_MiApp_UnicastStar+4)^(0+256)+1),f
  8766  2470  1903               	skipnz
  8767  2471  0ACB               	incf	((??_MiApp_UnicastStar+4)^(0+256)+2),f
  8768  2472  1903               	skipnz
  8769  2473  0ACC               	incf	((??_MiApp_UnicastStar+4)^(0+256)+3),f
  8770  2474  0849               	movf	(??_MiApp_UnicastStar+4)^(0+256),w
  8771  2475  07C5               	addwf	??_MiApp_UnicastStar^(0+256),f
  8772  2476  084A               	movf	(??_MiApp_UnicastStar+5)^(0+256),w
  8773  2477  3DC6               	addwfc	(??_MiApp_UnicastStar^(0+256)+1),f
  8774  2478  084B               	movf	(??_MiApp_UnicastStar+6)^(0+256),w
  8775  2479  3DC7               	addwfc	(??_MiApp_UnicastStar^(0+256)+2),f
  8776  247A  084C               	movf	(??_MiApp_UnicastStar+7)^(0+256),w
  8777  247B  3DC8               	addwfc	(??_MiApp_UnicastStar^(0+256)+3),f
  8778  247C  0848               	movf	(??_MiApp_UnicastStar^(0+256)+3),w
  8779  247D  1D03               	btfss	3,2
  8780  247E  2C88               	goto	l7189
  8781  247F  0847               	movf	(??_MiApp_UnicastStar^(0+256)+2),w
  8782  2480  1D03               	btfss	3,2
  8783  2481  2C88               	goto	l7189
  8784  2482  3025               	movlw	37
  8785  2483  0245               	subwf	??_MiApp_UnicastStar^(0+256),w
  8786  2484  30F4               	movlw	244
  8787  2485  3B46               	subwfb	(??_MiApp_UnicastStar^(0+256)+1),w
  8788  2486  1C03               	btfss	3,0
  8789  2487  2C42               	goto	l7193
  8790  2488                     l7189:	
  8791                           
  8792                           ;miwi_p2p.c: 2010: {
  8793                           ;miwi_p2p.c: 2011: if (rec_ack != 1)
  8794  2488  0020               	movlb	0	; select bank0
  8795  2489  0365               	decf	_rec_ack,w
  8796  248A  1903               	btfsc	3,2
  8797  248B  2C42               	goto	l7193
  8798  248C                     l7195:	
  8799                           ;miwi_p2p.c: 2012: {
  8800                           ;miwi_p2p.c: 2013: break;
  8801                           
  8802                           
  8803                           ;miwi_p2p.c: 2014: }
  8804                           ;miwi_p2p.c: 2015: }
  8805                           ;miwi_p2p.c: 2016: }
  8806                           ;miwi_p2p.c: 2019: return rec_ack;
  8807  248C  0865               	movf	_rec_ack,w
  8808  248D  0008               	return
  8809  248E                     __end_of_MiApp_UnicastStar:	
  8810                           
  8811                           	psect	text14
  8812  3563                     __ptext14:	
  8813 ;; *************** function _MiApp_BroadcastPacket *****************
  8814 ;; Defined at:
  8815 ;;		line 1705 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  SecEn           1    wreg     unsigned char 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  SecEn           1   67[BANK1 ] unsigned char 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      unsigned char 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;Total ram usage:        2 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:   11
  8836 ;; This function calls:
  8837 ;;		_SendPacket
  8838 ;; This function is called by:
  8839 ;;		_run_star_demo
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           
  8844                           ;psect for function _MiApp_BroadcastPacket
  8845  3563                     _MiApp_BroadcastPacket:	
  8846                           
  8847                           ;incstack = 0
  8848                           ; Regs used in _MiApp_BroadcastPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8849                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  8850  3563  0021               	movlb	1	; select bank1
  8851  3564  00E3               	movwf	MiApp_BroadcastPacket@SecEn^(0+128)
  8852                           
  8853                           ;miwi_p2p.c: 1735: return SendPacket(1, (0), 0, SecEn);
  8854                           ;	Return value of _MiApp_BroadcastPacket is never used
  8855  3565  3000               	movlw	0
  8856  3566  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
  8857  3567  3000               	movlw	0
  8858  3568  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
  8859  3569  01D8               	clrf	SendPacket@isCommand^(0+128)
  8860  356A  0863               	movf	MiApp_BroadcastPacket@SecEn^(0+128),w
  8861  356B  00E2               	movwf	??_MiApp_BroadcastPacket^(0+128)
  8862  356C  0862               	movf	??_MiApp_BroadcastPacket^(0+128),w
  8863  356D  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
  8864  356E  3001               	movlw	1
  8865  356F  31AB  2390         	fcall	_SendPacket
  8866  3571  0008               	return
  8867  3572                     __end_of_MiApp_BroadcastPacket:	
  8868                           
  8869                           	psect	text15
  8870  2588                     __ptext15:	
  8871 ;; *************** function _ButtonPressed *****************
  8872 ;; Defined at:
  8873 ;;		line 357 in file "../src/demo_ouput.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;		None
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  t               4   23[BANK1 ] struct _MIWI_TICK
  8878 ;;  tickDifferen    4   19[BANK1 ] struct _MIWI_TICK
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      unsigned char 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0, pclath, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;Total ram usage:       16 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    6
  8895 ;; This function calls:
  8896 ;;		_MiWi_TickGet
  8897 ;; This function is called by:
  8898 ;;		_run_star_demo
  8899 ;;		_freezer_feature
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function _ButtonPressed
  8905  2588                     _ButtonPressed:	
  8906                           
  8907                           ;demo_ouput.c: 359: MIWI_TICK tickDifference;
  8908                           ;demo_ouput.c: 361: if(PORTBbits.RB0 == 0)
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in _ButtonPressed: [wreg+status,2+status,0+pclath+cstack]
  8912  2588  0020               	movlb	0	; select bank0
  8913  2589  180D               	btfsc	13,0	;volatile
  8914  258A  2DA4               	goto	l768
  8915                           
  8916                           ;demo_ouput.c: 362: {
  8917                           ;demo_ouput.c: 364: if(PUSH_BUTTON_pressed == 0)
  8918  258B  085D               	movf	_PUSH_BUTTON_pressed,w
  8919  258C  1D03               	btfss	3,2
  8920  258D  2E06               	goto	l7305
  8921                           
  8922                           ;demo_ouput.c: 365: {
  8923                           ;demo_ouput.c: 366: PUSH_BUTTON_pressed = 1;
  8924  258E  01DD               	clrf	_PUSH_BUTTON_pressed
  8925  258F  0ADD               	incf	_PUSH_BUTTON_pressed,f
  8926                           
  8927                           ;demo_ouput.c: 367: PUSH_BUTTON_press_time = MiWi_TickGet();
  8928  2590  31AB  23D9         	fcall	_MiWi_TickGet
  8929  2592  0021               	movlb	1	; select bank1
  8930  2593  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  8931  2594  0023               	movlb	3	; select bank3
  8932  2595  00B5               	movwf	(_PUSH_BUTTON_press_time+3)^(0+384)
  8933  2596  0021               	movlb	1	; select bank1
  8934  2597  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  8935  2598  0023               	movlb	3	; select bank3
  8936  2599  00B4               	movwf	(_PUSH_BUTTON_press_time+2)^(0+384)
  8937  259A  0021               	movlb	1	; select bank1
  8938  259B  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  8939  259C  0023               	movlb	3	; select bank3
  8940  259D  00B3               	movwf	(_PUSH_BUTTON_press_time+1)^(0+384)
  8941  259E  0021               	movlb	1	; select bank1
  8942  259F  0820               	movf	?_MiWi_TickGet^(0+128),w
  8943  25A0  0023               	movlb	3	; select bank3
  8944  25A1  00B2               	movwf	_PUSH_BUTTON_press_time^(0+384)
  8945                           
  8946                           ;demo_ouput.c: 368: return 1;
  8947  25A2  3001               	movlw	1
  8948  25A3  0008               	return
  8949  25A4                     l768:	
  8950                           ;demo_ouput.c: 369: }
  8951                           ;demo_ouput.c: 370: }
  8952                           
  8953                           
  8954                           ;demo_ouput.c: 371: else if(PORTAbits.RA5 == 0)
  8955  25A4  1A8C               	btfsc	12,5	;volatile
  8956  25A5  2DBF               	goto	l7297
  8957                           
  8958                           ;demo_ouput.c: 372: {
  8959                           ;demo_ouput.c: 374: if(PUSH_BUTTON_pressed == 0)
  8960  25A6  085D               	movf	_PUSH_BUTTON_pressed,w
  8961  25A7  1D03               	btfss	3,2
  8962  25A8  2E06               	goto	l7305
  8963                           
  8964                           ;demo_ouput.c: 375: {
  8965                           ;demo_ouput.c: 376: PUSH_BUTTON_pressed = 1;
  8966  25A9  01DD               	clrf	_PUSH_BUTTON_pressed
  8967  25AA  0ADD               	incf	_PUSH_BUTTON_pressed,f
  8968                           
  8969                           ;demo_ouput.c: 377: PUSH_BUTTON_press_time = MiWi_TickGet();
  8970  25AB  31AB  23D9         	fcall	_MiWi_TickGet
  8971  25AD  0021               	movlb	1	; select bank1
  8972  25AE  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  8973  25AF  0023               	movlb	3	; select bank3
  8974  25B0  00B5               	movwf	(_PUSH_BUTTON_press_time+3)^(0+384)
  8975  25B1  0021               	movlb	1	; select bank1
  8976  25B2  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  8977  25B3  0023               	movlb	3	; select bank3
  8978  25B4  00B4               	movwf	(_PUSH_BUTTON_press_time+2)^(0+384)
  8979  25B5  0021               	movlb	1	; select bank1
  8980  25B6  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  8981  25B7  0023               	movlb	3	; select bank3
  8982  25B8  00B3               	movwf	(_PUSH_BUTTON_press_time+1)^(0+384)
  8983  25B9  0021               	movlb	1	; select bank1
  8984  25BA  0820               	movf	?_MiWi_TickGet^(0+128),w
  8985  25BB  0023               	movlb	3	; select bank3
  8986  25BC  00B2               	movwf	_PUSH_BUTTON_press_time^(0+384)
  8987                           
  8988                           ;demo_ouput.c: 378: return 2;
  8989  25BD  3002               	movlw	2
  8990  25BE  0008               	return
  8991  25BF                     l7297:	
  8992                           ;demo_ouput.c: 379: }
  8993                           ;demo_ouput.c: 380: }
  8994                           
  8995                           
  8996                           ;demo_ouput.c: 381: else
  8997                           ;demo_ouput.c: 382: {
  8998                           ;demo_ouput.c: 384: MIWI_TICK t = MiWi_TickGet();
  8999  25BF  31AB  23D9  31A5   	fcall	_MiWi_TickGet
  9000  25C2  0021               	movlb	1	; select bank1
  9001  25C3  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9002  25C4  00BA               	movwf	(ButtonPressed@t+3)^(0+128)
  9003  25C5  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9004  25C6  00B9               	movwf	(ButtonPressed@t+2)^(0+128)
  9005  25C7  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9006  25C8  00B8               	movwf	(ButtonPressed@t+1)^(0+128)
  9007  25C9  0820               	movf	?_MiWi_TickGet^(0+128),w
  9008  25CA  00B7               	movwf	ButtonPressed@t^(0+128)
  9009                           
  9010                           ;demo_ouput.c: 387: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  9011  25CB  0837               	movf	ButtonPressed@t^(0+128),w
  9012  25CC  00AB               	movwf	??_ButtonPressed^(0+128)
  9013  25CD  0838               	movf	(ButtonPressed@t+1)^(0+128),w
  9014  25CE  00AC               	movwf	(??_ButtonPressed^(0+128)+1)
  9015  25CF  0839               	movf	(ButtonPressed@t+2)^(0+128),w
  9016  25D0  00AD               	movwf	(??_ButtonPressed^(0+128)+2)
  9017  25D1  083A               	movf	(ButtonPressed@t+3)^(0+128),w
  9018  25D2  00AE               	movwf	(??_ButtonPressed^(0+128)+3)
  9019  25D3  0023               	movlb	3	; select bank3
  9020  25D4  0932               	comf	_PUSH_BUTTON_press_time^(0+384),w
  9021  25D5  0021               	movlb	1	; select bank1
  9022  25D6  00AF               	movwf	(??_ButtonPressed+4)^(0+128)
  9023  25D7  0023               	movlb	3	; select bank3
  9024  25D8  0933               	comf	(_PUSH_BUTTON_press_time+1)^(0+384),w
  9025  25D9  0021               	movlb	1	; select bank1
  9026  25DA  00B0               	movwf	((??_ButtonPressed+4)^(0+128)+1)
  9027  25DB  0023               	movlb	3	; select bank3
  9028  25DC  0934               	comf	(_PUSH_BUTTON_press_time+2)^(0+384),w
  9029  25DD  0021               	movlb	1	; select bank1
  9030  25DE  00B1               	movwf	((??_ButtonPressed+4)^(0+128)+2)
  9031  25DF  0023               	movlb	3	; select bank3
  9032  25E0  0935               	comf	(_PUSH_BUTTON_press_time+3)^(0+384),w
  9033  25E1  0021               	movlb	1	; select bank1
  9034  25E2  00B2               	movwf	((??_ButtonPressed+4)^(0+128)+3)
  9035  25E3  0AAF               	incf	(??_ButtonPressed+4)^(0+128),f
  9036  25E4  1903               	skipnz
  9037  25E5  0AB0               	incf	((??_ButtonPressed+4)^(0+128)+1),f
  9038  25E6  1903               	skipnz
  9039  25E7  0AB1               	incf	((??_ButtonPressed+4)^(0+128)+2),f
  9040  25E8  1903               	skipnz
  9041  25E9  0AB2               	incf	((??_ButtonPressed+4)^(0+128)+3),f
  9042  25EA  082F               	movf	(??_ButtonPressed+4)^(0+128),w
  9043  25EB  07AB               	addwf	??_ButtonPressed^(0+128),f
  9044  25EC  0830               	movf	(??_ButtonPressed+5)^(0+128),w
  9045  25ED  3DAC               	addwfc	(??_ButtonPressed^(0+128)+1),f
  9046  25EE  0831               	movf	(??_ButtonPressed+6)^(0+128),w
  9047  25EF  3DAD               	addwfc	(??_ButtonPressed^(0+128)+2),f
  9048  25F0  0832               	movf	(??_ButtonPressed+7)^(0+128),w
  9049  25F1  3DAE               	addwfc	(??_ButtonPressed^(0+128)+3),f
  9050  25F2  082E               	movf	(??_ButtonPressed+3)^(0+128),w
  9051  25F3  00B6               	movwf	(ButtonPressed@tickDifference+3)^(0+128)
  9052  25F4  082D               	movf	(??_ButtonPressed+2)^(0+128),w
  9053  25F5  00B5               	movwf	(ButtonPressed@tickDifference+2)^(0+128)
  9054  25F6  082C               	movf	(??_ButtonPressed+1)^(0+128),w
  9055  25F7  00B4               	movwf	(ButtonPressed@tickDifference+1)^(0+128)
  9056  25F8  082B               	movf	??_ButtonPressed^(0+128),w
  9057  25F9  00B3               	movwf	ButtonPressed@tickDifference^(0+128)
  9058                           
  9059                           ;demo_ouput.c: 390: if(tickDifference.Val > 0x00003FFF)
  9060  25FA  0836               	movf	(ButtonPressed@tickDifference+3)^(0+128),w
  9061  25FB  1D03               	btfss	3,2
  9062  25FC  2E04               	goto	l7303
  9063  25FD  0835               	movf	(ButtonPressed@tickDifference+2)^(0+128),w
  9064  25FE  1D03               	btfss	3,2
  9065  25FF  2E04               	goto	l7303
  9066  2600  3040               	movlw	64
  9067  2601  0234               	subwf	(ButtonPressed@tickDifference+1)^(0+128),w
  9068  2602  1C03               	btfss	3,0
  9069  2603  2E06               	goto	l7305
  9070  2604                     l7303:	
  9071                           
  9072                           ;demo_ouput.c: 391: {
  9073                           ;demo_ouput.c: 392: PUSH_BUTTON_pressed = 0;
  9074  2604  0020               	movlb	0	; select bank0
  9075  2605  01DD               	clrf	_PUSH_BUTTON_pressed
  9076  2606                     l7305:	
  9077                           
  9078                           ;demo_ouput.c: 393: }
  9079                           ;demo_ouput.c: 394: }
  9080                           ;demo_ouput.c: 396: return 0;
  9081  2606  3000               	movlw	0
  9082  2607  0008               	return
  9083  2608                     __end_of_ButtonPressed:	
  9084                           
  9085                           	psect	text16
  9086  232D                     __ptext16:	
  9087 ;; *************** function _Initialize_Demo *****************
  9088 ;; Defined at:
  9089 ;;		line 89 in file "../src/task.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  freezer_enab    1    wreg     unsigned char 
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;  freezer_enab    1   59[BANK2 ] unsigned char 
  9094 ;;  i               1   60[BANK2 ] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      unsigned char 
  9097 ;; Registers used:
  9098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;Total ram usage:        3 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:   17
  9111 ;; This function calls:
  9112 ;;		_DemoOutput_Channel
  9113 ;;		_DemoOutput_ChannelError
  9114 ;;		_MiApp_ConnectionMode
  9115 ;;		_MiApp_EstablishConnection
  9116 ;;		_MiApp_ProtocolInit
  9117 ;;		_MiApp_SetChannel
  9118 ;;		_MiApp_StartConnection
  9119 ;;		_NVMWrite
  9120 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  9121 ;; This function is called by:
  9122 ;;		_main
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _Initialize_Demo
  9128  232D                     _Initialize_Demo:	
  9129                           
  9130                           ;incstack = 0
  9131 ;; hardware stack exceeded
  9132                           ; Regs used in _Initialize_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9133                           ;Initialize_Demo@freezer_enable stored from wreg
  9134  232D  0022               	movlb	2	; select bank2
  9135  232E  00DB               	movwf	Initialize_Demo@freezer_enable^(0+256)
  9136                           
  9137                           ;task.c: 91: uint8_t i;
  9138                           ;task.c: 93: if (freezer_enable)
  9139  232F  085B               	movf	Initialize_Demo@freezer_enable^(0+256),w
  9140  2330  1903               	btfsc	3,2
  9141  2331  2B3B               	goto	l962
  9142                           
  9143                           ;task.c: 94: {
  9144                           ;task.c: 105: MiApp_ProtocolInit(1);
  9145  2332  3001               	movlw	1
  9146  2333  3191  219D  31A3   	fcall	_MiApp_ProtocolInit
  9147                           
  9148                           ;task.c: 109: STAR_DEMO_OPTIONS_MESSAGE (role);
  9149  2336  0022               	movlb	2	; select bank2
  9150  2337  086F               	movf	_role^(0+256),w
  9151  2338  31B4  24F1         	fcall	_STAR_DEMO_OPTIONS_MESSAGE
  9152                           
  9153                           ;task.c: 112: }
  9154  233A  0008               	return
  9155  233B                     l962:	
  9156                           
  9157                           ;task.c: 113: else
  9158                           ;task.c: 114: {
  9159                           ;task.c: 115: LATDbits.LATD7 = 0;
  9160  233B  138F               	bcf	15,7	;volatile
  9161                           
  9162                           ;task.c: 116: LATDbits.LATD6 = 0;
  9163  233C  130F               	bcf	15,6	;volatile
  9164                           
  9165                           ;task.c: 128: MiApp_ProtocolInit(0);
  9166  233D  3000               	movlw	0
  9167  233E  3191  219D  31A3   	fcall	_MiApp_ProtocolInit
  9168                           
  9169                           ;task.c: 131: if( MiApp_SetChannel(myChannel) == 0 )
  9170  2341  0020               	movlb	0	; select bank0
  9171  2342  086E               	movf	_myChannel,w
  9172  2343  31A8  2051  31A3   	fcall	_MiApp_SetChannel
  9173  2346  3A00               	xorlw	0
  9174  2347  1D03               	skipz
  9175  2348  2B4E               	goto	l7931
  9176                           
  9177                           ;task.c: 132: {
  9178                           ;task.c: 133: DemoOutput_ChannelError(myChannel);
  9179  2349  0020               	movlb	0	; select bank0
  9180  234A  086E               	movf	_myChannel,w
  9181  234B  3188  2000  31A3   	fcall	_DemoOutput_ChannelError
  9182  234E                     l7931:	
  9183                           
  9184                           ;task.c: 134: }
  9185                           ;task.c: 145: MiApp_ConnectionMode(0x00);
  9186  234E  3000               	movlw	0
  9187  234F  31A9  2126  31A3   	fcall	_MiApp_ConnectionMode
  9188                           
  9189                           ;task.c: 146: DemoOutput_Channel(myChannel, 0);
  9190  2352  0021               	movlb	1	; select bank1
  9191  2353  01D7               	clrf	DemoOutput_Channel@Step^(0+128)
  9192  2354  0020               	movlb	0	; select bank0
  9193  2355  086E               	movf	_myChannel,w
  9194  2356  31B7  2774  31A3   	fcall	_DemoOutput_Channel
  9195                           
  9196                           ;task.c: 160: i = MiApp_EstablishConnection(0xFF, 0x00);
  9197  2359  0022               	movlb	2	; select bank2
  9198  235A  01C5               	clrf	MiApp_EstablishConnection@Mode^(0+256)
  9199  235B  30FF               	movlw	255
  9200  235C  3199  215B  31A3   	fcall	_MiApp_EstablishConnection
  9201  235F  0022               	movlb	2	; select bank2
  9202  2360  00DA               	movwf	??_Initialize_Demo^(0+256)
  9203  2361  085A               	movf	??_Initialize_Demo^(0+256),w
  9204  2362  00DC               	movwf	Initialize_Demo@i^(0+256)
  9205                           
  9206                           ;task.c: 165: if( i != 0xFF )
  9207  2363  0A5C               	incf	Initialize_Demo@i^(0+256),w
  9208  2364  1903               	btfsc	3,2
  9209  2365  2B71               	goto	l7943
  9210                           
  9211                           ;task.c: 166: {
  9212                           ;task.c: 167: DemoOutput_Channel(myChannel, 1);
  9213  2366  0021               	movlb	1	; select bank1
  9214  2367  01D7               	clrf	DemoOutput_Channel@Step^(0+128)
  9215  2368  0AD7               	incf	DemoOutput_Channel@Step^(0+128),f
  9216  2369  0020               	movlb	0	; select bank0
  9217  236A  086E               	movf	_myChannel,w
  9218  236B  31B7  2774  31A3   	fcall	_DemoOutput_Channel
  9219                           
  9220                           ;task.c: 169: role = 0;
  9221  236E  0022               	movlb	2	; select bank2
  9222  236F  01EF               	clrf	_role^(0+256)
  9223                           
  9224                           ;task.c: 171: }
  9225  2370  2B85               	goto	l7947
  9226  2371                     l7943:	
  9227                           
  9228                           ;task.c: 172: else
  9229                           ;task.c: 173: {
  9230                           ;task.c: 204: MiApp_StartConnection(0x00, 10, 0);
  9231  2371  300A               	movlw	10
  9232  2372  00DA               	movwf	??_Initialize_Demo^(0+256)
  9233  2373  085A               	movf	??_Initialize_Demo^(0+256),w
  9234  2374  0021               	movlb	1	; select bank1
  9235  2375  00AB               	movwf	MiApp_StartConnection@ScanDuration^(0+128)
  9236  2376  3000               	movlw	0
  9237  2377  00AF               	movwf	(MiApp_StartConnection@ChannelMap+3)^(0+128)
  9238  2378  3000               	movlw	0
  9239  2379  00AE               	movwf	(MiApp_StartConnection@ChannelMap+2)^(0+128)
  9240  237A  3000               	movlw	0
  9241  237B  00AD               	movwf	(MiApp_StartConnection@ChannelMap+1)^(0+128)
  9242  237C  3000               	movlw	0
  9243  237D  00AC               	movwf	MiApp_StartConnection@ChannelMap^(0+128)
  9244  237E  3000               	movlw	0
  9245  237F  31AA  221E  31A3   	fcall	_MiApp_StartConnection
  9246                           
  9247                           ;task.c: 206: role = 1;
  9248  2382  0022               	movlb	2	; select bank2
  9249  2383  01EF               	clrf	_role^(0+256)
  9250  2384  0AEF               	incf	_role^(0+256),f
  9251  2385                     l7947:	
  9252                           
  9253                           ;task.c: 208: }
  9254                           ;task.c: 210: NVMWrite((uint8_t *)&role, nvmRole, 1);
  9255  2385  306F               	movlw	low _role
  9256  2386  0021               	movlb	1	; select bank1
  9257  2387  00AD               	movwf	NVMWrite@source^(0+128)
  9258  2388  3001               	movlw	high _role
  9259  2389  00AE               	movwf	(NVMWrite@source+1)^(0+128)
  9260  238A  0023               	movlb	3	; select bank3
  9261  238B  0864               	movf	(_nvmRole+1)^(0+384),w
  9262  238C  0021               	movlb	1	; select bank1
  9263  238D  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
  9264  238E  0023               	movlb	3	; select bank3
  9265  238F  0863               	movf	_nvmRole^(0+384),w
  9266  2390  0021               	movlb	1	; select bank1
  9267  2391  00AF               	movwf	NVMWrite@addr^(0+128)
  9268  2392  3001               	movlw	1
  9269  2393  00B1               	movwf	NVMWrite@count^(0+128)
  9270  2394  3000               	movlw	0
  9271  2395  00B2               	movwf	(NVMWrite@count^(0+128)+1)
  9272  2396  31A3  239F  31A3   	fcall	_NVMWrite
  9273                           
  9274                           ;task.c: 227: LATDbits.LATD7 = 1;
  9275  2399  0022               	movlb	2	; select bank2
  9276  239A  178F               	bsf	15,7	;volatile
  9277                           
  9278                           ;task.c: 231: STAR_DEMO_OPTIONS_MESSAGE (role);
  9279  239B  086F               	movf	_role^(0+256),w
  9280  239C  31B4  24F1         	fcall	_STAR_DEMO_OPTIONS_MESSAGE
  9281  239E  0008               	return
  9282  239F                     __end_of_Initialize_Demo:	
  9283                           
  9284                           	psect	text17
  9285  34F1                     __ptext17:	
  9286 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  9287 ;; Defined at:
  9288 ;;		line 310 in file "../src/demo_ouput.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  NetworkRole     1    wreg     unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  NetworkRole     1    0[BANK1 ] unsigned char 
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;Total ram usage:        1 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:    5
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_Process_RxMessage
  9313 ;;		_run_star_demo
  9314 ;;		_Initialize_Demo
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           
  9319                           ;psect for function _STAR_DEMO_OPTIONS_MESSAGE
  9320  34F1                     _STAR_DEMO_OPTIONS_MESSAGE:	
  9321                           
  9322                           ;incstack = 0
  9323                           ; Regs used in _STAR_DEMO_OPTIONS_MESSAGE: [wreg+status,2+status,0]
  9324                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  9325  34F1  0021               	movlb	1	; select bank1
  9326  34F2  00A0               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole^(0+128)
  9327                           
  9328                           ;demo_ouput.c: 313: {
  9329                           ;demo_ouput.c: 323: }
  9330  34F3  0008               	return
  9331  34F4                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:	
  9332                           ;demo_ouput.c: 324: else
  9333                           ;demo_ouput.c: 325: {
  9334                           
  9335                           
  9336                           	psect	text18
  9337  2A1E                     __ptext18:	
  9338 ;; *************** function _MiApp_StartConnection *****************
  9339 ;; Defined at:
  9340 ;;		line 2156 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  Mode            1    wreg     unsigned char 
  9343 ;;  ScanDuration    1   11[BANK1 ] unsigned char 
  9344 ;;  ChannelMap      4   12[BANK1 ] unsigned long 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  Mode            1   16[BANK1 ] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      unsigned char 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        6 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    6
  9363 ;; This function calls:
  9364 ;;		_MiWi_TickGet
  9365 ;; This function is called by:
  9366 ;;		_Initialize_Demo
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function _MiApp_StartConnection
  9372  2A1E                     _MiApp_StartConnection:	
  9373                           
  9374                           ;incstack = 0
  9375                           ; Regs used in _MiApp_StartConnection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9376                           ;MiApp_StartConnection@Mode stored from wreg
  9377  2A1E  0021               	movlb	1	; select bank1
  9378  2A1F  00B0               	movwf	MiApp_StartConnection@Mode^(0+128)
  9379                           
  9380                           ;miwi_p2p.c: 2158: switch(Mode)
  9381  2A20  2A47               	goto	l7511
  9382  2A21                     l7505:	
  9383                           ;miwi_p2p.c: 2159: {
  9384                           ;miwi_p2p.c: 2160: case 0x00:
  9385                           
  9386                           
  9387                           ;miwi_p2p.c: 2176: tick1 = MiWi_TickGet();
  9388  2A21  31AB  23D9  31AA   	fcall	_MiWi_TickGet
  9389  2A24  0021               	movlb	1	; select bank1
  9390  2A25  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9391  2A26  0023               	movlb	3	; select bank3
  9392  2A27  00C5               	movwf	(_tick1+3)^(0+384)
  9393  2A28  0021               	movlb	1	; select bank1
  9394  2A29  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9395  2A2A  0023               	movlb	3	; select bank3
  9396  2A2B  00C4               	movwf	(_tick1+2)^(0+384)
  9397  2A2C  0021               	movlb	1	; select bank1
  9398  2A2D  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9399  2A2E  0023               	movlb	3	; select bank3
  9400  2A2F  00C3               	movwf	(_tick1+1)^(0+384)
  9401  2A30  0021               	movlb	1	; select bank1
  9402  2A31  0820               	movf	?_MiWi_TickGet^(0+128),w
  9403  2A32  0023               	movlb	3	; select bank3
  9404  2A33  00C2               	movwf	_tick1^(0+384)
  9405                           
  9406                           ;miwi_p2p.c: 2177: tick4 = MiWi_TickGet();
  9407  2A34  31AB  23D9         	fcall	_MiWi_TickGet
  9408  2A36  0021               	movlb	1	; select bank1
  9409  2A37  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9410  2A38  0023               	movlb	3	; select bank3
  9411  2A39  00C9               	movwf	(_tick4+3)^(0+384)
  9412  2A3A  0021               	movlb	1	; select bank1
  9413  2A3B  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9414  2A3C  0023               	movlb	3	; select bank3
  9415  2A3D  00C8               	movwf	(_tick4+2)^(0+384)
  9416  2A3E  0021               	movlb	1	; select bank1
  9417  2A3F  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9418  2A40  0023               	movlb	3	; select bank3
  9419  2A41  00C7               	movwf	(_tick4+1)^(0+384)
  9420  2A42  0021               	movlb	1	; select bank1
  9421  2A43  0820               	movf	?_MiWi_TickGet^(0+128),w
  9422  2A44  0023               	movlb	3	; select bank3
  9423  2A45  00C6               	movwf	_tick4^(0+384)
  9424                           
  9425                           ;miwi_p2p.c: 2218: }
  9426                           
  9427                           ;miwi_p2p.c: 2217: break;
  9428                           
  9429                           ;miwi_p2p.c: 2216: default:
  9430                           
  9431                           ;miwi_p2p.c: 2214: return 0;
  9432                           ;	Return value of _MiApp_StartConnection is never used
  9433                           
  9434                           ;miwi_p2p.c: 2212: case 0x02:
  9435                           
  9436                           ;miwi_p2p.c: 2209: return 0;
  9437                           ;	Return value of _MiApp_StartConnection is never used
  9438                           
  9439                           ;miwi_p2p.c: 2180: case 0x01:
  9440                           
  9441                           ;miwi_p2p.c: 2178: return 1;
  9442                           ;	Return value of _MiApp_StartConnection is never used
  9443  2A46  0008               	return
  9444  2A47                     l7511:	
  9445  2A47  0021               	movlb	1	; select bank1
  9446  2A48  0830               	movf	MiApp_StartConnection@Mode^(0+128),w
  9447                           
  9448                           ; Switch size 1, requested type "space"
  9449                           ; Number of cases is 3, Range of values is 0 to 2
  9450                           ; switch strategies available:
  9451                           ; Name         Instructions Cycles
  9452                           ; simple_byte           10     6 (average)
  9453                           ; direct_byte           12     6 (fixed)
  9454                           ; jumptable            260     6 (fixed)
  9455                           ;	Chosen strategy is simple_byte
  9456  2A49  3A00               	xorlw	0	; case 0
  9457  2A4A  1903               	skipnz
  9458  2A4B  2A21               	goto	l7505
  9459  2A4C  3A01               	xorlw	1	; case 1
  9460  2A4D  1903               	skipnz
  9461  2A4E  2A53               	goto	l606
  9462  2A4F  3A03               	xorlw	3	; case 2
  9463  2A50  1903               	skipnz
  9464  2A51  2A53               	goto	l606
  9465  2A52  2A53               	goto	l606
  9466  2A53                     l606:	
  9467                           ;miwi_p2p.c: 2219: return 0;
  9468                           ;	Return value of _MiApp_StartConnection is never used
  9469                           
  9470  2A53  0008               	return
  9471  2A54                     __end_of_MiApp_StartConnection:	
  9472                           
  9473                           	psect	text19
  9474  119D                     __ptext19:	
  9475 ;; *************** function _MiApp_ProtocolInit *****************
  9476 ;; Defined at:
  9477 ;;		line 1118 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;  bNetworkFree    1    wreg     unsigned char 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  bNetworkFree    1   33[BANK1 ] unsigned char 
  9482 ;;  initValue       2   34[BANK1 ] struct .
  9483 ;;  i               1   36[BANK1 ] unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      unsigned char 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;Total ram usage:       10 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:   10
  9500 ;; This function calls:
  9501 ;;		_EEPROM_Read
  9502 ;;		_InitSymbolTimer
  9503 ;;		_MiApp_SetChannel
  9504 ;;		_MiMAC_Init
  9505 ;;		_NVMInit
  9506 ;;		_NVMRead
  9507 ;;		_NVMWrite
  9508 ;;		___wmul
  9509 ;; This function is called by:
  9510 ;;		_Initialize_Demo
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _MiApp_ProtocolInit
  9516  119D                     _MiApp_ProtocolInit:	
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _MiApp_ProtocolInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9520                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  9521  119D  0021               	movlb	1	; select bank1
  9522  119E  00C1               	movwf	MiApp_ProtocolInit@bNetworkFreezer^(0+128)
  9523                           
  9524                           ;miwi_p2p.c: 1127: {
  9525                           ;miwi_p2p.c: 1128: for(i = 0; i < 3; i++)
  9526  119F  01C4               	clrf	MiApp_ProtocolInit@i^(0+128)
  9527  11A0  3003               	movlw	3
  9528  11A1  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9529  11A2  1803               	btfsc	3,0
  9530  11A3  29BD               	goto	l7415
  9531  11A4                     l7409:	
  9532                           
  9533                           ;miwi_p2p.c: 1129: {
  9534                           ;miwi_p2p.c: 1130: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  9535  11A4  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9536  11A5  3EFA               	addlw	250
  9537  11A6  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9538  11A7  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9539  11A8  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9540  11A9  01A4               	clrf	EEPROM_Read@count^(0+128)
  9541  11AA  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9542  11AB  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9543  11AC  3E01               	addlw	1
  9544  11AD  3AFF               	xorlw	255
  9545  11AE  3E01               	addlw	1
  9546  11AF  3E08               	addlw	8
  9547  11B0  3EE7               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9548  11B1  31A8  202B  3191   	fcall	_EEPROM_Read
  9549  11B4  3001               	movlw	1
  9550  11B5  0021               	movlb	1	; select bank1
  9551  11B6  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9552  11B7  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9553  11B8  07C4               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9554  11B9  3003               	movlw	3
  9555  11BA  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9556  11BB  1C03               	skipc
  9557  11BC  29A4               	goto	l7409
  9558  11BD                     l7415:	
  9559                           
  9560                           ;miwi_p2p.c: 1133: if( 8 > 7 )
  9561  11BD  30FF               	movlw	255
  9562  11BE  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9563  11BF  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9564  11C0  0023               	movlb	3	; select bank3
  9565  11C1  00EB               	movwf	(_myLongAddress^(0+384)+4)
  9566                           
  9567                           ;miwi_p2p.c: 1134: {
  9568                           ;miwi_p2p.c: 1135: myLongAddress[3] = 0xFE;
  9569  11C2  30FE               	movlw	254
  9570  11C3  0021               	movlb	1	; select bank1
  9571  11C4  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9572  11C5  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9573  11C6  0023               	movlb	3	; select bank3
  9574  11C7  00EA               	movwf	(_myLongAddress^(0+384)+3)
  9575                           
  9576                           ;miwi_p2p.c: 1136: }
  9577                           ;miwi_p2p.c: 1137: for(i = 0; i < 3; i++)
  9578  11C8  0021               	movlb	1	; select bank1
  9579  11C9  01C4               	clrf	MiApp_ProtocolInit@i^(0+128)
  9580  11CA                     L2:	
  9581  11CA  3003               	movlw	3
  9582  11CB  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9583  11CC  1803               	btfsc	3,0
  9584  11CD  29FB               	goto	l7441
  9585                           
  9586                           ;miwi_p2p.c: 1138: {
  9587                           ;miwi_p2p.c: 1139: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
  9588  11CE  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9589  11CF  3EFD               	addlw	253
  9590  11D0  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9591  11D1  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9592  11D2  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9593  11D3  01A4               	clrf	EEPROM_Read@count^(0+128)
  9594  11D4  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9595  11D5  0344               	decf	MiApp_ProtocolInit@i^(0+128),w
  9596  11D6  3AFF               	xorlw	255
  9597  11D7  3E02               	addlw	2
  9598  11D8  3EE7               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9599  11D9  31A8  202B  3191   	fcall	_EEPROM_Read
  9600  11DC  3001               	movlw	1
  9601  11DD  0021               	movlb	1	; select bank1
  9602  11DE  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9603  11DF  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9604  11E0  07C4               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9605  11E1  29CA               	goto	L2
  9606  11E2                     l7435:	
  9607                           ;miwi_p2p.c: 1142: else
  9608                           ;miwi_p2p.c: 1143: {
  9609                           ;miwi_p2p.c: 1144: for(i = 0; i < 8; i++)
  9610                           
  9611                           ;miwi_p2p.c: 1140: }
  9612                           ;miwi_p2p.c: 1141: }
  9613                           
  9614                           
  9615                           ;miwi_p2p.c: 1145: {
  9616                           ;miwi_p2p.c: 1146: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  9617  11E2  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9618  11E3  3EFA               	addlw	250
  9619  11E4  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9620  11E5  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9621  11E6  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9622  11E7  01A4               	clrf	EEPROM_Read@count^(0+128)
  9623  11E8  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9624  11E9  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9625  11EA  3E01               	addlw	1
  9626  11EB  3AFF               	xorlw	255
  9627  11EC  3E01               	addlw	1
  9628  11ED  3E08               	addlw	8
  9629  11EE  3EE7               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9630  11EF  31A8  202B  3191   	fcall	_EEPROM_Read
  9631  11F2  3001               	movlw	1
  9632  11F3  0021               	movlb	1	; select bank1
  9633  11F4  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9634  11F5  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9635  11F6  07C4               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9636  11F7  3008               	movlw	8
  9637  11F8  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9638  11F9  1C03               	skipc
  9639  11FA  29E2               	goto	l7435
  9640  11FB                     l7441:	
  9641                           
  9642                           ;miwi_p2p.c: 1147: }
  9643                           ;miwi_p2p.c: 1148: }
  9644                           ;miwi_p2p.c: 1154: NVMInit();
  9645  11FB  31A5  2509  3191   	fcall	_NVMInit
  9646                           
  9647                           ;miwi_p2p.c: 1158: P2PStatus.Val = 0;
  9648  11FE  01FD               	clrf	_P2PStatus	;volatile
  9649                           
  9650                           ;miwi_p2p.c: 1160: if (!bNetworkFreezer)
  9651  11FF  0021               	movlb	1	; select bank1
  9652  1200  0841               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
  9653  1201  1D03               	btfss	3,2
  9654  1202  2A9C               	goto	l7463
  9655                           
  9656                           ;miwi_p2p.c: 1161: {
  9657                           ;miwi_p2p.c: 1162: for(i = 0; i < 10; i++)
  9658  1203  01C4               	clrf	MiApp_ProtocolInit@i^(0+128)
  9659  1204  300A               	movlw	10
  9660  1205  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9661  1206  1803               	btfsc	3,0
  9662  1207  2A9C               	goto	l7463
  9663  1208                     l7453:	
  9664                           
  9665                           ;miwi_p2p.c: 1163: {
  9666                           ;miwi_p2p.c: 1164: ConnectionTable[i].status.Val = 0;
  9667  1208  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9668  1209  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9669  120A  01BC               	clrf	(??_MiApp_ProtocolInit^(0+128)+1)
  9670  120B  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9671  120C  00A7               	movwf	___wmul@multiplier^(0+128)
  9672  120D  083C               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
  9673  120E  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  9674  120F  300E               	movlw	14
  9675  1210  00A9               	movwf	___wmul@multiplicand^(0+128)
  9676  1211  3000               	movlw	0
  9677  1212  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  9678  1213  31B6  26A4  3191   	fcall	___wmul
  9679  1216  0021               	movlb	1	; select bank1
  9680  1217  0827               	movf	?___wmul^(0+128),w
  9681  1218  3E0C               	addlw	12
  9682  1219  00BD               	movwf	(??_MiApp_ProtocolInit+2)^(0+128)
  9683  121A  3000               	movlw	0
  9684  121B  3D28               	addwfc	(?___wmul+1)^(0+128),w
  9685  121C  00BE               	movwf	(??_MiApp_ProtocolInit+3)^(0+128)
  9686  121D  3064               	movlw	100
  9687  121E  00BF               	movwf	(??_MiApp_ProtocolInit+4)^(0+128)
  9688  121F  3023               	movlw	35
  9689  1220  00C0               	movwf	((??_MiApp_ProtocolInit+4)^(0+128)+1)
  9690  1221  083D               	movf	(??_MiApp_ProtocolInit+2)^(0+128),w
  9691  1222  073F               	addwf	(??_MiApp_ProtocolInit+4)^(0+128),w
  9692  1223  0086               	movwf	6
  9693  1224  083E               	movf	(??_MiApp_ProtocolInit+3)^(0+128),w
  9694  1225  3D40               	addwfc	(??_MiApp_ProtocolInit+5)^(0+128),w
  9695  1226  0087               	movwf	7
  9696  1227  0181               	clrf	1
  9697                           
  9698                           ;miwi_p2p.c: 1165: ConnectionTable[i].Address[0] = 0x00;
  9699  1228  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9700  1229  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9701  122A  01BC               	clrf	(??_MiApp_ProtocolInit^(0+128)+1)
  9702  122B  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9703  122C  00A7               	movwf	___wmul@multiplier^(0+128)
  9704  122D  083C               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
  9705  122E  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  9706  122F  300E               	movlw	14
  9707  1230  00A9               	movwf	___wmul@multiplicand^(0+128)
  9708  1231  3000               	movlw	0
  9709  1232  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  9710  1233  31B6  26A4  3191   	fcall	___wmul
  9711  1236  0021               	movlb	1	; select bank1
  9712  1237  0827               	movf	?___wmul^(0+128),w
  9713  1238  3E04               	addlw	4
  9714  1239  00BD               	movwf	(??_MiApp_ProtocolInit+2)^(0+128)
  9715  123A  3000               	movlw	0
  9716  123B  3D28               	addwfc	(?___wmul+1)^(0+128),w
  9717  123C  00BE               	movwf	(??_MiApp_ProtocolInit+3)^(0+128)
  9718  123D  3064               	movlw	100
  9719  123E  00BF               	movwf	(??_MiApp_ProtocolInit+4)^(0+128)
  9720  123F  3023               	movlw	35
  9721  1240  00C0               	movwf	((??_MiApp_ProtocolInit+4)^(0+128)+1)
  9722  1241  083D               	movf	(??_MiApp_ProtocolInit+2)^(0+128),w
  9723  1242  073F               	addwf	(??_MiApp_ProtocolInit+4)^(0+128),w
  9724  1243  0086               	movwf	6
  9725  1244  083E               	movf	(??_MiApp_ProtocolInit+3)^(0+128),w
  9726  1245  3D40               	addwfc	(??_MiApp_ProtocolInit+5)^(0+128),w
  9727  1246  0087               	movwf	7
  9728  1247  0181               	clrf	1
  9729                           
  9730                           ;miwi_p2p.c: 1166: ConnectionTable[i].Address[1] = 0x00;
  9731  1248  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9732  1249  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9733  124A  01BC               	clrf	(??_MiApp_ProtocolInit^(0+128)+1)
  9734  124B  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9735  124C  00A7               	movwf	___wmul@multiplier^(0+128)
  9736  124D  083C               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
  9737  124E  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  9738  124F  300E               	movlw	14
  9739  1250  00A9               	movwf	___wmul@multiplicand^(0+128)
  9740  1251  3000               	movlw	0
  9741  1252  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  9742  1253  31B6  26A4  3191   	fcall	___wmul
  9743  1256  0021               	movlb	1	; select bank1
  9744  1257  0827               	movf	?___wmul^(0+128),w
  9745  1258  3E05               	addlw	5
  9746  1259  00BD               	movwf	(??_MiApp_ProtocolInit+2)^(0+128)
  9747  125A  3000               	movlw	0
  9748  125B  3D28               	addwfc	(?___wmul+1)^(0+128),w
  9749  125C  00BE               	movwf	(??_MiApp_ProtocolInit+3)^(0+128)
  9750  125D  3064               	movlw	100
  9751  125E  00BF               	movwf	(??_MiApp_ProtocolInit+4)^(0+128)
  9752  125F  3023               	movlw	35
  9753  1260  00C0               	movwf	((??_MiApp_ProtocolInit+4)^(0+128)+1)
  9754  1261  083D               	movf	(??_MiApp_ProtocolInit+2)^(0+128),w
  9755  1262  073F               	addwf	(??_MiApp_ProtocolInit+4)^(0+128),w
  9756  1263  0086               	movwf	6
  9757  1264  083E               	movf	(??_MiApp_ProtocolInit+3)^(0+128),w
  9758  1265  3D40               	addwfc	(??_MiApp_ProtocolInit+5)^(0+128),w
  9759  1266  0087               	movwf	7
  9760  1267  0181               	clrf	1
  9761                           
  9762                           ;miwi_p2p.c: 1167: ConnectionTable[i].Address[2] = 0x00;
  9763  1268  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9764  1269  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9765  126A  01BC               	clrf	(??_MiApp_ProtocolInit^(0+128)+1)
  9766  126B  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9767  126C  00A7               	movwf	___wmul@multiplier^(0+128)
  9768  126D  083C               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
  9769  126E  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  9770  126F  300E               	movlw	14
  9771  1270  00A9               	movwf	___wmul@multiplicand^(0+128)
  9772  1271  3000               	movlw	0
  9773  1272  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  9774  1273  31B6  26A4  3191   	fcall	___wmul
  9775  1276  0021               	movlb	1	; select bank1
  9776  1277  0827               	movf	?___wmul^(0+128),w
  9777  1278  3E06               	addlw	6
  9778  1279  00BD               	movwf	(??_MiApp_ProtocolInit+2)^(0+128)
  9779  127A  3000               	movlw	0
  9780  127B  3D28               	addwfc	(?___wmul+1)^(0+128),w
  9781  127C  00BE               	movwf	(??_MiApp_ProtocolInit+3)^(0+128)
  9782  127D  3064               	movlw	100
  9783  127E  00BF               	movwf	(??_MiApp_ProtocolInit+4)^(0+128)
  9784  127F  3023               	movlw	35
  9785  1280  00C0               	movwf	((??_MiApp_ProtocolInit+4)^(0+128)+1)
  9786  1281  083D               	movf	(??_MiApp_ProtocolInit+2)^(0+128),w
  9787  1282  073F               	addwf	(??_MiApp_ProtocolInit+4)^(0+128),w
  9788  1283  0086               	movwf	6
  9789  1284  083E               	movf	(??_MiApp_ProtocolInit+3)^(0+128),w
  9790  1285  3D40               	addwfc	(??_MiApp_ProtocolInit+5)^(0+128),w
  9791  1286  0087               	movwf	7
  9792  1287  0181               	clrf	1
  9793                           
  9794                           ;miwi_p2p.c: 1169: link_stat[i] = 0x00;
  9795  1288  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9796  1289  3E20               	addlw	(low (_link_stat| (0+512)))& (0+255)
  9797  128A  0086               	movwf	6
  9798  128B  3002               	movlw	2	; select bank4/5
  9799  128C  0087               	movwf	7
  9800  128D  0181               	clrf	1
  9801                           
  9802                           ;miwi_p2p.c: 1170: permanent_connections[i] = 0x00;
  9803  128E  0844               	movf	MiApp_ProtocolInit@i^(0+128),w
  9804  128F  3E2A               	addlw	(low (_permanent_connections| (0+512)))& (0+255)
  9805  1290  0086               	movwf	6
  9806  1291  3002               	movlw	2	; select bank4/5
  9807  1292  0087               	movwf	7
  9808  1293  0181               	clrf	1
  9809  1294  3001               	movlw	1
  9810  1295  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
  9811  1296  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
  9812  1297  07C4               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9813  1298  300A               	movlw	10
  9814  1299  0244               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9815  129A  1C03               	skipc
  9816  129B  2A08               	goto	l7453
  9817  129C                     l7463:	
  9818                           
  9819                           ;miwi_p2p.c: 1172: }
  9820                           ;miwi_p2p.c: 1173: }
  9821                           ;miwi_p2p.c: 1175: InitSymbolTimer();
  9822  129C  31B5  253B  3191   	fcall	_InitSymbolTimer
  9823                           
  9824                           ;miwi_p2p.c: 1177: TxData = 0;
  9825  129F  0022               	movlb	2	; select bank2
  9826  12A0  01EE               	clrf	_TxData^(0+256)
  9827                           
  9828                           ;miwi_p2p.c: 1194: if( bNetworkFreezer )
  9829  12A1  0021               	movlb	1	; select bank1
  9830  12A2  0841               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
  9831  12A3  1903               	btfsc	3,2
  9832  12A4  2B22               	goto	l7477
  9833                           
  9834                           ;miwi_p2p.c: 1195: {
  9835                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  9836  12A5  306B               	movlw	low _currentChannel
  9837  12A6  00A3               	movwf	NVMRead@dest^(0+128)
  9838  12A7  3000               	movlw	high _currentChannel
  9839  12A8  00A4               	movwf	(NVMRead@dest+1)^(0+128)
  9840  12A9  0023               	movlb	3	; select bank3
  9841  12AA  085C               	movf	(_nvmCurrentChannel+1)^(0+384),w
  9842  12AB  0021               	movlb	1	; select bank1
  9843  12AC  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9844  12AD  0023               	movlb	3	; select bank3
  9845  12AE  085B               	movf	_nvmCurrentChannel^(0+384),w
  9846  12AF  0021               	movlb	1	; select bank1
  9847  12B0  00A5               	movwf	NVMRead@addr^(0+128)
  9848  12B1  3001               	movlw	1
  9849  12B2  00A7               	movwf	NVMRead@count^(0+128)
  9850  12B3  3000               	movlw	0
  9851  12B4  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9852  12B5  31AA  2254  3191   	fcall	_NVMRead
  9853                           
  9854                           ;miwi_p2p.c: 1197: if( currentChannel >= 32 )
  9855  12B8  3020               	movlw	32
  9856  12B9  0020               	movlb	0	; select bank0
  9857  12BA  026B               	subwf	_currentChannel,w
  9858  12BB  1803               	btfsc	3,0
  9859  12BC  0008               	return
  9860                           
  9861                           ;miwi_p2p.c: 1200: }
  9862                           ;miwi_p2p.c: 1205: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  9863                           
  9864                           ;miwi_p2p.c: 1198: {
  9865                           ;miwi_p2p.c: 1199: return 0;
  9866                           ;	Return value of _MiApp_ProtocolInit is never used
  9867  12BD  306F               	movlw	low _ConnMode
  9868  12BE  0021               	movlb	1	; select bank1
  9869  12BF  00A3               	movwf	NVMRead@dest^(0+128)
  9870  12C0  3000               	movlw	high _ConnMode
  9871  12C1  00A4               	movwf	(NVMRead@dest+1)^(0+128)
  9872  12C2  0023               	movlb	3	; select bank3
  9873  12C3  085A               	movf	(_nvmConnMode+1)^(0+384),w
  9874  12C4  0021               	movlb	1	; select bank1
  9875  12C5  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9876  12C6  0023               	movlb	3	; select bank3
  9877  12C7  0859               	movf	_nvmConnMode^(0+384),w
  9878  12C8  0021               	movlb	1	; select bank1
  9879  12C9  00A5               	movwf	NVMRead@addr^(0+128)
  9880  12CA  3001               	movlw	1
  9881  12CB  00A7               	movwf	NVMRead@count^(0+128)
  9882  12CC  3000               	movlw	0
  9883  12CD  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9884  12CE  31AA  2254  3191   	fcall	_NVMRead
  9885                           
  9886                           ;miwi_p2p.c: 1206: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  9887  12D1  3064               	movlw	100
  9888  12D2  0021               	movlb	1	; select bank1
  9889  12D3  00A3               	movwf	NVMRead@dest^(0+128)
  9890  12D4  3023               	movlw	35
  9891  12D5  00A4               	movwf	(NVMRead@dest^(0+128)+1)
  9892  12D6  0020               	movlb	0	; select bank0
  9893  12D7  0869               	movf	_nvmConnectionTable+1,w
  9894  12D8  0021               	movlb	1	; select bank1
  9895  12D9  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9896  12DA  0020               	movlb	0	; select bank0
  9897  12DB  0868               	movf	_nvmConnectionTable,w
  9898  12DC  0021               	movlb	1	; select bank1
  9899  12DD  00A5               	movwf	NVMRead@addr^(0+128)
  9900  12DE  308C               	movlw	140
  9901  12DF  00A7               	movwf	NVMRead@count^(0+128)
  9902  12E0  3000               	movlw	0
  9903  12E1  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9904  12E2  31AA  2254  3191   	fcall	_NVMRead
  9905                           
  9906                           ;miwi_p2p.c: 1209: NVMRead( (uint8_t *)&role, nvmRole, 1);
  9907  12E5  306F               	movlw	low _role
  9908  12E6  0021               	movlb	1	; select bank1
  9909  12E7  00A3               	movwf	NVMRead@dest^(0+128)
  9910  12E8  3001               	movlw	high _role
  9911  12E9  00A4               	movwf	(NVMRead@dest+1)^(0+128)
  9912  12EA  0023               	movlb	3	; select bank3
  9913  12EB  0864               	movf	(_nvmRole+1)^(0+384),w
  9914  12EC  0021               	movlb	1	; select bank1
  9915  12ED  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9916  12EE  0023               	movlb	3	; select bank3
  9917  12EF  0863               	movf	_nvmRole^(0+384),w
  9918  12F0  0021               	movlb	1	; select bank1
  9919  12F1  00A5               	movwf	NVMRead@addr^(0+128)
  9920  12F2  3001               	movlw	1
  9921  12F3  00A7               	movwf	NVMRead@count^(0+128)
  9922  12F4  3000               	movlw	0
  9923  12F5  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9924  12F6  31AA  2254  3191   	fcall	_NVMRead
  9925                           
  9926                           ;miwi_p2p.c: 1210: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  9927  12F9  306C               	movlw	low _myConnectionIndex_in_PanCo
  9928  12FA  0021               	movlb	1	; select bank1
  9929  12FB  00A3               	movwf	NVMRead@dest^(0+128)
  9930  12FC  3000               	movlw	high _myConnectionIndex_in_PanCo
  9931  12FD  00A4               	movwf	(NVMRead@dest+1)^(0+128)
  9932  12FE  0023               	movlb	3	; select bank3
  9933  12FF  0866               	movf	(_nvmmyIndex+1)^(0+384),w
  9934  1300  0021               	movlb	1	; select bank1
  9935  1301  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9936  1302  0023               	movlb	3	; select bank3
  9937  1303  0865               	movf	_nvmmyIndex^(0+384),w
  9938  1304  0021               	movlb	1	; select bank1
  9939  1305  00A5               	movwf	NVMRead@addr^(0+128)
  9940  1306  3001               	movlw	1
  9941  1307  00A7               	movwf	NVMRead@count^(0+128)
  9942  1308  3000               	movlw	0
  9943  1309  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9944  130A  31AA  2254  3191   	fcall	_NVMRead
  9945                           
  9946                           ;miwi_p2p.c: 1212: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  9947  130D  306A               	movlw	low _conn_size
  9948  130E  0021               	movlb	1	; select bank1
  9949  130F  00A3               	movwf	NVMRead@dest^(0+128)
  9950  1310  3000               	movlw	high _conn_size
  9951  1311  00A4               	movwf	(NVMRead@dest+1)^(0+128)
  9952  1312  0023               	movlb	3	; select bank3
  9953  1313  085E               	movf	(_nvmEdc+1)^(0+384),w
  9954  1314  0021               	movlb	1	; select bank1
  9955  1315  00A6               	movwf	(NVMRead@addr+1)^(0+128)
  9956  1316  0023               	movlb	3	; select bank3
  9957  1317  085D               	movf	_nvmEdc^(0+384),w
  9958  1318  0021               	movlb	1	; select bank1
  9959  1319  00A5               	movwf	NVMRead@addr^(0+128)
  9960  131A  3001               	movlw	1
  9961  131B  00A7               	movwf	NVMRead@count^(0+128)
  9962  131C  3000               	movlw	0
  9963  131D  00A8               	movwf	(NVMRead@count^(0+128)+1)
  9964  131E  31AA  2254  3191   	fcall	_NVMRead
  9965                           
  9966                           ;miwi_p2p.c: 1223: }
  9967  1321  2B5E               	goto	l7479
  9968  1322                     l7477:	
  9969                           
  9970                           ;miwi_p2p.c: 1224: else
  9971                           ;miwi_p2p.c: 1225: {
  9972                           ;miwi_p2p.c: 1230: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  9973  1322  306B               	movlw	low _currentChannel
  9974  1323  0021               	movlb	1	; select bank1
  9975  1324  00AD               	movwf	NVMWrite@source^(0+128)
  9976  1325  3000               	movlw	high _currentChannel
  9977  1326  00AE               	movwf	(NVMWrite@source+1)^(0+128)
  9978  1327  0023               	movlb	3	; select bank3
  9979  1328  085C               	movf	(_nvmCurrentChannel+1)^(0+384),w
  9980  1329  0021               	movlb	1	; select bank1
  9981  132A  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
  9982  132B  0023               	movlb	3	; select bank3
  9983  132C  085B               	movf	_nvmCurrentChannel^(0+384),w
  9984  132D  0021               	movlb	1	; select bank1
  9985  132E  00AF               	movwf	NVMWrite@addr^(0+128)
  9986  132F  3001               	movlw	1
  9987  1330  00B1               	movwf	NVMWrite@count^(0+128)
  9988  1331  3000               	movlw	0
  9989  1332  00B2               	movwf	(NVMWrite@count^(0+128)+1)
  9990  1333  31A3  239F  3191   	fcall	_NVMWrite
  9991                           
  9992                           ;miwi_p2p.c: 1231: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  9993  1336  306F               	movlw	low _ConnMode
  9994  1337  0021               	movlb	1	; select bank1
  9995  1338  00AD               	movwf	NVMWrite@source^(0+128)
  9996  1339  3000               	movlw	high _ConnMode
  9997  133A  00AE               	movwf	(NVMWrite@source+1)^(0+128)
  9998  133B  0023               	movlb	3	; select bank3
  9999  133C  085A               	movf	(_nvmConnMode+1)^(0+384),w
 10000  133D  0021               	movlb	1	; select bank1
 10001  133E  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 10002  133F  0023               	movlb	3	; select bank3
 10003  1340  0859               	movf	_nvmConnMode^(0+384),w
 10004  1341  0021               	movlb	1	; select bank1
 10005  1342  00AF               	movwf	NVMWrite@addr^(0+128)
 10006  1343  3001               	movlw	1
 10007  1344  00B1               	movwf	NVMWrite@count^(0+128)
 10008  1345  3000               	movlw	0
 10009  1346  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 10010  1347  31A3  239F  3191   	fcall	_NVMWrite
 10011                           
 10012                           ;miwi_p2p.c: 1232: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
 10013  134A  3064               	movlw	100
 10014  134B  0021               	movlb	1	; select bank1
 10015  134C  00AD               	movwf	NVMWrite@source^(0+128)
 10016  134D  3023               	movlw	35
 10017  134E  00AE               	movwf	(NVMWrite@source^(0+128)+1)
 10018  134F  0020               	movlb	0	; select bank0
 10019  1350  0869               	movf	_nvmConnectionTable+1,w
 10020  1351  0021               	movlb	1	; select bank1
 10021  1352  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 10022  1353  0020               	movlb	0	; select bank0
 10023  1354  0868               	movf	_nvmConnectionTable,w
 10024  1355  0021               	movlb	1	; select bank1
 10025  1356  00AF               	movwf	NVMWrite@addr^(0+128)
 10026  1357  308C               	movlw	140
 10027  1358  00B1               	movwf	NVMWrite@count^(0+128)
 10028  1359  3000               	movlw	0
 10029  135A  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 10030  135B  31A3  239F  3191   	fcall	_NVMWrite
 10031  135E                     l7479:	
 10032                           
 10033                           ;miwi_p2p.c: 1233: }
 10034                           ;miwi_p2p.c: 1240: initValue.PAddress = myLongAddress;
 10035  135E  30E7               	movlw	(low (_myLongAddress| (0+256)))& (0+255)
 10036  135F  0021               	movlb	1	; select bank1
 10037  1360  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
 10038  1361  083B               	movf	??_MiApp_ProtocolInit^(0+128),w
 10039  1362  00C3               	movwf	(low ((MiApp_ProtocolInit@initValue| 0+1)))^(0+128)
 10040                           
 10041                           ;miwi_p2p.c: 1241: initValue.actionFlags.bits.CCAEnable = 1;
 10042  1363  14C2               	bsf	MiApp_ProtocolInit@initValue^(0+128),1
 10043                           
 10044                           ;miwi_p2p.c: 1242: initValue.actionFlags.bits.PAddrLength = 8;
 10045  1364  0842               	movf	MiApp_ProtocolInit@initValue^(0+128),w
 10046  1365  3987               	andlw	-121
 10047  1366  3840               	iorlw	64
 10048  1367  00C2               	movwf	MiApp_ProtocolInit@initValue^(0+128)
 10049                           
 10050                           ;miwi_p2p.c: 1243: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 10051  1368  0841               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
 10052  1369  3901               	andlw	1
 10053  136A  1142               	bcf	MiApp_ProtocolInit@initValue^(0+128),2
 10054  136B  1D03               	skipz
 10055  136C  1542               	bsf	MiApp_ProtocolInit@initValue^(0+128),2
 10056                           
 10057                           ;miwi_p2p.c: 1244: initValue.actionFlags.bits.RepeaterMode = 0;
 10058  136D  1042               	bcf	MiApp_ProtocolInit@initValue^(0+128),0
 10059                           
 10060                           ;miwi_p2p.c: 1246: MiMAC_Init(initValue);
 10061  136E  0843               	movf	(MiApp_ProtocolInit@initValue+1)^(0+128),w
 10062  136F  00B3               	movwf	(MiMAC_Init@initValue+1)^(0+128)
 10063  1370  0842               	movf	MiApp_ProtocolInit@initValue^(0+128),w
 10064  1371  00B2               	movwf	MiMAC_Init@initValue^(0+128)
 10065  1372  3198  2002  3191   	fcall	_MiMAC_Init
 10066                           
 10067                           ;miwi_p2p.c: 1255: MiApp_SetChannel(currentChannel);
 10068  1375  0020               	movlb	0	; select bank0
 10069  1376  086B               	movf	_currentChannel,w
 10070  1377  31A8  2051  3191   	fcall	_MiApp_SetChannel
 10071                           
 10072                           ;miwi_p2p.c: 1266: P2PCapacityInfo = 0;
 10073  137A  0020               	movlb	0	; select bank0
 10074  137B  01DC               	clrf	_P2PCapacityInfo
 10075                           
 10076                           ;miwi_p2p.c: 1268: P2PCapacityInfo |= 0x01;
 10077  137C  145C               	bsf	_P2PCapacityInfo,0
 10078                           
 10079                           ;miwi_p2p.c: 1273: P2PCapacityInfo |= (ConnMode << 4);
 10080  137D  086F               	movf	_ConnMode,w
 10081  137E  0021               	movlb	1	; select bank1
 10082  137F  00BB               	movwf	??_MiApp_ProtocolInit^(0+128)
 10083  1380  3003               	movlw	3
 10084  1381                     u8025:	
 10085  1381  35BB               	lslf	??_MiApp_ProtocolInit^(0+128),f
 10086  1382  3EFF               	addlw	-1
 10087  1383  1D03               	skipz
 10088  1384  2B81               	goto	u8025
 10089  1385  353B               	lslf	??_MiApp_ProtocolInit^(0+128),w
 10090  1386  00BC               	movwf	(??_MiApp_ProtocolInit+1)^(0+128)
 10091  1387  083C               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
 10092  1388  0020               	movlb	0	; select bank0
 10093  1389  04DC               	iorwf	_P2PCapacityInfo,f
 10094                           
 10095                           ;miwi_p2p.c: 1275: INTCONbits.IOCIE = 1;
 10096  138A  158B               	bsf	11,3	;volatile
 10097  138B  0008               	return
 10098  138C                     __end_of_MiApp_ProtocolInit:	
 10099                           ;miwi_p2p.c: 1276: return 1;
 10100                           ;	Return value of _MiApp_ProtocolInit is never used
 10101                           
 10102                           
 10103                           	psect	text20
 10104  2A54                     __ptext20:	
 10105 ;; *************** function _NVMRead *****************
 10106 ;; Defined at:
 10107 ;;		line 208 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  dest            2    3[BANK1 ] PTR unsigned char 
 10110 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), role(1), 
 10111 ;;		 -> conn_size(1), ConnectionTable(140), 
 10112 ;;  addr            2    5[BANK1 ] unsigned int 
 10113 ;;  count           2    7[BANK1 ] unsigned int 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  oldRFIE         1   10[BANK1 ] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10125 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;Total ram usage:        8 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    7
 10132 ;; This function calls:
 10133 ;;		_SPIGet
 10134 ;;		_SPIPut
 10135 ;; This function is called by:
 10136 ;;		_MiApp_ProtocolInit
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function _NVMRead
 10142  2A54                     _NVMRead:	
 10143                           
 10144                           ;miwi_nvm.c: 215: uint8_t oldRFIE = INTCONbits.IOCIE;
 10145                           
 10146                           ;incstack = 0
 10147                           ; Regs used in _NVMRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10148  2A54  3000               	movlw	0
 10149  2A55  198B               	btfsc	11,3	;volatile
 10150  2A56  3001               	movlw	1
 10151  2A57  0021               	movlb	1	; select bank1
 10152  2A58  00AA               	movwf	NVMRead@oldRFIE^(0+128)
 10153                           
 10154                           ;miwi_nvm.c: 217: INTCONbits.IOCIE = 0;
 10155  2A59  118B               	bcf	11,3	;volatile
 10156                           
 10157                           ;miwi_nvm.c: 220: LATAbits.LATA3 = 0;
 10158  2A5A  0022               	movlb	2	; select bank2
 10159  2A5B  118C               	bcf	12,3	;volatile
 10160                           
 10161                           ;miwi_nvm.c: 236: SPIPut( 0x03 );
 10162  2A5C  3003               	movlw	3
 10163  2A5D  31B5  25D3  31AA   	fcall	_SPIPut
 10164                           
 10165                           ;miwi_nvm.c: 237: SPIPut( addr>>8 );
 10166  2A60  0021               	movlb	1	; select bank1
 10167  2A61  0826               	movf	(NVMRead@addr+1)^(0+128),w
 10168  2A62  31B5  25D3  31AA   	fcall	_SPIPut
 10169                           
 10170                           ;miwi_nvm.c: 238: SPIPut( addr );
 10171  2A65  0021               	movlb	1	; select bank1
 10172  2A66  0825               	movf	NVMRead@addr^(0+128),w
 10173  2A67  31B5  25D3  31AA   	fcall	_SPIPut
 10174  2A6A                     l7109:	
 10175                           ;miwi_nvm.c: 241: while( count > 0 )
 10176                           
 10177  2A6A  0021               	movlb	1	; select bank1
 10178  2A6B  0827               	movf	NVMRead@count^(0+128),w
 10179  2A6C  0428               	iorwf	(NVMRead@count+1)^(0+128),w
 10180  2A6D  1903               	btfsc	3,2
 10181  2A6E  2A83               	goto	l253
 10182                           
 10183                           ;miwi_nvm.c: 242: {
 10184                           ;miwi_nvm.c: 243: *dest++ = SPIGet();
 10185  2A6F  31B5  2504  31AA   	fcall	_SPIGet
 10186  2A72  0021               	movlb	1	; select bank1
 10187  2A73  00A9               	movwf	??_NVMRead^(0+128)
 10188  2A74  0823               	movf	NVMRead@dest^(0+128),w
 10189  2A75  0086               	movwf	6
 10190  2A76  0824               	movf	(NVMRead@dest+1)^(0+128),w
 10191  2A77  0087               	movwf	7
 10192  2A78  0829               	movf	??_NVMRead^(0+128),w
 10193  2A79  0081               	movwf	1
 10194  2A7A  3001               	movlw	1
 10195  2A7B  07A3               	addwf	NVMRead@dest^(0+128),f
 10196  2A7C  3000               	movlw	0
 10197  2A7D  3DA4               	addwfc	(NVMRead@dest+1)^(0+128),f
 10198                           
 10199                           ;miwi_nvm.c: 244: count--;
 10200  2A7E  3001               	movlw	1
 10201  2A7F  02A7               	subwf	NVMRead@count^(0+128),f
 10202  2A80  3000               	movlw	0
 10203  2A81  3BA8               	subwfb	(NVMRead@count+1)^(0+128),f
 10204  2A82  2A6A               	goto	l7109
 10205  2A83                     l253:	
 10206                           
 10207                           ;miwi_nvm.c: 245: }
 10208                           ;miwi_nvm.c: 246: LATAbits.LATA3 = 1;
 10209  2A83  0022               	movlb	2	; select bank2
 10210  2A84  158C               	bsf	12,3	;volatile
 10211                           
 10212                           ;miwi_nvm.c: 251: INTCONbits.IOCIE = oldRFIE;
 10213  2A85  0021               	movlb	1	; select bank1
 10214  2A86  0C2A               	rrf	NVMRead@oldRFIE^(0+128),w
 10215  2A87  1C03               	skipc
 10216  2A88  118B               	bcf	11,3	;volatile
 10217  2A89  1803               	skipnc
 10218  2A8A  158B               	bsf	11,3	;volatile
 10219  2A8B  0008               	return
 10220  2A8C                     __end_of_NVMRead:	
 10221                           
 10222                           	psect	text21
 10223  2509                     __ptext21:	
 10224 ;; *************** function _NVMInit *****************
 10225 ;; Defined at:
 10226 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  result          1    7[BANK1 ] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      unsigned char 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;Total ram usage:        2 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    6
 10247 ;; This function calls:
 10248 ;;		_NVMalloc
 10249 ;; This function is called by:
 10250 ;;		_MiApp_ProtocolInit
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function _NVMInit
 10256  2509                     _NVMInit:	
 10257                           
 10258                           ;miwi_nvm.c: 709: bool result = 1;
 10259                           
 10260                           ;incstack = 0
 10261                           ; Regs used in _NVMInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10262  2509  0021               	movlb	1	; select bank1
 10263  250A  01A7               	clrf	NVMInit@result^(0+128)
 10264  250B  0AA7               	incf	NVMInit@result^(0+128),f
 10265                           
 10266                           ;miwi_nvm.c: 711: nextEEPosition = 0;
 10267  250C  0023               	movlb	3	; select bank3
 10268  250D  01CA               	clrf	_nextEEPosition^(0+384)
 10269  250E  01CB               	clrf	(_nextEEPosition+1)^(0+384)
 10270                           
 10271                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
 10272  250F  3002               	movlw	2
 10273  2510  0021               	movlb	1	; select bank1
 10274  2511  00A0               	movwf	NVMalloc@size^(0+128)
 10275  2512  3000               	movlw	0
 10276  2513  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10277  2514  30DF               	movlw	low _nvmMyPANID
 10278  2515  00A2               	movwf	NVMalloc@location^(0+128)
 10279  2516  3001               	movlw	high _nvmMyPANID
 10280  2517  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10281  2518  3187  27D9  31A5   	fcall	_NVMalloc
 10282  251B  0021               	movlb	1	; select bank1
 10283  251C  00A6               	movwf	??_NVMInit^(0+128)
 10284  251D  0826               	movf	??_NVMInit^(0+128),w
 10285  251E  05A7               	andwf	NVMInit@result^(0+128),f
 10286                           
 10287                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
 10288  251F  3001               	movlw	1
 10289  2520  00A0               	movwf	NVMalloc@size^(0+128)
 10290  2521  3000               	movlw	0
 10291  2522  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10292  2523  30DB               	movlw	low _nvmCurrentChannel
 10293  2524  00A2               	movwf	NVMalloc@location^(0+128)
 10294  2525  3001               	movlw	high _nvmCurrentChannel
 10295  2526  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10296  2527  3187  27D9  31A5   	fcall	_NVMalloc
 10297  252A  0021               	movlb	1	; select bank1
 10298  252B  00A6               	movwf	??_NVMInit^(0+128)
 10299  252C  0826               	movf	??_NVMInit^(0+128),w
 10300  252D  05A7               	andwf	NVMInit@result^(0+128),f
 10301                           
 10302                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
 10303  252E  3001               	movlw	1
 10304  252F  00A0               	movwf	NVMalloc@size^(0+128)
 10305  2530  3000               	movlw	0
 10306  2531  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10307  2532  30D9               	movlw	low _nvmConnMode
 10308  2533  00A2               	movwf	NVMalloc@location^(0+128)
 10309  2534  3001               	movlw	high _nvmConnMode
 10310  2535  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10311  2536  3187  27D9  31A5   	fcall	_NVMalloc
 10312  2539  0021               	movlb	1	; select bank1
 10313  253A  00A6               	movwf	??_NVMInit^(0+128)
 10314  253B  0826               	movf	??_NVMInit^(0+128),w
 10315  253C  05A7               	andwf	NVMInit@result^(0+128),f
 10316                           
 10317                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 10, &nvmConnectionTable)
      +                          ;
 10318  253D  308C               	movlw	140
 10319  253E  00A0               	movwf	NVMalloc@size^(0+128)
 10320  253F  3000               	movlw	0
 10321  2540  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10322  2541  3068               	movlw	low _nvmConnectionTable
 10323  2542  00A2               	movwf	NVMalloc@location^(0+128)
 10324  2543  3000               	movlw	high _nvmConnectionTable
 10325  2544  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10326  2545  3187  27D9  31A5   	fcall	_NVMalloc
 10327  2548  0021               	movlb	1	; select bank1
 10328  2549  00A6               	movwf	??_NVMInit^(0+128)
 10329  254A  0826               	movf	??_NVMInit^(0+128),w
 10330  254B  05A7               	andwf	NVMInit@result^(0+128),f
 10331                           
 10332                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
 10333  254C  3004               	movlw	4
 10334  254D  00A0               	movwf	NVMalloc@size^(0+128)
 10335  254E  3000               	movlw	0
 10336  254F  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10337  2550  30E1               	movlw	low _nvmOutFrameCounter
 10338  2551  00A2               	movwf	NVMalloc@location^(0+128)
 10339  2552  3001               	movlw	high _nvmOutFrameCounter
 10340  2553  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10341  2554  3187  27D9  31A5   	fcall	_NVMalloc
 10342  2557  0021               	movlb	1	; select bank1
 10343  2558  00A6               	movwf	??_NVMInit^(0+128)
 10344  2559  0826               	movf	??_NVMInit^(0+128),w
 10345  255A  05A7               	andwf	NVMInit@result^(0+128),f
 10346                           
 10347                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
 10348  255B  3001               	movlw	1
 10349  255C  00A0               	movwf	NVMalloc@size^(0+128)
 10350  255D  3000               	movlw	0
 10351  255E  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10352  255F  30DD               	movlw	low _nvmEdc
 10353  2560  00A2               	movwf	NVMalloc@location^(0+128)
 10354  2561  3001               	movlw	high _nvmEdc
 10355  2562  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10356  2563  3187  27D9  31A5   	fcall	_NVMalloc
 10357  2566  0021               	movlb	1	; select bank1
 10358  2567  00A6               	movwf	??_NVMInit^(0+128)
 10359  2568  0826               	movf	??_NVMInit^(0+128),w
 10360  2569  05A7               	andwf	NVMInit@result^(0+128),f
 10361                           
 10362                           ;miwi_nvm.c: 721: result &= NVMalloc(1,&nvmRole);
 10363  256A  3001               	movlw	1
 10364  256B  00A0               	movwf	NVMalloc@size^(0+128)
 10365  256C  3000               	movlw	0
 10366  256D  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10367  256E  30E3               	movlw	low _nvmRole
 10368  256F  00A2               	movwf	NVMalloc@location^(0+128)
 10369  2570  3001               	movlw	high _nvmRole
 10370  2571  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10371  2572  3187  27D9  31A5   	fcall	_NVMalloc
 10372  2575  0021               	movlb	1	; select bank1
 10373  2576  00A6               	movwf	??_NVMInit^(0+128)
 10374  2577  0826               	movf	??_NVMInit^(0+128),w
 10375  2578  05A7               	andwf	NVMInit@result^(0+128),f
 10376                           
 10377                           ;miwi_nvm.c: 722: result &= NVMalloc(1,&nvmmyIndex);
 10378  2579  3001               	movlw	1
 10379  257A  00A0               	movwf	NVMalloc@size^(0+128)
 10380  257B  3000               	movlw	0
 10381  257C  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10382  257D  30E5               	movlw	low _nvmmyIndex
 10383  257E  00A2               	movwf	NVMalloc@location^(0+128)
 10384  257F  3001               	movlw	high _nvmmyIndex
 10385  2580  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10386  2581  3187  27D9         	fcall	_NVMalloc
 10387  2583  0021               	movlb	1	; select bank1
 10388  2584  00A6               	movwf	??_NVMInit^(0+128)
 10389  2585  0826               	movf	??_NVMInit^(0+128),w
 10390  2586  05A7               	andwf	NVMInit@result^(0+128),f
 10391  2587  0008               	return
 10392  2588                     __end_of_NVMInit:	
 10393                           ;miwi_nvm.c: 750: return result;
 10394                           ;	Return value of _NVMInit is never used
 10395                           
 10396                           
 10397                           	psect	text22
 10398  07D9                     __ptext22:	
 10399 ;; *************** function _NVMalloc *****************
 10400 ;; Defined at:
 10401 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  size            2    0[BANK1 ] unsigned int 
 10404 ;;  location        2    2[BANK1 ] PTR unsigned int 
 10405 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
 10406 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      unsigned char 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10418 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;Total ram usage:        6 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:    5
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_NVMInit
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           
 10433                           ;psect for function _NVMalloc
 10434  07D9                     _NVMalloc:	
 10435                           
 10436                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 32768)
 10437                           
 10438                           ;incstack = 0
 10439                           ; Regs used in _NVMalloc: [wreg+fsr1l+fsr1h+status,2+status,0]
 10440  07D9  0021               	movlb	1	; select bank1
 10441  07DA  0820               	movf	NVMalloc@size^(0+128),w
 10442  07DB  0023               	movlb	3	; select bank3
 10443  07DC  074A               	addwf	_nextEEPosition^(0+384),w
 10444  07DD  0021               	movlb	1	; select bank1
 10445  07DE  00A4               	movwf	??_NVMalloc^(0+128)
 10446  07DF  0821               	movf	(NVMalloc@size+1)^(0+128),w
 10447  07E0  0023               	movlb	3	; select bank3
 10448  07E1  3D4B               	addwfc	(_nextEEPosition+1)^(0+384),w
 10449  07E2  0021               	movlb	1	; select bank1
 10450  07E3  00A5               	movwf	(??_NVMalloc+1)^(0+128)
 10451  07E4  3080               	movlw	128
 10452  07E5  0225               	subwf	(??_NVMalloc+1)^(0+128),w
 10453  07E6  3001               	movlw	1
 10454  07E7  1903               	skipnz
 10455  07E8  0224               	subwf	??_NVMalloc^(0+128),w
 10456  07E9  1C03               	skipc
 10457  07EA  2FED               	goto	l7001
 10458                           
 10459                           ;miwi_nvm.c: 697: {
 10460                           ;miwi_nvm.c: 698: return 0;
 10461  07EB  3000               	movlw	0
 10462  07EC  0008               	return
 10463  07ED                     l7001:	
 10464                           
 10465                           ;miwi_nvm.c: 699: }
 10466                           ;miwi_nvm.c: 701: *location = nextEEPosition;
 10467  07ED  0822               	movf	NVMalloc@location^(0+128),w
 10468  07EE  0086               	movwf	6
 10469  07EF  0823               	movf	(NVMalloc@location+1)^(0+128),w
 10470  07F0  0087               	movwf	7
 10471  07F1  0023               	movlb	3	; select bank3
 10472  07F2  084A               	movf	_nextEEPosition^(0+384),w
 10473  07F3  3FC0               	movwi [0]fsr1
 10474  07F4  084B               	movf	(_nextEEPosition+1)^(0+384),w
 10475  07F5  3FC1               	movwi [1]fsr1
 10476                           
 10477                           ;miwi_nvm.c: 702: nextEEPosition += size;
 10478  07F6  0021               	movlb	1	; select bank1
 10479  07F7  0820               	movf	NVMalloc@size^(0+128),w
 10480  07F8  0023               	movlb	3	; select bank3
 10481  07F9  07CA               	addwf	_nextEEPosition^(0+384),f
 10482  07FA  0021               	movlb	1	; select bank1
 10483  07FB  0821               	movf	(NVMalloc@size+1)^(0+128),w
 10484  07FC  0023               	movlb	3	; select bank3
 10485  07FD  3DCB               	addwfc	(_nextEEPosition+1)^(0+384),f
 10486                           
 10487                           ;miwi_nvm.c: 703: return 1;
 10488  07FE  3001               	movlw	1
 10489  07FF  0008               	return
 10490  0800                     __end_of_NVMalloc:	
 10491                           
 10492                           	psect	text23
 10493  1802                     __ptext23:	
 10494 ;; *************** function _MiMAC_Init *****************
 10495 ;; Defined at:
 10496 ;;		line 580 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  initValue       2   18[BANK1 ] struct .
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  i               1   24[BANK1 ] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  1    wreg      unsigned char 
 10503 ;; Registers used:
 10504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10510 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;Total ram usage:        7 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    8
 10517 ;; This function calls:
 10518 ;;		_DELAY_ms
 10519 ;;		_RegisterSet
 10520 ;;		_SetRFMode
 10521 ;;		___wmul
 10522 ;; This function is called by:
 10523 ;;		_MiApp_ProtocolInit
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           
 10528                           ;psect for function _MiMAC_Init
 10529  1802                     _MiMAC_Init:	
 10530                           
 10531                           ;drv_mrf_miwi_89xa.c: 582: uint8_t i;
 10532                           ;drv_mrf_miwi_89xa.c: 584: MACInitParams = initValue;
 10533                           
 10534                           ;incstack = 0
 10535                           ; Regs used in _MiMAC_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10536  1802  0021               	movlb	1	; select bank1
 10537  1803  0833               	movf	(MiMAC_Init@initValue+1)^(0+128),w
 10538  1804  0020               	movlb	0	; select bank0
 10539  1805  00D9               	movwf	_MACInitParams+1
 10540  1806  0021               	movlb	1	; select bank1
 10541  1807  0832               	movf	MiMAC_Init@initValue^(0+128),w
 10542  1808  0020               	movlb	0	; select bank0
 10543  1809  00D8               	movwf	_MACInitParams
 10544                           
 10545                           ;drv_mrf_miwi_89xa.c: 586: DELAY_ms(20);
 10546  180A  3014               	movlw	20
 10547  180B  0021               	movlb	1	; select bank1
 10548  180C  00AC               	movwf	DELAY_ms@ms^(0+128)
 10549  180D  3000               	movlw	0
 10550  180E  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 10551  180F  31AC  2423  3198   	fcall	_DELAY_ms
 10552                           
 10553                           ;drv_mrf_miwi_89xa.c: 587: LATEbits.LATE3 = 1;
 10554  1812  0022               	movlb	2	; select bank2
 10555  1813  1590               	bsf	16,3	;volatile
 10556                           
 10557                           ;drv_mrf_miwi_89xa.c: 588: LATCbits.LATC2 = 1;
 10558  1814  150E               	bsf	14,2	;volatile
 10559                           
 10560                           ;drv_mrf_miwi_89xa.c: 591: MACSeq = TMR1L;
 10561  1815  0020               	movlb	0	; select bank0
 10562  1816  0816               	movf	22,w	;volatile
 10563  1817  0021               	movlb	1	; select bank1
 10564  1818  00B4               	movwf	??_MiMAC_Init^(0+128)
 10565  1819  0834               	movf	??_MiMAC_Init^(0+128),w
 10566  181A  0023               	movlb	3	; select bank3
 10567  181B  00CC               	movwf	_MACSeq^(0+384)
 10568                           
 10569                           ;drv_mrf_miwi_89xa.c: 593: ReceivedBankIndex = 0xFF;
 10570  181C  30FF               	movlw	255
 10571  181D  0021               	movlb	1	; select bank1
 10572  181E  00B4               	movwf	??_MiMAC_Init^(0+128)
 10573  181F  0834               	movf	??_MiMAC_Init^(0+128),w
 10574  1820  0020               	movlb	0	; select bank0
 10575  1821  00DE               	movwf	_ReceivedBankIndex
 10576                           
 10577                           ;drv_mrf_miwi_89xa.c: 595: for(i = 0; i < 2; i++)
 10578  1822  0021               	movlb	1	; select bank1
 10579  1823  01B8               	clrf	MiMAC_Init@i^(0+128)
 10580  1824  3002               	movlw	2
 10581  1825  0238               	subwf	MiMAC_Init@i^(0+128),w
 10582  1826  1803               	btfsc	3,0
 10583  1827  284A               	goto	l7065
 10584  1828                     l7059:	
 10585                           
 10586                           ;drv_mrf_miwi_89xa.c: 596: {
 10587                           ;drv_mrf_miwi_89xa.c: 597: RxPacket[i].flags.Val = 0;
 10588  1828  0838               	movf	MiMAC_Init@i^(0+128),w
 10589  1829  00B4               	movwf	??_MiMAC_Init^(0+128)
 10590  182A  01B5               	clrf	(??_MiMAC_Init^(0+128)+1)
 10591  182B  0834               	movf	??_MiMAC_Init^(0+128),w
 10592  182C  00A7               	movwf	___wmul@multiplier^(0+128)
 10593  182D  0835               	movf	(??_MiMAC_Init+1)^(0+128),w
 10594  182E  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 10595  182F  3039               	movlw	57
 10596  1830  00A9               	movwf	___wmul@multiplicand^(0+128)
 10597  1831  3000               	movlw	0
 10598  1832  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 10599  1833  31B6  26A4  3198   	fcall	___wmul
 10600  1836  30F2               	movlw	242
 10601  1837  0021               	movlb	1	; select bank1
 10602  1838  00B6               	movwf	(??_MiMAC_Init+2)^(0+128)
 10603  1839  3022               	movlw	34
 10604  183A  00B7               	movwf	((??_MiMAC_Init+2)^(0+128)+1)
 10605  183B  0827               	movf	?___wmul^(0+128),w
 10606  183C  0736               	addwf	(??_MiMAC_Init+2)^(0+128),w
 10607  183D  0086               	movwf	6
 10608  183E  0828               	movf	(?___wmul+1)^(0+128),w
 10609  183F  3D37               	addwfc	(??_MiMAC_Init+3)^(0+128),w
 10610  1840  0087               	movwf	7
 10611  1841  0181               	clrf	1
 10612  1842  3001               	movlw	1
 10613  1843  00B4               	movwf	??_MiMAC_Init^(0+128)
 10614  1844  0834               	movf	??_MiMAC_Init^(0+128),w
 10615  1845  07B8               	addwf	MiMAC_Init@i^(0+128),f
 10616  1846  3002               	movlw	2
 10617  1847  0238               	subwf	MiMAC_Init@i^(0+128),w
 10618  1848  1C03               	skipc
 10619  1849  2828               	goto	l7059
 10620  184A                     l7065:	
 10621                           
 10622                           ;drv_mrf_miwi_89xa.c: 598: }
 10623                           ;drv_mrf_miwi_89xa.c: 632: for (i = 0 ; i <= 31; i++)
 10624  184A  01B8               	clrf	MiMAC_Init@i^(0+128)
 10625  184B  3020               	movlw	32
 10626  184C  0238               	subwf	MiMAC_Init@i^(0+128),w
 10627  184D  1803               	btfsc	3,0
 10628  184E  286A               	goto	l7077
 10629  184F                     l7071:	
 10630                           
 10631                           ;drv_mrf_miwi_89xa.c: 633: {
 10632                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(InitConfigRegs[i]);
 10633  184F  0838               	movf	MiMAC_Init@i^(0+128),w
 10634  1850  00B4               	movwf	??_MiMAC_Init^(0+128)
 10635  1851  01B5               	clrf	(??_MiMAC_Init^(0+128)+1)
 10636  1852  35B4               	lslf	??_MiMAC_Init^(0+128),f
 10637  1853  0DB5               	rlf	(??_MiMAC_Init^(0+128)+1),f
 10638  1854  30C0               	movlw	low (_InitConfigRegs| (0+32768))
 10639  1855  0734               	addwf	??_MiMAC_Init^(0+128),w
 10640  1856  0084               	movwf	4
 10641  1857  30A0               	movlw	high (_InitConfigRegs| (0+32768))
 10642  1858  3D35               	addwfc	(??_MiMAC_Init+1)^(0+128),w
 10643  1859  0085               	movwf	5
 10644  185A  3F00               	moviw [0]fsr0
 10645  185B  00A3               	movwf	RegisterSet@setting^(0+128)
 10646  185C  3F01               	moviw [1]fsr0
 10647  185D  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10648  185E  31B6  2603  3198   	fcall	_RegisterSet
 10649  1861  3001               	movlw	1
 10650  1862  0021               	movlb	1	; select bank1
 10651  1863  00B4               	movwf	??_MiMAC_Init^(0+128)
 10652  1864  0834               	movf	??_MiMAC_Init^(0+128),w
 10653  1865  07B8               	addwf	MiMAC_Init@i^(0+128),f
 10654  1866  3020               	movlw	32
 10655  1867  0238               	subwf	MiMAC_Init@i^(0+128),w
 10656  1868  1C03               	skipc
 10657  1869  284F               	goto	l7071
 10658  186A                     l7077:	
 10659                           
 10660                           ;drv_mrf_miwi_89xa.c: 635: }
 10661                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x20);
 10662  186A  3020               	movlw	32
 10663  186B  31AE  26F1  3198   	fcall	_SetRFMode
 10664                           
 10665                           ;drv_mrf_miwi_89xa.c: 637: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 10666  186E  304E               	movlw	78
 10667  186F  0021               	movlb	1	; select bank1
 10668  1870  00A3               	movwf	RegisterSet@setting^(0+128)
 10669  1871  3000               	movlw	0
 10670  1872  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10671  1873  31B6  2603  3198   	fcall	_RegisterSet
 10672                           
 10673                           ;drv_mrf_miwi_89xa.c: 638: SetRFMode(0x40);
 10674  1876  3040               	movlw	64
 10675  1877  31AE  26F1  3198   	fcall	_SetRFMode
 10676                           
 10677                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 10678  187A  300F               	movlw	15
 10679  187B  0021               	movlb	1	; select bank1
 10680  187C  00A3               	movwf	RegisterSet@setting^(0+128)
 10681  187D  301C               	movlw	28
 10682  187E  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10683  187F  31B6  2603  3198   	fcall	_RegisterSet
 10684                           
 10685                           ;drv_mrf_miwi_89xa.c: 644: SetRFMode(0x60);
 10686  1882  3060               	movlw	96
 10687  1883  31AE  26F1         	fcall	_SetRFMode
 10688                           
 10689                           ;drv_mrf_miwi_89xa.c: 649: IOCBFbits.IOCBF3 = 0;
 10690  1885  0027               	movlb	7	; select bank7
 10691  1886  1196               	bcf	22,3	;volatile
 10692                           
 10693                           ;drv_mrf_miwi_89xa.c: 650: INTCONbits.IOCIE = 1;
 10694  1887  158B               	bsf	11,3	;volatile
 10695  1888  0008               	return
 10696  1889                     __end_of_MiMAC_Init:	
 10697                           ;drv_mrf_miwi_89xa.c: 651: return 1;
 10698                           ;	Return value of _MiMAC_Init is never used
 10699                           
 10700                           
 10701                           	psect	text24
 10702  2851                     __ptext24:	
 10703 ;; *************** function _MiApp_SetChannel *****************
 10704 ;; Defined at:
 10705 ;;		line 2388 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  channel         1    wreg     unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  channel         1   26[BANK1 ] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      unsigned char 
 10712 ;; Registers used:
 10713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;Total ram usage:        2 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    9
 10726 ;; This function calls:
 10727 ;;		_MiMAC_SetChannel
 10728 ;;		_NVMWrite
 10729 ;; This function is called by:
 10730 ;;		_MiApp_ProtocolInit
 10731 ;;		_Initialize_Demo
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _MiApp_SetChannel
 10737  2851                     _MiApp_SetChannel:	
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _MiApp_SetChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10741                           ;MiApp_SetChannel@channel stored from wreg
 10742  2851  0021               	movlb	1	; select bank1
 10743  2852  00BA               	movwf	MiApp_SetChannel@channel^(0+128)
 10744                           
 10745                           ;miwi_p2p.c: 2390: if( MiMAC_SetChannel(channel, 0) )
 10746  2853  01A8               	clrf	MiMAC_SetChannel@offsetFreq^(0+128)
 10747  2854  083A               	movf	MiApp_SetChannel@channel^(0+128),w
 10748  2855  31AE  269D  31A8   	fcall	_MiMAC_SetChannel
 10749  2858  3A00               	xorlw	0
 10750  2859  1903               	skipnz
 10751  285A  2876               	goto	l7169
 10752                           
 10753                           ;miwi_p2p.c: 2391: {
 10754                           ;miwi_p2p.c: 2392: currentChannel = channel;
 10755  285B  0021               	movlb	1	; select bank1
 10756  285C  083A               	movf	MiApp_SetChannel@channel^(0+128),w
 10757  285D  00B9               	movwf	??_MiApp_SetChannel^(0+128)
 10758  285E  0839               	movf	??_MiApp_SetChannel^(0+128),w
 10759  285F  0020               	movlb	0	; select bank0
 10760  2860  00EB               	movwf	_currentChannel
 10761                           
 10762                           ;miwi_p2p.c: 2394: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 10763  2861  306B               	movlw	low _currentChannel
 10764  2862  0021               	movlb	1	; select bank1
 10765  2863  00AD               	movwf	NVMWrite@source^(0+128)
 10766  2864  3000               	movlw	high _currentChannel
 10767  2865  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 10768  2866  0023               	movlb	3	; select bank3
 10769  2867  085C               	movf	(_nvmCurrentChannel+1)^(0+384),w
 10770  2868  0021               	movlb	1	; select bank1
 10771  2869  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 10772  286A  0023               	movlb	3	; select bank3
 10773  286B  085B               	movf	_nvmCurrentChannel^(0+384),w
 10774  286C  0021               	movlb	1	; select bank1
 10775  286D  00AF               	movwf	NVMWrite@addr^(0+128)
 10776  286E  3001               	movlw	1
 10777  286F  00B1               	movwf	NVMWrite@count^(0+128)
 10778  2870  3000               	movlw	0
 10779  2871  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 10780  2872  31A3  239F         	fcall	_NVMWrite
 10781                           
 10782                           ;miwi_p2p.c: 2396: return 1;
 10783  2874  3001               	movlw	1
 10784  2875  0008               	return
 10785  2876                     l7169:	
 10786                           
 10787                           ;miwi_p2p.c: 2397: }
 10788                           ;miwi_p2p.c: 2398: return 0;
 10789  2876  3000               	movlw	0
 10790  2877  0008               	return
 10791  2878                     __end_of_MiApp_SetChannel:	
 10792                           
 10793                           	psect	text25
 10794  2E9D                     __ptext25:	
 10795 ;; *************** function _MiMAC_SetChannel *****************
 10796 ;; Defined at:
 10797 ;;		line 485 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  channel         1    wreg     unsigned char 
 10800 ;;  offsetFreq      1    8[BANK1 ] unsigned char 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  channel         1   10[BANK1 ] unsigned char 
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      unsigned char 
 10805 ;; Registers used:
 10806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10812 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;Total ram usage:        3 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:    8
 10819 ;; This function calls:
 10820 ;;		_RegisterSet
 10821 ;;		_SetRFMode
 10822 ;; This function is called by:
 10823 ;;		_MiApp_SetChannel
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _MiMAC_SetChannel
 10829  2E9D                     _MiMAC_SetChannel:	
 10830                           
 10831                           ;incstack = 0
 10832                           ; Regs used in _MiMAC_SetChannel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10833                           ;MiMAC_SetChannel@channel stored from wreg
 10834  2E9D  0021               	movlb	1	; select bank1
 10835  2E9E  00AA               	movwf	MiMAC_SetChannel@channel^(0+128)
 10836                           
 10837                           ;drv_mrf_miwi_89xa.c: 487: if( channel >= 32 )
 10838  2E9F  3020               	movlw	32
 10839  2EA0  022A               	subwf	MiMAC_SetChannel@channel^(0+128),w
 10840  2EA1  1C03               	skipc
 10841  2EA2  2EA5               	goto	l6975
 10842                           
 10843                           ;drv_mrf_miwi_89xa.c: 488: {
 10844                           ;drv_mrf_miwi_89xa.c: 489: return 0;
 10845  2EA3  3000               	movlw	0
 10846  2EA4  0008               	return
 10847  2EA5                     l6975:	
 10848                           
 10849                           ;drv_mrf_miwi_89xa.c: 490: }
 10850                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0C00 | 100);
 10851  2EA5  3064               	movlw	100
 10852  2EA6  00A3               	movwf	RegisterSet@setting^(0+128)
 10853  2EA7  300C               	movlw	12
 10854  2EA8  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10855  2EA9  31B6  2603  31AE   	fcall	_RegisterSet
 10856                           
 10857                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x0E00 | PVALUE[channel]);
 10858  2EAC  0021               	movlb	1	; select bank1
 10859  2EAD  082A               	movf	MiMAC_SetChannel@channel^(0+128),w
 10860  2EAE  3E00               	addlw	low (_PVALUE| (0+32768))
 10861  2EAF  0084               	movwf	4
 10862  2EB0  30A1               	movlw	high (_PVALUE| (0+32768))
 10863  2EB1  1803               	skipnc
 10864  2EB2  3E01               	addlw	1
 10865  2EB3  0085               	movwf	5
 10866  2EB4  0800               	movf	0,w	;code access
 10867  2EB5  00A9               	movwf	??_MiMAC_SetChannel^(0+128)
 10868  2EB6  3000               	movlw	0
 10869  2EB7  0429               	iorwf	??_MiMAC_SetChannel^(0+128),w
 10870  2EB8  00A3               	movwf	RegisterSet@setting^(0+128)
 10871  2EB9  300E               	movlw	14
 10872  2EBA  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10873  2EBB  31B6  2603  31AE   	fcall	_RegisterSet
 10874                           
 10875                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x1000 | SVALUE[channel]);
 10876  2EBE  0021               	movlb	1	; select bank1
 10877  2EBF  082A               	movf	MiMAC_SetChannel@channel^(0+128),w
 10878  2EC0  3E20               	addlw	low (_SVALUE| (0+32768))
 10879  2EC1  0084               	movwf	4
 10880  2EC2  30A1               	movlw	high (_SVALUE| (0+32768))
 10881  2EC3  1803               	skipnc
 10882  2EC4  3E01               	addlw	1
 10883  2EC5  0085               	movwf	5
 10884  2EC6  0800               	movf	0,w	;code access
 10885  2EC7  00A9               	movwf	??_MiMAC_SetChannel^(0+128)
 10886  2EC8  3000               	movlw	0
 10887  2EC9  0429               	iorwf	??_MiMAC_SetChannel^(0+128),w
 10888  2ECA  00A3               	movwf	RegisterSet@setting^(0+128)
 10889  2ECB  3010               	movlw	16
 10890  2ECC  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10891  2ECD  31B6  2603  31AE   	fcall	_RegisterSet
 10892                           
 10893                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x20);
 10894  2ED0  3020               	movlw	32
 10895  2ED1  31AE  26F1  31AE   	fcall	_SetRFMode
 10896                           
 10897                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 10898  2ED4  304E               	movlw	78
 10899  2ED5  0021               	movlb	1	; select bank1
 10900  2ED6  00A3               	movwf	RegisterSet@setting^(0+128)
 10901  2ED7  3000               	movlw	0
 10902  2ED8  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10903  2ED9  31B6  2603  31AE   	fcall	_RegisterSet
 10904                           
 10905                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x40);
 10906  2EDC  3040               	movlw	64
 10907  2EDD  31AE  26F1  31AE   	fcall	_SetRFMode
 10908                           
 10909                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 10910  2EE0  300F               	movlw	15
 10911  2EE1  0021               	movlb	1	; select bank1
 10912  2EE2  00A3               	movwf	RegisterSet@setting^(0+128)
 10913  2EE3  301C               	movlw	28
 10914  2EE4  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10915  2EE5  31B6  2603  31AE   	fcall	_RegisterSet
 10916                           
 10917                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x20);
 10918  2EE8  3020               	movlw	32
 10919  2EE9  31AE  26F1  31AE   	fcall	_SetRFMode
 10920                           
 10921                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x60);
 10922  2EEC  3060               	movlw	96
 10923  2EED  31AE  26F1         	fcall	_SetRFMode
 10924                           
 10925                           ;drv_mrf_miwi_89xa.c: 503: return 1;
 10926  2EEF  3001               	movlw	1
 10927  2EF0  0008               	return
 10928  2EF1                     __end_of_MiMAC_SetChannel:	
 10929                           
 10930                           	psect	text26
 10931  353B                     __ptext26:	
 10932 ;; *************** function _InitSymbolTimer *****************
 10933 ;; Defined at:
 10934 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;		None
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;		None
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;Total ram usage:        0 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; Hardware stack levels required when called:    5
 10955 ;; This function calls:
 10956 ;;		Nothing
 10957 ;; This function is called by:
 10958 ;;		_MiApp_ProtocolInit
 10959 ;;		_main
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           
 10964                           ;psect for function _InitSymbolTimer
 10965  353B                     _InitSymbolTimer:	
 10966                           
 10967                           ;symbol.c: 70: T1CON = 0b00111000;
 10968                           
 10969                           ;incstack = 0
 10970                           ; Regs used in _InitSymbolTimer: [wreg+status,2]
 10971  353B  3038               	movlw	56
 10972  353C  0020               	movlb	0	; select bank0
 10973  353D  0098               	movwf	24	;volatile
 10974                           
 10975                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
 10976  353E  1011               	bcf	17,0	;volatile
 10977                           
 10978                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
 10979  353F  0021               	movlb	1	; select bank1
 10980  3540  1411               	bsf	17,0	;volatile
 10981                           
 10982                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
 10983  3541  0020               	movlb	0	; select bank0
 10984  3542  1418               	bsf	24,0	;volatile
 10985                           
 10986                           ;symbol.c: 75: timerExtension1 = 0;
 10987  3543  01E6               	clrf	_timerExtension1	;volatile
 10988                           
 10989                           ;symbol.c: 76: timerExtension2 = 0;
 10990  3544  01E7               	clrf	_timerExtension2	;volatile
 10991  3545  0008               	return
 10992  3546                     __end_of_InitSymbolTimer:	
 10993                           
 10994                           	psect	text27
 10995  282B                     __ptext27:	
 10996 ;; *************** function _EEPROM_Read *****************
 10997 ;; Defined at:
 10998 ;;		line 26 in file "../src/system_config/pic18exp_pic16f1947_89xa/eeprom.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  dest            1    wreg     PTR unsigned char 
 11001 ;;		 -> myLongAddress(8), 
 11002 ;;  addr            1    3[BANK1 ] unsigned char 
 11003 ;;  count           1    4[BANK1 ] unsigned char 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  dest            1    6[BANK1 ] PTR unsigned char 
 11006 ;;		 -> myLongAddress(8), 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        4 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    7
 11023 ;; This function calls:
 11024 ;;		_SPIGet
 11025 ;;		_SPIPut
 11026 ;; This function is called by:
 11027 ;;		_MiApp_ProtocolInit
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           
 11032                           ;psect for function _EEPROM_Read
 11033  282B                     _EEPROM_Read:	
 11034                           
 11035                           ;incstack = 0
 11036                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11037                           ;EEPROM_Read@dest stored from wreg
 11038  282B  0021               	movlb	1	; select bank1
 11039  282C  00A6               	movwf	EEPROM_Read@dest^(0+128)
 11040                           
 11041                           ;eeprom.c: 34: LATEbits.LATE2 = 0;
 11042  282D  0022               	movlb	2	; select bank2
 11043  282E  1110               	bcf	16,2	;volatile
 11044                           
 11045                           ;eeprom.c: 35: SPIPut(0x03);
 11046  282F  3003               	movlw	3
 11047  2830  31B5  25D3  31A8   	fcall	_SPIPut
 11048                           
 11049                           ;eeprom.c: 36: SPIPut(addr);
 11050  2833  0021               	movlb	1	; select bank1
 11051  2834  0823               	movf	EEPROM_Read@addr^(0+128),w
 11052  2835  31B5  25D3  31A8   	fcall	_SPIPut
 11053  2838                     l7145:	
 11054                           ;eeprom.c: 37: while( count )
 11055                           
 11056  2838  0021               	movlb	1	; select bank1
 11057  2839  0824               	movf	EEPROM_Read@count^(0+128),w
 11058  283A  1903               	btfsc	3,2
 11059  283B  284E               	goto	l1001
 11060                           
 11061                           ;eeprom.c: 38: {
 11062                           ;eeprom.c: 39: *dest++ = SPIGet();
 11063  283C  31B5  2504  31A8   	fcall	_SPIGet
 11064  283F  0021               	movlb	1	; select bank1
 11065  2840  00A5               	movwf	??_EEPROM_Read^(0+128)
 11066  2841  0826               	movf	EEPROM_Read@dest^(0+128),w
 11067  2842  0086               	movwf	6
 11068  2843  3001               	movlw	1	; select bank2/3
 11069  2844  0087               	movwf	7
 11070  2845  0825               	movf	??_EEPROM_Read^(0+128),w
 11071  2846  0081               	movwf	1
 11072  2847  3001               	movlw	1
 11073  2848  00A5               	movwf	??_EEPROM_Read^(0+128)
 11074  2849  0825               	movf	??_EEPROM_Read^(0+128),w
 11075  284A  07A6               	addwf	EEPROM_Read@dest^(0+128),f
 11076                           
 11077                           ;eeprom.c: 40: count--;
 11078  284B  3001               	movlw	1
 11079  284C  02A4               	subwf	EEPROM_Read@count^(0+128),f
 11080  284D  2838               	goto	l7145
 11081  284E                     l1001:	
 11082                           
 11083                           ;eeprom.c: 41: }
 11084                           ;eeprom.c: 42: LATEbits.LATE2 = 1;
 11085  284E  0022               	movlb	2	; select bank2
 11086  284F  1510               	bsf	16,2	;volatile
 11087  2850  0008               	return
 11088  2851                     __end_of_EEPROM_Read:	
 11089                           
 11090                           	psect	text28
 11091  195B                     __ptext28:	
 11092 ;; *************** function _MiApp_EstablishConnection *****************
 11093 ;; Defined at:
 11094 ;;		line 2272 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  ActiveScanIn    1    wreg     unsigned char 
 11097 ;;  Mode            1   37[BANK2 ] unsigned char 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  ActiveScanIn    1    0[COMMON] unsigned char 
 11100 ;;  i               1   57[BANK2 ] unsigned char 
 11101 ;;  t2              4   53[BANK2 ] struct _MIWI_TICK
 11102 ;;  t1              4   48[BANK2 ] struct _MIWI_TICK
 11103 ;;  connectionIn    1   52[BANK2 ] unsigned char 
 11104 ;;  retry           1   47[BANK2 ] unsigned char 
 11105 ;;  tmpConnectio    1   46[BANK2 ] unsigned char 
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  1    wreg      unsigned char 
 11108 ;; Registers used:
 11109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11115 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;Total ram usage:       21 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:   16
 11122 ;; This function calls:
 11123 ;;		_MiApp_DiscardMessage
 11124 ;;		_MiApp_MessageAvailable
 11125 ;;		_MiWi_TickGet
 11126 ;;		_SendPacket
 11127 ;; This function is called by:
 11128 ;;		_run_star_demo
 11129 ;;		_Initialize_Demo
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           
 11134                           ;psect for function _MiApp_EstablishConnection
 11135  195B                     _MiApp_EstablishConnection:	
 11136                           
 11137                           ;miwi_p2p.c: 2274: uint8_t tmpConnectionMode = ConnMode;
 11138                           
 11139                           ;incstack = 0
 11140 ;; hardware stack exceeded
 11141                           ; Regs used in _MiApp_EstablishConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11142  195B  0020               	movlb	0	; select bank0
 11143  195C  086F               	movf	_ConnMode,w
 11144  195D  0022               	movlb	2	; select bank2
 11145  195E  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11146  195F  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11147  1960  00CE               	movwf	MiApp_EstablishConnection@tmpConnectionMode^(0+256)
 11148                           
 11149                           ;miwi_p2p.c: 2275: uint8_t retry = 3;
 11150  1961  3003               	movlw	3
 11151  1962  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11152  1963  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11153  1964  00CF               	movwf	MiApp_EstablishConnection@retry^(0+256)
 11154                           
 11155                           ;miwi_p2p.c: 2276: uint8_t connectionInterval = 0;
 11156  1965  01D4               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 11157                           
 11158                           ;miwi_p2p.c: 2277: MIWI_TICK t1, t2;
 11159                           ;miwi_p2p.c: 2278: tick1 = MiWi_TickGet();
 11160  1966  31AB  23D9  3199   	fcall	_MiWi_TickGet
 11161  1969  0021               	movlb	1	; select bank1
 11162  196A  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11163  196B  0023               	movlb	3	; select bank3
 11164  196C  00C5               	movwf	(_tick1+3)^(0+384)
 11165  196D  0021               	movlb	1	; select bank1
 11166  196E  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11167  196F  0023               	movlb	3	; select bank3
 11168  1970  00C4               	movwf	(_tick1+2)^(0+384)
 11169  1971  0021               	movlb	1	; select bank1
 11170  1972  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11171  1973  0023               	movlb	3	; select bank3
 11172  1974  00C3               	movwf	(_tick1+1)^(0+384)
 11173  1975  0021               	movlb	1	; select bank1
 11174  1976  0820               	movf	?_MiWi_TickGet^(0+128),w
 11175  1977  0023               	movlb	3	; select bank3
 11176  1978  00C2               	movwf	_tick1^(0+384)
 11177                           
 11178                           ;miwi_p2p.c: 2279: if( Mode == 0x01 )
 11179  1979  0022               	movlb	2	; select bank2
 11180  197A  0345               	decf	MiApp_EstablishConnection@Mode^(0+256),w
 11181  197B  1D03               	btfss	3,2
 11182  197C  297F               	goto	l7211
 11183                           
 11184                           ;miwi_p2p.c: 2280: {
 11185                           ;miwi_p2p.c: 2281: return 0xFF;
 11186  197D  30FF               	movlw	255
 11187  197E  0008               	return
 11188  197F                     l7211:	
 11189                           
 11190                           ;miwi_p2p.c: 2282: }
 11191                           ;miwi_p2p.c: 2284: t1 = MiWi_TickGet();
 11192  197F  31AB  23D9  3199   	fcall	_MiWi_TickGet
 11193  1982  0021               	movlb	1	; select bank1
 11194  1983  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11195  1984  0022               	movlb	2	; select bank2
 11196  1985  00D3               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 11197  1986  0021               	movlb	1	; select bank1
 11198  1987  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11199  1988  0022               	movlb	2	; select bank2
 11200  1989  00D2               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 11201  198A  0021               	movlb	1	; select bank1
 11202  198B  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11203  198C  0022               	movlb	2	; select bank2
 11204  198D  00D1               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 11205  198E  0021               	movlb	1	; select bank1
 11206  198F  0820               	movf	?_MiWi_TickGet^(0+128),w
 11207  1990  0022               	movlb	2	; select bank2
 11208  1991  00D0               	movwf	MiApp_EstablishConnection@t1^(0+256)
 11209                           
 11210                           ;miwi_p2p.c: 2286: t1.Val -= (((uint32_t)(10000000)/32));
 11211  1992  30B4               	movlw	180
 11212  1993  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11213  1994  30C4               	movlw	196
 11214  1995  00C7               	movwf	(??_MiApp_EstablishConnection^(0+256)+1)
 11215  1996  3004               	movlw	4
 11216  1997  00C8               	movwf	(??_MiApp_EstablishConnection^(0+256)+2)
 11217  1998  3000               	movlw	0
 11218  1999  00C9               	movwf	(??_MiApp_EstablishConnection^(0+256)+3)
 11219  199A  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11220  199B  02D0               	subwf	MiApp_EstablishConnection@t1^(0+256),f
 11221  199C  0847               	movf	(??_MiApp_EstablishConnection+1)^(0+256),w
 11222  199D  3BD1               	subwfb	(MiApp_EstablishConnection@t1+1)^(0+256),f
 11223  199E  0848               	movf	(??_MiApp_EstablishConnection+2)^(0+256),w
 11224  199F  3BD2               	subwfb	(MiApp_EstablishConnection@t1+2)^(0+256),f
 11225  19A0  0849               	movf	(??_MiApp_EstablishConnection+3)^(0+256),w
 11226  19A1  3BD3               	subwfb	(MiApp_EstablishConnection@t1+3)^(0+256),f
 11227                           
 11228                           ;miwi_p2p.c: 2287: ConnMode = 0x00;
 11229  19A2  0020               	movlb	0	; select bank0
 11230  19A3  01EF               	clrf	_ConnMode
 11231                           
 11232                           ;miwi_p2p.c: 2288: P2PStatus.bits.SearchConnection = 1;
 11233  19A4  167D               	bsf	_P2PStatus,4	;volatile
 11234  19A5                     l7269:	
 11235                           ;miwi_p2p.c: 2289: while( P2PStatus.bits.SearchConnection )
 11236                           
 11237  19A5  1E7D               	btfss	_P2PStatus,4	;volatile
 11238  19A6  2A59               	goto	l7271
 11239                           
 11240                           ;miwi_p2p.c: 2290: {
 11241                           ;miwi_p2p.c: 2291: t2 = MiWi_TickGet();
 11242  19A7  31AB  23D9  3199   	fcall	_MiWi_TickGet
 11243  19AA  0021               	movlb	1	; select bank1
 11244  19AB  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11245  19AC  0022               	movlb	2	; select bank2
 11246  19AD  00D8               	movwf	(MiApp_EstablishConnection@t2+3)^(0+256)
 11247  19AE  0021               	movlb	1	; select bank1
 11248  19AF  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11249  19B0  0022               	movlb	2	; select bank2
 11250  19B1  00D7               	movwf	(MiApp_EstablishConnection@t2+2)^(0+256)
 11251  19B2  0021               	movlb	1	; select bank1
 11252  19B3  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11253  19B4  0022               	movlb	2	; select bank2
 11254  19B5  00D6               	movwf	(MiApp_EstablishConnection@t2+1)^(0+256)
 11255  19B6  0021               	movlb	1	; select bank1
 11256  19B7  0820               	movf	?_MiWi_TickGet^(0+128),w
 11257  19B8  0022               	movlb	2	; select bank2
 11258  19B9  00D5               	movwf	MiApp_EstablishConnection@t2^(0+256)
 11259                           
 11260                           ;miwi_p2p.c: 2292: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
 11261  19BA  0855               	movf	MiApp_EstablishConnection@t2^(0+256),w
 11262  19BB  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11263  19BC  0856               	movf	(MiApp_EstablishConnection@t2+1)^(0+256),w
 11264  19BD  00C7               	movwf	(??_MiApp_EstablishConnection^(0+256)+1)
 11265  19BE  0857               	movf	(MiApp_EstablishConnection@t2+2)^(0+256),w
 11266  19BF  00C8               	movwf	(??_MiApp_EstablishConnection^(0+256)+2)
 11267  19C0  0858               	movf	(MiApp_EstablishConnection@t2+3)^(0+256),w
 11268  19C1  00C9               	movwf	(??_MiApp_EstablishConnection^(0+256)+3)
 11269  19C2  0950               	comf	MiApp_EstablishConnection@t1^(0+256),w
 11270  19C3  00CA               	movwf	(??_MiApp_EstablishConnection+4)^(0+256)
 11271  19C4  0951               	comf	(MiApp_EstablishConnection@t1+1)^(0+256),w
 11272  19C5  00CB               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+1)
 11273  19C6  0952               	comf	(MiApp_EstablishConnection@t1+2)^(0+256),w
 11274  19C7  00CC               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+2)
 11275  19C8  0953               	comf	(MiApp_EstablishConnection@t1+3)^(0+256),w
 11276  19C9  00CD               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+3)
 11277  19CA  0ACA               	incf	(??_MiApp_EstablishConnection+4)^(0+256),f
 11278  19CB  1903               	skipnz
 11279  19CC  0ACB               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+1),f
 11280  19CD  1903               	skipnz
 11281  19CE  0ACC               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+2),f
 11282  19CF  1903               	skipnz
 11283  19D0  0ACD               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+3),f
 11284  19D1  084A               	movf	(??_MiApp_EstablishConnection+4)^(0+256),w
 11285  19D2  07C6               	addwf	??_MiApp_EstablishConnection^(0+256),f
 11286  19D3  084B               	movf	(??_MiApp_EstablishConnection+5)^(0+256),w
 11287  19D4  3DC7               	addwfc	(??_MiApp_EstablishConnection^(0+256)+1),f
 11288  19D5  084C               	movf	(??_MiApp_EstablishConnection+6)^(0+256),w
 11289  19D6  3DC8               	addwfc	(??_MiApp_EstablishConnection^(0+256)+2),f
 11290  19D7  084D               	movf	(??_MiApp_EstablishConnection+7)^(0+256),w
 11291  19D8  3DC9               	addwfc	(??_MiApp_EstablishConnection^(0+256)+3),f
 11292  19D9  0849               	movf	(??_MiApp_EstablishConnection^(0+256)+3),w
 11293  19DA  1D03               	btfss	3,2
 11294  19DB  29E4               	goto	l7223
 11295  19DC  30B5               	movlw	181
 11296  19DD  0246               	subwf	??_MiApp_EstablishConnection^(0+256),w
 11297  19DE  30C4               	movlw	196
 11298  19DF  3B47               	subwfb	(??_MiApp_EstablishConnection^(0+256)+1),w
 11299  19E0  3004               	movlw	4
 11300  19E1  3B48               	subwfb	(??_MiApp_EstablishConnection^(0+256)+2),w
 11301  19E2  1C03               	btfss	3,0
 11302  19E3  2A4F               	goto	l617
 11303  19E4                     l7223:	
 11304                           
 11305                           ;miwi_p2p.c: 2293: {
 11306                           ;miwi_p2p.c: 2294: t1.Val = t2.Val;
 11307  19E4  0858               	movf	(MiApp_EstablishConnection@t2+3)^(0+256),w
 11308  19E5  00D3               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 11309  19E6  0857               	movf	(MiApp_EstablishConnection@t2+2)^(0+256),w
 11310  19E7  00D2               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 11311  19E8  0856               	movf	(MiApp_EstablishConnection@t2+1)^(0+256),w
 11312  19E9  00D1               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 11313  19EA  0855               	movf	MiApp_EstablishConnection@t2^(0+256),w
 11314  19EB  00D0               	movwf	MiApp_EstablishConnection@t1^(0+256)
 11315                           
 11316                           ;miwi_p2p.c: 2296: if( connectionInterval-- > 0 )
 11317  19EC  3001               	movlw	1
 11318  19ED  02D4               	subwf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 11319  19EE  0A54               	incf	MiApp_EstablishConnection@connectionInterval^(0+256),w
 11320  19EF  1D03               	btfss	3,2
 11321  19F0  29A5               	goto	l7269
 11322                           
 11323                           ;miwi_p2p.c: 2299: }
 11324                           ;miwi_p2p.c: 2300: connectionInterval = 2-1;
 11325                           
 11326                           ;miwi_p2p.c: 2297: {
 11327                           ;miwi_p2p.c: 2298: continue;
 11328  19F1  01D4               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 11329  19F2  0AD4               	incf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 11330                           
 11331                           ;miwi_p2p.c: 2301: if( retry-- == 0 )
 11332  19F3  3001               	movlw	1
 11333  19F4  02CF               	subwf	MiApp_EstablishConnection@retry^(0+256),f
 11334  19F5  0A4F               	incf	MiApp_EstablishConnection@retry^(0+256),w
 11335  19F6  1D03               	btfss	3,2
 11336  19F7  29FB               	goto	l7237
 11337                           
 11338                           ;miwi_p2p.c: 2302: {
 11339                           ;miwi_p2p.c: 2304: P2PStatus.bits.SearchConnection = 0;
 11340  19F8  127D               	bcf	_P2PStatus,4	;volatile
 11341                           
 11342                           ;miwi_p2p.c: 2305: return 0xFF;
 11343  19F9  30FF               	movlw	255
 11344  19FA  0008               	return
 11345  19FB                     l7237:	
 11346                           
 11347                           ;miwi_p2p.c: 2306: }
 11348                           ;miwi_p2p.c: 2307: {TxData = 0;};
 11349  19FB  01EE               	clrf	_TxData^(0+256)
 11350                           
 11351                           ;miwi_p2p.c: 2308: TxBuffer[TxData++] = 0x81;
 11352  19FC  3081               	movlw	129
 11353  19FD  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11354  19FE  086E               	movf	_TxData^(0+256),w
 11355  19FF  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11356  1A00  0086               	movwf	6
 11357  1A01  3002               	movlw	2	; select bank4/5
 11358  1A02  0087               	movwf	7
 11359  1A03  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11360  1A04  0081               	movwf	1
 11361  1A05  3001               	movlw	1
 11362  1A06  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11363  1A07  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11364  1A08  07EE               	addwf	_TxData^(0+256),f
 11365                           
 11366                           ;miwi_p2p.c: 2309: TxBuffer[TxData++] = currentChannel;
 11367  1A09  0020               	movlb	0	; select bank0
 11368  1A0A  086B               	movf	_currentChannel,w
 11369  1A0B  0022               	movlb	2	; select bank2
 11370  1A0C  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11371  1A0D  086E               	movf	_TxData^(0+256),w
 11372  1A0E  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11373  1A0F  0086               	movwf	6
 11374  1A10  3002               	movlw	2	; select bank4/5
 11375  1A11  0087               	movwf	7
 11376  1A12  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11377  1A13  0081               	movwf	1
 11378  1A14  3001               	movlw	1
 11379  1A15  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11380  1A16  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11381  1A17  07EE               	addwf	_TxData^(0+256),f
 11382                           
 11383                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = P2PCapacityInfo;
 11384  1A18  0020               	movlb	0	; select bank0
 11385  1A19  085C               	movf	_P2PCapacityInfo,w
 11386  1A1A  0022               	movlb	2	; select bank2
 11387  1A1B  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11388  1A1C  086E               	movf	_TxData^(0+256),w
 11389  1A1D  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11390  1A1E  0086               	movwf	6
 11391  1A1F  3002               	movlw	2	; select bank4/5
 11392  1A20  0087               	movwf	7
 11393  1A21  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11394  1A22  0081               	movwf	1
 11395  1A23  3001               	movlw	1
 11396  1A24  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11397  1A25  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11398  1A26  07EE               	addwf	_TxData^(0+256),f
 11399                           
 11400                           ;miwi_p2p.c: 2317: {
 11401                           ;miwi_p2p.c: 2318: uint8_t i;
 11402                           ;miwi_p2p.c: 2320: for(i = 0; i < 1; i++)
 11403  1A27  01D9               	clrf	MiApp_EstablishConnection@i^(0+256)
 11404  1A28  0859               	movf	MiApp_EstablishConnection@i^(0+256),w
 11405  1A29  1D03               	btfss	3,2
 11406  1A2A  2A43               	goto	l7265
 11407  1A2B                     l7257:	
 11408                           
 11409                           ;miwi_p2p.c: 2321: {
 11410                           ;miwi_p2p.c: 2322: TxBuffer[TxData++] = AdditionalNodeID[i];
 11411  1A2B  0859               	movf	MiApp_EstablishConnection@i^(0+256),w
 11412  1A2C  3E6D               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 11413  1A2D  0086               	movwf	6
 11414  1A2E  0187               	clrf	7
 11415  1A2F  0801               	movf	1,w
 11416  1A30  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11417  1A31  086E               	movf	_TxData^(0+256),w
 11418  1A32  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11419  1A33  0086               	movwf	6
 11420  1A34  3002               	movlw	2	; select bank4/5
 11421  1A35  0087               	movwf	7
 11422  1A36  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11423  1A37  0081               	movwf	1
 11424  1A38  3001               	movlw	1
 11425  1A39  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11426  1A3A  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11427  1A3B  07EE               	addwf	_TxData^(0+256),f
 11428  1A3C  3001               	movlw	1
 11429  1A3D  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11430  1A3E  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11431  1A3F  07D9               	addwf	MiApp_EstablishConnection@i^(0+256),f
 11432  1A40  0859               	movf	MiApp_EstablishConnection@i^(0+256),w
 11433  1A41  1903               	btfsc	3,2
 11434  1A42  2A2B               	goto	l7257
 11435  1A43                     l7265:	
 11436                           
 11437                           ;miwi_p2p.c: 2323: }
 11438                           ;miwi_p2p.c: 2324: }
 11439                           ;miwi_p2p.c: 2353: SendPacket(1, (0), 1, 0);
 11440  1A43  3000               	movlw	0
 11441  1A44  0021               	movlb	1	; select bank1
 11442  1A45  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 11443  1A46  3000               	movlw	0
 11444  1A47  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 11445  1A48  01D8               	clrf	SendPacket@isCommand^(0+128)
 11446  1A49  0AD8               	incf	SendPacket@isCommand^(0+128),f
 11447  1A4A  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 11448  1A4B  3001               	movlw	1
 11449  1A4C  31AB  2390  3199   	fcall	_SendPacket
 11450  1A4F                     l617:	
 11451                           
 11452                           ;miwi_p2p.c: 2356: }
 11453                           ;miwi_p2p.c: 2358: if( MiApp_MessageAvailable())
 11454  1A4F  31B5  2512  3199   	fcall	_MiApp_MessageAvailable
 11455  1A52  3A00               	xorlw	0
 11456  1A53  1903               	skipnz
 11457  1A54  29A5               	goto	l7269
 11458                           
 11459                           ;miwi_p2p.c: 2359: {
 11460                           ;miwi_p2p.c: 2360: MiApp_DiscardMessage();
 11461  1A55  31B4  24FA  3199   	fcall	_MiApp_DiscardMessage
 11462  1A58  29A5               	goto	l7269
 11463  1A59                     l7271:	
 11464                           
 11465                           ;miwi_p2p.c: 2361: }
 11466                           ;miwi_p2p.c: 2363: }
 11467                           ;miwi_p2p.c: 2365: ConnMode = tmpConnectionMode;
 11468  1A59  0022               	movlb	2	; select bank2
 11469  1A5A  084E               	movf	MiApp_EstablishConnection@tmpConnectionMode^(0+256),w
 11470  1A5B  00C6               	movwf	??_MiApp_EstablishConnection^(0+256)
 11471  1A5C  0846               	movf	??_MiApp_EstablishConnection^(0+256),w
 11472  1A5D  0020               	movlb	0	; select bank0
 11473  1A5E  00EF               	movwf	_ConnMode
 11474                           
 11475                           ;miwi_p2p.c: 2370: return LatestConnection;
 11476  1A5F  085B               	movf	_LatestConnection,w
 11477  1A60  0008               	return
 11478  1A61                     __end_of_MiApp_EstablishConnection:	
 11479                           
 11480                           	psect	text29
 11481  3512                     __ptext29:	
 11482 ;; *************** function _MiApp_MessageAvailable *****************
 11483 ;; Defined at:
 11484 ;;		line 2402 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;		None
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      unsigned char 
 11491 ;; Registers used:
 11492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;Total ram usage:        1 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:   15
 11505 ;; This function calls:
 11506 ;;		_P2PTasks
 11507 ;; This function is called by:
 11508 ;;		_MiApp_UnicastStar
 11509 ;;		_MiApp_EstablishConnection
 11510 ;;		_Process_RxMessage
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _MiApp_MessageAvailable
 11516  3512                     _MiApp_MessageAvailable:	
 11517                           
 11518                           ;miwi_p2p.c: 2404: P2PTasks();
 11519                           
 11520                           ;incstack = 0
 11521 ;; hardware stack exceeded
 11522                           ; Regs used in _MiApp_MessageAvailable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11523  3512  3188  20F3         	fcall	_P2PTasks
 11524                           
 11525                           ;miwi_p2p.c: 2406: return P2PStatus.bits.RxHasUserData;
 11526  3514  0C7D               	rrf	_P2PStatus,w	;volatile
 11527  3515  0022               	movlb	2	; select bank2
 11528  3516  00C4               	movwf	??_MiApp_MessageAvailable^(0+256)
 11529  3517  0CC4               	rrf	??_MiApp_MessageAvailable^(0+256),f
 11530  3518  0C44               	rrf	??_MiApp_MessageAvailable^(0+256),w
 11531  3519  3901               	andlw	1
 11532  351A  0008               	return
 11533  351B                     __end_of_MiApp_MessageAvailable:	
 11534                           
 11535                           	psect	text30
 11536  08F3                     __ptext30:	
 11537 ;; *************** function _P2PTasks *****************
 11538 ;; Defined at:
 11539 ;;		line 346 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;		None
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  p               1   33[BANK2 ] unsigned char 
 11544 ;;  final_index     1   27[BANK2 ] unsigned char 
 11545 ;;  status          1   34[BANK2 ] unsigned char 
 11546 ;;  p               1   32[BANK2 ] unsigned char 
 11547 ;;  FW_Stat         1   22[BANK2 ] unsigned char 
 11548 ;;  tick3           4   28[BANK2 ] struct _MIWI_TICK
 11549 ;;  tick2           4   23[BANK2 ] struct _MIWI_TICK
 11550 ;;  tmpTick         4   18[BANK2 ] struct _MIWI_TICK
 11551 ;;  i               1   35[BANK2 ] unsigned char 
 11552 ;;  broadcast_st    1    0        unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:       26 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:   14
 11569 ;; This function calls:
 11570 ;;		_AddConnection
 11571 ;;		_Find_InActiveDevices
 11572 ;;		_Find_Index
 11573 ;;		_Forward_Packet_PANCr_to_EDy
 11574 ;;		_MiApp_BroadcastConnectionTable
 11575 ;;		_MiMAC_DiscardPacket
 11576 ;;		_MiMAC_ReceivedPacket
 11577 ;;		_MiWi_TickGet
 11578 ;;		_NVMWrite
 11579 ;;		_SW_Ack_SrED
 11580 ;;		_SendPacket
 11581 ;;		___wmul
 11582 ;;		_isSameAddress
 11583 ;;		_send_link_status
 11584 ;;		_store_connection_tb
 11585 ;; This function is called by:
 11586 ;;		_MiApp_MessageAvailable
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _P2PTasks
 11592  08F3                     _P2PTasks:	
 11593                           
 11594                           ;miwi_p2p.c: 348: uint8_t i;
 11595                           ;miwi_p2p.c: 349: MIWI_TICK tmpTick ,tick2 , tick3 ;
 11596                           ;miwi_p2p.c: 350: bool broadcast_status;
 11597                           ;miwi_p2p.c: 353: tick2 = MiWi_TickGet();
 11598                           
 11599                           ;incstack = 0
 11600 ;; hardware stack exceeded
 11601                           ; Regs used in _P2PTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11602  08F3  31AB  23D9  3188   	fcall	_MiWi_TickGet
 11603  08F6  0021               	movlb	1	; select bank1
 11604  08F7  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11605  08F8  0022               	movlb	2	; select bank2
 11606  08F9  00BA               	movwf	(P2PTasks@tick2+3)^(0+256)
 11607  08FA  0021               	movlb	1	; select bank1
 11608  08FB  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11609  08FC  0022               	movlb	2	; select bank2
 11610  08FD  00B9               	movwf	(P2PTasks@tick2+2)^(0+256)
 11611  08FE  0021               	movlb	1	; select bank1
 11612  08FF  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11613  0900  0022               	movlb	2	; select bank2
 11614  0901  00B8               	movwf	(P2PTasks@tick2+1)^(0+256)
 11615  0902  0021               	movlb	1	; select bank1
 11616  0903  0820               	movf	?_MiWi_TickGet^(0+128),w
 11617  0904  0022               	movlb	2	; select bank2
 11618  0905  00B7               	movwf	P2PTasks@tick2^(0+256)
 11619                           
 11620                           ;miwi_p2p.c: 354: tick3 = MiWi_TickGet();
 11621  0906  31AB  23D9  3188   	fcall	_MiWi_TickGet
 11622  0909  0021               	movlb	1	; select bank1
 11623  090A  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11624  090B  0022               	movlb	2	; select bank2
 11625  090C  00BF               	movwf	(P2PTasks@tick3+3)^(0+256)
 11626  090D  0021               	movlb	1	; select bank1
 11627  090E  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11628  090F  0022               	movlb	2	; select bank2
 11629  0910  00BE               	movwf	(P2PTasks@tick3+2)^(0+256)
 11630  0911  0021               	movlb	1	; select bank1
 11631  0912  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11632  0913  0022               	movlb	2	; select bank2
 11633  0914  00BD               	movwf	(P2PTasks@tick3+1)^(0+256)
 11634  0915  0021               	movlb	1	; select bank1
 11635  0916  0820               	movf	?_MiWi_TickGet^(0+128),w
 11636  0917  0022               	movlb	2	; select bank2
 11637  0918  00BC               	movwf	P2PTasks@tick3^(0+256)
 11638                           
 11639                           ;miwi_p2p.c: 356: if (role)
 11640  0919  086F               	movf	_role^(0+256),w
 11641  091A  1903               	btfsc	3,2
 11642  091B  2961               	goto	l6637
 11643                           
 11644                           ;miwi_p2p.c: 357: {
 11645                           ;miwi_p2p.c: 358: if( (tick3.Val - tick4.Val) > ((((uint32_t)(10000000)/32)*60)*10))
 11646  091C  083C               	movf	P2PTasks@tick3^(0+256),w
 11647  091D  00AA               	movwf	??_P2PTasks^(0+256)
 11648  091E  083D               	movf	(P2PTasks@tick3+1)^(0+256),w
 11649  091F  00AB               	movwf	(??_P2PTasks^(0+256)+1)
 11650  0920  083E               	movf	(P2PTasks@tick3+2)^(0+256),w
 11651  0921  00AC               	movwf	(??_P2PTasks^(0+256)+2)
 11652  0922  083F               	movf	(P2PTasks@tick3+3)^(0+256),w
 11653  0923  00AD               	movwf	(??_P2PTasks^(0+256)+3)
 11654  0924  0023               	movlb	3	; select bank3
 11655  0925  0946               	comf	_tick4^(0+384),w
 11656  0926  0022               	movlb	2	; select bank2
 11657  0927  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 11658  0928  0023               	movlb	3	; select bank3
 11659  0929  0947               	comf	(_tick4+1)^(0+384),w
 11660  092A  0022               	movlb	2	; select bank2
 11661  092B  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 11662  092C  0023               	movlb	3	; select bank3
 11663  092D  0948               	comf	(_tick4+2)^(0+384),w
 11664  092E  0022               	movlb	2	; select bank2
 11665  092F  00B0               	movwf	((??_P2PTasks+4)^(0+256)+2)
 11666  0930  0023               	movlb	3	; select bank3
 11667  0931  0949               	comf	(_tick4+3)^(0+384),w
 11668  0932  0022               	movlb	2	; select bank2
 11669  0933  00B1               	movwf	((??_P2PTasks+4)^(0+256)+3)
 11670  0934  0AAE               	incf	(??_P2PTasks+4)^(0+256),f
 11671  0935  1903               	skipnz
 11672  0936  0AAF               	incf	((??_P2PTasks+4)^(0+256)+1),f
 11673  0937  1903               	skipnz
 11674  0938  0AB0               	incf	((??_P2PTasks+4)^(0+256)+2),f
 11675  0939  1903               	skipnz
 11676  093A  0AB1               	incf	((??_P2PTasks+4)^(0+256)+3),f
 11677  093B  082E               	movf	(??_P2PTasks+4)^(0+256),w
 11678  093C  07AA               	addwf	??_P2PTasks^(0+256),f
 11679  093D  082F               	movf	(??_P2PTasks+5)^(0+256),w
 11680  093E  3DAB               	addwfc	(??_P2PTasks^(0+256)+1),f
 11681  093F  0830               	movf	(??_P2PTasks+6)^(0+256),w
 11682  0940  3DAC               	addwfc	(??_P2PTasks^(0+256)+2),f
 11683  0941  0831               	movf	(??_P2PTasks+7)^(0+256),w
 11684  0942  3DAD               	addwfc	(??_P2PTasks^(0+256)+3),f
 11685  0943  30E1               	movlw	225
 11686  0944  022A               	subwf	??_P2PTasks^(0+256),w
 11687  0945  3005               	movlw	5
 11688  0946  3B2B               	subwfb	(??_P2PTasks^(0+256)+1),w
 11689  0947  302D               	movlw	45
 11690  0948  3B2C               	subwfb	(??_P2PTasks^(0+256)+2),w
 11691  0949  300B               	movlw	11
 11692  094A  3B2D               	subwfb	(??_P2PTasks^(0+256)+3),w
 11693  094B  1C03               	btfss	3,0
 11694  094C  29A7               	goto	l6643
 11695                           
 11696                           ;miwi_p2p.c: 359: {
 11697                           ;miwi_p2p.c: 360: Find_InActiveDevices ();
 11698  094D  31AD  25A7  3188   	fcall	_Find_InActiveDevices
 11699                           
 11700                           ;miwi_p2p.c: 361: tick4 = tick3;
 11701  0950  0022               	movlb	2	; select bank2
 11702  0951  083F               	movf	(P2PTasks@tick3+3)^(0+256),w
 11703  0952  0023               	movlb	3	; select bank3
 11704  0953  00C9               	movwf	(_tick4+3)^(0+384)
 11705  0954  0022               	movlb	2	; select bank2
 11706  0955  083E               	movf	(P2PTasks@tick3+2)^(0+256),w
 11707  0956  0023               	movlb	3	; select bank3
 11708  0957  00C8               	movwf	(_tick4+2)^(0+384)
 11709  0958  0022               	movlb	2	; select bank2
 11710  0959  083D               	movf	(P2PTasks@tick3+1)^(0+256),w
 11711  095A  0023               	movlb	3	; select bank3
 11712  095B  00C7               	movwf	(_tick4+1)^(0+384)
 11713  095C  0022               	movlb	2	; select bank2
 11714  095D  083C               	movf	P2PTasks@tick3^(0+256),w
 11715  095E  0023               	movlb	3	; select bank3
 11716  095F  00C6               	movwf	_tick4^(0+384)
 11717                           
 11718                           ;miwi_p2p.c: 362: }
 11719                           ;miwi_p2p.c: 364: }
 11720  0960  29A7               	goto	l6643
 11721  0961                     l6637:	
 11722                           
 11723                           ;miwi_p2p.c: 365: else
 11724                           ;miwi_p2p.c: 366: {
 11725                           ;miwi_p2p.c: 367: if( (tick3.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) )
 11726  0961  0022               	movlb	2	; select bank2
 11727  0962  083C               	movf	P2PTasks@tick3^(0+256),w
 11728  0963  00AA               	movwf	??_P2PTasks^(0+256)
 11729  0964  083D               	movf	(P2PTasks@tick3+1)^(0+256),w
 11730  0965  00AB               	movwf	(??_P2PTasks^(0+256)+1)
 11731  0966  083E               	movf	(P2PTasks@tick3+2)^(0+256),w
 11732  0967  00AC               	movwf	(??_P2PTasks^(0+256)+2)
 11733  0968  083F               	movf	(P2PTasks@tick3+3)^(0+256),w
 11734  0969  00AD               	movwf	(??_P2PTasks^(0+256)+3)
 11735  096A  0023               	movlb	3	; select bank3
 11736  096B  0942               	comf	_tick1^(0+384),w
 11737  096C  0022               	movlb	2	; select bank2
 11738  096D  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 11739  096E  0023               	movlb	3	; select bank3
 11740  096F  0943               	comf	(_tick1+1)^(0+384),w
 11741  0970  0022               	movlb	2	; select bank2
 11742  0971  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 11743  0972  0023               	movlb	3	; select bank3
 11744  0973  0944               	comf	(_tick1+2)^(0+384),w
 11745  0974  0022               	movlb	2	; select bank2
 11746  0975  00B0               	movwf	((??_P2PTasks+4)^(0+256)+2)
 11747  0976  0023               	movlb	3	; select bank3
 11748  0977  0945               	comf	(_tick1+3)^(0+384),w
 11749  0978  0022               	movlb	2	; select bank2
 11750  0979  00B1               	movwf	((??_P2PTasks+4)^(0+256)+3)
 11751  097A  0AAE               	incf	(??_P2PTasks+4)^(0+256),f
 11752  097B  1903               	skipnz
 11753  097C  0AAF               	incf	((??_P2PTasks+4)^(0+256)+1),f
 11754  097D  1903               	skipnz
 11755  097E  0AB0               	incf	((??_P2PTasks+4)^(0+256)+2),f
 11756  097F  1903               	skipnz
 11757  0980  0AB1               	incf	((??_P2PTasks+4)^(0+256)+3),f
 11758  0981  082E               	movf	(??_P2PTasks+4)^(0+256),w
 11759  0982  07AA               	addwf	??_P2PTasks^(0+256),f
 11760  0983  082F               	movf	(??_P2PTasks+5)^(0+256),w
 11761  0984  3DAB               	addwfc	(??_P2PTasks^(0+256)+1),f
 11762  0985  0830               	movf	(??_P2PTasks+6)^(0+256),w
 11763  0986  3DAC               	addwfc	(??_P2PTasks^(0+256)+2),f
 11764  0987  0831               	movf	(??_P2PTasks+7)^(0+256),w
 11765  0988  3DAD               	addwfc	(??_P2PTasks^(0+256)+3),f
 11766  0989  082D               	movf	(??_P2PTasks^(0+256)+3),w
 11767  098A  1D03               	btfss	3,2
 11768  098B  2994               	goto	l6639
 11769  098C  308D               	movlw	141
 11770  098D  022A               	subwf	??_P2PTasks^(0+256),w
 11771  098E  3086               	movlw	134
 11772  098F  3B2B               	subwfb	(??_P2PTasks^(0+256)+1),w
 11773  0990  3047               	movlw	71
 11774  0991  3B2C               	subwfb	(??_P2PTasks^(0+256)+2),w
 11775  0992  1C03               	btfss	3,0
 11776  0993  29A7               	goto	l6643
 11777  0994                     l6639:	
 11778                           
 11779                           ;miwi_p2p.c: 368: {
 11780                           ;miwi_p2p.c: 369: send_link_status ();
 11781  0994  31A8  20A0  3188   	fcall	_send_link_status
 11782                           
 11783                           ;miwi_p2p.c: 370: tick1 = tick3;
 11784  0997  0022               	movlb	2	; select bank2
 11785  0998  083F               	movf	(P2PTasks@tick3+3)^(0+256),w
 11786  0999  0023               	movlb	3	; select bank3
 11787  099A  00C5               	movwf	(_tick1+3)^(0+384)
 11788  099B  0022               	movlb	2	; select bank2
 11789  099C  083E               	movf	(P2PTasks@tick3+2)^(0+256),w
 11790  099D  0023               	movlb	3	; select bank3
 11791  099E  00C4               	movwf	(_tick1+2)^(0+384)
 11792  099F  0022               	movlb	2	; select bank2
 11793  09A0  083D               	movf	(P2PTasks@tick3+1)^(0+256),w
 11794  09A1  0023               	movlb	3	; select bank3
 11795  09A2  00C3               	movwf	(_tick1+1)^(0+384)
 11796  09A3  0022               	movlb	2	; select bank2
 11797  09A4  083C               	movf	P2PTasks@tick3^(0+256),w
 11798  09A5  0023               	movlb	3	; select bank3
 11799  09A6  00C2               	movwf	_tick1^(0+384)
 11800  09A7                     l6643:	
 11801                           
 11802                           ;miwi_p2p.c: 371: }
 11803                           ;miwi_p2p.c: 372: }
 11804                           ;miwi_p2p.c: 376: if( (tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32)*15) && role)
 11805  09A7  0022               	movlb	2	; select bank2
 11806  09A8  0837               	movf	P2PTasks@tick2^(0+256),w
 11807  09A9  00AA               	movwf	??_P2PTasks^(0+256)
 11808  09AA  0838               	movf	(P2PTasks@tick2+1)^(0+256),w
 11809  09AB  00AB               	movwf	(??_P2PTasks^(0+256)+1)
 11810  09AC  0839               	movf	(P2PTasks@tick2+2)^(0+256),w
 11811  09AD  00AC               	movwf	(??_P2PTasks^(0+256)+2)
 11812  09AE  083A               	movf	(P2PTasks@tick2+3)^(0+256),w
 11813  09AF  00AD               	movwf	(??_P2PTasks^(0+256)+3)
 11814  09B0  0023               	movlb	3	; select bank3
 11815  09B1  0942               	comf	_tick1^(0+384),w
 11816  09B2  0022               	movlb	2	; select bank2
 11817  09B3  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 11818  09B4  0023               	movlb	3	; select bank3
 11819  09B5  0943               	comf	(_tick1+1)^(0+384),w
 11820  09B6  0022               	movlb	2	; select bank2
 11821  09B7  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 11822  09B8  0023               	movlb	3	; select bank3
 11823  09B9  0944               	comf	(_tick1+2)^(0+384),w
 11824  09BA  0022               	movlb	2	; select bank2
 11825  09BB  00B0               	movwf	((??_P2PTasks+4)^(0+256)+2)
 11826  09BC  0023               	movlb	3	; select bank3
 11827  09BD  0945               	comf	(_tick1+3)^(0+384),w
 11828  09BE  0022               	movlb	2	; select bank2
 11829  09BF  00B1               	movwf	((??_P2PTasks+4)^(0+256)+3)
 11830  09C0  0AAE               	incf	(??_P2PTasks+4)^(0+256),f
 11831  09C1  1903               	skipnz
 11832  09C2  0AAF               	incf	((??_P2PTasks+4)^(0+256)+1),f
 11833  09C3  1903               	skipnz
 11834  09C4  0AB0               	incf	((??_P2PTasks+4)^(0+256)+2),f
 11835  09C5  1903               	skipnz
 11836  09C6  0AB1               	incf	((??_P2PTasks+4)^(0+256)+3),f
 11837  09C7  082E               	movf	(??_P2PTasks+4)^(0+256),w
 11838  09C8  07AA               	addwf	??_P2PTasks^(0+256),f
 11839  09C9  082F               	movf	(??_P2PTasks+5)^(0+256),w
 11840  09CA  3DAB               	addwfc	(??_P2PTasks^(0+256)+1),f
 11841  09CB  0830               	movf	(??_P2PTasks+6)^(0+256),w
 11842  09CC  3DAC               	addwfc	(??_P2PTasks^(0+256)+2),f
 11843  09CD  0831               	movf	(??_P2PTasks+7)^(0+256),w
 11844  09CE  3DAD               	addwfc	(??_P2PTasks^(0+256)+3),f
 11845  09CF  082D               	movf	(??_P2PTasks^(0+256)+3),w
 11846  09D0  1D03               	btfss	3,2
 11847  09D1  29DA               	goto	l6645
 11848  09D2  308D               	movlw	141
 11849  09D3  022A               	subwf	??_P2PTasks^(0+256),w
 11850  09D4  3086               	movlw	134
 11851  09D5  3B2B               	subwfb	(??_P2PTasks^(0+256)+1),w
 11852  09D6  3047               	movlw	71
 11853  09D7  3B2C               	subwfb	(??_P2PTasks^(0+256)+2),w
 11854  09D8  1C03               	btfss	3,0
 11855  09D9  29F0               	goto	l6651
 11856  09DA                     l6645:	
 11857  09DA  086F               	movf	_role^(0+256),w
 11858  09DB  1903               	btfsc	3,2
 11859  09DC  29F0               	goto	l6651
 11860                           
 11861                           ;miwi_p2p.c: 377: {
 11862                           ;miwi_p2p.c: 378: MiApp_BroadcastConnectionTable ();
 11863  09DD  3184  240F  3188   	fcall	_MiApp_BroadcastConnectionTable
 11864                           
 11865                           ;miwi_p2p.c: 379: tick1 = tick2;
 11866  09E0  0022               	movlb	2	; select bank2
 11867  09E1  083A               	movf	(P2PTasks@tick2+3)^(0+256),w
 11868  09E2  0023               	movlb	3	; select bank3
 11869  09E3  00C5               	movwf	(_tick1+3)^(0+384)
 11870  09E4  0022               	movlb	2	; select bank2
 11871  09E5  0839               	movf	(P2PTasks@tick2+2)^(0+256),w
 11872  09E6  0023               	movlb	3	; select bank3
 11873  09E7  00C4               	movwf	(_tick1+2)^(0+384)
 11874  09E8  0022               	movlb	2	; select bank2
 11875  09E9  0838               	movf	(P2PTasks@tick2+1)^(0+256),w
 11876  09EA  0023               	movlb	3	; select bank3
 11877  09EB  00C3               	movwf	(_tick1+1)^(0+384)
 11878  09EC  0022               	movlb	2	; select bank2
 11879  09ED  0837               	movf	P2PTasks@tick2^(0+256),w
 11880  09EE  0023               	movlb	3	; select bank3
 11881  09EF  00C2               	movwf	_tick1^(0+384)
 11882  09F0                     l6651:	
 11883                           
 11884                           ;miwi_p2p.c: 380: }
 11885                           ;miwi_p2p.c: 423: if( P2PStatus.bits.SaveConnection )
 11886  09F0  1CFD               	btfss	_P2PStatus,1	;volatile
 11887  09F1  2A4C               	goto	l6661
 11888                           
 11889                           ;miwi_p2p.c: 424: {
 11890                           ;miwi_p2p.c: 425: tmpTick = MiWi_TickGet();
 11891  09F2  31AB  23D9  3188   	fcall	_MiWi_TickGet
 11892  09F5  0021               	movlb	1	; select bank1
 11893  09F6  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11894  09F7  0022               	movlb	2	; select bank2
 11895  09F8  00B5               	movwf	(P2PTasks@tmpTick+3)^(0+256)
 11896  09F9  0021               	movlb	1	; select bank1
 11897  09FA  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11898  09FB  0022               	movlb	2	; select bank2
 11899  09FC  00B4               	movwf	(P2PTasks@tmpTick+2)^(0+256)
 11900  09FD  0021               	movlb	1	; select bank1
 11901  09FE  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11902  09FF  0022               	movlb	2	; select bank2
 11903  0A00  00B3               	movwf	(P2PTasks@tmpTick+1)^(0+256)
 11904  0A01  0021               	movlb	1	; select bank1
 11905  0A02  0820               	movf	?_MiWi_TickGet^(0+128),w
 11906  0A03  0022               	movlb	2	; select bank2
 11907  0A04  00B2               	movwf	P2PTasks@tmpTick^(0+256)
 11908                           
 11909                           ;miwi_p2p.c: 426: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
 11910  0A05  0832               	movf	P2PTasks@tmpTick^(0+256),w
 11911  0A06  00AA               	movwf	??_P2PTasks^(0+256)
 11912  0A07  0833               	movf	(P2PTasks@tmpTick+1)^(0+256),w
 11913  0A08  00AB               	movwf	(??_P2PTasks^(0+256)+1)
 11914  0A09  0834               	movf	(P2PTasks@tmpTick+2)^(0+256),w
 11915  0A0A  00AC               	movwf	(??_P2PTasks^(0+256)+2)
 11916  0A0B  0835               	movf	(P2PTasks@tmpTick+3)^(0+256),w
 11917  0A0C  00AD               	movwf	(??_P2PTasks^(0+256)+3)
 11918  0A0D  0023               	movlb	3	; select bank3
 11919  0A0E  0936               	comf	_nvmDelayTick^(0+384),w
 11920  0A0F  0022               	movlb	2	; select bank2
 11921  0A10  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 11922  0A11  0023               	movlb	3	; select bank3
 11923  0A12  0937               	comf	(_nvmDelayTick+1)^(0+384),w
 11924  0A13  0022               	movlb	2	; select bank2
 11925  0A14  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 11926  0A15  0023               	movlb	3	; select bank3
 11927  0A16  0938               	comf	(_nvmDelayTick+2)^(0+384),w
 11928  0A17  0022               	movlb	2	; select bank2
 11929  0A18  00B0               	movwf	((??_P2PTasks+4)^(0+256)+2)
 11930  0A19  0023               	movlb	3	; select bank3
 11931  0A1A  0939               	comf	(_nvmDelayTick+3)^(0+384),w
 11932  0A1B  0022               	movlb	2	; select bank2
 11933  0A1C  00B1               	movwf	((??_P2PTasks+4)^(0+256)+3)
 11934  0A1D  0AAE               	incf	(??_P2PTasks+4)^(0+256),f
 11935  0A1E  1903               	skipnz
 11936  0A1F  0AAF               	incf	((??_P2PTasks+4)^(0+256)+1),f
 11937  0A20  1903               	skipnz
 11938  0A21  0AB0               	incf	((??_P2PTasks+4)^(0+256)+2),f
 11939  0A22  1903               	skipnz
 11940  0A23  0AB1               	incf	((??_P2PTasks+4)^(0+256)+3),f
 11941  0A24  082E               	movf	(??_P2PTasks+4)^(0+256),w
 11942  0A25  07AA               	addwf	??_P2PTasks^(0+256),f
 11943  0A26  082F               	movf	(??_P2PTasks+5)^(0+256),w
 11944  0A27  3DAB               	addwfc	(??_P2PTasks^(0+256)+1),f
 11945  0A28  0830               	movf	(??_P2PTasks+6)^(0+256),w
 11946  0A29  3DAC               	addwfc	(??_P2PTasks^(0+256)+2),f
 11947  0A2A  0831               	movf	(??_P2PTasks+7)^(0+256),w
 11948  0A2B  3DAD               	addwfc	(??_P2PTasks^(0+256)+3),f
 11949  0A2C  082D               	movf	(??_P2PTasks^(0+256)+3),w
 11950  0A2D  1D03               	btfss	3,2
 11951  0A2E  2A37               	goto	l6657
 11952  0A2F  30B5               	movlw	181
 11953  0A30  022A               	subwf	??_P2PTasks^(0+256),w
 11954  0A31  30C4               	movlw	196
 11955  0A32  3B2B               	subwfb	(??_P2PTasks^(0+256)+1),w
 11956  0A33  3004               	movlw	4
 11957  0A34  3B2C               	subwfb	(??_P2PTasks^(0+256)+2),w
 11958  0A35  1C03               	btfss	3,0
 11959  0A36  2A4C               	goto	l6661
 11960  0A37                     l6657:	
 11961                           
 11962                           ;miwi_p2p.c: 427: {
 11963                           ;miwi_p2p.c: 428: P2PStatus.bits.SaveConnection = 0;
 11964  0A37  10FD               	bcf	_P2PStatus,1	;volatile
 11965                           
 11966                           ;miwi_p2p.c: 429: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10 
      +                          * sizeof(CONNECTION_ENTRY));
 11967  0A38  3064               	movlw	100
 11968  0A39  0021               	movlb	1	; select bank1
 11969  0A3A  00AD               	movwf	NVMWrite@source^(0+128)
 11970  0A3B  3023               	movlw	35
 11971  0A3C  00AE               	movwf	(NVMWrite@source^(0+128)+1)
 11972  0A3D  0020               	movlb	0	; select bank0
 11973  0A3E  0869               	movf	_nvmConnectionTable+1,w
 11974  0A3F  0021               	movlb	1	; select bank1
 11975  0A40  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 11976  0A41  0020               	movlb	0	; select bank0
 11977  0A42  0868               	movf	_nvmConnectionTable,w
 11978  0A43  0021               	movlb	1	; select bank1
 11979  0A44  00AF               	movwf	NVMWrite@addr^(0+128)
 11980  0A45  308C               	movlw	140
 11981  0A46  00B1               	movwf	NVMWrite@count^(0+128)
 11982  0A47  3000               	movlw	0
 11983  0A48  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 11984  0A49  31A3  239F  3188   	fcall	_NVMWrite
 11985  0A4C                     l6661:	
 11986                           
 11987                           ;miwi_p2p.c: 431: }
 11988                           ;miwi_p2p.c: 432: }
 11989                           ;miwi_p2p.c: 449: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
 11990  0A4C  19FD               	btfsc	_P2PStatus,3	;volatile
 11991  0A4D  0008               	return
 11992  0A4E  3186  2633  3188   	fcall	_MiMAC_ReceivedPacket
 11993  0A51  3A00               	xorlw	0
 11994  0A52  1903               	skipnz
 11995  0A53  0008               	return
 11996                           
 11997                           ;miwi_p2p.c: 450: {
 11998                           ;miwi_p2p.c: 451: bool FW_Stat = 0;
 11999  0A54  0022               	movlb	2	; select bank2
 12000  0A55  01B6               	clrf	P2PTasks@FW_Stat^(0+256)
 12001                           
 12002                           ;miwi_p2p.c: 452: rxMessage.flags.Val = 0;
 12003  0A56  0023               	movlb	3	; select bank3
 12004  0A57  01A0               	clrf	_rxMessage^(0+384)
 12005                           
 12006                           ;miwi_p2p.c: 455: temp_bit = MACRxPacket.flags.bits.broadcast;
 12007  0A58  3000               	movlw	0
 12008  0A59  192A               	btfsc	_MACRxPacket^(0+384),2
 12009  0A5A  3001               	movlw	1
 12010  0A5B  00D8               	movwf	_temp_bit^(0+384)
 12011                           
 12012                           ;miwi_p2p.c: 456: rxMessage.flags.bits.broadcast = temp_bit;
 12013  0A5C  0820               	movf	_rxMessage^(0+384),w
 12014  0A5D  0658               	xorwf	_temp_bit^(0+384),w
 12015  0A5E  39FC               	andlw	-4
 12016  0A5F  0658               	xorwf	_temp_bit^(0+384),w
 12017  0A60  00A0               	movwf	_rxMessage^(0+384)
 12018                           
 12019                           ;miwi_p2p.c: 458: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 12020  0A61  11A0               	bcf	_rxMessage^(0+384),3
 12021  0A62  19AA               	btfsc	_MACRxPacket^(0+384),3
 12022  0A63  15A0               	bsf	_rxMessage^(0+384),3
 12023                           
 12024                           ;miwi_p2p.c: 459: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
 12025  0A64  0023               	movlb	3	; select bank3
 12026  0A65  082A               	movf	_MACRxPacket^(0+384),w
 12027  0A66  3903               	andlw	3
 12028  0A67  3A01               	xorlw	1
 12029  0A68  1D03               	btfss	3,2
 12030  0A69  2A6D               	goto	u7080
 12031  0A6A  0023               	movlb	3	; select bank3
 12032  0A6B  16A0               	bsf	_rxMessage^(0+384),5
 12033  0A6C  2A6F               	goto	l6675
 12034  0A6D                     u7080:	
 12035  0A6D  0023               	movlb	3	; select bank3
 12036  0A6E  12A0               	bcf	_rxMessage^(0+384),5
 12037  0A6F                     l6675:	
 12038                           
 12039                           ;miwi_p2p.c: 460: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 12040  0A6F  1320               	bcf	_rxMessage^(0+384),6
 12041  0A70  1BAA               	btfsc	_MACRxPacket^(0+384),7
 12042  0A71  1720               	bsf	_rxMessage^(0+384),6
 12043                           
 12044                           ;miwi_p2p.c: 461: if( MACRxPacket.flags.bits.sourcePrsnt )
 12045  0A72  0023               	movlb	3	; select bank3
 12046  0A73  1FAA               	btfss	_MACRxPacket^(0+384),7
 12047  0A74  2A79               	goto	l451
 12048                           
 12049                           ;miwi_p2p.c: 462: {
 12050                           ;miwi_p2p.c: 463: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 12051  0A75  082C               	movf	((low ((_MACRxPacket| (0+256)+1))+1))^(0+128),w
 12052  0A76  00A4               	movwf	((low ((_rxMessage| (0+256)+3))+1))^(0+128)
 12053  0A77  082B               	movf	(low ((_MACRxPacket| (0+256)+1)))^(0+128),w
 12054  0A78  00A3               	movwf	(low ((_rxMessage| (0+256)+3)))^(0+128)
 12055  0A79                     l451:	
 12056                           
 12057                           ;miwi_p2p.c: 464: }
 12058                           ;miwi_p2p.c: 469: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
 12059  0A79  082F               	movf	(_MACRxPacket^(0+384)+5),w
 12060  0A7A  0022               	movlb	2	; select bank2
 12061  0A7B  00AA               	movwf	??_P2PTasks^(0+256)
 12062  0A7C  082A               	movf	??_P2PTasks^(0+256),w
 12063  0A7D  0023               	movlb	3	; select bank3
 12064  0A7E  00A7               	movwf	(_rxMessage^(0+384)+7)
 12065                           
 12066                           ;miwi_p2p.c: 470: rxMessage.Payload = MACRxPacket.Payload;
 12067  0A7F  082E               	movf	((low ((_MACRxPacket| (0+256)+3))+1))^(0+128),w
 12068  0A80  00A6               	movwf	((low ((_rxMessage| (0+256)+5))+1))^(0+128)
 12069  0A81  082D               	movf	(low ((_MACRxPacket| (0+256)+3)))^(0+128),w
 12070  0A82  00A5               	movwf	(low ((_rxMessage| (0+256)+5)))^(0+128)
 12071                           
 12072                           ;miwi_p2p.c: 479: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 12073  0A83  0831               	movf	(_MACRxPacket^(0+384)+7),w
 12074  0A84  0022               	movlb	2	; select bank2
 12075  0A85  00AA               	movwf	??_P2PTasks^(0+256)
 12076  0A86  082A               	movf	??_P2PTasks^(0+256),w
 12077  0A87  0023               	movlb	3	; select bank3
 12078  0A88  00A9               	movwf	(_rxMessage^(0+384)+9)
 12079                           
 12080                           ;miwi_p2p.c: 480: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 12081  0A89  0830               	movf	(_MACRxPacket^(0+384)+6),w
 12082  0A8A  0022               	movlb	2	; select bank2
 12083  0A8B  00AA               	movwf	??_P2PTasks^(0+256)
 12084  0A8C  082A               	movf	??_P2PTasks^(0+256),w
 12085  0A8D  0023               	movlb	3	; select bank3
 12086  0A8E  00A8               	movwf	(_rxMessage^(0+384)+8)
 12087                           
 12088                           ;miwi_p2p.c: 483: if( rxMessage.flags.bits.command )
 12089  0A8F  1AA0               	btfsc	_rxMessage^(0+384),5
 12090  0A90  2FCF               	goto	l6949
 12091  0A91  2FF4               	goto	l452
 12092  0A92                     l6685:	
 12093                           ;miwi_p2p.c: 487: {
 12094                           ;miwi_p2p.c: 490: case 0x81:
 12095                           
 12096                           ;miwi_p2p.c: 484: {
 12097                           ;miwi_p2p.c: 486: switch( rxMessage.Payload[0] )
 12098                           
 12099                           
 12100                           ;miwi_p2p.c: 491: {
 12101                           ;miwi_p2p.c: 493: if(role)
 12102  0A92  0022               	movlb	2	; select bank2
 12103  0A93  086F               	movf	_role^(0+256),w
 12104  0A94  1903               	btfsc	3,2
 12105  0A95  2BE1               	goto	l6777
 12106                           
 12107                           ;miwi_p2p.c: 494: {
 12108                           ;miwi_p2p.c: 505: uint8_t status = 0x00;
 12109  0A96  01C2               	clrf	P2PTasks@status^(0+256)
 12110                           
 12111                           ;miwi_p2p.c: 509: if( currentChannel != rxMessage.Payload[1] )
 12112  0A97  0023               	movlb	3	; select bank3
 12113  0A98  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 12114  0A99  0086               	movwf	6
 12115  0A9A  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 12116  0A9B  0087               	movwf	7
 12117  0A9C  3141               	addfsr 1,1
 12118  0A9D  0801               	movf	1,w
 12119  0A9E  0020               	movlb	0	; select bank0
 12120  0A9F  066B               	xorwf	_currentChannel,w
 12121  0AA0  1903               	skipnz
 12122  0AA1  2AA6               	goto	l6693
 12123                           
 12124                           ;miwi_p2p.c: 510: {
 12125                           ;miwi_p2p.c: 511: MiMAC_DiscardPacket();
 12126  0AA2  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12127                           
 12128                           ;miwi_p2p.c: 512: break;
 12129  0AA5  2FF5               	goto	l6951
 12130  0AA6                     l6693:	
 12131                           
 12132                           ;miwi_p2p.c: 513: }
 12133                           ;miwi_p2p.c: 517: if( ConnMode == 0x03 )
 12134  0AA6  3003               	movlw	3
 12135  0AA7  0020               	movlb	0	; select bank0
 12136  0AA8  066F               	xorwf	_ConnMode,w
 12137  0AA9  1D03               	btfss	3,2
 12138  0AAA  2AAF               	goto	l6697
 12139                           
 12140                           ;miwi_p2p.c: 518: {
 12141                           ;miwi_p2p.c: 519: MiMAC_DiscardPacket();
 12142  0AAB  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12143                           
 12144                           ;miwi_p2p.c: 520: break;
 12145  0AAE  2FF5               	goto	l6951
 12146  0AAF                     l6697:	
 12147                           
 12148                           ;miwi_p2p.c: 521: }
 12149                           ;miwi_p2p.c: 533: {
 12150                           ;miwi_p2p.c: 536: status = AddConnection();
 12151  0AAF  3190  2015  3188   	fcall	_AddConnection
 12152  0AB2  0022               	movlb	2	; select bank2
 12153  0AB3  00AA               	movwf	??_P2PTasks^(0+256)
 12154  0AB4  082A               	movf	??_P2PTasks^(0+256),w
 12155  0AB5  00C2               	movwf	P2PTasks@status^(0+256)
 12156                           
 12157                           ;miwi_p2p.c: 537: }
 12158                           ;miwi_p2p.c: 539: uint8_t p;
 12159                           ;miwi_p2p.c: 540: if (rxMessage.Payload[3] == 0xAA)
 12160  0AB6  0023               	movlb	3	; select bank3
 12161  0AB7  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 12162  0AB8  0086               	movwf	6
 12163  0AB9  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 12164  0ABA  0087               	movwf	7
 12165  0ABB  3143               	addfsr 1,3
 12166  0ABC  30AA               	movlw	170
 12167  0ABD  0601               	xorwf	1,w
 12168  0ABE  1D03               	btfss	3,2
 12169  0ABF  2B10               	goto	l6715
 12170                           
 12171                           ;miwi_p2p.c: 541: {
 12172                           ;miwi_p2p.c: 543: for (p = 0 ;p <10;p++)
 12173  0AC0  0022               	movlb	2	; select bank2
 12174  0AC1  01C0               	clrf	P2PTasks@p^(0+256)
 12175  0AC2  300A               	movlw	10
 12176  0AC3  0240               	subwf	P2PTasks@p^(0+256),w
 12177  0AC4  1803               	btfsc	3,0
 12178  0AC5  2B10               	goto	l6715
 12179  0AC6                     l6707:	
 12180                           
 12181                           ;miwi_p2p.c: 544: {
 12182                           ;miwi_p2p.c: 545: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
 12183  0AC6  0023               	movlb	3	; select bank3
 12184  0AC7  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 12185  0AC8  0021               	movlb	1	; select bank1
 12186  0AC9  00AE               	movwf	(isSameAddress@Address1+1)^(0+128)
 12187  0ACA  0023               	movlb	3	; select bank3
 12188  0ACB  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 12189  0ACC  0021               	movlb	1	; select bank1
 12190  0ACD  00AD               	movwf	isSameAddress@Address1^(0+128)
 12191  0ACE  0022               	movlb	2	; select bank2
 12192  0ACF  0840               	movf	P2PTasks@p^(0+256),w
 12193  0AD0  00AA               	movwf	??_P2PTasks^(0+256)
 12194  0AD1  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12195  0AD2  082A               	movf	??_P2PTasks^(0+256),w
 12196  0AD3  0021               	movlb	1	; select bank1
 12197  0AD4  00A7               	movwf	___wmul@multiplier^(0+128)
 12198  0AD5  0022               	movlb	2	; select bank2
 12199  0AD6  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12200  0AD7  0021               	movlb	1	; select bank1
 12201  0AD8  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12202  0AD9  300E               	movlw	14
 12203  0ADA  00A9               	movwf	___wmul@multiplicand^(0+128)
 12204  0ADB  3000               	movlw	0
 12205  0ADC  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12206  0ADD  31B6  26A4  3188   	fcall	___wmul
 12207  0AE0  0021               	movlb	1	; select bank1
 12208  0AE1  0827               	movf	?___wmul^(0+128),w
 12209  0AE2  3E04               	addlw	4
 12210  0AE3  0022               	movlb	2	; select bank2
 12211  0AE4  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12212  0AE5  3000               	movlw	0
 12213  0AE6  0021               	movlb	1	; select bank1
 12214  0AE7  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12215  0AE8  0022               	movlb	2	; select bank2
 12216  0AE9  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 12217  0AEA  3064               	movlw	100
 12218  0AEB  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12219  0AEC  3023               	movlw	35
 12220  0AED  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 12221  0AEE  082C               	movf	(??_P2PTasks+2)^(0+256),w
 12222  0AEF  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 12223  0AF0  0021               	movlb	1	; select bank1
 12224  0AF1  00AF               	movwf	isSameAddress@Address2^(0+128)
 12225  0AF2  0022               	movlb	2	; select bank2
 12226  0AF3  082D               	movf	(??_P2PTasks+3)^(0+256),w
 12227  0AF4  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 12228  0AF5  0021               	movlb	1	; select bank1
 12229  0AF6  00B0               	movwf	(isSameAddress@Address2+1)^(0+128)
 12230  0AF7  31A8  2078  3188   	fcall	_isSameAddress
 12231  0AFA  3A00               	xorlw	0
 12232  0AFB  1903               	skipnz
 12233  0AFC  2B07               	goto	l6711
 12234                           
 12235                           ;miwi_p2p.c: 546: {
 12236                           ;miwi_p2p.c: 547: permanent_connections[p] = 0xFF;
 12237  0AFD  30FF               	movlw	255
 12238  0AFE  0022               	movlb	2	; select bank2
 12239  0AFF  00AA               	movwf	??_P2PTasks^(0+256)
 12240  0B00  0840               	movf	P2PTasks@p^(0+256),w
 12241  0B01  3E2A               	addlw	(low (_permanent_connections| (0+512)))& (0+255)
 12242  0B02  0086               	movwf	6
 12243  0B03  3002               	movlw	2	; select bank4/5
 12244  0B04  0087               	movwf	7
 12245  0B05  082A               	movf	??_P2PTasks^(0+256),w
 12246  0B06  0081               	movwf	1
 12247  0B07                     l6711:	
 12248  0B07  3001               	movlw	1
 12249  0B08  0022               	movlb	2	; select bank2
 12250  0B09  00AA               	movwf	??_P2PTasks^(0+256)
 12251  0B0A  082A               	movf	??_P2PTasks^(0+256),w
 12252  0B0B  07C0               	addwf	P2PTasks@p^(0+256),f
 12253  0B0C  300A               	movlw	10
 12254  0B0D  0240               	subwf	P2PTasks@p^(0+256),w
 12255  0B0E  1C03               	skipc
 12256  0B0F  2AC6               	goto	l6707
 12257  0B10                     l6715:	
 12258                           
 12259                           ;miwi_p2p.c: 549: }
 12260                           ;miwi_p2p.c: 551: }
 12261                           ;miwi_p2p.c: 552: }
 12262                           ;miwi_p2p.c: 554: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
 12263  0B10  0020               	movlb	0	; select bank0
 12264  0B11  036F               	decf	_ConnMode,w
 12265  0B12  1D03               	btfss	3,2
 12266  0B13  2B20               	goto	l6731
 12267  0B14  0022               	movlb	2	; select bank2
 12268  0B15  0342               	decf	P2PTasks@status^(0+256),w
 12269  0B16  1903               	btfsc	3,2
 12270  0B17  2B20               	goto	l6731
 12271  0B18  3002               	movlw	2
 12272  0B19  0642               	xorwf	P2PTasks@status^(0+256),w
 12273  0B1A  1903               	btfsc	3,2
 12274  0B1B  2B20               	goto	l6731
 12275                           
 12276                           ;miwi_p2p.c: 563: status = 0xF3;
 12277                           
 12278                           ;miwi_p2p.c: 561: {
 12279                           ;miwi_p2p.c: 562: ConnectionTable[LatestConnection].status.Val = 0;
 12280                           
 12281                           ;miwi_p2p.c: 555: {
 12282                           ;miwi_p2p.c: 556: status = 0xF3;
 12283  0B1C  30F3               	movlw	243
 12284  0B1D  00AA               	movwf	??_P2PTasks^(0+256)
 12285  0B1E  082A               	movf	??_P2PTasks^(0+256),w
 12286  0B1F  00C2               	movwf	P2PTasks@status^(0+256)
 12287  0B20                     l6731:	
 12288                           
 12289                           ;miwi_p2p.c: 564: }
 12290                           ;miwi_p2p.c: 568: {TxData = 0;};
 12291  0B20  0022               	movlb	2	; select bank2
 12292  0B21  01EE               	clrf	_TxData^(0+256)
 12293                           
 12294                           ;miwi_p2p.c: 569: TxBuffer[TxData++] = 0x91;
 12295  0B22  3091               	movlw	145
 12296  0B23  00AA               	movwf	??_P2PTasks^(0+256)
 12297  0B24  086E               	movf	_TxData^(0+256),w
 12298  0B25  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12299  0B26  0086               	movwf	6
 12300  0B27  3002               	movlw	2	; select bank4/5
 12301  0B28  0087               	movwf	7
 12302  0B29  082A               	movf	??_P2PTasks^(0+256),w
 12303  0B2A  0081               	movwf	1
 12304  0B2B  3001               	movlw	1
 12305  0B2C  00AA               	movwf	??_P2PTasks^(0+256)
 12306  0B2D  082A               	movf	??_P2PTasks^(0+256),w
 12307  0B2E  07EE               	addwf	_TxData^(0+256),f
 12308                           
 12309                           ;miwi_p2p.c: 570: TxBuffer[TxData++] = status;
 12310  0B2F  0842               	movf	P2PTasks@status^(0+256),w
 12311  0B30  00AA               	movwf	??_P2PTasks^(0+256)
 12312  0B31  086E               	movf	_TxData^(0+256),w
 12313  0B32  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12314  0B33  0086               	movwf	6
 12315  0B34  3002               	movlw	2	; select bank4/5
 12316  0B35  0087               	movwf	7
 12317  0B36  082A               	movf	??_P2PTasks^(0+256),w
 12318  0B37  0081               	movwf	1
 12319  0B38  3001               	movlw	1
 12320  0B39  00AA               	movwf	??_P2PTasks^(0+256)
 12321  0B3A  082A               	movf	??_P2PTasks^(0+256),w
 12322  0B3B  07EE               	addwf	_TxData^(0+256),f
 12323                           
 12324                           ;miwi_p2p.c: 571: TxBuffer[TxData++] = MyindexinPC;
 12325  0B3C  0023               	movlb	3	; select bank3
 12326  0B3D  084D               	movf	_MyindexinPC^(0+384),w
 12327  0B3E  0022               	movlb	2	; select bank2
 12328  0B3F  00AA               	movwf	??_P2PTasks^(0+256)
 12329  0B40  086E               	movf	_TxData^(0+256),w
 12330  0B41  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12331  0B42  0086               	movwf	6
 12332  0B43  3002               	movlw	2	; select bank4/5
 12333  0B44  0087               	movwf	7
 12334  0B45  082A               	movf	??_P2PTasks^(0+256),w
 12335  0B46  0081               	movwf	1
 12336  0B47  3001               	movlw	1
 12337  0B48  00AA               	movwf	??_P2PTasks^(0+256)
 12338  0B49  082A               	movf	??_P2PTasks^(0+256),w
 12339  0B4A  07EE               	addwf	_TxData^(0+256),f
 12340                           
 12341                           ;miwi_p2p.c: 572: if( status == 0x00 ||
 12342                           ;miwi_p2p.c: 573: status == 0x01 )
 12343  0B4B  0842               	movf	P2PTasks@status^(0+256),w
 12344  0B4C  1D03               	btfss	3,2
 12345  0B4D  0342               	decf	P2PTasks@status^(0+256),w
 12346  0B4E  1D03               	btfss	3,2
 12347  0B4F  2B7B               	goto	l6767
 12348                           
 12349                           ;miwi_p2p.c: 574: {
 12350                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = P2PCapacityInfo;
 12351  0B50  0020               	movlb	0	; select bank0
 12352  0B51  085C               	movf	_P2PCapacityInfo,w
 12353  0B52  0022               	movlb	2	; select bank2
 12354  0B53  00AA               	movwf	??_P2PTasks^(0+256)
 12355  0B54  086E               	movf	_TxData^(0+256),w
 12356  0B55  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12357  0B56  0086               	movwf	6
 12358  0B57  3002               	movlw	2	; select bank4/5
 12359  0B58  0087               	movwf	7
 12360  0B59  082A               	movf	??_P2PTasks^(0+256),w
 12361  0B5A  0081               	movwf	1
 12362  0B5B  3001               	movlw	1
 12363  0B5C  00AA               	movwf	??_P2PTasks^(0+256)
 12364  0B5D  082A               	movf	??_P2PTasks^(0+256),w
 12365  0B5E  07EE               	addwf	_TxData^(0+256),f
 12366                           
 12367                           ;miwi_p2p.c: 577: for(i = 0; i < 1; i++)
 12368  0B5F  01C3               	clrf	P2PTasks@i^(0+256)
 12369  0B60  0843               	movf	P2PTasks@i^(0+256),w
 12370  0B61  1D03               	btfss	3,2
 12371  0B62  2B7B               	goto	l6767
 12372  0B63                     l6759:	
 12373                           
 12374                           ;miwi_p2p.c: 578: {
 12375                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = AdditionalNodeID[i];
 12376  0B63  0843               	movf	P2PTasks@i^(0+256),w
 12377  0B64  3E6D               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 12378  0B65  0086               	movwf	6
 12379  0B66  0187               	clrf	7
 12380  0B67  0801               	movf	1,w
 12381  0B68  00AA               	movwf	??_P2PTasks^(0+256)
 12382  0B69  086E               	movf	_TxData^(0+256),w
 12383  0B6A  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12384  0B6B  0086               	movwf	6
 12385  0B6C  3002               	movlw	2	; select bank4/5
 12386  0B6D  0087               	movwf	7
 12387  0B6E  082A               	movf	??_P2PTasks^(0+256),w
 12388  0B6F  0081               	movwf	1
 12389  0B70  3001               	movlw	1
 12390  0B71  00AA               	movwf	??_P2PTasks^(0+256)
 12391  0B72  082A               	movf	??_P2PTasks^(0+256),w
 12392  0B73  07EE               	addwf	_TxData^(0+256),f
 12393  0B74  3001               	movlw	1
 12394  0B75  00AA               	movwf	??_P2PTasks^(0+256)
 12395  0B76  082A               	movf	??_P2PTasks^(0+256),w
 12396  0B77  07C3               	addwf	P2PTasks@i^(0+256),f
 12397  0B78  0843               	movf	P2PTasks@i^(0+256),w
 12398  0B79  1903               	btfsc	3,2
 12399  0B7A  2B63               	goto	l6759
 12400  0B7B                     l6767:	
 12401                           
 12402                           ;miwi_p2p.c: 580: }
 12403                           ;miwi_p2p.c: 582: }
 12404                           ;miwi_p2p.c: 584: MiMAC_DiscardPacket();
 12405  0B7B  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12406                           
 12407                           ;miwi_p2p.c: 598: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 12408  0B7E  0023               	movlb	3	; select bank3
 12409  0B7F  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 12410  0B80  0021               	movlb	1	; select bank1
 12411  0B81  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 12412  0B82  0023               	movlb	3	; select bank3
 12413  0B83  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 12414  0B84  0021               	movlb	1	; select bank1
 12415  0B85  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 12416  0B86  01D8               	clrf	SendPacket@isCommand^(0+128)
 12417  0B87  0AD8               	incf	SendPacket@isCommand^(0+128),f
 12418  0B88  3000               	movlw	0
 12419  0B89  0023               	movlb	3	; select bank3
 12420  0B8A  19A0               	btfsc	_rxMessage^(0+384),3
 12421  0B8B  3001               	movlw	1
 12422  0B8C  0021               	movlb	1	; select bank1
 12423  0B8D  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 12424  0B8E  3000               	movlw	0
 12425  0B8F  31AB  2390  3188   	fcall	_SendPacket
 12426                           
 12427                           ;miwi_p2p.c: 603: MiApp_BroadcastConnectionTable ();
 12428  0B92  3184  240F  3188   	fcall	_MiApp_BroadcastConnectionTable
 12429                           
 12430                           ;miwi_p2p.c: 606: if( status == 0x00 )
 12431  0B95  0022               	movlb	2	; select bank2
 12432  0B96  0842               	movf	P2PTasks@status^(0+256),w
 12433  0B97  1D03               	btfss	3,2
 12434  0B98  2FF5               	goto	l6951
 12435                           
 12436                           ;miwi_p2p.c: 607: {
 12437                           ;miwi_p2p.c: 608: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
 12438  0B99  0020               	movlb	0	; select bank0
 12439  0B9A  085B               	movf	_LatestConnection,w
 12440  0B9B  0022               	movlb	2	; select bank2
 12441  0B9C  00AA               	movwf	??_P2PTasks^(0+256)
 12442  0B9D  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12443  0B9E  082A               	movf	??_P2PTasks^(0+256),w
 12444  0B9F  0021               	movlb	1	; select bank1
 12445  0BA0  00A7               	movwf	___wmul@multiplier^(0+128)
 12446  0BA1  0022               	movlb	2	; select bank2
 12447  0BA2  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12448  0BA3  0021               	movlb	1	; select bank1
 12449  0BA4  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12450  0BA5  300E               	movlw	14
 12451  0BA6  00A9               	movwf	___wmul@multiplicand^(0+128)
 12452  0BA7  3000               	movlw	0
 12453  0BA8  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12454  0BA9  31B6  26A4  3188   	fcall	___wmul
 12455  0BAC  3064               	movlw	100
 12456  0BAD  0022               	movlb	2	; select bank2
 12457  0BAE  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12458  0BAF  3023               	movlw	35
 12459  0BB0  00AD               	movwf	((??_P2PTasks+2)^(0+256)+1)
 12460  0BB1  0021               	movlb	1	; select bank1
 12461  0BB2  0827               	movf	?___wmul^(0+128),w
 12462  0BB3  0022               	movlb	2	; select bank2
 12463  0BB4  072C               	addwf	(??_P2PTasks+2)^(0+256),w
 12464  0BB5  0021               	movlb	1	; select bank1
 12465  0BB6  00AD               	movwf	NVMWrite@source^(0+128)
 12466  0BB7  0828               	movf	(?___wmul+1)^(0+128),w
 12467  0BB8  0022               	movlb	2	; select bank2
 12468  0BB9  3D2D               	addwfc	(??_P2PTasks+3)^(0+256),w
 12469  0BBA  0021               	movlb	1	; select bank1
 12470  0BBB  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 12471  0BBC  0020               	movlb	0	; select bank0
 12472  0BBD  085B               	movf	_LatestConnection,w
 12473  0BBE  0022               	movlb	2	; select bank2
 12474  0BBF  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12475  0BC0  01AF               	clrf	((??_P2PTasks+4)^(0+256)+1)
 12476  0BC1  082E               	movf	(??_P2PTasks+4)^(0+256),w
 12477  0BC2  0021               	movlb	1	; select bank1
 12478  0BC3  00A7               	movwf	___wmul@multiplier^(0+128)
 12479  0BC4  0022               	movlb	2	; select bank2
 12480  0BC5  082F               	movf	(??_P2PTasks+5)^(0+256),w
 12481  0BC6  0021               	movlb	1	; select bank1
 12482  0BC7  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12483  0BC8  300E               	movlw	14
 12484  0BC9  00A9               	movwf	___wmul@multiplicand^(0+128)
 12485  0BCA  3000               	movlw	0
 12486  0BCB  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12487  0BCC  31B6  26A4  3188   	fcall	___wmul
 12488  0BCF  0020               	movlb	0	; select bank0
 12489  0BD0  0868               	movf	_nvmConnectionTable,w
 12490  0BD1  0021               	movlb	1	; select bank1
 12491  0BD2  0727               	addwf	?___wmul^(0+128),w
 12492  0BD3  00AF               	movwf	NVMWrite@addr^(0+128)
 12493  0BD4  0020               	movlb	0	; select bank0
 12494  0BD5  0869               	movf	_nvmConnectionTable+1,w
 12495  0BD6  0021               	movlb	1	; select bank1
 12496  0BD7  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12497  0BD8  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 12498  0BD9  300E               	movlw	14
 12499  0BDA  00B1               	movwf	NVMWrite@count^(0+128)
 12500  0BDB  3000               	movlw	0
 12501  0BDC  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 12502  0BDD  31A3  239F  3188   	fcall	_NVMWrite
 12503                           
 12504                           ;miwi_p2p.c: 609: }
 12505                           ;miwi_p2p.c: 615: }
 12506  0BE0  2FF5               	goto	l6951
 12507  0BE1                     l6777:	
 12508                           
 12509                           ;miwi_p2p.c: 618: else
 12510                           ;miwi_p2p.c: 619: {
 12511                           ;miwi_p2p.c: 620: MiMAC_DiscardPacket();
 12512  0BE1  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12513                           
 12514                           ;miwi_p2p.c: 621: }
 12515                           ;miwi_p2p.c: 623: }
 12516                           ;miwi_p2p.c: 624: break;
 12517  0BE4  2FF5               	goto	l6951
 12518  0BE5                     l6779:	
 12519                           ;miwi_p2p.c: 626: case 0x87:
 12520                           
 12521                           
 12522                           ;miwi_p2p.c: 627: {
 12523                           ;miwi_p2p.c: 628: if(ConnMode > 0x02)
 12524  0BE5  3003               	movlw	3
 12525  0BE6  0020               	movlb	0	; select bank0
 12526  0BE7  026F               	subwf	_ConnMode,w
 12527  0BE8  1C03               	skipc
 12528  0BE9  2BEE               	goto	l6783
 12529                           
 12530                           ;miwi_p2p.c: 629: {
 12531                           ;miwi_p2p.c: 630: MiMAC_DiscardPacket();
 12532  0BEA  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12533                           
 12534                           ;miwi_p2p.c: 631: break;
 12535  0BED  2FF5               	goto	l6951
 12536  0BEE                     l6783:	
 12537                           
 12538                           ;miwi_p2p.c: 632: }
 12539                           ;miwi_p2p.c: 633: if( currentChannel != rxMessage.Payload[1] )
 12540  0BEE  0023               	movlb	3	; select bank3
 12541  0BEF  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 12542  0BF0  0086               	movwf	6
 12543  0BF1  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 12544  0BF2  0087               	movwf	7
 12545  0BF3  3141               	addfsr 1,1
 12546  0BF4  0801               	movf	1,w
 12547  0BF5  0020               	movlb	0	; select bank0
 12548  0BF6  066B               	xorwf	_currentChannel,w
 12549  0BF7  1903               	skipnz
 12550  0BF8  2BFD               	goto	l6787
 12551                           
 12552                           ;miwi_p2p.c: 634: {
 12553                           ;miwi_p2p.c: 635: MiMAC_DiscardPacket();
 12554  0BF9  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12555                           
 12556                           ;miwi_p2p.c: 636: break;
 12557  0BFC  2FF5               	goto	l6951
 12558  0BFD                     l6787:	
 12559                           
 12560                           ;miwi_p2p.c: 637: }
 12561                           ;miwi_p2p.c: 639: {TxData = 0;};
 12562  0BFD  0022               	movlb	2	; select bank2
 12563  0BFE  01EE               	clrf	_TxData^(0+256)
 12564                           
 12565                           ;miwi_p2p.c: 640: TxBuffer[TxData++] = 0x97;
 12566  0BFF  3097               	movlw	151
 12567  0C00  00AA               	movwf	??_P2PTasks^(0+256)
 12568  0C01  086E               	movf	_TxData^(0+256),w
 12569  0C02  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12570  0C03  0086               	movwf	6
 12571  0C04  3002               	movlw	2	; select bank4/5
 12572  0C05  0087               	movwf	7
 12573  0C06  082A               	movf	??_P2PTasks^(0+256),w
 12574  0C07  0081               	movwf	1
 12575  0C08  3001               	movlw	1
 12576  0C09  00AA               	movwf	??_P2PTasks^(0+256)
 12577  0C0A  082A               	movf	??_P2PTasks^(0+256),w
 12578  0C0B  07EE               	addwf	_TxData^(0+256),f
 12579                           
 12580                           ;miwi_p2p.c: 641: TxBuffer[TxData++] = P2PCapacityInfo;
 12581  0C0C  0020               	movlb	0	; select bank0
 12582  0C0D  085C               	movf	_P2PCapacityInfo,w
 12583  0C0E  0022               	movlb	2	; select bank2
 12584  0C0F  00AA               	movwf	??_P2PTasks^(0+256)
 12585  0C10  086E               	movf	_TxData^(0+256),w
 12586  0C11  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12587  0C12  0086               	movwf	6
 12588  0C13  3002               	movlw	2	; select bank4/5
 12589  0C14  0087               	movwf	7
 12590  0C15  082A               	movf	??_P2PTasks^(0+256),w
 12591  0C16  0081               	movwf	1
 12592  0C17  3001               	movlw	1
 12593  0C18  00AA               	movwf	??_P2PTasks^(0+256)
 12594  0C19  082A               	movf	??_P2PTasks^(0+256),w
 12595  0C1A  07EE               	addwf	_TxData^(0+256),f
 12596                           
 12597                           ;miwi_p2p.c: 643: for(i = 0; i < 1; i++)
 12598  0C1B  01C3               	clrf	P2PTasks@i^(0+256)
 12599  0C1C  0843               	movf	P2PTasks@i^(0+256),w
 12600  0C1D  1D03               	btfss	3,2
 12601  0C1E  2C37               	goto	l6809
 12602  0C1F                     l6801:	
 12603                           
 12604                           ;miwi_p2p.c: 644: {
 12605                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = AdditionalNodeID[i];
 12606  0C1F  0843               	movf	P2PTasks@i^(0+256),w
 12607  0C20  3E6D               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 12608  0C21  0086               	movwf	6
 12609  0C22  0187               	clrf	7
 12610  0C23  0801               	movf	1,w
 12611  0C24  00AA               	movwf	??_P2PTasks^(0+256)
 12612  0C25  086E               	movf	_TxData^(0+256),w
 12613  0C26  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12614  0C27  0086               	movwf	6
 12615  0C28  3002               	movlw	2	; select bank4/5
 12616  0C29  0087               	movwf	7
 12617  0C2A  082A               	movf	??_P2PTasks^(0+256),w
 12618  0C2B  0081               	movwf	1
 12619  0C2C  3001               	movlw	1
 12620  0C2D  00AA               	movwf	??_P2PTasks^(0+256)
 12621  0C2E  082A               	movf	??_P2PTasks^(0+256),w
 12622  0C2F  07EE               	addwf	_TxData^(0+256),f
 12623  0C30  3001               	movlw	1
 12624  0C31  00AA               	movwf	??_P2PTasks^(0+256)
 12625  0C32  082A               	movf	??_P2PTasks^(0+256),w
 12626  0C33  07C3               	addwf	P2PTasks@i^(0+256),f
 12627  0C34  0843               	movf	P2PTasks@i^(0+256),w
 12628  0C35  1903               	btfsc	3,2
 12629  0C36  2C1F               	goto	l6801
 12630  0C37                     l6809:	
 12631                           
 12632                           ;miwi_p2p.c: 646: }
 12633                           ;miwi_p2p.c: 648: MiMAC_DiscardPacket();
 12634  0C37  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12635                           
 12636                           ;miwi_p2p.c: 661: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 12637  0C3A  0023               	movlb	3	; select bank3
 12638  0C3B  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 12639  0C3C  0021               	movlb	1	; select bank1
 12640  0C3D  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 12641  0C3E  0023               	movlb	3	; select bank3
 12642  0C3F  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 12643  0C40  0021               	movlb	1	; select bank1
 12644  0C41  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 12645  0C42  01D8               	clrf	SendPacket@isCommand^(0+128)
 12646  0C43  0AD8               	incf	SendPacket@isCommand^(0+128),f
 12647  0C44  3000               	movlw	0
 12648  0C45  0023               	movlb	3	; select bank3
 12649  0C46  19A0               	btfsc	_rxMessage^(0+384),3
 12650  0C47  3001               	movlw	1
 12651  0C48  0021               	movlb	1	; select bank1
 12652  0C49  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 12653  0C4A  3000               	movlw	0
 12654  0C4B  31AB  2390  3188   	fcall	_SendPacket
 12655                           
 12656                           ;miwi_p2p.c: 664: }
 12657                           ;miwi_p2p.c: 665: break;
 12658  0C4E  2FF5               	goto	l6951
 12659  0C4F                     l6813:	
 12660                           ;miwi_p2p.c: 672: case 0x82:
 12661                           
 12662                           
 12663                           ;miwi_p2p.c: 673: {
 12664                           ;miwi_p2p.c: 674: {TxData = 0;};
 12665  0C4F  0022               	movlb	2	; select bank2
 12666  0C50  01EE               	clrf	_TxData^(0+256)
 12667                           
 12668                           ;miwi_p2p.c: 675: TxBuffer[TxData++] = 0x92;
 12669  0C51  3092               	movlw	146
 12670  0C52  00AA               	movwf	??_P2PTasks^(0+256)
 12671  0C53  086E               	movf	_TxData^(0+256),w
 12672  0C54  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12673  0C55  0086               	movwf	6
 12674  0C56  3002               	movlw	2	; select bank4/5
 12675  0C57  0087               	movwf	7
 12676  0C58  082A               	movf	??_P2PTasks^(0+256),w
 12677  0C59  0081               	movwf	1
 12678  0C5A  3001               	movlw	1
 12679  0C5B  00AA               	movwf	??_P2PTasks^(0+256)
 12680  0C5C  082A               	movf	??_P2PTasks^(0+256),w
 12681  0C5D  07EE               	addwf	_TxData^(0+256),f
 12682                           
 12683                           ;miwi_p2p.c: 677: for(i = 0; i < 10; i++)
 12684  0C5E  01C3               	clrf	P2PTasks@i^(0+256)
 12685  0C5F  300A               	movlw	10
 12686  0C60  0243               	subwf	P2PTasks@i^(0+256),w
 12687  0C61  1803               	btfsc	3,0
 12688  0C62  2D41               	goto	l6839
 12689  0C63                     l6825:	
 12690                           
 12691                           ;miwi_p2p.c: 678: {
 12692                           ;miwi_p2p.c: 680: if( ConnectionTable[i].status.bits.isValid )
 12693  0C63  0843               	movf	P2PTasks@i^(0+256),w
 12694  0C64  00AA               	movwf	??_P2PTasks^(0+256)
 12695  0C65  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12696  0C66  082A               	movf	??_P2PTasks^(0+256),w
 12697  0C67  0021               	movlb	1	; select bank1
 12698  0C68  00A7               	movwf	___wmul@multiplier^(0+128)
 12699  0C69  0022               	movlb	2	; select bank2
 12700  0C6A  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12701  0C6B  0021               	movlb	1	; select bank1
 12702  0C6C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12703  0C6D  300E               	movlw	14
 12704  0C6E  00A9               	movwf	___wmul@multiplicand^(0+128)
 12705  0C6F  3000               	movlw	0
 12706  0C70  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12707  0C71  31B6  26A4  3188   	fcall	___wmul
 12708  0C74  0021               	movlb	1	; select bank1
 12709  0C75  0827               	movf	?___wmul^(0+128),w
 12710  0C76  3E0C               	addlw	12
 12711  0C77  0022               	movlb	2	; select bank2
 12712  0C78  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12713  0C79  3000               	movlw	0
 12714  0C7A  0021               	movlb	1	; select bank1
 12715  0C7B  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12716  0C7C  0022               	movlb	2	; select bank2
 12717  0C7D  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 12718  0C7E  3064               	movlw	100
 12719  0C7F  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12720  0C80  3023               	movlw	35
 12721  0C81  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 12722  0C82  082C               	movf	(??_P2PTasks+2)^(0+256),w
 12723  0C83  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 12724  0C84  0086               	movwf	6
 12725  0C85  082D               	movf	(??_P2PTasks+3)^(0+256),w
 12726  0C86  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 12727  0C87  0087               	movwf	7
 12728  0C88  1F81               	btfss	1,7
 12729  0C89  2D38               	goto	l6835
 12730                           
 12731                           ;miwi_p2p.c: 681: {
 12732                           ;miwi_p2p.c: 683: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 12733  0C8A  0023               	movlb	3	; select bank3
 12734  0C8B  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 12735  0C8C  0021               	movlb	1	; select bank1
 12736  0C8D  00AE               	movwf	(isSameAddress@Address1+1)^(0+128)
 12737  0C8E  0023               	movlb	3	; select bank3
 12738  0C8F  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 12739  0C90  0021               	movlb	1	; select bank1
 12740  0C91  00AD               	movwf	isSameAddress@Address1^(0+128)
 12741  0C92  0022               	movlb	2	; select bank2
 12742  0C93  0843               	movf	P2PTasks@i^(0+256),w
 12743  0C94  00AA               	movwf	??_P2PTasks^(0+256)
 12744  0C95  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12745  0C96  082A               	movf	??_P2PTasks^(0+256),w
 12746  0C97  0021               	movlb	1	; select bank1
 12747  0C98  00A7               	movwf	___wmul@multiplier^(0+128)
 12748  0C99  0022               	movlb	2	; select bank2
 12749  0C9A  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12750  0C9B  0021               	movlb	1	; select bank1
 12751  0C9C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12752  0C9D  300E               	movlw	14
 12753  0C9E  00A9               	movwf	___wmul@multiplicand^(0+128)
 12754  0C9F  3000               	movlw	0
 12755  0CA0  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12756  0CA1  31B6  26A4  3188   	fcall	___wmul
 12757  0CA4  0021               	movlb	1	; select bank1
 12758  0CA5  0827               	movf	?___wmul^(0+128),w
 12759  0CA6  3E04               	addlw	4
 12760  0CA7  0022               	movlb	2	; select bank2
 12761  0CA8  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12762  0CA9  3000               	movlw	0
 12763  0CAA  0021               	movlb	1	; select bank1
 12764  0CAB  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12765  0CAC  0022               	movlb	2	; select bank2
 12766  0CAD  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 12767  0CAE  3064               	movlw	100
 12768  0CAF  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12769  0CB0  3023               	movlw	35
 12770  0CB1  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 12771  0CB2  082C               	movf	(??_P2PTasks+2)^(0+256),w
 12772  0CB3  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 12773  0CB4  0021               	movlb	1	; select bank1
 12774  0CB5  00AF               	movwf	isSameAddress@Address2^(0+128)
 12775  0CB6  0022               	movlb	2	; select bank2
 12776  0CB7  082D               	movf	(??_P2PTasks+3)^(0+256),w
 12777  0CB8  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 12778  0CB9  0021               	movlb	1	; select bank1
 12779  0CBA  00B0               	movwf	(isSameAddress@Address2+1)^(0+128)
 12780  0CBB  31A8  2078  3188   	fcall	_isSameAddress
 12781  0CBE  3A00               	xorlw	0
 12782  0CBF  1903               	skipnz
 12783  0CC0  2D38               	goto	l6835
 12784                           
 12785                           ;miwi_p2p.c: 684: {
 12786                           ;miwi_p2p.c: 687: ConnectionTable[i].status.Val = 0;
 12787  0CC1  0022               	movlb	2	; select bank2
 12788  0CC2  0843               	movf	P2PTasks@i^(0+256),w
 12789  0CC3  00AA               	movwf	??_P2PTasks^(0+256)
 12790  0CC4  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12791  0CC5  082A               	movf	??_P2PTasks^(0+256),w
 12792  0CC6  0021               	movlb	1	; select bank1
 12793  0CC7  00A7               	movwf	___wmul@multiplier^(0+128)
 12794  0CC8  0022               	movlb	2	; select bank2
 12795  0CC9  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12796  0CCA  0021               	movlb	1	; select bank1
 12797  0CCB  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12798  0CCC  300E               	movlw	14
 12799  0CCD  00A9               	movwf	___wmul@multiplicand^(0+128)
 12800  0CCE  3000               	movlw	0
 12801  0CCF  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12802  0CD0  31B6  26A4  3188   	fcall	___wmul
 12803  0CD3  0021               	movlb	1	; select bank1
 12804  0CD4  0827               	movf	?___wmul^(0+128),w
 12805  0CD5  3E0C               	addlw	12
 12806  0CD6  0022               	movlb	2	; select bank2
 12807  0CD7  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12808  0CD8  3000               	movlw	0
 12809  0CD9  0021               	movlb	1	; select bank1
 12810  0CDA  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12811  0CDB  0022               	movlb	2	; select bank2
 12812  0CDC  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 12813  0CDD  3064               	movlw	100
 12814  0CDE  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12815  0CDF  3023               	movlw	35
 12816  0CE0  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 12817  0CE1  082C               	movf	(??_P2PTasks+2)^(0+256),w
 12818  0CE2  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 12819  0CE3  0086               	movwf	6
 12820  0CE4  082D               	movf	(??_P2PTasks+3)^(0+256),w
 12821  0CE5  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 12822  0CE6  0087               	movwf	7
 12823  0CE7  0181               	clrf	1
 12824                           
 12825                           ;miwi_p2p.c: 689: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12826  0CE8  0843               	movf	P2PTasks@i^(0+256),w
 12827  0CE9  00AA               	movwf	??_P2PTasks^(0+256)
 12828  0CEA  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 12829  0CEB  082A               	movf	??_P2PTasks^(0+256),w
 12830  0CEC  0021               	movlb	1	; select bank1
 12831  0CED  00A7               	movwf	___wmul@multiplier^(0+128)
 12832  0CEE  0022               	movlb	2	; select bank2
 12833  0CEF  082B               	movf	(??_P2PTasks+1)^(0+256),w
 12834  0CF0  0021               	movlb	1	; select bank1
 12835  0CF1  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12836  0CF2  300E               	movlw	14
 12837  0CF3  00A9               	movwf	___wmul@multiplicand^(0+128)
 12838  0CF4  3000               	movlw	0
 12839  0CF5  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12840  0CF6  31B6  26A4  3188   	fcall	___wmul
 12841  0CF9  3064               	movlw	100
 12842  0CFA  0022               	movlb	2	; select bank2
 12843  0CFB  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 12844  0CFC  3023               	movlw	35
 12845  0CFD  00AD               	movwf	((??_P2PTasks+2)^(0+256)+1)
 12846  0CFE  0021               	movlb	1	; select bank1
 12847  0CFF  0827               	movf	?___wmul^(0+128),w
 12848  0D00  0022               	movlb	2	; select bank2
 12849  0D01  072C               	addwf	(??_P2PTasks+2)^(0+256),w
 12850  0D02  0021               	movlb	1	; select bank1
 12851  0D03  00AD               	movwf	NVMWrite@source^(0+128)
 12852  0D04  0828               	movf	(?___wmul+1)^(0+128),w
 12853  0D05  0022               	movlb	2	; select bank2
 12854  0D06  3D2D               	addwfc	(??_P2PTasks+3)^(0+256),w
 12855  0D07  0021               	movlb	1	; select bank1
 12856  0D08  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 12857  0D09  0022               	movlb	2	; select bank2
 12858  0D0A  0843               	movf	P2PTasks@i^(0+256),w
 12859  0D0B  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 12860  0D0C  01AF               	clrf	((??_P2PTasks+4)^(0+256)+1)
 12861  0D0D  082E               	movf	(??_P2PTasks+4)^(0+256),w
 12862  0D0E  0021               	movlb	1	; select bank1
 12863  0D0F  00A7               	movwf	___wmul@multiplier^(0+128)
 12864  0D10  0022               	movlb	2	; select bank2
 12865  0D11  082F               	movf	(??_P2PTasks+5)^(0+256),w
 12866  0D12  0021               	movlb	1	; select bank1
 12867  0D13  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12868  0D14  300E               	movlw	14
 12869  0D15  00A9               	movwf	___wmul@multiplicand^(0+128)
 12870  0D16  3000               	movlw	0
 12871  0D17  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12872  0D18  31B6  26A4  3188   	fcall	___wmul
 12873  0D1B  0020               	movlb	0	; select bank0
 12874  0D1C  0868               	movf	_nvmConnectionTable,w
 12875  0D1D  0021               	movlb	1	; select bank1
 12876  0D1E  0727               	addwf	?___wmul^(0+128),w
 12877  0D1F  00AF               	movwf	NVMWrite@addr^(0+128)
 12878  0D20  0020               	movlb	0	; select bank0
 12879  0D21  0869               	movf	_nvmConnectionTable+1,w
 12880  0D22  0021               	movlb	1	; select bank1
 12881  0D23  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12882  0D24  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 12883  0D25  300E               	movlw	14
 12884  0D26  00B1               	movwf	NVMWrite@count^(0+128)
 12885  0D27  3000               	movlw	0
 12886  0D28  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 12887  0D29  31A3  239F  3188   	fcall	_NVMWrite
 12888                           
 12889                           ;miwi_p2p.c: 691: TxBuffer[TxData++] = 0x00;
 12890  0D2C  0022               	movlb	2	; select bank2
 12891  0D2D  086E               	movf	_TxData^(0+256),w
 12892  0D2E  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12893  0D2F  0086               	movwf	6
 12894  0D30  3002               	movlw	2	; select bank4/5
 12895  0D31  0087               	movwf	7
 12896  0D32  0181               	clrf	1
 12897  0D33  3001               	movlw	1
 12898  0D34  00AA               	movwf	??_P2PTasks^(0+256)
 12899  0D35  082A               	movf	??_P2PTasks^(0+256),w
 12900  0D36  07EE               	addwf	_TxData^(0+256),f
 12901                           
 12902                           ;miwi_p2p.c: 693: break;
 12903  0D37  2D41               	goto	l6839
 12904  0D38                     l6835:	
 12905  0D38  3001               	movlw	1
 12906  0D39  0022               	movlb	2	; select bank2
 12907  0D3A  00AA               	movwf	??_P2PTasks^(0+256)
 12908  0D3B  082A               	movf	??_P2PTasks^(0+256),w
 12909  0D3C  07C3               	addwf	P2PTasks@i^(0+256),f
 12910  0D3D  300A               	movlw	10
 12911  0D3E  0243               	subwf	P2PTasks@i^(0+256),w
 12912  0D3F  1C03               	skipc
 12913  0D40  2C63               	goto	l6825
 12914  0D41                     l6839:	
 12915                           
 12916                           ;miwi_p2p.c: 694: }
 12917                           ;miwi_p2p.c: 695: }
 12918                           ;miwi_p2p.c: 696: }
 12919                           ;miwi_p2p.c: 698: MiMAC_DiscardPacket();
 12920  0D41  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 12921                           
 12922                           ;miwi_p2p.c: 700: if( i == 10 )
 12923  0D44  300A               	movlw	10
 12924  0D45  0022               	movlb	2	; select bank2
 12925  0D46  0643               	xorwf	P2PTasks@i^(0+256),w
 12926  0D47  1D03               	btfss	3,2
 12927  0D48  2D56               	goto	l6847
 12928                           
 12929                           ;miwi_p2p.c: 701: {
 12930                           ;miwi_p2p.c: 703: TxBuffer[TxData++] = 0xF0;
 12931  0D49  30F0               	movlw	240
 12932  0D4A  00AA               	movwf	??_P2PTasks^(0+256)
 12933  0D4B  086E               	movf	_TxData^(0+256),w
 12934  0D4C  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12935  0D4D  0086               	movwf	6
 12936  0D4E  3002               	movlw	2	; select bank4/5
 12937  0D4F  0087               	movwf	7
 12938  0D50  082A               	movf	??_P2PTasks^(0+256),w
 12939  0D51  0081               	movwf	1
 12940  0D52  3001               	movlw	1
 12941  0D53  00AA               	movwf	??_P2PTasks^(0+256)
 12942  0D54  082A               	movf	??_P2PTasks^(0+256),w
 12943  0D55  07EE               	addwf	_TxData^(0+256),f
 12944  0D56                     l6847:	
 12945                           
 12946                           ;miwi_p2p.c: 704: }
 12947                           ;miwi_p2p.c: 715: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 12948  0D56  0023               	movlb	3	; select bank3
 12949  0D57  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 12950  0D58  0021               	movlb	1	; select bank1
 12951  0D59  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 12952  0D5A  0023               	movlb	3	; select bank3
 12953  0D5B  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 12954  0D5C  0021               	movlb	1	; select bank1
 12955  0D5D  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 12956  0D5E  01D8               	clrf	SendPacket@isCommand^(0+128)
 12957  0D5F  0AD8               	incf	SendPacket@isCommand^(0+128),f
 12958  0D60  3000               	movlw	0
 12959  0D61  0023               	movlb	3	; select bank3
 12960  0D62  19A0               	btfsc	_rxMessage^(0+384),3
 12961  0D63  3001               	movlw	1
 12962  0D64  0021               	movlb	1	; select bank1
 12963  0D65  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 12964  0D66  3000               	movlw	0
 12965  0D67  31AB  2390  3188   	fcall	_SendPacket
 12966                           
 12967                           ;miwi_p2p.c: 719: }
 12968                           ;miwi_p2p.c: 720: break;
 12969  0D6A  2FF5               	goto	l6951
 12970  0D6B                     l6849:	
 12971                           ;miwi_p2p.c: 726: {
 12972                           ;miwi_p2p.c: 727: case 0x00:
 12973                           
 12974                           ;miwi_p2p.c: 724: {
 12975                           ;miwi_p2p.c: 725: switch( rxMessage.Payload[1] )
 12976                           
 12977                           ;miwi_p2p.c: 723: case 0x91:
 12978                           
 12979                           
 12980                           ;miwi_p2p.c: 728: case 0x01:
 12981                           ;miwi_p2p.c: 742: AddConnection();
 12982  0D6B  3190  2015  3188   	fcall	_AddConnection
 12983                           
 12984                           ;miwi_p2p.c: 744: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
 12985  0D6E  0023               	movlb	3	; select bank3
 12986  0D6F  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 12987  0D70  0086               	movwf	6
 12988  0D71  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 12989  0D72  0087               	movwf	7
 12990  0D73  3142               	addfsr 1,2
 12991  0D74  0801               	movf	1,w
 12992  0D75  0022               	movlb	2	; select bank2
 12993  0D76  00AA               	movwf	??_P2PTasks^(0+256)
 12994  0D77  082A               	movf	??_P2PTasks^(0+256),w
 12995  0D78  0020               	movlb	0	; select bank0
 12996  0D79  00EC               	movwf	_myConnectionIndex_in_PanCo
 12997                           
 12998                           ;miwi_p2p.c: 745: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
 12999  0D7A  306C               	movlw	low _myConnectionIndex_in_PanCo
 13000  0D7B  0021               	movlb	1	; select bank1
 13001  0D7C  00AD               	movwf	NVMWrite@source^(0+128)
 13002  0D7D  3000               	movlw	high _myConnectionIndex_in_PanCo
 13003  0D7E  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 13004  0D7F  0023               	movlb	3	; select bank3
 13005  0D80  0866               	movf	(_nvmmyIndex+1)^(0+384),w
 13006  0D81  0021               	movlb	1	; select bank1
 13007  0D82  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 13008  0D83  0023               	movlb	3	; select bank3
 13009  0D84  0865               	movf	_nvmmyIndex^(0+384),w
 13010  0D85  0021               	movlb	1	; select bank1
 13011  0D86  00AF               	movwf	NVMWrite@addr^(0+128)
 13012  0D87  3001               	movlw	1
 13013  0D88  00B1               	movwf	NVMWrite@count^(0+128)
 13014  0D89  3000               	movlw	0
 13015  0D8A  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 13016  0D8B  31A3  239F  3188   	fcall	_NVMWrite
 13017                           
 13018                           ;miwi_p2p.c: 749: P2PStatus.bits.SaveConnection = 1;
 13019  0D8E  14FD               	bsf	_P2PStatus,1	;volatile
 13020                           
 13021                           ;miwi_p2p.c: 750: nvmDelayTick = MiWi_TickGet();
 13022  0D8F  31AB  23D9  3188   	fcall	_MiWi_TickGet
 13023  0D92  0021               	movlb	1	; select bank1
 13024  0D93  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 13025  0D94  0023               	movlb	3	; select bank3
 13026  0D95  00B9               	movwf	(_nvmDelayTick+3)^(0+384)
 13027  0D96  0021               	movlb	1	; select bank1
 13028  0D97  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 13029  0D98  0023               	movlb	3	; select bank3
 13030  0D99  00B8               	movwf	(_nvmDelayTick+2)^(0+384)
 13031  0D9A  0021               	movlb	1	; select bank1
 13032  0D9B  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 13033  0D9C  0023               	movlb	3	; select bank3
 13034  0D9D  00B7               	movwf	(_nvmDelayTick+1)^(0+384)
 13035  0D9E  0021               	movlb	1	; select bank1
 13036  0D9F  0820               	movf	?_MiWi_TickGet^(0+128),w
 13037  0DA0  0023               	movlb	3	; select bank3
 13038  0DA1  00B6               	movwf	_nvmDelayTick^(0+384)
 13039                           
 13040                           ;miwi_p2p.c: 755: }
 13041                           
 13042                           ;miwi_p2p.c: 754: break;
 13043                           
 13044                           ;miwi_p2p.c: 753: default:
 13045                           
 13046                           ;miwi_p2p.c: 752: break;
 13047  0DA2  2DB1               	goto	l6863
 13048  0DA3                     l6861:	
 13049  0DA3  0023               	movlb	3	; select bank3
 13050  0DA4  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13051  0DA5  0086               	movwf	6
 13052  0DA6  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13053  0DA7  0087               	movwf	7
 13054  0DA8  3141               	addfsr 1,1
 13055  0DA9  0801               	movf	1,w
 13056                           
 13057                           ; Switch size 1, requested type "space"
 13058                           ; Number of cases is 2, Range of values is 0 to 1
 13059                           ; switch strategies available:
 13060                           ; Name         Instructions Cycles
 13061                           ; simple_byte            7     4 (average)
 13062                           ; direct_byte           10     6 (fixed)
 13063                           ; jumptable            260     6 (fixed)
 13064                           ;	Chosen strategy is simple_byte
 13065  0DAA  3A00               	xorlw	0	; case 0
 13066  0DAB  1903               	skipnz
 13067  0DAC  2D6B               	goto	l6849
 13068  0DAD  3A01               	xorlw	1	; case 1
 13069  0DAE  1903               	skipnz
 13070  0DAF  2D6B               	goto	l6849
 13071  0DB0  2DB1               	goto	l6863
 13072  0DB1                     l6863:	
 13073                           
 13074                           ;miwi_p2p.c: 756: }
 13075                           ;miwi_p2p.c: 757: MiMAC_DiscardPacket();
 13076  0DB1  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13077                           
 13078                           ;miwi_p2p.c: 758: break;
 13079  0DB4  2FF5               	goto	l6951
 13080  0DB5                     l491:	
 13081                           ;miwi_p2p.c: 761: case 0x97:
 13082                           
 13083                           
 13084                           ;miwi_p2p.c: 762: {
 13085                           ;miwi_p2p.c: 763: if( P2PStatus.bits.Resync )
 13086  0DB5  1EFD               	btfss	_P2PStatus,5	;volatile
 13087  0DB6  2DB8               	goto	l6867
 13088                           
 13089                           ;miwi_p2p.c: 764: {
 13090                           ;miwi_p2p.c: 765: P2PStatus.bits.Resync = 0;
 13091  0DB7  12FD               	bcf	_P2PStatus,5	;volatile
 13092  0DB8                     l6867:	
 13093                           
 13094                           ;miwi_p2p.c: 766: }
 13095                           ;miwi_p2p.c: 807: MiMAC_DiscardPacket();
 13096  0DB8  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13097                           
 13098                           ;miwi_p2p.c: 808: }
 13099                           ;miwi_p2p.c: 809: break;
 13100  0DBB  2FF5               	goto	l6951
 13101  0DBC                     l6869:	
 13102                           ;miwi_p2p.c: 812: case 0x92:
 13103                           
 13104                           
 13105                           ;miwi_p2p.c: 813: {
 13106                           ;miwi_p2p.c: 814: if( rxMessage.Payload[1] == 0x00 )
 13107  0DBC  0023               	movlb	3	; select bank3
 13108  0DBD  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13109  0DBE  0086               	movwf	6
 13110  0DBF  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13111  0DC0  0087               	movwf	7
 13112  0DC1  3141               	addfsr 1,1
 13113  0DC2  0801               	movf	1,w
 13114  0DC3  1D03               	btfss	3,2
 13115  0DC4  2E9E               	goto	l6887
 13116                           
 13117                           ;miwi_p2p.c: 815: {
 13118                           ;miwi_p2p.c: 816: for(i = 0; i < 10; i++)
 13119  0DC5  0022               	movlb	2	; select bank2
 13120  0DC6  01C3               	clrf	P2PTasks@i^(0+256)
 13121  0DC7  300A               	movlw	10
 13122  0DC8  0243               	subwf	P2PTasks@i^(0+256),w
 13123  0DC9  1803               	btfsc	3,0
 13124  0DCA  2E9E               	goto	l6887
 13125  0DCB                     l6877:	
 13126                           
 13127                           ;miwi_p2p.c: 817: {
 13128                           ;miwi_p2p.c: 819: if( ConnectionTable[i].status.bits.isValid )
 13129  0DCB  0843               	movf	P2PTasks@i^(0+256),w
 13130  0DCC  00AA               	movwf	??_P2PTasks^(0+256)
 13131  0DCD  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13132  0DCE  082A               	movf	??_P2PTasks^(0+256),w
 13133  0DCF  0021               	movlb	1	; select bank1
 13134  0DD0  00A7               	movwf	___wmul@multiplier^(0+128)
 13135  0DD1  0022               	movlb	2	; select bank2
 13136  0DD2  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13137  0DD3  0021               	movlb	1	; select bank1
 13138  0DD4  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13139  0DD5  300E               	movlw	14
 13140  0DD6  00A9               	movwf	___wmul@multiplicand^(0+128)
 13141  0DD7  3000               	movlw	0
 13142  0DD8  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13143  0DD9  31B6  26A4  3188   	fcall	___wmul
 13144  0DDC  0021               	movlb	1	; select bank1
 13145  0DDD  0827               	movf	?___wmul^(0+128),w
 13146  0DDE  3E0C               	addlw	12
 13147  0DDF  0022               	movlb	2	; select bank2
 13148  0DE0  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13149  0DE1  3000               	movlw	0
 13150  0DE2  0021               	movlb	1	; select bank1
 13151  0DE3  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13152  0DE4  0022               	movlb	2	; select bank2
 13153  0DE5  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13154  0DE6  3064               	movlw	100
 13155  0DE7  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13156  0DE8  3023               	movlw	35
 13157  0DE9  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13158  0DEA  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13159  0DEB  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13160  0DEC  0086               	movwf	6
 13161  0DED  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13162  0DEE  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13163  0DEF  0087               	movwf	7
 13164  0DF0  1F81               	btfss	1,7
 13165  0DF1  2E95               	goto	l6883
 13166                           
 13167                           ;miwi_p2p.c: 820: {
 13168                           ;miwi_p2p.c: 822: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 13169  0DF2  0023               	movlb	3	; select bank3
 13170  0DF3  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13171  0DF4  0021               	movlb	1	; select bank1
 13172  0DF5  00AE               	movwf	(isSameAddress@Address1+1)^(0+128)
 13173  0DF6  0023               	movlb	3	; select bank3
 13174  0DF7  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13175  0DF8  0021               	movlb	1	; select bank1
 13176  0DF9  00AD               	movwf	isSameAddress@Address1^(0+128)
 13177  0DFA  0022               	movlb	2	; select bank2
 13178  0DFB  0843               	movf	P2PTasks@i^(0+256),w
 13179  0DFC  00AA               	movwf	??_P2PTasks^(0+256)
 13180  0DFD  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13181  0DFE  082A               	movf	??_P2PTasks^(0+256),w
 13182  0DFF  0021               	movlb	1	; select bank1
 13183  0E00  00A7               	movwf	___wmul@multiplier^(0+128)
 13184  0E01  0022               	movlb	2	; select bank2
 13185  0E02  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13186  0E03  0021               	movlb	1	; select bank1
 13187  0E04  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13188  0E05  300E               	movlw	14
 13189  0E06  00A9               	movwf	___wmul@multiplicand^(0+128)
 13190  0E07  3000               	movlw	0
 13191  0E08  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13192  0E09  31B6  26A4  3188   	fcall	___wmul
 13193  0E0C  0021               	movlb	1	; select bank1
 13194  0E0D  0827               	movf	?___wmul^(0+128),w
 13195  0E0E  3E04               	addlw	4
 13196  0E0F  0022               	movlb	2	; select bank2
 13197  0E10  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13198  0E11  3000               	movlw	0
 13199  0E12  0021               	movlb	1	; select bank1
 13200  0E13  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13201  0E14  0022               	movlb	2	; select bank2
 13202  0E15  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13203  0E16  3064               	movlw	100
 13204  0E17  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13205  0E18  3023               	movlw	35
 13206  0E19  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13207  0E1A  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13208  0E1B  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13209  0E1C  0021               	movlb	1	; select bank1
 13210  0E1D  00AF               	movwf	isSameAddress@Address2^(0+128)
 13211  0E1E  0022               	movlb	2	; select bank2
 13212  0E1F  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13213  0E20  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13214  0E21  0021               	movlb	1	; select bank1
 13215  0E22  00B0               	movwf	(isSameAddress@Address2+1)^(0+128)
 13216  0E23  31A8  2078  3188   	fcall	_isSameAddress
 13217  0E26  3A00               	xorlw	0
 13218  0E27  1903               	skipnz
 13219  0E28  2E95               	goto	l6883
 13220                           
 13221                           ;miwi_p2p.c: 823: {
 13222                           ;miwi_p2p.c: 825: ConnectionTable[i].status.Val = 0;
 13223  0E29  0022               	movlb	2	; select bank2
 13224  0E2A  0843               	movf	P2PTasks@i^(0+256),w
 13225  0E2B  00AA               	movwf	??_P2PTasks^(0+256)
 13226  0E2C  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13227  0E2D  082A               	movf	??_P2PTasks^(0+256),w
 13228  0E2E  0021               	movlb	1	; select bank1
 13229  0E2F  00A7               	movwf	___wmul@multiplier^(0+128)
 13230  0E30  0022               	movlb	2	; select bank2
 13231  0E31  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13232  0E32  0021               	movlb	1	; select bank1
 13233  0E33  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13234  0E34  300E               	movlw	14
 13235  0E35  00A9               	movwf	___wmul@multiplicand^(0+128)
 13236  0E36  3000               	movlw	0
 13237  0E37  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13238  0E38  31B6  26A4  3188   	fcall	___wmul
 13239  0E3B  0021               	movlb	1	; select bank1
 13240  0E3C  0827               	movf	?___wmul^(0+128),w
 13241  0E3D  3E0C               	addlw	12
 13242  0E3E  0022               	movlb	2	; select bank2
 13243  0E3F  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13244  0E40  3000               	movlw	0
 13245  0E41  0021               	movlb	1	; select bank1
 13246  0E42  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13247  0E43  0022               	movlb	2	; select bank2
 13248  0E44  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13249  0E45  3064               	movlw	100
 13250  0E46  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13251  0E47  3023               	movlw	35
 13252  0E48  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13253  0E49  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13254  0E4A  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13255  0E4B  0086               	movwf	6
 13256  0E4C  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13257  0E4D  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13258  0E4E  0087               	movwf	7
 13259  0E4F  0181               	clrf	1
 13260                           
 13261                           ;miwi_p2p.c: 827: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 13262  0E50  0843               	movf	P2PTasks@i^(0+256),w
 13263  0E51  00AA               	movwf	??_P2PTasks^(0+256)
 13264  0E52  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13265  0E53  082A               	movf	??_P2PTasks^(0+256),w
 13266  0E54  0021               	movlb	1	; select bank1
 13267  0E55  00A7               	movwf	___wmul@multiplier^(0+128)
 13268  0E56  0022               	movlb	2	; select bank2
 13269  0E57  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13270  0E58  0021               	movlb	1	; select bank1
 13271  0E59  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13272  0E5A  300E               	movlw	14
 13273  0E5B  00A9               	movwf	___wmul@multiplicand^(0+128)
 13274  0E5C  3000               	movlw	0
 13275  0E5D  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13276  0E5E  31B6  26A4  3188   	fcall	___wmul
 13277  0E61  3064               	movlw	100
 13278  0E62  0022               	movlb	2	; select bank2
 13279  0E63  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13280  0E64  3023               	movlw	35
 13281  0E65  00AD               	movwf	((??_P2PTasks+2)^(0+256)+1)
 13282  0E66  0021               	movlb	1	; select bank1
 13283  0E67  0827               	movf	?___wmul^(0+128),w
 13284  0E68  0022               	movlb	2	; select bank2
 13285  0E69  072C               	addwf	(??_P2PTasks+2)^(0+256),w
 13286  0E6A  0021               	movlb	1	; select bank1
 13287  0E6B  00AD               	movwf	NVMWrite@source^(0+128)
 13288  0E6C  0828               	movf	(?___wmul+1)^(0+128),w
 13289  0E6D  0022               	movlb	2	; select bank2
 13290  0E6E  3D2D               	addwfc	(??_P2PTasks+3)^(0+256),w
 13291  0E6F  0021               	movlb	1	; select bank1
 13292  0E70  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 13293  0E71  0022               	movlb	2	; select bank2
 13294  0E72  0843               	movf	P2PTasks@i^(0+256),w
 13295  0E73  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13296  0E74  01AF               	clrf	((??_P2PTasks+4)^(0+256)+1)
 13297  0E75  082E               	movf	(??_P2PTasks+4)^(0+256),w
 13298  0E76  0021               	movlb	1	; select bank1
 13299  0E77  00A7               	movwf	___wmul@multiplier^(0+128)
 13300  0E78  0022               	movlb	2	; select bank2
 13301  0E79  082F               	movf	(??_P2PTasks+5)^(0+256),w
 13302  0E7A  0021               	movlb	1	; select bank1
 13303  0E7B  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13304  0E7C  300E               	movlw	14
 13305  0E7D  00A9               	movwf	___wmul@multiplicand^(0+128)
 13306  0E7E  3000               	movlw	0
 13307  0E7F  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13308  0E80  31B6  26A4  3188   	fcall	___wmul
 13309  0E83  0020               	movlb	0	; select bank0
 13310  0E84  0868               	movf	_nvmConnectionTable,w
 13311  0E85  0021               	movlb	1	; select bank1
 13312  0E86  0727               	addwf	?___wmul^(0+128),w
 13313  0E87  00AF               	movwf	NVMWrite@addr^(0+128)
 13314  0E88  0020               	movlb	0	; select bank0
 13315  0E89  0869               	movf	_nvmConnectionTable+1,w
 13316  0E8A  0021               	movlb	1	; select bank1
 13317  0E8B  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13318  0E8C  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 13319  0E8D  300E               	movlw	14
 13320  0E8E  00B1               	movwf	NVMWrite@count^(0+128)
 13321  0E8F  3000               	movlw	0
 13322  0E90  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 13323  0E91  31A3  239F  3188   	fcall	_NVMWrite
 13324                           
 13325                           ;miwi_p2p.c: 829: break;
 13326  0E94  2E9E               	goto	l6887
 13327  0E95                     l6883:	
 13328  0E95  3001               	movlw	1
 13329  0E96  0022               	movlb	2	; select bank2
 13330  0E97  00AA               	movwf	??_P2PTasks^(0+256)
 13331  0E98  082A               	movf	??_P2PTasks^(0+256),w
 13332  0E99  07C3               	addwf	P2PTasks@i^(0+256),f
 13333  0E9A  300A               	movlw	10
 13334  0E9B  0243               	subwf	P2PTasks@i^(0+256),w
 13335  0E9C  1C03               	skipc
 13336  0E9D  2DCB               	goto	l6877
 13337  0E9E                     l6887:	
 13338                           
 13339                           ;miwi_p2p.c: 830: }
 13340                           ;miwi_p2p.c: 831: }
 13341                           ;miwi_p2p.c: 832: }
 13342                           ;miwi_p2p.c: 833: }
 13343                           ;miwi_p2p.c: 834: }
 13344                           ;miwi_p2p.c: 835: MiMAC_DiscardPacket();
 13345  0E9E  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13346                           
 13347                           ;miwi_p2p.c: 836: break;
 13348  0EA1  2FF5               	goto	l6951
 13349  0EA2                     l6889:	
 13350                           ;miwi_p2p.c: 1011: case 0xDA:
 13351                           
 13352                           
 13353                           ;miwi_p2p.c: 1012: {
 13354                           ;miwi_p2p.c: 1013: if (!role)
 13355  0EA2  0022               	movlb	2	; select bank2
 13356  0EA3  086F               	movf	_role^(0+256),w
 13357  0EA4  1D03               	btfss	3,2
 13358  0EA5  2EAD               	goto	l6895
 13359                           
 13360                           ;miwi_p2p.c: 1014: {
 13361                           ;miwi_p2p.c: 1015: rec_ack = 1;
 13362  0EA6  0020               	movlb	0	; select bank0
 13363  0EA7  01E5               	clrf	_rec_ack
 13364  0EA8  0AE5               	incf	_rec_ack,f
 13365                           
 13366                           ;miwi_p2p.c: 1016: MiMAC_DiscardPacket();
 13367  0EA9  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13368                           
 13369                           ;miwi_p2p.c: 1017: }
 13370  0EAC  2FF5               	goto	l6951
 13371  0EAD                     l6895:	
 13372                           
 13373                           ;miwi_p2p.c: 1018: else
 13374                           ;miwi_p2p.c: 1019: {
 13375                           ;miwi_p2p.c: 1020: MiMAC_DiscardPacket();
 13376  0EAD  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13377                           
 13378                           ;miwi_p2p.c: 1021: }
 13379                           ;miwi_p2p.c: 1022: }
 13380                           ;miwi_p2p.c: 1023: break;
 13381  0EB0  2FF5               	goto	l6951
 13382  0EB1                     l6897:	
 13383                           ;miwi_p2p.c: 1024: case 0x77:
 13384                           
 13385                           
 13386                           ;miwi_p2p.c: 1025: {
 13387                           ;miwi_p2p.c: 1026: if (!role)
 13388  0EB1  0022               	movlb	2	; select bank2
 13389  0EB2  086F               	movf	_role^(0+256),w
 13390  0EB3  1D03               	btfss	3,2
 13391  0EB4  2ED1               	goto	l6905
 13392                           
 13393                           ;miwi_p2p.c: 1027: {
 13394                           ;miwi_p2p.c: 1029: end_nodes = rxMessage.Payload[1]-1;
 13395  0EB5  0023               	movlb	3	; select bank3
 13396  0EB6  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13397  0EB7  0086               	movwf	6
 13398  0EB8  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13399  0EB9  0087               	movwf	7
 13400  0EBA  3141               	addfsr 1,1
 13401  0EBB  0801               	movf	1,w
 13402  0EBC  3EFF               	addlw	255
 13403  0EBD  0022               	movlb	2	; select bank2
 13404  0EBE  00AA               	movwf	??_P2PTasks^(0+256)
 13405  0EBF  082A               	movf	??_P2PTasks^(0+256),w
 13406  0EC0  0020               	movlb	0	; select bank0
 13407  0EC1  00E2               	movwf	_end_nodes
 13408                           
 13409                           ;miwi_p2p.c: 1030: store_connection_tb(rxMessage.Payload);
 13410  0EC2  0023               	movlb	3	; select bank3
 13411  0EC3  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13412  0EC4  0021               	movlb	1	; select bank1
 13413  0EC5  00A5               	movwf	(store_connection_tb@payload+1)^(0+128)
 13414  0EC6  0023               	movlb	3	; select bank3
 13415  0EC7  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13416  0EC8  0021               	movlb	1	; select bank1
 13417  0EC9  00A4               	movwf	store_connection_tb@payload^(0+128)
 13418  0ECA  31A6  2608  3188   	fcall	_store_connection_tb
 13419                           
 13420                           ;miwi_p2p.c: 1031: MiMAC_DiscardPacket();
 13421  0ECD  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13422                           
 13423                           ;miwi_p2p.c: 1032: }
 13424  0ED0  2FF5               	goto	l6951
 13425  0ED1                     l6905:	
 13426                           
 13427                           ;miwi_p2p.c: 1033: else
 13428                           ;miwi_p2p.c: 1034: MiMAC_DiscardPacket();
 13429  0ED1  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13430                           
 13431                           ;miwi_p2p.c: 1035: }
 13432                           ;miwi_p2p.c: 1036: break;
 13433  0ED4  2FF5               	goto	l6951
 13434  0ED5                     l6907:	
 13435                           ;miwi_p2p.c: 1038: case 0xCC:
 13436                           
 13437                           
 13438                           ;miwi_p2p.c: 1039: {
 13439                           ;miwi_p2p.c: 1040: if (role)
 13440  0ED5  0022               	movlb	2	; select bank2
 13441  0ED6  086F               	movf	_role^(0+256),w
 13442  0ED7  1903               	btfsc	3,2
 13443  0ED8  2F18               	goto	l6921
 13444                           
 13445                           ;miwi_p2p.c: 1041: {
 13446                           ;miwi_p2p.c: 1043: uint8_t final_index;
 13447                           ;miwi_p2p.c: 1044: final_index = Find_Index(rxMessage.Payload);
 13448  0ED9  0023               	movlb	3	; select bank3
 13449  0EDA  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13450  0EDB  0021               	movlb	1	; select bank1
 13451  0EDC  00AE               	movwf	(Find_Index@DestAddr+1)^(0+128)
 13452  0EDD  0023               	movlb	3	; select bank3
 13453  0EDE  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13454  0EDF  0021               	movlb	1	; select bank1
 13455  0EE0  00AD               	movwf	Find_Index@DestAddr^(0+128)
 13456  0EE1  31A7  2751  3188   	fcall	_Find_Index
 13457  0EE4  0022               	movlb	2	; select bank2
 13458  0EE5  00AA               	movwf	??_P2PTasks^(0+256)
 13459  0EE6  082A               	movf	??_P2PTasks^(0+256),w
 13460  0EE7  00BB               	movwf	P2PTasks@final_index^(0+256)
 13461                           
 13462                           ;miwi_p2p.c: 1045: if (final_index != 0xFF)
 13463  0EE8  0A3B               	incf	P2PTasks@final_index^(0+256),w
 13464  0EE9  1903               	btfsc	3,2
 13465  0EEA  2F06               	goto	l6915
 13466                           
 13467                           ;miwi_p2p.c: 1046: {
 13468                           ;miwi_p2p.c: 1047: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
 13469  0EEB  0023               	movlb	3	; select bank3
 13470  0EEC  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13471  0EED  0022               	movlb	2	; select bank2
 13472  0EEE  00A1               	movwf	(Forward_Packet_PANCr_to_EDy@fw_payload+1)^(0+256)
 13473  0EEF  0023               	movlb	3	; select bank3
 13474  0EF0  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13475  0EF1  0022               	movlb	2	; select bank2
 13476  0EF2  00A0               	movwf	Forward_Packet_PANCr_to_EDy@fw_payload^(0+256)
 13477  0EF3  083B               	movf	P2PTasks@final_index^(0+256),w
 13478  0EF4  00AA               	movwf	??_P2PTasks^(0+256)
 13479  0EF5  082A               	movf	??_P2PTasks^(0+256),w
 13480  0EF6  00A2               	movwf	Forward_Packet_PANCr_to_EDy@index^(0+256)
 13481  0EF7  0023               	movlb	3	; select bank3
 13482  0EF8  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13483  0EF9  0022               	movlb	2	; select bank2
 13484  0EFA  00A4               	movwf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+256)
 13485  0EFB  0023               	movlb	3	; select bank3
 13486  0EFC  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13487  0EFD  0022               	movlb	2	; select bank2
 13488  0EFE  00A3               	movwf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+256)
 13489  0EFF  31A2  22BD  3188   	fcall	_Forward_Packet_PANCr_to_EDy
 13490  0F02  0022               	movlb	2	; select bank2
 13491  0F03  00AB               	movwf	(??_P2PTasks+1)^(0+256)
 13492  0F04  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13493  0F05  00B6               	movwf	P2PTasks@FW_Stat^(0+256)
 13494  0F06                     l6915:	
 13495                           
 13496                           ;miwi_p2p.c: 1048: }
 13497                           ;miwi_p2p.c: 1050: if (FW_Stat)
 13498  0F06  0836               	movf	P2PTasks@FW_Stat^(0+256),w
 13499  0F07  1903               	btfsc	3,2
 13500  0F08  2F14               	goto	l6919
 13501                           
 13502                           ;miwi_p2p.c: 1051: {
 13503                           ;miwi_p2p.c: 1052: SW_Ack_SrED (rxMessage.SourceAddress);
 13504  0F09  0023               	movlb	3	; select bank3
 13505  0F0A  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13506  0F0B  0021               	movlb	1	; select bank1
 13507  0F0C  00E3               	movwf	(SW_Ack_SrED@Dest_Addr+1)^(0+128)
 13508  0F0D  0023               	movlb	3	; select bank3
 13509  0F0E  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13510  0F0F  0021               	movlb	1	; select bank1
 13511  0F10  00E2               	movwf	SW_Ack_SrED@Dest_Addr^(0+128)
 13512  0F11  31B7  2755  3188   	fcall	_SW_Ack_SrED
 13513  0F14                     l6919:	
 13514                           
 13515                           ;miwi_p2p.c: 1053: }
 13516                           ;miwi_p2p.c: 1055: MiMAC_DiscardPacket();
 13517  0F14  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13518                           
 13519                           ;miwi_p2p.c: 1056: }
 13520  0F17  2FF5               	goto	l6951
 13521  0F18                     l6921:	
 13522                           
 13523                           ;miwi_p2p.c: 1058: else
 13524                           ;miwi_p2p.c: 1059: MiMAC_DiscardPacket();
 13525  0F18  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13526                           
 13527                           ;miwi_p2p.c: 1060: }
 13528                           ;miwi_p2p.c: 1061: break;
 13529  0F1B  2FF5               	goto	l6951
 13530  0F1C                     l6923:	
 13531                           ;miwi_p2p.c: 1063: case 0x7A:
 13532                           
 13533                           
 13534                           ;miwi_p2p.c: 1064: {
 13535                           ;miwi_p2p.c: 1065: if (role)
 13536  0F1C  0022               	movlb	2	; select bank2
 13537  0F1D  086F               	movf	_role^(0+256),w
 13538  0F1E  1903               	btfsc	3,2
 13539  0F1F  2FCA               	goto	l6945
 13540                           
 13541                           ;miwi_p2p.c: 1066: {
 13542                           ;miwi_p2p.c: 1068: uint8_t p;
 13543                           ;miwi_p2p.c: 1069: for (p=0 ; p < 10 ; p++)
 13544  0F20  01C1               	clrf	P2PTasks@p_1091^(0+256)
 13545  0F21  300A               	movlw	10
 13546  0F22  0241               	subwf	P2PTasks@p_1091^(0+256),w
 13547  0F23  1803               	btfsc	3,0
 13548  0F24  2FC6               	goto	l6943
 13549  0F25                     l6931:	
 13550                           
 13551                           ;miwi_p2p.c: 1070: {
 13552                           ;miwi_p2p.c: 1071: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
 13553                           ;miwi_p2p.c: 1072: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
 13554  0F25  0023               	movlb	3	; select bank3
 13555  0F26  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13556  0F27  0086               	movwf	6
 13557  0F28  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13558  0F29  0087               	movwf	7
 13559  0F2A  0022               	movlb	2	; select bank2
 13560  0F2B  0841               	movf	P2PTasks@p_1091^(0+256),w
 13561  0F2C  00AA               	movwf	??_P2PTasks^(0+256)
 13562  0F2D  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13563  0F2E  082A               	movf	??_P2PTasks^(0+256),w
 13564  0F2F  0021               	movlb	1	; select bank1
 13565  0F30  00A7               	movwf	___wmul@multiplier^(0+128)
 13566  0F31  0022               	movlb	2	; select bank2
 13567  0F32  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13568  0F33  0021               	movlb	1	; select bank1
 13569  0F34  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13570  0F35  300E               	movlw	14
 13571  0F36  00A9               	movwf	___wmul@multiplicand^(0+128)
 13572  0F37  3000               	movlw	0
 13573  0F38  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13574  0F39  31B6  26A4  3188   	fcall	___wmul
 13575  0F3C  0021               	movlb	1	; select bank1
 13576  0F3D  0827               	movf	?___wmul^(0+128),w
 13577  0F3E  3E04               	addlw	4
 13578  0F3F  0022               	movlb	2	; select bank2
 13579  0F40  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13580  0F41  3000               	movlw	0
 13581  0F42  0021               	movlb	1	; select bank1
 13582  0F43  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13583  0F44  0022               	movlb	2	; select bank2
 13584  0F45  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13585  0F46  3064               	movlw	100
 13586  0F47  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13587  0F48  3023               	movlw	35
 13588  0F49  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13589  0F4A  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13590  0F4B  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13591  0F4C  0084               	movwf	4
 13592  0F4D  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13593  0F4E  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13594  0F4F  0085               	movwf	5
 13595  0F50  0800               	movf	0,w
 13596  0F51  0601               	xorwf	1,w
 13597  0F52  1D03               	skipz
 13598  0F53  2FBE               	goto	l6939
 13599  0F54  0023               	movlb	3	; select bank3
 13600  0F55  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13601  0F56  0086               	movwf	6
 13602  0F57  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13603  0F58  0087               	movwf	7
 13604  0F59  3141               	addfsr 1,1
 13605  0F5A  0022               	movlb	2	; select bank2
 13606  0F5B  0841               	movf	P2PTasks@p_1091^(0+256),w
 13607  0F5C  00AA               	movwf	??_P2PTasks^(0+256)
 13608  0F5D  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13609  0F5E  082A               	movf	??_P2PTasks^(0+256),w
 13610  0F5F  0021               	movlb	1	; select bank1
 13611  0F60  00A7               	movwf	___wmul@multiplier^(0+128)
 13612  0F61  0022               	movlb	2	; select bank2
 13613  0F62  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13614  0F63  0021               	movlb	1	; select bank1
 13615  0F64  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13616  0F65  300E               	movlw	14
 13617  0F66  00A9               	movwf	___wmul@multiplicand^(0+128)
 13618  0F67  3000               	movlw	0
 13619  0F68  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13620  0F69  31B6  26A4  3188   	fcall	___wmul
 13621  0F6C  0021               	movlb	1	; select bank1
 13622  0F6D  0827               	movf	?___wmul^(0+128),w
 13623  0F6E  3E05               	addlw	5
 13624  0F6F  0022               	movlb	2	; select bank2
 13625  0F70  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13626  0F71  3000               	movlw	0
 13627  0F72  0021               	movlb	1	; select bank1
 13628  0F73  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13629  0F74  0022               	movlb	2	; select bank2
 13630  0F75  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13631  0F76  3064               	movlw	100
 13632  0F77  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13633  0F78  3023               	movlw	35
 13634  0F79  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13635  0F7A  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13636  0F7B  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13637  0F7C  0084               	movwf	4
 13638  0F7D  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13639  0F7E  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13640  0F7F  0085               	movwf	5
 13641  0F80  0800               	movf	0,w
 13642  0F81  0601               	xorwf	1,w
 13643  0F82  1D03               	skipz
 13644  0F83  2FBE               	goto	l6939
 13645  0F84  0023               	movlb	3	; select bank3
 13646  0F85  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 13647  0F86  0086               	movwf	6
 13648  0F87  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 13649  0F88  0087               	movwf	7
 13650  0F89  3142               	addfsr 1,2
 13651  0F8A  0022               	movlb	2	; select bank2
 13652  0F8B  0841               	movf	P2PTasks@p_1091^(0+256),w
 13653  0F8C  00AA               	movwf	??_P2PTasks^(0+256)
 13654  0F8D  01AB               	clrf	(??_P2PTasks^(0+256)+1)
 13655  0F8E  082A               	movf	??_P2PTasks^(0+256),w
 13656  0F8F  0021               	movlb	1	; select bank1
 13657  0F90  00A7               	movwf	___wmul@multiplier^(0+128)
 13658  0F91  0022               	movlb	2	; select bank2
 13659  0F92  082B               	movf	(??_P2PTasks+1)^(0+256),w
 13660  0F93  0021               	movlb	1	; select bank1
 13661  0F94  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 13662  0F95  300E               	movlw	14
 13663  0F96  00A9               	movwf	___wmul@multiplicand^(0+128)
 13664  0F97  3000               	movlw	0
 13665  0F98  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 13666  0F99  31B6  26A4  3188   	fcall	___wmul
 13667  0F9C  0021               	movlb	1	; select bank1
 13668  0F9D  0827               	movf	?___wmul^(0+128),w
 13669  0F9E  3E06               	addlw	6
 13670  0F9F  0022               	movlb	2	; select bank2
 13671  0FA0  00AC               	movwf	(??_P2PTasks+2)^(0+256)
 13672  0FA1  3000               	movlw	0
 13673  0FA2  0021               	movlb	1	; select bank1
 13674  0FA3  3D28               	addwfc	(?___wmul+1)^(0+128),w
 13675  0FA4  0022               	movlb	2	; select bank2
 13676  0FA5  00AD               	movwf	(??_P2PTasks+3)^(0+256)
 13677  0FA6  3064               	movlw	100
 13678  0FA7  00AE               	movwf	(??_P2PTasks+4)^(0+256)
 13679  0FA8  3023               	movlw	35
 13680  0FA9  00AF               	movwf	((??_P2PTasks+4)^(0+256)+1)
 13681  0FAA  082C               	movf	(??_P2PTasks+2)^(0+256),w
 13682  0FAB  072E               	addwf	(??_P2PTasks+4)^(0+256),w
 13683  0FAC  0084               	movwf	4
 13684  0FAD  082D               	movf	(??_P2PTasks+3)^(0+256),w
 13685  0FAE  3D2F               	addwfc	(??_P2PTasks+5)^(0+256),w
 13686  0FAF  0085               	movwf	5
 13687  0FB0  0800               	movf	0,w
 13688  0FB1  0601               	xorwf	1,w
 13689  0FB2  1D03               	skipz
 13690  0FB3  2FBE               	goto	l6939
 13691                           
 13692                           ;miwi_p2p.c: 1073: {
 13693                           ;miwi_p2p.c: 1074: link_stat[p]++;
 13694  0FB4  3001               	movlw	1
 13695  0FB5  00AA               	movwf	??_P2PTasks^(0+256)
 13696  0FB6  0841               	movf	P2PTasks@p_1091^(0+256),w
 13697  0FB7  3E20               	addlw	(low (_link_stat| (0+512)))& (0+255)
 13698  0FB8  0086               	movwf	6
 13699  0FB9  3002               	movlw	2	; select bank4/5
 13700  0FBA  0087               	movwf	7
 13701  0FBB  082A               	movf	??_P2PTasks^(0+256),w
 13702  0FBC  0781               	addwf	1,f
 13703                           
 13704                           ;miwi_p2p.c: 1075: break;
 13705  0FBD  2FC6               	goto	l6943
 13706  0FBE                     l6939:	
 13707  0FBE  3001               	movlw	1
 13708  0FBF  00AA               	movwf	??_P2PTasks^(0+256)
 13709  0FC0  082A               	movf	??_P2PTasks^(0+256),w
 13710  0FC1  07C1               	addwf	P2PTasks@p_1091^(0+256),f
 13711  0FC2  300A               	movlw	10
 13712  0FC3  0241               	subwf	P2PTasks@p_1091^(0+256),w
 13713  0FC4  1C03               	skipc
 13714  0FC5  2F25               	goto	l6931
 13715  0FC6                     l6943:	
 13716                           
 13717                           ;miwi_p2p.c: 1076: }
 13718                           ;miwi_p2p.c: 1077: }
 13719                           ;miwi_p2p.c: 1078: MiMAC_DiscardPacket();
 13720  0FC6  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13721                           
 13722                           ;miwi_p2p.c: 1079: }
 13723  0FC9  2FF5               	goto	l6951
 13724  0FCA                     l6945:	
 13725                           
 13726                           ;miwi_p2p.c: 1080: else
 13727                           ;miwi_p2p.c: 1081: {
 13728                           ;miwi_p2p.c: 1082: MiMAC_DiscardPacket();
 13729  0FCA  31A8  2006  3188   	fcall	_MiMAC_DiscardPacket
 13730                           
 13731                           ;miwi_p2p.c: 1083: }
 13732                           ;miwi_p2p.c: 1085: }
 13733                           ;miwi_p2p.c: 1086: break;
 13734  0FCD  2FF5               	goto	l6951
 13735  0FCE                     l516:	
 13736                           ;miwi_p2p.c: 1091: default:
 13737                           
 13738  0FCE  2FF4               	goto	l452
 13739  0FCF                     l6949:	
 13740                           ;miwi_p2p.c: 1095: }
 13741                           
 13742                           ;miwi_p2p.c: 1094: break;
 13743                           
 13744                           ;miwi_p2p.c: 1093: P2PStatus.bits.RxHasUserData = 1;
 13745                           
 13746  0FCF  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 13747  0FD0  0086               	movwf	6
 13748  0FD1  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 13749  0FD2  0087               	movwf	7
 13750  0FD3  0801               	movf	1,w
 13751                           
 13752                           ; Switch size 1, requested type "space"
 13753                           ; Number of cases is 10, Range of values is 119 to 218
 13754                           ; switch strategies available:
 13755                           ; Name         Instructions Cycles
 13756                           ; simple_byte           31    16 (average)
 13757                           ; direct_byte          209     9 (fixed)
 13758                           ; jumptable            263     9 (fixed)
 13759                           ;	Chosen strategy is simple_byte
 13760  0FD4  3A77               	xorlw	119	; case 119
 13761  0FD5  1903               	skipnz
 13762  0FD6  2EB1               	goto	l6897
 13763  0FD7  3A0D               	xorlw	13	; case 122
 13764  0FD8  1903               	skipnz
 13765  0FD9  2F1C               	goto	l6923
 13766  0FDA  3AFB               	xorlw	251	; case 129
 13767  0FDB  1903               	skipnz
 13768  0FDC  2A92               	goto	l6685
 13769  0FDD  3A03               	xorlw	3	; case 130
 13770  0FDE  1903               	skipnz
 13771  0FDF  2C4F               	goto	l6813
 13772  0FE0  3A05               	xorlw	5	; case 135
 13773  0FE1  1903               	skipnz
 13774  0FE2  2BE5               	goto	l6779
 13775  0FE3  3A16               	xorlw	22	; case 145
 13776  0FE4  1903               	skipnz
 13777  0FE5  2DA3               	goto	l6861
 13778  0FE6  3A03               	xorlw	3	; case 146
 13779  0FE7  1903               	skipnz
 13780  0FE8  2DBC               	goto	l6869
 13781  0FE9  3A05               	xorlw	5	; case 151
 13782  0FEA  1903               	skipnz
 13783  0FEB  2DB5               	goto	l491
 13784  0FEC  3A5B               	xorlw	91	; case 204
 13785  0FED  1903               	skipnz
 13786  0FEE  2ED5               	goto	l6907
 13787  0FEF  3A16               	xorlw	22	; case 218
 13788  0FF0  1903               	skipnz
 13789  0FF1  2EA2               	goto	l6889
 13790  0FF2  2FCE               	goto	l516
 13791                           
 13792                           ;miwi_p2p.c: 1096: }
 13793  0FF3  2FF5               	goto	l6951
 13794  0FF4                     l452:	
 13795                           
 13796                           ;miwi_p2p.c: 1097: else
 13797                           ;miwi_p2p.c: 1098: {
 13798                           ;miwi_p2p.c: 1099: P2PStatus.bits.RxHasUserData = 1;
 13799  0FF4  15FD               	bsf	_P2PStatus,3	;volatile
 13800  0FF5                     l6951:	
 13801                           
 13802                           ;miwi_p2p.c: 1100: }
 13803                           ;miwi_p2p.c: 1108: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
 13804  0FF5  0023               	movlb	3	; select bank3
 13805  0FF6  0827               	movf	(_rxMessage^(0+384)+7),w
 13806  0FF7  1D03               	btfss	3,2
 13807  0FF8  1A7D               	btfsc	_P2PStatus,4	;volatile
 13808  0FF9  2FFC               	goto	l520
 13809  0FFA  1EFD               	btfss	_P2PStatus,5	;volatile
 13810  0FFB  0008               	return
 13811  0FFC                     l520:	
 13812                           
 13813                           ;miwi_p2p.c: 1109: {
 13814                           ;miwi_p2p.c: 1110: P2PStatus.bits.RxHasUserData = 0;
 13815  0FFC  11FD               	bcf	_P2PStatus,3	;volatile
 13816                           
 13817                           ;miwi_p2p.c: 1111: MiMAC_DiscardPacket();
 13818  0FFD  31A8  2006         	fcall	_MiMAC_DiscardPacket
 13819  0FFF  0008               	return
 13820  1000                     __end_of_P2PTasks:	
 13821                           
 13822                           	psect	text31
 13823  2608                     __ptext31:	
 13824 ;; *************** function _store_connection_tb *****************
 13825 ;; Defined at:
 13826 ;;		line 154 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;  payload         2    4[BANK1 ] PTR unsigned char 
 13829 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  i               1   12[BANK1 ] unsigned char 
 13832 ;;  j               1   11[BANK1 ] unsigned char 
 13833 ;;  connections_    1   10[BANK1 ] unsigned char 
 13834 ;;  k               1    0        unsigned char 
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13844 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13847 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 13848 ;;Total ram usage:        9 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:    6
 13851 ;; This function calls:
 13852 ;;		_handle_lost_connection
 13853 ;; This function is called by:
 13854 ;;		_P2PTasks
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           
 13859                           ;psect for function _store_connection_tb
 13860  2608                     _store_connection_tb:	
 13861                           
 13862                           ;miwi_p2p.c: 156: uint8_t i , j , k;
 13863                           ;miwi_p2p.c: 157: uint8_t connections_perpacket = 0;
 13864                           
 13865                           ;incstack = 0
 13866                           ; Regs used in _store_connection_tb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13867  2608  0021               	movlb	1	; select bank1
 13868  2609  01AA               	clrf	store_connection_tb@connections_perpacket^(0+128)
 13869                           
 13870                           ;miwi_p2p.c: 158: for (i=4; i < 35; i++)
 13871  260A  3004               	movlw	4
 13872  260B  00A6               	movwf	??_store_connection_tb^(0+128)
 13873  260C  0826               	movf	??_store_connection_tb^(0+128),w
 13874  260D  00AC               	movwf	store_connection_tb@i^(0+128)
 13875  260E  3023               	movlw	35
 13876  260F  022C               	subwf	store_connection_tb@i^(0+128),w
 13877  2610  1803               	btfsc	3,0
 13878  2611  2EA9               	goto	l6379
 13879  2612                     l6369:	
 13880                           
 13881                           ;miwi_p2p.c: 159: {
 13882                           ;miwi_p2p.c: 160: if (i % 4 == 0 && (i+3) < 35)
 13883  2612  082C               	movf	store_connection_tb@i^(0+128),w
 13884  2613  3903               	andlw	3
 13885  2614  1D03               	btfss	3,2
 13886  2615  2EA0               	goto	l6375
 13887  2616  082C               	movf	store_connection_tb@i^(0+128),w
 13888  2617  3E03               	addlw	3
 13889  2618  00A6               	movwf	??_store_connection_tb^(0+128)
 13890  2619  3000               	movlw	0
 13891  261A  1803               	skipnc
 13892  261B  3001               	movlw	1
 13893  261C  00A7               	movwf	(??_store_connection_tb^(0+128)+1)
 13894  261D  0827               	movf	(??_store_connection_tb+1)^(0+128),w
 13895  261E  3A80               	xorlw	128
 13896  261F  00A8               	movwf	(??_store_connection_tb+2)^(0+128)
 13897  2620  3080               	movlw	128
 13898  2621  0228               	subwf	(??_store_connection_tb+2)^(0+128),w
 13899  2622  1D03               	skipz
 13900  2623  2E26               	goto	u6645
 13901  2624  3023               	movlw	35
 13902  2625  0226               	subwf	??_store_connection_tb^(0+128),w
 13903  2626                     u6645:	
 13904  2626  1803               	skipnc
 13905  2627  2EA0               	goto	l6375
 13906                           
 13907                           ;miwi_p2p.c: 161: {
 13908                           ;miwi_p2p.c: 162: j = payload[i+3];
 13909  2628  0021               	movlb	1	; select bank1
 13910  2629  082C               	movf	store_connection_tb@i^(0+128),w
 13911  262A  3E03               	addlw	3
 13912  262B  00A6               	movwf	??_store_connection_tb^(0+128)
 13913  262C  3000               	movlw	0
 13914  262D  1803               	skipnc
 13915  262E  3001               	movlw	1
 13916  262F  00A7               	movwf	(??_store_connection_tb^(0+128)+1)
 13917  2630  0826               	movf	??_store_connection_tb^(0+128),w
 13918  2631  0724               	addwf	store_connection_tb@payload^(0+128),w
 13919  2632  0086               	movwf	6
 13920  2633  0827               	movf	(??_store_connection_tb+1)^(0+128),w
 13921  2634  3D25               	addwfc	(store_connection_tb@payload+1)^(0+128),w
 13922  2635  0087               	movwf	7
 13923  2636  0801               	movf	1,w
 13924  2637  00A8               	movwf	(??_store_connection_tb+2)^(0+128)
 13925  2638  0828               	movf	(??_store_connection_tb+2)^(0+128),w
 13926  2639  00AB               	movwf	store_connection_tb@j^(0+128)
 13927                           
 13928                           ;miwi_p2p.c: 163: END_DEVICES_Short_Address[j].connection_slot = j;
 13929  263A  082B               	movf	store_connection_tb@j^(0+128),w
 13930  263B  00A6               	movwf	??_store_connection_tb^(0+128)
 13931  263C  082B               	movf	store_connection_tb@j^(0+128),w
 13932  263D  00A7               	movwf	(??_store_connection_tb+1)^(0+128)
 13933  263E  3001               	movlw	1
 13934  263F                     u6655:	
 13935  263F  35A7               	lslf	(??_store_connection_tb+1)^(0+128),f
 13936  2640  3EFF               	addlw	-1
 13937  2641  1D03               	skipz
 13938  2642  2E3F               	goto	u6655
 13939  2643  3527               	lslf	(??_store_connection_tb+1)^(0+128),w
 13940  2644  3E03               	addlw	3
 13941  2645  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 13942  2646  0086               	movwf	6
 13943  2647  3002               	movlw	2	; select bank5/6
 13944  2648  0087               	movwf	7
 13945  2649  0826               	movf	??_store_connection_tb^(0+128),w
 13946  264A  0081               	movwf	1
 13947                           
 13948                           ;miwi_p2p.c: 164: END_DEVICES_Short_Address[j].Address[0] = payload[i];
 13949  264B  082C               	movf	store_connection_tb@i^(0+128),w
 13950  264C  00A6               	movwf	??_store_connection_tb^(0+128)
 13951  264D  01A7               	clrf	(??_store_connection_tb^(0+128)+1)
 13952  264E  0826               	movf	??_store_connection_tb^(0+128),w
 13953  264F  0724               	addwf	store_connection_tb@payload^(0+128),w
 13954  2650  0086               	movwf	6
 13955  2651  0827               	movf	(??_store_connection_tb+1)^(0+128),w
 13956  2652  3D25               	addwfc	(store_connection_tb@payload+1)^(0+128),w
 13957  2653  0087               	movwf	7
 13958  2654  0801               	movf	1,w
 13959  2655  00A8               	movwf	(??_store_connection_tb+2)^(0+128)
 13960  2656  082B               	movf	store_connection_tb@j^(0+128),w
 13961  2657  00A9               	movwf	(??_store_connection_tb+3)^(0+128)
 13962  2658  3001               	movlw	1
 13963  2659                     u6665:	
 13964  2659  35A9               	lslf	(??_store_connection_tb+3)^(0+128),f
 13965  265A  3EFF               	addlw	-1
 13966  265B  1D03               	skipz
 13967  265C  2E59               	goto	u6665
 13968  265D  3529               	lslf	(??_store_connection_tb+3)^(0+128),w
 13969  265E  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 13970  265F  0086               	movwf	6
 13971  2660  3002               	movlw	2	; select bank5/6
 13972  2661  0087               	movwf	7
 13973  2662  0828               	movf	(??_store_connection_tb+2)^(0+128),w
 13974  2663  0081               	movwf	1
 13975                           
 13976                           ;miwi_p2p.c: 165: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
 13977  2664  082C               	movf	store_connection_tb@i^(0+128),w
 13978  2665  3E01               	addlw	1
 13979  2666  00A6               	movwf	??_store_connection_tb^(0+128)
 13980  2667  3000               	movlw	0
 13981  2668  1803               	skipnc
 13982  2669  3001               	movlw	1
 13983  266A  00A7               	movwf	(??_store_connection_tb^(0+128)+1)
 13984  266B  0826               	movf	??_store_connection_tb^(0+128),w
 13985  266C  0724               	addwf	store_connection_tb@payload^(0+128),w
 13986  266D  0086               	movwf	6
 13987  266E  0827               	movf	(??_store_connection_tb+1)^(0+128),w
 13988  266F  3D25               	addwfc	(store_connection_tb@payload+1)^(0+128),w
 13989  2670  0087               	movwf	7
 13990  2671  0801               	movf	1,w
 13991  2672  00A8               	movwf	(??_store_connection_tb+2)^(0+128)
 13992  2673  082B               	movf	store_connection_tb@j^(0+128),w
 13993  2674  00A9               	movwf	(??_store_connection_tb+3)^(0+128)
 13994  2675  3001               	movlw	1
 13995  2676                     u6675:	
 13996  2676  35A9               	lslf	(??_store_connection_tb+3)^(0+128),f
 13997  2677  3EFF               	addlw	-1
 13998  2678  1D03               	skipz
 13999  2679  2E76               	goto	u6675
 14000  267A  3529               	lslf	(??_store_connection_tb+3)^(0+128),w
 14001  267B  3E01               	addlw	1
 14002  267C  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 14003  267D  0086               	movwf	6
 14004  267E  3002               	movlw	2	; select bank5/6
 14005  267F  0087               	movwf	7
 14006  2680  0828               	movf	(??_store_connection_tb+2)^(0+128),w
 14007  2681  0081               	movwf	1
 14008                           
 14009                           ;miwi_p2p.c: 166: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
 14010  2682  082C               	movf	store_connection_tb@i^(0+128),w
 14011  2683  3E02               	addlw	2
 14012  2684  00A6               	movwf	??_store_connection_tb^(0+128)
 14013  2685  3000               	movlw	0
 14014  2686  1803               	skipnc
 14015  2687  3001               	movlw	1
 14016  2688  00A7               	movwf	(??_store_connection_tb^(0+128)+1)
 14017  2689  0826               	movf	??_store_connection_tb^(0+128),w
 14018  268A  0724               	addwf	store_connection_tb@payload^(0+128),w
 14019  268B  0086               	movwf	6
 14020  268C  0827               	movf	(??_store_connection_tb+1)^(0+128),w
 14021  268D  3D25               	addwfc	(store_connection_tb@payload+1)^(0+128),w
 14022  268E  0087               	movwf	7
 14023  268F  0801               	movf	1,w
 14024  2690  00A8               	movwf	(??_store_connection_tb+2)^(0+128)
 14025  2691  082B               	movf	store_connection_tb@j^(0+128),w
 14026  2692  00A9               	movwf	(??_store_connection_tb+3)^(0+128)
 14027  2693  3001               	movlw	1
 14028  2694                     u6685:	
 14029  2694  35A9               	lslf	(??_store_connection_tb+3)^(0+128),f
 14030  2695  3EFF               	addlw	-1
 14031  2696  1D03               	skipz
 14032  2697  2E94               	goto	u6685
 14033  2698  3529               	lslf	(??_store_connection_tb+3)^(0+128),w
 14034  2699  3E02               	addlw	2
 14035  269A  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 14036  269B  0086               	movwf	6
 14037  269C  3002               	movlw	2	; select bank5/6
 14038  269D  0087               	movwf	7
 14039  269E  0828               	movf	(??_store_connection_tb+2)^(0+128),w
 14040  269F  0081               	movwf	1
 14041  26A0                     l6375:	
 14042  26A0  3001               	movlw	1
 14043  26A1  0021               	movlb	1	; select bank1
 14044  26A2  00A6               	movwf	??_store_connection_tb^(0+128)
 14045  26A3  0826               	movf	??_store_connection_tb^(0+128),w
 14046  26A4  07AC               	addwf	store_connection_tb@i^(0+128),f
 14047  26A5  3023               	movlw	35
 14048  26A6  022C               	subwf	store_connection_tb@i^(0+128),w
 14049  26A7  1C03               	skipc
 14050  26A8  2E12               	goto	l6369
 14051  26A9                     l6379:	
 14052                           
 14053                           ;miwi_p2p.c: 169: }
 14054                           ;miwi_p2p.c: 172: }
 14055                           ;miwi_p2p.c: 173: handle_lost_connection();
 14056  26A9  31AD  2557         	fcall	_handle_lost_connection
 14057  26AB  0008               	return
 14058  26AC                     __end_of_store_connection_tb:	
 14059                           
 14060                           	psect	text32
 14061  2D57                     __ptext32:	
 14062 ;; *************** function _handle_lost_connection *****************
 14063 ;; Defined at:
 14064 ;;		line 131 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;  i               1    3[BANK1 ] unsigned char 
 14069 ;;  stat            1    2[BANK1 ] unsigned char 
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  1    wreg      void 
 14072 ;; Registers used:
 14073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14081 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;Total ram usage:        4 bytes
 14084 ;; Hardware stack levels used:    1
 14085 ;; Hardware stack levels required when called:    5
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		_store_connection_tb
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           
 14094                           ;psect for function _handle_lost_connection
 14095  2D57                     _handle_lost_connection:	
 14096                           
 14097                           ;miwi_p2p.c: 133: uint8_t i ;
 14098                           ;miwi_p2p.c: 134: bool stat = 0;
 14099                           
 14100                           ;incstack = 0
 14101                           ; Regs used in _handle_lost_connection: [wreg+fsr1l+fsr1h+status,2+status,0]
 14102  2D57  0021               	movlb	1	; select bank1
 14103  2D58  01A2               	clrf	handle_lost_connection@stat^(0+128)
 14104                           
 14105                           ;miwi_p2p.c: 135: if (!role)
 14106  2D59  0022               	movlb	2	; select bank2
 14107  2D5A  086F               	movf	_role^(0+256),w
 14108  2D5B  1D03               	btfss	3,2
 14109  2D5C  0008               	return
 14110                           
 14111                           ;miwi_p2p.c: 136: {
 14112                           ;miwi_p2p.c: 137: for (i=0;i<end_nodes+1;i++)
 14113  2D5D  0021               	movlb	1	; select bank1
 14114  2D5E  01A3               	clrf	handle_lost_connection@i^(0+128)
 14115  2D5F                     l6087:	
 14116  2D5F  0020               	movlb	0	; select bank0
 14117  2D60  0862               	movf	_end_nodes,w
 14118  2D61  3E01               	addlw	1
 14119  2D62  0021               	movlb	1	; select bank1
 14120  2D63  00A0               	movwf	??_handle_lost_connection^(0+128)
 14121  2D64  3000               	movlw	0
 14122  2D65  1803               	skipnc
 14123  2D66  3001               	movlw	1
 14124  2D67  00A1               	movwf	(??_handle_lost_connection^(0+128)+1)
 14125  2D68  0821               	movf	(??_handle_lost_connection+1)^(0+128),w
 14126  2D69  3A80               	xorlw	128
 14127  2D6A  3C80               	sublw	128
 14128  2D6B  1D03               	skipz
 14129  2D6C  2D6F               	goto	u6105
 14130  2D6D  0820               	movf	??_handle_lost_connection^(0+128),w
 14131  2D6E  0223               	subwf	handle_lost_connection@i^(0+128),w
 14132  2D6F                     u6105:	
 14133  2D6F  1803               	btfsc	3,0
 14134  2D70  2D9F               	goto	l6089
 14135                           
 14136                           ;miwi_p2p.c: 138: {
 14137                           ;miwi_p2p.c: 139: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
 14138  2D71  0021               	movlb	1	; select bank1
 14139  2D72  0823               	movf	handle_lost_connection@i^(0+128),w
 14140  2D73  00A0               	movwf	??_handle_lost_connection^(0+128)
 14141  2D74  3001               	movlw	1
 14142  2D75                     u6065:	
 14143  2D75  35A0               	lslf	??_handle_lost_connection^(0+128),f
 14144  2D76  3EFF               	addlw	-1
 14145  2D77  1D03               	skipz
 14146  2D78  2D75               	goto	u6065
 14147  2D79  3520               	lslf	??_handle_lost_connection^(0+128),w
 14148  2D7A  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 14149  2D7B  0086               	movwf	6
 14150  2D7C  3002               	movlw	2	; select bank5/6
 14151  2D7D  0087               	movwf	7
 14152  2D7E  0801               	movf	1,w
 14153  2D7F  0023               	movlb	3	; select bank3
 14154  2D80  0667               	xorwf	_myLongAddress^(0+384),w
 14155  2D81  1D03               	skipz
 14156  2D82  2D99               	goto	l6085
 14157  2D83  0021               	movlb	1	; select bank1
 14158  2D84  0823               	movf	handle_lost_connection@i^(0+128),w
 14159  2D85  00A0               	movwf	??_handle_lost_connection^(0+128)
 14160  2D86  3001               	movlw	1
 14161  2D87                     u6085:	
 14162  2D87  35A0               	lslf	??_handle_lost_connection^(0+128),f
 14163  2D88  3EFF               	addlw	-1
 14164  2D89  1D03               	skipz
 14165  2D8A  2D87               	goto	u6085
 14166  2D8B  3520               	lslf	??_handle_lost_connection^(0+128),w
 14167  2D8C  3E01               	addlw	1
 14168  2D8D  3EA0               	addlw	(low (_END_DEVICES_Short_Address| (0+512)))& (0+255)
 14169  2D8E  0086               	movwf	6
 14170  2D8F  3002               	movlw	2	; select bank5/6
 14171  2D90  0087               	movwf	7
 14172  2D91  0023               	movlb	3	; select bank3
 14173  2D92  0868               	movf	(_myLongAddress^(0+384)+1),w
 14174  2D93  0601               	xorwf	1,w
 14175  2D94  1D03               	skipz
 14176  2D95  2D99               	goto	l6085
 14177                           
 14178                           ;miwi_p2p.c: 140: {
 14179                           ;miwi_p2p.c: 141: stat = 1;
 14180  2D96  0021               	movlb	1	; select bank1
 14181  2D97  01A2               	clrf	handle_lost_connection@stat^(0+128)
 14182  2D98  0AA2               	incf	handle_lost_connection@stat^(0+128),f
 14183  2D99                     l6085:	
 14184  2D99  3001               	movlw	1
 14185  2D9A  0021               	movlb	1	; select bank1
 14186  2D9B  00A0               	movwf	??_handle_lost_connection^(0+128)
 14187  2D9C  0820               	movf	??_handle_lost_connection^(0+128),w
 14188  2D9D  07A3               	addwf	handle_lost_connection@i^(0+128),f
 14189  2D9E  2D5F               	goto	l6087
 14190  2D9F                     l6089:	
 14191                           
 14192                           ;miwi_p2p.c: 142: }
 14193                           ;miwi_p2p.c: 143: }
 14194                           ;miwi_p2p.c: 144: if (!stat)
 14195  2D9F  0021               	movlb	1	; select bank1
 14196  2DA0  0822               	movf	handle_lost_connection@stat^(0+128),w
 14197  2DA1  1D03               	btfss	3,2
 14198  2DA2  0008               	return
 14199                           
 14200                           ;miwi_p2p.c: 145: {
 14201                           ;miwi_p2p.c: 146: lost_connection = 1;
 14202  2DA3  0023               	movlb	3	; select bank3
 14203  2DA4  01D7               	clrf	_lost_connection^(0+384)
 14204  2DA5  0AD7               	incf	_lost_connection^(0+384),f
 14205  2DA6  0008               	return
 14206  2DA7                     __end_of_handle_lost_connection:	
 14207                           
 14208                           	psect	text33
 14209  28A0                     __ptext33:	
 14210 ;; *************** function _send_link_status *****************
 14211 ;; Defined at:
 14212 ;;		line 2040 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;		None
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  send_status     1   67[BANK1 ] unsigned char 
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      void 
 14219 ;; Registers used:
 14220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14227 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;Total ram usage:        2 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; Hardware stack levels required when called:   11
 14233 ;; This function calls:
 14234 ;;		_SendPacket
 14235 ;; This function is called by:
 14236 ;;		_P2PTasks
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           
 14241                           ;psect for function _send_link_status
 14242  28A0                     _send_link_status:	
 14243                           
 14244                           ;miwi_p2p.c: 2042: bool send_status;
 14245                           ;miwi_p2p.c: 2043: {TxData = 0;};
 14246                           
 14247                           ;incstack = 0
 14248 ;; hardware stack exceeded
 14249                           ; Regs used in _send_link_status: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14250  28A0  0022               	movlb	2	; select bank2
 14251  28A1  01EE               	clrf	_TxData^(0+256)
 14252                           
 14253                           ;miwi_p2p.c: 2044: TxBuffer[TxData++] = 0x7A;
 14254  28A2  307A               	movlw	122
 14255  28A3  0021               	movlb	1	; select bank1
 14256  28A4  00E2               	movwf	??_send_link_status^(0+128)
 14257  28A5  0022               	movlb	2	; select bank2
 14258  28A6  086E               	movf	_TxData^(0+256),w
 14259  28A7  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 14260  28A8  0086               	movwf	6
 14261  28A9  3002               	movlw	2	; select bank4/5
 14262  28AA  0087               	movwf	7
 14263  28AB  0021               	movlb	1	; select bank1
 14264  28AC  0862               	movf	??_send_link_status^(0+128),w
 14265  28AD  0081               	movwf	1
 14266  28AE  3001               	movlw	1
 14267  28AF  00E2               	movwf	??_send_link_status^(0+128)
 14268  28B0  0862               	movf	??_send_link_status^(0+128),w
 14269  28B1  0022               	movlb	2	; select bank2
 14270  28B2  07EE               	addwf	_TxData^(0+256),f
 14271                           
 14272                           ;miwi_p2p.c: 2050: send_status = SendPacket(0, ConnectionTable[0].Address, 1, 0);
 14273  28B3  3068               	movlw	104
 14274  28B4  0021               	movlb	1	; select bank1
 14275  28B5  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 14276  28B6  3023               	movlw	35
 14277  28B7  00D7               	movwf	(SendPacket@DestinationAddress^(0+128)+1)
 14278  28B8  01D8               	clrf	SendPacket@isCommand^(0+128)
 14279  28B9  0AD8               	incf	SendPacket@isCommand^(0+128),f
 14280  28BA  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 14281  28BB  3000               	movlw	0
 14282  28BC  31AB  2390  31A8   	fcall	_SendPacket
 14283  28BF  0021               	movlb	1	; select bank1
 14284  28C0  00E2               	movwf	??_send_link_status^(0+128)
 14285  28C1  0862               	movf	??_send_link_status^(0+128),w
 14286  28C2  00E3               	movwf	send_link_status@send_status^(0+128)
 14287                           
 14288                           ;miwi_p2p.c: 2052: if(!send_status)
 14289  28C3  0863               	movf	send_link_status@send_status^(0+128),w
 14290  28C4  1D03               	btfss	3,2
 14291  28C5  0008               	return
 14292                           
 14293                           ;miwi_p2p.c: 2053: {
 14294                           ;miwi_p2p.c: 2054: lost_connection = 1;
 14295  28C6  0023               	movlb	3	; select bank3
 14296  28C7  01D7               	clrf	_lost_connection^(0+384)
 14297  28C8  0AD7               	incf	_lost_connection^(0+384),f
 14298  28C9  0008               	return
 14299  28CA                     __end_of_send_link_status:	
 14300                           
 14301                           	psect	text34
 14302  3755                     __ptext34:	
 14303 ;; *************** function _SW_Ack_SrED *****************
 14304 ;; Defined at:
 14305 ;;		line 2105 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14306 ;; Parameters:    Size  Location     Type
 14307 ;;  Dest_Addr       2   66[BANK1 ] PTR unsigned char 
 14308 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 14309 ;; Auto vars:     Size  Location     Type
 14310 ;;		None
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      unsigned char 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14320 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;Total ram usage:        3 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:   11
 14327 ;; This function calls:
 14328 ;;		_SendPacket
 14329 ;; This function is called by:
 14330 ;;		_P2PTasks
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           
 14335                           ;psect for function _SW_Ack_SrED
 14336  3755                     _SW_Ack_SrED:	
 14337                           
 14338                           ;miwi_p2p.c: 2107: {TxData = 0;};
 14339                           
 14340                           ;incstack = 0
 14341 ;; hardware stack exceeded
 14342                           ; Regs used in _SW_Ack_SrED: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14343  3755  0022               	movlb	2	; select bank2
 14344  3756  01EE               	clrf	_TxData^(0+256)
 14345                           
 14346                           ;miwi_p2p.c: 2108: TxBuffer[TxData++] = 0xDA;
 14347  3757  30DA               	movlw	218
 14348  3758  0021               	movlb	1	; select bank1
 14349  3759  00E4               	movwf	??_SW_Ack_SrED^(0+128)
 14350  375A  0022               	movlb	2	; select bank2
 14351  375B  086E               	movf	_TxData^(0+256),w
 14352  375C  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 14353  375D  0086               	movwf	6
 14354  375E  3002               	movlw	2	; select bank4/5
 14355  375F  0087               	movwf	7
 14356  3760  0021               	movlb	1	; select bank1
 14357  3761  0864               	movf	??_SW_Ack_SrED^(0+128),w
 14358  3762  0081               	movwf	1
 14359  3763  3001               	movlw	1
 14360  3764  00E4               	movwf	??_SW_Ack_SrED^(0+128)
 14361  3765  0864               	movf	??_SW_Ack_SrED^(0+128),w
 14362  3766  0022               	movlb	2	; select bank2
 14363  3767  07EE               	addwf	_TxData^(0+256),f
 14364                           
 14365                           ;miwi_p2p.c: 2112: return SendPacket(0, Dest_Addr, 1, 0);
 14366                           ;	Return value of _SW_Ack_SrED is never used
 14367  3768  0021               	movlb	1	; select bank1
 14368  3769  0863               	movf	(SW_Ack_SrED@Dest_Addr+1)^(0+128),w
 14369  376A  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 14370  376B  0862               	movf	SW_Ack_SrED@Dest_Addr^(0+128),w
 14371  376C  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 14372  376D  01D8               	clrf	SendPacket@isCommand^(0+128)
 14373  376E  0AD8               	incf	SendPacket@isCommand^(0+128),f
 14374  376F  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 14375  3770  3000               	movlw	0
 14376  3771  31AB  2390         	fcall	_SendPacket
 14377  3773  0008               	return
 14378  3774                     __end_of_SW_Ack_SrED:	
 14379                           
 14380                           	psect	text35
 14381  0633                     __ptext35:	
 14382 ;; *************** function _MiMAC_ReceivedPacket *****************
 14383 ;; Defined at:
 14384 ;;		line 853 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;		None
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;  PayloadIndex    1   27[BANK1 ] unsigned char 
 14389 ;;  j               1    0        unsigned char 
 14390 ;;  currentTick     4   23[BANK1 ] struct _MIWI_TICK
 14391 ;;  i               1   28[BANK1 ] unsigned char 
 14392 ;; Return value:  Size  Location     Type
 14393 ;;                  1    wreg      unsigned char 
 14394 ;; Registers used:
 14395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14396 ;; Tracked objects:
 14397 ;;		On entry : 0/0
 14398 ;;		On exit  : 0/0
 14399 ;;		Unchanged: 0/0
 14400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14403 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14404 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;Total ram usage:       16 bytes
 14406 ;; Hardware stack levels used:    1
 14407 ;; Hardware stack levels required when called:    6
 14408 ;; This function calls:
 14409 ;;		_MiWi_TickGet
 14410 ;;		___bmul
 14411 ;;		___wmul
 14412 ;; This function is called by:
 14413 ;;		_P2PTasks
 14414 ;; This function uses a non-reentrant model
 14415 ;;
 14416                           
 14417                           
 14418                           ;psect for function _MiMAC_ReceivedPacket
 14419  0633                     _MiMAC_ReceivedPacket:	
 14420                           
 14421                           ;drv_mrf_miwi_89xa.c: 855: uint8_t i;
 14422                           ;drv_mrf_miwi_89xa.c: 856: MIWI_TICK currentTick;
 14423                           ;drv_mrf_miwi_89xa.c: 860: for(i = 0; i < 5; i++)
 14424                           
 14425                           ;incstack = 0
 14426                           ; Regs used in _MiMAC_ReceivedPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14427  0633  0021               	movlb	1	; select bank1
 14428  0634  01BC               	clrf	MiMAC_ReceivedPacket@i^(0+128)
 14429  0635  3005               	movlw	5
 14430  0636  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14431  0637  1803               	btfsc	3,0
 14432  0638  2ECD               	goto	l6279
 14433  0639                     l6265:	
 14434                           
 14435                           ;drv_mrf_miwi_89xa.c: 861: {
 14436                           ;drv_mrf_miwi_89xa.c: 862: currentTick = MiWi_TickGet();
 14437  0639  31AB  23D9  3186   	fcall	_MiWi_TickGet
 14438  063C  0021               	movlb	1	; select bank1
 14439  063D  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 14440  063E  00BA               	movwf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128)
 14441  063F  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 14442  0640  00B9               	movwf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128)
 14443  0641  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 14444  0642  00B8               	movwf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128)
 14445  0643  0820               	movf	?_MiWi_TickGet^(0+128),w
 14446  0644  00B7               	movwf	MiMAC_ReceivedPacket@currentTick^(0+128)
 14447                           
 14448                           ;drv_mrf_miwi_89xa.c: 863: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 14449                           ;drv_mrf_miwi_89xa.c: 864: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          0000000)/32)) )
 14450  0645  3006               	movlw	6
 14451  0646  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14452  0647  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14453  0648  00A0               	movwf	___bmul@multiplicand^(0+128)
 14454  0649  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14455  064A  31B5  2595  3186   	fcall	___bmul
 14456  064D  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 14457  064E  0086               	movwf	6
 14458  064F  3003               	movlw	3	; select bank7/8
 14459  0650  0087               	movwf	7
 14460  0651  0801               	movf	1,w
 14461  0652  1903               	btfsc	3,2
 14462  0653  2EC4               	goto	l6275
 14463  0654  3006               	movlw	6
 14464  0655  0021               	movlb	1	; select bank1
 14465  0656  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14466  0657  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14467  0658  00A0               	movwf	___bmul@multiplicand^(0+128)
 14468  0659  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14469  065A  31B5  2595  3186   	fcall	___bmul
 14470  065D  3E02               	addlw	2
 14471  065E  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 14472  065F  0086               	movwf	6
 14473  0660  3003               	movlw	3	; select bank7/8
 14474  0661  0087               	movwf	7
 14475  0662  3F40               	moviw [0]fsr1
 14476  0663  0021               	movlb	1	; select bank1
 14477  0664  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14478  0665  3F41               	moviw [1]fsr1
 14479  0666  00AF               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+1)
 14480  0667  3F42               	moviw [2]fsr1
 14481  0668  00B0               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+2)
 14482  0669  3F43               	moviw [3]fsr1
 14483  066A  00B1               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+3)
 14484  066B  083A               	movf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128),w
 14485  066C  0231               	subwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14486  066D  1D03               	skipz
 14487  066E  2E79               	goto	u6465
 14488  066F  0839               	movf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128),w
 14489  0670  0230               	subwf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14490  0671  1D03               	skipz
 14491  0672  2E79               	goto	u6465
 14492  0673  0838               	movf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128),w
 14493  0674  022F               	subwf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14494  0675  1D03               	skipz
 14495  0676  2E79               	goto	u6465
 14496  0677  0837               	movf	MiMAC_ReceivedPacket@currentTick^(0+128),w
 14497  0678  022E               	subwf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14498  0679                     u6465:	
 14499  0679  1803               	skipnc
 14500  067A  2EC4               	goto	l6275
 14501  067B  0837               	movf	MiMAC_ReceivedPacket@currentTick^(0+128),w
 14502  067C  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14503  067D  0838               	movf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128),w
 14504  067E  00AE               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14505  067F  0839               	movf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128),w
 14506  0680  00AF               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+2)
 14507  0681  083A               	movf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128),w
 14508  0682  00B0               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+3)
 14509  0683  3006               	movlw	6
 14510  0684  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14511  0685  0831               	movf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14512  0686  00A0               	movwf	___bmul@multiplicand^(0+128)
 14513  0687  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14514  0688  31B5  2595  3186   	fcall	___bmul
 14515  068B  3E02               	addlw	2
 14516  068C  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 14517  068D  0086               	movwf	6
 14518  068E  3003               	movlw	3	; select bank7/8
 14519  068F  0087               	movwf	7
 14520  0690  3F40               	moviw [0]fsr1
 14521  0691  0021               	movlb	1	; select bank1
 14522  0692  00B2               	movwf	(??_MiMAC_ReceivedPacket+5)^(0+128)
 14523  0693  3F41               	moviw [1]fsr1
 14524  0694  00B3               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1)
 14525  0695  3F42               	moviw [2]fsr1
 14526  0696  00B4               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2)
 14527  0697  3F43               	moviw [3]fsr1
 14528  0698  00B5               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3)
 14529  0699  09B2               	comf	(??_MiMAC_ReceivedPacket+5)^(0+128),f
 14530  069A  09B3               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1),f
 14531  069B  09B4               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2),f
 14532  069C  09B5               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3),f
 14533  069D  0AB2               	incf	(??_MiMAC_ReceivedPacket+5)^(0+128),f
 14534  069E  1903               	skipnz
 14535  069F  0AB3               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1),f
 14536  06A0  1903               	skipnz
 14537  06A1  0AB4               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2),f
 14538  06A2  1903               	skipnz
 14539  06A3  0AB5               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3),f
 14540  06A4  0832               	movf	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14541  06A5  07AD               	addwf	??_MiMAC_ReceivedPacket^(0+128),f
 14542  06A6  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14543  06A7  3DAE               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+1),f
 14544  06A8  0834               	movf	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14545  06A9  3DAF               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+2),f
 14546  06AA  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14547  06AB  3DB0               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+3),f
 14548  06AC  0830               	movf	(??_MiMAC_ReceivedPacket^(0+128)+3),w
 14549  06AD  1D03               	btfss	3,2
 14550  06AE  2EB7               	goto	l6273
 14551  06AF  30B5               	movlw	181
 14552  06B0  022D               	subwf	??_MiMAC_ReceivedPacket^(0+128),w
 14553  06B1  30C4               	movlw	196
 14554  06B2  3B2E               	subwfb	(??_MiMAC_ReceivedPacket^(0+128)+1),w
 14555  06B3  3004               	movlw	4
 14556  06B4  3B2F               	subwfb	(??_MiMAC_ReceivedPacket^(0+128)+2),w
 14557  06B5  1C03               	btfss	3,0
 14558  06B6  2EC4               	goto	l6275
 14559  06B7                     l6273:	
 14560                           
 14561                           ;drv_mrf_miwi_89xa.c: 865: {
 14562                           ;drv_mrf_miwi_89xa.c: 866: AckInfo[i].Valid = 0;
 14563  06B7  3006               	movlw	6
 14564  06B8  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14565  06B9  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14566  06BA  00A0               	movwf	___bmul@multiplicand^(0+128)
 14567  06BB  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14568  06BC  31B5  2595  3186   	fcall	___bmul
 14569  06BF  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 14570  06C0  0086               	movwf	6
 14571  06C1  3003               	movlw	3	; select bank7/8
 14572  06C2  0087               	movwf	7
 14573  06C3  0181               	clrf	1
 14574  06C4                     l6275:	
 14575  06C4  3001               	movlw	1
 14576  06C5  0021               	movlb	1	; select bank1
 14577  06C6  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14578  06C7  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14579  06C8  07BC               	addwf	MiMAC_ReceivedPacket@i^(0+128),f
 14580  06C9  3005               	movlw	5
 14581  06CA  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14582  06CB  1C03               	skipc
 14583  06CC  2E39               	goto	l6265
 14584  06CD                     l6279:	
 14585                           
 14586                           ;drv_mrf_miwi_89xa.c: 867: }
 14587                           ;drv_mrf_miwi_89xa.c: 868: }
 14588                           ;drv_mrf_miwi_89xa.c: 871: if( ReceivedBankIndex != 0xFF )
 14589  06CD  0020               	movlb	0	; select bank0
 14590  06CE  0A5E               	incf	_ReceivedBankIndex,w
 14591  06CF  1903               	btfsc	3,2
 14592  06D0  2ED3               	goto	l6285
 14593                           
 14594                           ;drv_mrf_miwi_89xa.c: 872: {
 14595                           ;drv_mrf_miwi_89xa.c: 873: return 0;
 14596  06D1  3000               	movlw	0
 14597  06D2  0008               	return
 14598  06D3                     l6285:	
 14599                           
 14600                           ;drv_mrf_miwi_89xa.c: 874: }
 14601                           ;drv_mrf_miwi_89xa.c: 876: for(i = 0; i < 2; i++)
 14602  06D3  0021               	movlb	1	; select bank1
 14603  06D4  01BC               	clrf	MiMAC_ReceivedPacket@i^(0+128)
 14604  06D5  3002               	movlw	2
 14605  06D6  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14606  06D7  1803               	btfsc	3,0
 14607  06D8  2FD7               	goto	l6325
 14608  06D9                     l6291:	
 14609                           
 14610                           ;drv_mrf_miwi_89xa.c: 877: {
 14611                           ;drv_mrf_miwi_89xa.c: 878: if( RxPacket[i].flags.bits.Valid )
 14612  06D9  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14613  06DA  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14614  06DB  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14615  06DC  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14616  06DD  00A7               	movwf	___wmul@multiplier^(0+128)
 14617  06DE  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14618  06DF  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14619  06E0  3039               	movlw	57
 14620  06E1  00A9               	movwf	___wmul@multiplicand^(0+128)
 14621  06E2  3000               	movlw	0
 14622  06E3  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14623  06E4  31B6  26A4  3186   	fcall	___wmul
 14624  06E7  30F2               	movlw	242
 14625  06E8  0021               	movlb	1	; select bank1
 14626  06E9  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14627  06EA  3022               	movlw	34
 14628  06EB  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14629  06EC  0827               	movf	?___wmul^(0+128),w
 14630  06ED  072F               	addwf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14631  06EE  0086               	movwf	6
 14632  06EF  0828               	movf	(?___wmul+1)^(0+128),w
 14633  06F0  3D30               	addwfc	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14634  06F1  0087               	movwf	7
 14635  06F2  1C01               	btfss	1,0
 14636  06F3  2FCE               	goto	l6321
 14637                           
 14638                           ;drv_mrf_miwi_89xa.c: 879: {
 14639                           ;drv_mrf_miwi_89xa.c: 880: uint8_t PayloadIndex;
 14640                           ;drv_mrf_miwi_89xa.c: 881: uint8_t j;
 14641                           ;drv_mrf_miwi_89xa.c: 883: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 14642  06F4  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14643  06F5  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14644  06F6  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14645  06F7  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14646  06F8  00A7               	movwf	___wmul@multiplier^(0+128)
 14647  06F9  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14648  06FA  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14649  06FB  3039               	movlw	57
 14650  06FC  00A9               	movwf	___wmul@multiplicand^(0+128)
 14651  06FD  3000               	movlw	0
 14652  06FE  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14653  06FF  31B6  26A4  3186   	fcall	___wmul
 14654  0702  0021               	movlb	1	; select bank1
 14655  0703  0827               	movf	?___wmul^(0+128),w
 14656  0704  3E01               	addlw	1
 14657  0705  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14658  0706  3000               	movlw	0
 14659  0707  3D28               	addwfc	(?___wmul+1)^(0+128),w
 14660  0708  00B0               	movwf	(??_MiMAC_ReceivedPacket+3)^(0+128)
 14661  0709  30F2               	movlw	242
 14662  070A  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14663  070B  3022               	movlw	34
 14664  070C  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14665  070D  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14666  070E  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14667  070F  0086               	movwf	6
 14668  0710  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14669  0711  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14670  0712  0087               	movwf	7
 14671  0713  0801               	movf	1,w
 14672  0714  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14673  0715  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14674  0716  0023               	movlb	3	; select bank3
 14675  0717  00AA               	movwf	_MACRxPacket^(0+384)
 14676                           
 14677                           ;drv_mrf_miwi_89xa.c: 884: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 14678  0718  0021               	movlb	1	; select bank1
 14679  0719  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14680  071A  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14681  071B  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14682  071C  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14683  071D  00A7               	movwf	___wmul@multiplier^(0+128)
 14684  071E  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14685  071F  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14686  0720  3039               	movlw	57
 14687  0721  00A9               	movwf	___wmul@multiplicand^(0+128)
 14688  0722  3000               	movlw	0
 14689  0723  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14690  0724  31B6  26A4  3186   	fcall	___wmul
 14691  0727  0021               	movlb	1	; select bank1
 14692  0728  0827               	movf	?___wmul^(0+128),w
 14693  0729  3E38               	addlw	56
 14694  072A  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14695  072B  3000               	movlw	0
 14696  072C  3D28               	addwfc	(?___wmul+1)^(0+128),w
 14697  072D  00B0               	movwf	(??_MiMAC_ReceivedPacket+3)^(0+128)
 14698  072E  30F2               	movlw	242
 14699  072F  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14700  0730  3022               	movlw	34
 14701  0731  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14702  0732  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14703  0733  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14704  0734  0086               	movwf	6
 14705  0735  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14706  0736  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14707  0737  0087               	movwf	7
 14708  0738  0801               	movf	1,w
 14709  0739  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14710  073A  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14711  073B  0023               	movlb	3	; select bank3
 14712  073C  00AF               	movwf	(_MACRxPacket^(0+384)+5)
 14713                           
 14714                           ;drv_mrf_miwi_89xa.c: 885: PayloadIndex = 2;
 14715  073D  3002               	movlw	2
 14716  073E  0021               	movlb	1	; select bank1
 14717  073F  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14718  0740  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14719  0741  00BB               	movwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128)
 14720                           
 14721                           ;drv_mrf_miwi_89xa.c: 887: if( MACRxPacket.flags.bits.destPrsnt )
 14722  0742  0023               	movlb	3	; select bank3
 14723  0743  1F2A               	btfss	_MACRxPacket^(0+384),6
 14724  0744  2F4F               	goto	l6301
 14725                           
 14726                           ;drv_mrf_miwi_89xa.c: 888: {
 14727                           ;drv_mrf_miwi_89xa.c: 889: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 14728  0745  0020               	movlb	0	; select bank0
 14729  0746  0C58               	rrf	_MACInitParams,w
 14730  0747  0021               	movlb	1	; select bank1
 14731  0748  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14732  0749  0CAD               	rrf	??_MiMAC_ReceivedPacket^(0+128),f
 14733  074A  0C2D               	rrf	??_MiMAC_ReceivedPacket^(0+128),w
 14734  074B  390F               	andlw	15
 14735  074C  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14736  074D  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14737  074E  07BB               	addwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),f
 14738  074F                     l6301:	
 14739                           
 14740                           ;drv_mrf_miwi_89xa.c: 890: }
 14741                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.sourcePrsnt )
 14742  074F  0023               	movlb	3	; select bank3
 14743  0750  1FAA               	btfss	_MACRxPacket^(0+384),7
 14744  0751  2F8B               	goto	l6307
 14745                           
 14746                           ;drv_mrf_miwi_89xa.c: 893: {
 14747                           ;drv_mrf_miwi_89xa.c: 894: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 14748  0752  0021               	movlb	1	; select bank1
 14749  0753  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14750  0754  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14751  0755  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14752  0756  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14753  0757  00A7               	movwf	___wmul@multiplier^(0+128)
 14754  0758  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14755  0759  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14756  075A  3039               	movlw	57
 14757  075B  00A9               	movwf	___wmul@multiplicand^(0+128)
 14758  075C  3000               	movlw	0
 14759  075D  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14760  075E  31B6  26A4  3186   	fcall	___wmul
 14761  0761  0021               	movlb	1	; select bank1
 14762  0762  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14763  0763  3E01               	addlw	1
 14764  0764  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14765  0765  3000               	movlw	0
 14766  0766  1803               	skipnc
 14767  0767  3001               	movlw	1
 14768  0768  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14769  0769  30F2               	movlw	242
 14770  076A  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14771  076B  3022               	movlw	34
 14772  076C  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14773  076D  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14774  076E  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14775  076F  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14776  0770  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14777  0771  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14778  0772  00B4               	movwf	(??_MiMAC_ReceivedPacket+7)^(0+128)
 14779  0773  0827               	movf	?___wmul^(0+128),w
 14780  0774  0733               	addwf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14781  0775  00B5               	movwf	(??_MiMAC_ReceivedPacket+8)^(0+128)
 14782  0776  0828               	movf	(?___wmul+1)^(0+128),w
 14783  0777  3D34               	addwfc	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14784  0778  00B6               	movwf	(??_MiMAC_ReceivedPacket+9)^(0+128)
 14785  0779  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14786  077A  0023               	movlb	3	; select bank3
 14787  077B  00AB               	movwf	(low ((_MACRxPacket| (0+256)+1)))^(0+128)
 14788  077C  0021               	movlb	1	; select bank1
 14789  077D  0836               	movf	(??_MiMAC_ReceivedPacket+9)^(0+128),w
 14790  077E  0023               	movlb	3	; select bank3
 14791  077F  00AC               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^(0+128)
 14792                           
 14793                           ;drv_mrf_miwi_89xa.c: 895: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 14794  0780  0020               	movlb	0	; select bank0
 14795  0781  0C58               	rrf	_MACInitParams,w
 14796  0782  0021               	movlb	1	; select bank1
 14797  0783  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14798  0784  0CAD               	rrf	??_MiMAC_ReceivedPacket^(0+128),f
 14799  0785  0C2D               	rrf	??_MiMAC_ReceivedPacket^(0+128),w
 14800  0786  390F               	andlw	15
 14801  0787  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14802  0788  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14803  0789  07BB               	addwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),f
 14804                           
 14805                           ;drv_mrf_miwi_89xa.c: 896: }
 14806  078A  2F8E               	goto	l6309
 14807  078B                     l6307:	
 14808                           
 14809                           ;drv_mrf_miwi_89xa.c: 897: else
 14810                           ;drv_mrf_miwi_89xa.c: 898: {
 14811                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (0);
 14812  078B  0023               	movlb	3	; select bank3
 14813  078C  01AB               	clrf	(low ((_MACRxPacket| (0+256)+1)))^(0+128)
 14814  078D  01AC               	clrf	((low ((_MACRxPacket| (0+256)+1))+1))^(0+128)
 14815  078E                     l6309:	
 14816                           
 14817                           ;drv_mrf_miwi_89xa.c: 900: }
 14818                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 14819  078E  0021               	movlb	1	; select bank1
 14820  078F  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14821  0790  0023               	movlb	3	; select bank3
 14822  0791  02AF               	subwf	(_MACRxPacket^(0+384)+5),f
 14823                           
 14824                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 14825  0792  0021               	movlb	1	; select bank1
 14826  0793  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14827  0794  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14828  0795  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14829  0796  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14830  0797  00A7               	movwf	___wmul@multiplier^(0+128)
 14831  0798  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14832  0799  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14833  079A  3039               	movlw	57
 14834  079B  00A9               	movwf	___wmul@multiplicand^(0+128)
 14835  079C  3000               	movlw	0
 14836  079D  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14837  079E  31B6  26A4  3186   	fcall	___wmul
 14838  07A1  0021               	movlb	1	; select bank1
 14839  07A2  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14840  07A3  3E01               	addlw	1
 14841  07A4  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14842  07A5  3000               	movlw	0
 14843  07A6  1803               	skipnc
 14844  07A7  3001               	movlw	1
 14845  07A8  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14846  07A9  30F2               	movlw	242
 14847  07AA  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14848  07AB  3022               	movlw	34
 14849  07AC  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14850  07AD  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14851  07AE  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14852  07AF  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14853  07B0  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14854  07B1  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14855  07B2  00B4               	movwf	(??_MiMAC_ReceivedPacket+7)^(0+128)
 14856  07B3  0827               	movf	?___wmul^(0+128),w
 14857  07B4  0733               	addwf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14858  07B5  00B5               	movwf	(??_MiMAC_ReceivedPacket+8)^(0+128)
 14859  07B6  0828               	movf	(?___wmul+1)^(0+128),w
 14860  07B7  3D34               	addwfc	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14861  07B8  00B6               	movwf	(??_MiMAC_ReceivedPacket+9)^(0+128)
 14862  07B9  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14863  07BA  0023               	movlb	3	; select bank3
 14864  07BB  00AD               	movwf	(low ((_MACRxPacket| (0+256)+3)))^(0+128)
 14865  07BC  0021               	movlb	1	; select bank1
 14866  07BD  0836               	movf	(??_MiMAC_ReceivedPacket+9)^(0+128),w
 14867  07BE  0023               	movlb	3	; select bank3
 14868  07BF  00AE               	movwf	((low ((_MACRxPacket| (0+256)+3))+1))^(0+128)
 14869                           
 14870                           ;drv_mrf_miwi_89xa.c: 1006: MACRxPacket.RSSIValue = RSSILock;
 14871  07C0  0850               	movf	_RSSILock^(0+384),w
 14872  07C1  0021               	movlb	1	; select bank1
 14873  07C2  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14874  07C3  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14875  07C4  0023               	movlb	3	; select bank3
 14876  07C5  00B0               	movwf	(_MACRxPacket^(0+384)+6)
 14877                           
 14878                           ;drv_mrf_miwi_89xa.c: 1009: ReceivedBankIndex = i;
 14879  07C6  0021               	movlb	1	; select bank1
 14880  07C7  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14881  07C8  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14882  07C9  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14883  07CA  0020               	movlb	0	; select bank0
 14884  07CB  00DE               	movwf	_ReceivedBankIndex
 14885                           
 14886                           ;drv_mrf_miwi_89xa.c: 1010: return 1;
 14887  07CC  3001               	movlw	1
 14888  07CD  0008               	return
 14889  07CE                     l6321:	
 14890  07CE  3001               	movlw	1
 14891  07CF  0021               	movlb	1	; select bank1
 14892  07D0  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14893  07D1  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14894  07D2  07BC               	addwf	MiMAC_ReceivedPacket@i^(0+128),f
 14895  07D3  3002               	movlw	2
 14896  07D4  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14897  07D5  1C03               	skipc
 14898  07D6  2ED9               	goto	l6291
 14899  07D7                     l6325:	
 14900                           
 14901                           ;drv_mrf_miwi_89xa.c: 1011: }
 14902                           ;drv_mrf_miwi_89xa.c: 1012: }
 14903                           ;drv_mrf_miwi_89xa.c: 1014: return 0;
 14904  07D7  3000               	movlw	0
 14905  07D8  0008               	return
 14906  07D9                     __end_of_MiMAC_ReceivedPacket:	
 14907                           
 14908                           	psect	text36
 14909  040F                     __ptext36:	
 14910 ;; *************** function _MiApp_BroadcastConnectionTable *****************
 14911 ;; Defined at:
 14912 ;;		line 1915 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;		None
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;  j               1   77[BANK1 ] unsigned char 
 14917 ;;  i               1   76[BANK1 ] unsigned char 
 14918 ;;  broadcast_co    1   75[BANK1 ] unsigned char 
 14919 ;;  count           1   74[BANK1 ] unsigned char 
 14920 ;;  k               1   73[BANK1 ] unsigned char 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  1    wreg      void 
 14923 ;; Registers used:
 14924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;Total ram usage:       12 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:   11
 14937 ;; This function calls:
 14938 ;;		_SendPacket
 14939 ;;		___awdiv
 14940 ;;		___awmod
 14941 ;;		___bmul
 14942 ;;		___wmul
 14943 ;; This function is called by:
 14944 ;;		_P2PTasks
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           
 14949                           ;psect for function _MiApp_BroadcastConnectionTable
 14950  040F                     _MiApp_BroadcastConnectionTable:	
 14951                           
 14952                           ;miwi_p2p.c: 1917: uint8_t i,j , k , count;
 14953                           ;miwi_p2p.c: 1920: uint8_t broadcast_count = 0;
 14954                           
 14955                           ;incstack = 0
 14956 ;; hardware stack exceeded
 14957                           ; Regs used in _MiApp_BroadcastConnectionTable: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 14958  040F  0021               	movlb	1	; select bank1
 14959  0410  01EB               	clrf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 14960                           
 14961                           ;miwi_p2p.c: 1922: if ((conn_size * 4 ) + 4 < 35)
 14962  0411  0020               	movlb	0	; select bank0
 14963  0412  086A               	movf	_conn_size,w
 14964  0413  0021               	movlb	1	; select bank1
 14965  0414  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 14966  0415  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 14967  0416  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 14968  0417  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 14969  0418  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 14970  0419  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 14971  041A  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 14972  041B  3E04               	addlw	4
 14973  041C  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 14974  041D  3000               	movlw	0
 14975  041E  3D63               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 14976  041F  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 14977  0420  0865               	movf	(??_MiApp_BroadcastConnectionTable+3)^(0+128),w
 14978  0421  3A80               	xorlw	128
 14979  0422  00E6               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 14980  0423  3080               	movlw	128
 14981  0424  0266               	subwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 14982  0425  1D03               	skipz
 14983  0426  2C29               	goto	u6795
 14984  0427  3023               	movlw	35
 14985  0428  0264               	subwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 14986  0429                     u6795:	
 14987  0429  1803               	skipnc
 14988  042A  2C2F               	goto	l6457
 14989                           
 14990                           ;miwi_p2p.c: 1923: {
 14991                           ;miwi_p2p.c: 1924: broadcast_count = 1;
 14992  042B  0021               	movlb	1	; select bank1
 14993  042C  01EB               	clrf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 14994  042D  0AEB               	incf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),f
 14995                           
 14996                           ;miwi_p2p.c: 1925: }
 14997  042E  2C7A               	goto	l6463
 14998  042F                     l6457:	
 14999                           
 15000                           ;miwi_p2p.c: 1926: else
 15001                           ;miwi_p2p.c: 1927: {
 15002                           ;miwi_p2p.c: 1928: broadcast_count = ((conn_size * 4) + 4 )/ 35;
 15003  042F  3023               	movlw	35
 15004  0430  0021               	movlb	1	; select bank1
 15005  0431  00A0               	movwf	___awdiv@divisor^(0+128)
 15006  0432  3000               	movlw	0
 15007  0433  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 15008  0434  0020               	movlb	0	; select bank0
 15009  0435  086A               	movf	_conn_size,w
 15010  0436  0021               	movlb	1	; select bank1
 15011  0437  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15012  0438  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15013  0439  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15014  043A  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15015  043B  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15016  043C  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15017  043D  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15018  043E  3E04               	addlw	4
 15019  043F  00A2               	movwf	___awdiv@dividend^(0+128)
 15020  0440  3000               	movlw	0
 15021  0441  3D63               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15022  0442  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 15023  0443  31AD  25F9  3184   	fcall	___awdiv
 15024  0446  0021               	movlb	1	; select bank1
 15025  0447  0820               	movf	?___awdiv^(0+128),w
 15026  0448  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15027  0449  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15028  044A  00EB               	movwf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 15029                           
 15030                           ;miwi_p2p.c: 1929: if ((conn_size *4) + 4 % 35 != 0)
 15031  044B  0020               	movlb	0	; select bank0
 15032  044C  086A               	movf	_conn_size,w
 15033  044D  0021               	movlb	1	; select bank1
 15034  044E  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15035  044F  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15036  0450  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15037  0451  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15038  0452  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15039  0453  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15040  0454  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15041  0455  3E04               	addlw	4
 15042  0456  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15043  0457  3000               	movlw	0
 15044  0458  3D63               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15045  0459  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 15046  045A  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15047  045B  0465               	iorwf	((??_MiApp_BroadcastConnectionTable+2)^(0+128)+1),w
 15048  045C  1903               	btfsc	3,2
 15049  045D  2C7A               	goto	l6463
 15050                           
 15051                           ;miwi_p2p.c: 1930: {
 15052                           ;miwi_p2p.c: 1931: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 35;
 15053  045E  3023               	movlw	35
 15054  045F  00A0               	movwf	___awmod@divisor^(0+128)
 15055  0460  3000               	movlw	0
 15056  0461  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 15057  0462  0020               	movlb	0	; select bank0
 15058  0463  086A               	movf	_conn_size,w
 15059  0464  0021               	movlb	1	; select bank1
 15060  0465  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15061  0466  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15062  0467  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15063  0468  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15064  0469  35E2               	lslf	??_MiApp_BroadcastConnectionTable^(0+128),f
 15065  046A  0DE3               	rlf	(??_MiApp_BroadcastConnectionTable^(0+128)+1),f
 15066  046B  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15067  046C  3E04               	addlw	4
 15068  046D  00A2               	movwf	___awmod@dividend^(0+128)
 15069  046E  3000               	movlw	0
 15070  046F  3D63               	addwfc	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15071  0470  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 15072  0471  31AB  234A  3184   	fcall	___awmod
 15073  0474  0021               	movlb	1	; select bank1
 15074  0475  0820               	movf	?___awmod^(0+128),w
 15075  0476  076B               	addwf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),w
 15076  0477  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15077  0478  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15078  0479  00EB               	movwf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128)
 15079  047A                     l6463:	
 15080                           
 15081                           ;miwi_p2p.c: 1932: }
 15082                           ;miwi_p2p.c: 1934: }
 15083                           ;miwi_p2p.c: 1936: for (i = 0 ; i < broadcast_count ; i++)
 15084  047A  01EC               	clrf	MiApp_BroadcastConnectionTable@i^(0+128)
 15085  047B                     l6539:	
 15086  047B  086B               	movf	MiApp_BroadcastConnectionTable@broadcast_count^(0+128),w
 15087  047C  026C               	subwf	MiApp_BroadcastConnectionTable@i^(0+128),w
 15088  047D  1803               	btfsc	3,0
 15089  047E  0008               	return
 15090                           
 15091                           ;miwi_p2p.c: 1937: {
 15092                           ;miwi_p2p.c: 1938: {TxData = 0;};
 15093  047F  0022               	movlb	2	; select bank2
 15094  0480  01EE               	clrf	_TxData^(0+256)
 15095                           
 15096                           ;miwi_p2p.c: 1939: TxBuffer[TxData++] = 0x77;
 15097  0481  3077               	movlw	119
 15098  0482  0021               	movlb	1	; select bank1
 15099  0483  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15100  0484  0022               	movlb	2	; select bank2
 15101  0485  086E               	movf	_TxData^(0+256),w
 15102  0486  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15103  0487  0086               	movwf	6
 15104  0488  3002               	movlw	2	; select bank4/5
 15105  0489  0087               	movwf	7
 15106  048A  0021               	movlb	1	; select bank1
 15107  048B  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15108  048C  0081               	movwf	1
 15109  048D  3001               	movlw	1
 15110  048E  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15111  048F  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15112  0490  0022               	movlb	2	; select bank2
 15113  0491  07EE               	addwf	_TxData^(0+256),f
 15114                           
 15115                           ;miwi_p2p.c: 1940: TxBuffer[TxData++] = conn_size;
 15116  0492  0020               	movlb	0	; select bank0
 15117  0493  086A               	movf	_conn_size,w
 15118  0494  0021               	movlb	1	; select bank1
 15119  0495  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15120  0496  0022               	movlb	2	; select bank2
 15121  0497  086E               	movf	_TxData^(0+256),w
 15122  0498  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15123  0499  0086               	movwf	6
 15124  049A  3002               	movlw	2	; select bank4/5
 15125  049B  0087               	movwf	7
 15126  049C  0021               	movlb	1	; select bank1
 15127  049D  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15128  049E  0081               	movwf	1
 15129  049F  3001               	movlw	1
 15130  04A0  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15131  04A1  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15132  04A2  0022               	movlb	2	; select bank2
 15133  04A3  07EE               	addwf	_TxData^(0+256),f
 15134                           
 15135                           ;miwi_p2p.c: 1941: TxBuffer[TxData++] = ((35-4)/4)*i;
 15136  04A4  3007               	movlw	7
 15137  04A5  0021               	movlb	1	; select bank1
 15138  04A6  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15139  04A7  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15140  04A8  00A0               	movwf	___bmul@multiplicand^(0+128)
 15141  04A9  086C               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 15142  04AA  31B5  2595  3184   	fcall	___bmul
 15143  04AD  0021               	movlb	1	; select bank1
 15144  04AE  00E3               	movwf	(??_MiApp_BroadcastConnectionTable+1)^(0+128)
 15145  04AF  0022               	movlb	2	; select bank2
 15146  04B0  086E               	movf	_TxData^(0+256),w
 15147  04B1  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15148  04B2  0086               	movwf	6
 15149  04B3  3002               	movlw	2	; select bank4/5
 15150  04B4  0087               	movwf	7
 15151  04B5  0021               	movlb	1	; select bank1
 15152  04B6  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15153  04B7  0081               	movwf	1
 15154  04B8  3001               	movlw	1
 15155  04B9  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15156  04BA  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15157  04BB  0022               	movlb	2	; select bank2
 15158  04BC  07EE               	addwf	_TxData^(0+256),f
 15159                           
 15160                           ;miwi_p2p.c: 1942: TxBuffer[TxData++] = ((35-4)/4)*(i+1);
 15161  04BD  3007               	movlw	7
 15162  04BE  0021               	movlb	1	; select bank1
 15163  04BF  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15164  04C0  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15165  04C1  00A0               	movwf	___bmul@multiplicand^(0+128)
 15166  04C2  086C               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 15167  04C3  3E01               	addlw	1
 15168  04C4  31B5  2595  3184   	fcall	___bmul
 15169  04C7  0021               	movlb	1	; select bank1
 15170  04C8  00E3               	movwf	(??_MiApp_BroadcastConnectionTable+1)^(0+128)
 15171  04C9  0022               	movlb	2	; select bank2
 15172  04CA  086E               	movf	_TxData^(0+256),w
 15173  04CB  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15174  04CC  0086               	movwf	6
 15175  04CD  3002               	movlw	2	; select bank4/5
 15176  04CE  0087               	movwf	7
 15177  04CF  0021               	movlb	1	; select bank1
 15178  04D0  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15179  04D1  0081               	movwf	1
 15180  04D2  3001               	movlw	1
 15181  04D3  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15182  04D4  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15183  04D5  0022               	movlb	2	; select bank2
 15184  04D6  07EE               	addwf	_TxData^(0+256),f
 15185                           
 15186                           ;miwi_p2p.c: 1943: count = 4;
 15187  04D7  3004               	movlw	4
 15188  04D8  0021               	movlb	1	; select bank1
 15189  04D9  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15190  04DA  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15191  04DB  00EA               	movwf	MiApp_BroadcastConnectionTable@count^(0+128)
 15192                           
 15193                           ;miwi_p2p.c: 1944: for (j= ((35-4)/4)*i ;j<((35-4)/4)*(i+1);j++)
 15194  04DC  3007               	movlw	7
 15195  04DD  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15196  04DE  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15197  04DF  00A0               	movwf	___bmul@multiplicand^(0+128)
 15198  04E0  086C               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 15199  04E1  31B5  2595  3184   	fcall	___bmul
 15200  04E4  0021               	movlb	1	; select bank1
 15201  04E5  00E3               	movwf	(??_MiApp_BroadcastConnectionTable+1)^(0+128)
 15202  04E6  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15203  04E7  00ED               	movwf	MiApp_BroadcastConnectionTable@j^(0+128)
 15204  04E8                     l6521:	
 15205  04E8  086C               	movf	MiApp_BroadcastConnectionTable@i^(0+128),w
 15206  04E9  3E01               	addlw	1
 15207  04EA  00A7               	movwf	___wmul@multiplier^(0+128)
 15208  04EB  3000               	movlw	0
 15209  04EC  1803               	skipnc
 15210  04ED  3001               	movlw	1
 15211  04EE  00A8               	movwf	(___wmul@multiplier^(0+128)+1)
 15212  04EF  3007               	movlw	7
 15213  04F0  00A9               	movwf	___wmul@multiplicand^(0+128)
 15214  04F1  3000               	movlw	0
 15215  04F2  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15216  04F3  31B6  26A4  3184   	fcall	___wmul
 15217  04F6  0021               	movlb	1	; select bank1
 15218  04F7  0828               	movf	(?___wmul+1)^(0+128),w
 15219  04F8  3A80               	xorlw	128
 15220  04F9  3C80               	sublw	128
 15221  04FA  1D03               	skipz
 15222  04FB  2CFE               	goto	u6835
 15223  04FC  0827               	movf	?___wmul^(0+128),w
 15224  04FD  026D               	subwf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15225  04FE                     u6835:	
 15226  04FE  1803               	btfsc	3,0
 15227  04FF  2E00               	goto	l6523
 15228                           
 15229                           ;miwi_p2p.c: 1945: {
 15230                           ;miwi_p2p.c: 1946: if (j < conn_size)
 15231  0500  0020               	movlb	0	; select bank0
 15232  0501  086A               	movf	_conn_size,w
 15233  0502  0021               	movlb	1	; select bank1
 15234  0503  026D               	subwf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15235  0504  1803               	skipnc
 15236  0505  2DFB               	goto	l6519
 15237                           
 15238                           ;miwi_p2p.c: 1947: {
 15239                           ;miwi_p2p.c: 1948: if (ConnectionTable[j].status.bits.isValid)
 15240  0506  086D               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15241  0507  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15242  0508  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15243  0509  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15244  050A  00A7               	movwf	___wmul@multiplier^(0+128)
 15245  050B  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15246  050C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 15247  050D  300E               	movlw	14
 15248  050E  00A9               	movwf	___wmul@multiplicand^(0+128)
 15249  050F  3000               	movlw	0
 15250  0510  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15251  0511  31B6  26A4  3184   	fcall	___wmul
 15252  0514  0021               	movlb	1	; select bank1
 15253  0515  0827               	movf	?___wmul^(0+128),w
 15254  0516  3E0C               	addlw	12
 15255  0517  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15256  0518  3000               	movlw	0
 15257  0519  3D28               	addwfc	(?___wmul+1)^(0+128),w
 15258  051A  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 15259  051B  3064               	movlw	100
 15260  051C  00E6               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 15261  051D  3023               	movlw	35
 15262  051E  00E7               	movwf	((??_MiApp_BroadcastConnectionTable+4)^(0+128)+1)
 15263  051F  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15264  0520  0766               	addwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 15265  0521  0086               	movwf	6
 15266  0522  0865               	movf	(??_MiApp_BroadcastConnectionTable+3)^(0+128),w
 15267  0523  3D67               	addwfc	(??_MiApp_BroadcastConnectionTable+5)^(0+128),w
 15268  0524  0087               	movwf	7
 15269  0525  1F81               	btfss	1,7
 15270  0526  2DB1               	goto	l6505
 15271                           
 15272                           ;miwi_p2p.c: 1949: {
 15273                           ;miwi_p2p.c: 1951: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
 15274  0527  086D               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15275  0528  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15276  0529  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15277  052A  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15278  052B  00A7               	movwf	___wmul@multiplier^(0+128)
 15279  052C  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15280  052D  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 15281  052E  300E               	movlw	14
 15282  052F  00A9               	movwf	___wmul@multiplicand^(0+128)
 15283  0530  3000               	movlw	0
 15284  0531  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15285  0532  31B6  26A4  3184   	fcall	___wmul
 15286  0535  0021               	movlb	1	; select bank1
 15287  0536  0827               	movf	?___wmul^(0+128),w
 15288  0537  3E04               	addlw	4
 15289  0538  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15290  0539  3000               	movlw	0
 15291  053A  3D28               	addwfc	(?___wmul+1)^(0+128),w
 15292  053B  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 15293  053C  3064               	movlw	100
 15294  053D  00E6               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 15295  053E  3023               	movlw	35
 15296  053F  00E7               	movwf	((??_MiApp_BroadcastConnectionTable+4)^(0+128)+1)
 15297  0540  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15298  0541  0766               	addwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 15299  0542  0086               	movwf	6
 15300  0543  0865               	movf	(??_MiApp_BroadcastConnectionTable+3)^(0+128),w
 15301  0544  3D67               	addwfc	(??_MiApp_BroadcastConnectionTable+5)^(0+128),w
 15302  0545  0087               	movwf	7
 15303  0546  0801               	movf	1,w
 15304  0547  00E8               	movwf	(??_MiApp_BroadcastConnectionTable+6)^(0+128)
 15305  0548  0022               	movlb	2	; select bank2
 15306  0549  086E               	movf	_TxData^(0+256),w
 15307  054A  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15308  054B  0086               	movwf	6
 15309  054C  3002               	movlw	2	; select bank4/5
 15310  054D  0087               	movwf	7
 15311  054E  0021               	movlb	1	; select bank1
 15312  054F  0868               	movf	(??_MiApp_BroadcastConnectionTable+6)^(0+128),w
 15313  0550  0081               	movwf	1
 15314  0551  3001               	movlw	1
 15315  0552  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15316  0553  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15317  0554  0022               	movlb	2	; select bank2
 15318  0555  07EE               	addwf	_TxData^(0+256),f
 15319                           
 15320                           ;miwi_p2p.c: 1952: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
 15321  0556  0021               	movlb	1	; select bank1
 15322  0557  086D               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15323  0558  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15324  0559  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15325  055A  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15326  055B  00A7               	movwf	___wmul@multiplier^(0+128)
 15327  055C  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15328  055D  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 15329  055E  300E               	movlw	14
 15330  055F  00A9               	movwf	___wmul@multiplicand^(0+128)
 15331  0560  3000               	movlw	0
 15332  0561  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15333  0562  31B6  26A4  3184   	fcall	___wmul
 15334  0565  0021               	movlb	1	; select bank1
 15335  0566  0827               	movf	?___wmul^(0+128),w
 15336  0567  3E05               	addlw	5
 15337  0568  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15338  0569  3000               	movlw	0
 15339  056A  3D28               	addwfc	(?___wmul+1)^(0+128),w
 15340  056B  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 15341  056C  3064               	movlw	100
 15342  056D  00E6               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 15343  056E  3023               	movlw	35
 15344  056F  00E7               	movwf	((??_MiApp_BroadcastConnectionTable+4)^(0+128)+1)
 15345  0570  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15346  0571  0766               	addwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 15347  0572  0086               	movwf	6
 15348  0573  0865               	movf	(??_MiApp_BroadcastConnectionTable+3)^(0+128),w
 15349  0574  3D67               	addwfc	(??_MiApp_BroadcastConnectionTable+5)^(0+128),w
 15350  0575  0087               	movwf	7
 15351  0576  0801               	movf	1,w
 15352  0577  00E8               	movwf	(??_MiApp_BroadcastConnectionTable+6)^(0+128)
 15353  0578  0022               	movlb	2	; select bank2
 15354  0579  086E               	movf	_TxData^(0+256),w
 15355  057A  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15356  057B  0086               	movwf	6
 15357  057C  3002               	movlw	2	; select bank4/5
 15358  057D  0087               	movwf	7
 15359  057E  0021               	movlb	1	; select bank1
 15360  057F  0868               	movf	(??_MiApp_BroadcastConnectionTable+6)^(0+128),w
 15361  0580  0081               	movwf	1
 15362  0581  3001               	movlw	1
 15363  0582  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15364  0583  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15365  0584  0022               	movlb	2	; select bank2
 15366  0585  07EE               	addwf	_TxData^(0+256),f
 15367                           
 15368                           ;miwi_p2p.c: 1953: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
 15369  0586  0021               	movlb	1	; select bank1
 15370  0587  086D               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15371  0588  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15372  0589  01E3               	clrf	(??_MiApp_BroadcastConnectionTable^(0+128)+1)
 15373  058A  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15374  058B  00A7               	movwf	___wmul@multiplier^(0+128)
 15375  058C  0863               	movf	(??_MiApp_BroadcastConnectionTable+1)^(0+128),w
 15376  058D  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 15377  058E  300E               	movlw	14
 15378  058F  00A9               	movwf	___wmul@multiplicand^(0+128)
 15379  0590  3000               	movlw	0
 15380  0591  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15381  0592  31B6  26A4  3184   	fcall	___wmul
 15382  0595  0021               	movlb	1	; select bank1
 15383  0596  0827               	movf	?___wmul^(0+128),w
 15384  0597  3E06               	addlw	6
 15385  0598  00E4               	movwf	(??_MiApp_BroadcastConnectionTable+2)^(0+128)
 15386  0599  3000               	movlw	0
 15387  059A  3D28               	addwfc	(?___wmul+1)^(0+128),w
 15388  059B  00E5               	movwf	(??_MiApp_BroadcastConnectionTable+3)^(0+128)
 15389  059C  3064               	movlw	100
 15390  059D  00E6               	movwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128)
 15391  059E  3023               	movlw	35
 15392  059F  00E7               	movwf	((??_MiApp_BroadcastConnectionTable+4)^(0+128)+1)
 15393  05A0  0864               	movf	(??_MiApp_BroadcastConnectionTable+2)^(0+128),w
 15394  05A1  0766               	addwf	(??_MiApp_BroadcastConnectionTable+4)^(0+128),w
 15395  05A2  0086               	movwf	6
 15396  05A3  0865               	movf	(??_MiApp_BroadcastConnectionTable+3)^(0+128),w
 15397  05A4  3D67               	addwfc	(??_MiApp_BroadcastConnectionTable+5)^(0+128),w
 15398  05A5  0087               	movwf	7
 15399  05A6  0801               	movf	1,w
 15400  05A7  00E8               	movwf	(??_MiApp_BroadcastConnectionTable+6)^(0+128)
 15401  05A8  0022               	movlb	2	; select bank2
 15402  05A9  086E               	movf	_TxData^(0+256),w
 15403  05AA  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15404  05AB  0086               	movwf	6
 15405  05AC  3002               	movlw	2	; select bank4/5
 15406  05AD  0087               	movwf	7
 15407  05AE  0021               	movlb	1	; select bank1
 15408  05AF  0868               	movf	(??_MiApp_BroadcastConnectionTable+6)^(0+128),w
 15409  05B0  2DDE               	goto	L3
 15410  05B1                     l6505:	
 15411                           ;miwi_p2p.c: 1956: }
 15412                           
 15413                           ;miwi_p2p.c: 1954: TxBuffer[TxData++] = j;
 15414                           
 15415                           
 15416                           ;miwi_p2p.c: 1958: else
 15417                           ;miwi_p2p.c: 1959: {
 15418                           ;miwi_p2p.c: 1961: TxBuffer[TxData++] = 0xff;
 15419  05B1  30FF               	movlw	255
 15420  05B2  0021               	movlb	1	; select bank1
 15421  05B3  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15422  05B4  0022               	movlb	2	; select bank2
 15423  05B5  086E               	movf	_TxData^(0+256),w
 15424  05B6  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15425  05B7  0086               	movwf	6
 15426  05B8  3002               	movlw	2	; select bank4/5
 15427  05B9  0087               	movwf	7
 15428  05BA  0021               	movlb	1	; select bank1
 15429  05BB  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15430  05BC  0081               	movwf	1
 15431  05BD  3001               	movlw	1
 15432  05BE  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15433  05BF  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15434  05C0  0022               	movlb	2	; select bank2
 15435  05C1  07EE               	addwf	_TxData^(0+256),f
 15436                           
 15437                           ;miwi_p2p.c: 1962: TxBuffer[TxData++] = 0xff;
 15438  05C2  30FF               	movlw	255
 15439  05C3  0021               	movlb	1	; select bank1
 15440  05C4  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15441  05C5  0022               	movlb	2	; select bank2
 15442  05C6  086E               	movf	_TxData^(0+256),w
 15443  05C7  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15444  05C8  0086               	movwf	6
 15445  05C9  3002               	movlw	2	; select bank4/5
 15446  05CA  0087               	movwf	7
 15447  05CB  0021               	movlb	1	; select bank1
 15448  05CC  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15449  05CD  0081               	movwf	1
 15450  05CE  3001               	movlw	1
 15451  05CF  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15452  05D0  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15453  05D1  0022               	movlb	2	; select bank2
 15454  05D2  07EE               	addwf	_TxData^(0+256),f
 15455                           
 15456                           ;miwi_p2p.c: 1963: TxBuffer[TxData++] = 0xff;
 15457  05D3  30FF               	movlw	255
 15458  05D4  0021               	movlb	1	; select bank1
 15459  05D5  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15460  05D6  0022               	movlb	2	; select bank2
 15461  05D7  086E               	movf	_TxData^(0+256),w
 15462  05D8  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15463  05D9  0086               	movwf	6
 15464  05DA  3002               	movlw	2	; select bank4/5
 15465  05DB  0087               	movwf	7
 15466  05DC  0021               	movlb	1	; select bank1
 15467  05DD  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15468  05DE                     L3:	
 15469  05DE  0081               	movwf	1
 15470  05DF  3001               	movlw	1
 15471  05E0  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15472  05E1  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15473  05E2  0022               	movlb	2	; select bank2
 15474  05E3  07EE               	addwf	_TxData^(0+256),f
 15475                           
 15476                           ;miwi_p2p.c: 1964: TxBuffer[TxData++] = j;
 15477  05E4  0021               	movlb	1	; select bank1
 15478  05E5  086D               	movf	MiApp_BroadcastConnectionTable@j^(0+128),w
 15479  05E6  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15480  05E7  0022               	movlb	2	; select bank2
 15481  05E8  086E               	movf	_TxData^(0+256),w
 15482  05E9  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15483  05EA  0086               	movwf	6
 15484  05EB  3002               	movlw	2	; select bank4/5
 15485  05EC  0087               	movwf	7
 15486  05ED  0021               	movlb	1	; select bank1
 15487  05EE  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15488  05EF  0081               	movwf	1
 15489  05F0  3001               	movlw	1
 15490  05F1  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15491  05F2  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15492  05F3  0022               	movlb	2	; select bank2
 15493  05F4  07EE               	addwf	_TxData^(0+256),f
 15494                           
 15495                           ;miwi_p2p.c: 1965: }
 15496                           ;miwi_p2p.c: 1966: count = count + 4;
 15497  05F5  0021               	movlb	1	; select bank1
 15498  05F6  086A               	movf	MiApp_BroadcastConnectionTable@count^(0+128),w
 15499  05F7  3E04               	addlw	4
 15500  05F8  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15501  05F9  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15502  05FA  00EA               	movwf	MiApp_BroadcastConnectionTable@count^(0+128)
 15503  05FB                     l6519:	
 15504  05FB  3001               	movlw	1
 15505  05FC  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15506  05FD  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15507  05FE  07ED               	addwf	MiApp_BroadcastConnectionTable@j^(0+128),f
 15508  05FF  2CE8               	goto	l6521
 15509  0600                     l6523:	
 15510                           
 15511                           ;miwi_p2p.c: 1967: }
 15512                           ;miwi_p2p.c: 1968: }
 15513                           ;miwi_p2p.c: 1970: for (k=count;k<35;k++)
 15514  0600  0021               	movlb	1	; select bank1
 15515  0601  086A               	movf	MiApp_BroadcastConnectionTable@count^(0+128),w
 15516  0602  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15517  0603  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15518  0604  00E9               	movwf	MiApp_BroadcastConnectionTable@k^(0+128)
 15519  0605  3023               	movlw	35
 15520  0606  0269               	subwf	MiApp_BroadcastConnectionTable@k^(0+128),w
 15521  0607  1803               	btfsc	3,0
 15522  0608  2E22               	goto	l6535
 15523  0609                     l6527:	
 15524                           
 15525                           ;miwi_p2p.c: 1971: {
 15526                           ;miwi_p2p.c: 1972: TxBuffer[TxData++] = 0x11;
 15527  0609  3011               	movlw	17
 15528  060A  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15529  060B  0022               	movlb	2	; select bank2
 15530  060C  086E               	movf	_TxData^(0+256),w
 15531  060D  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15532  060E  0086               	movwf	6
 15533  060F  3002               	movlw	2	; select bank4/5
 15534  0610  0087               	movwf	7
 15535  0611  0021               	movlb	1	; select bank1
 15536  0612  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15537  0613  0081               	movwf	1
 15538  0614  3001               	movlw	1
 15539  0615  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15540  0616  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15541  0617  0022               	movlb	2	; select bank2
 15542  0618  07EE               	addwf	_TxData^(0+256),f
 15543  0619  3001               	movlw	1
 15544  061A  0021               	movlb	1	; select bank1
 15545  061B  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15546  061C  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15547  061D  07E9               	addwf	MiApp_BroadcastConnectionTable@k^(0+128),f
 15548  061E  3023               	movlw	35
 15549  061F  0269               	subwf	MiApp_BroadcastConnectionTable@k^(0+128),w
 15550  0620  1C03               	skipc
 15551  0621  2E09               	goto	l6527
 15552  0622                     l6535:	
 15553                           
 15554                           ;miwi_p2p.c: 1973: }
 15555                           ;miwi_p2p.c: 1981: SendPacket(1, (0), 1, 0);
 15556  0622  3000               	movlw	0
 15557  0623  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 15558  0624  3000               	movlw	0
 15559  0625  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 15560  0626  01D8               	clrf	SendPacket@isCommand^(0+128)
 15561  0627  0AD8               	incf	SendPacket@isCommand^(0+128),f
 15562  0628  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 15563  0629  3001               	movlw	1
 15564  062A  31AB  2390  3184   	fcall	_SendPacket
 15565  062D  3001               	movlw	1
 15566  062E  0021               	movlb	1	; select bank1
 15567  062F  00E2               	movwf	??_MiApp_BroadcastConnectionTable^(0+128)
 15568  0630  0862               	movf	??_MiApp_BroadcastConnectionTable^(0+128),w
 15569  0631  07EC               	addwf	MiApp_BroadcastConnectionTable@i^(0+128),f
 15570  0632  2C7B               	goto	l6539
 15571  0633                     __end_of_MiApp_BroadcastConnectionTable:	
 15572                           
 15573                           	psect	text37
 15574  2B4A                     __ptext37:	
 15575 ;; *************** function ___awmod *****************
 15576 ;; Defined at:
 15577 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;  divisor         2    0[BANK1 ] int 
 15580 ;;  dividend        2    2[BANK1 ] int 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  sign            1    6[BANK1 ] unsigned char 
 15583 ;;  counter         1    5[BANK1 ] unsigned char 
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  2    0[BANK1 ] int 
 15586 ;; Registers used:
 15587 ;;		wreg, status,2, status,0
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15593 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;Total ram usage:        7 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:    5
 15600 ;; This function calls:
 15601 ;;		Nothing
 15602 ;; This function is called by:
 15603 ;;		_MiApp_BroadcastConnectionTable
 15604 ;;		_run_star_demo
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           
 15609                           ;psect for function ___awmod
 15610  2B4A                     ___awmod:	
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15614  2B4A  0021               	movlb	1	; select bank1
 15615  2B4B  01A6               	clrf	___awmod@sign^(0+128)
 15616  2B4C  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 15617  2B4D  2B55               	goto	l6229
 15618  2B4E  09A2               	comf	___awmod@dividend^(0+128),f
 15619  2B4F  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 15620  2B50  0AA2               	incf	___awmod@dividend^(0+128),f
 15621  2B51  1903               	skipnz
 15622  2B52  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 15623  2B53  01A6               	clrf	___awmod@sign^(0+128)
 15624  2B54  0AA6               	incf	___awmod@sign^(0+128),f
 15625  2B55                     l6229:	
 15626  2B55  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 15627  2B56  2B5C               	goto	l6233
 15628  2B57  09A0               	comf	___awmod@divisor^(0+128),f
 15629  2B58  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 15630  2B59  0AA0               	incf	___awmod@divisor^(0+128),f
 15631  2B5A  1903               	skipnz
 15632  2B5B  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 15633  2B5C                     l6233:	
 15634  2B5C  0820               	movf	___awmod@divisor^(0+128),w
 15635  2B5D  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 15636  2B5E  1903               	btfsc	3,2
 15637  2B5F  2B83               	goto	l6251
 15638  2B60  01A5               	clrf	___awmod@counter^(0+128)
 15639  2B61  0AA5               	incf	___awmod@counter^(0+128),f
 15640  2B62                     l6241:	
 15641  2B62  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
 15642  2B63  2B6E               	goto	l6243
 15643  2B64  3001               	movlw	1
 15644  2B65                     u6385:	
 15645  2B65  35A0               	lslf	___awmod@divisor^(0+128),f
 15646  2B66  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 15647  2B67  0B89               	decfsz	9,f
 15648  2B68  2B65               	goto	u6385
 15649  2B69  3001               	movlw	1
 15650  2B6A  00A4               	movwf	??___awmod^(0+128)
 15651  2B6B  0824               	movf	??___awmod^(0+128),w
 15652  2B6C  07A5               	addwf	___awmod@counter^(0+128),f
 15653  2B6D  2B62               	goto	l6241
 15654  2B6E                     l6243:	
 15655  2B6E  0821               	movf	(___awmod@divisor+1)^(0+128),w
 15656  2B6F  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 15657  2B70  1D03               	skipz
 15658  2B71  2B74               	goto	u6405
 15659  2B72  0820               	movf	___awmod@divisor^(0+128),w
 15660  2B73  0222               	subwf	___awmod@dividend^(0+128),w
 15661  2B74                     u6405:	
 15662  2B74  1C03               	skipc
 15663  2B75  2B7A               	goto	l6247
 15664  2B76  0820               	movf	___awmod@divisor^(0+128),w
 15665  2B77  02A2               	subwf	___awmod@dividend^(0+128),f
 15666  2B78  0821               	movf	(___awmod@divisor+1)^(0+128),w
 15667  2B79  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 15668  2B7A                     l6247:	
 15669  2B7A  3001               	movlw	1
 15670  2B7B                     u6415:	
 15671  2B7B  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 15672  2B7C  0CA0               	rrf	___awmod@divisor^(0+128),f
 15673  2B7D  0B89               	decfsz	9,f
 15674  2B7E  2B7B               	goto	u6415
 15675  2B7F  3001               	movlw	1
 15676  2B80  02A5               	subwf	___awmod@counter^(0+128),f
 15677  2B81  1D03               	btfss	3,2
 15678  2B82  2B6E               	goto	l6243
 15679  2B83                     l6251:	
 15680  2B83  0826               	movf	___awmod@sign^(0+128),w
 15681  2B84  1903               	btfsc	3,2
 15682  2B85  2B8B               	goto	l6255
 15683  2B86  09A2               	comf	___awmod@dividend^(0+128),f
 15684  2B87  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 15685  2B88  0AA2               	incf	___awmod@dividend^(0+128),f
 15686  2B89  1903               	skipnz
 15687  2B8A  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 15688  2B8B                     l6255:	
 15689  2B8B  0823               	movf	(___awmod@dividend+1)^(0+128),w
 15690  2B8C  00A1               	movwf	(?___awmod+1)^(0+128)
 15691  2B8D  0822               	movf	___awmod@dividend^(0+128),w
 15692  2B8E  00A0               	movwf	?___awmod^(0+128)
 15693  2B8F  0008               	return
 15694  2B90                     __end_of___awmod:	
 15695                           
 15696                           	psect	text38
 15697  2DF9                     __ptext38:	
 15698 ;; *************** function ___awdiv *****************
 15699 ;; Defined at:
 15700 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;  divisor         2    0[BANK1 ] int 
 15703 ;;  dividend        2    2[BANK1 ] int 
 15704 ;; Auto vars:     Size  Location     Type
 15705 ;;  quotient        2    7[BANK1 ] int 
 15706 ;;  sign            1    6[BANK1 ] unsigned char 
 15707 ;;  counter         1    5[BANK1 ] unsigned char 
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  2    0[BANK1 ] int 
 15710 ;; Registers used:
 15711 ;;		wreg, status,2, status,0
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15717 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;Total ram usage:        9 bytes
 15722 ;; Hardware stack levels used:    1
 15723 ;; Hardware stack levels required when called:    5
 15724 ;; This function calls:
 15725 ;;		Nothing
 15726 ;; This function is called by:
 15727 ;;		_MiApp_BroadcastConnectionTable
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           
 15732                           ;psect for function ___awdiv
 15733  2DF9                     ___awdiv:	
 15734                           
 15735                           ;incstack = 0
 15736                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15737  2DF9  0021               	movlb	1	; select bank1
 15738  2DFA  01A6               	clrf	___awdiv@sign^(0+128)
 15739  2DFB  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 15740  2DFC  2E04               	goto	l6185
 15741  2DFD  09A0               	comf	___awdiv@divisor^(0+128),f
 15742  2DFE  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 15743  2DFF  0AA0               	incf	___awdiv@divisor^(0+128),f
 15744  2E00  1903               	skipnz
 15745  2E01  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 15746  2E02  01A6               	clrf	___awdiv@sign^(0+128)
 15747  2E03  0AA6               	incf	___awdiv@sign^(0+128),f
 15748  2E04                     l6185:	
 15749  2E04  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 15750  2E05  2E0F               	goto	l6191
 15751  2E06  09A2               	comf	___awdiv@dividend^(0+128),f
 15752  2E07  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 15753  2E08  0AA2               	incf	___awdiv@dividend^(0+128),f
 15754  2E09  1903               	skipnz
 15755  2E0A  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 15756  2E0B  3001               	movlw	1
 15757  2E0C  00A4               	movwf	??___awdiv^(0+128)
 15758  2E0D  0824               	movf	??___awdiv^(0+128),w
 15759  2E0E  06A6               	xorwf	___awdiv@sign^(0+128),f
 15760  2E0F                     l6191:	
 15761  2E0F  01A7               	clrf	___awdiv@quotient^(0+128)
 15762  2E10  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
 15763  2E11  0820               	movf	___awdiv@divisor^(0+128),w
 15764  2E12  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 15765  2E13  1903               	btfsc	3,2
 15766  2E14  2E3E               	goto	l6213
 15767  2E15  01A5               	clrf	___awdiv@counter^(0+128)
 15768  2E16  0AA5               	incf	___awdiv@counter^(0+128),f
 15769  2E17                     l6201:	
 15770  2E17  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
 15771  2E18  2E23               	goto	l6203
 15772  2E19  3001               	movlw	1
 15773  2E1A                     u6285:	
 15774  2E1A  35A0               	lslf	___awdiv@divisor^(0+128),f
 15775  2E1B  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 15776  2E1C  0B89               	decfsz	9,f
 15777  2E1D  2E1A               	goto	u6285
 15778  2E1E  3001               	movlw	1
 15779  2E1F  00A4               	movwf	??___awdiv^(0+128)
 15780  2E20  0824               	movf	??___awdiv^(0+128),w
 15781  2E21  07A5               	addwf	___awdiv@counter^(0+128),f
 15782  2E22  2E17               	goto	l6201
 15783  2E23                     l6203:	
 15784  2E23  3001               	movlw	1
 15785  2E24                     u6305:	
 15786  2E24  35A7               	lslf	___awdiv@quotient^(0+128),f
 15787  2E25  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
 15788  2E26  0B89               	decfsz	9,f
 15789  2E27  2E24               	goto	u6305
 15790  2E28  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 15791  2E29  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 15792  2E2A  1D03               	skipz
 15793  2E2B  2E2E               	goto	u6315
 15794  2E2C  0820               	movf	___awdiv@divisor^(0+128),w
 15795  2E2D  0222               	subwf	___awdiv@dividend^(0+128),w
 15796  2E2E                     u6315:	
 15797  2E2E  1C03               	skipc
 15798  2E2F  2E35               	goto	l6209
 15799  2E30  0820               	movf	___awdiv@divisor^(0+128),w
 15800  2E31  02A2               	subwf	___awdiv@dividend^(0+128),f
 15801  2E32  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 15802  2E33  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 15803  2E34  1427               	bsf	___awdiv@quotient^(0+128),0
 15804  2E35                     l6209:	
 15805  2E35  3001               	movlw	1
 15806  2E36                     u6325:	
 15807  2E36  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 15808  2E37  0CA0               	rrf	___awdiv@divisor^(0+128),f
 15809  2E38  0B89               	decfsz	9,f
 15810  2E39  2E36               	goto	u6325
 15811  2E3A  3001               	movlw	1
 15812  2E3B  02A5               	subwf	___awdiv@counter^(0+128),f
 15813  2E3C  1D03               	btfss	3,2
 15814  2E3D  2E23               	goto	l6203
 15815  2E3E                     l6213:	
 15816  2E3E  0826               	movf	___awdiv@sign^(0+128),w
 15817  2E3F  1903               	btfsc	3,2
 15818  2E40  2E46               	goto	l6217
 15819  2E41  09A7               	comf	___awdiv@quotient^(0+128),f
 15820  2E42  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
 15821  2E43  0AA7               	incf	___awdiv@quotient^(0+128),f
 15822  2E44  1903               	skipnz
 15823  2E45  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
 15824  2E46                     l6217:	
 15825  2E46  0828               	movf	(___awdiv@quotient+1)^(0+128),w
 15826  2E47  00A1               	movwf	(?___awdiv+1)^(0+128)
 15827  2E48  0827               	movf	___awdiv@quotient^(0+128),w
 15828  2E49  00A0               	movwf	?___awdiv^(0+128)
 15829  2E4A  0008               	return
 15830  2E4B                     __end_of___awdiv:	
 15831                           
 15832                           	psect	text39
 15833  22BD                     __ptext39:	
 15834 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 15835 ;; Defined at:
 15836 ;;		line 182 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15837 ;; Parameters:    Size  Location     Type
 15838 ;;  fw_payload      2    0[BANK2 ] PTR unsigned char 
 15839 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 15840 ;;  index           1    2[BANK2 ] unsigned char 
 15841 ;;  EDxAddress      2    3[BANK2 ] PTR unsigned char 
 15842 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 15843 ;; Auto vars:     Size  Location     Type
 15844 ;;  i               1    9[BANK2 ] unsigned char 
 15845 ;;  status          1    8[BANK2 ] unsigned char 
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1    wreg      unsigned char 
 15848 ;; Registers used:
 15849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15855 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;Total ram usage:       10 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:   13
 15862 ;; This function calls:
 15863 ;;		_DemoOutput_UnicastFail
 15864 ;;		_MiApp_UnicastConnection
 15865 ;; This function is called by:
 15866 ;;		_P2PTasks
 15867 ;; This function uses a non-reentrant model
 15868 ;;
 15869                           
 15870                           
 15871                           ;psect for function _Forward_Packet_PANCr_to_EDy
 15872  22BD                     _Forward_Packet_PANCr_to_EDy:	
 15873                           
 15874                           ;miwi_p2p.c: 184: uint8_t i;
 15875                           ;miwi_p2p.c: 185: bool status;
 15876                           ;miwi_p2p.c: 186: {TxData = 0;};
 15877                           
 15878                           ;incstack = 0
 15879 ;; hardware stack exceeded
 15880                           ; Regs used in _Forward_Packet_PANCr_to_EDy: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15881  22BD  0022               	movlb	2	; select bank2
 15882  22BE  01EE               	clrf	_TxData^(0+256)
 15883                           
 15884                           ;miwi_p2p.c: 187: TxBuffer[TxData++] = EDxAddress[0];
 15885  22BF  0823               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+256),w
 15886  22C0  0086               	movwf	6
 15887  22C1  0824               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+256),w
 15888  22C2  0087               	movwf	7
 15889  22C3  0801               	movf	1,w
 15890  22C4  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15891  22C5  086E               	movf	_TxData^(0+256),w
 15892  22C6  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15893  22C7  0086               	movwf	6
 15894  22C8  3002               	movlw	2	; select bank4/5
 15895  22C9  0087               	movwf	7
 15896  22CA  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15897  22CB  0081               	movwf	1
 15898  22CC  3001               	movlw	1
 15899  22CD  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15900  22CE  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15901  22CF  07EE               	addwf	_TxData^(0+256),f
 15902                           
 15903                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = EDxAddress[1];
 15904  22D0  0823               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+256),w
 15905  22D1  0086               	movwf	6
 15906  22D2  0824               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+256),w
 15907  22D3  0087               	movwf	7
 15908  22D4  3141               	addfsr 1,1
 15909  22D5  0801               	movf	1,w
 15910  22D6  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15911  22D7  086E               	movf	_TxData^(0+256),w
 15912  22D8  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15913  22D9  0086               	movwf	6
 15914  22DA  3002               	movlw	2	; select bank4/5
 15915  22DB  0087               	movwf	7
 15916  22DC  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15917  22DD  0081               	movwf	1
 15918  22DE  3001               	movlw	1
 15919  22DF  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15920  22E0  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15921  22E1  07EE               	addwf	_TxData^(0+256),f
 15922                           
 15923                           ;miwi_p2p.c: 189: TxBuffer[TxData++] = EDxAddress[2];
 15924  22E2  0823               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress^(0+256),w
 15925  22E3  0086               	movwf	6
 15926  22E4  0824               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)^(0+256),w
 15927  22E5  0087               	movwf	7
 15928  22E6  3142               	addfsr 1,2
 15929  22E7  0801               	movf	1,w
 15930  22E8  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15931  22E9  086E               	movf	_TxData^(0+256),w
 15932  22EA  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15933  22EB  0086               	movwf	6
 15934  22EC  3002               	movlw	2	; select bank4/5
 15935  22ED  0087               	movwf	7
 15936  22EE  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15937  22EF  0081               	movwf	1
 15938  22F0  3001               	movlw	1
 15939  22F1  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15940  22F2  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15941  22F3  07EE               	addwf	_TxData^(0+256),f
 15942                           
 15943                           ;miwi_p2p.c: 190: for(i = 3; i < 35; i++)
 15944  22F4  3003               	movlw	3
 15945  22F5  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15946  22F6  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15947  22F7  00A9               	movwf	Forward_Packet_PANCr_to_EDy@i^(0+256)
 15948  22F8  3023               	movlw	35
 15949  22F9  0229               	subwf	Forward_Packet_PANCr_to_EDy@i^(0+256),w
 15950  22FA  1803               	btfsc	3,0
 15951  22FB  2B1A               	goto	l6409
 15952  22FC                     l6401:	
 15953                           
 15954                           ;miwi_p2p.c: 191: {
 15955                           ;miwi_p2p.c: 192: TxBuffer[TxData++] = fw_payload[i];
 15956  22FC  0829               	movf	Forward_Packet_PANCr_to_EDy@i^(0+256),w
 15957  22FD  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15958  22FE  01A6               	clrf	(??_Forward_Packet_PANCr_to_EDy^(0+256)+1)
 15959  22FF  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15960  2300  0720               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload^(0+256),w
 15961  2301  0086               	movwf	6
 15962  2302  0826               	movf	(??_Forward_Packet_PANCr_to_EDy+1)^(0+256),w
 15963  2303  3D21               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)^(0+256),w
 15964  2304  0087               	movwf	7
 15965  2305  0801               	movf	1,w
 15966  2306  00A7               	movwf	(??_Forward_Packet_PANCr_to_EDy+2)^(0+256)
 15967  2307  086E               	movf	_TxData^(0+256),w
 15968  2308  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 15969  2309  0086               	movwf	6
 15970  230A  3002               	movlw	2	; select bank4/5
 15971  230B  0087               	movwf	7
 15972  230C  0827               	movf	(??_Forward_Packet_PANCr_to_EDy+2)^(0+256),w
 15973  230D  0081               	movwf	1
 15974  230E  3001               	movlw	1
 15975  230F  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15976  2310  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15977  2311  07EE               	addwf	_TxData^(0+256),f
 15978  2312  3001               	movlw	1
 15979  2313  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15980  2314  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15981  2315  07A9               	addwf	Forward_Packet_PANCr_to_EDy@i^(0+256),f
 15982  2316  3023               	movlw	35
 15983  2317  0229               	subwf	Forward_Packet_PANCr_to_EDy@i^(0+256),w
 15984  2318  1C03               	skipc
 15985  2319  2AFC               	goto	l6401
 15986  231A                     l6409:	
 15987                           
 15988                           ;miwi_p2p.c: 193: }
 15989                           ;miwi_p2p.c: 197: status = MiApp_UnicastConnection (index,0) ;
 15990  231A  0021               	movlb	1	; select bank1
 15991  231B  01E7               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
 15992  231C  0022               	movlb	2	; select bank2
 15993  231D  0822               	movf	Forward_Packet_PANCr_to_EDy@index^(0+256),w
 15994  231E  31AC  24BC  31A2   	fcall	_MiApp_UnicastConnection
 15995  2321  0022               	movlb	2	; select bank2
 15996  2322  00A5               	movwf	??_Forward_Packet_PANCr_to_EDy^(0+256)
 15997  2323  0825               	movf	??_Forward_Packet_PANCr_to_EDy^(0+256),w
 15998  2324  00A8               	movwf	Forward_Packet_PANCr_to_EDy@status^(0+256)
 15999                           
 16000                           ;miwi_p2p.c: 200: if(!status)
 16001  2325  0828               	movf	Forward_Packet_PANCr_to_EDy@status^(0+256),w
 16002  2326  1D03               	btfss	3,2
 16003  2327  2B2A               	goto	l6415
 16004                           
 16005                           ;miwi_p2p.c: 201: {
 16006                           ;miwi_p2p.c: 202: DemoOutput_UnicastFail();
 16007  2328  31B5  2530         	fcall	_DemoOutput_UnicastFail
 16008  232A                     l6415:	
 16009                           
 16010                           ;miwi_p2p.c: 203: }
 16011                           ;miwi_p2p.c: 204: return status;
 16012  232A  0022               	movlb	2	; select bank2
 16013  232B  0828               	movf	Forward_Packet_PANCr_to_EDy@status^(0+256),w
 16014  232C  0008               	return
 16015  232D                     __end_of_Forward_Packet_PANCr_to_EDy:	
 16016                           
 16017                           	psect	text40
 16018  2CBC                     __ptext40:	
 16019 ;; *************** function _MiApp_UnicastConnection *****************
 16020 ;; Defined at:
 16021 ;;		line 1776 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;  ConnectionIn    1    wreg     unsigned char 
 16024 ;;  SecEn           1   71[BANK1 ] unsigned char 
 16025 ;; Auto vars:     Size  Location     Type
 16026 ;;  ConnectionIn    1   79[BANK1 ] unsigned char 
 16027 ;; Return value:  Size  Location     Type
 16028 ;;                  1    wreg      unsigned char 
 16029 ;; Registers used:
 16030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16031 ;; Tracked objects:
 16032 ;;		On entry : 0/0
 16033 ;;		On exit  : 0/0
 16034 ;;		Unchanged: 0/0
 16035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16036 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;Total ram usage:        9 bytes
 16041 ;; Hardware stack levels used:    1
 16042 ;; Hardware stack levels required when called:   12
 16043 ;; This function calls:
 16044 ;;		_MiApp_UnicastAddress
 16045 ;;		___wmul
 16046 ;; This function is called by:
 16047 ;;		_Forward_Packet_PANCr_to_EDy
 16048 ;;		_run_star_demo
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           
 16053                           ;psect for function _MiApp_UnicastConnection
 16054  2CBC                     _MiApp_UnicastConnection:	
 16055                           
 16056                           ;incstack = 0
 16057 ;; hardware stack exceeded
 16058                           ; Regs used in _MiApp_UnicastConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16059                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 16060  2CBC  0021               	movlb	1	; select bank1
 16061  2CBD  00EF               	movwf	MiApp_UnicastConnection@ConnectionIndex^(0+128)
 16062                           
 16063                           ;miwi_p2p.c: 1779: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 16064  2CBE  086F               	movf	MiApp_UnicastConnection@ConnectionIndex^(0+128),w
 16065  2CBF  00E8               	movwf	??_MiApp_UnicastConnection^(0+128)
 16066  2CC0  01E9               	clrf	(??_MiApp_UnicastConnection^(0+128)+1)
 16067  2CC1  0868               	movf	??_MiApp_UnicastConnection^(0+128),w
 16068  2CC2  00A7               	movwf	___wmul@multiplier^(0+128)
 16069  2CC3  0869               	movf	(??_MiApp_UnicastConnection+1)^(0+128),w
 16070  2CC4  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16071  2CC5  300E               	movlw	14
 16072  2CC6  00A9               	movwf	___wmul@multiplicand^(0+128)
 16073  2CC7  3000               	movlw	0
 16074  2CC8  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16075  2CC9  31B6  26A4  31AC   	fcall	___wmul
 16076  2CCC  0021               	movlb	1	; select bank1
 16077  2CCD  0827               	movf	?___wmul^(0+128),w
 16078  2CCE  3E0C               	addlw	12
 16079  2CCF  00EA               	movwf	(??_MiApp_UnicastConnection+2)^(0+128)
 16080  2CD0  3000               	movlw	0
 16081  2CD1  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16082  2CD2  00EB               	movwf	(??_MiApp_UnicastConnection+3)^(0+128)
 16083  2CD3  3064               	movlw	100
 16084  2CD4  00EC               	movwf	(??_MiApp_UnicastConnection+4)^(0+128)
 16085  2CD5  3023               	movlw	35
 16086  2CD6  00ED               	movwf	((??_MiApp_UnicastConnection+4)^(0+128)+1)
 16087  2CD7  086A               	movf	(??_MiApp_UnicastConnection+2)^(0+128),w
 16088  2CD8  076C               	addwf	(??_MiApp_UnicastConnection+4)^(0+128),w
 16089  2CD9  0086               	movwf	6
 16090  2CDA  086B               	movf	(??_MiApp_UnicastConnection+3)^(0+128),w
 16091  2CDB  3D6D               	addwfc	(??_MiApp_UnicastConnection+5)^(0+128),w
 16092  2CDC  0087               	movwf	7
 16093  2CDD  1F81               	btfss	1,7
 16094  2CDE  2D07               	goto	l6099
 16095                           
 16096                           ;miwi_p2p.c: 1780: {
 16097                           ;miwi_p2p.c: 1813: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 16098  2CDF  086F               	movf	MiApp_UnicastConnection@ConnectionIndex^(0+128),w
 16099  2CE0  00E8               	movwf	??_MiApp_UnicastConnection^(0+128)
 16100  2CE1  01E9               	clrf	(??_MiApp_UnicastConnection^(0+128)+1)
 16101  2CE2  0868               	movf	??_MiApp_UnicastConnection^(0+128),w
 16102  2CE3  00A7               	movwf	___wmul@multiplier^(0+128)
 16103  2CE4  0869               	movf	(??_MiApp_UnicastConnection+1)^(0+128),w
 16104  2CE5  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16105  2CE6  300E               	movlw	14
 16106  2CE7  00A9               	movwf	___wmul@multiplicand^(0+128)
 16107  2CE8  3000               	movlw	0
 16108  2CE9  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16109  2CEA  31B6  26A4  31AC   	fcall	___wmul
 16110  2CED  0021               	movlb	1	; select bank1
 16111  2CEE  0827               	movf	?___wmul^(0+128),w
 16112  2CEF  3E04               	addlw	4
 16113  2CF0  00EA               	movwf	(??_MiApp_UnicastConnection+2)^(0+128)
 16114  2CF1  3000               	movlw	0
 16115  2CF2  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16116  2CF3  00EB               	movwf	(??_MiApp_UnicastConnection+3)^(0+128)
 16117  2CF4  3064               	movlw	100
 16118  2CF5  00EC               	movwf	(??_MiApp_UnicastConnection+4)^(0+128)
 16119  2CF6  3023               	movlw	35
 16120  2CF7  00ED               	movwf	((??_MiApp_UnicastConnection+4)^(0+128)+1)
 16121  2CF8  086A               	movf	(??_MiApp_UnicastConnection+2)^(0+128),w
 16122  2CF9  076C               	addwf	(??_MiApp_UnicastConnection+4)^(0+128),w
 16123  2CFA  00E2               	movwf	MiApp_UnicastAddress@DestinationAddress^(0+128)
 16124  2CFB  086B               	movf	(??_MiApp_UnicastConnection+3)^(0+128),w
 16125  2CFC  3D6D               	addwfc	(??_MiApp_UnicastConnection+5)^(0+128),w
 16126  2CFD  00E3               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)^(0+128)
 16127  2CFE  01E4               	clrf	MiApp_UnicastAddress@PermanentAddr^(0+128)
 16128  2CFF  0AE4               	incf	MiApp_UnicastAddress@PermanentAddr^(0+128),f
 16129  2D00  0867               	movf	MiApp_UnicastConnection@SecEn^(0+128),w
 16130  2D01  00EE               	movwf	(??_MiApp_UnicastConnection+6)^(0+128)
 16131  2D02  086E               	movf	(??_MiApp_UnicastConnection+6)^(0+128),w
 16132  2D03  00E5               	movwf	MiApp_UnicastAddress@SecEn^(0+128)
 16133  2D04  31B5  2546         	fcall	_MiApp_UnicastAddress
 16134  2D06  0008               	return
 16135  2D07                     l6099:	
 16136                           
 16137                           ;miwi_p2p.c: 1814: }
 16138                           ;miwi_p2p.c: 1815: return 0;
 16139  2D07  3000               	movlw	0
 16140  2D08  0008               	return
 16141  2D09                     __end_of_MiApp_UnicastConnection:	
 16142                           
 16143                           	psect	text41
 16144  3546                     __ptext41:	
 16145 ;; *************** function _MiApp_UnicastAddress *****************
 16146 ;; Defined at:
 16147 ;;		line 1855 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;  DestinationA    2   66[BANK1 ] PTR unsigned char 
 16150 ;;		 -> ConnectionTable(140), 
 16151 ;;  PermanentAdd    1   68[BANK1 ] unsigned char 
 16152 ;;  SecEn           1   69[BANK1 ] unsigned char 
 16153 ;; Auto vars:     Size  Location     Type
 16154 ;;		None
 16155 ;; Return value:  Size  Location     Type
 16156 ;;                  1    wreg      unsigned char 
 16157 ;; Registers used:
 16158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16159 ;; Tracked objects:
 16160 ;;		On entry : 0/0
 16161 ;;		On exit  : 0/0
 16162 ;;		Unchanged: 0/0
 16163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16164 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16166 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16167 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16168 ;;Total ram usage:        5 bytes
 16169 ;; Hardware stack levels used:    1
 16170 ;; Hardware stack levels required when called:   11
 16171 ;; This function calls:
 16172 ;;		_SendPacket
 16173 ;; This function is called by:
 16174 ;;		_MiApp_UnicastConnection
 16175 ;; This function uses a non-reentrant model
 16176 ;;
 16177                           
 16178                           
 16179                           ;psect for function _MiApp_UnicastAddress
 16180  3546                     _MiApp_UnicastAddress:	
 16181                           
 16182                           ;miwi_p2p.c: 1888: return SendPacket(0, DestinationAddress, 0, SecEn);
 16183                           
 16184                           ;incstack = 0
 16185 ;; hardware stack exceeded
 16186                           ; Regs used in _MiApp_UnicastAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16187  3546  0021               	movlb	1	; select bank1
 16188  3547  0863               	movf	(MiApp_UnicastAddress@DestinationAddress+1)^(0+128),w
 16189  3548  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 16190  3549  0862               	movf	MiApp_UnicastAddress@DestinationAddress^(0+128),w
 16191  354A  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 16192  354B  01D8               	clrf	SendPacket@isCommand^(0+128)
 16193  354C  0865               	movf	MiApp_UnicastAddress@SecEn^(0+128),w
 16194  354D  00E6               	movwf	??_MiApp_UnicastAddress^(0+128)
 16195  354E  0866               	movf	??_MiApp_UnicastAddress^(0+128),w
 16196  354F  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 16197  3550  3000               	movlw	0
 16198  3551  31AB  2390         	fcall	_SendPacket
 16199  3553  0008               	return
 16200  3554                     __end_of_MiApp_UnicastAddress:	
 16201                           
 16202                           	psect	text42
 16203  3530                     __ptext42:	
 16204 ;; *************** function _DemoOutput_UnicastFail *****************
 16205 ;; Defined at:
 16206 ;;		line 292 in file "../src/demo_ouput.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  2  283[None  ] int 
 16213 ;; Registers used:
 16214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;Total ram usage:        0 bytes
 16225 ;; Hardware stack levels used:    1
 16226 ;; Hardware stack levels required when called:   10
 16227 ;; This function calls:
 16228 ;;		_LCDDisplay
 16229 ;; This function is called by:
 16230 ;;		_Forward_Packet_PANCr_to_EDy
 16231 ;; This function uses a non-reentrant model
 16232 ;;
 16233                           
 16234                           
 16235                           ;psect for function _DemoOutput_UnicastFail
 16236  3530                     _DemoOutput_UnicastFail:	
 16237                           
 16238                           ;demo_ouput.c: 297: LCDDisplay((char *)" Unicast Failed", 0, 1);
 16239                           
 16240                           ;incstack = 0
 16241 ;; hardware stack exceeded
 16242                           ; Regs used in _DemoOutput_UnicastFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16243  3530  30A0               	movlw	low (STR_4| (0+32768))
 16244  3531  0021               	movlb	1	; select bank1
 16245  3532  00D0               	movwf	LCDDisplay@text^(0+128)
 16246  3533  30A2               	movlw	high (STR_4| (0+32768))
 16247  3534  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 16248  3535  01D2               	clrf	LCDDisplay@value^(0+128)
 16249  3536  01D3               	clrf	LCDDisplay@delay^(0+128)
 16250  3537  0AD3               	incf	LCDDisplay@delay^(0+128),f
 16251  3538  31A9  21B5         	fcall	_LCDDisplay
 16252  353A  0008               	return
 16253  353B                     __end_of_DemoOutput_UnicastFail:	
 16254                           
 16255                           	psect	text43
 16256  2751                     __ptext43:	
 16257 ;; *************** function _Find_Index *****************
 16258 ;; Defined at:
 16259 ;;		line 109 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;  DestAddr        2   13[BANK1 ] PTR unsigned char 
 16262 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;  i               1   21[BANK1 ] unsigned char 
 16265 ;; Return value:  Size  Location     Type
 16266 ;;                  1    wreg      unsigned char 
 16267 ;; Registers used:
 16268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16269 ;; Tracked objects:
 16270 ;;		On entry : 0/0
 16271 ;;		On exit  : 0/0
 16272 ;;		Unchanged: 0/0
 16273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16274 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16275 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16276 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 16277 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;Total ram usage:        9 bytes
 16279 ;; Hardware stack levels used:    1
 16280 ;; Hardware stack levels required when called:    6
 16281 ;; This function calls:
 16282 ;;		___wmul
 16283 ;; This function is called by:
 16284 ;;		_P2PTasks
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           
 16289                           ;psect for function _Find_Index
 16290  2751                     _Find_Index:	
 16291                           
 16292                           ;miwi_p2p.c: 111: uint8_t i;
 16293                           ;miwi_p2p.c: 112: for (i=0;i<conn_size;i++)
 16294                           
 16295                           ;incstack = 0
 16296                           ; Regs used in _Find_Index: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16297  2751  0021               	movlb	1	; select bank1
 16298  2752  01B5               	clrf	Find_Index@i^(0+128)
 16299  2753                     l6353:	
 16300  2753  0020               	movlb	0	; select bank0
 16301  2754  086A               	movf	_conn_size,w
 16302  2755  0021               	movlb	1	; select bank1
 16303  2756  0235               	subwf	Find_Index@i^(0+128),w
 16304  2757  1803               	btfsc	3,0
 16305  2758  2FF9               	goto	l6355
 16306                           
 16307                           ;miwi_p2p.c: 113: {
 16308                           ;miwi_p2p.c: 114: if (ConnectionTable[i].status.bits.isValid)
 16309  2759  0835               	movf	Find_Index@i^(0+128),w
 16310  275A  00AF               	movwf	??_Find_Index^(0+128)
 16311  275B  01B0               	clrf	(??_Find_Index^(0+128)+1)
 16312  275C  082F               	movf	??_Find_Index^(0+128),w
 16313  275D  00A7               	movwf	___wmul@multiplier^(0+128)
 16314  275E  0830               	movf	(??_Find_Index+1)^(0+128),w
 16315  275F  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16316  2760  300E               	movlw	14
 16317  2761  00A9               	movwf	___wmul@multiplicand^(0+128)
 16318  2762  3000               	movlw	0
 16319  2763  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16320  2764  31B6  26A4  31A7   	fcall	___wmul
 16321  2767  0021               	movlb	1	; select bank1
 16322  2768  0827               	movf	?___wmul^(0+128),w
 16323  2769  3E0C               	addlw	12
 16324  276A  00B1               	movwf	(??_Find_Index+2)^(0+128)
 16325  276B  3000               	movlw	0
 16326  276C  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16327  276D  00B2               	movwf	(??_Find_Index+3)^(0+128)
 16328  276E  3064               	movlw	100
 16329  276F  00B3               	movwf	(??_Find_Index+4)^(0+128)
 16330  2770  3023               	movlw	35
 16331  2771  00B4               	movwf	((??_Find_Index+4)^(0+128)+1)
 16332  2772  0831               	movf	(??_Find_Index+2)^(0+128),w
 16333  2773  0733               	addwf	(??_Find_Index+4)^(0+128),w
 16334  2774  0086               	movwf	6
 16335  2775  0832               	movf	(??_Find_Index+3)^(0+128),w
 16336  2776  3D34               	addwfc	(??_Find_Index+5)^(0+128),w
 16337  2777  0087               	movwf	7
 16338  2778  1F81               	btfss	1,7
 16339  2779  2FF4               	goto	l6351
 16340                           
 16341                           ;miwi_p2p.c: 115: {
 16342                           ;miwi_p2p.c: 116: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 16343  277A  0835               	movf	Find_Index@i^(0+128),w
 16344  277B  00AF               	movwf	??_Find_Index^(0+128)
 16345  277C  01B0               	clrf	(??_Find_Index^(0+128)+1)
 16346  277D  082F               	movf	??_Find_Index^(0+128),w
 16347  277E  00A7               	movwf	___wmul@multiplier^(0+128)
 16348  277F  0830               	movf	(??_Find_Index+1)^(0+128),w
 16349  2780  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16350  2781  300E               	movlw	14
 16351  2782  00A9               	movwf	___wmul@multiplicand^(0+128)
 16352  2783  3000               	movlw	0
 16353  2784  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16354  2785  31B6  26A4  31A7   	fcall	___wmul
 16355  2788  0021               	movlb	1	; select bank1
 16356  2789  0827               	movf	?___wmul^(0+128),w
 16357  278A  3E04               	addlw	4
 16358  278B  00B1               	movwf	(??_Find_Index+2)^(0+128)
 16359  278C  3000               	movlw	0
 16360  278D  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16361  278E  00B2               	movwf	(??_Find_Index+3)^(0+128)
 16362  278F  3064               	movlw	100
 16363  2790  00B3               	movwf	(??_Find_Index+4)^(0+128)
 16364  2791  3023               	movlw	35
 16365  2792  00B4               	movwf	((??_Find_Index+4)^(0+128)+1)
 16366  2793  0831               	movf	(??_Find_Index+2)^(0+128),w
 16367  2794  0733               	addwf	(??_Find_Index+4)^(0+128),w
 16368  2795  0086               	movwf	6
 16369  2796  0832               	movf	(??_Find_Index+3)^(0+128),w
 16370  2797  3D34               	addwfc	(??_Find_Index+5)^(0+128),w
 16371  2798  0087               	movwf	7
 16372  2799  082D               	movf	Find_Index@DestAddr^(0+128),w
 16373  279A  0084               	movwf	4
 16374  279B  082E               	movf	(Find_Index@DestAddr+1)^(0+128),w
 16375  279C  0085               	movwf	5
 16376  279D  3101               	addfsr 0,1
 16377  279E  0800               	movf	0,w
 16378  279F  0601               	xorwf	1,w
 16379  27A0  1D03               	skipz
 16380  27A1  2FF4               	goto	l6351
 16381  27A2  0835               	movf	Find_Index@i^(0+128),w
 16382  27A3  00AF               	movwf	??_Find_Index^(0+128)
 16383  27A4  01B0               	clrf	(??_Find_Index^(0+128)+1)
 16384  27A5  082F               	movf	??_Find_Index^(0+128),w
 16385  27A6  00A7               	movwf	___wmul@multiplier^(0+128)
 16386  27A7  0830               	movf	(??_Find_Index+1)^(0+128),w
 16387  27A8  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16388  27A9  300E               	movlw	14
 16389  27AA  00A9               	movwf	___wmul@multiplicand^(0+128)
 16390  27AB  3000               	movlw	0
 16391  27AC  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16392  27AD  31B6  26A4  31A7   	fcall	___wmul
 16393  27B0  0021               	movlb	1	; select bank1
 16394  27B1  0827               	movf	?___wmul^(0+128),w
 16395  27B2  3E05               	addlw	5
 16396  27B3  00B1               	movwf	(??_Find_Index+2)^(0+128)
 16397  27B4  3000               	movlw	0
 16398  27B5  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16399  27B6  00B2               	movwf	(??_Find_Index+3)^(0+128)
 16400  27B7  3064               	movlw	100
 16401  27B8  00B3               	movwf	(??_Find_Index+4)^(0+128)
 16402  27B9  3023               	movlw	35
 16403  27BA  00B4               	movwf	((??_Find_Index+4)^(0+128)+1)
 16404  27BB  0831               	movf	(??_Find_Index+2)^(0+128),w
 16405  27BC  0733               	addwf	(??_Find_Index+4)^(0+128),w
 16406  27BD  0086               	movwf	6
 16407  27BE  0832               	movf	(??_Find_Index+3)^(0+128),w
 16408  27BF  3D34               	addwfc	(??_Find_Index+5)^(0+128),w
 16409  27C0  0087               	movwf	7
 16410  27C1  082D               	movf	Find_Index@DestAddr^(0+128),w
 16411  27C2  0084               	movwf	4
 16412  27C3  082E               	movf	(Find_Index@DestAddr+1)^(0+128),w
 16413  27C4  0085               	movwf	5
 16414  27C5  3102               	addfsr 0,2
 16415  27C6  0800               	movf	0,w
 16416  27C7  0601               	xorwf	1,w
 16417  27C8  1D03               	skipz
 16418  27C9  2FF4               	goto	l6351
 16419  27CA  0835               	movf	Find_Index@i^(0+128),w
 16420  27CB  00AF               	movwf	??_Find_Index^(0+128)
 16421  27CC  01B0               	clrf	(??_Find_Index^(0+128)+1)
 16422  27CD  082F               	movf	??_Find_Index^(0+128),w
 16423  27CE  00A7               	movwf	___wmul@multiplier^(0+128)
 16424  27CF  0830               	movf	(??_Find_Index+1)^(0+128),w
 16425  27D0  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16426  27D1  300E               	movlw	14
 16427  27D2  00A9               	movwf	___wmul@multiplicand^(0+128)
 16428  27D3  3000               	movlw	0
 16429  27D4  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16430  27D5  31B6  26A4  31A7   	fcall	___wmul
 16431  27D8  0021               	movlb	1	; select bank1
 16432  27D9  0827               	movf	?___wmul^(0+128),w
 16433  27DA  3E06               	addlw	6
 16434  27DB  00B1               	movwf	(??_Find_Index+2)^(0+128)
 16435  27DC  3000               	movlw	0
 16436  27DD  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16437  27DE  00B2               	movwf	(??_Find_Index+3)^(0+128)
 16438  27DF  3064               	movlw	100
 16439  27E0  00B3               	movwf	(??_Find_Index+4)^(0+128)
 16440  27E1  3023               	movlw	35
 16441  27E2  00B4               	movwf	((??_Find_Index+4)^(0+128)+1)
 16442  27E3  0831               	movf	(??_Find_Index+2)^(0+128),w
 16443  27E4  0733               	addwf	(??_Find_Index+4)^(0+128),w
 16444  27E5  0086               	movwf	6
 16445  27E6  0832               	movf	(??_Find_Index+3)^(0+128),w
 16446  27E7  3D34               	addwfc	(??_Find_Index+5)^(0+128),w
 16447  27E8  0087               	movwf	7
 16448  27E9  082D               	movf	Find_Index@DestAddr^(0+128),w
 16449  27EA  0084               	movwf	4
 16450  27EB  082E               	movf	(Find_Index@DestAddr+1)^(0+128),w
 16451  27EC  0085               	movwf	5
 16452  27ED  3103               	addfsr 0,3
 16453  27EE  0800               	movf	0,w
 16454  27EF  0601               	xorwf	1,w
 16455  27F0  1D03               	skipz
 16456  27F1  2FF4               	goto	l6351
 16457                           
 16458                           ;miwi_p2p.c: 117: {
 16459                           ;miwi_p2p.c: 118: return i;
 16460  27F2  0835               	movf	Find_Index@i^(0+128),w
 16461  27F3  0008               	return
 16462  27F4                     l6351:	
 16463                           ;miwi_p2p.c: 119: break;
 16464                           
 16465  27F4  3001               	movlw	1
 16466  27F5  00AF               	movwf	??_Find_Index^(0+128)
 16467  27F6  082F               	movf	??_Find_Index^(0+128),w
 16468  27F7  07B5               	addwf	Find_Index@i^(0+128),f
 16469  27F8  2F53               	goto	l6353
 16470  27F9                     l6355:	
 16471                           
 16472                           ;miwi_p2p.c: 120: }
 16473                           ;miwi_p2p.c: 122: }
 16474                           ;miwi_p2p.c: 123: }
 16475                           ;miwi_p2p.c: 124: if (i==conn_size)
 16476  27F9  0835               	movf	Find_Index@i^(0+128),w
 16477  27FA  0020               	movlb	0	; select bank0
 16478  27FB  066A               	xorwf	_conn_size,w
 16479  27FC  1D03               	skipz
 16480  27FD  0008               	return
 16481                           
 16482                           ;miwi_p2p.c: 125: {
 16483                           ;miwi_p2p.c: 126: return 0xff;
 16484  27FE  30FF               	movlw	255
 16485  27FF  0008               	return
 16486  2800                     __end_of_Find_Index:	
 16487                           
 16488                           	psect	text44
 16489  2DA7                     __ptext44:	
 16490 ;; *************** function _Find_InActiveDevices *****************
 16491 ;; Defined at:
 16492 ;;		line 2059 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16493 ;; Parameters:    Size  Location     Type
 16494 ;;		None
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;  i               1   78[BANK1 ] unsigned char 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      void 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16507 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Totals:         0       0       1       6       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;Total ram usage:        7 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   12
 16513 ;; This function calls:
 16514 ;;		_MiApp_RemoveConnection
 16515 ;;		___wmul
 16516 ;; This function is called by:
 16517 ;;		_P2PTasks
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           
 16522                           ;psect for function _Find_InActiveDevices
 16523  2DA7                     _Find_InActiveDevices:	
 16524                           
 16525                           ;miwi_p2p.c: 2061: uint8_t i;
 16526                           ;miwi_p2p.c: 2062: for (i=0;i<10;i++)
 16527                           
 16528                           ;incstack = 0
 16529 ;; hardware stack exceeded
 16530                           ; Regs used in _Find_InActiveDevices: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16531  2DA7  0021               	movlb	1	; select bank1
 16532  2DA8  01EE               	clrf	Find_InActiveDevices@i^(0+128)
 16533  2DA9                     L4:	
 16534  2DA9  300A               	movlw	10
 16535  2DAA  026E               	subwf	Find_InActiveDevices@i^(0+128),w
 16536  2DAB  1803               	btfsc	3,0
 16537  2DAC  0008               	return
 16538                           
 16539                           ;miwi_p2p.c: 2063: {
 16540                           ;miwi_p2p.c: 2064: if (ConnectionTable[i].status.bits.isValid)
 16541  2DAD  086E               	movf	Find_InActiveDevices@i^(0+128),w
 16542  2DAE  0022               	movlb	2	; select bank2
 16543  2DAF  00A0               	movwf	??_Find_InActiveDevices^(0+256)
 16544  2DB0  01A1               	clrf	(??_Find_InActiveDevices^(0+256)+1)
 16545  2DB1  0820               	movf	??_Find_InActiveDevices^(0+256),w
 16546  2DB2  0021               	movlb	1	; select bank1
 16547  2DB3  00A7               	movwf	___wmul@multiplier^(0+128)
 16548  2DB4  0022               	movlb	2	; select bank2
 16549  2DB5  0821               	movf	(??_Find_InActiveDevices+1)^(0+256),w
 16550  2DB6  0021               	movlb	1	; select bank1
 16551  2DB7  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16552  2DB8  300E               	movlw	14
 16553  2DB9  00A9               	movwf	___wmul@multiplicand^(0+128)
 16554  2DBA  3000               	movlw	0
 16555  2DBB  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16556  2DBC  31B6  26A4  31AD   	fcall	___wmul
 16557  2DBF  0021               	movlb	1	; select bank1
 16558  2DC0  0827               	movf	?___wmul^(0+128),w
 16559  2DC1  3E0C               	addlw	12
 16560  2DC2  0022               	movlb	2	; select bank2
 16561  2DC3  00A2               	movwf	(??_Find_InActiveDevices+2)^(0+256)
 16562  2DC4  3000               	movlw	0
 16563  2DC5  0021               	movlb	1	; select bank1
 16564  2DC6  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16565  2DC7  0022               	movlb	2	; select bank2
 16566  2DC8  00A3               	movwf	(??_Find_InActiveDevices+3)^(0+256)
 16567  2DC9  3064               	movlw	100
 16568  2DCA  00A4               	movwf	(??_Find_InActiveDevices+4)^(0+256)
 16569  2DCB  3023               	movlw	35
 16570  2DCC  00A5               	movwf	((??_Find_InActiveDevices+4)^(0+256)+1)
 16571  2DCD  0822               	movf	(??_Find_InActiveDevices+2)^(0+256),w
 16572  2DCE  0724               	addwf	(??_Find_InActiveDevices+4)^(0+256),w
 16573  2DCF  0086               	movwf	6
 16574  2DD0  0823               	movf	(??_Find_InActiveDevices+3)^(0+256),w
 16575  2DD1  3D25               	addwfc	(??_Find_InActiveDevices+5)^(0+256),w
 16576  2DD2  0087               	movwf	7
 16577  2DD3  1F81               	btfss	1,7
 16578  2DD4  2DF2               	goto	l6435
 16579                           
 16580                           ;miwi_p2p.c: 2065: {
 16581                           ;miwi_p2p.c: 2066: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 16582  2DD5  0021               	movlb	1	; select bank1
 16583  2DD6  086E               	movf	Find_InActiveDevices@i^(0+128),w
 16584  2DD7  3E20               	addlw	(low (_link_stat| (0+512)))& (0+255)
 16585  2DD8  0086               	movwf	6
 16586  2DD9  3002               	movlw	2	; select bank4/5
 16587  2DDA  0087               	movwf	7
 16588  2DDB  0801               	movf	1,w
 16589  2DDC  1D03               	btfss	3,2
 16590  2DDD  2DEB               	goto	l6433
 16591  2DDE  086E               	movf	Find_InActiveDevices@i^(0+128),w
 16592  2DDF  3E2A               	addlw	(low (_permanent_connections| (0+512)))& (0+255)
 16593  2DE0  0086               	movwf	6
 16594  2DE1  3002               	movlw	2	; select bank4/5
 16595  2DE2  0087               	movwf	7
 16596  2DE3  0A01               	incf	1,w
 16597  2DE4  1903               	btfsc	3,2
 16598  2DE5  2DEB               	goto	l6433
 16599                           
 16600                           ;miwi_p2p.c: 2067: {
 16601                           ;miwi_p2p.c: 2068: MiApp_RemoveConnection(i);
 16602  2DE6  086E               	movf	Find_InActiveDevices@i^(0+128),w
 16603  2DE7  319A  2261  31AD   	fcall	_MiApp_RemoveConnection
 16604                           
 16605                           ;miwi_p2p.c: 2069: }
 16606  2DEA  2DF2               	goto	l6435
 16607  2DEB                     l6433:	
 16608                           
 16609                           ;miwi_p2p.c: 2070: else
 16610                           ;miwi_p2p.c: 2071: {
 16611                           ;miwi_p2p.c: 2072: link_stat[i] = 0;
 16612  2DEB  0021               	movlb	1	; select bank1
 16613  2DEC  086E               	movf	Find_InActiveDevices@i^(0+128),w
 16614  2DED  3E20               	addlw	(low (_link_stat| (0+512)))& (0+255)
 16615  2DEE  0086               	movwf	6
 16616  2DEF  3002               	movlw	2	; select bank4/5
 16617  2DF0  0087               	movwf	7
 16618  2DF1  0181               	clrf	1
 16619  2DF2                     l6435:	
 16620  2DF2  3001               	movlw	1
 16621  2DF3  0022               	movlb	2	; select bank2
 16622  2DF4  00A0               	movwf	??_Find_InActiveDevices^(0+256)
 16623  2DF5  0820               	movf	??_Find_InActiveDevices^(0+256),w
 16624  2DF6  0021               	movlb	1	; select bank1
 16625  2DF7  07EE               	addwf	Find_InActiveDevices@i^(0+128),f
 16626  2DF8  2DA9               	goto	L4
 16627  2DF9                     __end_of_Find_InActiveDevices:	
 16628                           
 16629                           	psect	text45
 16630  1A61                     __ptext45:	
 16631 ;; *************** function _MiApp_RemoveConnection *****************
 16632 ;; Defined at:
 16633 ;;		line 3100 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 16634 ;; Parameters:    Size  Location     Type
 16635 ;;  ConnectionIn    1    wreg     unsigned char 
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;  ConnectionIn    1   76[BANK1 ] unsigned char 
 16638 ;;  j               2   72[BANK1 ] unsigned int 
 16639 ;;  j               2   74[BANK1 ] unsigned int 
 16640 ;;  i               1   77[BANK1 ] unsigned char 
 16641 ;; Return value:  Size  Location     Type
 16642 ;;                  1    wreg      void 
 16643 ;; Registers used:
 16644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16645 ;; Tracked objects:
 16646 ;;		On entry : 0/0
 16647 ;;		On exit  : 0/0
 16648 ;;		Unchanged: 0/0
 16649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16651 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 16652 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 16653 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 16654 ;;Total ram usage:       12 bytes
 16655 ;; Hardware stack levels used:    1
 16656 ;; Hardware stack levels required when called:   11
 16657 ;; This function calls:
 16658 ;;		_NVMWrite
 16659 ;;		_SendPacket
 16660 ;;		___wmul
 16661 ;; This function is called by:
 16662 ;;		_Find_InActiveDevices
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           
 16667                           ;psect for function _MiApp_RemoveConnection
 16668  1A61                     _MiApp_RemoveConnection:	
 16669                           
 16670                           ;incstack = 0
 16671 ;; hardware stack exceeded
 16672                           ; Regs used in _MiApp_RemoveConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16673                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 16674  1A61  0021               	movlb	1	; select bank1
 16675  1A62  00EC               	movwf	MiApp_RemoveConnection@ConnectionIndex^(0+128)
 16676                           
 16677                           ;miwi_p2p.c: 3102: if( ConnectionIndex == 0xFF )
 16678  1A63  0A6C               	incf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 16679  1A64  1D03               	btfss	3,2
 16680  1A65  2B39               	goto	l6157
 16681                           
 16682                           ;miwi_p2p.c: 3103: {
 16683                           ;miwi_p2p.c: 3104: uint8_t i;
 16684                           ;miwi_p2p.c: 3105: for(i = 0; i < 10; i++)
 16685  1A66  01ED               	clrf	MiApp_RemoveConnection@i^(0+128)
 16686  1A67                     L5:	
 16687  1A67  300A               	movlw	10
 16688  1A68  026D               	subwf	MiApp_RemoveConnection@i^(0+128),w
 16689  1A69  1803               	btfsc	3,0
 16690  1A6A  0008               	return
 16691                           
 16692                           ;miwi_p2p.c: 3106: {
 16693                           ;miwi_p2p.c: 3107: uint16_t j;
 16694                           ;miwi_p2p.c: 3108: if( ConnectionTable[i].status.bits.isValid )
 16695  1A6B  086D               	movf	MiApp_RemoveConnection@i^(0+128),w
 16696  1A6C  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16697  1A6D  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16698  1A6E  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16699  1A6F  00A7               	movwf	___wmul@multiplier^(0+128)
 16700  1A70  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16701  1A71  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16702  1A72  300E               	movlw	14
 16703  1A73  00A9               	movwf	___wmul@multiplicand^(0+128)
 16704  1A74  3000               	movlw	0
 16705  1A75  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16706  1A76  31B6  26A4  319A   	fcall	___wmul
 16707  1A79  0021               	movlb	1	; select bank1
 16708  1A7A  0827               	movf	?___wmul^(0+128),w
 16709  1A7B  3E0C               	addlw	12
 16710  1A7C  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16711  1A7D  3000               	movlw	0
 16712  1A7E  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16713  1A7F  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 16714  1A80  3064               	movlw	100
 16715  1A81  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16716  1A82  3023               	movlw	35
 16717  1A83  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16718  1A84  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16719  1A85  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16720  1A86  0086               	movwf	6
 16721  1A87  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 16722  1A88  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 16723  1A89  0087               	movwf	7
 16724  1A8A  1F81               	btfss	1,7
 16725  1A8B  2ADB               	goto	l6151
 16726                           
 16727                           ;miwi_p2p.c: 3109: {
 16728                           ;miwi_p2p.c: 3110: {TxData = 0;};
 16729  1A8C  0022               	movlb	2	; select bank2
 16730  1A8D  01EE               	clrf	_TxData^(0+256)
 16731                           
 16732                           ;miwi_p2p.c: 3111: TxBuffer[TxData++] = 0x82;
 16733  1A8E  3082               	movlw	130
 16734  1A8F  0021               	movlb	1	; select bank1
 16735  1A90  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16736  1A91  0022               	movlb	2	; select bank2
 16737  1A92  086E               	movf	_TxData^(0+256),w
 16738  1A93  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16739  1A94  0086               	movwf	6
 16740  1A95  3002               	movlw	2	; select bank4/5
 16741  1A96  0087               	movwf	7
 16742  1A97  0021               	movlb	1	; select bank1
 16743  1A98  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16744  1A99  0081               	movwf	1
 16745  1A9A  3001               	movlw	1
 16746  1A9B  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16747  1A9C  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16748  1A9D  0022               	movlb	2	; select bank2
 16749  1A9E  07EE               	addwf	_TxData^(0+256),f
 16750                           
 16751                           ;miwi_p2p.c: 3115: SendPacket(0, ConnectionTable[i].Address, 1, 0);
 16752  1A9F  0021               	movlb	1	; select bank1
 16753  1AA0  086D               	movf	MiApp_RemoveConnection@i^(0+128),w
 16754  1AA1  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16755  1AA2  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16756  1AA3  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16757  1AA4  00A7               	movwf	___wmul@multiplier^(0+128)
 16758  1AA5  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16759  1AA6  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16760  1AA7  300E               	movlw	14
 16761  1AA8  00A9               	movwf	___wmul@multiplicand^(0+128)
 16762  1AA9  3000               	movlw	0
 16763  1AAA  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16764  1AAB  31B6  26A4  319A   	fcall	___wmul
 16765  1AAE  0021               	movlb	1	; select bank1
 16766  1AAF  0827               	movf	?___wmul^(0+128),w
 16767  1AB0  3E04               	addlw	4
 16768  1AB1  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16769  1AB2  3000               	movlw	0
 16770  1AB3  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16771  1AB4  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 16772  1AB5  3064               	movlw	100
 16773  1AB6  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16774  1AB7  3023               	movlw	35
 16775  1AB8  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16776  1AB9  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16777  1ABA  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16778  1ABB  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 16779  1ABC  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 16780  1ABD  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 16781  1ABE  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 16782  1ABF  01D8               	clrf	SendPacket@isCommand^(0+128)
 16783  1AC0  0AD8               	incf	SendPacket@isCommand^(0+128),f
 16784  1AC1  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 16785  1AC2  3000               	movlw	0
 16786  1AC3  31AB  2390  319A   	fcall	_SendPacket
 16787                           
 16788                           ;miwi_p2p.c: 3117: for(j = 0; j < 0xFFF; j++) {}
 16789  1AC6  0021               	movlb	1	; select bank1
 16790  1AC7  01E8               	clrf	MiApp_RemoveConnection@j^(0+128)
 16791  1AC8  01E9               	clrf	(MiApp_RemoveConnection@j+1)^(0+128)
 16792  1AC9  300F               	movlw	15
 16793  1ACA  0269               	subwf	(MiApp_RemoveConnection@j+1)^(0+128),w
 16794  1ACB  30FF               	movlw	255
 16795  1ACC  1903               	skipnz
 16796  1ACD  0268               	subwf	MiApp_RemoveConnection@j^(0+128),w
 16797  1ACE  1803               	btfsc	3,0
 16798  1ACF  2ADB               	goto	l6151
 16799  1AD0                     l6149:	
 16800  1AD0  3001               	movlw	1
 16801  1AD1  07E8               	addwf	MiApp_RemoveConnection@j^(0+128),f
 16802  1AD2  3000               	movlw	0
 16803  1AD3  3DE9               	addwfc	(MiApp_RemoveConnection@j+1)^(0+128),f
 16804  1AD4  300F               	movlw	15
 16805  1AD5  0269               	subwf	(MiApp_RemoveConnection@j+1)^(0+128),w
 16806  1AD6  30FF               	movlw	255
 16807  1AD7  1903               	skipnz
 16808  1AD8  0268               	subwf	MiApp_RemoveConnection@j^(0+128),w
 16809  1AD9  1C03               	skipc
 16810  1ADA  2AD0               	goto	l6149
 16811  1ADB                     l6151:	
 16812                           
 16813                           ;miwi_p2p.c: 3118: }
 16814                           ;miwi_p2p.c: 3119: ConnectionTable[i].status.Val = 0;
 16815  1ADB  086D               	movf	MiApp_RemoveConnection@i^(0+128),w
 16816  1ADC  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16817  1ADD  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16818  1ADE  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16819  1ADF  00A7               	movwf	___wmul@multiplier^(0+128)
 16820  1AE0  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16821  1AE1  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16822  1AE2  300E               	movlw	14
 16823  1AE3  00A9               	movwf	___wmul@multiplicand^(0+128)
 16824  1AE4  3000               	movlw	0
 16825  1AE5  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16826  1AE6  31B6  26A4  319A   	fcall	___wmul
 16827  1AE9  0021               	movlb	1	; select bank1
 16828  1AEA  0827               	movf	?___wmul^(0+128),w
 16829  1AEB  3E0C               	addlw	12
 16830  1AEC  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16831  1AED  3000               	movlw	0
 16832  1AEE  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16833  1AEF  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 16834  1AF0  3064               	movlw	100
 16835  1AF1  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16836  1AF2  3023               	movlw	35
 16837  1AF3  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16838  1AF4  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16839  1AF5  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16840  1AF6  0086               	movwf	6
 16841  1AF7  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 16842  1AF8  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 16843  1AF9  0087               	movwf	7
 16844  1AFA  0181               	clrf	1
 16845                           
 16846                           ;miwi_p2p.c: 3121: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint1
      +                          6_t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 16847  1AFB  086D               	movf	MiApp_RemoveConnection@i^(0+128),w
 16848  1AFC  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16849  1AFD  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16850  1AFE  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16851  1AFF  00A7               	movwf	___wmul@multiplier^(0+128)
 16852  1B00  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16853  1B01  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16854  1B02  300E               	movlw	14
 16855  1B03  00A9               	movwf	___wmul@multiplicand^(0+128)
 16856  1B04  3000               	movlw	0
 16857  1B05  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16858  1B06  31B6  26A4  319A   	fcall	___wmul
 16859  1B09  3064               	movlw	100
 16860  1B0A  0021               	movlb	1	; select bank1
 16861  1B0B  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16862  1B0C  3023               	movlw	35
 16863  1B0D  00E5               	movwf	((??_MiApp_RemoveConnection+2)^(0+128)+1)
 16864  1B0E  0827               	movf	?___wmul^(0+128),w
 16865  1B0F  0764               	addwf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16866  1B10  00AD               	movwf	NVMWrite@source^(0+128)
 16867  1B11  0828               	movf	(?___wmul+1)^(0+128),w
 16868  1B12  3D65               	addwfc	(??_MiApp_RemoveConnection+3)^(0+128),w
 16869  1B13  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 16870  1B14  086D               	movf	MiApp_RemoveConnection@i^(0+128),w
 16871  1B15  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16872  1B16  01E7               	clrf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16873  1B17  0866               	movf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16874  1B18  00A7               	movwf	___wmul@multiplier^(0+128)
 16875  1B19  0867               	movf	(??_MiApp_RemoveConnection+5)^(0+128),w
 16876  1B1A  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16877  1B1B  300E               	movlw	14
 16878  1B1C  00A9               	movwf	___wmul@multiplicand^(0+128)
 16879  1B1D  3000               	movlw	0
 16880  1B1E  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16881  1B1F  31B6  26A4  319A   	fcall	___wmul
 16882  1B22  0020               	movlb	0	; select bank0
 16883  1B23  0868               	movf	_nvmConnectionTable,w
 16884  1B24  0021               	movlb	1	; select bank1
 16885  1B25  0727               	addwf	?___wmul^(0+128),w
 16886  1B26  00AF               	movwf	NVMWrite@addr^(0+128)
 16887  1B27  0020               	movlb	0	; select bank0
 16888  1B28  0869               	movf	_nvmConnectionTable+1,w
 16889  1B29  0021               	movlb	1	; select bank1
 16890  1B2A  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16891  1B2B  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 16892  1B2C  300E               	movlw	14
 16893  1B2D  00B1               	movwf	NVMWrite@count^(0+128)
 16894  1B2E  3000               	movlw	0
 16895  1B2F  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 16896  1B30  31A3  239F  319A   	fcall	_NVMWrite
 16897  1B33  3001               	movlw	1
 16898  1B34  0021               	movlb	1	; select bank1
 16899  1B35  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16900  1B36  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16901  1B37  07ED               	addwf	MiApp_RemoveConnection@i^(0+128),f
 16902  1B38  2A67               	goto	L5
 16903  1B39                     l6157:	
 16904                           ;miwi_p2p.c: 3123: }
 16905                           ;miwi_p2p.c: 3124: }
 16906                           
 16907                           
 16908                           ;miwi_p2p.c: 3125: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 16909  1B39  086C               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 16910  1B3A  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16911  1B3B  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16912  1B3C  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16913  1B3D  00A7               	movwf	___wmul@multiplier^(0+128)
 16914  1B3E  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16915  1B3F  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16916  1B40  300E               	movlw	14
 16917  1B41  00A9               	movwf	___wmul@multiplicand^(0+128)
 16918  1B42  3000               	movlw	0
 16919  1B43  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16920  1B44  31B6  26A4  319A   	fcall	___wmul
 16921  1B47  0021               	movlb	1	; select bank1
 16922  1B48  0827               	movf	?___wmul^(0+128),w
 16923  1B49  3E0C               	addlw	12
 16924  1B4A  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16925  1B4B  3000               	movlw	0
 16926  1B4C  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16927  1B4D  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 16928  1B4E  3064               	movlw	100
 16929  1B4F  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16930  1B50  3023               	movlw	35
 16931  1B51  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16932  1B52  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16933  1B53  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16934  1B54  0086               	movwf	6
 16935  1B55  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 16936  1B56  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 16937  1B57  0087               	movwf	7
 16938  1B58  1F81               	btfss	1,7
 16939  1B59  0008               	return
 16940                           
 16941                           ;miwi_p2p.c: 3126: {
 16942                           ;miwi_p2p.c: 3127: uint16_t j;
 16943                           ;miwi_p2p.c: 3129: {TxData = 0;};
 16944  1B5A  0022               	movlb	2	; select bank2
 16945  1B5B  01EE               	clrf	_TxData^(0+256)
 16946                           
 16947                           ;miwi_p2p.c: 3130: TxBuffer[TxData++] = 0x82;
 16948  1B5C  3082               	movlw	130
 16949  1B5D  0021               	movlb	1	; select bank1
 16950  1B5E  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16951  1B5F  0022               	movlb	2	; select bank2
 16952  1B60  086E               	movf	_TxData^(0+256),w
 16953  1B61  3E34               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16954  1B62  0086               	movwf	6
 16955  1B63  3002               	movlw	2	; select bank4/5
 16956  1B64  0087               	movwf	7
 16957  1B65  0021               	movlb	1	; select bank1
 16958  1B66  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16959  1B67  0081               	movwf	1
 16960  1B68  3001               	movlw	1
 16961  1B69  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16962  1B6A  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16963  1B6B  0022               	movlb	2	; select bank2
 16964  1B6C  07EE               	addwf	_TxData^(0+256),f
 16965                           
 16966                           ;miwi_p2p.c: 3134: SendPacket(0, ConnectionTable[ConnectionIndex].Address, 1, 0);
 16967  1B6D  0021               	movlb	1	; select bank1
 16968  1B6E  086C               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 16969  1B6F  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 16970  1B70  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 16971  1B71  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 16972  1B72  00A7               	movwf	___wmul@multiplier^(0+128)
 16973  1B73  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 16974  1B74  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 16975  1B75  300E               	movlw	14
 16976  1B76  00A9               	movwf	___wmul@multiplicand^(0+128)
 16977  1B77  3000               	movlw	0
 16978  1B78  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 16979  1B79  31B6  26A4  319A   	fcall	___wmul
 16980  1B7C  0021               	movlb	1	; select bank1
 16981  1B7D  0827               	movf	?___wmul^(0+128),w
 16982  1B7E  3E04               	addlw	4
 16983  1B7F  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 16984  1B80  3000               	movlw	0
 16985  1B81  3D28               	addwfc	(?___wmul+1)^(0+128),w
 16986  1B82  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 16987  1B83  3064               	movlw	100
 16988  1B84  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 16989  1B85  3023               	movlw	35
 16990  1B86  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 16991  1B87  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 16992  1B88  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 16993  1B89  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 16994  1B8A  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 16995  1B8B  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 16996  1B8C  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 16997  1B8D  01D8               	clrf	SendPacket@isCommand^(0+128)
 16998  1B8E  0AD8               	incf	SendPacket@isCommand^(0+128),f
 16999  1B8F  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 17000  1B90  3000               	movlw	0
 17001  1B91  31AB  2390  319A   	fcall	_SendPacket
 17002                           
 17003                           ;miwi_p2p.c: 3136: for(j = 0; j < 0xFFF; j++) {}
 17004  1B94  0021               	movlb	1	; select bank1
 17005  1B95  01EA               	clrf	MiApp_RemoveConnection@j_1240^(0+128)
 17006  1B96  01EB               	clrf	(MiApp_RemoveConnection@j_1240+1)^(0+128)
 17007  1B97  300F               	movlw	15
 17008  1B98  026B               	subwf	(MiApp_RemoveConnection@j_1240+1)^(0+128),w
 17009  1B99  30FF               	movlw	255
 17010  1B9A  1903               	skipnz
 17011  1B9B  026A               	subwf	MiApp_RemoveConnection@j_1240^(0+128),w
 17012  1B9C  1803               	btfsc	3,0
 17013  1B9D  2BA9               	goto	l6175
 17014  1B9E                     l6173:	
 17015  1B9E  3001               	movlw	1
 17016  1B9F  07EA               	addwf	MiApp_RemoveConnection@j_1240^(0+128),f
 17017  1BA0  3000               	movlw	0
 17018  1BA1  3DEB               	addwfc	(MiApp_RemoveConnection@j_1240+1)^(0+128),f
 17019  1BA2  300F               	movlw	15
 17020  1BA3  026B               	subwf	(MiApp_RemoveConnection@j_1240+1)^(0+128),w
 17021  1BA4  30FF               	movlw	255
 17022  1BA5  1903               	skipnz
 17023  1BA6  026A               	subwf	MiApp_RemoveConnection@j_1240^(0+128),w
 17024  1BA7  1C03               	skipc
 17025  1BA8  2B9E               	goto	l6173
 17026  1BA9                     l6175:	
 17027                           
 17028                           ;miwi_p2p.c: 3137: ConnectionTable[ConnectionIndex].status.Val = 0;
 17029  1BA9  086C               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 17030  1BAA  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 17031  1BAB  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 17032  1BAC  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 17033  1BAD  00A7               	movwf	___wmul@multiplier^(0+128)
 17034  1BAE  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 17035  1BAF  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 17036  1BB0  300E               	movlw	14
 17037  1BB1  00A9               	movwf	___wmul@multiplicand^(0+128)
 17038  1BB2  3000               	movlw	0
 17039  1BB3  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 17040  1BB4  31B6  26A4  319A   	fcall	___wmul
 17041  1BB7  0021               	movlb	1	; select bank1
 17042  1BB8  0827               	movf	?___wmul^(0+128),w
 17043  1BB9  3E0C               	addlw	12
 17044  1BBA  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 17045  1BBB  3000               	movlw	0
 17046  1BBC  3D28               	addwfc	(?___wmul+1)^(0+128),w
 17047  1BBD  00E5               	movwf	(??_MiApp_RemoveConnection+3)^(0+128)
 17048  1BBE  3064               	movlw	100
 17049  1BBF  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 17050  1BC0  3023               	movlw	35
 17051  1BC1  00E7               	movwf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 17052  1BC2  0864               	movf	(??_MiApp_RemoveConnection+2)^(0+128),w
 17053  1BC3  0766               	addwf	(??_MiApp_RemoveConnection+4)^(0+128),w
 17054  1BC4  0086               	movwf	6
 17055  1BC5  0865               	movf	(??_MiApp_RemoveConnection+3)^(0+128),w
 17056  1BC6  3D67               	addwfc	(??_MiApp_RemoveConnection+5)^(0+128),w
 17057  1BC7  0087               	movwf	7
 17058  1BC8  0181               	clrf	1
 17059                           
 17060                           ;miwi_p2p.c: 3139: NVMWrite((uint8_t *)&(ConnectionTable[ConnectionIndex]), nvmConnectio
      +                          nTable+((uint16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY))
      +                          ;
 17061  1BC9  086C               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 17062  1BCA  00E2               	movwf	??_MiApp_RemoveConnection^(0+128)
 17063  1BCB  01E3               	clrf	(??_MiApp_RemoveConnection^(0+128)+1)
 17064  1BCC  0862               	movf	??_MiApp_RemoveConnection^(0+128),w
 17065  1BCD  00A7               	movwf	___wmul@multiplier^(0+128)
 17066  1BCE  0863               	movf	(??_MiApp_RemoveConnection+1)^(0+128),w
 17067  1BCF  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 17068  1BD0  300E               	movlw	14
 17069  1BD1  00A9               	movwf	___wmul@multiplicand^(0+128)
 17070  1BD2  3000               	movlw	0
 17071  1BD3  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 17072  1BD4  31B6  26A4  319A   	fcall	___wmul
 17073  1BD7  3064               	movlw	100
 17074  1BD8  0021               	movlb	1	; select bank1
 17075  1BD9  00E4               	movwf	(??_MiApp_RemoveConnection+2)^(0+128)
 17076  1BDA  3023               	movlw	35
 17077  1BDB  00E5               	movwf	((??_MiApp_RemoveConnection+2)^(0+128)+1)
 17078  1BDC  0827               	movf	?___wmul^(0+128),w
 17079  1BDD  0764               	addwf	(??_MiApp_RemoveConnection+2)^(0+128),w
 17080  1BDE  00AD               	movwf	NVMWrite@source^(0+128)
 17081  1BDF  0828               	movf	(?___wmul+1)^(0+128),w
 17082  1BE0  3D65               	addwfc	(??_MiApp_RemoveConnection+3)^(0+128),w
 17083  1BE1  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 17084  1BE2  086C               	movf	MiApp_RemoveConnection@ConnectionIndex^(0+128),w
 17085  1BE3  00E6               	movwf	(??_MiApp_RemoveConnection+4)^(0+128)
 17086  1BE4  01E7               	clrf	((??_MiApp_RemoveConnection+4)^(0+128)+1)
 17087  1BE5  0866               	movf	(??_MiApp_RemoveConnection+4)^(0+128),w
 17088  1BE6  00A7               	movwf	___wmul@multiplier^(0+128)
 17089  1BE7  0867               	movf	(??_MiApp_RemoveConnection+5)^(0+128),w
 17090  1BE8  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 17091  1BE9  300E               	movlw	14
 17092  1BEA  00A9               	movwf	___wmul@multiplicand^(0+128)
 17093  1BEB  3000               	movlw	0
 17094  1BEC  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 17095  1BED  31B6  26A4  319A   	fcall	___wmul
 17096  1BF0  0020               	movlb	0	; select bank0
 17097  1BF1  0868               	movf	_nvmConnectionTable,w
 17098  1BF2  0021               	movlb	1	; select bank1
 17099  1BF3  0727               	addwf	?___wmul^(0+128),w
 17100  1BF4  00AF               	movwf	NVMWrite@addr^(0+128)
 17101  1BF5  0020               	movlb	0	; select bank0
 17102  1BF6  0869               	movf	_nvmConnectionTable+1,w
 17103  1BF7  0021               	movlb	1	; select bank1
 17104  1BF8  3D28               	addwfc	(?___wmul+1)^(0+128),w
 17105  1BF9  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 17106  1BFA  300E               	movlw	14
 17107  1BFB  00B1               	movwf	NVMWrite@count^(0+128)
 17108  1BFC  3000               	movlw	0
 17109  1BFD  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 17110  1BFE  31A3  239F         	fcall	_NVMWrite
 17111  1C00  0008               	return
 17112  1C01                     __end_of_MiApp_RemoveConnection:	
 17113                           
 17114                           	psect	text46
 17115  2B90                     __ptext46:	
 17116 ;; *************** function _SendPacket *****************
 17117 ;; Defined at:
 17118 ;;		line 1623 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;  Broadcast       1    wreg     unsigned char 
 17121 ;;  DestinationA    2   54[BANK1 ] PTR unsigned char 
 17122 ;;		 -> ConnectionTable(140), NULL(0), RxPacket.Payload(55), RxPacket(114), 
 17123 ;;  isCommand       1   56[BANK1 ] unsigned char 
 17124 ;;  SecurityEnab    1   57[BANK1 ] unsigned char 
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;  Broadcast       1   62[BANK1 ] unsigned char 
 17127 ;;  tParam          3   63[BANK1 ] struct .
 17128 ;;  status          1   61[BANK1 ] unsigned char 
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  1    wreg      unsigned char 
 17131 ;; Registers used:
 17132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17138 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;Total ram usage:       12 bytes
 17143 ;; Hardware stack levels used:    1
 17144 ;; Hardware stack levels required when called:   10
 17145 ;; This function calls:
 17146 ;;		_MiMAC_SendPacket
 17147 ;; This function is called by:
 17148 ;;		_P2PTasks
 17149 ;;		_MiApp_BroadcastPacket
 17150 ;;		_MiApp_UnicastAddress
 17151 ;;		_MiApp_BroadcastConnectionTable
 17152 ;;		_MiApp_UnicastStar
 17153 ;;		_send_link_status
 17154 ;;		_SW_Ack_SrED
 17155 ;;		_MiApp_EstablishConnection
 17156 ;;		_MiApp_RemoveConnection
 17157 ;;		_MiApp_leave_network
 17158 ;; This function uses a non-reentrant model
 17159 ;;
 17160                           
 17161                           
 17162                           ;psect for function _SendPacket
 17163  2B90                     _SendPacket:	
 17164                           
 17165                           ;incstack = 0
 17166 ;; hardware stack exceeded
 17167                           ; Regs used in _SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17168                           ;SendPacket@Broadcast stored from wreg
 17169  2B90  0021               	movlb	1	; select bank1
 17170  2B91  00DE               	movwf	SendPacket@Broadcast^(0+128)
 17171                           
 17172                           ;miwi_p2p.c: 1629: MAC_TRANS_PARAM tParam;
 17173                           ;miwi_p2p.c: 1630: bool status;
 17174                           ;miwi_p2p.c: 1632: tParam.flags.Val = 0;
 17175  2B92  01DF               	clrf	SendPacket@tParam^(0+128)
 17176                           
 17177                           ;miwi_p2p.c: 1633: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 17178  2B93  0858               	movf	SendPacket@isCommand^(0+128),w
 17179  2B94  1903               	btfsc	3,2
 17180  2B95  2B98               	goto	u5210
 17181  2B96  3001               	movlw	1
 17182  2B97  2B99               	goto	u5220
 17183  2B98                     u5210:	
 17184  2B98  3000               	movlw	0
 17185  2B99                     u5220:	
 17186  2B99  00DA               	movwf	??_SendPacket^(0+128)
 17187  2B9A  085F               	movf	SendPacket@tParam^(0+128),w
 17188  2B9B  065A               	xorwf	??_SendPacket^(0+128),w
 17189  2B9C  39FC               	andlw	-4
 17190  2B9D  065A               	xorwf	??_SendPacket^(0+128),w
 17191  2B9E  00DF               	movwf	SendPacket@tParam^(0+128)
 17192                           
 17193                           ;miwi_p2p.c: 1634: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 17194  2B9F  085E               	movf	SendPacket@Broadcast^(0+128),w
 17195  2BA0  1D03               	btfss	3,2
 17196  2BA1  2BA5               	goto	u5230
 17197  2BA2  0021               	movlb	1	; select bank1
 17198  2BA3  16DF               	bsf	SendPacket@tParam^(0+128),5
 17199  2BA4  2BA7               	goto	l5583
 17200  2BA5                     u5230:	
 17201  2BA5  0021               	movlb	1	; select bank1
 17202  2BA6  12DF               	bcf	SendPacket@tParam^(0+128),5
 17203  2BA7                     l5583:	
 17204                           
 17205                           ;miwi_p2p.c: 1635: tParam.flags.bits.broadcast = Broadcast;
 17206  2BA7  085E               	movf	SendPacket@Broadcast^(0+128),w
 17207  2BA8  3901               	andlw	1
 17208  2BA9  115F               	bcf	SendPacket@tParam^(0+128),2
 17209  2BAA  1D03               	skipz
 17210  2BAB  155F               	bsf	SendPacket@tParam^(0+128),2
 17211                           
 17212                           ;miwi_p2p.c: 1636: tParam.flags.bits.secEn = SecurityEnabled;
 17213  2BAC  0859               	movf	SendPacket@SecurityEnabled^(0+128),w
 17214  2BAD  3901               	andlw	1
 17215  2BAE  11DF               	bcf	SendPacket@tParam^(0+128),3
 17216  2BAF  1D03               	skipz
 17217  2BB0  15DF               	bsf	SendPacket@tParam^(0+128),3
 17218                           
 17219                           ;miwi_p2p.c: 1645: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 17220  2BB1  085E               	movf	SendPacket@Broadcast^(0+128),w
 17221  2BB2  1D03               	btfss	3,2
 17222  2BB3  2BB7               	goto	u5250
 17223  2BB4  0021               	movlb	1	; select bank1
 17224  2BB5  175F               	bsf	SendPacket@tParam^(0+128),6
 17225  2BB6  2BB9               	goto	l5589
 17226  2BB7                     u5250:	
 17227  2BB7  0021               	movlb	1	; select bank1
 17228  2BB8  135F               	bcf	SendPacket@tParam^(0+128),6
 17229  2BB9                     l5589:	
 17230                           
 17231                           ;miwi_p2p.c: 1658: tParam.flags.bits.sourcePrsnt = 1;
 17232  2BB9  17DF               	bsf	SendPacket@tParam^(0+128),7
 17233                           
 17234                           ;miwi_p2p.c: 1661: tParam.DestAddress = DestinationAddress;
 17235  2BBA  0857               	movf	(SendPacket@DestinationAddress+1)^(0+128),w
 17236  2BBB  00E1               	movwf	((low ((SendPacket@tParam| 0+1))+1))^(0+128)
 17237  2BBC  0856               	movf	SendPacket@DestinationAddress^(0+128),w
 17238  2BBD  00E0               	movwf	(low ((SendPacket@tParam| 0+1)))^(0+128)
 17239                           
 17240                           ;miwi_p2p.c: 1667: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 17241  2BBE  085F               	movf	SendPacket@tParam^(0+128),w
 17242  2BBF  00CC               	movwf	MiMAC_SendPacket@transParam^(0+128)
 17243  2BC0  0860               	movf	(SendPacket@tParam+1)^(0+128),w
 17244  2BC1  00CD               	movwf	(MiMAC_SendPacket@transParam+1)^(0+128)
 17245  2BC2  0861               	movf	(SendPacket@tParam+2)^(0+128),w
 17246  2BC3  00CE               	movwf	(MiMAC_SendPacket@transParam+2)^(0+128)
 17247  2BC4  3034               	movlw	(low (_TxBuffer| (0+512)))& (0+255)
 17248  2BC5  00DA               	movwf	??_SendPacket^(0+128)
 17249  2BC6  085A               	movf	??_SendPacket^(0+128),w
 17250  2BC7  00CF               	movwf	MiMAC_SendPacket@MACPayload^(0+128)
 17251  2BC8  0022               	movlb	2	; select bank2
 17252  2BC9  086E               	movf	_TxData^(0+256),w
 17253  2BCA  0021               	movlb	1	; select bank1
 17254  2BCB  00DB               	movwf	(??_SendPacket+1)^(0+128)
 17255  2BCC  085B               	movf	(??_SendPacket+1)^(0+128),w
 17256  2BCD  00D0               	movwf	MiMAC_SendPacket@MACPayloadLen^(0+128)
 17257  2BCE  31A6  26AC         	fcall	_MiMAC_SendPacket
 17258  2BD0  0021               	movlb	1	; select bank1
 17259  2BD1  00DC               	movwf	(??_SendPacket+2)^(0+128)
 17260  2BD2  085C               	movf	(??_SendPacket+2)^(0+128),w
 17261  2BD3  00DD               	movwf	SendPacket@status^(0+128)
 17262                           
 17263                           ;miwi_p2p.c: 1668: TxData = 0;
 17264  2BD4  0022               	movlb	2	; select bank2
 17265  2BD5  01EE               	clrf	_TxData^(0+256)
 17266                           
 17267                           ;miwi_p2p.c: 1670: return status;
 17268  2BD6  0021               	movlb	1	; select bank1
 17269  2BD7  085D               	movf	SendPacket@status^(0+128),w
 17270  2BD8  0008               	return
 17271  2BD9                     __end_of_SendPacket:	
 17272                           
 17273                           	psect	text47
 17274  26AC                     __ptext47:	
 17275 ;; *************** function _MiMAC_SendPacket *****************
 17276 ;; Defined at:
 17277 ;;		line 730 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  transParam      3   44[BANK1 ] struct .
 17280 ;;  MACPayload      1   47[BANK1 ] PTR unsigned char 
 17281 ;;		 -> TxBuffer(35), 
 17282 ;;  MACPayloadLe    1   48[BANK1 ] unsigned char 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;  i               1   53[BANK1 ] unsigned char 
 17285 ;;  TxIndex         1   52[BANK1 ] unsigned char 
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      unsigned char 
 17288 ;; Registers used:
 17289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17295 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 17298 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 17299 ;;Total ram usage:       10 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:    9
 17302 ;; This function calls:
 17303 ;;		_TxPacket
 17304 ;; This function is called by:
 17305 ;;		_SendPacket
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           
 17310                           ;psect for function _MiMAC_SendPacket
 17311  26AC                     _MiMAC_SendPacket:	
 17312                           
 17313                           ;drv_mrf_miwi_89xa.c: 734: uint8_t i;
 17314                           ;drv_mrf_miwi_89xa.c: 735: uint8_t TxIndex;
 17315                           ;drv_mrf_miwi_89xa.c: 737: if( MACPayloadLen > 35 )
 17316                           
 17317                           ;incstack = 0
 17318 ;; hardware stack exceeded
 17319                           ; Regs used in _MiMAC_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17320  26AC  3024               	movlw	36
 17321  26AD  0021               	movlb	1	; select bank1
 17322  26AE  0250               	subwf	MiMAC_SendPacket@MACPayloadLen^(0+128),w
 17323  26AF  1C03               	skipc
 17324  26B0  2EB3               	goto	L6
 17325                           
 17326                           ;drv_mrf_miwi_89xa.c: 738: {
 17327                           ;drv_mrf_miwi_89xa.c: 739: return 0;
 17328  26B1  3000               	movlw	0
 17329  26B2  0008               	return
 17330  26B3                     L6:	
 17331                           ;drv_mrf_miwi_89xa.c: 740: }
 17332                           ;drv_mrf_miwi_89xa.c: 745: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 17333                           
 17334  26B3  1D4C               	btfss	MiMAC_SendPacket@transParam^(0+128),2
 17335  26B4  1403               	setc
 17336  26B5  1C03               	btfss	3,0
 17337  26B6  2EBA               	goto	u4910
 17338  26B7  0021               	movlb	1	; select bank1
 17339  26B8  174C               	bsf	MiMAC_SendPacket@transParam^(0+128),6
 17340  26B9  2EBC               	goto	l5361
 17341  26BA                     u4910:	
 17342  26BA  0021               	movlb	1	; select bank1
 17343  26BB  134C               	bcf	MiMAC_SendPacket@transParam^(0+128),6
 17344  26BC                     l5361:	
 17345                           
 17346                           ;drv_mrf_miwi_89xa.c: 749: transParam.flags.bits.sourcePrsnt = 1;
 17347  26BC  17CC               	bsf	MiMAC_SendPacket@transParam^(0+128),7
 17348                           
 17349                           ;drv_mrf_miwi_89xa.c: 752: if( transParam.flags.bits.packetType == 0x01 )
 17350  26BD  084C               	movf	MiMAC_SendPacket@transParam^(0+128),w
 17351  26BE  3903               	andlw	3
 17352  26BF  3A01               	xorlw	1
 17353  26C0  1903               	btfsc	3,2
 17354                           
 17355                           ;drv_mrf_miwi_89xa.c: 753: {
 17356                           ;drv_mrf_miwi_89xa.c: 754: transParam.flags.bits.sourcePrsnt = 1;
 17357  26C1  17CC               	bsf	MiMAC_SendPacket@transParam^(0+128),7
 17358                           
 17359                           ;drv_mrf_miwi_89xa.c: 755: }
 17360                           ;drv_mrf_miwi_89xa.c: 757: MACTxBuffer[0] = transParam.flags.Val;
 17361  26C2  084C               	movf	MiMAC_SendPacket@transParam^(0+128),w
 17362  26C3  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17363  26C4  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17364  26C5  0026               	movlb	6	; select bank6
 17365  26C6  00A0               	movwf	_MACTxBuffer^(0+768)	;volatile
 17366                           
 17367                           ;drv_mrf_miwi_89xa.c: 758: MACTxBuffer[1] = MACSeq++;
 17368  26C7  0023               	movlb	3	; select bank3
 17369  26C8  084C               	movf	_MACSeq^(0+384),w
 17370  26C9  0021               	movlb	1	; select bank1
 17371  26CA  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17372  26CB  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17373  26CC  0026               	movlb	6	; select bank6
 17374  26CD  00A1               	movwf	(_MACTxBuffer^(0+768)+1)	;volatile
 17375  26CE  3001               	movlw	1
 17376  26CF  0021               	movlb	1	; select bank1
 17377  26D0  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17378  26D1  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17379  26D2  0023               	movlb	3	; select bank3
 17380  26D3  07CC               	addwf	_MACSeq^(0+384),f
 17381                           
 17382                           ;drv_mrf_miwi_89xa.c: 761: TxIndex = 2;
 17383  26D4  3002               	movlw	2
 17384  26D5  0021               	movlb	1	; select bank1
 17385  26D6  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17386  26D7  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17387  26D8  00D4               	movwf	MiMAC_SendPacket@TxIndex^(0+128)
 17388                           
 17389                           ;drv_mrf_miwi_89xa.c: 763: if( transParam.flags.bits.destPrsnt )
 17390  26D9  1F4C               	btfss	MiMAC_SendPacket@transParam^(0+128),6
 17391  26DA  2F01               	goto	l148
 17392                           
 17393                           ;drv_mrf_miwi_89xa.c: 764: {
 17394                           ;drv_mrf_miwi_89xa.c: 765: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 17395  26DB  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 17396  26DC                     l5383:	
 17397  26DC  0020               	movlb	0	; select bank0
 17398  26DD  0C58               	rrf	_MACInitParams,w
 17399  26DE  0021               	movlb	1	; select bank1
 17400  26DF  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17401  26E0  0CD1               	rrf	??_MiMAC_SendPacket^(0+128),f
 17402  26E1  0C51               	rrf	??_MiMAC_SendPacket^(0+128),w
 17403  26E2  390F               	andlw	15
 17404  26E3  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 17405  26E4  1803               	btfsc	3,0
 17406  26E5  2F01               	goto	l148
 17407                           
 17408                           ;drv_mrf_miwi_89xa.c: 766: {
 17409                           ;drv_mrf_miwi_89xa.c: 767: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 17410  26E6  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 17411  26E7  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17412  26E8  01D2               	clrf	(??_MiMAC_SendPacket^(0+128)+1)
 17413  26E9  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17414  26EA  074D               	addwf	(low ((MiMAC_SendPacket@transParam| 0+1)))^(0+128),w
 17415  26EB  0086               	movwf	6
 17416  26EC  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 17417  26ED  3D4E               	addwfc	((low ((MiMAC_SendPacket@transParam| 0+1))+1))^(0+128),w
 17418  26EE  0087               	movwf	7
 17419  26EF  0801               	movf	1,w
 17420  26F0  00D3               	movwf	(??_MiMAC_SendPacket+2)^(0+128)
 17421  26F1  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 17422  26F2  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 17423  26F3  0086               	movwf	6
 17424  26F4  3003               	movlw	3	; select bank6/7
 17425  26F5  0087               	movwf	7
 17426  26F6  0853               	movf	(??_MiMAC_SendPacket+2)^(0+128),w
 17427  26F7  0081               	movwf	1
 17428  26F8  3001               	movlw	1
 17429  26F9  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17430  26FA  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17431  26FB  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 17432  26FC  3001               	movlw	1
 17433  26FD  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17434  26FE  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17435  26FF  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 17436  2700  2EDC               	goto	l5383
 17437  2701                     l148:	
 17438                           ;drv_mrf_miwi_89xa.c: 771: {
 17439                           
 17440                           
 17441                           ;drv_mrf_miwi_89xa.c: 773: }
 17442                           ;drv_mrf_miwi_89xa.c: 775: if( transParam.flags.bits.sourcePrsnt )
 17443  2701  1FCC               	btfss	MiMAC_SendPacket@transParam^(0+128),7
 17444  2702  2F29               	goto	l5395
 17445                           
 17446                           ;drv_mrf_miwi_89xa.c: 776: {
 17447                           ;drv_mrf_miwi_89xa.c: 777: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 17448  2703  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 17449  2704                     l5393:	
 17450  2704  0020               	movlb	0	; select bank0
 17451  2705  0C58               	rrf	_MACInitParams,w
 17452  2706  0021               	movlb	1	; select bank1
 17453  2707  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17454  2708  0CD1               	rrf	??_MiMAC_SendPacket^(0+128),f
 17455  2709  0C51               	rrf	??_MiMAC_SendPacket^(0+128),w
 17456  270A  390F               	andlw	15
 17457  270B  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 17458  270C  1803               	btfsc	3,0
 17459  270D  2F29               	goto	l5395
 17460                           
 17461                           ;drv_mrf_miwi_89xa.c: 778: {
 17462                           ;drv_mrf_miwi_89xa.c: 779: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 17463  270E  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 17464  270F  0020               	movlb	0	; select bank0
 17465  2710  0759               	addwf	low ((_MACInitParams| 0+1)),w
 17466  2711  0021               	movlb	1	; select bank1
 17467  2712  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17468  2713  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17469  2714  0086               	movwf	6
 17470  2715  3001               	movlw	1	; select bank2/3
 17471  2716  0087               	movwf	7
 17472  2717  0801               	movf	1,w
 17473  2718  00D2               	movwf	(??_MiMAC_SendPacket+1)^(0+128)
 17474  2719  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 17475  271A  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 17476  271B  0086               	movwf	6
 17477  271C  3003               	movlw	3	; select bank6/7
 17478  271D  0087               	movwf	7
 17479  271E  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 17480  271F  0081               	movwf	1
 17481  2720  3001               	movlw	1
 17482  2721  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17483  2722  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17484  2723  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 17485  2724  3001               	movlw	1
 17486  2725  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17487  2726  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17488  2727  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 17489  2728  2F04               	goto	l5393
 17490  2729                     l5395:	
 17491                           
 17492                           ;drv_mrf_miwi_89xa.c: 780: }
 17493                           ;drv_mrf_miwi_89xa.c: 782: }
 17494                           ;drv_mrf_miwi_89xa.c: 843: for(i = 0; i < MACPayloadLen; i++)
 17495  2729  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 17496  272A                     l5403:	
 17497  272A  0850               	movf	MiMAC_SendPacket@MACPayloadLen^(0+128),w
 17498  272B  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 17499  272C  1803               	btfsc	3,0
 17500  272D  2F47               	goto	l5405
 17501                           
 17502                           ;drv_mrf_miwi_89xa.c: 844: {
 17503                           ;drv_mrf_miwi_89xa.c: 845: MACTxBuffer[TxIndex++] = MACPayload[i];
 17504  272E  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 17505  272F  074F               	addwf	MiMAC_SendPacket@MACPayload^(0+128),w
 17506  2730  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17507  2731  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17508  2732  0086               	movwf	6
 17509  2733  3002               	movlw	2	; select bank4/5
 17510  2734  0087               	movwf	7
 17511  2735  0801               	movf	1,w
 17512  2736  00D2               	movwf	(??_MiMAC_SendPacket+1)^(0+128)
 17513  2737  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 17514  2738  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 17515  2739  0086               	movwf	6
 17516  273A  3003               	movlw	3	; select bank6/7
 17517  273B  0087               	movwf	7
 17518  273C  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 17519  273D  0081               	movwf	1
 17520  273E  3001               	movlw	1
 17521  273F  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17522  2740  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17523  2741  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 17524  2742  3001               	movlw	1
 17525  2743  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 17526  2744  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 17527  2745  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 17528  2746  2F2A               	goto	l5403
 17529  2747                     l5405:	
 17530                           
 17531                           ;drv_mrf_miwi_89xa.c: 846: }
 17532                           ;drv_mrf_miwi_89xa.c: 848: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 17533  2747  3000               	movlw	0
 17534  2748  0020               	movlb	0	; select bank0
 17535  2749  18D8               	btfsc	_MACInitParams,1
 17536  274A  3001               	movlw	1
 17537  274B  0021               	movlb	1	; select bank1
 17538  274C  00B4               	movwf	TxPacket@CCA^(0+128)
 17539  274D  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 17540  274E  3188  201D         	fcall	_TxPacket
 17541  2750  0008               	return
 17542  2751                     __end_of_MiMAC_SendPacket:	
 17543                           
 17544                           	psect	text48
 17545  081D                     __ptext48:	
 17546 ;; *************** function _TxPacket *****************
 17547 ;; Defined at:
 17548 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17549 ;; Parameters:    Size  Location     Type
 17550 ;;  TxPacketLen     1    wreg     unsigned char 
 17551 ;;  CCA             1   20[BANK1 ] unsigned char 
 17552 ;; Auto vars:     Size  Location     Type
 17553 ;;  TxPacketLen     1   41[BANK1 ] unsigned char 
 17554 ;;  allowedTxFai    1   39[BANK1 ] unsigned char 
 17555 ;;  t2              4   33[BANK1 ] struct _MIWI_TICK
 17556 ;;  t1              4   29[BANK1 ] struct _MIWI_TICK
 17557 ;;  rssival         1   43[BANK1 ] unsigned char 
 17558 ;;  i               1   42[BANK1 ] unsigned char 
 17559 ;;  status          1   40[BANK1 ] unsigned char 
 17560 ;;  reTry           1   38[BANK1 ] unsigned char 
 17561 ;;  CCARetries      1   37[BANK1 ] unsigned char 
 17562 ;; Return value:  Size  Location     Type
 17563 ;;                  1    wreg      unsigned char 
 17564 ;; Registers used:
 17565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17566 ;; Tracked objects:
 17567 ;;		On entry : 0/0
 17568 ;;		On exit  : 0/0
 17569 ;;		Unchanged: 0/0
 17570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17571 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17572 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 17573 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 17574 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 17575 ;;Total ram usage:       24 bytes
 17576 ;; Hardware stack levels used:    1
 17577 ;; Hardware stack levels required when called:    8
 17578 ;; This function calls:
 17579 ;;		_DELAY_10us
 17580 ;;		_MiWi_TickGet
 17581 ;;		_RegisterRead
 17582 ;;		_RegisterSet
 17583 ;;		_SetRFMode
 17584 ;;		_WriteFIFO
 17585 ;; This function is called by:
 17586 ;;		_MiMAC_SendPacket
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590                           
 17591                           ;psect for function _TxPacket
 17592  081D                     _TxPacket:	
 17593                           
 17594                           ;incstack = 0
 17595 ;; hardware stack exceeded
 17596                           ; Regs used in _TxPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17597                           ;TxPacket@TxPacketLen stored from wreg
 17598  081D  0021               	movlb	1	; select bank1
 17599  081E  00C9               	movwf	TxPacket@TxPacketLen^(0+128)
 17600                           
 17601                           ;drv_mrf_miwi_89xa.c: 290: __nop();
 17602  081F  0000               	nop
 17603                           
 17604                           ;drv_mrf_miwi_89xa.c: 291: bool status;
 17605                           ;drv_mrf_miwi_89xa.c: 292: uint8_t i;
 17606                           ;drv_mrf_miwi_89xa.c: 293: MIWI_TICK t1, t2;
 17607                           ;drv_mrf_miwi_89xa.c: 295: uint8_t CCARetries;
 17608                           ;drv_mrf_miwi_89xa.c: 296: uint8_t rssival;
 17609                           ;drv_mrf_miwi_89xa.c: 300: uint8_t reTry = 3;
 17610  0820  3003               	movlw	3
 17611  0821  0021               	movlb	1	; select bank1
 17612  0822  00B5               	movwf	??_TxPacket^(0+128)
 17613  0823  0835               	movf	??_TxPacket^(0+128),w
 17614  0824  00C6               	movwf	TxPacket@reTry^(0+128)
 17615  0825                     l5299:	
 17616                           ;drv_mrf_miwi_89xa.c: 304: while( reTry-- )
 17617                           
 17618  0825  3001               	movlw	1
 17619  0826  02C6               	subwf	TxPacket@reTry^(0+128),f
 17620  0827  0A46               	incf	TxPacket@reTry^(0+128),w
 17621  0828  1903               	btfsc	3,2
 17622  0829  28F0               	goto	l5301
 17623                           
 17624                           ;drv_mrf_miwi_89xa.c: 306: {
 17625                           ;drv_mrf_miwi_89xa.c: 307: uint8_t allowedTxFailure;
 17626                           ;drv_mrf_miwi_89xa.c: 308: allowedTxFailure = 0;
 17627  082A  01C7               	clrf	TxPacket@allowedTxFailure^(0+128)
 17628  082B                     l87:	
 17629                           ;drv_mrf_miwi_89xa.c: 310: Start_Transmitting:
 17630                           
 17631                           
 17632                           ;drv_mrf_miwi_89xa.c: 313: hasAck = 0;
 17633  082B  0020               	movlb	0	; select bank0
 17634  082C  01E3               	clrf	_hasAck	;volatile
 17635                           
 17636                           ;drv_mrf_miwi_89xa.c: 317: CCARetries = 0;
 17637  082D  0021               	movlb	1	; select bank1
 17638  082E  01C5               	clrf	TxPacket@CCARetries^(0+128)
 17639                           
 17640                           ;drv_mrf_miwi_89xa.c: 319: if( CCA )
 17641  082F  0834               	movf	TxPacket@CCA^(0+128),w
 17642  0830  1D03               	btfss	3,2
 17643  0831  2847               	goto	l5237
 17644  0832  2857               	goto	l88
 17645  0833                     l5243:	
 17646                           
 17647                           ;drv_mrf_miwi_89xa.c: 327: {
 17648                           ;drv_mrf_miwi_89xa.c: 328: if(CCARetries++ > 4 )
 17649  0833  0845               	movf	TxPacket@CCARetries^(0+128),w
 17650  0834  0AC5               	incf	TxPacket@CCARetries^(0+128),f
 17651  0835  00B5               	movwf	??_TxPacket^(0+128)
 17652  0836  3005               	movlw	5
 17653  0837  0235               	subwf	??_TxPacket^(0+128),w
 17654  0838  1C03               	skipc
 17655  0839  283C               	goto	l5249
 17656                           
 17657                           ;drv_mrf_miwi_89xa.c: 329: {
 17658                           ;drv_mrf_miwi_89xa.c: 330: return 0;
 17659  083A  3000               	movlw	0
 17660  083B  0008               	return
 17661  083C                     l5249:	
 17662                           
 17663                           ;drv_mrf_miwi_89xa.c: 332: }
 17664                           ;drv_mrf_miwi_89xa.c: 333: DELAY_10us(1);
 17665  083C  3000               	movlw	0
 17666  083D  00AF               	movwf	(DELAY_10us@tenMicroSecondCounter+3)^(0+128)
 17667  083E  3000               	movlw	0
 17668  083F  00AE               	movwf	(DELAY_10us@tenMicroSecondCounter+2)^(0+128)
 17669  0840  3000               	movlw	0
 17670  0841  00AD               	movwf	(DELAY_10us@tenMicroSecondCounter+1)^(0+128)
 17671  0842  3001               	movlw	1
 17672  0843  00AC               	movwf	DELAY_10us@tenMicroSecondCounter^(0+128)
 17673  0844  31B6  266D  3188   	fcall	_DELAY_10us
 17674  0847                     l5237:	
 17675                           ;drv_mrf_miwi_89xa.c: 320: {
 17676                           ;drv_mrf_miwi_89xa.c: 322: Start_CCA:
 17677                           
 17678                           ;drv_mrf_miwi_89xa.c: 334: goto Start_CCA;
 17679                           
 17680                           
 17681                           ;drv_mrf_miwi_89xa.c: 323: rssival = RegisterRead(0x2800>>8);
 17682  0847  3028               	movlw	40
 17683  0848  31B7  2794  3188   	fcall	_RegisterRead
 17684  084B  0021               	movlb	1	; select bank1
 17685  084C  00B5               	movwf	??_TxPacket^(0+128)
 17686  084D  0835               	movf	??_TxPacket^(0+128),w
 17687  084E  00CB               	movwf	TxPacket@rssival^(0+128)
 17688                           
 17689                           ;drv_mrf_miwi_89xa.c: 324: rssival = (rssival>>1);
 17690  084F  364B               	lsrf	TxPacket@rssival^(0+128),w
 17691  0850  00B5               	movwf	??_TxPacket^(0+128)
 17692  0851  0835               	movf	??_TxPacket^(0+128),w
 17693  0852  00CB               	movwf	TxPacket@rssival^(0+128)
 17694                           
 17695                           ;drv_mrf_miwi_89xa.c: 326: if( rssival > 65 )
 17696  0853  3042               	movlw	66
 17697  0854  024B               	subwf	TxPacket@rssival^(0+128),w
 17698  0855  1803               	btfsc	3,0
 17699  0856  2833               	goto	l5243
 17700  0857                     l88:	
 17701                           
 17702                           ;drv_mrf_miwi_89xa.c: 335: }
 17703                           ;drv_mrf_miwi_89xa.c: 336: }
 17704                           ;drv_mrf_miwi_89xa.c: 343: INTCONbits.IOCIE = 0;
 17705  0857  118B               	bcf	11,3	;volatile
 17706                           
 17707                           ;drv_mrf_miwi_89xa.c: 344: SetRFMode(0x20);
 17708  0858  3020               	movlw	32
 17709  0859  31AE  26F1  3188   	fcall	_SetRFMode
 17710                           
 17711                           ;drv_mrf_miwi_89xa.c: 345: RegisterSet(0x1A00 | (0xC8) | 0x01);
 17712  085C  30C9               	movlw	201
 17713  085D  0021               	movlb	1	; select bank1
 17714  085E  00A3               	movwf	RegisterSet@setting^(0+128)
 17715  085F  301A               	movlw	26
 17716  0860  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 17717  0861  31B6  2603  3188   	fcall	_RegisterSet
 17718                           
 17719                           ;drv_mrf_miwi_89xa.c: 346: WriteFIFO(TxPacketLen);
 17720  0864  0021               	movlb	1	; select bank1
 17721  0865  0849               	movf	TxPacket@TxPacketLen^(0+128),w
 17722  0866  31B5  25BD  3188   	fcall	_WriteFIFO
 17723                           
 17724                           ;drv_mrf_miwi_89xa.c: 347: for(i=0; i< TxPacketLen; i++)
 17725  0869  0021               	movlb	1	; select bank1
 17726  086A  01CA               	clrf	TxPacket@i^(0+128)
 17727  086B                     l5263:	
 17728  086B  0849               	movf	TxPacket@TxPacketLen^(0+128),w
 17729  086C  024A               	subwf	TxPacket@i^(0+128),w
 17730  086D  1803               	btfsc	3,0
 17731  086E  287E               	goto	l5265
 17732                           
 17733                           ;drv_mrf_miwi_89xa.c: 348: {
 17734                           ;drv_mrf_miwi_89xa.c: 349: WriteFIFO(MACTxBuffer[i]);
 17735  086F  084A               	movf	TxPacket@i^(0+128),w
 17736  0870  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 17737  0871  0086               	movwf	6
 17738  0872  3003               	movlw	3	; select bank6/7
 17739  0873  0087               	movwf	7
 17740  0874  0801               	movf	1,w
 17741  0875  31B5  25BD  3188   	fcall	_WriteFIFO
 17742  0878  3001               	movlw	1
 17743  0879  0021               	movlb	1	; select bank1
 17744  087A  00B5               	movwf	??_TxPacket^(0+128)
 17745  087B  0835               	movf	??_TxPacket^(0+128),w
 17746  087C  07CA               	addwf	TxPacket@i^(0+128),f
 17747  087D  286B               	goto	l5263
 17748  087E                     l5265:	
 17749                           
 17750                           ;drv_mrf_miwi_89xa.c: 350: }
 17751                           ;drv_mrf_miwi_89xa.c: 351: SetRFMode(0x80);
 17752  087E  3080               	movlw	128
 17753  087F  31AE  26F1  3188   	fcall	_SetRFMode
 17754                           
 17755                           ;drv_mrf_miwi_89xa.c: 355: INTCONbits.IOCIE = 1;
 17756  0882  158B               	bsf	11,3	;volatile
 17757  0883                     l5269:	
 17758                           ;drv_mrf_miwi_89xa.c: 357: {
 17759                           
 17760                           ;drv_mrf_miwi_89xa.c: 356: while((IRQ1_Received == 0) && (IOCBFbits.IOCBF3 == 0) )
 17761                           
 17762  0883  0020               	movlb	0	; select bank0
 17763  0884  085A               	movf	_IRQ1_Received,w	;volatile
 17764  0885  1D03               	btfss	3,2
 17765  0886  288A               	goto	l5273
 17766  0887  0027               	movlb	7	; select bank7
 17767  0888  1D96               	btfss	22,3	;volatile
 17768  0889  2883               	goto	l5269
 17769  088A                     l5273:	
 17770                           
 17771                           ;drv_mrf_miwi_89xa.c: 359: };
 17772                           ;drv_mrf_miwi_89xa.c: 363: IRQ1_Received = 0;
 17773  088A  0020               	movlb	0	; select bank0
 17774  088B  01DA               	clrf	_IRQ1_Received	;volatile
 17775                           
 17776                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x20);
 17777  088C  3020               	movlw	32
 17778  088D  31AE  26F1  3188   	fcall	_SetRFMode
 17779                           
 17780                           ;drv_mrf_miwi_89xa.c: 365: SetRFMode(0x60);
 17781  0890  3060               	movlw	96
 17782  0891  31AE  26F1  3188   	fcall	_SetRFMode
 17783                           
 17784                           ;drv_mrf_miwi_89xa.c: 368: if( (MACTxBuffer[0] & 0x20) > 0 )
 17785  0894  0026               	movlb	6	; select bank6
 17786  0895  1EA0               	btfss	_MACTxBuffer^(0+768),5	;volatile
 17787  0896  28EC               	goto	l101
 17788                           
 17789                           ;drv_mrf_miwi_89xa.c: 369: {
 17790                           ;drv_mrf_miwi_89xa.c: 370: TxMACSeq = MACTxBuffer[1];
 17791  0897  0821               	movf	(_MACTxBuffer^(0+768)+1),w	;volatile
 17792  0898  0021               	movlb	1	; select bank1
 17793  0899  00B5               	movwf	??_TxPacket^(0+128)
 17794  089A  0835               	movf	??_TxPacket^(0+128),w
 17795  089B  0023               	movlb	3	; select bank3
 17796  089C  00D2               	movwf	_TxMACSeq^(0+384)
 17797                           
 17798                           ;drv_mrf_miwi_89xa.c: 371: t1 = MiWi_TickGet();
 17799  089D  31AB  23D9  3188   	fcall	_MiWi_TickGet
 17800  08A0  0021               	movlb	1	; select bank1
 17801  08A1  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 17802  08A2  00C0               	movwf	(TxPacket@t1+3)^(0+128)
 17803  08A3  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 17804  08A4  00BF               	movwf	(TxPacket@t1+2)^(0+128)
 17805  08A5  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 17806  08A6  00BE               	movwf	(TxPacket@t1+1)^(0+128)
 17807  08A7  0820               	movf	?_MiWi_TickGet^(0+128),w
 17808  08A8  00BD               	movwf	TxPacket@t1^(0+128)
 17809  08A9                     l5285:	
 17810                           ;drv_mrf_miwi_89xa.c: 372: while(1)
 17811                           
 17812                           
 17813                           ;drv_mrf_miwi_89xa.c: 373: {
 17814                           ;drv_mrf_miwi_89xa.c: 374: if( hasAck )
 17815  08A9  0020               	movlb	0	; select bank0
 17816  08AA  0863               	movf	_hasAck,w	;volatile
 17817  08AB  1D03               	btfss	3,2
 17818  08AC  28EC               	goto	l101
 17819                           
 17820                           ;drv_mrf_miwi_89xa.c: 378: }
 17821                           ;drv_mrf_miwi_89xa.c: 379: t2 = MiWi_TickGet();
 17822                           
 17823                           ;drv_mrf_miwi_89xa.c: 377: goto TX_END_HERE;
 17824                           
 17825                           ;drv_mrf_miwi_89xa.c: 375: {
 17826                           ;drv_mrf_miwi_89xa.c: 376: status = 1;
 17827  08AD  31AB  23D9  3188   	fcall	_MiWi_TickGet
 17828  08B0  0021               	movlb	1	; select bank1
 17829  08B1  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 17830  08B2  00C4               	movwf	(TxPacket@t2+3)^(0+128)
 17831  08B3  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 17832  08B4  00C3               	movwf	(TxPacket@t2+2)^(0+128)
 17833  08B5  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 17834  08B6  00C2               	movwf	(TxPacket@t2+1)^(0+128)
 17835  08B7  0820               	movf	?_MiWi_TickGet^(0+128),w
 17836  08B8  00C1               	movwf	TxPacket@t2^(0+128)
 17837                           
 17838                           ;drv_mrf_miwi_89xa.c: 380: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 17839  08B9  0841               	movf	TxPacket@t2^(0+128),w
 17840  08BA  00B5               	movwf	??_TxPacket^(0+128)
 17841  08BB  0842               	movf	(TxPacket@t2+1)^(0+128),w
 17842  08BC  00B6               	movwf	(??_TxPacket^(0+128)+1)
 17843  08BD  0843               	movf	(TxPacket@t2+2)^(0+128),w
 17844  08BE  00B7               	movwf	(??_TxPacket^(0+128)+2)
 17845  08BF  0844               	movf	(TxPacket@t2+3)^(0+128),w
 17846  08C0  00B8               	movwf	(??_TxPacket^(0+128)+3)
 17847  08C1  093D               	comf	TxPacket@t1^(0+128),w
 17848  08C2  00B9               	movwf	(??_TxPacket+4)^(0+128)
 17849  08C3  093E               	comf	(TxPacket@t1+1)^(0+128),w
 17850  08C4  00BA               	movwf	((??_TxPacket+4)^(0+128)+1)
 17851  08C5  093F               	comf	(TxPacket@t1+2)^(0+128),w
 17852  08C6  00BB               	movwf	((??_TxPacket+4)^(0+128)+2)
 17853  08C7  0940               	comf	(TxPacket@t1+3)^(0+128),w
 17854  08C8  00BC               	movwf	((??_TxPacket+4)^(0+128)+3)
 17855  08C9  0AB9               	incf	(??_TxPacket+4)^(0+128),f
 17856  08CA  1903               	skipnz
 17857  08CB  0ABA               	incf	((??_TxPacket+4)^(0+128)+1),f
 17858  08CC  1903               	skipnz
 17859  08CD  0ABB               	incf	((??_TxPacket+4)^(0+128)+2),f
 17860  08CE  1903               	skipnz
 17861  08CF  0ABC               	incf	((??_TxPacket+4)^(0+128)+3),f
 17862  08D0  0839               	movf	(??_TxPacket+4)^(0+128),w
 17863  08D1  07B5               	addwf	??_TxPacket^(0+128),f
 17864  08D2  083A               	movf	(??_TxPacket+5)^(0+128),w
 17865  08D3  3DB6               	addwfc	(??_TxPacket^(0+128)+1),f
 17866  08D4  083B               	movf	(??_TxPacket+6)^(0+128),w
 17867  08D5  3DB7               	addwfc	(??_TxPacket^(0+128)+2),f
 17868  08D6  083C               	movf	(??_TxPacket+7)^(0+128),w
 17869  08D7  3DB8               	addwfc	(??_TxPacket^(0+128)+3),f
 17870  08D8  0838               	movf	(??_TxPacket^(0+128)+3),w
 17871  08D9  1D03               	btfss	3,2
 17872  08DA  28E4               	goto	l5295
 17873  08DB  0837               	movf	(??_TxPacket^(0+128)+2),w
 17874  08DC  1D03               	btfss	3,2
 17875  08DD  28E4               	goto	l5295
 17876  08DE  300A               	movlw	10
 17877  08DF  0235               	subwf	??_TxPacket^(0+128),w
 17878  08E0  303D               	movlw	61
 17879  08E1  3B36               	subwfb	(??_TxPacket^(0+128)+1),w
 17880  08E2  1C03               	btfss	3,0
 17881  08E3  28A9               	goto	l5285
 17882  08E4                     l5295:	
 17883                           ;drv_mrf_miwi_89xa.c: 381: {
 17884                           ;drv_mrf_miwi_89xa.c: 382: break;
 17885                           
 17886                           
 17887                           ;drv_mrf_miwi_89xa.c: 383: }
 17888                           ;drv_mrf_miwi_89xa.c: 384: }
 17889                           ;drv_mrf_miwi_89xa.c: 386: if(allowedTxFailure++ <= 3)
 17890  08E4  0847               	movf	TxPacket@allowedTxFailure^(0+128),w
 17891  08E5  0AC7               	incf	TxPacket@allowedTxFailure^(0+128),f
 17892  08E6  00B5               	movwf	??_TxPacket^(0+128)
 17893  08E7  3004               	movlw	4
 17894  08E8  0235               	subwf	??_TxPacket^(0+128),w
 17895  08E9  1C03               	btfss	3,0
 17896  08EA  282B               	goto	l87
 17897  08EB  2825               	goto	l5299
 17898  08EC                     l101:	
 17899                           ;drv_mrf_miwi_89xa.c: 389: }
 17900                           
 17901                           ;drv_mrf_miwi_89xa.c: 387: goto Start_Transmitting;
 17902                           
 17903                           
 17904                           ;drv_mrf_miwi_89xa.c: 390: else
 17905                           ;drv_mrf_miwi_89xa.c: 392: {
 17906                           ;drv_mrf_miwi_89xa.c: 393: status = 1;
 17907  08EC  0021               	movlb	1	; select bank1
 17908  08ED  01C8               	clrf	TxPacket@status^(0+128)
 17909  08EE  0AC8               	incf	TxPacket@status^(0+128),f
 17910                           
 17911                           ;drv_mrf_miwi_89xa.c: 394: goto TX_END_HERE;
 17912  08EF  28F1               	goto	l5303
 17913  08F0                     l5301:	
 17914                           
 17915                           ;drv_mrf_miwi_89xa.c: 395: }
 17916                           ;drv_mrf_miwi_89xa.c: 396: }
 17917                           ;drv_mrf_miwi_89xa.c: 398: status = 0;
 17918  08F0  01C8               	clrf	TxPacket@status^(0+128)
 17919  08F1                     l5303:	
 17920                           ;drv_mrf_miwi_89xa.c: 399: TX_END_HERE:
 17921                           
 17922                           
 17923                           ;drv_mrf_miwi_89xa.c: 400: return status;
 17924  08F1  0848               	movf	TxPacket@status^(0+128),w
 17925  08F2  0008               	return
 17926  08F3                     __end_of_TxPacket:	
 17927                           
 17928                           	psect	text49
 17929  35BD                     __ptext49:	
 17930 ;; *************** function _WriteFIFO *****************
 17931 ;; Defined at:
 17932 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;  Data            1    wreg     unsigned char 
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;  Data            1    3[BANK1 ] unsigned char 
 17937 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  1    wreg      void 
 17940 ;; Registers used:
 17941 ;;		wreg, status,2, status,0, pclath, cstack
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17950 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17951 ;;Total ram usage:        2 bytes
 17952 ;; Hardware stack levels used:    1
 17953 ;; Hardware stack levels required when called:    6
 17954 ;; This function calls:
 17955 ;;		_SPIPut
 17956 ;; This function is called by:
 17957 ;;		_TxPacket
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           
 17962                           ;psect for function _WriteFIFO
 17963  35BD                     _WriteFIFO:	
 17964                           
 17965                           ;incstack = 0
 17966                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
 17967                           ;WriteFIFO@Data stored from wreg
 17968  35BD  0021               	movlb	1	; select bank1
 17969  35BE  00A3               	movwf	WriteFIFO@Data^(0+128)
 17970                           
 17971                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCONbits.IOCIE;
 17972  35BF  3000               	movlw	0
 17973  35C0  198B               	btfsc	11,3	;volatile
 17974  35C1  3001               	movlw	1
 17975  35C2  00A4               	movwf	WriteFIFO@IRQ1select^(0+128)
 17976                           
 17977                           ;drv_mrf_miwi_89xa.c: 253: INTCONbits.IOCIE = 0;
 17978  35C3  118B               	bcf	11,3	;volatile
 17979                           
 17980                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 17981  35C4  0022               	movlb	2	; select bank2
 17982  35C5  110E               	bcf	14,2	;volatile
 17983                           
 17984                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 17985  35C6  0021               	movlb	1	; select bank1
 17986  35C7  0823               	movf	WriteFIFO@Data^(0+128),w
 17987  35C8  31B5  25D3         	fcall	_SPIPut
 17988                           
 17989                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 17990  35CA  0022               	movlb	2	; select bank2
 17991  35CB  150E               	bsf	14,2	;volatile
 17992                           
 17993                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.IOCIE = IRQ1select;
 17994  35CC  0021               	movlb	1	; select bank1
 17995  35CD  0C24               	rrf	WriteFIFO@IRQ1select^(0+128),w
 17996  35CE  1C03               	skipc
 17997  35CF  118B               	bcf	11,3	;volatile
 17998  35D0  1803               	skipnc
 17999  35D1  158B               	bsf	11,3	;volatile
 18000  35D2  0008               	return
 18001  35D3                     __end_of_WriteFIFO:	
 18002                           
 18003                           	psect	text50
 18004  2EF1                     __ptext50:	
 18005 ;; *************** function _SetRFMode *****************
 18006 ;; Defined at:
 18007 ;;		line 669 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18008 ;; Parameters:    Size  Location     Type
 18009 ;;  mode            1    wreg     unsigned char 
 18010 ;; Auto vars:     Size  Location     Type
 18011 ;;  mode            1    7[BANK1 ] unsigned char 
 18012 ;; Return value:  Size  Location     Type
 18013 ;;                  1    wreg      void 
 18014 ;; Registers used:
 18015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18016 ;; Tracked objects:
 18017 ;;		On entry : 0/0
 18018 ;;		On exit  : 0/0
 18019 ;;		Unchanged: 0/0
 18020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18022 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18023 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18024 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18025 ;;Total ram usage:        2 bytes
 18026 ;; Hardware stack levels used:    1
 18027 ;; Hardware stack levels required when called:    7
 18028 ;; This function calls:
 18029 ;;		_RegisterSet
 18030 ;; This function is called by:
 18031 ;;		_TxPacket
 18032 ;;		_MiMAC_SetChannel
 18033 ;;		_MiMAC_Init
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037                           
 18038                           ;psect for function _SetRFMode
 18039  2EF1                     _SetRFMode:	
 18040                           
 18041                           ;incstack = 0
 18042 ;; hardware stack exceeded
 18043                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18044                           ;SetRFMode@mode stored from wreg
 18045  2EF1  0021               	movlb	1	; select bank1
 18046  2EF2  00A7               	movwf	SetRFMode@mode^(0+128)
 18047                           
 18048                           ;drv_mrf_miwi_89xa.c: 671: switch (mode) {
 18049  2EF3  2F35               	goto	l5203
 18050  2EF4                     l5181:	
 18051                           ;drv_mrf_miwi_89xa.c: 672: case 0x80:
 18052                           
 18053                           
 18054                           ;drv_mrf_miwi_89xa.c: 673: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 18055  2EF4  308E               	movlw	142
 18056  2EF5  00A3               	movwf	RegisterSet@setting^(0+128)
 18057  2EF6  3000               	movlw	0
 18058  2EF7  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 18059  2EF8  31B6  2603         	fcall	_RegisterSet
 18060                           
 18061                           ;drv_mrf_miwi_89xa.c: 674: RF_Mode = 0x80;
 18062  2EFA  3080               	movlw	128
 18063  2EFB  0021               	movlb	1	; select bank1
 18064  2EFC  00A6               	movwf	??_SetRFMode^(0+128)
 18065  2EFD  0826               	movf	??_SetRFMode^(0+128),w
 18066  2EFE  0023               	movlb	3	; select bank3
 18067  2EFF  00CF               	movwf	_RF_Mode^(0+384)
 18068                           
 18069                           ;drv_mrf_miwi_89xa.c: 675: break;
 18070  2F00  0008               	return
 18071  2F01                     l5185:	
 18072                           ;drv_mrf_miwi_89xa.c: 676: case 0x60:
 18073                           
 18074                           
 18075                           ;drv_mrf_miwi_89xa.c: 677: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 18076  2F01  306E               	movlw	110
 18077  2F02  0021               	movlb	1	; select bank1
 18078  2F03  00A3               	movwf	RegisterSet@setting^(0+128)
 18079  2F04  3000               	movlw	0
 18080  2F05  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 18081  2F06  31B6  2603         	fcall	_RegisterSet
 18082                           
 18083                           ;drv_mrf_miwi_89xa.c: 678: RF_Mode = 0x60;
 18084  2F08  3060               	movlw	96
 18085  2F09  0021               	movlb	1	; select bank1
 18086  2F0A  00A6               	movwf	??_SetRFMode^(0+128)
 18087  2F0B  0826               	movf	??_SetRFMode^(0+128),w
 18088  2F0C  0023               	movlb	3	; select bank3
 18089  2F0D  00CF               	movwf	_RF_Mode^(0+384)
 18090                           
 18091                           ;drv_mrf_miwi_89xa.c: 679: break;
 18092  2F0E  0008               	return
 18093  2F0F                     l5189:	
 18094                           ;drv_mrf_miwi_89xa.c: 680: case 0x40:
 18095                           
 18096                           
 18097                           ;drv_mrf_miwi_89xa.c: 681: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 18098  2F0F  304E               	movlw	78
 18099  2F10  0021               	movlb	1	; select bank1
 18100  2F11  00A3               	movwf	RegisterSet@setting^(0+128)
 18101  2F12  3000               	movlw	0
 18102  2F13  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 18103  2F14  31B6  2603         	fcall	_RegisterSet
 18104                           
 18105                           ;drv_mrf_miwi_89xa.c: 682: RF_Mode = 0x40;
 18106  2F16  3040               	movlw	64
 18107  2F17  0021               	movlb	1	; select bank1
 18108  2F18  00A6               	movwf	??_SetRFMode^(0+128)
 18109  2F19  0826               	movf	??_SetRFMode^(0+128),w
 18110  2F1A  0023               	movlb	3	; select bank3
 18111  2F1B  00CF               	movwf	_RF_Mode^(0+384)
 18112                           
 18113                           ;drv_mrf_miwi_89xa.c: 683: break;
 18114  2F1C  0008               	return
 18115  2F1D                     l5193:	
 18116                           ;drv_mrf_miwi_89xa.c: 684: case 0x20:
 18117                           
 18118                           
 18119                           ;drv_mrf_miwi_89xa.c: 685: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 18120  2F1D  302E               	movlw	46
 18121  2F1E  0021               	movlb	1	; select bank1
 18122  2F1F  00A3               	movwf	RegisterSet@setting^(0+128)
 18123  2F20  3000               	movlw	0
 18124  2F21  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 18125  2F22  31B6  2603         	fcall	_RegisterSet
 18126                           
 18127                           ;drv_mrf_miwi_89xa.c: 686: RF_Mode = 0x20;
 18128  2F24  3020               	movlw	32
 18129  2F25  0021               	movlb	1	; select bank1
 18130  2F26  00A6               	movwf	??_SetRFMode^(0+128)
 18131  2F27  0826               	movf	??_SetRFMode^(0+128),w
 18132  2F28  0023               	movlb	3	; select bank3
 18133  2F29  00CF               	movwf	_RF_Mode^(0+384)
 18134                           
 18135                           ;drv_mrf_miwi_89xa.c: 687: break;
 18136  2F2A  0008               	return
 18137  2F2B                     l5197:	
 18138                           ;drv_mrf_miwi_89xa.c: 688: case 0x00:
 18139                           
 18140                           
 18141                           ;drv_mrf_miwi_89xa.c: 689: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 18142  2F2B  300E               	movlw	14
 18143  2F2C  0021               	movlb	1	; select bank1
 18144  2F2D  00A3               	movwf	RegisterSet@setting^(0+128)
 18145  2F2E  3000               	movlw	0
 18146  2F2F  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 18147  2F30  31B6  2603         	fcall	_RegisterSet
 18148                           
 18149                           ;drv_mrf_miwi_89xa.c: 690: RF_Mode = 0x00;
 18150  2F32  0023               	movlb	3	; select bank3
 18151  2F33  01CF               	clrf	_RF_Mode^(0+384)
 18152                           
 18153                           ;drv_mrf_miwi_89xa.c: 692: }
 18154                           
 18155                           ;drv_mrf_miwi_89xa.c: 691: break;
 18156  2F34  0008               	return
 18157  2F35                     l5203:	
 18158  2F35  0021               	movlb	1	; select bank1
 18159  2F36  0827               	movf	SetRFMode@mode^(0+128),w
 18160                           
 18161                           ; Switch size 1, requested type "space"
 18162                           ; Number of cases is 5, Range of values is 0 to 128
 18163                           ; switch strategies available:
 18164                           ; Name         Instructions Cycles
 18165                           ; simple_byte           16     9 (average)
 18166                           ; jumptable            260     6 (fixed)
 18167                           ;	Chosen strategy is simple_byte
 18168  2F37  3A00               	xorlw	0	; case 0
 18169  2F38  1903               	skipnz
 18170  2F39  2F2B               	goto	l5197
 18171  2F3A  3A20               	xorlw	32	; case 32
 18172  2F3B  1903               	skipnz
 18173  2F3C  2F1D               	goto	l5193
 18174  2F3D  3A60               	xorlw	96	; case 64
 18175  2F3E  1903               	skipnz
 18176  2F3F  2F0F               	goto	l5189
 18177  2F40  3A20               	xorlw	32	; case 96
 18178  2F41  1903               	skipnz
 18179  2F42  2F01               	goto	l5185
 18180  2F43  3AE0               	xorlw	224	; case 128
 18181  2F44  1903               	skipnz
 18182  2F45  2EF4               	goto	l5181
 18183  2F46  2F47               	goto	l138
 18184  2F47                     l138:	
 18185  2F47  0008               	return
 18186  2F48                     __end_of_SetRFMode:	
 18187                           
 18188                           	psect	text51
 18189  3603                     __ptext51:	
 18190 ;; *************** function _RegisterSet *****************
 18191 ;; Defined at:
 18192 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18193 ;; Parameters:    Size  Location     Type
 18194 ;;  setting         2    3[BANK1 ] unsigned int 
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;  IRQ1select      1    5[BANK1 ] unsigned char 
 18197 ;; Return value:  Size  Location     Type
 18198 ;;                  1    wreg      void 
 18199 ;; Registers used:
 18200 ;;		wreg, status,2, status,0, pclath, cstack
 18201 ;; Tracked objects:
 18202 ;;		On entry : 0/0
 18203 ;;		On exit  : 0/0
 18204 ;;		Unchanged: 0/0
 18205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18206 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18207 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18210 ;;Total ram usage:        3 bytes
 18211 ;; Hardware stack levels used:    1
 18212 ;; Hardware stack levels required when called:    6
 18213 ;; This function calls:
 18214 ;;		_SPIPut
 18215 ;; This function is called by:
 18216 ;;		_TxPacket
 18217 ;;		_MiMAC_SetChannel
 18218 ;;		_MiMAC_Init
 18219 ;;		_SetRFMode
 18220 ;;		_MiMAC_SetPower
 18221 ;; This function uses a non-reentrant model
 18222 ;;
 18223                           
 18224                           
 18225                           ;psect for function _RegisterSet
 18226  3603                     _RegisterSet:	
 18227                           
 18228                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCONbits.IOCIE;
 18229                           
 18230                           ;incstack = 0
 18231 ;; hardware stack exceeded
 18232                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
 18233  3603  3000               	movlw	0
 18234  3604  198B               	btfsc	11,3	;volatile
 18235  3605  3001               	movlw	1
 18236  3606  0021               	movlb	1	; select bank1
 18237  3607  00A5               	movwf	RegisterSet@IRQ1select^(0+128)
 18238                           
 18239                           ;drv_mrf_miwi_89xa.c: 172: INTCONbits.IOCIE = 0;
 18240  3608  118B               	bcf	11,3	;volatile
 18241                           
 18242                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 18243  3609  0022               	movlb	2	; select bank2
 18244  360A  1190               	bcf	16,3	;volatile
 18245                           
 18246                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 18247  360B  0021               	movlb	1	; select bank1
 18248  360C  0824               	movf	(RegisterSet@setting+1)^(0+128),w
 18249  360D  31B5  25D3  31B6   	fcall	_SPIPut
 18250                           
 18251                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 18252  3610  0021               	movlb	1	; select bank1
 18253  3611  0823               	movf	RegisterSet@setting^(0+128),w
 18254  3612  31B5  25D3         	fcall	_SPIPut
 18255                           
 18256                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 18257  3614  0022               	movlb	2	; select bank2
 18258  3615  1590               	bsf	16,3	;volatile
 18259                           
 18260                           ;drv_mrf_miwi_89xa.c: 177: INTCONbits.IOCIE = IRQ1select;
 18261  3616  0021               	movlb	1	; select bank1
 18262  3617  0C25               	rrf	RegisterSet@IRQ1select^(0+128),w
 18263  3618  1C03               	skipc
 18264  3619  118B               	bcf	11,3	;volatile
 18265  361A  1803               	skipnc
 18266  361B  158B               	bsf	11,3	;volatile
 18267  361C  0008               	return
 18268  361D                     __end_of_RegisterSet:	
 18269                           
 18270                           	psect	text52
 18271  3794                     __ptext52:	
 18272 ;; *************** function _RegisterRead *****************
 18273 ;; Defined at:
 18274 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18275 ;; Parameters:    Size  Location     Type
 18276 ;;  address         1    wreg     unsigned char 
 18277 ;; Auto vars:     Size  Location     Type
 18278 ;;  address         1    6[BANK1 ] unsigned char 
 18279 ;;  IRQ1select      1    5[BANK1 ] unsigned char 
 18280 ;;  value           1    4[BANK1 ] unsigned char 
 18281 ;; Return value:  Size  Location     Type
 18282 ;;                  1    wreg      unsigned char 
 18283 ;; Registers used:
 18284 ;;		wreg, status,2, status,0, pclath, cstack
 18285 ;; Tracked objects:
 18286 ;;		On entry : 0/0
 18287 ;;		On exit  : 0/0
 18288 ;;		Unchanged: 0/0
 18289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18291 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18292 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18293 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18294 ;;Total ram usage:        4 bytes
 18295 ;; Hardware stack levels used:    1
 18296 ;; Hardware stack levels required when called:    7
 18297 ;; This function calls:
 18298 ;;		_SPIGet
 18299 ;;		_SPIPut
 18300 ;; This function is called by:
 18301 ;;		_TxPacket
 18302 ;;		_getReceiverBW
 18303 ;; This function uses a non-reentrant model
 18304 ;;
 18305                           
 18306                           
 18307                           ;psect for function _RegisterRead
 18308  3794                     _RegisterRead:	
 18309                           
 18310                           ;incstack = 0
 18311 ;; hardware stack exceeded
 18312                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
 18313                           ;RegisterRead@address stored from wreg
 18314  3794  0021               	movlb	1	; select bank1
 18315  3795  00A6               	movwf	RegisterRead@address^(0+128)
 18316                           
 18317                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 18318                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCONbits.IOCIE;
 18319  3796  3000               	movlw	0
 18320  3797  198B               	btfsc	11,3	;volatile
 18321  3798  3001               	movlw	1
 18322  3799  00A5               	movwf	RegisterRead@IRQ1select^(0+128)
 18323                           
 18324                           ;drv_mrf_miwi_89xa.c: 210: INTCONbits.IOCIE = 0;
 18325  379A  118B               	bcf	11,3	;volatile
 18326                           
 18327                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 18328  379B  0022               	movlb	2	; select bank2
 18329  379C  1190               	bcf	16,3	;volatile
 18330                           
 18331                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 18332  379D  0021               	movlb	1	; select bank1
 18333  379E  0826               	movf	RegisterRead@address^(0+128),w
 18334  379F  3840               	iorlw	64
 18335  37A0  00A3               	movwf	??_RegisterRead^(0+128)
 18336  37A1  0823               	movf	??_RegisterRead^(0+128),w
 18337  37A2  00A6               	movwf	RegisterRead@address^(0+128)
 18338                           
 18339                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 18340  37A3  0826               	movf	RegisterRead@address^(0+128),w
 18341  37A4  31B5  25D3  31B7   	fcall	_SPIPut
 18342                           
 18343                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 18344  37A7  31B5  2504         	fcall	_SPIGet
 18345  37A9  0021               	movlb	1	; select bank1
 18346  37AA  00A3               	movwf	??_RegisterRead^(0+128)
 18347  37AB  0823               	movf	??_RegisterRead^(0+128),w
 18348  37AC  00A4               	movwf	RegisterRead@value^(0+128)
 18349                           
 18350                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 18351  37AD  0022               	movlb	2	; select bank2
 18352  37AE  1590               	bsf	16,3	;volatile
 18353                           
 18354                           ;drv_mrf_miwi_89xa.c: 216: INTCONbits.IOCIE = IRQ1select;
 18355  37AF  0021               	movlb	1	; select bank1
 18356  37B0  0C25               	rrf	RegisterRead@IRQ1select^(0+128),w
 18357  37B1  1C03               	skipc
 18358  37B2  118B               	bcf	11,3	;volatile
 18359  37B3  1803               	skipnc
 18360  37B4  158B               	bsf	11,3	;volatile
 18361                           
 18362                           ;drv_mrf_miwi_89xa.c: 222: return value;
 18363  37B5  0824               	movf	RegisterRead@value^(0+128),w
 18364  37B6  0008               	return
 18365  37B7                     __end_of_RegisterRead:	
 18366                           
 18367                           	psect	text53
 18368  2BD9                     __ptext53:	
 18369 ;; *************** function _MiWi_TickGet *****************
 18370 ;; Defined at:
 18371 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;		None
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  currentTime     4    7[BANK1 ] struct _MIWI_TICK
 18376 ;;  IntFlag1        1    6[BANK1 ] unsigned char 
 18377 ;;  IntFlag2        1    5[BANK1 ] unsigned char 
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 18380 ;; Registers used:
 18381 ;;		wreg, status,2, status,0
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/0
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18387 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18388 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18389 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18390 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 18391 ;;Total ram usage:       11 bytes
 18392 ;; Hardware stack levels used:    1
 18393 ;; Hardware stack levels required when called:    5
 18394 ;; This function calls:
 18395 ;;		Nothing
 18396 ;; This function is called by:
 18397 ;;		_TxPacket
 18398 ;;		_MiMAC_ReceivedPacket
 18399 ;;		_P2PTasks
 18400 ;;		_MiApp_UnicastStar
 18401 ;;		_MiApp_StartConnection
 18402 ;;		_MiApp_EstablishConnection
 18403 ;;		_ButtonPressed
 18404 ;;		_run_star_demo
 18405 ;;		_freezer_feature
 18406 ;; This function uses a non-reentrant model
 18407 ;;
 18408                           
 18409                           
 18410                           ;psect for function _MiWi_TickGet
 18411  2BD9                     _MiWi_TickGet:	
 18412                           
 18413                           ;symbol.c: 108: MIWI_TICK currentTime;
 18414                           ;symbol.c: 109: uint8_t IntFlag1;
 18415                           ;symbol.c: 110: uint8_t IntFlag2;
 18416                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 18417                           
 18418                           ;incstack = 0
 18419                           ; Regs used in _MiWi_TickGet: [wreg+status,2+status,0]
 18420  2BD9  0021               	movlb	1	; select bank1
 18421  2BDA  01A9               	clrf	(MiWi_TickGet@currentTime^(0+128)+2)
 18422                           
 18423                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 18424  2BDB  01AA               	clrf	(MiWi_TickGet@currentTime^(0+128)+3)
 18425                           
 18426                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 18427  2BDC  1011               	bcf	17,0	;volatile
 18428  2BDD                     l5209:	
 18429                           ;symbol.c: 119: do
 18430                           
 18431                           
 18432                           ;symbol.c: 120: {
 18433                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 18434  2BDD  3000               	movlw	0
 18435  2BDE  0020               	movlb	0	; select bank0
 18436  2BDF  1811               	btfsc	17,0	;volatile
 18437  2BE0  3001               	movlw	1
 18438  2BE1  0021               	movlb	1	; select bank1
 18439  2BE2  00A6               	movwf	MiWi_TickGet@IntFlag1^(0+128)
 18440                           
 18441                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 18442  2BE3  0020               	movlb	0	; select bank0
 18443  2BE4  0816               	movf	22,w	;volatile
 18444  2BE5  0021               	movlb	1	; select bank1
 18445  2BE6  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18446  2BE7  0824               	movf	??_MiWi_TickGet^(0+128),w
 18447  2BE8  00A7               	movwf	MiWi_TickGet@currentTime^(0+128)
 18448                           
 18449                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 18450  2BE9  0020               	movlb	0	; select bank0
 18451  2BEA  0817               	movf	23,w	;volatile
 18452  2BEB  0021               	movlb	1	; select bank1
 18453  2BEC  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18454  2BED  0824               	movf	??_MiWi_TickGet^(0+128),w
 18455  2BEE  00A8               	movwf	(MiWi_TickGet@currentTime^(0+128)+1)
 18456                           
 18457                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 18458  2BEF  3000               	movlw	0
 18459  2BF0  0020               	movlb	0	; select bank0
 18460  2BF1  1811               	btfsc	17,0	;volatile
 18461  2BF2  3001               	movlw	1
 18462  2BF3  0021               	movlb	1	; select bank1
 18463  2BF4  00A5               	movwf	MiWi_TickGet@IntFlag2^(0+128)
 18464                           
 18465                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 18466  2BF5  0826               	movf	MiWi_TickGet@IntFlag1^(0+128),w
 18467  2BF6  0625               	xorwf	MiWi_TickGet@IntFlag2^(0+128),w
 18468  2BF7  1D03               	skipz
 18469  2BF8  2BDD               	goto	l5209
 18470                           
 18471                           ;symbol.c: 127: if( IntFlag1 > 0 )
 18472  2BF9  0826               	movf	MiWi_TickGet@IntFlag1^(0+128),w
 18473  2BFA  1903               	btfsc	3,2
 18474  2BFB  2C0D               	goto	l1119
 18475                           
 18476                           ;symbol.c: 128: {
 18477                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 18478  2BFC  0020               	movlb	0	; select bank0
 18479  2BFD  1011               	bcf	17,0	;volatile
 18480                           
 18481                           ;symbol.c: 130: timerExtension1++;
 18482  2BFE  3001               	movlw	1
 18483  2BFF  0021               	movlb	1	; select bank1
 18484  2C00  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18485  2C01  0824               	movf	??_MiWi_TickGet^(0+128),w
 18486  2C02  0020               	movlb	0	; select bank0
 18487  2C03  07E6               	addwf	_timerExtension1,f	;volatile
 18488                           
 18489                           ;symbol.c: 131: if(timerExtension1 == 0)
 18490  2C04  0866               	movf	_timerExtension1,w	;volatile
 18491  2C05  1D03               	btfss	3,2
 18492  2C06  2C0D               	goto	l1119
 18493                           
 18494                           ;symbol.c: 132: {
 18495                           ;symbol.c: 133: timerExtension2++;
 18496  2C07  3001               	movlw	1
 18497  2C08  0021               	movlb	1	; select bank1
 18498  2C09  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18499  2C0A  0824               	movf	??_MiWi_TickGet^(0+128),w
 18500  2C0B  0020               	movlb	0	; select bank0
 18501  2C0C  07E7               	addwf	_timerExtension2,f	;volatile
 18502  2C0D                     l1119:	
 18503                           
 18504                           ;symbol.c: 134: }
 18505                           ;symbol.c: 135: }
 18506                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 18507  2C0D  0020               	movlb	0	; select bank0
 18508  2C0E  0866               	movf	_timerExtension1,w	;volatile
 18509  2C0F  0021               	movlb	1	; select bank1
 18510  2C10  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18511  2C11  0824               	movf	??_MiWi_TickGet^(0+128),w
 18512  2C12  07A9               	addwf	(MiWi_TickGet@currentTime^(0+128)+2),f
 18513                           
 18514                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 18515  2C13  0020               	movlb	0	; select bank0
 18516  2C14  0867               	movf	_timerExtension2,w	;volatile
 18517  2C15  0021               	movlb	1	; select bank1
 18518  2C16  00A4               	movwf	??_MiWi_TickGet^(0+128)
 18519  2C17  0824               	movf	??_MiWi_TickGet^(0+128),w
 18520  2C18  07AA               	addwf	(MiWi_TickGet@currentTime^(0+128)+3),f
 18521                           
 18522                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 18523  2C19  1411               	bsf	17,0	;volatile
 18524                           
 18525                           ;symbol.c: 143: return currentTime;
 18526  2C1A  082A               	movf	(MiWi_TickGet@currentTime+3)^(0+128),w
 18527  2C1B  00A3               	movwf	(?_MiWi_TickGet+3)^(0+128)
 18528  2C1C  0829               	movf	(MiWi_TickGet@currentTime+2)^(0+128),w
 18529  2C1D  00A2               	movwf	(?_MiWi_TickGet+2)^(0+128)
 18530  2C1E  0828               	movf	(MiWi_TickGet@currentTime+1)^(0+128),w
 18531  2C1F  00A1               	movwf	(?_MiWi_TickGet+1)^(0+128)
 18532  2C20  0827               	movf	MiWi_TickGet@currentTime^(0+128),w
 18533  2C21  00A0               	movwf	?_MiWi_TickGet^(0+128)
 18534  2C22  0008               	return
 18535  2C23                     __end_of_MiWi_TickGet:	
 18536                           
 18537                           	psect	text54
 18538  366D                     __ptext54:	
 18539 ;; *************** function _DELAY_10us *****************
 18540 ;; Defined at:
 18541 ;;		line 46 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 18542 ;; Parameters:    Size  Location     Type
 18543 ;;  tenMicroSeco    4   12[BANK1 ] unsigned long 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;  cyclesRequir    4   16[BANK1 ] volatile long 
 18546 ;; Return value:  Size  Location     Type
 18547 ;;                  1    wreg      void 
 18548 ;; Registers used:
 18549 ;;		wreg, status,2, status,0, pclath, cstack
 18550 ;; Tracked objects:
 18551 ;;		On entry : 0/0
 18552 ;;		On exit  : 0/0
 18553 ;;		Unchanged: 0/0
 18554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18555 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18556 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;Total ram usage:        8 bytes
 18560 ;; Hardware stack levels used:    1
 18561 ;; Hardware stack levels required when called:    6
 18562 ;; This function calls:
 18563 ;;		___lmul
 18564 ;; This function is called by:
 18565 ;;		_TxPacket
 18566 ;; This function uses a non-reentrant model
 18567 ;;
 18568                           
 18569                           
 18570                           ;psect for function _DELAY_10us
 18571  366D                     _DELAY_10us:	
 18572                           
 18573                           ;delay.c: 52: {
 18574                           ;delay.c: 58: }
 18575                           
 18576                           ;incstack = 0
 18577                           ; Regs used in _DELAY_10us: [wreg+status,2+status,0+pclath+cstack]
 18578  366D  0008               	return
 18579  366E                     l980:	
 18580                           ;delay.c: 74: else
 18581                           ;delay.c: 75: {
 18582                           ;delay.c: 78: while (cyclesRequiredForEntireDelay>0)
 18583                           
 18584                           ;delay.c: 71: {
 18585                           ;delay.c: 73: }
 18586                           
 18587                           ;delay.c: 70: if (cyclesRequiredForEntireDelay <= 45)
 18588                           
 18589                           ;delay.c: 68: cyclesRequiredForEntireDelay -= (153 + 22);
 18590                           
 18591                           ;delay.c: 59: else
 18592                           ;delay.c: 60: {
 18593                           ;delay.c: 64: cyclesRequiredForEntireDelay = (uint32_t)(((10000000)/4)/100000) * tenMicr
      +                          oSecondCounter;
 18594                           
 18595                           
 18596                           ;delay.c: 79: {
 18597                           ;delay.c: 81: __nop();
 18598  366E  0000               	nop
 18599                           
 18600                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 18601  366F  30D6               	movlw	214
 18602  3670  0021               	movlb	1	; select bank1
 18603  3671  07B0               	addwf	DELAY_10us@cyclesRequiredForEntireDelay^(0+128),f	;volatile
 18604  3672  30FF               	movlw	255
 18605  3673  3DB1               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)^(0+128),f	;volatile
 18606  3674  30FF               	movlw	255
 18607  3675  3DB2               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)^(0+128),f	;volatile
 18608  3676  30FF               	movlw	255
 18609  3677  3DB3               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),f	;volatile
 18610  3678  1BB3               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),7	;volatile
 18611  3679  0008               	return
 18612  367A  0833               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),w	;volatile
 18613  367B  1D03               	btfss	3,2
 18614  367C  2E6E               	goto	l980
 18615  367D  0832               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+2)^(0+128),w	;volatile
 18616  367E  1D03               	btfss	3,2
 18617  367F  2E6E               	goto	l980
 18618  3680  0831               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+1)^(0+128),w	;volatile
 18619  3681  1D03               	btfss	3,2
 18620  3682  2E6E               	goto	l980
 18621  3683  3001               	movlw	1
 18622  3684  0230               	subwf	DELAY_10us@cyclesRequiredForEntireDelay^(0+128),w	;volatile
 18623  3685  1C03               	btfss	3,0
 18624  3686  0008               	return
 18625  3687  2E6E               	goto	l980
 18626  3688                     __end_of_DELAY_10us:	
 18627                           
 18628                           	psect	text55
 18629  1015                     __ptext55:	
 18630 ;; *************** function _AddConnection *****************
 18631 ;; Defined at:
 18632 ;;		line 2531 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 18633 ;; Parameters:    Size  Location     Type
 18634 ;;		None
 18635 ;; Auto vars:     Size  Location     Type
 18636 ;;  i               1   40[BANK1 ] unsigned char 
 18637 ;;  connectionSl    1   39[BANK1 ] unsigned char 
 18638 ;;  status          1   38[BANK1 ] unsigned char 
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      unsigned char 
 18641 ;; Registers used:
 18642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/0
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18649 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18650 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 18651 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 18652 ;;Total ram usage:       16 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:    8
 18655 ;; This function calls:
 18656 ;;		_NVMWrite
 18657 ;;		_Total_Connections
 18658 ;;		___wmul
 18659 ;;		_isSameAddress
 18660 ;; This function is called by:
 18661 ;;		_P2PTasks
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           
 18666                           ;psect for function _AddConnection
 18667  1015                     _AddConnection:	
 18668                           
 18669                           ;miwi_p2p.c: 2533: uint8_t i;
 18670                           ;miwi_p2p.c: 2534: uint8_t status = 0x00;
 18671                           
 18672                           ;incstack = 0
 18673                           ; Regs used in _AddConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18674  1015  0021               	movlb	1	; select bank1
 18675  1016  01C6               	clrf	AddConnection@status^(0+128)
 18676                           
 18677                           ;miwi_p2p.c: 2535: uint8_t connectionSlot = 0xFF;
 18678  1017  30FF               	movlw	255
 18679  1018  00B9               	movwf	??_AddConnection^(0+128)
 18680  1019  0839               	movf	??_AddConnection^(0+128),w
 18681  101A  00C7               	movwf	AddConnection@connectionSlot^(0+128)
 18682                           
 18683                           ;miwi_p2p.c: 2547: for(i = 0; i < 10; i++)
 18684  101B  01C8               	clrf	AddConnection@i^(0+128)
 18685  101C  300A               	movlw	10
 18686  101D  0248               	subwf	AddConnection@i^(0+128),w
 18687  101E  1803               	btfsc	3,0
 18688  101F  2886               	goto	l6565
 18689  1020                     l6549:	
 18690                           
 18691                           ;miwi_p2p.c: 2548: {
 18692                           ;miwi_p2p.c: 2550: if( ConnectionTable[i].status.bits.isValid )
 18693  1020  0848               	movf	AddConnection@i^(0+128),w
 18694  1021  00B9               	movwf	??_AddConnection^(0+128)
 18695  1022  01BA               	clrf	(??_AddConnection^(0+128)+1)
 18696  1023  0839               	movf	??_AddConnection^(0+128),w
 18697  1024  00A7               	movwf	___wmul@multiplier^(0+128)
 18698  1025  083A               	movf	(??_AddConnection+1)^(0+128),w
 18699  1026  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 18700  1027  300E               	movlw	14
 18701  1028  00A9               	movwf	___wmul@multiplicand^(0+128)
 18702  1029  3000               	movlw	0
 18703  102A  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 18704  102B  31B6  26A4  3190   	fcall	___wmul
 18705  102E  0021               	movlb	1	; select bank1
 18706  102F  0827               	movf	?___wmul^(0+128),w
 18707  1030  3E0C               	addlw	12
 18708  1031  00BB               	movwf	(??_AddConnection+2)^(0+128)
 18709  1032  3000               	movlw	0
 18710  1033  3D28               	addwfc	(?___wmul+1)^(0+128),w
 18711  1034  00BC               	movwf	(??_AddConnection+3)^(0+128)
 18712  1035  3064               	movlw	100
 18713  1036  00BD               	movwf	(??_AddConnection+4)^(0+128)
 18714  1037  3023               	movlw	35
 18715  1038  00BE               	movwf	((??_AddConnection+4)^(0+128)+1)
 18716  1039  083B               	movf	(??_AddConnection+2)^(0+128),w
 18717  103A  073D               	addwf	(??_AddConnection+4)^(0+128),w
 18718  103B  0086               	movwf	6
 18719  103C  083C               	movf	(??_AddConnection+3)^(0+128),w
 18720  103D  3D3E               	addwfc	(??_AddConnection+5)^(0+128),w
 18721  103E  0087               	movwf	7
 18722  103F  1F81               	btfss	1,7
 18723  1040  2876               	goto	l6557
 18724                           
 18725                           ;miwi_p2p.c: 2551: {
 18726                           ;miwi_p2p.c: 2553: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 18727  1041  0023               	movlb	3	; select bank3
 18728  1042  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 18729  1043  0021               	movlb	1	; select bank1
 18730  1044  00AE               	movwf	(isSameAddress@Address1+1)^(0+128)
 18731  1045  0023               	movlb	3	; select bank3
 18732  1046  0823               	movf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 18733  1047  0021               	movlb	1	; select bank1
 18734  1048  00AD               	movwf	isSameAddress@Address1^(0+128)
 18735  1049  0848               	movf	AddConnection@i^(0+128),w
 18736  104A  00B9               	movwf	??_AddConnection^(0+128)
 18737  104B  01BA               	clrf	(??_AddConnection^(0+128)+1)
 18738  104C  0839               	movf	??_AddConnection^(0+128),w
 18739  104D  00A7               	movwf	___wmul@multiplier^(0+128)
 18740  104E  083A               	movf	(??_AddConnection+1)^(0+128),w
 18741  104F  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 18742  1050  300E               	movlw	14
 18743  1051  00A9               	movwf	___wmul@multiplicand^(0+128)
 18744  1052  3000               	movlw	0
 18745  1053  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 18746  1054  31B6  26A4  3190   	fcall	___wmul
 18747  1057  0021               	movlb	1	; select bank1
 18748  1058  0827               	movf	?___wmul^(0+128),w
 18749  1059  3E04               	addlw	4
 18750  105A  00BB               	movwf	(??_AddConnection+2)^(0+128)
 18751  105B  3000               	movlw	0
 18752  105C  3D28               	addwfc	(?___wmul+1)^(0+128),w
 18753  105D  00BC               	movwf	(??_AddConnection+3)^(0+128)
 18754  105E  3064               	movlw	100
 18755  105F  00BD               	movwf	(??_AddConnection+4)^(0+128)
 18756  1060  3023               	movlw	35
 18757  1061  00BE               	movwf	((??_AddConnection+4)^(0+128)+1)
 18758  1062  083B               	movf	(??_AddConnection+2)^(0+128),w
 18759  1063  073D               	addwf	(??_AddConnection+4)^(0+128),w
 18760  1064  00AF               	movwf	isSameAddress@Address2^(0+128)
 18761  1065  083C               	movf	(??_AddConnection+3)^(0+128),w
 18762  1066  3D3E               	addwfc	(??_AddConnection+5)^(0+128),w
 18763  1067  00B0               	movwf	(isSameAddress@Address2+1)^(0+128)
 18764  1068  31A8  2078  3190   	fcall	_isSameAddress
 18765  106B  3A00               	xorlw	0
 18766  106C  1903               	skipnz
 18767  106D  287D               	goto	l6561
 18768                           
 18769                           ;miwi_p2p.c: 2554: {
 18770                           ;miwi_p2p.c: 2555: connectionSlot = i;
 18771  106E  0021               	movlb	1	; select bank1
 18772  106F  0848               	movf	AddConnection@i^(0+128),w
 18773  1070  00B9               	movwf	??_AddConnection^(0+128)
 18774  1071  0839               	movf	??_AddConnection^(0+128),w
 18775  1072  00C7               	movwf	AddConnection@connectionSlot^(0+128)
 18776                           
 18777                           ;miwi_p2p.c: 2556: status = 0x01;
 18778  1073  01C6               	clrf	AddConnection@status^(0+128)
 18779  1074  0AC6               	incf	AddConnection@status^(0+128),f
 18780                           
 18781                           ;miwi_p2p.c: 2557: break;
 18782  1075  2886               	goto	l6565
 18783  1076                     l6557:	
 18784                           ;miwi_p2p.c: 2558: }
 18785                           ;miwi_p2p.c: 2559: }
 18786                           
 18787                           
 18788                           ;miwi_p2p.c: 2560: else if( connectionSlot == 0xFF )
 18789  1076  0A47               	incf	AddConnection@connectionSlot^(0+128),w
 18790  1077  1D03               	btfss	3,2
 18791  1078  287D               	goto	l6561
 18792                           
 18793                           ;miwi_p2p.c: 2561: {
 18794                           ;miwi_p2p.c: 2563: connectionSlot = i;
 18795  1079  0848               	movf	AddConnection@i^(0+128),w
 18796  107A  00B9               	movwf	??_AddConnection^(0+128)
 18797  107B  0839               	movf	??_AddConnection^(0+128),w
 18798  107C  00C7               	movwf	AddConnection@connectionSlot^(0+128)
 18799  107D                     l6561:	
 18800  107D  3001               	movlw	1
 18801  107E  0021               	movlb	1	; select bank1
 18802  107F  00B9               	movwf	??_AddConnection^(0+128)
 18803  1080  0839               	movf	??_AddConnection^(0+128),w
 18804  1081  07C8               	addwf	AddConnection@i^(0+128),f
 18805  1082  300A               	movlw	10
 18806  1083  0248               	subwf	AddConnection@i^(0+128),w
 18807  1084  1C03               	skipc
 18808  1085  2820               	goto	l6549
 18809  1086                     l6565:	
 18810                           
 18811                           ;miwi_p2p.c: 2564: }
 18812                           ;miwi_p2p.c: 2565: }
 18813                           ;miwi_p2p.c: 2567: if( connectionSlot == 0xFF )
 18814  1086  0A47               	incf	AddConnection@connectionSlot^(0+128),w
 18815  1087  1D03               	btfss	3,2
 18816  1088  288B               	goto	l6573
 18817                           
 18818                           ;miwi_p2p.c: 2568: {
 18819                           ;miwi_p2p.c: 2569: return 0xF1;
 18820  1089  30F1               	movlw	241
 18821  108A  0008               	return
 18822  108B                     l6573:	
 18823                           ;miwi_p2p.c: 2570: }
 18824                           
 18825                           
 18826                           ;miwi_p2p.c: 2571: else
 18827                           ;miwi_p2p.c: 2572: {
 18828                           ;miwi_p2p.c: 2573: if( ConnMode >= 0x01 )
 18829  108B  0020               	movlb	0	; select bank0
 18830  108C  086F               	movf	_ConnMode,w
 18831  108D  1903               	btfsc	3,2
 18832  108E  2892               	goto	l6579
 18833                           
 18834                           ;miwi_p2p.c: 2574: {
 18835                           ;miwi_p2p.c: 2575: return status;
 18836  108F  0021               	movlb	1	; select bank1
 18837  1090  0846               	movf	AddConnection@status^(0+128),w
 18838  1091  0008               	return
 18839  1092                     l6579:	
 18840                           
 18841                           ;miwi_p2p.c: 2576: }
 18842                           ;miwi_p2p.c: 2577: MyindexinPC = connectionSlot;
 18843  1092  0021               	movlb	1	; select bank1
 18844  1093  0847               	movf	AddConnection@connectionSlot^(0+128),w
 18845  1094  00B9               	movwf	??_AddConnection^(0+128)
 18846  1095  0839               	movf	??_AddConnection^(0+128),w
 18847  1096  0023               	movlb	3	; select bank3
 18848  1097  00CD               	movwf	_MyindexinPC^(0+384)
 18849                           
 18850                           ;miwi_p2p.c: 2579: for(i = 0; i < 8; i++)
 18851  1098  0021               	movlb	1	; select bank1
 18852  1099  01C8               	clrf	AddConnection@i^(0+128)
 18853  109A  3008               	movlw	8
 18854  109B  0248               	subwf	AddConnection@i^(0+128),w
 18855  109C  1803               	btfsc	3,0
 18856  109D  28E1               	goto	l6593
 18857  109E                     l6587:	
 18858                           
 18859                           ;miwi_p2p.c: 2580: {
 18860                           ;miwi_p2p.c: 2581: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 18861  109E  0848               	movf	AddConnection@i^(0+128),w
 18862  109F  00B9               	movwf	??_AddConnection^(0+128)
 18863  10A0  01BA               	clrf	(??_AddConnection^(0+128)+1)
 18864  10A1  0839               	movf	??_AddConnection^(0+128),w
 18865  10A2  0023               	movlb	3	; select bank3
 18866  10A3  0723               	addwf	(low ((_rxMessage| (0+256)+3)))^(0+128),w
 18867  10A4  0086               	movwf	6
 18868  10A5  0021               	movlb	1	; select bank1
 18869  10A6  083A               	movf	(??_AddConnection+1)^(0+128),w
 18870  10A7  0023               	movlb	3	; select bank3
 18871  10A8  3D24               	addwfc	((low ((_rxMessage| (0+256)+3))+1))^(0+128),w
 18872  10A9  0087               	movwf	7
 18873  10AA  0801               	movf	1,w
 18874  10AB  0021               	movlb	1	; select bank1
 18875  10AC  00BB               	movwf	(??_AddConnection+2)^(0+128)
 18876  10AD  0847               	movf	AddConnection@connectionSlot^(0+128),w
 18877  10AE  00BC               	movwf	(??_AddConnection+3)^(0+128)
 18878  10AF  01BD               	clrf	((??_AddConnection+3)^(0+128)+1)
 18879  10B0  083C               	movf	(??_AddConnection+3)^(0+128),w
 18880  10B1  00A7               	movwf	___wmul@multiplier^(0+128)
 18881  10B2  083D               	movf	(??_AddConnection+4)^(0+128),w
 18882  10B3  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 18883  10B4  300E               	movlw	14
 18884  10B5  00A9               	movwf	___wmul@multiplicand^(0+128)
 18885  10B6  3000               	movlw	0
 18886  10B7  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 18887  10B8  31B6  26A4  3190   	fcall	___wmul
 18888  10BB  0021               	movlb	1	; select bank1
 18889  10BC  0848               	movf	AddConnection@i^(0+128),w
 18890  10BD  3E04               	addlw	4
 18891  10BE  00BE               	movwf	(??_AddConnection+5)^(0+128)
 18892  10BF  3000               	movlw	0
 18893  10C0  1803               	skipnc
 18894  10C1  3001               	movlw	1
 18895  10C2  00BF               	movwf	((??_AddConnection+5)^(0+128)+1)
 18896  10C3  3064               	movlw	100
 18897  10C4  00C0               	movwf	(??_AddConnection+7)^(0+128)
 18898  10C5  3023               	movlw	35
 18899  10C6  00C1               	movwf	((??_AddConnection+7)^(0+128)+1)
 18900  10C7  083E               	movf	(??_AddConnection+5)^(0+128),w
 18901  10C8  0740               	addwf	(??_AddConnection+7)^(0+128),w
 18902  10C9  00C2               	movwf	(??_AddConnection+9)^(0+128)
 18903  10CA  083F               	movf	(??_AddConnection+6)^(0+128),w
 18904  10CB  3D41               	addwfc	(??_AddConnection+8)^(0+128),w
 18905  10CC  00C3               	movwf	(??_AddConnection+10)^(0+128)
 18906  10CD  0827               	movf	?___wmul^(0+128),w
 18907  10CE  0742               	addwf	(??_AddConnection+9)^(0+128),w
 18908  10CF  00C4               	movwf	(??_AddConnection+11)^(0+128)
 18909  10D0  0828               	movf	(?___wmul+1)^(0+128),w
 18910  10D1  3D43               	addwfc	(??_AddConnection+10)^(0+128),w
 18911  10D2  00C5               	movwf	(??_AddConnection+12)^(0+128)
 18912  10D3  0844               	movf	(??_AddConnection+11)^(0+128),w
 18913  10D4  0086               	movwf	6
 18914  10D5  0845               	movf	(??_AddConnection+12)^(0+128),w
 18915  10D6  0087               	movwf	7
 18916  10D7  083B               	movf	(??_AddConnection+2)^(0+128),w
 18917  10D8  0081               	movwf	1
 18918  10D9  3001               	movlw	1
 18919  10DA  00B9               	movwf	??_AddConnection^(0+128)
 18920  10DB  0839               	movf	??_AddConnection^(0+128),w
 18921  10DC  07C8               	addwf	AddConnection@i^(0+128),f
 18922  10DD  3008               	movlw	8
 18923  10DE  0248               	subwf	AddConnection@i^(0+128),w
 18924  10DF  1C03               	skipc
 18925  10E0  289E               	goto	l6587
 18926  10E1                     l6593:	
 18927                           
 18928                           ;miwi_p2p.c: 2582: }
 18929                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 18930  10E1  0847               	movf	AddConnection@connectionSlot^(0+128),w
 18931  10E2  00B9               	movwf	??_AddConnection^(0+128)
 18932  10E3  01BA               	clrf	(??_AddConnection^(0+128)+1)
 18933  10E4  0839               	movf	??_AddConnection^(0+128),w
 18934  10E5  00A7               	movwf	___wmul@multiplier^(0+128)
 18935  10E6  083A               	movf	(??_AddConnection+1)^(0+128),w
 18936  10E7  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 18937  10E8  300E               	movlw	14
 18938  10E9  00A9               	movwf	___wmul@multiplicand^(0+128)
 18939  10EA  3000               	movlw	0
 18940  10EB  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 18941  10EC  31B6  26A4  3190   	fcall	___wmul
 18942  10EF  0021               	movlb	1	; select bank1
 18943  10F0  0827               	movf	?___wmul^(0+128),w
 18944  10F1  3E0C               	addlw	12
 18945  10F2  00BB               	movwf	(??_AddConnection+2)^(0+128)
 18946  10F3  3000               	movlw	0
 18947  10F4  3D28               	addwfc	(?___wmul+1)^(0+128),w
 18948  10F5  00BC               	movwf	(??_AddConnection+3)^(0+128)
 18949  10F6  3064               	movlw	100
 18950  10F7  00BD               	movwf	(??_AddConnection+4)^(0+128)
 18951  10F8  3023               	movlw	35
 18952  10F9  00BE               	movwf	((??_AddConnection+4)^(0+128)+1)
 18953  10FA  083B               	movf	(??_AddConnection+2)^(0+128),w
 18954  10FB  073D               	addwf	(??_AddConnection+4)^(0+128),w
 18955  10FC  0086               	movwf	6
 18956  10FD  083C               	movf	(??_AddConnection+3)^(0+128),w
 18957  10FE  3D3E               	addwfc	(??_AddConnection+5)^(0+128),w
 18958  10FF  0087               	movwf	7
 18959  1100  1781               	bsf	1,7
 18960                           
 18961                           ;miwi_p2p.c: 2586: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 18962  1101  0023               	movlb	3	; select bank3
 18963  1102  0825               	movf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 18964  1103  0086               	movwf	6
 18965  1104  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 18966  1105  0087               	movwf	7
 18967  1106  3142               	addfsr 1,2
 18968  1107  3001               	movlw	1
 18969  1108  0501               	andwf	1,w
 18970  1109  0021               	movlb	1	; select bank1
 18971  110A  00B9               	movwf	??_AddConnection^(0+128)
 18972  110B  0847               	movf	AddConnection@connectionSlot^(0+128),w
 18973  110C  00BA               	movwf	(??_AddConnection+1)^(0+128)
 18974  110D  01BB               	clrf	((??_AddConnection+1)^(0+128)+1)
 18975  110E  083A               	movf	(??_AddConnection+1)^(0+128),w
 18976  110F  00A7               	movwf	___wmul@multiplier^(0+128)
 18977  1110  083B               	movf	(??_AddConnection+2)^(0+128),w
 18978  1111  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 18979  1112  300E               	movlw	14
 18980  1113  00A9               	movwf	___wmul@multiplicand^(0+128)
 18981  1114  3000               	movlw	0
 18982  1115  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 18983  1116  31B6  26A4  3190   	fcall	___wmul
 18984  1119  0021               	movlb	1	; select bank1
 18985  111A  0827               	movf	?___wmul^(0+128),w
 18986  111B  3E0C               	addlw	12
 18987  111C  00BC               	movwf	(??_AddConnection+3)^(0+128)
 18988  111D  3000               	movlw	0
 18989  111E  3D28               	addwfc	(?___wmul+1)^(0+128),w
 18990  111F  00BD               	movwf	(??_AddConnection+4)^(0+128)
 18991  1120  3064               	movlw	100
 18992  1121  00BE               	movwf	(??_AddConnection+5)^(0+128)
 18993  1122  3023               	movlw	35
 18994  1123  00BF               	movwf	((??_AddConnection+5)^(0+128)+1)
 18995  1124  083C               	movf	(??_AddConnection+3)^(0+128),w
 18996  1125  073E               	addwf	(??_AddConnection+5)^(0+128),w
 18997  1126  0086               	movwf	6
 18998  1127  083D               	movf	(??_AddConnection+4)^(0+128),w
 18999  1128  3D3F               	addwfc	(??_AddConnection+6)^(0+128),w
 19000  1129  0087               	movwf	7
 19001  112A  0801               	movf	1,w
 19002  112B  0639               	xorwf	??_AddConnection^(0+128),w
 19003  112C  39FE               	andlw	-2
 19004  112D  0639               	xorwf	??_AddConnection^(0+128),w
 19005  112E  0081               	movwf	1
 19006                           
 19007                           ;miwi_p2p.c: 2590: for(i = 0; i < 1; i++)
 19008  112F  01C8               	clrf	AddConnection@i^(0+128)
 19009  1130  0848               	movf	AddConnection@i^(0+128),w
 19010  1131  1D03               	btfss	3,2
 19011  1132  2979               	goto	l6607
 19012  1133                     l6601:	
 19013                           
 19014                           ;miwi_p2p.c: 2591: {
 19015                           ;miwi_p2p.c: 2592: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 19016  1133  0848               	movf	AddConnection@i^(0+128),w
 19017  1134  3E03               	addlw	3
 19018  1135  00B9               	movwf	??_AddConnection^(0+128)
 19019  1136  3000               	movlw	0
 19020  1137  1803               	skipnc
 19021  1138  3001               	movlw	1
 19022  1139  00BA               	movwf	(??_AddConnection^(0+128)+1)
 19023  113A  0839               	movf	??_AddConnection^(0+128),w
 19024  113B  0023               	movlb	3	; select bank3
 19025  113C  0725               	addwf	(low ((_rxMessage| (0+256)+5)))^(0+128),w
 19026  113D  0086               	movwf	6
 19027  113E  0021               	movlb	1	; select bank1
 19028  113F  083A               	movf	(??_AddConnection+1)^(0+128),w
 19029  1140  0023               	movlb	3	; select bank3
 19030  1141  3D26               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^(0+128),w
 19031  1142  0087               	movwf	7
 19032  1143  0801               	movf	1,w
 19033  1144  0021               	movlb	1	; select bank1
 19034  1145  00BB               	movwf	(??_AddConnection+2)^(0+128)
 19035  1146  0847               	movf	AddConnection@connectionSlot^(0+128),w
 19036  1147  00BC               	movwf	(??_AddConnection+3)^(0+128)
 19037  1148  01BD               	clrf	((??_AddConnection+3)^(0+128)+1)
 19038  1149  083C               	movf	(??_AddConnection+3)^(0+128),w
 19039  114A  00A7               	movwf	___wmul@multiplier^(0+128)
 19040  114B  083D               	movf	(??_AddConnection+4)^(0+128),w
 19041  114C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 19042  114D  300E               	movlw	14
 19043  114E  00A9               	movwf	___wmul@multiplicand^(0+128)
 19044  114F  3000               	movlw	0
 19045  1150  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 19046  1151  31B6  26A4  3190   	fcall	___wmul
 19047  1154  0021               	movlb	1	; select bank1
 19048  1155  0848               	movf	AddConnection@i^(0+128),w
 19049  1156  3E0D               	addlw	13
 19050  1157  00BE               	movwf	(??_AddConnection+5)^(0+128)
 19051  1158  3000               	movlw	0
 19052  1159  1803               	skipnc
 19053  115A  3001               	movlw	1
 19054  115B  00BF               	movwf	((??_AddConnection+5)^(0+128)+1)
 19055  115C  3064               	movlw	100
 19056  115D  00C0               	movwf	(??_AddConnection+7)^(0+128)
 19057  115E  3023               	movlw	35
 19058  115F  00C1               	movwf	((??_AddConnection+7)^(0+128)+1)
 19059  1160  083E               	movf	(??_AddConnection+5)^(0+128),w
 19060  1161  0740               	addwf	(??_AddConnection+7)^(0+128),w
 19061  1162  00C2               	movwf	(??_AddConnection+9)^(0+128)
 19062  1163  083F               	movf	(??_AddConnection+6)^(0+128),w
 19063  1164  3D41               	addwfc	(??_AddConnection+8)^(0+128),w
 19064  1165  00C3               	movwf	(??_AddConnection+10)^(0+128)
 19065  1166  0827               	movf	?___wmul^(0+128),w
 19066  1167  0742               	addwf	(??_AddConnection+9)^(0+128),w
 19067  1168  00C4               	movwf	(??_AddConnection+11)^(0+128)
 19068  1169  0828               	movf	(?___wmul+1)^(0+128),w
 19069  116A  3D43               	addwfc	(??_AddConnection+10)^(0+128),w
 19070  116B  00C5               	movwf	(??_AddConnection+12)^(0+128)
 19071  116C  0844               	movf	(??_AddConnection+11)^(0+128),w
 19072  116D  0086               	movwf	6
 19073  116E  0845               	movf	(??_AddConnection+12)^(0+128),w
 19074  116F  0087               	movwf	7
 19075  1170  083B               	movf	(??_AddConnection+2)^(0+128),w
 19076  1171  0081               	movwf	1
 19077  1172  3001               	movlw	1
 19078  1173  00B9               	movwf	??_AddConnection^(0+128)
 19079  1174  0839               	movf	??_AddConnection^(0+128),w
 19080  1175  07C8               	addwf	AddConnection@i^(0+128),f
 19081  1176  0848               	movf	AddConnection@i^(0+128),w
 19082  1177  1903               	btfsc	3,2
 19083  1178  2933               	goto	l6601
 19084  1179                     l6607:	
 19085                           
 19086                           ;miwi_p2p.c: 2593: }
 19087                           ;miwi_p2p.c: 2600: LatestConnection = connectionSlot;
 19088  1179  0847               	movf	AddConnection@connectionSlot^(0+128),w
 19089  117A  00B9               	movwf	??_AddConnection^(0+128)
 19090  117B  0839               	movf	??_AddConnection^(0+128),w
 19091  117C  0020               	movlb	0	; select bank0
 19092  117D  00DB               	movwf	_LatestConnection
 19093                           
 19094                           ;miwi_p2p.c: 2601: P2PStatus.bits.SearchConnection = 0;
 19095  117E  127D               	bcf	_P2PStatus,4	;volatile
 19096                           
 19097                           ;miwi_p2p.c: 2602: }
 19098                           ;miwi_p2p.c: 2603: conn_size = Total_Connections();
 19099  117F  31A4  248E  3190   	fcall	_Total_Connections
 19100  1182  0021               	movlb	1	; select bank1
 19101  1183  00B9               	movwf	??_AddConnection^(0+128)
 19102  1184  0839               	movf	??_AddConnection^(0+128),w
 19103  1185  0020               	movlb	0	; select bank0
 19104  1186  00EA               	movwf	_conn_size
 19105                           
 19106                           ;miwi_p2p.c: 2605: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 19107  1187  306A               	movlw	low _conn_size
 19108  1188  0021               	movlb	1	; select bank1
 19109  1189  00AD               	movwf	NVMWrite@source^(0+128)
 19110  118A  3000               	movlw	high _conn_size
 19111  118B  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 19112  118C  0023               	movlb	3	; select bank3
 19113  118D  085E               	movf	(_nvmEdc+1)^(0+384),w
 19114  118E  0021               	movlb	1	; select bank1
 19115  118F  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 19116  1190  0023               	movlb	3	; select bank3
 19117  1191  085D               	movf	_nvmEdc^(0+384),w
 19118  1192  0021               	movlb	1	; select bank1
 19119  1193  00AF               	movwf	NVMWrite@addr^(0+128)
 19120  1194  3001               	movlw	1
 19121  1195  00B1               	movwf	NVMWrite@count^(0+128)
 19122  1196  3000               	movlw	0
 19123  1197  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 19124  1198  31A3  239F         	fcall	_NVMWrite
 19125                           
 19126                           ;miwi_p2p.c: 2608: return status;
 19127  119A  0021               	movlb	1	; select bank1
 19128  119B  0846               	movf	AddConnection@status^(0+128),w
 19129  119C  0008               	return
 19130  119D                     __end_of_AddConnection:	
 19131                           
 19132                           	psect	text56
 19133  2878                     __ptext56:	
 19134 ;; *************** function _isSameAddress *****************
 19135 ;; Defined at:
 19136 ;;		line 2140 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;  Address1        2   13[BANK1 ] PTR unsigned char 
 19139 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 19140 ;;  Address2        2   15[BANK1 ] PTR unsigned char 
 19141 ;;		 -> ConnectionTable(140), 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;  i               1   21[BANK1 ] unsigned char 
 19144 ;; Return value:  Size  Location     Type
 19145 ;;                  1    wreg      unsigned char 
 19146 ;; Registers used:
 19147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19148 ;; Tracked objects:
 19149 ;;		On entry : 0/0
 19150 ;;		On exit  : 0/0
 19151 ;;		Unchanged: 0/0
 19152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19153 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19154 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19155 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19156 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 19157 ;;Total ram usage:        9 bytes
 19158 ;; Hardware stack levels used:    1
 19159 ;; Hardware stack levels required when called:    5
 19160 ;; This function calls:
 19161 ;;		Nothing
 19162 ;; This function is called by:
 19163 ;;		_P2PTasks
 19164 ;;		_AddConnection
 19165 ;; This function uses a non-reentrant model
 19166 ;;
 19167                           
 19168                           
 19169                           ;psect for function _isSameAddress
 19170  2878                     _isSameAddress:	
 19171                           
 19172                           ;miwi_p2p.c: 2142: uint8_t i;
 19173                           ;miwi_p2p.c: 2144: for(i = 0; i < 8; i++)
 19174                           
 19175                           ;incstack = 0
 19176                           ; Regs used in _isSameAddress: [wreg-fsr1h+status,2+status,0]
 19177  2878  0021               	movlb	1	; select bank1
 19178  2879  01B5               	clrf	isSameAddress@i^(0+128)
 19179  287A  3008               	movlw	8
 19180  287B  0235               	subwf	isSameAddress@i^(0+128),w
 19181  287C  1803               	btfsc	3,0
 19182  287D  289E               	goto	l6121
 19183  287E                     l6111:	
 19184                           
 19185                           ;miwi_p2p.c: 2145: {
 19186                           ;miwi_p2p.c: 2146: if( Address1[i] != Address2[i] )
 19187  287E  0835               	movf	isSameAddress@i^(0+128),w
 19188  287F  00B1               	movwf	??_isSameAddress^(0+128)
 19189  2880  01B2               	clrf	(??_isSameAddress^(0+128)+1)
 19190  2881  0831               	movf	??_isSameAddress^(0+128),w
 19191  2882  072F               	addwf	isSameAddress@Address2^(0+128),w
 19192  2883  0086               	movwf	6
 19193  2884  0832               	movf	(??_isSameAddress+1)^(0+128),w
 19194  2885  3D30               	addwfc	(isSameAddress@Address2+1)^(0+128),w
 19195  2886  0087               	movwf	7
 19196  2887  0835               	movf	isSameAddress@i^(0+128),w
 19197  2888  00B3               	movwf	(??_isSameAddress+2)^(0+128)
 19198  2889  01B4               	clrf	((??_isSameAddress+2)^(0+128)+1)
 19199  288A  0833               	movf	(??_isSameAddress+2)^(0+128),w
 19200  288B  072D               	addwf	isSameAddress@Address1^(0+128),w
 19201  288C  0084               	movwf	4
 19202  288D  0834               	movf	(??_isSameAddress+3)^(0+128),w
 19203  288E  3D2E               	addwfc	(isSameAddress@Address1+1)^(0+128),w
 19204  288F  0085               	movwf	5
 19205  2890  0800               	movf	0,w
 19206  2891  0601               	xorwf	1,w
 19207  2892  1903               	skipnz
 19208  2893  2896               	goto	l6117
 19209                           
 19210                           ;miwi_p2p.c: 2147: {
 19211                           ;miwi_p2p.c: 2148: return 0;
 19212  2894  3000               	movlw	0
 19213  2895  0008               	return
 19214  2896                     l6117:	
 19215  2896  3001               	movlw	1
 19216  2897  00B1               	movwf	??_isSameAddress^(0+128)
 19217  2898  0831               	movf	??_isSameAddress^(0+128),w
 19218  2899  07B5               	addwf	isSameAddress@i^(0+128),f
 19219  289A  3008               	movlw	8
 19220  289B  0235               	subwf	isSameAddress@i^(0+128),w
 19221  289C  1C03               	skipc
 19222  289D  287E               	goto	l6111
 19223  289E                     l6121:	
 19224                           
 19225                           ;miwi_p2p.c: 2149: }
 19226                           ;miwi_p2p.c: 2150: }
 19227                           ;miwi_p2p.c: 2151: return 1;
 19228  289E  3001               	movlw	1
 19229  289F  0008               	return
 19230  28A0                     __end_of_isSameAddress:	
 19231                           
 19232                           	psect	text57
 19233  248E                     __ptext57:	
 19234 ;; *************** function _Total_Connections *****************
 19235 ;; Defined at:
 19236 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;		None
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;  i               1   20[BANK1 ] unsigned char 
 19241 ;;  count           1   19[BANK1 ] unsigned char 
 19242 ;; Return value:  Size  Location     Type
 19243 ;;                  1    wreg      unsigned char 
 19244 ;; Registers used:
 19245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19246 ;; Tracked objects:
 19247 ;;		On entry : 0/0
 19248 ;;		On exit  : 0/0
 19249 ;;		Unchanged: 0/0
 19250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19252 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19253 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;Total ram usage:        8 bytes
 19256 ;; Hardware stack levels used:    1
 19257 ;; Hardware stack levels required when called:    6
 19258 ;; This function calls:
 19259 ;;		___wmul
 19260 ;; This function is called by:
 19261 ;;		_AddConnection
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           
 19266                           ;psect for function _Total_Connections
 19267  248E                     _Total_Connections:	
 19268                           
 19269                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 19270                           
 19271                           ;incstack = 0
 19272                           ; Regs used in _Total_Connections: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19273  248E  0021               	movlb	1	; select bank1
 19274  248F  01B3               	clrf	Total_Connections@count^(0+128)
 19275                           
 19276                           ;miwi_p2p.c: 69: for (i=0;i<10;i++)
 19277  2490  01B4               	clrf	Total_Connections@i^(0+128)
 19278  2491  300A               	movlw	10
 19279  2492  0234               	subwf	Total_Connections@i^(0+128),w
 19280  2493  1803               	btfsc	3,0
 19281  2494  2D07               	goto	l6069
 19282  2495                     l6059:	
 19283                           
 19284                           ;miwi_p2p.c: 70: {
 19285                           ;miwi_p2p.c: 72: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 19286  2495  0834               	movf	Total_Connections@i^(0+128),w
 19287  2496  00AD               	movwf	??_Total_Connections^(0+128)
 19288  2497  01AE               	clrf	(??_Total_Connections^(0+128)+1)
 19289  2498  082D               	movf	??_Total_Connections^(0+128),w
 19290  2499  00A7               	movwf	___wmul@multiplier^(0+128)
 19291  249A  082E               	movf	(??_Total_Connections+1)^(0+128),w
 19292  249B  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 19293  249C  300E               	movlw	14
 19294  249D  00A9               	movwf	___wmul@multiplicand^(0+128)
 19295  249E  3000               	movlw	0
 19296  249F  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 19297  24A0  31B6  26A4  31A4   	fcall	___wmul
 19298  24A3  0021               	movlb	1	; select bank1
 19299  24A4  0827               	movf	?___wmul^(0+128),w
 19300  24A5  3E04               	addlw	4
 19301  24A6  00AF               	movwf	(??_Total_Connections+2)^(0+128)
 19302  24A7  3000               	movlw	0
 19303  24A8  3D28               	addwfc	(?___wmul+1)^(0+128),w
 19304  24A9  00B0               	movwf	(??_Total_Connections+3)^(0+128)
 19305  24AA  3064               	movlw	100
 19306  24AB  00B1               	movwf	(??_Total_Connections+4)^(0+128)
 19307  24AC  3023               	movlw	35
 19308  24AD  00B2               	movwf	((??_Total_Connections+4)^(0+128)+1)
 19309  24AE  082F               	movf	(??_Total_Connections+2)^(0+128),w
 19310  24AF  0731               	addwf	(??_Total_Connections+4)^(0+128),w
 19311  24B0  0086               	movwf	6
 19312  24B1  0830               	movf	(??_Total_Connections+3)^(0+128),w
 19313  24B2  3D32               	addwfc	(??_Total_Connections+5)^(0+128),w
 19314  24B3  0087               	movwf	7
 19315  24B4  0801               	movf	1,w
 19316  24B5  1D03               	btfss	3,2
 19317  24B6  2CFB               	goto	l6065
 19318  24B7  0834               	movf	Total_Connections@i^(0+128),w
 19319  24B8  00AD               	movwf	??_Total_Connections^(0+128)
 19320  24B9  01AE               	clrf	(??_Total_Connections^(0+128)+1)
 19321  24BA  082D               	movf	??_Total_Connections^(0+128),w
 19322  24BB  00A7               	movwf	___wmul@multiplier^(0+128)
 19323  24BC  082E               	movf	(??_Total_Connections+1)^(0+128),w
 19324  24BD  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 19325  24BE  300E               	movlw	14
 19326  24BF  00A9               	movwf	___wmul@multiplicand^(0+128)
 19327  24C0  3000               	movlw	0
 19328  24C1  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 19329  24C2  31B6  26A4  31A4   	fcall	___wmul
 19330  24C5  0021               	movlb	1	; select bank1
 19331  24C6  0827               	movf	?___wmul^(0+128),w
 19332  24C7  3E05               	addlw	5
 19333  24C8  00AF               	movwf	(??_Total_Connections+2)^(0+128)
 19334  24C9  3000               	movlw	0
 19335  24CA  3D28               	addwfc	(?___wmul+1)^(0+128),w
 19336  24CB  00B0               	movwf	(??_Total_Connections+3)^(0+128)
 19337  24CC  3064               	movlw	100
 19338  24CD  00B1               	movwf	(??_Total_Connections+4)^(0+128)
 19339  24CE  3023               	movlw	35
 19340  24CF  00B2               	movwf	((??_Total_Connections+4)^(0+128)+1)
 19341  24D0  082F               	movf	(??_Total_Connections+2)^(0+128),w
 19342  24D1  0731               	addwf	(??_Total_Connections+4)^(0+128),w
 19343  24D2  0086               	movwf	6
 19344  24D3  0830               	movf	(??_Total_Connections+3)^(0+128),w
 19345  24D4  3D32               	addwfc	(??_Total_Connections+5)^(0+128),w
 19346  24D5  0087               	movwf	7
 19347  24D6  0801               	movf	1,w
 19348  24D7  1D03               	btfss	3,2
 19349  24D8  2CFB               	goto	l6065
 19350  24D9  0834               	movf	Total_Connections@i^(0+128),w
 19351  24DA  00AD               	movwf	??_Total_Connections^(0+128)
 19352  24DB  01AE               	clrf	(??_Total_Connections^(0+128)+1)
 19353  24DC  082D               	movf	??_Total_Connections^(0+128),w
 19354  24DD  00A7               	movwf	___wmul@multiplier^(0+128)
 19355  24DE  082E               	movf	(??_Total_Connections+1)^(0+128),w
 19356  24DF  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 19357  24E0  300E               	movlw	14
 19358  24E1  00A9               	movwf	___wmul@multiplicand^(0+128)
 19359  24E2  3000               	movlw	0
 19360  24E3  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 19361  24E4  31B6  26A4  31A4   	fcall	___wmul
 19362  24E7  0021               	movlb	1	; select bank1
 19363  24E8  0827               	movf	?___wmul^(0+128),w
 19364  24E9  3E06               	addlw	6
 19365  24EA  00AF               	movwf	(??_Total_Connections+2)^(0+128)
 19366  24EB  3000               	movlw	0
 19367  24EC  3D28               	addwfc	(?___wmul+1)^(0+128),w
 19368  24ED  00B0               	movwf	(??_Total_Connections+3)^(0+128)
 19369  24EE  3064               	movlw	100
 19370  24EF  00B1               	movwf	(??_Total_Connections+4)^(0+128)
 19371  24F0  3023               	movlw	35
 19372  24F1  00B2               	movwf	((??_Total_Connections+4)^(0+128)+1)
 19373  24F2  082F               	movf	(??_Total_Connections+2)^(0+128),w
 19374  24F3  0731               	addwf	(??_Total_Connections+4)^(0+128),w
 19375  24F4  0086               	movwf	6
 19376  24F5  0830               	movf	(??_Total_Connections+3)^(0+128),w
 19377  24F6  3D32               	addwfc	(??_Total_Connections+5)^(0+128),w
 19378  24F7  0087               	movwf	7
 19379  24F8  0801               	movf	1,w
 19380  24F9  1903               	btfsc	3,2
 19381  24FA  2CFF               	goto	l368
 19382  24FB                     l6065:	
 19383                           
 19384                           ;miwi_p2p.c: 73: {
 19385                           ;miwi_p2p.c: 74: count++;
 19386  24FB  3001               	movlw	1
 19387  24FC  00AD               	movwf	??_Total_Connections^(0+128)
 19388  24FD  082D               	movf	??_Total_Connections^(0+128),w
 19389  24FE  07B3               	addwf	Total_Connections@count^(0+128),f
 19390  24FF                     l368:	
 19391  24FF  3001               	movlw	1
 19392  2500  00AD               	movwf	??_Total_Connections^(0+128)
 19393  2501  082D               	movf	??_Total_Connections^(0+128),w
 19394  2502  07B4               	addwf	Total_Connections@i^(0+128),f
 19395  2503  300A               	movlw	10
 19396  2504  0234               	subwf	Total_Connections@i^(0+128),w
 19397  2505  1C03               	skipc
 19398  2506  2C95               	goto	l6059
 19399  2507                     l6069:	
 19400                           
 19401                           ;miwi_p2p.c: 75: }
 19402                           ;miwi_p2p.c: 82: }
 19403                           ;miwi_p2p.c: 83: return count;
 19404  2507  0833               	movf	Total_Connections@count^(0+128),w
 19405  2508  0008               	return
 19406  2509                     __end_of_Total_Connections:	
 19407                           
 19408                           	psect	text58
 19409  34FA                     __ptext58:	
 19410 ;; *************** function _MiApp_DiscardMessage *****************
 19411 ;; Defined at:
 19412 ;;		line 2380 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;		None
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19430 ;;Total ram usage:        0 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:    7
 19433 ;; This function calls:
 19434 ;;		_MiMAC_DiscardPacket
 19435 ;; This function is called by:
 19436 ;;		_MiApp_EstablishConnection
 19437 ;;		_Process_RxMessage
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           
 19442                           ;psect for function _MiApp_DiscardMessage
 19443  34FA                     _MiApp_DiscardMessage:	
 19444                           
 19445                           ;miwi_p2p.c: 2382: P2PStatus.bits.RxHasUserData = 0;
 19446                           
 19447                           ;incstack = 0
 19448                           ; Regs used in _MiApp_DiscardMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19449  34FA  11FD               	bcf	_P2PStatus,3	;volatile
 19450                           
 19451                           ;miwi_p2p.c: 2383: MiMAC_DiscardPacket();
 19452  34FB  31A8  2006         	fcall	_MiMAC_DiscardPacket
 19453  34FD  0008               	return
 19454  34FE                     __end_of_MiApp_DiscardMessage:	
 19455                           
 19456                           	psect	text59
 19457  2806                     __ptext59:	
 19458 ;; *************** function _MiMAC_DiscardPacket *****************
 19459 ;; Defined at:
 19460 ;;		line 1052 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;		None
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;		None
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  1    wreg      void 
 19467 ;; Registers used:
 19468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19469 ;; Tracked objects:
 19470 ;;		On entry : 0/0
 19471 ;;		On exit  : 0/0
 19472 ;;		Unchanged: 0/0
 19473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19476 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19477 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19478 ;;Total ram usage:        4 bytes
 19479 ;; Hardware stack levels used:    1
 19480 ;; Hardware stack levels required when called:    6
 19481 ;; This function calls:
 19482 ;;		___wmul
 19483 ;; This function is called by:
 19484 ;;		_P2PTasks
 19485 ;;		_MiApp_DiscardMessage
 19486 ;; This function uses a non-reentrant model
 19487 ;;
 19488                           
 19489                           
 19490                           ;psect for function _MiMAC_DiscardPacket
 19491  2806                     _MiMAC_DiscardPacket:	
 19492                           
 19493                           ;drv_mrf_miwi_89xa.c: 1054: if( ReceivedBankIndex < 2 )
 19494                           
 19495                           ;incstack = 0
 19496                           ; Regs used in _MiMAC_DiscardPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19497  2806  3002               	movlw	2
 19498  2807  0020               	movlb	0	; select bank0
 19499  2808  025E               	subwf	_ReceivedBankIndex,w
 19500  2809  1803               	skipnc
 19501  280A  0008               	return
 19502                           
 19503                           ;drv_mrf_miwi_89xa.c: 1055: {
 19504                           ;drv_mrf_miwi_89xa.c: 1056: RxPacket[ReceivedBankIndex].flags.Val = 0;
 19505  280B  085E               	movf	_ReceivedBankIndex,w
 19506  280C  0021               	movlb	1	; select bank1
 19507  280D  00AD               	movwf	??_MiMAC_DiscardPacket^(0+128)
 19508  280E  01AE               	clrf	(??_MiMAC_DiscardPacket^(0+128)+1)
 19509  280F  082D               	movf	??_MiMAC_DiscardPacket^(0+128),w
 19510  2810  00A7               	movwf	___wmul@multiplier^(0+128)
 19511  2811  082E               	movf	(??_MiMAC_DiscardPacket+1)^(0+128),w
 19512  2812  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 19513  2813  3039               	movlw	57
 19514  2814  00A9               	movwf	___wmul@multiplicand^(0+128)
 19515  2815  3000               	movlw	0
 19516  2816  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 19517  2817  31B6  26A4         	fcall	___wmul
 19518  2819  30F2               	movlw	242
 19519  281A  0021               	movlb	1	; select bank1
 19520  281B  00AF               	movwf	(??_MiMAC_DiscardPacket+2)^(0+128)
 19521  281C  3022               	movlw	34
 19522  281D  00B0               	movwf	((??_MiMAC_DiscardPacket+2)^(0+128)+1)
 19523  281E  0827               	movf	?___wmul^(0+128),w
 19524  281F  072F               	addwf	(??_MiMAC_DiscardPacket+2)^(0+128),w
 19525  2820  0086               	movwf	6
 19526  2821  0828               	movf	(?___wmul+1)^(0+128),w
 19527  2822  3D30               	addwfc	(??_MiMAC_DiscardPacket+3)^(0+128),w
 19528  2823  0087               	movwf	7
 19529  2824  0181               	clrf	1
 19530                           
 19531                           ;drv_mrf_miwi_89xa.c: 1057: ReceivedBankIndex = 0xFF;
 19532  2825  30FF               	movlw	255
 19533  2826  00AD               	movwf	??_MiMAC_DiscardPacket^(0+128)
 19534  2827  082D               	movf	??_MiMAC_DiscardPacket^(0+128),w
 19535  2828  0020               	movlb	0	; select bank0
 19536  2829  00DE               	movwf	_ReceivedBankIndex
 19537  282A  0008               	return
 19538  282B                     __end_of_MiMAC_DiscardPacket:	
 19539                           
 19540                           	psect	text60
 19541  2926                     __ptext60:	
 19542 ;; *************** function _MiApp_ConnectionMode *****************
 19543 ;; Defined at:
 19544 ;;		line 3185 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 19545 ;; Parameters:    Size  Location     Type
 19546 ;;  Mode            1    wreg     unsigned char 
 19547 ;; Auto vars:     Size  Location     Type
 19548 ;;  Mode            1   27[BANK1 ] unsigned char 
 19549 ;; Return value:  Size  Location     Type
 19550 ;;                  1    wreg      void 
 19551 ;; Registers used:
 19552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19553 ;; Tracked objects:
 19554 ;;		On entry : 0/0
 19555 ;;		On exit  : 0/0
 19556 ;;		Unchanged: 0/0
 19557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19559 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19560 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19561 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19562 ;;Total ram usage:        3 bytes
 19563 ;; Hardware stack levels used:    1
 19564 ;; Hardware stack levels required when called:    8
 19565 ;; This function calls:
 19566 ;;		_NVMWrite
 19567 ;; This function is called by:
 19568 ;;		_Initialize_Demo
 19569 ;; This function uses a non-reentrant model
 19570 ;;
 19571                           
 19572                           
 19573                           ;psect for function _MiApp_ConnectionMode
 19574  2926                     _MiApp_ConnectionMode:	
 19575                           
 19576                           ;incstack = 0
 19577                           ; Regs used in _MiApp_ConnectionMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19578                           ;MiApp_ConnectionMode@Mode stored from wreg
 19579  2926  0021               	movlb	1	; select bank1
 19580  2927  00BB               	movwf	MiApp_ConnectionMode@Mode^(0+128)
 19581                           
 19582                           ;miwi_p2p.c: 3187: if( Mode > 3 )
 19583  2928  3004               	movlw	4
 19584  2929  023B               	subwf	MiApp_ConnectionMode@Mode^(0+128),w
 19585  292A  1803               	btfsc	3,0
 19586  292B  0008               	return
 19587                           
 19588                           ;miwi_p2p.c: 3190: }
 19589                           ;miwi_p2p.c: 3191: ConnMode = Mode;
 19590                           
 19591                           ;miwi_p2p.c: 3188: {
 19592                           ;miwi_p2p.c: 3189: return;
 19593  292C  083B               	movf	MiApp_ConnectionMode@Mode^(0+128),w
 19594  292D  00B9               	movwf	??_MiApp_ConnectionMode^(0+128)
 19595  292E  0839               	movf	??_MiApp_ConnectionMode^(0+128),w
 19596  292F  0020               	movlb	0	; select bank0
 19597  2930  00EF               	movwf	_ConnMode
 19598                           
 19599                           ;miwi_p2p.c: 3192: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 19600  2931  086F               	movf	_ConnMode,w
 19601  2932  0021               	movlb	1	; select bank1
 19602  2933  00B9               	movwf	??_MiApp_ConnectionMode^(0+128)
 19603  2934  3004               	movlw	4
 19604  2935                     u8045:	
 19605  2935  35B9               	lslf	??_MiApp_ConnectionMode^(0+128),f
 19606  2936  0B89               	decfsz	9,f
 19607  2937  2935               	goto	u8045
 19608  2938  0020               	movlb	0	; select bank0
 19609  2939  085C               	movf	_P2PCapacityInfo,w
 19610  293A  390F               	andlw	15
 19611  293B  0021               	movlb	1	; select bank1
 19612  293C  0439               	iorwf	??_MiApp_ConnectionMode^(0+128),w
 19613  293D  00BA               	movwf	(??_MiApp_ConnectionMode+1)^(0+128)
 19614  293E  083A               	movf	(??_MiApp_ConnectionMode+1)^(0+128),w
 19615  293F  0020               	movlb	0	; select bank0
 19616  2940  00DC               	movwf	_P2PCapacityInfo
 19617                           
 19618                           ;miwi_p2p.c: 3195: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 19619  2941  306F               	movlw	low _ConnMode
 19620  2942  0021               	movlb	1	; select bank1
 19621  2943  00AD               	movwf	NVMWrite@source^(0+128)
 19622  2944  3000               	movlw	high _ConnMode
 19623  2945  00AE               	movwf	(NVMWrite@source+1)^(0+128)
 19624  2946  0023               	movlb	3	; select bank3
 19625  2947  085A               	movf	(_nvmConnMode+1)^(0+384),w
 19626  2948  0021               	movlb	1	; select bank1
 19627  2949  00B0               	movwf	(NVMWrite@addr+1)^(0+128)
 19628  294A  0023               	movlb	3	; select bank3
 19629  294B  0859               	movf	_nvmConnMode^(0+384),w
 19630  294C  0021               	movlb	1	; select bank1
 19631  294D  00AF               	movwf	NVMWrite@addr^(0+128)
 19632  294E  3001               	movlw	1
 19633  294F  00B1               	movwf	NVMWrite@count^(0+128)
 19634  2950  3000               	movlw	0
 19635  2951  00B2               	movwf	(NVMWrite@count^(0+128)+1)
 19636  2952  31A3  239F         	fcall	_NVMWrite
 19637  2954  0008               	return
 19638  2955                     __end_of_MiApp_ConnectionMode:	
 19639                           
 19640                           	psect	text61
 19641  239F                     __ptext61:	
 19642 ;; *************** function _NVMWrite *****************
 19643 ;; Defined at:
 19644 ;;		line 255 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 19645 ;; Parameters:    Size  Location     Type
 19646 ;;  source          2   13[BANK1 ] PTR unsigned char 
 19647 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), role(1), 
 19648 ;;		 -> conn_size(1), ConnectionTable(140), 
 19649 ;;  addr            2   15[BANK1 ] unsigned int 
 19650 ;;  count           2   17[BANK1 ] unsigned int 
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;  PageCounter     1   24[BANK1 ] unsigned char 
 19653 ;;  oldRFIE         1   23[BANK1 ] unsigned char 
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1    wreg      void 
 19656 ;; Registers used:
 19657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/0
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19663 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19664 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19666 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 19667 ;;Total ram usage:       12 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:    7
 19670 ;; This function calls:
 19671 ;;		_MacroNop
 19672 ;;		_SPIGet
 19673 ;;		_SPIPut
 19674 ;; This function is called by:
 19675 ;;		_P2PTasks
 19676 ;;		_MiApp_ProtocolInit
 19677 ;;		_MiApp_SetChannel
 19678 ;;		_AddConnection
 19679 ;;		_MiApp_RemoveConnection
 19680 ;;		_MiApp_ConnectionMode
 19681 ;;		_Initialize_Demo
 19682 ;; This function uses a non-reentrant model
 19683 ;;
 19684                           
 19685                           
 19686                           ;psect for function _NVMWrite
 19687  239F                     _NVMWrite:	
 19688                           
 19689                           ;miwi_nvm.c: 257: uint8_t PageCounter = 0;
 19690                           
 19691                           ;incstack = 0
 19692                           ; Regs used in _NVMWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19693  239F  0021               	movlb	1	; select bank1
 19694  23A0  01B8               	clrf	NVMWrite@PageCounter^(0+128)
 19695                           
 19696                           ;miwi_nvm.c: 263: uint8_t oldRFIE = INTCONbits.IOCIE;
 19697  23A1  3000               	movlw	0
 19698  23A2  198B               	btfsc	11,3	;volatile
 19699  23A3  3001               	movlw	1
 19700  23A4  00B7               	movwf	NVMWrite@oldRFIE^(0+128)
 19701                           
 19702                           ;miwi_nvm.c: 264: INTCONbits.IOCIE = 0;
 19703  23A5  118B               	bcf	11,3	;volatile
 19704  23A6                     l5981:	
 19705                           ;miwi_nvm.c: 269: do
 19706                           
 19707                           ;miwi_nvm.c: 268: EEPROM_NEXT_PAGE:
 19708                           
 19709                           
 19710                           ;miwi_nvm.c: 270: {
 19711                           ;miwi_nvm.c: 271: LATAbits.LATA3 = 0;
 19712  23A6  0022               	movlb	2	; select bank2
 19713  23A7  118C               	bcf	12,3	;volatile
 19714                           
 19715                           ;miwi_nvm.c: 272: SPIPut( 0x05 );
 19716  23A8  3005               	movlw	5
 19717  23A9  31B5  25D3  31A3   	fcall	_SPIPut
 19718                           
 19719                           ;miwi_nvm.c: 273: PageCounter = SPIGet();
 19720  23AC  31B5  2504  31A3   	fcall	_SPIGet
 19721  23AF  0021               	movlb	1	; select bank1
 19722  23B0  00B3               	movwf	??_NVMWrite^(0+128)
 19723  23B1  0833               	movf	??_NVMWrite^(0+128),w
 19724  23B2  00B8               	movwf	NVMWrite@PageCounter^(0+128)
 19725                           
 19726                           ;miwi_nvm.c: 274: LATAbits.LATA3 = 1;
 19727  23B3  0022               	movlb	2	; select bank2
 19728  23B4  158C               	bsf	12,3	;volatile
 19729                           
 19730                           ;miwi_nvm.c: 275: MacroNop();
 19731  23B5  3180  2002  31A3   	fcall	_MacroNop
 19732                           
 19733                           ;miwi_nvm.c: 276: } while(PageCounter & 0x01 );
 19734  23B8  0021               	movlb	1	; select bank1
 19735  23B9  1838               	btfsc	NVMWrite@PageCounter^(0+128),0
 19736  23BA  2BA6               	goto	l5981
 19737                           
 19738                           ;miwi_nvm.c: 278: LATAbits.LATA3 = 0;
 19739  23BB  0022               	movlb	2	; select bank2
 19740  23BC  118C               	bcf	12,3	;volatile
 19741                           
 19742                           ;miwi_nvm.c: 279: SPIPut( 0x06 );
 19743  23BD  3006               	movlw	6
 19744  23BE  31B5  25D3  31A3   	fcall	_SPIPut
 19745                           
 19746                           ;miwi_nvm.c: 280: LATAbits.LATA3 = 1;
 19747  23C1  0022               	movlb	2	; select bank2
 19748  23C2  158C               	bsf	12,3	;volatile
 19749                           
 19750                           ;miwi_nvm.c: 281: MacroNop();
 19751  23C3  3180  2002  31A3   	fcall	_MacroNop
 19752                           
 19753                           ;miwi_nvm.c: 282: LATAbits.LATA3 = 0;
 19754  23C6  0022               	movlb	2	; select bank2
 19755  23C7  118C               	bcf	12,3	;volatile
 19756                           
 19757                           ;miwi_nvm.c: 297: SPIPut( 0x02 );
 19758  23C8  3002               	movlw	2
 19759  23C9  31B5  25D3  31A3   	fcall	_SPIPut
 19760                           
 19761                           ;miwi_nvm.c: 298: SPIPut( addr>>8 );
 19762  23CC  0021               	movlb	1	; select bank1
 19763  23CD  0830               	movf	(NVMWrite@addr+1)^(0+128),w
 19764  23CE  31B5  25D3  31A3   	fcall	_SPIPut
 19765                           
 19766                           ;miwi_nvm.c: 299: SPIPut( addr );
 19767  23D1  0021               	movlb	1	; select bank1
 19768  23D2  082F               	movf	NVMWrite@addr^(0+128),w
 19769  23D3  31B5  25D3  31A3   	fcall	_SPIPut
 19770                           
 19771                           ;miwi_nvm.c: 301: PageCounter = 0;
 19772  23D6  0021               	movlb	1	; select bank1
 19773  23D7  01B8               	clrf	NVMWrite@PageCounter^(0+128)
 19774  23D8                     l6023:	
 19775                           ;miwi_nvm.c: 302: while( count > 0 )
 19776                           
 19777  23D8  0831               	movf	NVMWrite@count^(0+128),w
 19778  23D9  0432               	iorwf	(NVMWrite@count+1)^(0+128),w
 19779  23DA  1903               	btfsc	3,2
 19780  23DB  2C0D               	goto	l263
 19781                           
 19782                           ;miwi_nvm.c: 303: {
 19783                           ;miwi_nvm.c: 304: SPIPut( *source++ );
 19784  23DC  082D               	movf	NVMWrite@source^(0+128),w
 19785  23DD  0086               	movwf	6
 19786  23DE  082E               	movf	(NVMWrite@source+1)^(0+128),w
 19787  23DF  0087               	movwf	7
 19788  23E0  0801               	movf	1,w
 19789  23E1  31B5  25D3  31A3   	fcall	_SPIPut
 19790  23E4  3001               	movlw	1
 19791  23E5  0021               	movlb	1	; select bank1
 19792  23E6  07AD               	addwf	NVMWrite@source^(0+128),f
 19793  23E7  3000               	movlw	0
 19794  23E8  3DAE               	addwfc	(NVMWrite@source+1)^(0+128),f
 19795                           
 19796                           ;miwi_nvm.c: 305: count--;
 19797  23E9  3001               	movlw	1
 19798  23EA  02B1               	subwf	NVMWrite@count^(0+128),f
 19799  23EB  3000               	movlw	0
 19800  23EC  3BB2               	subwfb	(NVMWrite@count+1)^(0+128),f
 19801                           
 19802                           ;miwi_nvm.c: 306: PageCounter++;
 19803  23ED  3001               	movlw	1
 19804  23EE  00B3               	movwf	??_NVMWrite^(0+128)
 19805  23EF  0833               	movf	??_NVMWrite^(0+128),w
 19806  23F0  07B8               	addwf	NVMWrite@PageCounter^(0+128),f
 19807                           
 19808                           ;miwi_nvm.c: 307: if( ((addr + PageCounter) & (64-1)) == 0 )
 19809  23F1  0838               	movf	NVMWrite@PageCounter^(0+128),w
 19810  23F2  072F               	addwf	NVMWrite@addr^(0+128),w
 19811  23F3  00B3               	movwf	??_NVMWrite^(0+128)
 19812  23F4  0830               	movf	(NVMWrite@addr+1)^(0+128),w
 19813  23F5  1803               	skipnc
 19814  23F6  0A30               	incf	(NVMWrite@addr+1)^(0+128),w
 19815  23F7  00B4               	movwf	(??_NVMWrite^(0+128)+1)
 19816  23F8  303F               	movlw	63
 19817  23F9  0533               	andwf	??_NVMWrite^(0+128),w
 19818  23FA  00B5               	movwf	(??_NVMWrite+2)^(0+128)
 19819  23FB  3000               	movlw	0
 19820  23FC  0534               	andwf	(??_NVMWrite+1)^(0+128),w
 19821  23FD  00B6               	movwf	(??_NVMWrite+3)^(0+128)
 19822  23FE  0835               	movf	(??_NVMWrite+2)^(0+128),w
 19823  23FF  0436               	iorwf	((??_NVMWrite+2)^(0+128)+1),w
 19824  2400  1D03               	btfss	3,2
 19825  2401  2BD8               	goto	l6023
 19826                           
 19827                           ;miwi_nvm.c: 308: {
 19828                           ;miwi_nvm.c: 309: LATAbits.LATA3 = 1;
 19829  2402  0022               	movlb	2	; select bank2
 19830  2403  158C               	bsf	12,3	;volatile
 19831                           
 19832                           ;miwi_nvm.c: 310: addr += PageCounter;
 19833  2404  0021               	movlb	1	; select bank1
 19834  2405  0838               	movf	NVMWrite@PageCounter^(0+128),w
 19835  2406  00B3               	movwf	??_NVMWrite^(0+128)
 19836  2407  01B4               	clrf	(??_NVMWrite^(0+128)+1)
 19837  2408  0833               	movf	??_NVMWrite^(0+128),w
 19838  2409  07AF               	addwf	NVMWrite@addr^(0+128),f
 19839  240A  0834               	movf	(??_NVMWrite+1)^(0+128),w
 19840  240B  3DB0               	addwfc	(NVMWrite@addr+1)^(0+128),f
 19841                           
 19842                           ;miwi_nvm.c: 311: goto EEPROM_NEXT_PAGE;
 19843  240C  2BA6               	goto	l5981
 19844  240D                     l263:	
 19845                           
 19846                           ;miwi_nvm.c: 312: }
 19847                           ;miwi_nvm.c: 313: }
 19848                           ;miwi_nvm.c: 314: LATAbits.LATA3 = 1;
 19849  240D  0022               	movlb	2	; select bank2
 19850  240E  158C               	bsf	12,3	;volatile
 19851                           
 19852                           ;miwi_nvm.c: 319: INTCONbits.IOCIE = oldRFIE;
 19853  240F  0021               	movlb	1	; select bank1
 19854  2410  0C37               	rrf	NVMWrite@oldRFIE^(0+128),w
 19855  2411  1C03               	skipc
 19856  2412  118B               	bcf	11,3	;volatile
 19857  2413  1803               	skipnc
 19858  2414  158B               	bsf	11,3	;volatile
 19859  2415  0008               	return
 19860  2416                     __end_of_NVMWrite:	
 19861                           
 19862                           	psect	text62
 19863  3504                     __ptext62:	
 19864 ;; *************** function _SPIGet *****************
 19865 ;; Defined at:
 19866 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 19867 ;; Parameters:    Size  Location     Type
 19868 ;;		None
 19869 ;; Auto vars:     Size  Location     Type
 19870 ;;		None
 19871 ;; Return value:  Size  Location     Type
 19872 ;;                  1    wreg      unsigned char 
 19873 ;; Registers used:
 19874 ;;		wreg, status,2, status,0, pclath, cstack
 19875 ;; Tracked objects:
 19876 ;;		On entry : 0/0
 19877 ;;		On exit  : 0/0
 19878 ;;		Unchanged: 0/0
 19879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19884 ;;Total ram usage:        0 bytes
 19885 ;; Hardware stack levels used:    1
 19886 ;; Hardware stack levels required when called:    6
 19887 ;; This function calls:
 19888 ;;		_SPIPut
 19889 ;; This function is called by:
 19890 ;;		_RegisterRead
 19891 ;;		_NVMRead
 19892 ;;		_NVMWrite
 19893 ;;		_EEPROM_Read
 19894 ;; This function uses a non-reentrant model
 19895 ;;
 19896                           
 19897                           
 19898                           ;psect for function _SPIGet
 19899  3504                     _SPIGet:	
 19900                           
 19901                           ;spi.c: 115: SPIPut(0x00);
 19902                           
 19903                           ;incstack = 0
 19904 ;; hardware stack exceeded
 19905                           ; Regs used in _SPIGet: [wreg+status,2+status,0+pclath+cstack]
 19906  3504  3000               	movlw	0
 19907  3505  31B5  25D3         	fcall	_SPIPut
 19908                           
 19909                           ;spi.c: 116: return SSP1BUF;
 19910  3507  0024               	movlb	4	; select bank4
 19911  3508  0811               	movf	17,w	;volatile
 19912  3509  0008               	return
 19913  350A                     __end_of_SPIGet:	
 19914                           
 19915                           	psect	text63
 19916  0002                     __ptext63:	
 19917 ;; *************** function _MacroNop *****************
 19918 ;; Defined at:
 19919 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 19920 ;; Parameters:    Size  Location     Type
 19921 ;;		None
 19922 ;; Auto vars:     Size  Location     Type
 19923 ;;		None
 19924 ;; Return value:  Size  Location     Type
 19925 ;;                  1    wreg      void 
 19926 ;; Registers used:
 19927 ;;		None
 19928 ;; Tracked objects:
 19929 ;;		On entry : 0/0
 19930 ;;		On exit  : 0/0
 19931 ;;		Unchanged: 0/0
 19932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19937 ;;Total ram usage:        0 bytes
 19938 ;; Hardware stack levels used:    1
 19939 ;; Hardware stack levels required when called:    5
 19940 ;; This function calls:
 19941 ;;		Nothing
 19942 ;; This function is called by:
 19943 ;;		_NVMWrite
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           
 19948                           ;psect for function _MacroNop
 19949  0002                     _MacroNop:	
 19950                           
 19951                           ;miwi_p2p.c: 326: __nop();
 19952                           
 19953                           ;incstack = 0
 19954                           ; Regs used in _MacroNop: []
 19955  0002  0000               	nop
 19956  0003  0008               	return
 19957  0004                     __end_of_MacroNop:	
 19958                           
 19959                           	psect	text64
 19960  0800                     __ptext64:	
 19961 ;; *************** function _DemoOutput_ChannelError *****************
 19962 ;; Defined at:
 19963 ;;		line 283 in file "../src/demo_ouput.c"
 19964 ;; Parameters:    Size  Location     Type
 19965 ;;  channel         1    wreg     unsigned char 
 19966 ;; Auto vars:     Size  Location     Type
 19967 ;;  channel         1    0[COMMON] unsigned char 
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  1    wreg      void 
 19970 ;; Registers used:
 19971 ;;		wreg
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19981 ;;Total ram usage:        0 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:    5
 19984 ;; This function calls:
 19985 ;;		Nothing
 19986 ;; This function is called by:
 19987 ;;		_Initialize_Demo
 19988 ;; This function uses a non-reentrant model
 19989 ;;
 19990                           
 19991                           
 19992                           ;psect for function _DemoOutput_ChannelError
 19993  0800                     _DemoOutput_ChannelError:	
 19994                           
 19995                           ;incstack = 0
 19996                           ; Regs used in _DemoOutput_ChannelError: [wreg]
 19997  0800  0008               	return
 19998  0801                     __end_of_DemoOutput_ChannelError:	
 19999                           
 20000                           	psect	text65
 20001  3774                     __ptext65:	
 20002 ;; *************** function _DemoOutput_Channel *****************
 20003 ;; Defined at:
 20004 ;;		line 200 in file "../src/demo_ouput.c"
 20005 ;; Parameters:    Size  Location     Type
 20006 ;;  channel         1    wreg     unsigned char 
 20007 ;;  Step            1   55[BANK1 ] unsigned char 
 20008 ;; Auto vars:     Size  Location     Type
 20009 ;;  channel         1   57[BANK1 ] unsigned char 
 20010 ;; Return value:  Size  Location     Type
 20011 ;;                  1    wreg      void 
 20012 ;; Registers used:
 20013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20014 ;; Tracked objects:
 20015 ;;		On entry : 0/0
 20016 ;;		On exit  : 0/0
 20017 ;;		Unchanged: 0/0
 20018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20019 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20020 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20021 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20022 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20023 ;;Total ram usage:        3 bytes
 20024 ;; Hardware stack levels used:    1
 20025 ;; Hardware stack levels required when called:   10
 20026 ;; This function calls:
 20027 ;;		_LCDDisplay
 20028 ;; This function is called by:
 20029 ;;		_Initialize_Demo
 20030 ;; This function uses a non-reentrant model
 20031 ;;
 20032                           
 20033                           
 20034                           ;psect for function _DemoOutput_Channel
 20035  3774                     _DemoOutput_Channel:	
 20036                           
 20037                           ;incstack = 0
 20038                           ; Regs used in _DemoOutput_Channel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20039                           ;DemoOutput_Channel@channel stored from wreg
 20040  3774  0021               	movlb	1	; select bank1
 20041  3775  00D9               	movwf	DemoOutput_Channel@channel^(0+128)
 20042                           
 20043                           ;demo_ouput.c: 202: if( Step == 0 )
 20044  3776  0857               	movf	DemoOutput_Channel@Step^(0+128),w
 20045  3777  1D03               	btfss	3,2
 20046  3778  2F86               	goto	l7527
 20047                           
 20048                           ;demo_ouput.c: 203: {
 20049                           ;demo_ouput.c: 204: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 20050  3779  305E               	movlw	low (STR_2| (0+32768))
 20051  377A  00D0               	movwf	LCDDisplay@text^(0+128)
 20052  377B  30A1               	movlw	high (STR_2| (0+32768))
 20053  377C  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 20054  377D  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 20055  377E  00D8               	movwf	??_DemoOutput_Channel^(0+128)
 20056  377F  0858               	movf	??_DemoOutput_Channel^(0+128),w
 20057  3780  00D2               	movwf	LCDDisplay@value^(0+128)
 20058  3781  01D3               	clrf	LCDDisplay@delay^(0+128)
 20059  3782  0AD3               	incf	LCDDisplay@delay^(0+128),f
 20060  3783  31A9  21B5         	fcall	_LCDDisplay
 20061                           
 20062                           ;demo_ouput.c: 206: ;
 20063                           ;demo_ouput.c: 207: ;
 20064                           ;demo_ouput.c: 208: ;
 20065                           ;demo_ouput.c: 210: }
 20066  3785  0008               	return
 20067  3786                     l7527:	
 20068                           
 20069                           ;demo_ouput.c: 211: else
 20070                           ;demo_ouput.c: 212: {
 20071                           ;demo_ouput.c: 213: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 20072  3786  307E               	movlw	low (STR_3| (0+32768))
 20073  3787  0021               	movlb	1	; select bank1
 20074  3788  00D0               	movwf	LCDDisplay@text^(0+128)
 20075  3789  30A1               	movlw	high (STR_3| (0+32768))
 20076  378A  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 20077  378B  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 20078  378C  00D8               	movwf	??_DemoOutput_Channel^(0+128)
 20079  378D  0858               	movf	??_DemoOutput_Channel^(0+128),w
 20080  378E  00D2               	movwf	LCDDisplay@value^(0+128)
 20081  378F  01D3               	clrf	LCDDisplay@delay^(0+128)
 20082  3790  0AD3               	incf	LCDDisplay@delay^(0+128),f
 20083  3791  31A9  21B5         	fcall	_LCDDisplay
 20084  3793  0008               	return
 20085  3794                     __end_of_DemoOutput_Channel:	
 20086                           ;demo_ouput.c: 215: ;
 20087                           ;demo_ouput.c: 216: ;
 20088                           ;demo_ouput.c: 217: ;
 20089                           
 20090                           
 20091                           	psect	text66
 20092  3525                     __ptext66:	
 20093 ;; *************** function _DemoOutput_Greeting *****************
 20094 ;; Defined at:
 20095 ;;		line 63 in file "../src/demo_ouput.c"
 20096 ;; Parameters:    Size  Location     Type
 20097 ;;		None
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;		None
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      void 
 20102 ;; Registers used:
 20103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20104 ;; Tracked objects:
 20105 ;;		On entry : 0/0
 20106 ;;		On exit  : 0/0
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20113 ;;Total ram usage:        0 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:   10
 20116 ;; This function calls:
 20117 ;;		_LCDDisplay
 20118 ;; This function is called by:
 20119 ;;		_main
 20120 ;; This function uses a non-reentrant model
 20121 ;;
 20122                           
 20123                           
 20124                           ;psect for function _DemoOutput_Greeting
 20125  3525                     _DemoOutput_Greeting:	
 20126                           
 20127                           ;demo_ouput.c: 109: LCDDisplay((char *)"Simple STAR     MRF89XA Node", 0, 1);
 20128                           
 20129                           ;incstack = 0
 20130                           ; Regs used in _DemoOutput_Greeting: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20131  3525  309D               	movlw	low (STR_1| (0+32768))
 20132  3526  0021               	movlb	1	; select bank1
 20133  3527  00D0               	movwf	LCDDisplay@text^(0+128)
 20134  3528  30A1               	movlw	high (STR_1| (0+32768))
 20135  3529  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 20136  352A  01D2               	clrf	LCDDisplay@value^(0+128)
 20137  352B  01D3               	clrf	LCDDisplay@delay^(0+128)
 20138  352C  0AD3               	incf	LCDDisplay@delay^(0+128),f
 20139  352D  31A9  21B5         	fcall	_LCDDisplay
 20140  352F  0008               	return
 20141  3530                     __end_of_DemoOutput_Greeting:	
 20142                           
 20143                           	psect	text67
 20144  29B5                     __ptext67:	
 20145 ;; *************** function _LCDDisplay *****************
 20146 ;; Defined at:
 20147 ;;		line 373 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 20148 ;; Parameters:    Size  Location     Type
 20149 ;;  text            2   48[BANK1 ] PTR unsigned char 
 20150 ;;		 -> STR_13(21), STR_11(20), STR_4(16), STR_3(31), 
 20151 ;;		 -> STR_2(32), STR_1(29), 
 20152 ;;  value           1   50[BANK1 ] unsigned char 
 20153 ;;  delay           1   51[BANK1 ] unsigned char 
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;  i               1   54[BANK1 ] unsigned char 
 20156 ;; Return value:  Size  Location     Type
 20157 ;;                  1    wreg      void 
 20158 ;; Registers used:
 20159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20160 ;; Tracked objects:
 20161 ;;		On entry : 0/0
 20162 ;;		On exit  : 0/0
 20163 ;;		Unchanged: 0/0
 20164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20165 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20166 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20167 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20168 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 20169 ;;Total ram usage:        7 bytes
 20170 ;; Hardware stack levels used:    1
 20171 ;; Hardware stack levels required when called:    9
 20172 ;; This function calls:
 20173 ;;		_DELAY_ms
 20174 ;;		_LCD_Erase
 20175 ;;		_LCD_Update
 20176 ;;		_sprintf
 20177 ;; This function is called by:
 20178 ;;		_DemoOutput_Greeting
 20179 ;;		_DemoOutput_Channel
 20180 ;;		_DemoOutput_UnicastFail
 20181 ;;		_run_star_demo
 20182 ;;		_freezer_feature
 20183 ;; This function uses a non-reentrant model
 20184 ;;
 20185                           
 20186                           
 20187                           ;psect for function _LCDDisplay
 20188  29B5                     _LCDDisplay:	
 20189                           
 20190                           ;lcd.c: 376: LCD_Erase();
 20191                           
 20192                           ;incstack = 0
 20193                           ; Regs used in _LCDDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20194  29B5  31B5  25EA  31A9   	fcall	_LCD_Erase
 20195                           
 20196                           ;lcd.c: 377: DELAY_ms(5);
 20197  29B8  3005               	movlw	5
 20198  29B9  0021               	movlb	1	; select bank1
 20199  29BA  00AC               	movwf	DELAY_ms@ms^(0+128)
 20200  29BB  3000               	movlw	0
 20201  29BC  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 20202  29BD  31AC  2423  31A9   	fcall	_DELAY_ms
 20203                           
 20204                           ;lcd.c: 378: sprintf((char *)LCDText, (char*)text, value);
 20205  29C0  0021               	movlb	1	; select bank1
 20206  29C1  0851               	movf	(LCDDisplay@text+1)^(0+128),w
 20207  29C2  00AF               	movwf	(sprintf@f+1)^(0+128)
 20208  29C3  0850               	movf	LCDDisplay@text^(0+128),w
 20209  29C4  00AE               	movwf	sprintf@f^(0+128)
 20210  29C5  0852               	movf	LCDDisplay@value^(0+128),w
 20211  29C6  00D4               	movwf	??_LCDDisplay^(0+128)
 20212  29C7  01D5               	clrf	(??_LCDDisplay^(0+128)+1)
 20213  29C8  0854               	movf	??_LCDDisplay^(0+128),w
 20214  29C9  00B0               	movwf	(?_sprintf^(0+128)+2)
 20215  29CA  0855               	movf	(??_LCDDisplay+1)^(0+128),w
 20216  29CB  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
 20217  29CC  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
 20218  29CD  3193  238C  31A9   	fcall	_sprintf
 20219                           
 20220                           ;lcd.c: 379: LCD_Update();
 20221  29D0  31AD  2509  31A9   	fcall	_LCD_Update
 20222                           
 20223                           ;lcd.c: 382: if( delay )
 20224  29D3  0021               	movlb	1	; select bank1
 20225  29D4  0853               	movf	LCDDisplay@delay^(0+128),w
 20226  29D5  1903               	btfsc	3,2
 20227  29D6  0008               	return
 20228                           
 20229                           ;lcd.c: 383: {
 20230                           ;lcd.c: 384: uint8_t i;
 20231                           ;lcd.c: 385: for(i = 0; i < 8; i++)
 20232  29D7  01D6               	clrf	LCDDisplay@i^(0+128)
 20233  29D8                     L7:	
 20234  29D8  3008               	movlw	8
 20235  29D9  0256               	subwf	LCDDisplay@i^(0+128),w
 20236  29DA  1803               	btfsc	3,0
 20237  29DB  0008               	return
 20238                           
 20239                           ;lcd.c: 386: {
 20240                           ;lcd.c: 387: DELAY_ms(250);
 20241  29DC  30FA               	movlw	250
 20242  29DD  00AC               	movwf	DELAY_ms@ms^(0+128)
 20243  29DE  3000               	movlw	0
 20244  29DF  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 20245  29E0  31AC  2423  31A9   	fcall	_DELAY_ms
 20246  29E3  3001               	movlw	1
 20247  29E4  0021               	movlb	1	; select bank1
 20248  29E5  00D4               	movwf	??_LCDDisplay^(0+128)
 20249  29E6  0854               	movf	??_LCDDisplay^(0+128),w
 20250  29E7  07D6               	addwf	LCDDisplay@i^(0+128),f
 20251  29E8  29D8               	goto	L7
 20252  29E9                     __end_of_LCDDisplay:	
 20253                           
 20254                           	psect	text68
 20255  138C                     __ptext68:	
 20256 ;; *************** function _sprintf *****************
 20257 ;; Defined at:
 20258 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  sp              1    wreg     PTR unsigned char 
 20261 ;;		 -> LCDText(33), 
 20262 ;;  f               2   14[BANK1 ] PTR const unsigned char 
 20263 ;;		 -> STR_15(17), STR_14(17), STR_13(21), STR_12(18), 
 20264 ;;		 -> STR_11(20), STR_10(17), STR_9(22), STR_8(22), 
 20265 ;;		 -> STR_7(25), STR_6(22), STR_5(17), STR_4(16), 
 20266 ;;		 -> STR_3(31), STR_2(32), STR_1(29), 
 20267 ;; Auto vars:     Size  Location     Type
 20268 ;;  sp              1   47[BANK1 ] PTR unsigned char 
 20269 ;;		 -> LCDText(33), 
 20270 ;;  idx             1   34[BANK1 ] unsigned char 
 20271 ;;  tmpval          4    0        struct .
 20272 ;;  flag            2   45[BANK1 ] unsigned short 
 20273 ;;  width           2   42[BANK1 ] int 
 20274 ;;  val             2   39[BANK1 ] unsigned int 
 20275 ;;  len             2   36[BANK1 ] unsigned int 
 20276 ;;  c               1   44[BANK1 ] char 
 20277 ;;  prec            1   41[BANK1 ] char 
 20278 ;;  ap              1   38[BANK1 ] PTR void [1]
 20279 ;;		 -> ?_sprintf(2), 
 20280 ;;  cp              1   35[BANK1 ] PTR const unsigned char 
 20281 ;;		 -> sprintf@c(1), 
 20282 ;; Return value:  Size  Location     Type
 20283 ;;                  2   14[BANK1 ] int 
 20284 ;; Registers used:
 20285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20286 ;; Tracked objects:
 20287 ;;		On entry : 0/0
 20288 ;;		On exit  : 0/0
 20289 ;;		Unchanged: 0/0
 20290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20291 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 20292 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 20293 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20294 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
 20295 ;;Total ram usage:       34 bytes
 20296 ;; Hardware stack levels used:    1
 20297 ;; Hardware stack levels required when called:    6
 20298 ;; This function calls:
 20299 ;;		___bmul
 20300 ;;		___lwdiv
 20301 ;;		___lwmod
 20302 ;;		___wmul
 20303 ;;		_isdigit
 20304 ;; This function is called by:
 20305 ;;		_Source_END_DEVICE_INFO
 20306 ;;		_run_star_demo
 20307 ;;		_LCDTRXCount
 20308 ;;		_LCDDisplay
 20309 ;; This function uses a non-reentrant model
 20310 ;;
 20311                           
 20312                           
 20313                           ;psect for function _sprintf
 20314  138C                     _sprintf:	
 20315                           
 20316                           ;incstack = 0
 20317                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20318                           ;sprintf@sp stored from wreg
 20319  138C  0021               	movlb	1	; select bank1
 20320  138D  00CF               	movwf	sprintf@sp^(0+128)
 20321                           
 20322                           ;doprnt.c: 494: va_list ap;
 20323                           ;doprnt.c: 499: signed char c;
 20324                           ;doprnt.c: 501: int width;
 20325                           ;doprnt.c: 506: signed char prec;
 20326                           ;doprnt.c: 508: unsigned short flag;
 20327                           ;doprnt.c: 523: union {
 20328                           ;doprnt.c: 524: unsigned long vd;
 20329                           ;doprnt.c: 525: double integ;
 20330                           ;doprnt.c: 526: } tmpval;
 20331                           ;doprnt.c: 528: unsigned int val;
 20332                           ;doprnt.c: 529: unsigned len;
 20333                           ;doprnt.c: 530: const char * cp;
 20334                           ;doprnt.c: 533: *ap = __va_start();
 20335  138E  30B0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 20336  138F  00B8               	movwf	??_sprintf^(0+128)
 20337  1390  0838               	movf	??_sprintf^(0+128),w
 20338  1391  00C6               	movwf	sprintf@ap^(0+128)
 20339  1392                     l5933:	
 20340                           ;doprnt.c: 536: while(c = *f++) {
 20341                           
 20342  1392  0021               	movlb	1	; select bank1
 20343  1393  082F               	movf	(sprintf@f+1)^(0+128),w
 20344  1394  00B9               	movwf	(??_sprintf^(0+128)+1)
 20345  1395  082E               	movf	sprintf@f^(0+128),w
 20346  1396  00B8               	movwf	??_sprintf^(0+128)
 20347  1397  0AAE               	incf	sprintf@f^(0+128),f
 20348  1398  1903               	skipnz
 20349  1399  0AAF               	incf	(sprintf@f+1)^(0+128),f
 20350  139A  0838               	movf	??_sprintf^(0+128),w
 20351  139B  0084               	movwf	4
 20352  139C  0839               	movf	(??_sprintf+1)^(0+128),w
 20353  139D  0085               	movwf	5
 20354  139E  0800               	movf	0,w	;code access
 20355  139F  00BA               	movwf	(??_sprintf+2)^(0+128)
 20356  13A0  083A               	movf	(??_sprintf+2)^(0+128),w
 20357  13A1  00CC               	movwf	sprintf@c^(0+128)
 20358  13A2  084C               	movf	sprintf@c^(0+128),w
 20359  13A3  1903               	btfsc	3,2
 20360  13A4  2FFA               	goto	l5935
 20361                           
 20362                           ;doprnt.c: 538: if(c != '%')
 20363  13A5  3025               	movlw	37
 20364  13A6  064C               	xorwf	sprintf@c^(0+128),w
 20365  13A7  1903               	btfsc	3,2
 20366  13A8  2BB6               	goto	l5613
 20367                           
 20368                           ;doprnt.c: 540: {
 20369                           ;doprnt.c: 541: ((*sp++ = (c)));
 20370  13A9  084C               	movf	sprintf@c^(0+128),w
 20371  13AA  00B8               	movwf	??_sprintf^(0+128)
 20372  13AB  084F               	movf	sprintf@sp^(0+128),w
 20373  13AC  0086               	movwf	6
 20374  13AD  3002               	movlw	2	; select bank4/5
 20375  13AE  0087               	movwf	7
 20376  13AF  0838               	movf	??_sprintf^(0+128),w
 20377  13B0  0081               	movwf	1
 20378  13B1  3001               	movlw	1
 20379  13B2  00B8               	movwf	??_sprintf^(0+128)
 20380  13B3  0838               	movf	??_sprintf^(0+128),w
 20381  13B4  07CF               	addwf	sprintf@sp^(0+128),f
 20382                           
 20383                           ;doprnt.c: 542: continue;
 20384  13B5  2B92               	goto	l5933
 20385  13B6                     l5613:	
 20386                           
 20387                           ;doprnt.c: 543: }
 20388                           ;doprnt.c: 546: width = 0;
 20389  13B6  01CA               	clrf	sprintf@width^(0+128)
 20390  13B7  01CB               	clrf	(sprintf@width+1)^(0+128)
 20391                           
 20392                           ;doprnt.c: 548: flag = 0;
 20393  13B8  01CD               	clrf	sprintf@flag^(0+128)
 20394  13B9  01CE               	clrf	(sprintf@flag+1)^(0+128)
 20395                           
 20396                           ;doprnt.c: 551: switch(*f) {
 20397                           
 20398                           ;doprnt.c: 550: for(;;) {
 20399  13BA  2BC6               	goto	l5625
 20400  13BB                     l1195:	
 20401                           ;doprnt.c: 553: case '-':
 20402                           
 20403                           
 20404                           ;doprnt.c: 554: flag |= 0x08;
 20405  13BB  15CD               	bsf	sprintf@flag^(0+128),3
 20406  13BC  2BC2               	goto	l5621
 20407  13BD                     l1197:	
 20408                           ;doprnt.c: 560: case ' ':
 20409                           
 20410                           ;doprnt.c: 556: continue;
 20411                           
 20412                           ;doprnt.c: 555: f++;
 20413                           
 20414                           
 20415                           ;doprnt.c: 561: flag |= 0x01;
 20416  13BD  144D               	bsf	sprintf@flag^(0+128),0
 20417  13BE  2BC2               	goto	l5621
 20418  13BF                     l1198:	
 20419                           ;doprnt.c: 573: case '#':
 20420                           
 20421                           ;doprnt.c: 563: continue;
 20422                           
 20423                           ;doprnt.c: 562: f++;
 20424                           
 20425                           
 20426                           ;doprnt.c: 574: flag |= 0x800;
 20427  13BF  15CE               	bsf	(sprintf@flag^(0+128)+1),3
 20428  13C0  2BC2               	goto	l5621
 20429  13C1                     l1199:	
 20430                           ;doprnt.c: 579: case '0':
 20431                           
 20432                           ;doprnt.c: 576: continue;
 20433                           
 20434                           ;doprnt.c: 575: f++;
 20435                           
 20436                           
 20437                           ;doprnt.c: 580: flag |= 0x04;
 20438  13C1  154D               	bsf	sprintf@flag^(0+128),2
 20439  13C2                     l5621:	
 20440                           
 20441                           ;doprnt.c: 581: f++;
 20442  13C2  3001               	movlw	1
 20443  13C3  07AE               	addwf	sprintf@f^(0+128),f
 20444  13C4  3000               	movlw	0
 20445  13C5  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20446  13C6                     l5625:	
 20447                           ;doprnt.c: 584: }
 20448                           
 20449                           ;doprnt.c: 582: continue;
 20450                           
 20451  13C6  082E               	movf	sprintf@f^(0+128),w
 20452  13C7  0084               	movwf	4
 20453  13C8  082F               	movf	(sprintf@f+1)^(0+128),w
 20454  13C9  0085               	movwf	5
 20455  13CA  0800               	movf	0,w	;code access
 20456                           
 20457                           ; Switch size 1, requested type "space"
 20458                           ; Number of cases is 4, Range of values is 32 to 48
 20459                           ; switch strategies available:
 20460                           ; Name         Instructions Cycles
 20461                           ; simple_byte           13     7 (average)
 20462                           ; direct_byte           43     9 (fixed)
 20463                           ; jumptable            263     9 (fixed)
 20464                           ;	Chosen strategy is simple_byte
 20465  13CB  3A20               	xorlw	32	; case 32
 20466  13CC  1903               	skipnz
 20467  13CD  2BBD               	goto	l1197
 20468  13CE  3A03               	xorlw	3	; case 35
 20469  13CF  1903               	skipnz
 20470  13D0  2BBF               	goto	l1198
 20471  13D1  3A0E               	xorlw	14	; case 45
 20472  13D2  1903               	skipnz
 20473  13D3  2BBB               	goto	l1195
 20474  13D4  3A1D               	xorlw	29	; case 48
 20475  13D5  1903               	skipnz
 20476  13D6  2BC1               	goto	l1199
 20477  13D7  2BD8               	goto	l1201
 20478  13D8                     l1201:	
 20479                           ;doprnt.c: 586: }
 20480                           
 20481                           ;doprnt.c: 585: break;
 20482                           
 20483                           
 20484                           ;doprnt.c: 593: if(flag & 0x08)
 20485  13D8  1DCD               	btfss	sprintf@flag^(0+128),3
 20486  13D9  2BDE               	goto	l5629
 20487                           
 20488                           ;doprnt.c: 594: flag &= ~0x04;
 20489  13DA  30FB               	movlw	251
 20490  13DB  05CD               	andwf	sprintf@flag^(0+128),f
 20491  13DC  30FF               	movlw	255
 20492  13DD  05CE               	andwf	(sprintf@flag+1)^(0+128),f
 20493  13DE                     l5629:	
 20494                           
 20495                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20496  13DE  082E               	movf	sprintf@f^(0+128),w
 20497  13DF  0084               	movwf	4
 20498  13E0  082F               	movf	(sprintf@f+1)^(0+128),w
 20499  13E1  0085               	movwf	5
 20500  13E2  0800               	movf	0,w	;code access
 20501  13E3  31B5  2554  3193   	fcall	_isdigit
 20502  13E6  1C03               	btfss	3,0
 20503  13E7  2C1A               	goto	l5641
 20504                           
 20505                           ;doprnt.c: 598: width = 0;
 20506  13E8  0021               	movlb	1	; select bank1
 20507  13E9  01CA               	clrf	sprintf@width^(0+128)
 20508  13EA  01CB               	clrf	(sprintf@width+1)^(0+128)
 20509  13EB                     l5633:	
 20510                           ;doprnt.c: 599: do {
 20511                           
 20512                           
 20513                           ;doprnt.c: 600: width *= 10;
 20514  13EB  300A               	movlw	10
 20515  13EC  0021               	movlb	1	; select bank1
 20516  13ED  00A7               	movwf	___wmul@multiplier^(0+128)
 20517  13EE  3000               	movlw	0
 20518  13EF  00A8               	movwf	(___wmul@multiplier^(0+128)+1)
 20519  13F0  084B               	movf	(sprintf@width+1)^(0+128),w
 20520  13F1  00AA               	movwf	(___wmul@multiplicand+1)^(0+128)
 20521  13F2  084A               	movf	sprintf@width^(0+128),w
 20522  13F3  00A9               	movwf	___wmul@multiplicand^(0+128)
 20523  13F4  31B6  26A4  3193   	fcall	___wmul
 20524  13F7  0021               	movlb	1	; select bank1
 20525  13F8  0828               	movf	(?___wmul+1)^(0+128),w
 20526  13F9  00CB               	movwf	(sprintf@width+1)^(0+128)
 20527  13FA  0827               	movf	?___wmul^(0+128),w
 20528  13FB  00CA               	movwf	sprintf@width^(0+128)
 20529                           
 20530                           ;doprnt.c: 601: width += *f++ - '0';
 20531  13FC  082E               	movf	sprintf@f^(0+128),w
 20532  13FD  0084               	movwf	4
 20533  13FE  082F               	movf	(sprintf@f+1)^(0+128),w
 20534  13FF  0085               	movwf	5
 20535  1400  0800               	movf	0,w	;code access
 20536  1401  3ED0               	addlw	208
 20537  1402  00B8               	movwf	??_sprintf^(0+128)
 20538  1403  30FF               	movlw	255
 20539  1404  1803               	skipnc
 20540  1405  3000               	movlw	0
 20541  1406  00B9               	movwf	(??_sprintf^(0+128)+1)
 20542  1407  0838               	movf	??_sprintf^(0+128),w
 20543  1408  07CA               	addwf	sprintf@width^(0+128),f
 20544  1409  0839               	movf	(??_sprintf+1)^(0+128),w
 20545  140A  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 20546  140B  3001               	movlw	1
 20547  140C  07AE               	addwf	sprintf@f^(0+128),f
 20548  140D  3000               	movlw	0
 20549  140E  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20550                           
 20551                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20552  140F  082E               	movf	sprintf@f^(0+128),w
 20553  1410  0084               	movwf	4
 20554  1411  082F               	movf	(sprintf@f+1)^(0+128),w
 20555  1412  0085               	movwf	5
 20556  1413  0800               	movf	0,w	;code access
 20557  1414  31B5  2554  3193   	fcall	_isdigit
 20558  1417  1C03               	btfss	3,0
 20559  1418  2C32               	goto	l5649
 20560  1419  2BEB               	goto	l5633
 20561  141A                     l5641:	
 20562                           ;doprnt.c: 604: } else if(*f == '*') {
 20563                           
 20564  141A  0021               	movlb	1	; select bank1
 20565  141B  082E               	movf	sprintf@f^(0+128),w
 20566  141C  0084               	movwf	4
 20567  141D  082F               	movf	(sprintf@f+1)^(0+128),w
 20568  141E  0085               	movwf	5
 20569  141F  0012               	moviw fsr0++
 20570  1420  3A2A               	xorlw	42
 20571  1421  1D03               	btfss	3,2
 20572  1422  2C32               	goto	l5649
 20573                           
 20574                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 20575  1423  0846               	movf	sprintf@ap^(0+128),w
 20576  1424  0086               	movwf	6
 20577  1425  0187               	clrf	7
 20578  1426  3F40               	moviw [0]fsr1
 20579  1427  00CA               	movwf	sprintf@width^(0+128)
 20580  1428  3F41               	moviw [1]fsr1
 20581  1429  00CB               	movwf	(sprintf@width+1)^(0+128)
 20582  142A  3002               	movlw	2
 20583  142B  00B8               	movwf	??_sprintf^(0+128)
 20584  142C  0838               	movf	??_sprintf^(0+128),w
 20585  142D  07C6               	addwf	sprintf@ap^(0+128),f
 20586                           
 20587                           ;doprnt.c: 606: f++;
 20588  142E  3001               	movlw	1
 20589  142F  07AE               	addwf	sprintf@f^(0+128),f
 20590  1430  3000               	movlw	0
 20591  1431  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20592  1432                     l5649:	
 20593                           
 20594                           ;doprnt.c: 608: }
 20595                           ;doprnt.c: 611: if(*f == '.') {
 20596  1432  0021               	movlb	1	; select bank1
 20597  1433  082E               	movf	sprintf@f^(0+128),w
 20598  1434  0084               	movwf	4
 20599  1435  082F               	movf	(sprintf@f+1)^(0+128),w
 20600  1436  0085               	movwf	5
 20601  1437  0012               	moviw fsr0++
 20602  1438  3A2E               	xorlw	46
 20603  1439  1D03               	btfss	3,2
 20604  143A  2C7D               	goto	l5671
 20605                           
 20606                           ;doprnt.c: 612: flag |= 0x4000;
 20607  143B  174E               	bsf	(sprintf@flag^(0+128)+1),6
 20608                           
 20609                           ;doprnt.c: 613: f++;
 20610  143C  3001               	movlw	1
 20611  143D  07AE               	addwf	sprintf@f^(0+128),f
 20612  143E  3000               	movlw	0
 20613  143F  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20614                           
 20615                           ;doprnt.c: 615: if(*f == '*') {
 20616  1440  082E               	movf	sprintf@f^(0+128),w
 20617  1441  0084               	movwf	4
 20618  1442  082F               	movf	(sprintf@f+1)^(0+128),w
 20619  1443  0085               	movwf	5
 20620  1444  0012               	moviw fsr0++
 20621  1445  3A2A               	xorlw	42
 20622  1446  1D03               	btfss	3,2
 20623  1447  2C58               	goto	l5663
 20624                           
 20625                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 20626  1448  0846               	movf	sprintf@ap^(0+128),w
 20627  1449  0086               	movwf	6
 20628  144A  0187               	clrf	7
 20629  144B  0801               	movf	1,w
 20630  144C  00B8               	movwf	??_sprintf^(0+128)
 20631  144D  0838               	movf	??_sprintf^(0+128),w
 20632  144E  00C9               	movwf	sprintf@prec^(0+128)
 20633  144F  3002               	movlw	2
 20634  1450  00B8               	movwf	??_sprintf^(0+128)
 20635  1451  0838               	movf	??_sprintf^(0+128),w
 20636  1452  07C6               	addwf	sprintf@ap^(0+128),f
 20637                           
 20638                           ;doprnt.c: 617: f++;
 20639  1453  3001               	movlw	1
 20640  1454  07AE               	addwf	sprintf@f^(0+128),f
 20641  1455  3000               	movlw	0
 20642  1456  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20643                           
 20644                           ;doprnt.c: 618: } else
 20645  1457  2D13               	goto	l5723
 20646  1458                     l5663:	
 20647                           
 20648                           ;doprnt.c: 620: {
 20649                           ;doprnt.c: 621: prec = 0;
 20650  1458  01C9               	clrf	sprintf@prec^(0+128)
 20651  1459                     l5669:	
 20652                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 20653                           
 20654  1459  082E               	movf	sprintf@f^(0+128),w
 20655  145A  0084               	movwf	4
 20656  145B  082F               	movf	(sprintf@f+1)^(0+128),w
 20657  145C  0085               	movwf	5
 20658  145D  0800               	movf	0,w	;code access
 20659  145E  31B5  2554  3193   	fcall	_isdigit
 20660  1461  1C03               	btfss	3,0
 20661  1462  2D13               	goto	l5723
 20662                           
 20663                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 20664  1463  0021               	movlb	1	; select bank1
 20665  1464  082E               	movf	sprintf@f^(0+128),w
 20666  1465  0084               	movwf	4
 20667  1466  082F               	movf	(sprintf@f+1)^(0+128),w
 20668  1467  0085               	movwf	5
 20669  1468  0800               	movf	0,w	;code access
 20670  1469  00B8               	movwf	??_sprintf^(0+128)
 20671  146A  300A               	movlw	10
 20672  146B  00B9               	movwf	(??_sprintf+1)^(0+128)
 20673  146C  0839               	movf	(??_sprintf+1)^(0+128),w
 20674  146D  00A0               	movwf	___bmul@multiplicand^(0+128)
 20675  146E  0849               	movf	sprintf@prec^(0+128),w
 20676  146F  31B5  2595  3193   	fcall	___bmul
 20677  1472  0021               	movlb	1	; select bank1
 20678  1473  0738               	addwf	??_sprintf^(0+128),w
 20679  1474  3ED0               	addlw	-48
 20680  1475  00BA               	movwf	(??_sprintf+2)^(0+128)
 20681  1476  083A               	movf	(??_sprintf+2)^(0+128),w
 20682  1477  00C9               	movwf	sprintf@prec^(0+128)
 20683  1478  3001               	movlw	1
 20684  1479  07AE               	addwf	sprintf@f^(0+128),f
 20685  147A  3000               	movlw	0
 20686  147B  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 20687  147C  2C59               	goto	l5669
 20688  147D                     l5671:	
 20689                           ;doprnt.c: 624: }
 20690                           ;doprnt.c: 625: } else {
 20691                           
 20692                           
 20693                           ;doprnt.c: 626: prec = 0;
 20694  147D  0021               	movlb	1	; select bank1
 20695  147E  01C9               	clrf	sprintf@prec^(0+128)
 20696                           
 20697                           ;doprnt.c: 630: }
 20698                           ;doprnt.c: 635: switch(c = *f++) {
 20699  147F  2D13               	goto	l5723
 20700  1480                     l1218:	
 20701                           ;doprnt.c: 689: case 'o':
 20702                           
 20703                           ;doprnt.c: 638: goto alldone;
 20704                           
 20705                           ;doprnt.c: 637: case 0:
 20706                           
 20707                           
 20708                           ;doprnt.c: 691: flag |= 0x40;
 20709  1480  174D               	bsf	sprintf@flag^(0+128),6
 20710                           
 20711                           ;doprnt.c: 698: case 'i':
 20712                           ;doprnt.c: 699: break;
 20713                           
 20714                           ;doprnt.c: 697: case 'd':
 20715                           
 20716                           ;doprnt.c: 693: break;
 20717  1481  2D3A               	goto	l5725
 20718  1482                     l1222:	
 20719                           ;doprnt.c: 712: case 'X':
 20720                           
 20721                           
 20722                           ;doprnt.c: 714: flag |= 0x20;
 20723  1482  16CD               	bsf	sprintf@flag^(0+128),5
 20724  1483                     l1223:	
 20725                           ;doprnt.c: 718: case 'x':
 20726                           
 20727                           
 20728                           ;doprnt.c: 721: flag |= 0x80;
 20729  1483  17CD               	bsf	sprintf@flag^(0+128),7
 20730                           
 20731                           ;doprnt.c: 723: break;
 20732  1484  2D3A               	goto	l5725
 20733  1485                     l5673:	
 20734                           ;doprnt.c: 750: dostring:
 20735                           
 20736                           
 20737                           ;doprnt.c: 753: if(prec && prec < len)
 20738  1485  0849               	movf	sprintf@prec^(0+128),w
 20739  1486  1903               	btfsc	3,2
 20740  1487  2C9A               	goto	l5679
 20741  1488  0849               	movf	sprintf@prec^(0+128),w
 20742  1489  00B8               	movwf	??_sprintf^(0+128)
 20743  148A  01B9               	clrf	(??_sprintf^(0+128)+1)
 20744  148B  1BB8               	btfsc	??_sprintf^(0+128),7
 20745  148C  03B9               	decf	(??_sprintf^(0+128)+1),f
 20746  148D  0845               	movf	(sprintf@len+1)^(0+128),w
 20747  148E  0239               	subwf	(??_sprintf+1)^(0+128),w
 20748  148F  1D03               	skipz
 20749  1490  2C93               	goto	u5365
 20750  1491  0844               	movf	sprintf@len^(0+128),w
 20751  1492  0238               	subwf	??_sprintf^(0+128),w
 20752  1493                     u5365:	
 20753  1493  1803               	skipnc
 20754  1494  2C9A               	goto	l5679
 20755                           
 20756                           ;doprnt.c: 754: len = prec;
 20757  1495  0849               	movf	sprintf@prec^(0+128),w
 20758  1496  00C4               	movwf	sprintf@len^(0+128)
 20759  1497  01C5               	clrf	(sprintf@len+1)^(0+128)
 20760  1498  1BC4               	btfsc	sprintf@len^(0+128),7
 20761  1499  03C5               	decf	(sprintf@len+1)^(0+128),f
 20762  149A                     l5679:	
 20763                           
 20764                           ;doprnt.c: 757: if(width > len)
 20765  149A  084B               	movf	(sprintf@width+1)^(0+128),w
 20766  149B  0245               	subwf	(sprintf@len+1)^(0+128),w
 20767  149C  1D03               	skipz
 20768  149D  2CA0               	goto	u5375
 20769  149E  084A               	movf	sprintf@width^(0+128),w
 20770  149F  0244               	subwf	sprintf@len^(0+128),w
 20771  14A0                     u5375:	
 20772  14A0  1803               	skipnc
 20773  14A1  2CA7               	goto	l5683
 20774                           
 20775                           ;doprnt.c: 758: width -= len;
 20776  14A2  0844               	movf	sprintf@len^(0+128),w
 20777  14A3  02CA               	subwf	sprintf@width^(0+128),f
 20778  14A4  0845               	movf	(sprintf@len+1)^(0+128),w
 20779  14A5  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 20780  14A6  2CA9               	goto	l5685
 20781  14A7                     l5683:	
 20782                           
 20783                           ;doprnt.c: 759: else
 20784                           ;doprnt.c: 760: width = 0;
 20785  14A7  01CA               	clrf	sprintf@width^(0+128)
 20786  14A8  01CB               	clrf	(sprintf@width+1)^(0+128)
 20787  14A9                     l5685:	
 20788                           
 20789                           ;doprnt.c: 762: if(!(flag & 0x08))
 20790  14A9  1DCD               	btfss	sprintf@flag^(0+128),3
 20791  14AA  2CB8               	goto	l5693
 20792  14AB  2CD6               	goto	l5701
 20793  14AC                     l5689:	
 20794                           ;doprnt.c: 764: while(width--)
 20795                           
 20796                           
 20797                           ;doprnt.c: 765: ((*sp++ = (' ')));
 20798  14AC  3020               	movlw	32
 20799  14AD  00B8               	movwf	??_sprintf^(0+128)
 20800  14AE  084F               	movf	sprintf@sp^(0+128),w
 20801  14AF  0086               	movwf	6
 20802  14B0  3002               	movlw	2	; select bank4/5
 20803  14B1  0087               	movwf	7
 20804  14B2  0838               	movf	??_sprintf^(0+128),w
 20805  14B3  0081               	movwf	1
 20806  14B4  3001               	movlw	1
 20807  14B5  00B8               	movwf	??_sprintf^(0+128)
 20808  14B6  0838               	movf	??_sprintf^(0+128),w
 20809  14B7  07CF               	addwf	sprintf@sp^(0+128),f
 20810  14B8                     l5693:	
 20811  14B8  30FF               	movlw	255
 20812  14B9  07CA               	addwf	sprintf@width^(0+128),f
 20813  14BA  30FF               	movlw	255
 20814  14BB  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 20815  14BC  0A4A               	incf	sprintf@width^(0+128),w
 20816  14BD  1D03               	skipz
 20817  14BE  2CAC               	goto	l5689
 20818  14BF  0A4B               	incf	(sprintf@width+1)^(0+128),w
 20819  14C0  1903               	btfsc	3,2
 20820  14C1  2CD6               	goto	l5701
 20821  14C2  2CAC               	goto	l5689
 20822  14C3                     l5695:	
 20823                           ;doprnt.c: 767: while(len--)
 20824                           
 20825                           
 20826                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 20827  14C3  0843               	movf	sprintf@cp^(0+128),w
 20828  14C4  0086               	movwf	6
 20829  14C5  0187               	clrf	7
 20830  14C6  0801               	movf	1,w
 20831  14C7  00B8               	movwf	??_sprintf^(0+128)
 20832  14C8  084F               	movf	sprintf@sp^(0+128),w
 20833  14C9  0086               	movwf	6
 20834  14CA  3002               	movlw	2	; select bank4/5
 20835  14CB  0087               	movwf	7
 20836  14CC  0838               	movf	??_sprintf^(0+128),w
 20837  14CD  0081               	movwf	1
 20838  14CE  3001               	movlw	1
 20839  14CF  00B8               	movwf	??_sprintf^(0+128)
 20840  14D0  0838               	movf	??_sprintf^(0+128),w
 20841  14D1  07C3               	addwf	sprintf@cp^(0+128),f
 20842  14D2  3001               	movlw	1
 20843  14D3  00B8               	movwf	??_sprintf^(0+128)
 20844  14D4  0838               	movf	??_sprintf^(0+128),w
 20845  14D5  07CF               	addwf	sprintf@sp^(0+128),f
 20846  14D6                     l5701:	
 20847  14D6  3001               	movlw	1
 20848  14D7  02C4               	subwf	sprintf@len^(0+128),f
 20849  14D8  3000               	movlw	0
 20850  14D9  3BC5               	subwfb	(sprintf@len+1)^(0+128),f
 20851  14DA  0A44               	incf	sprintf@len^(0+128),w
 20852  14DB  1D03               	skipz
 20853  14DC  2CC3               	goto	l5695
 20854  14DD  0A45               	incf	(sprintf@len+1)^(0+128),w
 20855  14DE  1D03               	btfss	3,2
 20856  14DF  2CC3               	goto	l5695
 20857                           
 20858                           ;doprnt.c: 770: if(flag & 0x08)
 20859  14E0  19CD               	btfsc	sprintf@flag^(0+128),3
 20860  14E1  2CEF               	goto	l5709
 20861  14E2  2B92               	goto	l5933
 20862  14E3                     l5705:	
 20863                           ;doprnt.c: 771: while(width--)
 20864                           
 20865                           
 20866                           ;doprnt.c: 772: ((*sp++ = (' ')));
 20867  14E3  3020               	movlw	32
 20868  14E4  00B8               	movwf	??_sprintf^(0+128)
 20869  14E5  084F               	movf	sprintf@sp^(0+128),w
 20870  14E6  0086               	movwf	6
 20871  14E7  3002               	movlw	2	; select bank4/5
 20872  14E8  0087               	movwf	7
 20873  14E9  0838               	movf	??_sprintf^(0+128),w
 20874  14EA  0081               	movwf	1
 20875  14EB  3001               	movlw	1
 20876  14EC  00B8               	movwf	??_sprintf^(0+128)
 20877  14ED  0838               	movf	??_sprintf^(0+128),w
 20878  14EE  07CF               	addwf	sprintf@sp^(0+128),f
 20879  14EF                     l5709:	
 20880  14EF  30FF               	movlw	255
 20881  14F0  07CA               	addwf	sprintf@width^(0+128),f
 20882  14F1  30FF               	movlw	255
 20883  14F2  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 20884  14F3  0A4A               	incf	sprintf@width^(0+128),w
 20885  14F4  1D03               	skipz
 20886  14F5  2CE3               	goto	l5705
 20887  14F6  0A4B               	incf	(sprintf@width+1)^(0+128),w
 20888  14F7  1903               	btfsc	3,2
 20889  14F8  2B92               	goto	l5933
 20890  14F9  2CE3               	goto	l5705
 20891  14FA                     l5711:	
 20892                           ;doprnt.c: 784: case 'c':
 20893                           
 20894                           ;doprnt.c: 774: continue;
 20895                           
 20896                           
 20897                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20898  14FA  0846               	movf	sprintf@ap^(0+128),w
 20899  14FB  0086               	movwf	6
 20900  14FC  0187               	clrf	7
 20901  14FD  0801               	movf	1,w
 20902  14FE  00B8               	movwf	??_sprintf^(0+128)
 20903  14FF  0838               	movf	??_sprintf^(0+128),w
 20904  1500  00CC               	movwf	sprintf@c^(0+128)
 20905  1501  3002               	movlw	2
 20906  1502  00B8               	movwf	??_sprintf^(0+128)
 20907  1503  0838               	movf	??_sprintf^(0+128),w
 20908  1504  07C6               	addwf	sprintf@ap^(0+128),f
 20909  1505                     l5715:	
 20910                           ;doprnt.c: 802: default:
 20911                           
 20912                           
 20913                           ;doprnt.c: 805: cp = (char *)&c;
 20914  1505  30CC               	movlw	(low (sprintf@c| 0))& (0+255)
 20915  1506  00B8               	movwf	??_sprintf^(0+128)
 20916  1507  0838               	movf	??_sprintf^(0+128),w
 20917  1508  00C3               	movwf	sprintf@cp^(0+128)
 20918                           
 20919                           ;doprnt.c: 806: len = 1;
 20920  1509  3001               	movlw	1
 20921  150A  00C4               	movwf	sprintf@len^(0+128)
 20922  150B  3000               	movlw	0
 20923  150C  00C5               	movwf	(sprintf@len^(0+128)+1)
 20924                           
 20925                           ;doprnt.c: 807: goto dostring;
 20926  150D  2C85               	goto	l5673
 20927  150E                     l5719:	
 20928                           ;doprnt.c: 817: case 'u':
 20929                           
 20930                           
 20931                           ;doprnt.c: 818: flag |= 0xC0;
 20932  150E  30C0               	movlw	192
 20933  150F  04CD               	iorwf	sprintf@flag^(0+128),f
 20934  1510  3000               	movlw	0
 20935  1511  04CE               	iorwf	(sprintf@flag+1)^(0+128),f
 20936                           
 20937                           ;doprnt.c: 822: }
 20938                           
 20939                           ;doprnt.c: 819: break;
 20940  1512  2D3A               	goto	l5725
 20941  1513                     l5723:	
 20942  1513  0021               	movlb	1	; select bank1
 20943  1514  082F               	movf	(sprintf@f+1)^(0+128),w
 20944  1515  00B9               	movwf	(??_sprintf^(0+128)+1)
 20945  1516  082E               	movf	sprintf@f^(0+128),w
 20946  1517  00B8               	movwf	??_sprintf^(0+128)
 20947  1518  0AAE               	incf	sprintf@f^(0+128),f
 20948  1519  1903               	skipnz
 20949  151A  0AAF               	incf	(sprintf@f+1)^(0+128),f
 20950  151B  0838               	movf	??_sprintf^(0+128),w
 20951  151C  0084               	movwf	4
 20952  151D  0839               	movf	(??_sprintf+1)^(0+128),w
 20953  151E  0085               	movwf	5
 20954  151F  0800               	movf	0,w	;code access
 20955  1520  00CC               	movwf	sprintf@c^(0+128)
 20956                           
 20957                           ; Switch size 1, requested type "space"
 20958                           ; Number of cases is 8, Range of values is 0 to 120
 20959                           ; switch strategies available:
 20960                           ; Name         Instructions Cycles
 20961                           ; simple_byte           25    13 (average)
 20962                           ; direct_byte          248     6 (fixed)
 20963                           ; jumptable            260     6 (fixed)
 20964                           ;	Chosen strategy is simple_byte
 20965  1521  3A00               	xorlw	0	; case 0
 20966  1522  1903               	skipnz
 20967  1523  2FFA               	goto	l5935
 20968  1524  3A58               	xorlw	88	; case 88
 20969  1525  1903               	skipnz
 20970  1526  2C82               	goto	l1222
 20971  1527  3A3B               	xorlw	59	; case 99
 20972  1528  1903               	skipnz
 20973  1529  2CFA               	goto	l5711
 20974  152A  3A07               	xorlw	7	; case 100
 20975  152B  1903               	skipnz
 20976  152C  2D3A               	goto	l5725
 20977  152D  3A0D               	xorlw	13	; case 105
 20978  152E  1903               	skipnz
 20979  152F  2D3A               	goto	l5725
 20980  1530  3A06               	xorlw	6	; case 111
 20981  1531  1903               	skipnz
 20982  1532  2C80               	goto	l1218
 20983  1533  3A1A               	xorlw	26	; case 117
 20984  1534  1903               	skipnz
 20985  1535  2D0E               	goto	l5719
 20986  1536  3A0D               	xorlw	13	; case 120
 20987  1537  1903               	skipnz
 20988  1538  2C83               	goto	l1223
 20989  1539  2D05               	goto	l5715
 20990  153A                     l5725:	
 20991                           
 20992                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 20993  153A  30C0               	movlw	192
 20994  153B  054D               	andwf	sprintf@flag^(0+128),w
 20995  153C  00B8               	movwf	??_sprintf^(0+128)
 20996  153D  3000               	movlw	0
 20997  153E  054E               	andwf	(sprintf@flag+1)^(0+128),w
 20998  153F  00B9               	movwf	(??_sprintf+1)^(0+128)
 20999  1540  0838               	movf	??_sprintf^(0+128),w
 21000  1541  0439               	iorwf	(??_sprintf^(0+128)+1),w
 21001  1542  1D03               	btfss	3,2
 21002  1543  2D5B               	goto	l5737
 21003                           
 21004                           ;doprnt.c: 1253: {
 21005                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 21006  1544  0846               	movf	sprintf@ap^(0+128),w
 21007  1545  0086               	movwf	6
 21008  1546  0187               	clrf	7
 21009  1547  3F40               	moviw [0]fsr1
 21010  1548  00C7               	movwf	sprintf@val^(0+128)
 21011  1549  3F41               	moviw [1]fsr1
 21012  154A  00C8               	movwf	(sprintf@val+1)^(0+128)
 21013  154B  3002               	movlw	2
 21014  154C  00B8               	movwf	??_sprintf^(0+128)
 21015  154D  0838               	movf	??_sprintf^(0+128),w
 21016  154E  07C6               	addwf	sprintf@ap^(0+128),f
 21017                           
 21018                           ;doprnt.c: 1261: if((int)val < 0) {
 21019  154F  1FC8               	btfss	(sprintf@val+1)^(0+128),7
 21020  1550  2D66               	goto	l5741
 21021                           
 21022                           ;doprnt.c: 1262: flag |= 0x03;
 21023  1551  3003               	movlw	3
 21024  1552  04CD               	iorwf	sprintf@flag^(0+128),f
 21025  1553  3000               	movlw	0
 21026  1554  04CE               	iorwf	(sprintf@flag+1)^(0+128),f
 21027                           
 21028                           ;doprnt.c: 1263: val = -val;
 21029  1555  09C7               	comf	sprintf@val^(0+128),f
 21030  1556  09C8               	comf	(sprintf@val+1)^(0+128),f
 21031  1557  0AC7               	incf	sprintf@val^(0+128),f
 21032  1558  1903               	skipnz
 21033  1559  0AC8               	incf	(sprintf@val+1)^(0+128),f
 21034                           
 21035                           ;doprnt.c: 1264: }
 21036                           ;doprnt.c: 1266: }
 21037  155A  2D66               	goto	l5741
 21038  155B                     l5737:	
 21039                           
 21040                           ;doprnt.c: 1268: else
 21041                           ;doprnt.c: 1273: {
 21042                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21043  155B  0846               	movf	sprintf@ap^(0+128),w
 21044  155C  0086               	movwf	6
 21045  155D  0187               	clrf	7
 21046  155E  3F40               	moviw [0]fsr1
 21047  155F  00C7               	movwf	sprintf@val^(0+128)
 21048  1560  3F41               	moviw [1]fsr1
 21049  1561  00C8               	movwf	(sprintf@val+1)^(0+128)
 21050  1562  3002               	movlw	2
 21051  1563  00B8               	movwf	??_sprintf^(0+128)
 21052  1564  0838               	movf	??_sprintf^(0+128),w
 21053  1565  07C6               	addwf	sprintf@ap^(0+128),f
 21054  1566                     l5741:	
 21055                           
 21056                           ;doprnt.c: 1287: }
 21057                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21058  1566  0849               	movf	sprintf@prec^(0+128),w
 21059  1567  1D03               	btfss	3,2
 21060  1568  2DD8               	goto	l5779
 21061  1569  0847               	movf	sprintf@val^(0+128),w
 21062  156A  0448               	iorwf	(sprintf@val+1)^(0+128),w
 21063  156B  1D03               	btfss	3,2
 21064  156C  2DD8               	goto	l5779
 21065                           
 21066                           ;doprnt.c: 1291: prec++;
 21067  156D  3001               	movlw	1
 21068  156E  00B8               	movwf	??_sprintf^(0+128)
 21069  156F  0838               	movf	??_sprintf^(0+128),w
 21070  1570  07C9               	addwf	sprintf@prec^(0+128),f
 21071                           
 21072                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21073  1571  2DD8               	goto	l5779
 21074  1572                     l1248:	
 21075                           ;doprnt.c: 1299: case 0x00:
 21076                           
 21077                           
 21078                           ;doprnt.c: 1302: case 0xC0:
 21079                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21080  1572  01CC               	clrf	sprintf@c^(0+128)
 21081  1573  0ACC               	incf	sprintf@c^(0+128),f
 21082  1574                     L14:	
 21083  1574  3005               	movlw	5
 21084  1575  064C               	xorwf	sprintf@c^(0+128),w
 21085  1576  1903               	btfsc	3,2
 21086  1577  2DE7               	goto	l5781
 21087                           
 21088                           ;doprnt.c: 1306: if(val < dpowers[c])
 21089  1578  084C               	movf	sprintf@c^(0+128),w
 21090  1579  00B8               	movwf	??_sprintf^(0+128)
 21091  157A  01B9               	clrf	(??_sprintf^(0+128)+1)
 21092  157B  35B8               	lslf	??_sprintf^(0+128),f
 21093  157C  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21094  157D  304C               	movlw	low (_dpowers| (0+32768))
 21095  157E  0738               	addwf	??_sprintf^(0+128),w
 21096  157F  0084               	movwf	4
 21097  1580  30A1               	movlw	high (_dpowers| (0+32768))
 21098  1581  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21099  1582  0085               	movwf	5
 21100  1583  3F00               	moviw [0]fsr0
 21101  1584  00BA               	movwf	(??_sprintf+2)^(0+128)
 21102  1585  3F01               	moviw [1]fsr0
 21103  1586  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 21104  1587  083B               	movf	(??_sprintf+3)^(0+128),w
 21105  1588  0248               	subwf	(sprintf@val+1)^(0+128),w
 21106  1589  1D03               	skipz
 21107  158A  2D8D               	goto	u5485
 21108  158B  083A               	movf	(??_sprintf+2)^(0+128),w
 21109  158C  0247               	subwf	sprintf@val^(0+128),w
 21110  158D                     u5485:	
 21111  158D  1C03               	btfss	3,0
 21112  158E  2DE7               	goto	l5781
 21113                           
 21114                           ;doprnt.c: 1307: break;
 21115  158F  3001               	movlw	1
 21116  1590  00B8               	movwf	??_sprintf^(0+128)
 21117  1591  0838               	movf	??_sprintf^(0+128),w
 21118  1592  07CC               	addwf	sprintf@c^(0+128),f
 21119  1593  2D74               	goto	L14
 21120  1594                     l1253:	
 21121                           ;doprnt.c: 1314: case 0x80:
 21122                           
 21123                           ;doprnt.c: 1309: break;
 21124                           
 21125                           
 21126                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21127  1594  01CC               	clrf	sprintf@c^(0+128)
 21128  1595  0ACC               	incf	sprintf@c^(0+128),f
 21129  1596                     L15:	
 21130  1596  3004               	movlw	4
 21131  1597  064C               	xorwf	sprintf@c^(0+128),w
 21132  1598  1903               	btfsc	3,2
 21133  1599  2DE7               	goto	l5781
 21134                           
 21135                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21136  159A  084C               	movf	sprintf@c^(0+128),w
 21137  159B  00B8               	movwf	??_sprintf^(0+128)
 21138  159C  01B9               	clrf	(??_sprintf^(0+128)+1)
 21139  159D  35B8               	lslf	??_sprintf^(0+128),f
 21140  159E  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21141  159F  3056               	movlw	low (_hexpowers| (0+32768))
 21142  15A0  0738               	addwf	??_sprintf^(0+128),w
 21143  15A1  0084               	movwf	4
 21144  15A2  30A1               	movlw	high (_hexpowers| (0+32768))
 21145  15A3  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21146  15A4  0085               	movwf	5
 21147  15A5  3F00               	moviw [0]fsr0
 21148  15A6  00BA               	movwf	(??_sprintf+2)^(0+128)
 21149  15A7  3F01               	moviw [1]fsr0
 21150  15A8  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 21151  15A9  083B               	movf	(??_sprintf+3)^(0+128),w
 21152  15AA  0248               	subwf	(sprintf@val+1)^(0+128),w
 21153  15AB  1D03               	skipz
 21154  15AC  2DAF               	goto	u5515
 21155  15AD  083A               	movf	(??_sprintf+2)^(0+128),w
 21156  15AE  0247               	subwf	sprintf@val^(0+128),w
 21157  15AF                     u5515:	
 21158  15AF  1C03               	btfss	3,0
 21159  15B0  2DE7               	goto	l5781
 21160                           
 21161                           ;doprnt.c: 1318: break;
 21162  15B1  3001               	movlw	1
 21163  15B2  00B8               	movwf	??_sprintf^(0+128)
 21164  15B3  0838               	movf	??_sprintf^(0+128),w
 21165  15B4  07CC               	addwf	sprintf@c^(0+128),f
 21166  15B5  2D96               	goto	L15
 21167  15B6                     l1257:	
 21168                           ;doprnt.c: 1326: case 0x40:
 21169                           
 21170                           ;doprnt.c: 1320: break;
 21171                           
 21172                           
 21173                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 21174  15B6  01CC               	clrf	sprintf@c^(0+128)
 21175  15B7  0ACC               	incf	sprintf@c^(0+128),f
 21176  15B8                     L16:	
 21177  15B8  3006               	movlw	6
 21178  15B9  064C               	xorwf	sprintf@c^(0+128),w
 21179  15BA  1903               	btfsc	3,2
 21180  15BB  2DE7               	goto	l5781
 21181                           
 21182                           ;doprnt.c: 1329: if(val < octpowers[c])
 21183  15BC  084C               	movf	sprintf@c^(0+128),w
 21184  15BD  00B8               	movwf	??_sprintf^(0+128)
 21185  15BE  01B9               	clrf	(??_sprintf^(0+128)+1)
 21186  15BF  35B8               	lslf	??_sprintf^(0+128),f
 21187  15C0  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21188  15C1  3040               	movlw	low (_octpowers| (0+32768))
 21189  15C2  0738               	addwf	??_sprintf^(0+128),w
 21190  15C3  0084               	movwf	4
 21191  15C4  30A1               	movlw	high (_octpowers| (0+32768))
 21192  15C5  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21193  15C6  0085               	movwf	5
 21194  15C7  3F00               	moviw [0]fsr0
 21195  15C8  00BA               	movwf	(??_sprintf+2)^(0+128)
 21196  15C9  3F01               	moviw [1]fsr0
 21197  15CA  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 21198  15CB  083B               	movf	(??_sprintf+3)^(0+128),w
 21199  15CC  0248               	subwf	(sprintf@val+1)^(0+128),w
 21200  15CD  1D03               	skipz
 21201  15CE  2DD1               	goto	u5545
 21202  15CF  083A               	movf	(??_sprintf+2)^(0+128),w
 21203  15D0  0247               	subwf	sprintf@val^(0+128),w
 21204  15D1                     u5545:	
 21205  15D1  1C03               	btfss	3,0
 21206  15D2  2DE7               	goto	l5781
 21207                           
 21208                           ;doprnt.c: 1330: break;
 21209  15D3  3001               	movlw	1
 21210  15D4  00B8               	movwf	??_sprintf^(0+128)
 21211  15D5  0838               	movf	??_sprintf^(0+128),w
 21212  15D6  07CC               	addwf	sprintf@c^(0+128),f
 21213  15D7  2DB8               	goto	L16
 21214  15D8                     l5779:	
 21215                           ;doprnt.c: 1336: }
 21216                           
 21217                           ;doprnt.c: 1332: break;
 21218                           
 21219  15D8  084D               	movf	sprintf@flag^(0+128),w
 21220  15D9  39C0               	andlw	192
 21221                           
 21222                           ; Switch size 1, requested type "space"
 21223                           ; Number of cases is 4, Range of values is 0 to 192
 21224                           ; switch strategies available:
 21225                           ; Name         Instructions Cycles
 21226                           ; simple_byte           13     7 (average)
 21227                           ; jumptable            260     6 (fixed)
 21228                           ;	Chosen strategy is simple_byte
 21229  15DA  3A00               	xorlw	0	; case 0
 21230  15DB  1903               	skipnz
 21231  15DC  2D72               	goto	l1248
 21232  15DD  3A40               	xorlw	64	; case 64
 21233  15DE  1903               	skipnz
 21234  15DF  2DB6               	goto	l1257
 21235  15E0  3AC0               	xorlw	192	; case 128
 21236  15E1  1903               	skipnz
 21237  15E2  2D94               	goto	l1253
 21238  15E3  3A40               	xorlw	64	; case 192
 21239  15E4  1903               	skipnz
 21240  15E5  2D72               	goto	l1248
 21241  15E6  2DE7               	goto	l5781
 21242  15E7                     l5781:	
 21243                           
 21244                           ;doprnt.c: 1339: if(c < prec)
 21245  15E7  084C               	movf	sprintf@c^(0+128),w
 21246  15E8  3A80               	xorlw	128
 21247  15E9  00B8               	movwf	??_sprintf^(0+128)
 21248  15EA  0849               	movf	sprintf@prec^(0+128),w
 21249  15EB  3A80               	xorlw	128
 21250  15EC  02B8               	subwf	??_sprintf^(0+128),f
 21251  15ED  1803               	skipnc
 21252  15EE  2DF4               	goto	l5785
 21253                           
 21254                           ;doprnt.c: 1340: c = prec;
 21255  15EF  0849               	movf	sprintf@prec^(0+128),w
 21256  15F0  00B8               	movwf	??_sprintf^(0+128)
 21257  15F1  0838               	movf	??_sprintf^(0+128),w
 21258  15F2  00CC               	movwf	sprintf@c^(0+128)
 21259  15F3  2E00               	goto	l5789
 21260  15F4                     l5785:	
 21261                           
 21262                           ;doprnt.c: 1341: else if(prec < c)
 21263  15F4  0849               	movf	sprintf@prec^(0+128),w
 21264  15F5  3A80               	xorlw	128
 21265  15F6  00B8               	movwf	??_sprintf^(0+128)
 21266  15F7  084C               	movf	sprintf@c^(0+128),w
 21267  15F8  3A80               	xorlw	128
 21268  15F9  02B8               	subwf	??_sprintf^(0+128),f
 21269  15FA  1803               	skipnc
 21270  15FB  2E00               	goto	l5789
 21271                           
 21272                           ;doprnt.c: 1342: prec = c;
 21273  15FC  084C               	movf	sprintf@c^(0+128),w
 21274  15FD  00B8               	movwf	??_sprintf^(0+128)
 21275  15FE  0838               	movf	??_sprintf^(0+128),w
 21276  15FF  00C9               	movwf	sprintf@prec^(0+128)
 21277  1600                     l5789:	
 21278                           
 21279                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21280  1600  084A               	movf	sprintf@width^(0+128),w
 21281  1601  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21282  1602  1903               	btfsc	3,2
 21283  1603  2E12               	goto	l5795
 21284  1604  3003               	movlw	3
 21285  1605  054D               	andwf	sprintf@flag^(0+128),w
 21286  1606  00B8               	movwf	??_sprintf^(0+128)
 21287  1607  3000               	movlw	0
 21288  1608  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21289  1609  00B9               	movwf	(??_sprintf+1)^(0+128)
 21290  160A  0838               	movf	??_sprintf^(0+128),w
 21291  160B  0439               	iorwf	(??_sprintf^(0+128)+1),w
 21292  160C  1903               	btfsc	3,2
 21293  160D  2E12               	goto	l5795
 21294                           
 21295                           ;doprnt.c: 1346: width--;
 21296  160E  30FF               	movlw	255
 21297  160F  07CA               	addwf	sprintf@width^(0+128),f
 21298  1610  30FF               	movlw	255
 21299  1611  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 21300  1612                     l5795:	
 21301                           
 21302                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21303  1612  1F4E               	btfss	(sprintf@flag+1)^(0+128),6
 21304  1613  2E33               	goto	l5803
 21305                           
 21306                           ;doprnt.c: 1349: if(width > prec)
 21307  1614  0849               	movf	sprintf@prec^(0+128),w
 21308  1615  00B8               	movwf	??_sprintf^(0+128)
 21309  1616  01B9               	clrf	(??_sprintf^(0+128)+1)
 21310  1617  1BB8               	btfsc	??_sprintf^(0+128),7
 21311  1618  03B9               	decf	(??_sprintf^(0+128)+1),f
 21312  1619  0839               	movf	(??_sprintf+1)^(0+128),w
 21313  161A  3A80               	xorlw	128
 21314  161B  00BA               	movwf	(??_sprintf+2)^(0+128)
 21315  161C  084B               	movf	(sprintf@width+1)^(0+128),w
 21316  161D  3A80               	xorlw	128
 21317  161E  023A               	subwf	(??_sprintf+2)^(0+128),w
 21318  161F  1D03               	skipz
 21319  1620  2E23               	goto	u5615
 21320  1621  084A               	movf	sprintf@width^(0+128),w
 21321  1622  0238               	subwf	??_sprintf^(0+128),w
 21322  1623                     u5615:	
 21323  1623  1803               	skipnc
 21324  1624  2E30               	goto	l5801
 21325                           
 21326                           ;doprnt.c: 1350: width -= prec;
 21327  1625  0021               	movlb	1	; select bank1
 21328  1626  0849               	movf	sprintf@prec^(0+128),w
 21329  1627  00B8               	movwf	??_sprintf^(0+128)
 21330  1628  01B9               	clrf	(??_sprintf^(0+128)+1)
 21331  1629  1BB8               	btfsc	??_sprintf^(0+128),7
 21332  162A  03B9               	decf	(??_sprintf^(0+128)+1),f
 21333  162B  0838               	movf	??_sprintf^(0+128),w
 21334  162C  02CA               	subwf	sprintf@width^(0+128),f
 21335  162D  0839               	movf	(??_sprintf+1)^(0+128),w
 21336  162E  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 21337  162F  2E33               	goto	l5803
 21338  1630                     l5801:	
 21339                           
 21340                           ;doprnt.c: 1351: else
 21341                           ;doprnt.c: 1352: width = 0;
 21342  1630  0021               	movlb	1	; select bank1
 21343  1631  01CA               	clrf	sprintf@width^(0+128)
 21344  1632  01CB               	clrf	(sprintf@width+1)^(0+128)
 21345  1633                     l5803:	
 21346                           
 21347                           ;doprnt.c: 1353: }
 21348                           ;doprnt.c: 1357: if((flag & (
 21349                           ;doprnt.c: 1359: 0x04|
 21350                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 21351  1633  30C4               	movlw	196
 21352  1634  054D               	andwf	sprintf@flag^(0+128),w
 21353  1635  00B8               	movwf	??_sprintf^(0+128)
 21354  1636  3008               	movlw	8
 21355  1637  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21356  1638  00B9               	movwf	(??_sprintf+1)^(0+128)
 21357  1639  3040               	movlw	64
 21358  163A  0638               	xorwf	??_sprintf^(0+128),w
 21359  163B  3008               	movlw	8
 21360  163C  1903               	skipnz
 21361  163D  0639               	xorwf	(??_sprintf^(0+128)+1),w
 21362  163E  1D03               	btfss	3,2
 21363  163F  2E46               	goto	l5809
 21364                           
 21365                           ;doprnt.c: 1362: if(width)
 21366  1640  084A               	movf	sprintf@width^(0+128),w
 21367  1641  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21368  1642  1903               	btfsc	3,2
 21369  1643  2E67               	goto	l5817
 21370                           
 21371                           ;doprnt.c: 1363: width--;
 21372  1644  30FF               	movlw	255
 21373  1645  2E60               	goto	L8
 21374  1646                     l5809:	
 21375                           ;doprnt.c: 1364: } else
 21376                           
 21377                           
 21378                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21379  1646  30C0               	movlw	192
 21380  1647  054D               	andwf	sprintf@flag^(0+128),w
 21381  1648  00B8               	movwf	??_sprintf^(0+128)
 21382  1649  3008               	movlw	8
 21383  164A  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21384  164B  00B9               	movwf	(??_sprintf+1)^(0+128)
 21385  164C  3080               	movlw	128
 21386  164D  0638               	xorwf	??_sprintf^(0+128),w
 21387  164E  3008               	movlw	8
 21388  164F  1903               	skipnz
 21389  1650  0639               	xorwf	(??_sprintf^(0+128)+1),w
 21390  1651  1D03               	btfss	3,2
 21391  1652  2E67               	goto	l5817
 21392                           
 21393                           ;doprnt.c: 1372: if(width > 2)
 21394  1653  084B               	movf	(sprintf@width+1)^(0+128),w
 21395  1654  3A80               	xorlw	128
 21396  1655  00B8               	movwf	??_sprintf^(0+128)
 21397  1656  3080               	movlw	128
 21398  1657  0238               	subwf	??_sprintf^(0+128),w
 21399  1658  1D03               	skipz
 21400  1659  2E5C               	goto	u5655
 21401  165A  3003               	movlw	3
 21402  165B  024A               	subwf	sprintf@width^(0+128),w
 21403  165C                     u5655:	
 21404  165C  1C03               	skipc
 21405  165D  2E64               	goto	l5815
 21406                           
 21407                           ;doprnt.c: 1373: width -= 2;
 21408  165E  30FE               	movlw	254
 21409  165F  0021               	movlb	1	; select bank1
 21410  1660                     L8:	
 21411  1660  07CA               	addwf	sprintf@width^(0+128),f
 21412  1661  30FF               	movlw	255
 21413  1662  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 21414  1663  2E67               	goto	l5817
 21415  1664                     l5815:	
 21416                           
 21417                           ;doprnt.c: 1374: else
 21418                           ;doprnt.c: 1375: width = 0;
 21419  1664  0021               	movlb	1	; select bank1
 21420  1665  01CA               	clrf	sprintf@width^(0+128)
 21421  1666  01CB               	clrf	(sprintf@width+1)^(0+128)
 21422  1667                     l5817:	
 21423                           
 21424                           ;doprnt.c: 1376: }
 21425                           ;doprnt.c: 1381: if(width > c)
 21426  1667  084C               	movf	sprintf@c^(0+128),w
 21427  1668  00B8               	movwf	??_sprintf^(0+128)
 21428  1669  01B9               	clrf	(??_sprintf^(0+128)+1)
 21429  166A  1BB8               	btfsc	??_sprintf^(0+128),7
 21430  166B  03B9               	decf	(??_sprintf^(0+128)+1),f
 21431  166C  0839               	movf	(??_sprintf+1)^(0+128),w
 21432  166D  3A80               	xorlw	128
 21433  166E  00BA               	movwf	(??_sprintf+2)^(0+128)
 21434  166F  084B               	movf	(sprintf@width+1)^(0+128),w
 21435  1670  3A80               	xorlw	128
 21436  1671  023A               	subwf	(??_sprintf+2)^(0+128),w
 21437  1672  1D03               	skipz
 21438  1673  2E76               	goto	u5665
 21439  1674  084A               	movf	sprintf@width^(0+128),w
 21440  1675  0238               	subwf	??_sprintf^(0+128),w
 21441  1676                     u5665:	
 21442  1676  1803               	skipnc
 21443  1677  2E83               	goto	l5821
 21444                           
 21445                           ;doprnt.c: 1382: width -= c;
 21446  1678  0021               	movlb	1	; select bank1
 21447  1679  084C               	movf	sprintf@c^(0+128),w
 21448  167A  00B8               	movwf	??_sprintf^(0+128)
 21449  167B  01B9               	clrf	(??_sprintf^(0+128)+1)
 21450  167C  1BB8               	btfsc	??_sprintf^(0+128),7
 21451  167D  03B9               	decf	(??_sprintf^(0+128)+1),f
 21452  167E  0838               	movf	??_sprintf^(0+128),w
 21453  167F  02CA               	subwf	sprintf@width^(0+128),f
 21454  1680  0839               	movf	(??_sprintf+1)^(0+128),w
 21455  1681  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 21456  1682  2E86               	goto	l5823
 21457  1683                     l5821:	
 21458                           
 21459                           ;doprnt.c: 1383: else
 21460                           ;doprnt.c: 1384: width = 0;
 21461  1683  0021               	movlb	1	; select bank1
 21462  1684  01CA               	clrf	sprintf@width^(0+128)
 21463  1685  01CB               	clrf	(sprintf@width+1)^(0+128)
 21464  1686                     l5823:	
 21465                           
 21466                           ;doprnt.c: 1387: if(flag & 0x04) {
 21467  1686  1D4D               	btfss	sprintf@flag^(0+128),2
 21468  1687  2EDA               	goto	l5859
 21469                           
 21470                           ;doprnt.c: 1392: if(flag & 0x03)
 21471  1688  3003               	movlw	3
 21472  1689  054D               	andwf	sprintf@flag^(0+128),w
 21473  168A  00B8               	movwf	??_sprintf^(0+128)
 21474  168B  3000               	movlw	0
 21475  168C  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21476  168D  00B9               	movwf	(??_sprintf+1)^(0+128)
 21477  168E  0838               	movf	??_sprintf^(0+128),w
 21478  168F  0439               	iorwf	(??_sprintf^(0+128)+1),w
 21479  1690  1903               	btfsc	3,2
 21480  1691  2E94               	goto	l1277
 21481                           
 21482                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 21483  1692  302D               	movlw	45
 21484  1693  2EBA               	goto	L17
 21485  1694                     l1277:	
 21486                           
 21487                           ;doprnt.c: 1396: else
 21488                           ;doprnt.c: 1399: if(flag & 0x01)
 21489  1694  1C4D               	btfss	sprintf@flag^(0+128),0
 21490  1695  2E98               	goto	l5835
 21491                           
 21492                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 21493  1696  3020               	movlw	32
 21494  1697  2EBA               	goto	L17
 21495  1698                     l5835:	
 21496                           
 21497                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21498  1698  30C0               	movlw	192
 21499  1699  054D               	andwf	sprintf@flag^(0+128),w
 21500  169A  00B8               	movwf	??_sprintf^(0+128)
 21501  169B  3008               	movlw	8
 21502  169C  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21503  169D  00B9               	movwf	(??_sprintf+1)^(0+128)
 21504  169E  3080               	movlw	128
 21505  169F  0638               	xorwf	??_sprintf^(0+128),w
 21506  16A0  3008               	movlw	8
 21507  16A1  1903               	skipnz
 21508  16A2  0639               	xorwf	(??_sprintf^(0+128)+1),w
 21509  16A3  1D03               	btfss	3,2
 21510  16A4  2EC5               	goto	l5851
 21511                           
 21512                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 21513  16A5  3030               	movlw	48
 21514  16A6  00B8               	movwf	??_sprintf^(0+128)
 21515  16A7  084F               	movf	sprintf@sp^(0+128),w
 21516  16A8  0086               	movwf	6
 21517  16A9  3002               	movlw	2	; select bank4/5
 21518  16AA  0087               	movwf	7
 21519  16AB  0838               	movf	??_sprintf^(0+128),w
 21520  16AC  0081               	movwf	1
 21521  16AD  3001               	movlw	1
 21522  16AE  00B8               	movwf	??_sprintf^(0+128)
 21523  16AF  0838               	movf	??_sprintf^(0+128),w
 21524  16B0  07CF               	addwf	sprintf@sp^(0+128),f
 21525                           
 21526                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21527  16B1  1ACD               	btfsc	sprintf@flag^(0+128),5
 21528  16B2  2EB5               	goto	l5845
 21529  16B3  3078               	movlw	120
 21530  16B4  2EB6               	goto	L9
 21531  16B5                     l5845:	
 21532  16B5  3058               	movlw	88
 21533  16B6                     L9:	
 21534  16B6  00BC               	movwf	_sprintf$2446^(0+128)
 21535  16B7  3000               	movlw	0
 21536  16B8  00BD               	movwf	(_sprintf$2446^(0+128)+1)
 21537  16B9  083C               	movf	_sprintf$2446^(0+128),w
 21538  16BA                     L17:	
 21539  16BA  00B8               	movwf	??_sprintf^(0+128)
 21540  16BB  084F               	movf	sprintf@sp^(0+128),w
 21541  16BC  0086               	movwf	6
 21542  16BD  3002               	movlw	2	; select bank4/5
 21543  16BE  0087               	movwf	7
 21544  16BF  0838               	movf	??_sprintf^(0+128),w
 21545  16C0  0081               	movwf	1
 21546  16C1  3001               	movlw	1
 21547  16C2  00B8               	movwf	??_sprintf^(0+128)
 21548  16C3  0838               	movf	??_sprintf^(0+128),w
 21549  16C4  07CF               	addwf	sprintf@sp^(0+128),f
 21550  16C5                     l5851:	
 21551                           
 21552                           ;doprnt.c: 1412: }
 21553                           ;doprnt.c: 1415: if(width)
 21554  16C5  084A               	movf	sprintf@width^(0+128),w
 21555  16C6  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21556  16C7  1903               	btfsc	3,2
 21557  16C8  2FC0               	goto	l5923
 21558                           
 21559                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 21560                           
 21561                           ;doprnt.c: 1416: do
 21562  16C9  3030               	movlw	48
 21563  16CA  00B8               	movwf	??_sprintf^(0+128)
 21564  16CB  084F               	movf	sprintf@sp^(0+128),w
 21565  16CC  0086               	movwf	6
 21566  16CD  3002               	movlw	2	; select bank4/5
 21567  16CE  0087               	movwf	7
 21568  16CF  0838               	movf	??_sprintf^(0+128),w
 21569  16D0  0081               	movwf	1
 21570  16D1  3001               	movlw	1
 21571  16D2  00B8               	movwf	??_sprintf^(0+128)
 21572  16D3  0838               	movf	??_sprintf^(0+128),w
 21573  16D4  07CF               	addwf	sprintf@sp^(0+128),f
 21574                           
 21575                           ;doprnt.c: 1418: while(--width);
 21576  16D5  30FF               	movlw	255
 21577  16D6  07CA               	addwf	sprintf@width^(0+128),f
 21578  16D7  30FF               	movlw	255
 21579  16D8  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 21580  16D9  2EC5               	goto	l5851
 21581  16DA                     l5859:	
 21582                           ;doprnt.c: 1420: } else
 21583                           
 21584                           
 21585                           ;doprnt.c: 1422: {
 21586                           ;doprnt.c: 1424: if(width
 21587                           ;doprnt.c: 1426: && !(flag & 0x08)
 21588                           ;doprnt.c: 1428: )
 21589  16DA  084A               	movf	sprintf@width^(0+128),w
 21590  16DB  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21591  16DC  1D03               	btfss	3,2
 21592  16DD  19CD               	btfsc	sprintf@flag^(0+128),3
 21593  16DE  2EF3               	goto	l5869
 21594  16DF                     l5863:	
 21595                           ;doprnt.c: 1429: do
 21596                           
 21597                           
 21598                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 21599  16DF  3020               	movlw	32
 21600  16E0  00B8               	movwf	??_sprintf^(0+128)
 21601  16E1  084F               	movf	sprintf@sp^(0+128),w
 21602  16E2  0086               	movwf	6
 21603  16E3  3002               	movlw	2	; select bank4/5
 21604  16E4  0087               	movwf	7
 21605  16E5  0838               	movf	??_sprintf^(0+128),w
 21606  16E6  0081               	movwf	1
 21607  16E7  3001               	movlw	1
 21608  16E8  00B8               	movwf	??_sprintf^(0+128)
 21609  16E9  0838               	movf	??_sprintf^(0+128),w
 21610  16EA  07CF               	addwf	sprintf@sp^(0+128),f
 21611                           
 21612                           ;doprnt.c: 1431: while(--width);
 21613  16EB  30FF               	movlw	255
 21614  16EC  07CA               	addwf	sprintf@width^(0+128),f
 21615  16ED  30FF               	movlw	255
 21616  16EE  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 21617  16EF  084A               	movf	sprintf@width^(0+128),w
 21618  16F0  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21619  16F1  1D03               	btfss	3,2
 21620  16F2  2EDF               	goto	l5863
 21621  16F3                     l5869:	
 21622                           
 21623                           ;doprnt.c: 1438: if(flag & 0x03)
 21624  16F3  3003               	movlw	3
 21625  16F4  054D               	andwf	sprintf@flag^(0+128),w
 21626  16F5  00B8               	movwf	??_sprintf^(0+128)
 21627  16F6  3000               	movlw	0
 21628  16F7  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21629  16F8  00B9               	movwf	(??_sprintf+1)^(0+128)
 21630  16F9  0838               	movf	??_sprintf^(0+128),w
 21631  16FA  0439               	iorwf	(??_sprintf^(0+128)+1),w
 21632  16FB  1903               	btfsc	3,2
 21633  16FC  2EFF               	goto	l1293
 21634                           
 21635                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 21636  16FD  302D               	movlw	45
 21637  16FE  2F02               	goto	L18
 21638  16FF                     l1293:	
 21639                           
 21640                           ;doprnt.c: 1443: else if(flag & 0x01)
 21641  16FF  1C4D               	btfss	sprintf@flag^(0+128),0
 21642  1700  2F0D               	goto	l5879
 21643                           
 21644                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 21645  1701  3020               	movlw	32
 21646  1702                     L18:	
 21647  1702  00B8               	movwf	??_sprintf^(0+128)
 21648  1703  084F               	movf	sprintf@sp^(0+128),w
 21649  1704  0086               	movwf	6
 21650  1705  3002               	movlw	2	; select bank4/5
 21651  1706  0087               	movwf	7
 21652  1707  0838               	movf	??_sprintf^(0+128),w
 21653  1708  0081               	movwf	1
 21654  1709  3001               	movlw	1
 21655  170A  00B8               	movwf	??_sprintf^(0+128)
 21656  170B  0838               	movf	??_sprintf^(0+128),w
 21657  170C  07CF               	addwf	sprintf@sp^(0+128),f
 21658  170D                     l5879:	
 21659                           
 21660                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 21661  170D  30C0               	movlw	192
 21662  170E  054D               	andwf	sprintf@flag^(0+128),w
 21663  170F  00B8               	movwf	??_sprintf^(0+128)
 21664  1710  3008               	movlw	8
 21665  1711  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21666  1712  00B9               	movwf	(??_sprintf+1)^(0+128)
 21667  1713  3040               	movlw	64
 21668  1714  0638               	xorwf	??_sprintf^(0+128),w
 21669  1715  3008               	movlw	8
 21670  1716  1903               	skipnz
 21671  1717  0639               	xorwf	(??_sprintf^(0+128)+1),w
 21672  1718  1D03               	btfss	3,2
 21673  1719  2F1C               	goto	l5885
 21674                           
 21675                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 21676  171A  3030               	movlw	48
 21677  171B  2FB5               	goto	L19
 21678  171C                     l5885:	
 21679                           
 21680                           ;doprnt.c: 1450: else
 21681                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21682  171C  30C0               	movlw	192
 21683  171D  054D               	andwf	sprintf@flag^(0+128),w
 21684  171E  00B8               	movwf	??_sprintf^(0+128)
 21685  171F  3008               	movlw	8
 21686  1720  054E               	andwf	(sprintf@flag+1)^(0+128),w
 21687  1721  00B9               	movwf	(??_sprintf+1)^(0+128)
 21688  1722  3080               	movlw	128
 21689  1723  0638               	xorwf	??_sprintf^(0+128),w
 21690  1724  3008               	movlw	8
 21691  1725  1903               	skipnz
 21692  1726  0639               	xorwf	(??_sprintf^(0+128)+1),w
 21693  1727  1D03               	btfss	3,2
 21694  1728  2FC0               	goto	l5923
 21695                           
 21696                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 21697  1729  3030               	movlw	48
 21698  172A  00B8               	movwf	??_sprintf^(0+128)
 21699  172B  084F               	movf	sprintf@sp^(0+128),w
 21700  172C  0086               	movwf	6
 21701  172D  3002               	movlw	2	; select bank4/5
 21702  172E  0087               	movwf	7
 21703  172F  0838               	movf	??_sprintf^(0+128),w
 21704  1730  0081               	movwf	1
 21705  1731  3001               	movlw	1
 21706  1732  00B8               	movwf	??_sprintf^(0+128)
 21707  1733  0838               	movf	??_sprintf^(0+128),w
 21708  1734  07CF               	addwf	sprintf@sp^(0+128),f
 21709                           
 21710                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21711  1735  1ACD               	btfsc	sprintf@flag^(0+128),5
 21712  1736  2F39               	goto	l5895
 21713  1737  3078               	movlw	120
 21714  1738  2F3A               	goto	L10
 21715  1739                     l5895:	
 21716  1739  3058               	movlw	88
 21717  173A                     L10:	
 21718  173A  00BE               	movwf	_sprintf$2447^(0+128)
 21719  173B  3000               	movlw	0
 21720  173C  00BF               	movwf	(_sprintf$2447^(0+128)+1)
 21721  173D  083E               	movf	_sprintf$2447^(0+128),w
 21722  173E  2FB5               	goto	L19
 21723  173F                     l5901:	
 21724                           ;doprnt.c: 1478: {
 21725                           ;doprnt.c: 1483: case 0x00:
 21726                           
 21727                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 21728                           
 21729                           ;doprnt.c: 1466: }
 21730                           ;doprnt.c: 1469: }
 21731                           ;doprnt.c: 1474: while(prec--) {
 21732                           
 21733                           
 21734                           ;doprnt.c: 1486: case 0xC0:
 21735                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21736  173F  300A               	movlw	10
 21737  1740  00A8               	movwf	___lwmod@divisor^(0+128)
 21738  1741  3000               	movlw	0
 21739  1742  00A9               	movwf	(___lwmod@divisor^(0+128)+1)
 21740  1743  0849               	movf	sprintf@prec^(0+128),w
 21741  1744  00B8               	movwf	??_sprintf^(0+128)
 21742  1745  01B9               	clrf	(??_sprintf^(0+128)+1)
 21743  1746  35B8               	lslf	??_sprintf^(0+128),f
 21744  1747  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21745  1748  304C               	movlw	low (_dpowers| (0+32768))
 21746  1749  0738               	addwf	??_sprintf^(0+128),w
 21747  174A  0084               	movwf	4
 21748  174B  30A1               	movlw	high (_dpowers| (0+32768))
 21749  174C  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21750  174D  0085               	movwf	5
 21751  174E  3F00               	moviw [0]fsr0
 21752  174F  00A0               	movwf	___lwdiv@divisor^(0+128)
 21753  1750  3F01               	moviw [1]fsr0
 21754  1751  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 21755  1752  0848               	movf	(sprintf@val+1)^(0+128),w
 21756  1753  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 21757  1754  0847               	movf	sprintf@val^(0+128),w
 21758  1755  00A2               	movwf	___lwdiv@dividend^(0+128)
 21759  1756  31A9  21E9  3193   	fcall	___lwdiv
 21760  1759  0021               	movlb	1	; select bank1
 21761  175A  0821               	movf	(?___lwdiv+1)^(0+128),w
 21762  175B  00AB               	movwf	(___lwmod@dividend+1)^(0+128)
 21763  175C  0820               	movf	?___lwdiv^(0+128),w
 21764  175D  00AA               	movwf	___lwmod@dividend^(0+128)
 21765  175E  31A8  20CA  3193   	fcall	___lwmod
 21766  1761  0021               	movlb	1	; select bank1
 21767  1762  0828               	movf	?___lwmod^(0+128),w
 21768  1763  2FB0               	goto	L20
 21769  1764                     l5903:	
 21770                           ;doprnt.c: 1497: case 0x80:
 21771                           
 21772                           ;doprnt.c: 1491: break;
 21773                           
 21774                           
 21775                           ;doprnt.c: 1499: {
 21776                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 21777  1764  0849               	movf	sprintf@prec^(0+128),w
 21778  1765  00B8               	movwf	??_sprintf^(0+128)
 21779  1766  01B9               	clrf	(??_sprintf^(0+128)+1)
 21780  1767  35B8               	lslf	??_sprintf^(0+128),f
 21781  1768  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21782  1769  3056               	movlw	low (_hexpowers| (0+32768))
 21783  176A  0738               	addwf	??_sprintf^(0+128),w
 21784  176B  0084               	movwf	4
 21785  176C  30A1               	movlw	high (_hexpowers| (0+32768))
 21786  176D  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21787  176E  0085               	movwf	5
 21788  176F  3F00               	moviw [0]fsr0
 21789  1770  00A0               	movwf	___lwdiv@divisor^(0+128)
 21790  1771  3F01               	moviw [1]fsr0
 21791  1772  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 21792  1773  0848               	movf	(sprintf@val+1)^(0+128),w
 21793  1774  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 21794  1775  0847               	movf	sprintf@val^(0+128),w
 21795  1776  00A2               	movwf	___lwdiv@dividend^(0+128)
 21796  1777  31A9  21E9  3193   	fcall	___lwdiv
 21797  177A  0021               	movlb	1	; select bank1
 21798  177B  0820               	movf	?___lwdiv^(0+128),w
 21799  177C  390F               	andlw	15
 21800  177D  00BA               	movwf	(??_sprintf+2)^(0+128)
 21801  177E  083A               	movf	(??_sprintf+2)^(0+128),w
 21802  177F  00C2               	movwf	sprintf@idx^(0+128)
 21803                           
 21804                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 21805  1780  1ACD               	btfsc	sprintf@flag^(0+128),5
 21806  1781  2F86               	goto	l5909
 21807  1782  304B               	movlw	low (STR_17| (0+32768))
 21808  1783  00C0               	movwf	_sprintf$2453^(0+128)
 21809  1784  30A2               	movlw	high (STR_17| (0+32768))
 21810  1785  2F89               	goto	L12
 21811  1786                     l5909:	
 21812  1786  303A               	movlw	low (STR_16| (0+32768))
 21813  1787  00C0               	movwf	_sprintf$2453^(0+128)
 21814  1788  30A2               	movlw	high (STR_16| (0+32768))
 21815  1789                     L12:	
 21816  1789  00C1               	movwf	(_sprintf$2453^(0+128)+1)
 21817  178A  0841               	movf	(_sprintf$2453+1)^(0+128),w
 21818  178B  00B9               	movwf	(??_sprintf^(0+128)+1)
 21819  178C  0840               	movf	_sprintf$2453^(0+128),w
 21820  178D  00B8               	movwf	??_sprintf^(0+128)
 21821  178E  0842               	movf	sprintf@idx^(0+128),w
 21822  178F  0738               	addwf	??_sprintf^(0+128),w
 21823  1790  0084               	movwf	4
 21824  1791  0839               	movf	(??_sprintf^(0+128)+1),w
 21825  1792  1803               	skipnc
 21826  1793  0A39               	incf	(??_sprintf^(0+128)+1),w
 21827  1794  0085               	movwf	5
 21828  1795  0800               	movf	0,w	;code access
 21829  1796  2FB1               	goto	L13
 21830  1797                     l5913:	
 21831                           ;doprnt.c: 1516: case 0x40:
 21832                           
 21833                           ;doprnt.c: 1508: }
 21834                           ;doprnt.c: 1510: break;
 21835                           
 21836                           
 21837                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 21838  1797  0849               	movf	sprintf@prec^(0+128),w
 21839  1798  00B8               	movwf	??_sprintf^(0+128)
 21840  1799  01B9               	clrf	(??_sprintf^(0+128)+1)
 21841  179A  35B8               	lslf	??_sprintf^(0+128),f
 21842  179B  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 21843  179C  3040               	movlw	low (_octpowers| (0+32768))
 21844  179D  0738               	addwf	??_sprintf^(0+128),w
 21845  179E  0084               	movwf	4
 21846  179F  30A1               	movlw	high (_octpowers| (0+32768))
 21847  17A0  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 21848  17A1  0085               	movwf	5
 21849  17A2  3F00               	moviw [0]fsr0
 21850  17A3  00A0               	movwf	___lwdiv@divisor^(0+128)
 21851  17A4  3F01               	moviw [1]fsr0
 21852  17A5  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 21853  17A6  0848               	movf	(sprintf@val+1)^(0+128),w
 21854  17A7  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 21855  17A8  0847               	movf	sprintf@val^(0+128),w
 21856  17A9  00A2               	movwf	___lwdiv@dividend^(0+128)
 21857  17AA  31A9  21E9  3193   	fcall	___lwdiv
 21858  17AD  0021               	movlb	1	; select bank1
 21859  17AE  0820               	movf	?___lwdiv^(0+128),w
 21860  17AF  3907               	andlw	7
 21861  17B0                     L20:	
 21862  17B0  3E30               	addlw	48
 21863  17B1                     L13:	
 21864  17B1  00BA               	movwf	(??_sprintf+2)^(0+128)
 21865  17B2  083A               	movf	(??_sprintf+2)^(0+128),w
 21866  17B3  00CC               	movwf	sprintf@c^(0+128)
 21867  17B4                     l5919:	
 21868                           ;doprnt.c: 1523: }
 21869                           
 21870                           ;doprnt.c: 1520: break;
 21871                           
 21872                           
 21873                           ;doprnt.c: 1524: ((*sp++ = (c)));
 21874  17B4  084C               	movf	sprintf@c^(0+128),w
 21875  17B5                     L19:	
 21876  17B5  00B8               	movwf	??_sprintf^(0+128)
 21877  17B6  084F               	movf	sprintf@sp^(0+128),w
 21878  17B7  0086               	movwf	6
 21879  17B8  3002               	movlw	2	; select bank4/5
 21880  17B9  0087               	movwf	7
 21881  17BA  0838               	movf	??_sprintf^(0+128),w
 21882  17BB  0081               	movwf	1
 21883  17BC  3001               	movlw	1
 21884  17BD  00B8               	movwf	??_sprintf^(0+128)
 21885  17BE  0838               	movf	??_sprintf^(0+128),w
 21886  17BF  07CF               	addwf	sprintf@sp^(0+128),f
 21887  17C0                     l5923:	
 21888  17C0  30FF               	movlw	255
 21889  17C1  00B8               	movwf	??_sprintf^(0+128)
 21890  17C2  0838               	movf	??_sprintf^(0+128),w
 21891  17C3  07C9               	addwf	sprintf@prec^(0+128),f
 21892  17C4  0A49               	incf	sprintf@prec^(0+128),w
 21893  17C5  1903               	btfsc	3,2
 21894  17C6  2FD7               	goto	l1315
 21895  17C7  084D               	movf	sprintf@flag^(0+128),w
 21896  17C8  39C0               	andlw	192
 21897                           
 21898                           ; Switch size 1, requested type "space"
 21899                           ; Number of cases is 4, Range of values is 0 to 192
 21900                           ; switch strategies available:
 21901                           ; Name         Instructions Cycles
 21902                           ; simple_byte           13     7 (average)
 21903                           ; jumptable            260     6 (fixed)
 21904                           ;	Chosen strategy is simple_byte
 21905  17C9  3A00               	xorlw	0	; case 0
 21906  17CA  1903               	skipnz
 21907  17CB  2F3F               	goto	l5901
 21908  17CC  3A40               	xorlw	64	; case 64
 21909  17CD  1903               	skipnz
 21910  17CE  2F97               	goto	l5913
 21911  17CF  3AC0               	xorlw	192	; case 128
 21912  17D0  1903               	skipnz
 21913  17D1  2F64               	goto	l5903
 21914  17D2  3A40               	xorlw	64	; case 192
 21915  17D3  1903               	skipnz
 21916  17D4  2F3F               	goto	l5901
 21917  17D5  2FB4               	goto	l5919
 21918  17D6  2FB4               	goto	l5919
 21919  17D7                     l1315:	
 21920                           
 21921                           ;doprnt.c: 1525: }
 21922                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 21923  17D7  1DCD               	btfss	sprintf@flag^(0+128),3
 21924  17D8  2B92               	goto	l5933
 21925  17D9  084B               	movf	(sprintf@width+1)^(0+128),w
 21926  17DA  3A80               	xorlw	128
 21927  17DB  00B8               	movwf	??_sprintf^(0+128)
 21928  17DC  3080               	movlw	128
 21929  17DD  0238               	subwf	??_sprintf^(0+128),w
 21930  17DE  1D03               	skipz
 21931  17DF  2FE2               	goto	u5855
 21932  17E0  3001               	movlw	1
 21933  17E1  024A               	subwf	sprintf@width^(0+128),w
 21934  17E2                     u5855:	
 21935  17E2  1C03               	skipc
 21936  17E3  2B92               	goto	l5933
 21937  17E4                     l5927:	
 21938                           ;doprnt.c: 1529: do
 21939                           
 21940                           
 21941                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 21942  17E4  3020               	movlw	32
 21943  17E5  0021               	movlb	1	; select bank1
 21944  17E6  00B8               	movwf	??_sprintf^(0+128)
 21945  17E7  084F               	movf	sprintf@sp^(0+128),w
 21946  17E8  0086               	movwf	6
 21947  17E9  3002               	movlw	2	; select bank4/5
 21948  17EA  0087               	movwf	7
 21949  17EB  0838               	movf	??_sprintf^(0+128),w
 21950  17EC  0081               	movwf	1
 21951  17ED  3001               	movlw	1
 21952  17EE  00B8               	movwf	??_sprintf^(0+128)
 21953  17EF  0838               	movf	??_sprintf^(0+128),w
 21954  17F0  07CF               	addwf	sprintf@sp^(0+128),f
 21955                           
 21956                           ;doprnt.c: 1531: while(--width);
 21957  17F1  30FF               	movlw	255
 21958  17F2  07CA               	addwf	sprintf@width^(0+128),f
 21959  17F3  30FF               	movlw	255
 21960  17F4  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 21961  17F5  084A               	movf	sprintf@width^(0+128),w
 21962  17F6  044B               	iorwf	(sprintf@width+1)^(0+128),w
 21963  17F7  1903               	btfsc	3,2
 21964  17F8  2B92               	goto	l5933
 21965  17F9  2FE4               	goto	l5927
 21966  17FA                     l5935:	
 21967                           ;doprnt.c: 1533: }
 21968                           ;doprnt.c: 1535: alldone:
 21969                           
 21970                           
 21971                           ;doprnt.c: 1538: *sp = 0;
 21972  17FA  084F               	movf	sprintf@sp^(0+128),w
 21973  17FB  0086               	movwf	6
 21974  17FC  3002               	movlw	2	; select bank4/5
 21975  17FD  0087               	movwf	7
 21976  17FE  0181               	clrf	1
 21977  17FF  0008               	return
 21978  1800                     __end_of_sprintf:	
 21979                           ;doprnt.c: 1540: return 0;
 21980                           ;	Return value of _sprintf is never used
 21981                           
 21982                           
 21983                           	psect	text69
 21984  3554                     __ptext69:	
 21985 ;; *************** function _isdigit *****************
 21986 ;; Defined at:
 21987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 21988 ;; Parameters:    Size  Location     Type
 21989 ;;  c               1    wreg     unsigned char 
 21990 ;; Auto vars:     Size  Location     Type
 21991 ;;  c               1    1[BANK1 ] unsigned char 
 21992 ;; Return value:  Size  Location     Type
 21993 ;;		None               void
 21994 ;; Registers used:
 21995 ;;		wreg, status,2, status,0
 21996 ;; Tracked objects:
 21997 ;;		On entry : 0/0
 21998 ;;		On exit  : 0/0
 21999 ;;		Unchanged: 0/0
 22000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22002 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22004 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22005 ;;Total ram usage:        2 bytes
 22006 ;; Hardware stack levels used:    1
 22007 ;; Hardware stack levels required when called:    5
 22008 ;; This function calls:
 22009 ;;		Nothing
 22010 ;; This function is called by:
 22011 ;;		_sprintf
 22012 ;; This function uses a non-reentrant model
 22013 ;;
 22014                           
 22015                           
 22016                           ;psect for function _isdigit
 22017  3554                     _isdigit:	
 22018                           
 22019                           ;incstack = 0
 22020                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 22021                           ;isdigit@c stored from wreg
 22022  3554  0021               	movlb	1	; select bank1
 22023  3555  00A1               	movwf	isdigit@c^(0+128)
 22024  3556  01A0               	clrf	_isdigit$2639^(0+128)
 22025  3557  303A               	movlw	58
 22026  3558  0221               	subwf	isdigit@c^(0+128),w
 22027  3559  1803               	skipnc
 22028  355A  2D61               	goto	l5495
 22029  355B  3030               	movlw	48
 22030  355C  0221               	subwf	isdigit@c^(0+128),w
 22031  355D  1C03               	skipc
 22032  355E  2D61               	goto	l5495
 22033  355F  01A0               	clrf	_isdigit$2639^(0+128)
 22034  3560  0AA0               	incf	_isdigit$2639^(0+128),f
 22035  3561                     l5495:	
 22036  3561  0C20               	rrf	_isdigit$2639^(0+128),w
 22037  3562  0008               	return
 22038  3563                     __end_of_isdigit:	
 22039                           
 22040                           	psect	text70
 22041  36A4                     __ptext70:	
 22042 ;; *************** function ___wmul *****************
 22043 ;; Defined at:
 22044 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 22045 ;; Parameters:    Size  Location     Type
 22046 ;;  multiplier      2    7[BANK1 ] unsigned int 
 22047 ;;  multiplicand    2    9[BANK1 ] unsigned int 
 22048 ;; Auto vars:     Size  Location     Type
 22049 ;;  product         2   11[BANK1 ] unsigned int 
 22050 ;; Return value:  Size  Location     Type
 22051 ;;                  2    7[BANK1 ] unsigned int 
 22052 ;; Registers used:
 22053 ;;		wreg, status,2, status,0
 22054 ;; Tracked objects:
 22055 ;;		On entry : 0/0
 22056 ;;		On exit  : 0/0
 22057 ;;		Unchanged: 0/0
 22058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22059 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22060 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22062 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 22063 ;;Total ram usage:        6 bytes
 22064 ;; Hardware stack levels used:    1
 22065 ;; Hardware stack levels required when called:    5
 22066 ;; This function calls:
 22067 ;;		Nothing
 22068 ;; This function is called by:
 22069 ;;		_MiMAC_Init
 22070 ;;		_MiMAC_ReceivedPacket
 22071 ;;		_MiMAC_DiscardPacket
 22072 ;;		_Total_Connections
 22073 ;;		_Find_Index
 22074 ;;		_P2PTasks
 22075 ;;		_MiApp_ProtocolInit
 22076 ;;		_MiApp_UnicastConnection
 22077 ;;		_MiApp_BroadcastConnectionTable
 22078 ;;		_Find_InActiveDevices
 22079 ;;		_AddConnection
 22080 ;;		_MiApp_RemoveConnection
 22081 ;;		_run_star_demo
 22082 ;;		_sprintf
 22083 ;;		_getReceiverBW
 22084 ;;		_DumpConnection
 22085 ;; This function uses a non-reentrant model
 22086 ;;
 22087                           
 22088                           
 22089                           ;psect for function ___wmul
 22090  36A4                     ___wmul:	
 22091                           
 22092                           ;incstack = 0
 22093                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 22094  36A4  0021               	movlb	1	; select bank1
 22095  36A5  01AB               	clrf	___wmul@product^(0+128)
 22096  36A6  01AC               	clrf	(___wmul@product+1)^(0+128)
 22097  36A7                     l5501:	
 22098  36A7  1C27               	btfss	___wmul@multiplier^(0+128),0
 22099  36A8  2EAD               	goto	l1404
 22100  36A9  0829               	movf	___wmul@multiplicand^(0+128),w
 22101  36AA  07AB               	addwf	___wmul@product^(0+128),f
 22102  36AB  082A               	movf	(___wmul@multiplicand+1)^(0+128),w
 22103  36AC  3DAC               	addwfc	(___wmul@product+1)^(0+128),f
 22104  36AD                     l1404:	
 22105  36AD  3001               	movlw	1
 22106  36AE                     u5035:	
 22107  36AE  35A9               	lslf	___wmul@multiplicand^(0+128),f
 22108  36AF  0DAA               	rlf	(___wmul@multiplicand+1)^(0+128),f
 22109  36B0  0B89               	decfsz	9,f
 22110  36B1  2EAE               	goto	u5035
 22111  36B2  3001               	movlw	1
 22112  36B3                     u5045:	
 22113  36B3  36A8               	lsrf	(___wmul@multiplier+1)^(0+128),f
 22114  36B4  0CA7               	rrf	___wmul@multiplier^(0+128),f
 22115  36B5  0B89               	decfsz	9,f
 22116  36B6  2EB3               	goto	u5045
 22117  36B7  0827               	movf	___wmul@multiplier^(0+128),w
 22118  36B8  0428               	iorwf	(___wmul@multiplier+1)^(0+128),w
 22119  36B9  1D03               	btfss	3,2
 22120  36BA  2EA7               	goto	l5501
 22121  36BB  082C               	movf	(___wmul@product+1)^(0+128),w
 22122  36BC  00A8               	movwf	(?___wmul+1)^(0+128)
 22123  36BD  082B               	movf	___wmul@product^(0+128),w
 22124  36BE  00A7               	movwf	?___wmul^(0+128)
 22125  36BF  0008               	return
 22126  36C0                     __end_of___wmul:	
 22127                           
 22128                           	psect	text71
 22129  28CA                     __ptext71:	
 22130 ;; *************** function ___lwmod *****************
 22131 ;; Defined at:
 22132 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;  divisor         2    8[BANK1 ] unsigned int 
 22135 ;;  dividend        2   10[BANK1 ] unsigned int 
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;  counter         1   13[BANK1 ] unsigned char 
 22138 ;; Return value:  Size  Location     Type
 22139 ;;                  2    8[BANK1 ] unsigned int 
 22140 ;; Registers used:
 22141 ;;		wreg, status,2, status,0
 22142 ;; Tracked objects:
 22143 ;;		On entry : 0/0
 22144 ;;		On exit  : 0/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22147 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22148 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22149 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22150 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 22151 ;;Total ram usage:        6 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; Hardware stack levels required when called:    5
 22154 ;; This function calls:
 22155 ;;		Nothing
 22156 ;; This function is called by:
 22157 ;;		_sprintf
 22158 ;; This function uses a non-reentrant model
 22159 ;;
 22160                           
 22161                           
 22162                           ;psect for function ___lwmod
 22163  28CA                     ___lwmod:	
 22164                           
 22165                           ;incstack = 0
 22166                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 22167  28CA  0021               	movlb	1	; select bank1
 22168  28CB  0828               	movf	___lwmod@divisor^(0+128),w
 22169  28CC  0429               	iorwf	(___lwmod@divisor+1)^(0+128),w
 22170  28CD  1903               	btfsc	3,2
 22171  28CE  28F2               	goto	l5571
 22172  28CF  01AD               	clrf	___lwmod@counter^(0+128)
 22173  28D0  0AAD               	incf	___lwmod@counter^(0+128),f
 22174  28D1                     l5561:	
 22175  28D1  1BA9               	btfsc	(___lwmod@divisor+1)^(0+128),7
 22176  28D2  28DD               	goto	l5563
 22177  28D3  3001               	movlw	1
 22178  28D4                     u5165:	
 22179  28D4  35A8               	lslf	___lwmod@divisor^(0+128),f
 22180  28D5  0DA9               	rlf	(___lwmod@divisor+1)^(0+128),f
 22181  28D6  0B89               	decfsz	9,f
 22182  28D7  28D4               	goto	u5165
 22183  28D8  3001               	movlw	1
 22184  28D9  00AC               	movwf	??___lwmod^(0+128)
 22185  28DA  082C               	movf	??___lwmod^(0+128),w
 22186  28DB  07AD               	addwf	___lwmod@counter^(0+128),f
 22187  28DC  28D1               	goto	l5561
 22188  28DD                     l5563:	
 22189  28DD  0829               	movf	(___lwmod@divisor+1)^(0+128),w
 22190  28DE  022B               	subwf	(___lwmod@dividend+1)^(0+128),w
 22191  28DF  1D03               	skipz
 22192  28E0  28E3               	goto	u5185
 22193  28E1  0828               	movf	___lwmod@divisor^(0+128),w
 22194  28E2  022A               	subwf	___lwmod@dividend^(0+128),w
 22195  28E3                     u5185:	
 22196  28E3  1C03               	skipc
 22197  28E4  28E9               	goto	l5567
 22198  28E5  0828               	movf	___lwmod@divisor^(0+128),w
 22199  28E6  02AA               	subwf	___lwmod@dividend^(0+128),f
 22200  28E7  0829               	movf	(___lwmod@divisor+1)^(0+128),w
 22201  28E8  3BAB               	subwfb	(___lwmod@dividend+1)^(0+128),f
 22202  28E9                     l5567:	
 22203  28E9  3001               	movlw	1
 22204  28EA                     u5195:	
 22205  28EA  36A9               	lsrf	(___lwmod@divisor+1)^(0+128),f
 22206  28EB  0CA8               	rrf	___lwmod@divisor^(0+128),f
 22207  28EC  0B89               	decfsz	9,f
 22208  28ED  28EA               	goto	u5195
 22209  28EE  3001               	movlw	1
 22210  28EF  02AD               	subwf	___lwmod@counter^(0+128),f
 22211  28F0  1D03               	btfss	3,2
 22212  28F1  28DD               	goto	l5563
 22213  28F2                     l5571:	
 22214  28F2  082B               	movf	(___lwmod@dividend+1)^(0+128),w
 22215  28F3  00A9               	movwf	(?___lwmod+1)^(0+128)
 22216  28F4  082A               	movf	___lwmod@dividend^(0+128),w
 22217  28F5  00A8               	movwf	?___lwmod^(0+128)
 22218  28F6  0008               	return
 22219  28F7                     __end_of___lwmod:	
 22220                           
 22221                           	psect	text72
 22222  29E9                     __ptext72:	
 22223 ;; *************** function ___lwdiv *****************
 22224 ;; Defined at:
 22225 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 22226 ;; Parameters:    Size  Location     Type
 22227 ;;  divisor         2    0[BANK1 ] unsigned int 
 22228 ;;  dividend        2    2[BANK1 ] unsigned int 
 22229 ;; Auto vars:     Size  Location     Type
 22230 ;;  quotient        2    5[BANK1 ] unsigned int 
 22231 ;;  counter         1    7[BANK1 ] unsigned char 
 22232 ;; Return value:  Size  Location     Type
 22233 ;;                  2    0[BANK1 ] unsigned int 
 22234 ;; Registers used:
 22235 ;;		wreg, status,2, status,0
 22236 ;; Tracked objects:
 22237 ;;		On entry : 0/0
 22238 ;;		On exit  : 0/0
 22239 ;;		Unchanged: 0/0
 22240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22241 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22242 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 22243 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22244 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22245 ;;Total ram usage:        8 bytes
 22246 ;; Hardware stack levels used:    1
 22247 ;; Hardware stack levels required when called:    5
 22248 ;; This function calls:
 22249 ;;		Nothing
 22250 ;; This function is called by:
 22251 ;;		_sprintf
 22252 ;; This function uses a non-reentrant model
 22253 ;;
 22254                           
 22255                           
 22256                           ;psect for function ___lwdiv
 22257  29E9                     ___lwdiv:	
 22258                           
 22259                           ;incstack = 0
 22260                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22261  29E9  0021               	movlb	1	; select bank1
 22262  29EA  01A5               	clrf	___lwdiv@quotient^(0+128)
 22263  29EB  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
 22264  29EC  0820               	movf	___lwdiv@divisor^(0+128),w
 22265  29ED  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 22266  29EE  1903               	btfsc	3,2
 22267  29EF  2A19               	goto	l5549
 22268  29F0  01A7               	clrf	___lwdiv@counter^(0+128)
 22269  29F1  0AA7               	incf	___lwdiv@counter^(0+128),f
 22270  29F2                     l5537:	
 22271  29F2  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
 22272  29F3  29FE               	goto	l5539
 22273  29F4  3001               	movlw	1
 22274  29F5                     u5095:	
 22275  29F5  35A0               	lslf	___lwdiv@divisor^(0+128),f
 22276  29F6  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 22277  29F7  0B89               	decfsz	9,f
 22278  29F8  29F5               	goto	u5095
 22279  29F9  3001               	movlw	1
 22280  29FA  00A4               	movwf	??___lwdiv^(0+128)
 22281  29FB  0824               	movf	??___lwdiv^(0+128),w
 22282  29FC  07A7               	addwf	___lwdiv@counter^(0+128),f
 22283  29FD  29F2               	goto	l5537
 22284  29FE                     l5539:	
 22285  29FE  3001               	movlw	1
 22286  29FF                     u5115:	
 22287  29FF  35A5               	lslf	___lwdiv@quotient^(0+128),f
 22288  2A00  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
 22289  2A01  0B89               	decfsz	9,f
 22290  2A02  29FF               	goto	u5115
 22291  2A03  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 22292  2A04  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 22293  2A05  1D03               	skipz
 22294  2A06  2A09               	goto	u5125
 22295  2A07  0820               	movf	___lwdiv@divisor^(0+128),w
 22296  2A08  0222               	subwf	___lwdiv@dividend^(0+128),w
 22297  2A09                     u5125:	
 22298  2A09  1C03               	skipc
 22299  2A0A  2A10               	goto	l5545
 22300  2A0B  0820               	movf	___lwdiv@divisor^(0+128),w
 22301  2A0C  02A2               	subwf	___lwdiv@dividend^(0+128),f
 22302  2A0D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 22303  2A0E  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 22304  2A0F  1425               	bsf	___lwdiv@quotient^(0+128),0
 22305  2A10                     l5545:	
 22306  2A10  3001               	movlw	1
 22307  2A11                     u5135:	
 22308  2A11  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 22309  2A12  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 22310  2A13  0B89               	decfsz	9,f
 22311  2A14  2A11               	goto	u5135
 22312  2A15  3001               	movlw	1
 22313  2A16  02A7               	subwf	___lwdiv@counter^(0+128),f
 22314  2A17  1D03               	btfss	3,2
 22315  2A18  29FE               	goto	l5539
 22316  2A19                     l5549:	
 22317  2A19  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
 22318  2A1A  00A1               	movwf	(?___lwdiv+1)^(0+128)
 22319  2A1B  0825               	movf	___lwdiv@quotient^(0+128),w
 22320  2A1C  00A0               	movwf	?___lwdiv^(0+128)
 22321  2A1D  0008               	return
 22322  2A1E                     __end_of___lwdiv:	
 22323                           
 22324                           	psect	text73
 22325  3595                     __ptext73:	
 22326 ;; *************** function ___bmul *****************
 22327 ;; Defined at:
 22328 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;  multiplier      1    wreg     unsigned char 
 22331 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 22332 ;; Auto vars:     Size  Location     Type
 22333 ;;  multiplier      1    3[BANK1 ] unsigned char 
 22334 ;;  product         1    2[BANK1 ] unsigned char 
 22335 ;; Return value:  Size  Location     Type
 22336 ;;                  1    wreg      unsigned char 
 22337 ;; Registers used:
 22338 ;;		wreg, status,2, status,0
 22339 ;; Tracked objects:
 22340 ;;		On entry : 0/0
 22341 ;;		On exit  : 0/0
 22342 ;;		Unchanged: 0/0
 22343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22344 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22345 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22346 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22347 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22348 ;;Total ram usage:        4 bytes
 22349 ;; Hardware stack levels used:    1
 22350 ;; Hardware stack levels required when called:    5
 22351 ;; This function calls:
 22352 ;;		Nothing
 22353 ;; This function is called by:
 22354 ;;		_MiMAC_ReceivedPacket
 22355 ;;		_high_isr
 22356 ;;		_MiApp_BroadcastConnectionTable
 22357 ;;		_sprintf
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           
 22362                           ;psect for function ___bmul
 22363  3595                     ___bmul:	
 22364                           
 22365                           ;incstack = 0
 22366                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 22367                           ;___bmul@multiplier stored from wreg
 22368  3595  0021               	movlb	1	; select bank1
 22369  3596  00A3               	movwf	___bmul@multiplier^(0+128)
 22370  3597  01A2               	clrf	___bmul@product^(0+128)
 22371  3598                     l5515:	
 22372  3598  1C23               	btfss	___bmul@multiplier^(0+128),0
 22373  3599  2D9E               	goto	l5519
 22374  359A  0820               	movf	___bmul@multiplicand^(0+128),w
 22375  359B  00A1               	movwf	??___bmul^(0+128)
 22376  359C  0821               	movf	??___bmul^(0+128),w
 22377  359D  07A2               	addwf	___bmul@product^(0+128),f
 22378  359E                     l5519:	
 22379  359E  1003               	clrc
 22380  359F  0DA0               	rlf	___bmul@multiplicand^(0+128),f
 22381  35A0  1003               	clrc
 22382  35A1  0CA3               	rrf	___bmul@multiplier^(0+128),f
 22383  35A2  0823               	movf	___bmul@multiplier^(0+128),w
 22384  35A3  1D03               	btfss	3,2
 22385  35A4  2D98               	goto	l5515
 22386  35A5  0822               	movf	___bmul@product^(0+128),w
 22387  35A6  0008               	return
 22388  35A7                     __end_of___bmul:	
 22389                           
 22390                           	psect	text74
 22391  2D09                     __ptext74:	
 22392 ;; *************** function _LCD_Update *****************
 22393 ;; Defined at:
 22394 ;;		line 264 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22395 ;; Parameters:    Size  Location     Type
 22396 ;;		None
 22397 ;; Auto vars:     Size  Location     Type
 22398 ;;  i               1   20[BANK1 ] unsigned char 
 22399 ;; Return value:  Size  Location     Type
 22400 ;;                  1    wreg      void 
 22401 ;; Registers used:
 22402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22403 ;; Tracked objects:
 22404 ;;		On entry : 0/0
 22405 ;;		On exit  : 0/0
 22406 ;;		Unchanged: 0/0
 22407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22409 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22410 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22411 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22412 ;;Total ram usage:        2 bytes
 22413 ;; Hardware stack levels used:    1
 22414 ;; Hardware stack levels required when called:    8
 22415 ;; This function calls:
 22416 ;;		_LCD_d_write
 22417 ;;		_LCD_i_write
 22418 ;; This function is called by:
 22419 ;;		_Source_END_DEVICE_INFO
 22420 ;;		_run_star_demo
 22421 ;;		_LCDTRXCount
 22422 ;;		_LCDDisplay
 22423 ;; This function uses a non-reentrant model
 22424 ;;
 22425                           
 22426                           
 22427                           ;psect for function _LCD_Update
 22428  2D09                     _LCD_Update:	
 22429                           
 22430                           ;lcd.c: 266: uint8_t i;
 22431                           ;lcd.c: 268: LCD_i_write(0x80);
 22432                           
 22433                           ;incstack = 0
 22434                           ; Regs used in _LCD_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22435  2D09  3080               	movlw	128
 22436  2D0A  31B7  27DB  31AD   	fcall	_LCD_i_write
 22437                           
 22438                           ;lcd.c: 269: for(i = 0; i < 16; i++)
 22439  2D0D  0021               	movlb	1	; select bank1
 22440  2D0E  01B4               	clrf	LCD_Update@i^(0+128)
 22441  2D0F  3010               	movlw	16
 22442  2D10  0234               	subwf	LCD_Update@i^(0+128),w
 22443  2D11  1803               	btfsc	3,0
 22444  2D12  2D30               	goto	l5957
 22445  2D13                     l5947:	
 22446                           
 22447                           ;lcd.c: 270: {
 22448                           ;lcd.c: 271: if( LCDText[i] == 0 )
 22449  2D13  0834               	movf	LCD_Update@i^(0+128),w
 22450  2D14  3EC8               	addlw	(low (_LCDText| (0+512)))& (0+255)
 22451  2D15  0086               	movwf	6
 22452  2D16  3002               	movlw	2	; select bank5/6
 22453  2D17  0087               	movwf	7
 22454  2D18  0801               	movf	1,w
 22455  2D19  1D03               	btfss	3,2
 22456  2D1A  2D1D               	goto	l5951
 22457                           
 22458                           ;lcd.c: 272: {
 22459                           ;lcd.c: 273: LCD_d_write(' ');
 22460  2D1B  3020               	movlw	32
 22461  2D1C  2D24               	goto	L21
 22462  2D1D                     l5951:	
 22463                           ;lcd.c: 274: }
 22464                           
 22465                           
 22466                           ;lcd.c: 275: else
 22467                           ;lcd.c: 276: {
 22468                           ;lcd.c: 277: LCD_d_write(LCDText[i]);
 22469  2D1D  0021               	movlb	1	; select bank1
 22470  2D1E  0834               	movf	LCD_Update@i^(0+128),w
 22471  2D1F  3EC8               	addlw	(low (_LCDText| (0+512)))& (0+255)
 22472  2D20  0086               	movwf	6
 22473  2D21  3002               	movlw	2	; select bank5/6
 22474  2D22  0087               	movwf	7
 22475  2D23  0801               	movf	1,w
 22476  2D24                     L21:	
 22477  2D24  31B7  27B7  31AD   	fcall	_LCD_d_write
 22478  2D27  3001               	movlw	1
 22479  2D28  0021               	movlb	1	; select bank1
 22480  2D29  00B3               	movwf	??_LCD_Update^(0+128)
 22481  2D2A  0833               	movf	??_LCD_Update^(0+128),w
 22482  2D2B  07B4               	addwf	LCD_Update@i^(0+128),f
 22483  2D2C  3010               	movlw	16
 22484  2D2D  0234               	subwf	LCD_Update@i^(0+128),w
 22485  2D2E  1C03               	skipc
 22486  2D2F  2D13               	goto	l5947
 22487  2D30                     l5957:	
 22488                           
 22489                           ;lcd.c: 278: }
 22490                           ;lcd.c: 279: }
 22491                           ;lcd.c: 280: LCD_i_write(0xC0);
 22492  2D30  30C0               	movlw	192
 22493  2D31  31B7  27DB  31AD   	fcall	_LCD_i_write
 22494                           
 22495                           ;lcd.c: 281: for(i = 16; i < 32; i++)
 22496  2D34  3010               	movlw	16
 22497  2D35  0021               	movlb	1	; select bank1
 22498  2D36  00B3               	movwf	??_LCD_Update^(0+128)
 22499  2D37  0833               	movf	??_LCD_Update^(0+128),w
 22500  2D38  00B4               	movwf	LCD_Update@i^(0+128)
 22501  2D39                     L23:	
 22502  2D39  3020               	movlw	32
 22503  2D3A  0234               	subwf	LCD_Update@i^(0+128),w
 22504  2D3B  1803               	btfsc	3,0
 22505  2D3C  0008               	return
 22506                           
 22507                           ;lcd.c: 282: {
 22508                           ;lcd.c: 283: if( LCDText[i] == 0 )
 22509  2D3D  0834               	movf	LCD_Update@i^(0+128),w
 22510  2D3E  3EC8               	addlw	(low (_LCDText| (0+512)))& (0+255)
 22511  2D3F  0086               	movwf	6
 22512  2D40  3002               	movlw	2	; select bank5/6
 22513  2D41  0087               	movwf	7
 22514  2D42  0801               	movf	1,w
 22515  2D43  1D03               	btfss	3,2
 22516  2D44  2D47               	goto	l5969
 22517                           
 22518                           ;lcd.c: 284: {
 22519                           ;lcd.c: 285: LCD_d_write(' ');
 22520  2D45  3020               	movlw	32
 22521  2D46  2D4E               	goto	L22
 22522  2D47                     l5969:	
 22523                           ;lcd.c: 286: }
 22524                           
 22525                           
 22526                           ;lcd.c: 287: else
 22527                           ;lcd.c: 288: {
 22528                           ;lcd.c: 289: LCD_d_write(LCDText[i]);
 22529  2D47  0021               	movlb	1	; select bank1
 22530  2D48  0834               	movf	LCD_Update@i^(0+128),w
 22531  2D49  3EC8               	addlw	(low (_LCDText| (0+512)))& (0+255)
 22532  2D4A  0086               	movwf	6
 22533  2D4B  3002               	movlw	2	; select bank5/6
 22534  2D4C  0087               	movwf	7
 22535  2D4D  0801               	movf	1,w
 22536  2D4E                     L22:	
 22537  2D4E  31B7  27B7  31AD   	fcall	_LCD_d_write
 22538  2D51  3001               	movlw	1
 22539  2D52  0021               	movlb	1	; select bank1
 22540  2D53  00B3               	movwf	??_LCD_Update^(0+128)
 22541  2D54  0833               	movf	??_LCD_Update^(0+128),w
 22542  2D55  07B4               	addwf	LCD_Update@i^(0+128),f
 22543  2D56  2D39               	goto	L23
 22544  2D57                     __end_of_LCD_Update:	
 22545                           
 22546                           	psect	text75
 22547  37DB                     __ptext75:	
 22548 ;; *************** function _LCD_i_write *****************
 22549 ;; Defined at:
 22550 ;;		line 128 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22551 ;; Parameters:    Size  Location     Type
 22552 ;;  v               1    wreg     unsigned char 
 22553 ;; Auto vars:     Size  Location     Type
 22554 ;;  v               1   18[BANK1 ] unsigned char 
 22555 ;; Return value:  Size  Location     Type
 22556 ;;                  1    wreg      void 
 22557 ;; Registers used:
 22558 ;;		wreg, status,2, status,0, pclath, cstack
 22559 ;; Tracked objects:
 22560 ;;		On entry : 0/0
 22561 ;;		On exit  : 0/0
 22562 ;;		Unchanged: 0/0
 22563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22565 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22567 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22568 ;;Total ram usage:        1 bytes
 22569 ;; Hardware stack levels used:    1
 22570 ;; Hardware stack levels required when called:    7
 22571 ;; This function calls:
 22572 ;;		_DELAY_ms
 22573 ;;		_LCDWritePortA
 22574 ;;		_LCDWritePortB
 22575 ;; This function is called by:
 22576 ;;		_LCD_Update
 22577 ;; This function uses a non-reentrant model
 22578 ;;
 22579                           
 22580                           
 22581                           ;psect for function _LCD_i_write
 22582  37DB                     _LCD_i_write:	
 22583                           
 22584                           ;incstack = 0
 22585                           ; Regs used in _LCD_i_write: [wreg+status,2+status,0+pclath+cstack]
 22586                           ;LCD_i_write@v stored from wreg
 22587  37DB  0021               	movlb	1	; select bank1
 22588  37DC  00B2               	movwf	LCD_i_write@v^(0+128)
 22589                           
 22590                           ;lcd.c: 130: LCDWritePortA(0);
 22591  37DD  3000               	movlw	0
 22592  37DE  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22593                           
 22594                           ;lcd.c: 131: DELAY_ms(1);
 22595  37E1  3001               	movlw	1
 22596  37E2  0021               	movlb	1	; select bank1
 22597  37E3  00AC               	movwf	DELAY_ms@ms^(0+128)
 22598  37E4  3000               	movlw	0
 22599  37E5  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 22600  37E6  31AC  2423  31B7   	fcall	_DELAY_ms
 22601                           
 22602                           ;lcd.c: 132: LCDWritePortB(v);
 22603  37E9  0021               	movlb	1	; select bank1
 22604  37EA  0832               	movf	LCD_i_write@v^(0+128),w
 22605  37EB  31B6  26FA  31B7   	fcall	_LCDWritePortB
 22606                           
 22607                           ;lcd.c: 137: __nop();
 22608  37EE  0000               	nop
 22609                           
 22610                           ;lcd.c: 138: __nop();
 22611  37EF  0000               	nop
 22612                           
 22613                           ;lcd.c: 139: __nop();
 22614  37F0  0000               	nop
 22615                           
 22616                           ;lcd.c: 140: __nop();
 22617  37F1  0000               	nop
 22618                           
 22619                           ;lcd.c: 142: LCDWritePortA(0x40);
 22620  37F2  3040               	movlw	64
 22621  37F3  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22622                           
 22623                           ;lcd.c: 149: __nop();
 22624  37F6  0000               	nop
 22625                           
 22626                           ;lcd.c: 150: __nop();
 22627  37F7  0000               	nop
 22628                           
 22629                           ;lcd.c: 151: __nop();
 22630  37F8  0000               	nop
 22631                           
 22632                           ;lcd.c: 152: __nop();
 22633  37F9  0000               	nop
 22634                           
 22635                           ;lcd.c: 153: __nop();
 22636  37FA  0000               	nop
 22637                           
 22638                           ;lcd.c: 154: __nop();
 22639  37FB  0000               	nop
 22640                           
 22641                           ;lcd.c: 155: LCDWritePortA(0x00);
 22642  37FC  3000               	movlw	0
 22643  37FD  31B6  26DC         	fcall	_LCDWritePortA
 22644  37FF  0008               	return
 22645  3800                     __end_of_LCD_i_write:	
 22646                           ;lcd.c: 156: return;
 22647                           
 22648                           
 22649                           	psect	text76
 22650  37B7                     __ptext76:	
 22651 ;; *************** function _LCD_d_write *****************
 22652 ;; Defined at:
 22653 ;;		line 159 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22654 ;; Parameters:    Size  Location     Type
 22655 ;;  v               1    wreg     unsigned char 
 22656 ;; Auto vars:     Size  Location     Type
 22657 ;;  v               1   18[BANK1 ] unsigned char 
 22658 ;; Return value:  Size  Location     Type
 22659 ;;                  1    wreg      void 
 22660 ;; Registers used:
 22661 ;;		wreg, status,2, status,0, pclath, cstack
 22662 ;; Tracked objects:
 22663 ;;		On entry : 0/0
 22664 ;;		On exit  : 0/0
 22665 ;;		Unchanged: 0/0
 22666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22668 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22670 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22671 ;;Total ram usage:        1 bytes
 22672 ;; Hardware stack levels used:    1
 22673 ;; Hardware stack levels required when called:    7
 22674 ;; This function calls:
 22675 ;;		_DELAY_ms
 22676 ;;		_LCDWritePortA
 22677 ;;		_LCDWritePortB
 22678 ;; This function is called by:
 22679 ;;		_LCD_Update
 22680 ;; This function uses a non-reentrant model
 22681 ;;
 22682                           
 22683                           
 22684                           ;psect for function _LCD_d_write
 22685  37B7                     _LCD_d_write:	
 22686                           
 22687                           ;incstack = 0
 22688                           ; Regs used in _LCD_d_write: [wreg+status,2+status,0+pclath+cstack]
 22689                           ;LCD_d_write@v stored from wreg
 22690  37B7  0021               	movlb	1	; select bank1
 22691  37B8  00B2               	movwf	LCD_d_write@v^(0+128)
 22692                           
 22693                           ;lcd.c: 161: DELAY_ms(1);
 22694  37B9  3001               	movlw	1
 22695  37BA  00AC               	movwf	DELAY_ms@ms^(0+128)
 22696  37BB  3000               	movlw	0
 22697  37BC  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 22698  37BD  31AC  2423  31B7   	fcall	_DELAY_ms
 22699                           
 22700                           ;lcd.c: 162: LCDWritePortA(0x80);
 22701  37C0  3080               	movlw	128
 22702  37C1  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22703                           
 22704                           ;lcd.c: 163: LCDWritePortB(v);
 22705  37C4  0021               	movlb	1	; select bank1
 22706  37C5  0832               	movf	LCD_d_write@v^(0+128),w
 22707  37C6  31B6  26FA  31B7   	fcall	_LCDWritePortB
 22708                           
 22709                           ;lcd.c: 168: __nop();
 22710  37C9  0000               	nop
 22711                           
 22712                           ;lcd.c: 169: __nop();
 22713  37CA  0000               	nop
 22714                           
 22715                           ;lcd.c: 170: __nop();
 22716  37CB  0000               	nop
 22717                           
 22718                           ;lcd.c: 171: __nop();
 22719  37CC  0000               	nop
 22720                           
 22721                           ;lcd.c: 172: LCDWritePortA(0xC0);
 22722  37CD  30C0               	movlw	192
 22723  37CE  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22724                           
 22725                           ;lcd.c: 179: __nop();
 22726  37D1  0000               	nop
 22727                           
 22728                           ;lcd.c: 180: __nop();
 22729  37D2  0000               	nop
 22730                           
 22731                           ;lcd.c: 181: __nop();
 22732  37D3  0000               	nop
 22733                           
 22734                           ;lcd.c: 182: __nop();
 22735  37D4  0000               	nop
 22736                           
 22737                           ;lcd.c: 183: __nop();
 22738  37D5  0000               	nop
 22739                           
 22740                           ;lcd.c: 184: __nop();
 22741  37D6  0000               	nop
 22742                           
 22743                           ;lcd.c: 185: LCDWritePortA(0);
 22744  37D7  3000               	movlw	0
 22745  37D8  31B6  26DC         	fcall	_LCDWritePortA
 22746  37DA  0008               	return
 22747  37DB                     __end_of_LCD_d_write:	
 22748                           
 22749                           	psect	text77
 22750  35EA                     __ptext77:	
 22751 ;; *************** function _LCD_Erase *****************
 22752 ;; Defined at:
 22753 ;;		line 310 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22754 ;; Parameters:    Size  Location     Type
 22755 ;;		None
 22756 ;; Auto vars:     Size  Location     Type
 22757 ;;		None
 22758 ;; Return value:  Size  Location     Type
 22759 ;;                  1    wreg      void 
 22760 ;; Registers used:
 22761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22762 ;; Tracked objects:
 22763 ;;		On entry : 0/0
 22764 ;;		On exit  : 0/0
 22765 ;;		Unchanged: 0/0
 22766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22771 ;;Total ram usage:        0 bytes
 22772 ;; Hardware stack levels used:    1
 22773 ;; Hardware stack levels required when called:    8
 22774 ;; This function calls:
 22775 ;;		_DELAY_ms
 22776 ;;		_LCDInitWrite
 22777 ;;		_memset
 22778 ;; This function is called by:
 22779 ;;		_Source_END_DEVICE_INFO
 22780 ;;		_run_star_demo
 22781 ;;		_LCDTRXCount
 22782 ;;		_LCDDisplay
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           
 22787                           ;psect for function _LCD_Erase
 22788  35EA                     _LCD_Erase:	
 22789                           
 22790                           ;lcd.c: 313: LCDInitWrite(0x01);
 22791                           
 22792                           ;incstack = 0
 22793                           ; Regs used in _LCD_Erase: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22794  35EA  3001               	movlw	1
 22795  35EB  31B7  2718  31B5   	fcall	_LCDInitWrite
 22796                           
 22797                           ;lcd.c: 314: DELAY_ms(2);
 22798  35EE  3002               	movlw	2
 22799  35EF  0021               	movlb	1	; select bank1
 22800  35F0  00AC               	movwf	DELAY_ms@ms^(0+128)
 22801  35F1  3000               	movlw	0
 22802  35F2  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 22803  35F3  31AC  2423  31B5   	fcall	_DELAY_ms
 22804                           
 22805                           ;lcd.c: 317: memset(LCDText, ' ', 32);
 22806  35F6  3020               	movlw	32
 22807  35F7  0021               	movlb	1	; select bank1
 22808  35F8  00A0               	movwf	memset@c^(0+128)
 22809  35F9  3000               	movlw	0
 22810  35FA  00A1               	movwf	(memset@c^(0+128)+1)
 22811  35FB  3020               	movlw	32
 22812  35FC  00A2               	movwf	memset@n^(0+128)
 22813  35FD  3000               	movlw	0
 22814  35FE  00A3               	movwf	(memset@n^(0+128)+1)
 22815  35FF  30C8               	movlw	(low (_LCDText| (0+512)))& (0+255)
 22816  3600  31B6  2688         	fcall	_memset
 22817  3602  0008               	return
 22818  3603                     __end_of_LCD_Erase:	
 22819                           
 22820                           	psect	text78
 22821  3688                     __ptext78:	
 22822 ;; *************** function _memset *****************
 22823 ;; Defined at:
 22824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 22825 ;; Parameters:    Size  Location     Type
 22826 ;;  p1              1    wreg     PTR void 
 22827 ;;		 -> LCDText(33), 
 22828 ;;  c               2    0[BANK1 ] int 
 22829 ;;  n               2    2[BANK1 ] unsigned int 
 22830 ;; Auto vars:     Size  Location     Type
 22831 ;;  p1              1    5[BANK1 ] PTR void 
 22832 ;;		 -> LCDText(33), 
 22833 ;;  p               1    6[BANK1 ] PTR unsigned char 
 22834 ;;		 -> LCDText(33), 
 22835 ;; Return value:  Size  Location     Type
 22836 ;;                  1    wreg      PTR void 
 22837 ;; Registers used:
 22838 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22839 ;; Tracked objects:
 22840 ;;		On entry : 0/0
 22841 ;;		On exit  : 0/0
 22842 ;;		Unchanged: 0/0
 22843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22845 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22846 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22847 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 22848 ;;Total ram usage:        7 bytes
 22849 ;; Hardware stack levels used:    1
 22850 ;; Hardware stack levels required when called:    5
 22851 ;; This function calls:
 22852 ;;		Nothing
 22853 ;; This function is called by:
 22854 ;;		_LCD_Erase
 22855 ;; This function uses a non-reentrant model
 22856 ;;
 22857                           
 22858                           
 22859                           ;psect for function _memset
 22860  3688                     _memset:	
 22861                           
 22862                           ;incstack = 0
 22863                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 22864                           ;memset@p1 stored from wreg
 22865  3688  0021               	movlb	1	; select bank1
 22866  3689  00A5               	movwf	memset@p1^(0+128)
 22867  368A  0825               	movf	memset@p1^(0+128),w
 22868  368B  00A4               	movwf	??_memset^(0+128)
 22869  368C  0824               	movf	??_memset^(0+128),w
 22870  368D  00A6               	movwf	memset@p^(0+128)
 22871  368E                     l5485:	
 22872  368E  3001               	movlw	1
 22873  368F  02A2               	subwf	memset@n^(0+128),f
 22874  3690  3000               	movlw	0
 22875  3691  3BA3               	subwfb	(memset@n+1)^(0+128),f
 22876  3692  0A22               	incf	memset@n^(0+128),w
 22877  3693  1903               	btfsc	3,2
 22878  3694  0A23               	incf	(memset@n+1)^(0+128),w
 22879  3695  1903               	btfsc	3,2
 22880  3696  0008               	return
 22881  3697  0820               	movf	memset@c^(0+128),w
 22882  3698  00A4               	movwf	??_memset^(0+128)
 22883  3699  0826               	movf	memset@p^(0+128),w
 22884  369A  0086               	movwf	6
 22885  369B  3002               	movlw	2	; select bank4/5
 22886  369C  0087               	movwf	7
 22887  369D  0824               	movf	??_memset^(0+128),w
 22888  369E  0081               	movwf	1
 22889  369F  3001               	movlw	1
 22890  36A0  00A4               	movwf	??_memset^(0+128)
 22891  36A1  0824               	movf	??_memset^(0+128),w
 22892  36A2  07A6               	addwf	memset@p^(0+128),f
 22893  36A3  2E8E               	goto	l5485
 22894  36A4                     __end_of_memset:	
 22895                           ;	Return value of _memset is never used
 22896                           
 22897                           
 22898                           	psect	text79
 22899  3718                     __ptext79:	
 22900 ;; *************** function _LCDInitWrite *****************
 22901 ;; Defined at:
 22902 ;;		line 96 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22903 ;; Parameters:    Size  Location     Type
 22904 ;;  v               1    wreg     unsigned char 
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;  v               1    5[BANK1 ] unsigned char 
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1    wreg      void 
 22909 ;; Registers used:
 22910 ;;		wreg, status,2, status,0, pclath, cstack
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22917 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22919 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22920 ;;Total ram usage:        1 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:    7
 22923 ;; This function calls:
 22924 ;;		_LCDWritePortA
 22925 ;;		_LCDWritePortB
 22926 ;; This function is called by:
 22927 ;;		_LCD_Initialize
 22928 ;;		_LCD_Erase
 22929 ;; This function uses a non-reentrant model
 22930 ;;
 22931                           
 22932                           
 22933                           ;psect for function _LCDInitWrite
 22934  3718                     _LCDInitWrite:	
 22935                           
 22936                           ;incstack = 0
 22937                           ; Regs used in _LCDInitWrite: [wreg+status,2+status,0+pclath+cstack]
 22938                           ;LCDInitWrite@v stored from wreg
 22939  3718  0021               	movlb	1	; select bank1
 22940  3719  00A5               	movwf	LCDInitWrite@v^(0+128)
 22941                           
 22942                           ;lcd.c: 98: LCDWritePortA(0);
 22943  371A  3000               	movlw	0
 22944  371B  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22945                           
 22946                           ;lcd.c: 99: LCDWritePortB(v);
 22947  371E  0021               	movlb	1	; select bank1
 22948  371F  0825               	movf	LCDInitWrite@v^(0+128),w
 22949  3720  31B6  26FA  31B7   	fcall	_LCDWritePortB
 22950                           
 22951                           ;lcd.c: 103: __nop();
 22952  3723  0000               	nop
 22953                           
 22954                           ;lcd.c: 104: __nop();
 22955  3724  0000               	nop
 22956                           
 22957                           ;lcd.c: 105: __nop();
 22958  3725  0000               	nop
 22959                           
 22960                           ;lcd.c: 107: LCDWritePortA(0x40);
 22961  3726  3040               	movlw	64
 22962  3727  31B6  26DC  31B7   	fcall	_LCDWritePortA
 22963                           
 22964                           ;lcd.c: 117: __nop();
 22965  372A  0000               	nop
 22966                           
 22967                           ;lcd.c: 118: __nop();
 22968  372B  0000               	nop
 22969                           
 22970                           ;lcd.c: 119: __nop();
 22971  372C  0000               	nop
 22972                           
 22973                           ;lcd.c: 120: __nop();
 22974  372D  0000               	nop
 22975                           
 22976                           ;lcd.c: 121: __nop();
 22977  372E  0000               	nop
 22978                           
 22979                           ;lcd.c: 122: __nop();
 22980  372F  0000               	nop
 22981                           
 22982                           ;lcd.c: 123: __nop();
 22983  3730  0000               	nop
 22984                           
 22985                           ;lcd.c: 124: __nop();
 22986  3731  0000               	nop
 22987                           
 22988                           ;lcd.c: 125: LCDWritePortA(0);
 22989  3732  3000               	movlw	0
 22990  3733  31B6  26DC         	fcall	_LCDWritePortA
 22991  3735  0008               	return
 22992  3736                     __end_of_LCDInitWrite:	
 22993                           
 22994                           	psect	text80
 22995  36FA                     __ptext80:	
 22996 ;; *************** function _LCDWritePortB *****************
 22997 ;; Defined at:
 22998 ;;		line 84 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 22999 ;; Parameters:    Size  Location     Type
 23000 ;;  v               1    wreg     unsigned char 
 23001 ;; Auto vars:     Size  Location     Type
 23002 ;;  v               1    3[BANK1 ] unsigned char 
 23003 ;;  preRFIE         1    4[BANK1 ] unsigned char 
 23004 ;; Return value:  Size  Location     Type
 23005 ;;                  1    wreg      void 
 23006 ;; Registers used:
 23007 ;;		wreg, status,2, status,0, pclath, cstack
 23008 ;; Tracked objects:
 23009 ;;		On entry : 0/0
 23010 ;;		On exit  : 0/0
 23011 ;;		Unchanged: 0/0
 23012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23014 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23016 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23017 ;;Total ram usage:        2 bytes
 23018 ;; Hardware stack levels used:    1
 23019 ;; Hardware stack levels required when called:    6
 23020 ;; This function calls:
 23021 ;;		_SPIPut
 23022 ;; This function is called by:
 23023 ;;		_LCDInitWrite
 23024 ;;		_LCD_i_write
 23025 ;;		_LCD_d_write
 23026 ;; This function uses a non-reentrant model
 23027 ;;
 23028                           
 23029                           
 23030                           ;psect for function _LCDWritePortB
 23031  36FA                     _LCDWritePortB:	
 23032                           
 23033                           ;incstack = 0
 23034                           ; Regs used in _LCDWritePortB: [wreg+status,2+status,0+pclath+cstack]
 23035                           ;LCDWritePortB@v stored from wreg
 23036  36FA  0021               	movlb	1	; select bank1
 23037  36FB  00A3               	movwf	LCDWritePortB@v^(0+128)
 23038                           
 23039                           ;lcd.c: 86: uint8_t preRFIE = INTCONbits.IOCIE;
 23040  36FC  3000               	movlw	0
 23041  36FD  198B               	btfsc	11,3	;volatile
 23042  36FE  3001               	movlw	1
 23043  36FF  00A4               	movwf	LCDWritePortB@preRFIE^(0+128)
 23044                           
 23045                           ;lcd.c: 87: INTCONbits.IOCIE = 0;
 23046  3700  118B               	bcf	11,3	;volatile
 23047                           
 23048                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
 23049  3701  0022               	movlb	2	; select bank2
 23050  3702  110C               	bcf	12,2	;volatile
 23051                           
 23052                           ;lcd.c: 89: SPIPut(0x40);
 23053  3703  3040               	movlw	64
 23054  3704  31B5  25D3  31B6   	fcall	_SPIPut
 23055                           
 23056                           ;lcd.c: 90: SPIPut(0x13);
 23057  3707  3013               	movlw	19
 23058  3708  31B5  25D3  31B6   	fcall	_SPIPut
 23059                           
 23060                           ;lcd.c: 91: SPIPut(v);
 23061  370B  0021               	movlb	1	; select bank1
 23062  370C  0823               	movf	LCDWritePortB@v^(0+128),w
 23063  370D  31B5  25D3         	fcall	_SPIPut
 23064                           
 23065                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
 23066  370F  0022               	movlb	2	; select bank2
 23067  3710  150C               	bsf	12,2	;volatile
 23068                           
 23069                           ;lcd.c: 93: INTCONbits.IOCIE = preRFIE;
 23070  3711  0021               	movlb	1	; select bank1
 23071  3712  0C24               	rrf	LCDWritePortB@preRFIE^(0+128),w
 23072  3713  1C03               	skipc
 23073  3714  118B               	bcf	11,3	;volatile
 23074  3715  1803               	skipnc
 23075  3716  158B               	bsf	11,3	;volatile
 23076  3717  0008               	return
 23077  3718                     __end_of_LCDWritePortB:	
 23078                           
 23079                           	psect	text81
 23080  36DC                     __ptext81:	
 23081 ;; *************** function _LCDWritePortA *****************
 23082 ;; Defined at:
 23083 ;;		line 72 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 23084 ;; Parameters:    Size  Location     Type
 23085 ;;  v               1    wreg     unsigned char 
 23086 ;; Auto vars:     Size  Location     Type
 23087 ;;  v               1    3[BANK1 ] unsigned char 
 23088 ;;  preRFIE         1    4[BANK1 ] unsigned char 
 23089 ;; Return value:  Size  Location     Type
 23090 ;;                  1    wreg      void 
 23091 ;; Registers used:
 23092 ;;		wreg, status,2, status,0, pclath, cstack
 23093 ;; Tracked objects:
 23094 ;;		On entry : 0/0
 23095 ;;		On exit  : 0/0
 23096 ;;		Unchanged: 0/0
 23097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23099 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23101 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23102 ;;Total ram usage:        2 bytes
 23103 ;; Hardware stack levels used:    1
 23104 ;; Hardware stack levels required when called:    6
 23105 ;; This function calls:
 23106 ;;		_SPIPut
 23107 ;; This function is called by:
 23108 ;;		_LCDInitWrite
 23109 ;;		_LCD_i_write
 23110 ;;		_LCD_d_write
 23111 ;;		_LCD_Initialize
 23112 ;; This function uses a non-reentrant model
 23113 ;;
 23114                           
 23115                           
 23116                           ;psect for function _LCDWritePortA
 23117  36DC                     _LCDWritePortA:	
 23118                           
 23119                           ;incstack = 0
 23120                           ; Regs used in _LCDWritePortA: [wreg+status,2+status,0+pclath+cstack]
 23121                           ;LCDWritePortA@v stored from wreg
 23122  36DC  0021               	movlb	1	; select bank1
 23123  36DD  00A3               	movwf	LCDWritePortA@v^(0+128)
 23124                           
 23125                           ;lcd.c: 74: uint8_t preRFIE = INTCONbits.IOCIE;
 23126  36DE  3000               	movlw	0
 23127  36DF  198B               	btfsc	11,3	;volatile
 23128  36E0  3001               	movlw	1
 23129  36E1  00A4               	movwf	LCDWritePortA@preRFIE^(0+128)
 23130                           
 23131                           ;lcd.c: 75: INTCONbits.IOCIE = 0;
 23132  36E2  118B               	bcf	11,3	;volatile
 23133                           
 23134                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
 23135  36E3  0022               	movlb	2	; select bank2
 23136  36E4  110C               	bcf	12,2	;volatile
 23137                           
 23138                           ;lcd.c: 77: SPIPut(0x40);
 23139  36E5  3040               	movlw	64
 23140  36E6  31B5  25D3  31B6   	fcall	_SPIPut
 23141                           
 23142                           ;lcd.c: 78: SPIPut(0x12);
 23143  36E9  3012               	movlw	18
 23144  36EA  31B5  25D3  31B6   	fcall	_SPIPut
 23145                           
 23146                           ;lcd.c: 79: SPIPut(v);
 23147  36ED  0021               	movlb	1	; select bank1
 23148  36EE  0823               	movf	LCDWritePortA@v^(0+128),w
 23149  36EF  31B5  25D3         	fcall	_SPIPut
 23150                           
 23151                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
 23152  36F1  0022               	movlb	2	; select bank2
 23153  36F2  150C               	bsf	12,2	;volatile
 23154                           
 23155                           ;lcd.c: 81: INTCONbits.IOCIE = preRFIE;
 23156  36F3  0021               	movlb	1	; select bank1
 23157  36F4  0C24               	rrf	LCDWritePortA@preRFIE^(0+128),w
 23158  36F5  1C03               	skipc
 23159  36F6  118B               	bcf	11,3	;volatile
 23160  36F7  1803               	skipnc
 23161  36F8  158B               	bsf	11,3	;volatile
 23162  36F9  0008               	return
 23163  36FA                     __end_of_LCDWritePortA:	
 23164                           
 23165                           	psect	text82
 23166  35D3                     __ptext82:	
 23167 ;; *************** function _SPIPut *****************
 23168 ;; Defined at:
 23169 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 23170 ;; Parameters:    Size  Location     Type
 23171 ;;  v               1    wreg     unsigned char 
 23172 ;; Auto vars:     Size  Location     Type
 23173 ;;  v               1    2[BANK1 ] unsigned char 
 23174 ;;  i               1    1[BANK1 ] unsigned char 
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		wreg
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23185 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23186 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23187 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23188 ;;Total ram usage:        3 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:    5
 23191 ;; This function calls:
 23192 ;;		Nothing
 23193 ;; This function is called by:
 23194 ;;		_RegisterSet
 23195 ;;		_RegisterRead
 23196 ;;		_WriteFIFO
 23197 ;;		_NVMRead
 23198 ;;		_NVMWrite
 23199 ;;		_EEPROM_Read
 23200 ;;		_LCDInitPortA
 23201 ;;		_LCDInitPortB
 23202 ;;		_LCDWritePortA
 23203 ;;		_LCDWritePortB
 23204 ;;		_SPIGet
 23205 ;; This function uses a non-reentrant model
 23206 ;;
 23207                           
 23208                           
 23209                           ;psect for function _SPIPut
 23210  35D3                     _SPIPut:	
 23211                           
 23212                           ;incstack = 0
 23213                           ; Regs used in _SPIPut: [wreg]
 23214                           ;SPIPut@v stored from wreg
 23215  35D3  0021               	movlb	1	; select bank1
 23216  35D4  00A2               	movwf	SPIPut@v^(0+128)
 23217                           
 23218                           ;spi.c: 47: uint8_t i;
 23219                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 23220  35D5  0020               	movlb	0	; select bank0
 23221  35D6  1191               	bcf	17,3	;volatile
 23222                           
 23223                           ;spi.c: 64: i = SSP1BUF;
 23224  35D7  0024               	movlb	4	; select bank4
 23225  35D8  0811               	movf	17,w	;volatile
 23226  35D9  0021               	movlb	1	; select bank1
 23227  35DA  00A0               	movwf	??_SPIPut^(0+128)
 23228  35DB  0820               	movf	??_SPIPut^(0+128),w
 23229  35DC  00A1               	movwf	SPIPut@i^(0+128)
 23230  35DD                     l5097:	
 23231                           ;spi.c: 66: do
 23232                           
 23233                           
 23234                           ;spi.c: 67: {
 23235                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 23236  35DD  0024               	movlb	4	; select bank4
 23237  35DE  1395               	bcf	21,7	;volatile
 23238                           
 23239                           ;spi.c: 69: SSP1BUF = v;
 23240  35DF  0021               	movlb	1	; select bank1
 23241  35E0  0822               	movf	SPIPut@v^(0+128),w
 23242  35E1  0024               	movlb	4	; select bank4
 23243  35E2  0091               	movwf	17	;volatile
 23244                           
 23245                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 23246  35E3  1B95               	btfsc	21,7	;volatile
 23247  35E4  2DDD               	goto	l5097
 23248  35E5                     l1089:	
 23249                           ;spi.c: 72: while( PIR1bits.SSP1IF == 0 );
 23250                           
 23251  35E5  0020               	movlb	0	; select bank0
 23252  35E6  1D91               	btfss	17,3	;volatile
 23253  35E7  2DE5               	goto	l1089
 23254                           
 23255                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 23256  35E8  1191               	bcf	17,3	;volatile
 23257  35E9  0008               	return
 23258  35EA                     __end_of_SPIPut:	
 23259                           
 23260                           	psect	text83
 23261  2C23                     __ptext83:	
 23262 ;; *************** function _DELAY_ms *****************
 23263 ;; Defined at:
 23264 ;;		line 109 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 23265 ;; Parameters:    Size  Location     Type
 23266 ;;  ms              2   12[BANK1 ] unsigned int 
 23267 ;; Auto vars:     Size  Location     Type
 23268 ;;  cyclesRequir    4   14[BANK1 ] long 
 23269 ;; Return value:  Size  Location     Type
 23270 ;;                  1    wreg      void 
 23271 ;; Registers used:
 23272 ;;		wreg, status,2, status,0, pclath, cstack
 23273 ;; Tracked objects:
 23274 ;;		On entry : 0/0
 23275 ;;		On exit  : 0/0
 23276 ;;		Unchanged: 0/0
 23277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23279 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23281 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 23282 ;;Total ram usage:        6 bytes
 23283 ;; Hardware stack levels used:    1
 23284 ;; Hardware stack levels required when called:    6
 23285 ;; This function calls:
 23286 ;;		___lmul
 23287 ;; This function is called by:
 23288 ;;		_MiMAC_Init
 23289 ;;		_Source_END_DEVICE_INFO
 23290 ;;		_Process_RxMessage
 23291 ;;		_run_star_demo
 23292 ;;		_freezer_feature
 23293 ;;		_LCD_i_write
 23294 ;;		_LCD_d_write
 23295 ;;		_LCD_Initialize
 23296 ;;		_LCD_Erase
 23297 ;;		_LCDTRXCount
 23298 ;;		_LCDDisplay
 23299 ;; This function uses a non-reentrant model
 23300 ;;
 23301                           
 23302                           
 23303                           ;psect for function _DELAY_ms
 23304  2C23                     _DELAY_ms:	
 23305                           
 23306                           ;delay.c: 113: int32_t cyclesRequiredForEntireDelay;
 23307                           ;delay.c: 116: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
 23308                           
 23309                           ;incstack = 0
 23310                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
 23311  2C23  0021               	movlb	1	; select bank1
 23312  2C24  082C               	movf	DELAY_ms@ms^(0+128),w
 23313  2C25  00A0               	movwf	___lmul@multiplier^(0+128)
 23314  2C26  082D               	movf	(DELAY_ms@ms+1)^(0+128),w
 23315  2C27  00A1               	movwf	(___lmul@multiplier^(0+128)+1)
 23316  2C28  01A2               	clrf	(___lmul@multiplier^(0+128)+2)
 23317  2C29  01A3               	clrf	(___lmul@multiplier^(0+128)+3)
 23318  2C2A  3000               	movlw	0
 23319  2C2B  00A7               	movwf	(___lmul@multiplicand+3)^(0+128)
 23320  2C2C  3000               	movlw	0
 23321  2C2D  00A6               	movwf	(___lmul@multiplicand+2)^(0+128)
 23322  2C2E  3009               	movlw	9
 23323  2C2F  00A5               	movwf	(___lmul@multiplicand+1)^(0+128)
 23324  2C30  30C4               	movlw	196
 23325  2C31  00A4               	movwf	___lmul@multiplicand^(0+128)
 23326  2C32  31A9  2155  31AC   	fcall	___lmul
 23327  2C35  0021               	movlb	1	; select bank1
 23328  2C36  0823               	movf	(?___lmul+3)^(0+128),w
 23329  2C37  00B1               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128)
 23330  2C38  0822               	movf	(?___lmul+2)^(0+128),w
 23331  2C39  00B0               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128)
 23332  2C3A  0821               	movf	(?___lmul+1)^(0+128),w
 23333  2C3B  00AF               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128)
 23334  2C3C  0820               	movf	?___lmul^(0+128),w
 23335  2C3D  00AE               	movwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128)
 23336                           
 23337                           ;delay.c: 120: cyclesRequiredForEntireDelay -= (148 + 22);
 23338  2C3E  3056               	movlw	86
 23339  2C3F  07AE               	addwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),f
 23340  2C40  30FF               	movlw	255
 23341  2C41  3DAF               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),f
 23342  2C42  30FF               	movlw	255
 23343  2C43  3DB0               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),f
 23344  2C44  30FF               	movlw	255
 23345  2C45  3DB1               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),f
 23346                           
 23347                           ;delay.c: 122: if (cyclesRequiredForEntireDelay <= (170+25))
 23348  2C46  1BB1               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),7
 23349  2C47  0008               	return
 23350  2C48  0831               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),w
 23351  2C49  1D03               	btfss	3,2
 23352  2C4A  2C55               	goto	l5319
 23353  2C4B  0830               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),w
 23354  2C4C  1D03               	btfss	3,2
 23355  2C4D  2C55               	goto	l5319
 23356  2C4E  082F               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),w
 23357  2C4F  1D03               	btfss	3,2
 23358  2C50  2C55               	goto	l5319
 23359  2C51  30C4               	movlw	196
 23360  2C52  022E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),w
 23361  2C53  1C03               	btfss	3,0
 23362  2C54  0008               	return
 23363  2C55                     l5319:	
 23364  2C55  1BB1               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),7
 23365  2C56  0008               	return
 23366  2C57  0831               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),w
 23367  2C58  1D03               	btfss	3,2
 23368  2C59  2C64               	goto	l989
 23369  2C5A  0830               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),w
 23370  2C5B  1D03               	btfss	3,2
 23371  2C5C  2C64               	goto	l989
 23372  2C5D  082F               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),w
 23373  2C5E  1D03               	btfss	3,2
 23374  2C5F  2C64               	goto	l989
 23375  2C60  3001               	movlw	1
 23376  2C61  022E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),w
 23377  2C62  1C03               	btfss	3,0
 23378  2C63  0008               	return
 23379  2C64                     l989:	
 23380                           ;delay.c: 126: else
 23381                           ;delay.c: 127: {
 23382                           ;delay.c: 128: while (cyclesRequiredForEntireDelay > 0)
 23383                           
 23384                           ;delay.c: 125: }
 23385                           
 23386                           ;delay.c: 123: {
 23387                           ;delay.c: 124: return;
 23388                           
 23389                           
 23390                           ;delay.c: 129: {
 23391                           ;delay.c: 131: __nop();
 23392  2C64  0000               	nop
 23393                           
 23394                           ;delay.c: 132: cyclesRequiredForEntireDelay -= 39;
 23395  2C65  30D9               	movlw	217
 23396  2C66  0021               	movlb	1	; select bank1
 23397  2C67  07AE               	addwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),f
 23398  2C68  30FF               	movlw	255
 23399  2C69  3DAF               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),f
 23400  2C6A  30FF               	movlw	255
 23401  2C6B  3DB0               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),f
 23402  2C6C  30FF               	movlw	255
 23403  2C6D  3DB1               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),f
 23404  2C6E  2C55               	goto	l5319
 23405  2C6F                     __end_of_DELAY_ms:	
 23406                           
 23407                           	psect	text84
 23408  2955                     __ptext84:	
 23409 ;; *************** function ___lmul *****************
 23410 ;; Defined at:
 23411 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 23412 ;; Parameters:    Size  Location     Type
 23413 ;;  multiplier      4    0[BANK1 ] unsigned long 
 23414 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;  product         4    8[BANK1 ] unsigned long 
 23417 ;; Return value:  Size  Location     Type
 23418 ;;                  4    0[BANK1 ] unsigned long 
 23419 ;; Registers used:
 23420 ;;		wreg, status,2, status,0
 23421 ;; Tracked objects:
 23422 ;;		On entry : 0/0
 23423 ;;		On exit  : 0/0
 23424 ;;		Unchanged: 0/0
 23425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23426 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23427 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23429 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 23430 ;;Total ram usage:       12 bytes
 23431 ;; Hardware stack levels used:    1
 23432 ;; Hardware stack levels required when called:    5
 23433 ;; This function calls:
 23434 ;;		Nothing
 23435 ;; This function is called by:
 23436 ;;		_DELAY_10us
 23437 ;;		_DELAY_ms
 23438 ;; This function uses a non-reentrant model
 23439 ;;
 23440                           
 23441                           
 23442                           ;psect for function ___lmul
 23443  2955                     ___lmul:	
 23444                           
 23445                           ;incstack = 0
 23446                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 23447  2955  3000               	movlw	0
 23448  2956  0021               	movlb	1	; select bank1
 23449  2957  00AB               	movwf	(___lmul@product+3)^(0+128)
 23450  2958  3000               	movlw	0
 23451  2959  00AA               	movwf	(___lmul@product+2)^(0+128)
 23452  295A  3000               	movlw	0
 23453  295B  00A9               	movwf	(___lmul@product+1)^(0+128)
 23454  295C  3000               	movlw	0
 23455  295D  00A8               	movwf	___lmul@product^(0+128)
 23456  295E                     l5123:	
 23457  295E  1C20               	btfss	___lmul@multiplier^(0+128),0
 23458  295F  2968               	goto	l5127
 23459  2960  0824               	movf	___lmul@multiplicand^(0+128),w
 23460  2961  07A8               	addwf	___lmul@product^(0+128),f
 23461  2962  0825               	movf	(___lmul@multiplicand+1)^(0+128),w
 23462  2963  3DA9               	addwfc	(___lmul@product+1)^(0+128),f
 23463  2964  0826               	movf	(___lmul@multiplicand+2)^(0+128),w
 23464  2965  3DAA               	addwfc	(___lmul@product+2)^(0+128),f
 23465  2966  0827               	movf	(___lmul@multiplicand+3)^(0+128),w
 23466  2967  3DAB               	addwfc	(___lmul@product+3)^(0+128),f
 23467  2968                     l5127:	
 23468  2968  3001               	movlw	1
 23469  2969                     u4695:	
 23470  2969  35A4               	lslf	___lmul@multiplicand^(0+128),f
 23471  296A  0DA5               	rlf	(___lmul@multiplicand+1)^(0+128),f
 23472  296B  0DA6               	rlf	(___lmul@multiplicand+2)^(0+128),f
 23473  296C  0DA7               	rlf	(___lmul@multiplicand+3)^(0+128),f
 23474  296D  0B89               	decfsz	9,f
 23475  296E  2969               	goto	u4695
 23476  296F  3001               	movlw	1
 23477  2970                     u4705:	
 23478  2970  36A3               	lsrf	(___lmul@multiplier+3)^(0+128),f
 23479  2971  0CA2               	rrf	(___lmul@multiplier+2)^(0+128),f
 23480  2972  0CA1               	rrf	(___lmul@multiplier+1)^(0+128),f
 23481  2973  0CA0               	rrf	___lmul@multiplier^(0+128),f
 23482  2974  0B89               	decfsz	9,f
 23483  2975  2970               	goto	u4705
 23484  2976  0823               	movf	(___lmul@multiplier+3)^(0+128),w
 23485  2977  0422               	iorwf	(___lmul@multiplier+2)^(0+128),w
 23486  2978  0421               	iorwf	(___lmul@multiplier+1)^(0+128),w
 23487  2979  0420               	iorwf	___lmul@multiplier^(0+128),w
 23488  297A  1D03               	skipz
 23489  297B  295E               	goto	l5123
 23490  297C  082B               	movf	(___lmul@product+3)^(0+128),w
 23491  297D  00A3               	movwf	(?___lmul+3)^(0+128)
 23492  297E  082A               	movf	(___lmul@product+2)^(0+128),w
 23493  297F  00A2               	movwf	(?___lmul+2)^(0+128)
 23494  2980  0829               	movf	(___lmul@product+1)^(0+128),w
 23495  2981  00A1               	movwf	(?___lmul+1)^(0+128)
 23496  2982  0828               	movf	___lmul@product^(0+128),w
 23497  2983  00A0               	movwf	?___lmul^(0+128)
 23498  2984  0008               	return
 23499  2985                     __end_of___lmul:	
 23500                           
 23501                           	psect	intentry
 23502  0004                     __pintentry:	
 23503 ;; *************** function _high_isr *****************
 23504 ;; Defined at:
 23505 ;;		line 1242 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 23506 ;; Parameters:    Size  Location     Type
 23507 ;;		None
 23508 ;; Auto vars:     Size  Location     Type
 23509 ;;  ackInfoIndex    1   52[BANK0 ] unsigned char 
 23510 ;;  i               1   55[BANK0 ] unsigned char 
 23511 ;;  fifo_stat       1   45[BANK0 ] unsigned char 
 23512 ;;  ackPacket       4   46[BANK0 ] unsigned char [4]
 23513 ;;  counter         2   43[BANK0 ] unsigned int 
 23514 ;;  BankIndex       1   54[BANK0 ] unsigned char 
 23515 ;;  PacketLen       1   53[BANK0 ] unsigned char 
 23516 ;;  RxPacketPtr     1   51[BANK0 ] unsigned char 
 23517 ;;  bAck            1   50[BANK0 ] unsigned char 
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      void 
 23520 ;; Registers used:
 23521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23528 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23529 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23530 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23531 ;;Total ram usage:       25 bytes
 23532 ;; Hardware stack levels used:    1
 23533 ;; Hardware stack levels required when called:    4
 23534 ;; This function calls:
 23535 ;;		_UserInterruptHandler
 23536 ;;		i1_MiWi_TickGet
 23537 ;;		i1_RegisterRead
 23538 ;;		i1_SPIGet
 23539 ;;		i1_TxPacket
 23540 ;;		i1___bmul
 23541 ;;		i1___wmul
 23542 ;; This function is called by:
 23543 ;;		Interrupt level 1
 23544 ;; This function uses a non-reentrant model
 23545 ;;
 23546                           
 23547  0004                     _high_isr:	
 23548                           
 23549                           ;incstack = 0
 23550 ;; hardware stack exceeded
 23551  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23552                           
 23553                           ; Regs used in _high_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23554  0005  3180               	pagesel	$
 23555  0006  0020               	movlb	0	; select bank0
 23556  0007  087F               	movf	127,w
 23557  0008  00CA               	movwf	??_high_isr+11
 23558                           
 23559                           ;drv_mrf_miwi_89xa.c: 1257: LATDbits.LATD6 = 1;
 23560  0009  0022               	movlb	2	; select bank2
 23561  000A  170F               	bsf	15,6	;volatile
 23562                           
 23563                           ;drv_mrf_miwi_89xa.c: 1258: LATDbits.LATD6 = 0;
 23564  000B  130F               	bcf	15,6	;volatile
 23565                           
 23566                           ;drv_mrf_miwi_89xa.c: 1260: if( IOCBFbits.IOCBF3 && INTCONbits.IOCIE )
 23567  000C  0027               	movlb	7	; select bank7
 23568  000D  1996               	btfsc	22,3	;volatile
 23569  000E  1D8B               	btfss	11,3	;volatile
 23570  000F  2B7E               	goto	i1l8247
 23571                           
 23572                           ;drv_mrf_miwi_89xa.c: 1261: {
 23573                           ;drv_mrf_miwi_89xa.c: 1264: if(RF_Mode == 0x60)
 23574  0010  3060               	movlw	96
 23575  0011  0023               	movlb	3	; select bank3
 23576  0012  064F               	xorwf	_RF_Mode^(0+384),w
 23577  0013  1D03               	btfss	3,2
 23578  0014  2B76               	goto	i1l8241
 23579                           
 23580                           ;drv_mrf_miwi_89xa.c: 1265: {
 23581                           ;drv_mrf_miwi_89xa.c: 1268: uint8_t RxPacketPtr;
 23582                           ;drv_mrf_miwi_89xa.c: 1269: uint8_t PacketLen;
 23583                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t BankIndex;
 23584                           ;drv_mrf_miwi_89xa.c: 1271: uint16_t counter;
 23585                           ;drv_mrf_miwi_89xa.c: 1272: bool bAck;
 23586                           ;drv_mrf_miwi_89xa.c: 1273: uint8_t ackPacket[4];
 23587                           ;drv_mrf_miwi_89xa.c: 1276: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 23588  0015  3028               	movlw	40
 23589  0016  31B7  2736  3180   	fcall	i1_RegisterRead
 23590  0019  3689               	lsrf	9,f
 23591  001A  0020               	movlb	0	; select bank0
 23592  001B  00BF               	movwf	??_high_isr
 23593  001C  083F               	movf	??_high_isr,w
 23594  001D  0023               	movlb	3	; select bank3
 23595  001E  00D1               	movwf	_RSSIVal^(0+384)
 23596                           
 23597                           ;drv_mrf_miwi_89xa.c: 1279: RSSILock = RSSIVal;
 23598  001F  0851               	movf	_RSSIVal^(0+384),w
 23599  0020  0020               	movlb	0	; select bank0
 23600  0021  00BF               	movwf	??_high_isr
 23601  0022  083F               	movf	??_high_isr,w
 23602  0023  0023               	movlb	3	; select bank3
 23603  0024  00D0               	movwf	_RSSILock^(0+384)
 23604                           
 23605                           ;drv_mrf_miwi_89xa.c: 1281: LATCbits.LATC2 = 0;
 23606  0025  0022               	movlb	2	; select bank2
 23607  0026  110E               	bcf	14,2	;volatile
 23608                           
 23609                           ;drv_mrf_miwi_89xa.c: 1282: PacketLen = SPIGet();
 23610  0027  31B4  24FE  3180   	fcall	i1_SPIGet
 23611  002A  0020               	movlb	0	; select bank0
 23612  002B  00BF               	movwf	??_high_isr
 23613  002C  083F               	movf	??_high_isr,w
 23614  002D  00D5               	movwf	high_isr@PacketLen
 23615                           
 23616                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC2 = 1;
 23617  002E  0022               	movlb	2	; select bank2
 23618  002F  150E               	bsf	14,2	;volatile
 23619                           
 23620                           ;drv_mrf_miwi_89xa.c: 1286: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 23621  0030  0020               	movlb	0	; select bank0
 23622  0031  01D6               	clrf	high_isr@BankIndex
 23623  0032  3002               	movlw	2
 23624  0033  0256               	subwf	high_isr@BankIndex,w
 23625  0034  1803               	btfsc	3,0
 23626  0035  2859               	goto	i1l8099
 23627  0036                     i1l8091:	
 23628                           
 23629                           ;drv_mrf_miwi_89xa.c: 1287: {
 23630                           ;drv_mrf_miwi_89xa.c: 1288: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 23631  0036  0856               	movf	high_isr@BankIndex,w
 23632  0037  00BF               	movwf	??_high_isr
 23633  0038  01C0               	clrf	??_high_isr+1
 23634  0039  083F               	movf	??_high_isr,w
 23635  003A  00F0               	movwf	i1___wmul@multiplier
 23636  003B  0840               	movf	??_high_isr+1,w
 23637  003C  00F1               	movwf	i1___wmul@multiplier+1
 23638  003D  3039               	movlw	57
 23639  003E  00F2               	movwf	i1___wmul@multiplicand
 23640  003F  3000               	movlw	0
 23641  0040  00F3               	movwf	i1___wmul@multiplicand+1
 23642  0041  31B6  2652  3180   	fcall	i1___wmul
 23643  0044  30F2               	movlw	242
 23644  0045  0020               	movlb	0	; select bank0
 23645  0046  00C1               	movwf	??_high_isr+2
 23646  0047  3022               	movlw	34
 23647  0048  00C2               	movwf	??_high_isr+3
 23648  0049  0870               	movf	?i1___wmul,w
 23649  004A  0741               	addwf	??_high_isr+2,w
 23650  004B  0086               	movwf	6
 23651  004C  0871               	movf	?i1___wmul+1,w
 23652  004D  3D42               	addwfc	??_high_isr+3,w
 23653  004E  0087               	movwf	7
 23654  004F  1C01               	btfss	1,0
 23655  0050  2859               	goto	i1l8099
 23656                           
 23657                           ;drv_mrf_miwi_89xa.c: 1289: {
 23658                           ;drv_mrf_miwi_89xa.c: 1290: break;
 23659  0051  3001               	movlw	1
 23660  0052  00BF               	movwf	??_high_isr
 23661  0053  083F               	movf	??_high_isr,w
 23662  0054  07D6               	addwf	high_isr@BankIndex,f
 23663  0055  3002               	movlw	2
 23664  0056  0256               	subwf	high_isr@BankIndex,w
 23665  0057  1C03               	skipc
 23666  0058  2836               	goto	i1l8091
 23667  0059                     i1l8099:	
 23668                           
 23669                           ;drv_mrf_miwi_89xa.c: 1291: }
 23670                           ;drv_mrf_miwi_89xa.c: 1292: }
 23671                           ;drv_mrf_miwi_89xa.c: 1295: if( PacketLen == 2 )
 23672  0059  3002               	movlw	2
 23673  005A  0655               	xorwf	high_isr@PacketLen,w
 23674  005B  1D03               	btfss	3,2
 23675  005C  2860               	goto	i1l8103
 23676                           
 23677                           ;drv_mrf_miwi_89xa.c: 1296: {
 23678                           ;drv_mrf_miwi_89xa.c: 1297: bAck = 1;
 23679  005D  01D2               	clrf	high_isr@bAck
 23680  005E  0AD2               	incf	high_isr@bAck,f
 23681                           
 23682                           ;drv_mrf_miwi_89xa.c: 1298: }
 23683  005F  2861               	goto	i1l8105
 23684  0060                     i1l8103:	
 23685                           
 23686                           ;drv_mrf_miwi_89xa.c: 1299: else
 23687                           ;drv_mrf_miwi_89xa.c: 1300: {
 23688                           ;drv_mrf_miwi_89xa.c: 1301: bAck = 0;
 23689  0060  01D2               	clrf	high_isr@bAck
 23690  0061                     i1l8105:	
 23691                           
 23692                           ;drv_mrf_miwi_89xa.c: 1302: }
 23693                           ;drv_mrf_miwi_89xa.c: 1305: if( PacketLen >= (35+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 23694  0061  3037               	movlw	55
 23695  0062  0255               	subwf	high_isr@PacketLen,w
 23696  0063  1803               	skipnc
 23697  0064  286F               	goto	i1l8113
 23698  0065  0855               	movf	high_isr@PacketLen,w
 23699  0066  1903               	btfsc	3,2
 23700  0067  286F               	goto	i1l8113
 23701  0068  3002               	movlw	2
 23702  0069  0256               	subwf	high_isr@BankIndex,w
 23703  006A  1C03               	skipc
 23704  006B  2881               	goto	i1l8121
 23705  006C  0852               	movf	high_isr@bAck,w
 23706  006D  1D03               	btfss	3,2
 23707  006E  2881               	goto	i1l8121
 23708  006F                     i1l8113:	
 23709                           ;drv_mrf_miwi_89xa.c: 1306: {
 23710                           ;drv_mrf_miwi_89xa.c: 1307: IGNORE_HERE:
 23711                           
 23712                           
 23713                           ;drv_mrf_miwi_89xa.c: 1308: {
 23714                           ;drv_mrf_miwi_89xa.c: 1309: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 23715  006F  301A               	movlw	26
 23716  0070  31B7  2736  3180   	fcall	i1_RegisterRead
 23717  0073  0020               	movlb	0	; select bank0
 23718  0074  00BF               	movwf	??_high_isr
 23719  0075  083F               	movf	??_high_isr,w
 23720  0076  00CD               	movwf	high_isr@fifo_stat
 23721  0077  1CCD               	btfss	high_isr@fifo_stat,1
 23722  0078  2B7B               	goto	i1l8243
 23723                           
 23724                           ;drv_mrf_miwi_89xa.c: 1311: {
 23725                           ;drv_mrf_miwi_89xa.c: 1312: LATCbits.LATC2 = 0;
 23726                           
 23727                           ;drv_mrf_miwi_89xa.c: 1310: while(fifo_stat & 0x02)
 23728  0079  0022               	movlb	2	; select bank2
 23729  007A  110E               	bcf	14,2	;volatile
 23730                           
 23731                           ;drv_mrf_miwi_89xa.c: 1313: SPIGet();
 23732  007B  31B4  24FE  3180   	fcall	i1_SPIGet
 23733                           
 23734                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC2 = 1;
 23735  007E  0022               	movlb	2	; select bank2
 23736  007F  150E               	bsf	14,2	;volatile
 23737  0080  286F               	goto	i1l8113
 23738  0081                     i1l8121:	
 23739                           ;drv_mrf_miwi_89xa.c: 1316: }
 23740                           ;drv_mrf_miwi_89xa.c: 1317: }
 23741                           ;drv_mrf_miwi_89xa.c: 1318: goto RETURN_HERE;
 23742                           
 23743                           ;drv_mrf_miwi_89xa.c: 1315: fifo_stat = RegisterRead(0x1A00>>8);
 23744                           
 23745                           
 23746                           ;drv_mrf_miwi_89xa.c: 1319: }
 23747                           ;drv_mrf_miwi_89xa.c: 1321: RxPacketPtr = 0;
 23748  0081  01D3               	clrf	high_isr@RxPacketPtr
 23749                           
 23750                           ;drv_mrf_miwi_89xa.c: 1322: counter = PacketLen;
 23751  0082  0855               	movf	high_isr@PacketLen,w
 23752  0083  00BF               	movwf	??_high_isr
 23753  0084  01C0               	clrf	??_high_isr+1
 23754  0085  083F               	movf	??_high_isr,w
 23755  0086  00CB               	movwf	high_isr@counter
 23756  0087  0840               	movf	??_high_isr+1,w
 23757  0088  00CC               	movwf	high_isr@counter+1
 23758  0089                     i1l8239:	
 23759                           ;drv_mrf_miwi_89xa.c: 1324: while(counter >= 1)
 23760                           
 23761  0089  084B               	movf	high_isr@counter,w
 23762  008A  044C               	iorwf	high_isr@counter+1,w
 23763  008B  1903               	btfsc	3,2
 23764  008C  2B7B               	goto	i1l8243
 23765                           
 23766                           ;drv_mrf_miwi_89xa.c: 1327: if(1)
 23767  008D  3001               	movlw	1
 23768  008E  02CB               	subwf	high_isr@counter,f
 23769  008F  3000               	movlw	0
 23770  0090  3BCC               	subwfb	high_isr@counter+1,f
 23771                           
 23772                           ;drv_mrf_miwi_89xa.c: 1328: {
 23773                           ;drv_mrf_miwi_89xa.c: 1330: if( bAck )
 23774  0091  0852               	movf	high_isr@bAck,w
 23775  0092  1903               	btfsc	3,2
 23776  0093  28A0               	goto	i1l193
 23777                           
 23778                           ;drv_mrf_miwi_89xa.c: 1331: {
 23779                           ;drv_mrf_miwi_89xa.c: 1332: LATCbits.LATC2 = 0;
 23780  0094  0022               	movlb	2	; select bank2
 23781  0095  110E               	bcf	14,2	;volatile
 23782                           
 23783                           ;drv_mrf_miwi_89xa.c: 1333: ackPacket[RxPacketPtr++] = SPIGet();
 23784  0096  31B4  24FE  3180   	fcall	i1_SPIGet
 23785  0099  0020               	movlb	0	; select bank0
 23786  009A  00BF               	movwf	??_high_isr
 23787  009B  0853               	movf	high_isr@RxPacketPtr,w
 23788  009C  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 23789  009D  0086               	movwf	6
 23790  009E  0187               	clrf	7
 23791  009F  28D1               	goto	L25
 23792  00A0                     i1l193:	
 23793                           ;drv_mrf_miwi_89xa.c: 1335: }
 23794                           
 23795                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC2 = 1;
 23796                           
 23797                           
 23798                           ;drv_mrf_miwi_89xa.c: 1337: else
 23799                           ;drv_mrf_miwi_89xa.c: 1338: {
 23800                           ;drv_mrf_miwi_89xa.c: 1339: LATCbits.LATC2 = 0;
 23801  00A0  0022               	movlb	2	; select bank2
 23802  00A1  110E               	bcf	14,2	;volatile
 23803                           
 23804                           ;drv_mrf_miwi_89xa.c: 1340: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 23805  00A2  31B4  24FE  3180   	fcall	i1_SPIGet
 23806  00A5  0020               	movlb	0	; select bank0
 23807  00A6  00BF               	movwf	??_high_isr
 23808  00A7  0856               	movf	high_isr@BankIndex,w
 23809  00A8  00C0               	movwf	??_high_isr+1
 23810  00A9  01C1               	clrf	??_high_isr+2
 23811  00AA  0840               	movf	??_high_isr+1,w
 23812  00AB  00F0               	movwf	i1___wmul@multiplier
 23813  00AC  0841               	movf	??_high_isr+2,w
 23814  00AD  00F1               	movwf	i1___wmul@multiplier+1
 23815  00AE  3039               	movlw	57
 23816  00AF  00F2               	movwf	i1___wmul@multiplicand
 23817  00B0  3000               	movlw	0
 23818  00B1  00F3               	movwf	i1___wmul@multiplicand+1
 23819  00B2  31B6  2652  3180   	fcall	i1___wmul
 23820  00B5  0020               	movlb	0	; select bank0
 23821  00B6  0853               	movf	high_isr@RxPacketPtr,w
 23822  00B7  3E01               	addlw	1
 23823  00B8  00C2               	movwf	??_high_isr+3
 23824  00B9  3000               	movlw	0
 23825  00BA  1803               	skipnc
 23826  00BB  3001               	movlw	1
 23827  00BC  00C3               	movwf	??_high_isr+4
 23828  00BD  30F2               	movlw	242
 23829  00BE  00C4               	movwf	??_high_isr+5
 23830  00BF  3022               	movlw	34
 23831  00C0  00C5               	movwf	??_high_isr+6
 23832  00C1  0842               	movf	??_high_isr+3,w
 23833  00C2  0744               	addwf	??_high_isr+5,w
 23834  00C3  00C6               	movwf	??_high_isr+7
 23835  00C4  0843               	movf	??_high_isr+4,w
 23836  00C5  3D45               	addwfc	??_high_isr+6,w
 23837  00C6  00C7               	movwf	??_high_isr+8
 23838  00C7  0870               	movf	?i1___wmul,w
 23839  00C8  0746               	addwf	??_high_isr+7,w
 23840  00C9  00C8               	movwf	??_high_isr+9
 23841  00CA  0871               	movf	?i1___wmul+1,w
 23842  00CB  3D47               	addwfc	??_high_isr+8,w
 23843  00CC  00C9               	movwf	??_high_isr+10
 23844  00CD  0848               	movf	??_high_isr+9,w
 23845  00CE  0086               	movwf	6
 23846  00CF  0849               	movf	??_high_isr+10,w
 23847  00D0  0087               	movwf	7
 23848  00D1                     L25:	
 23849  00D1  083F               	movf	??_high_isr,w
 23850  00D2  0081               	movwf	1
 23851  00D3  3001               	movlw	1
 23852  00D4  00BF               	movwf	??_high_isr
 23853  00D5  083F               	movf	??_high_isr,w
 23854  00D6  07D3               	addwf	high_isr@RxPacketPtr,f
 23855                           
 23856                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC2 = 1;
 23857  00D7  0022               	movlb	2	; select bank2
 23858  00D8  150E               	bsf	14,2	;volatile
 23859                           
 23860                           ;drv_mrf_miwi_89xa.c: 1342: }
 23861                           ;drv_mrf_miwi_89xa.c: 1345: if( RxPacketPtr >= PacketLen )
 23862  00D9  0020               	movlb	0	; select bank0
 23863  00DA  0855               	movf	high_isr@PacketLen,w
 23864  00DB  0253               	subwf	high_isr@RxPacketPtr,w
 23865  00DC  1C03               	skipc
 23866  00DD  2889               	goto	i1l8239
 23867                           
 23868                           ;drv_mrf_miwi_89xa.c: 1346: {
 23869                           ;drv_mrf_miwi_89xa.c: 1347: uint8_t i;
 23870                           ;drv_mrf_miwi_89xa.c: 1349: if( bAck )
 23871  00DE  0852               	movf	high_isr@bAck,w
 23872  00DF  1903               	btfsc	3,2
 23873  00E0  2947               	goto	i1l196
 23874                           
 23875                           ;drv_mrf_miwi_89xa.c: 1350: {
 23876                           ;drv_mrf_miwi_89xa.c: 1352: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 23877  00E1  3003               	movlw	3
 23878  00E2  054E               	andwf	high_isr@ackPacket,w
 23879  00E3  00BF               	movwf	??_high_isr
 23880  00E4  3002               	movlw	2
 23881  00E5  063F               	xorwf	??_high_isr,w
 23882  00E6  1D03               	btfss	3,2
 23883  00E7  28F5               	goto	i1l8157
 23884                           
 23885                           ;drv_mrf_miwi_89xa.c: 1353: {
 23886                           ;drv_mrf_miwi_89xa.c: 1354: if( ackPacket[1] == TxMACSeq )
 23887  00E8  084F               	movf	high_isr@ackPacket+1,w
 23888  00E9  0023               	movlb	3	; select bank3
 23889  00EA  0652               	xorwf	_TxMACSeq^(0+384),w
 23890  00EB  1D03               	skipz
 23891  00EC  28F2               	goto	i1l8153
 23892                           
 23893                           ;drv_mrf_miwi_89xa.c: 1355: {
 23894                           ;drv_mrf_miwi_89xa.c: 1356: hasAck = 1;
 23895  00ED  3001               	movlw	1
 23896  00EE  0020               	movlb	0	; select bank0
 23897  00EF  00BF               	movwf	??_high_isr
 23898  00F0  083F               	movf	??_high_isr,w
 23899  00F1  00E3               	movwf	_hasAck	;volatile
 23900  00F2                     i1l8153:	
 23901                           
 23902                           ;drv_mrf_miwi_89xa.c: 1357: }
 23903                           ;drv_mrf_miwi_89xa.c: 1358: RxPacketPtr = 0;
 23904  00F2  0020               	movlb	0	; select bank0
 23905  00F3  01D3               	clrf	high_isr@RxPacketPtr
 23906                           
 23907                           ;drv_mrf_miwi_89xa.c: 1359: goto RETURN_HERE;
 23908  00F4  2B7B               	goto	i1l8243
 23909  00F5                     i1l8157:	
 23910                           ;drv_mrf_miwi_89xa.c: 1360: }
 23911                           
 23912                           
 23913                           ;drv_mrf_miwi_89xa.c: 1361: else
 23914                           ;drv_mrf_miwi_89xa.c: 1363: if( BankIndex >= 2 )
 23915  00F5  3002               	movlw	2
 23916  00F6  0256               	subwf	high_isr@BankIndex,w
 23917  00F7  1C03               	skipc
 23918  00F8  28FB               	goto	i1l8161
 23919                           
 23920                           ;drv_mrf_miwi_89xa.c: 1364: {
 23921                           ;drv_mrf_miwi_89xa.c: 1365: RxPacketPtr = 0;
 23922  00F9  01D3               	clrf	high_isr@RxPacketPtr
 23923                           
 23924                           ;drv_mrf_miwi_89xa.c: 1366: goto IGNORE_HERE;
 23925  00FA  286F               	goto	i1l8113
 23926  00FB                     i1l8161:	
 23927                           
 23928                           ;drv_mrf_miwi_89xa.c: 1367: }
 23929                           ;drv_mrf_miwi_89xa.c: 1368: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 23930  00FB  0856               	movf	high_isr@BankIndex,w
 23931  00FC  00BF               	movwf	??_high_isr
 23932  00FD  01C0               	clrf	??_high_isr+1
 23933  00FE  083F               	movf	??_high_isr,w
 23934  00FF  00F0               	movwf	i1___wmul@multiplier
 23935  0100  0840               	movf	??_high_isr+1,w
 23936  0101  00F1               	movwf	i1___wmul@multiplier+1
 23937  0102  3039               	movlw	57
 23938  0103  00F2               	movwf	i1___wmul@multiplicand
 23939  0104  3000               	movlw	0
 23940  0105  00F3               	movwf	i1___wmul@multiplicand+1
 23941  0106  31B6  2652  3180   	fcall	i1___wmul
 23942  0109  0870               	movf	?i1___wmul,w
 23943  010A  3E01               	addlw	1
 23944  010B  0020               	movlb	0	; select bank0
 23945  010C  00C1               	movwf	??_high_isr+2
 23946  010D  3000               	movlw	0
 23947  010E  3D71               	addwfc	?i1___wmul+1,w
 23948  010F  00C2               	movwf	??_high_isr+3
 23949  0110  30F2               	movlw	242
 23950  0111  00C3               	movwf	??_high_isr+4
 23951  0112  3022               	movlw	34
 23952  0113  00C4               	movwf	??_high_isr+5
 23953  0114  0841               	movf	??_high_isr+2,w
 23954  0115  0743               	addwf	??_high_isr+4,w
 23955  0116  00C5               	movwf	??_high_isr+6
 23956  0117  0842               	movf	??_high_isr+3,w
 23957  0118  3D44               	addwfc	??_high_isr+5,w
 23958  0119  00C6               	movwf	??_high_isr+7
 23959  011A  0845               	movf	??_high_isr+6,w
 23960  011B  0086               	movwf	6
 23961  011C  0846               	movf	??_high_isr+7,w
 23962  011D  0087               	movwf	7
 23963  011E  084E               	movf	high_isr@ackPacket,w
 23964  011F  0081               	movwf	1
 23965                           
 23966                           ;drv_mrf_miwi_89xa.c: 1369: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 23967  0120  084F               	movf	high_isr@ackPacket+1,w
 23968  0121  00BF               	movwf	??_high_isr
 23969  0122  0856               	movf	high_isr@BankIndex,w
 23970  0123  00C0               	movwf	??_high_isr+1
 23971  0124  01C1               	clrf	??_high_isr+2
 23972  0125  0840               	movf	??_high_isr+1,w
 23973  0126  00F0               	movwf	i1___wmul@multiplier
 23974  0127  0841               	movf	??_high_isr+2,w
 23975  0128  00F1               	movwf	i1___wmul@multiplier+1
 23976  0129  3039               	movlw	57
 23977  012A  00F2               	movwf	i1___wmul@multiplicand
 23978  012B  3000               	movlw	0
 23979  012C  00F3               	movwf	i1___wmul@multiplicand+1
 23980  012D  31B6  2652  3180   	fcall	i1___wmul
 23981  0130  0870               	movf	?i1___wmul,w
 23982  0131  3E02               	addlw	2
 23983  0132  0020               	movlb	0	; select bank0
 23984  0133  00C2               	movwf	??_high_isr+3
 23985  0134  3000               	movlw	0
 23986  0135  3D71               	addwfc	?i1___wmul+1,w
 23987  0136  00C3               	movwf	??_high_isr+4
 23988  0137  30F2               	movlw	242
 23989  0138  00C4               	movwf	??_high_isr+5
 23990  0139  3022               	movlw	34
 23991  013A  00C5               	movwf	??_high_isr+6
 23992  013B  0842               	movf	??_high_isr+3,w
 23993  013C  0744               	addwf	??_high_isr+5,w
 23994  013D  00C6               	movwf	??_high_isr+7
 23995  013E  0843               	movf	??_high_isr+4,w
 23996  013F  3D45               	addwfc	??_high_isr+6,w
 23997  0140  00C7               	movwf	??_high_isr+8
 23998  0141  0846               	movf	??_high_isr+7,w
 23999  0142  0086               	movwf	6
 24000  0143  0847               	movf	??_high_isr+8,w
 24001  0144  0087               	movwf	7
 24002  0145  083F               	movf	??_high_isr,w
 24003  0146  0081               	movwf	1
 24004  0147                     i1l196:	
 24005                           
 24006                           ;drv_mrf_miwi_89xa.c: 1371: }
 24007                           ;drv_mrf_miwi_89xa.c: 1373: RxPacket[BankIndex].PayloadLen = PacketLen;
 24008  0147  0856               	movf	high_isr@BankIndex,w
 24009  0148  00BF               	movwf	??_high_isr
 24010  0149  01C0               	clrf	??_high_isr+1
 24011  014A  083F               	movf	??_high_isr,w
 24012  014B  00F0               	movwf	i1___wmul@multiplier
 24013  014C  0840               	movf	??_high_isr+1,w
 24014  014D  00F1               	movwf	i1___wmul@multiplier+1
 24015  014E  3039               	movlw	57
 24016  014F  00F2               	movwf	i1___wmul@multiplicand
 24017  0150  3000               	movlw	0
 24018  0151  00F3               	movwf	i1___wmul@multiplicand+1
 24019  0152  31B6  2652  3180   	fcall	i1___wmul
 24020  0155  0870               	movf	?i1___wmul,w
 24021  0156  3E38               	addlw	56
 24022  0157  0020               	movlb	0	; select bank0
 24023  0158  00C1               	movwf	??_high_isr+2
 24024  0159  3000               	movlw	0
 24025  015A  3D71               	addwfc	?i1___wmul+1,w
 24026  015B  00C2               	movwf	??_high_isr+3
 24027  015C  30F2               	movlw	242
 24028  015D  00C3               	movwf	??_high_isr+4
 24029  015E  3022               	movlw	34
 24030  015F  00C4               	movwf	??_high_isr+5
 24031  0160  0841               	movf	??_high_isr+2,w
 24032  0161  0743               	addwf	??_high_isr+4,w
 24033  0162  00C5               	movwf	??_high_isr+6
 24034  0163  0842               	movf	??_high_isr+3,w
 24035  0164  3D44               	addwfc	??_high_isr+5,w
 24036  0165  00C6               	movwf	??_high_isr+7
 24037  0166  0845               	movf	??_high_isr+6,w
 24038  0167  0086               	movwf	6
 24039  0168  0846               	movf	??_high_isr+7,w
 24040  0169  0087               	movwf	7
 24041  016A  0855               	movf	high_isr@PacketLen,w
 24042  016B  0081               	movwf	1
 24043                           
 24044                           ;drv_mrf_miwi_89xa.c: 1390: {
 24045                           ;drv_mrf_miwi_89xa.c: 1391: uint8_t ackInfoIndex = 0xFF;
 24046  016C  30FF               	movlw	255
 24047  016D  00BF               	movwf	??_high_isr
 24048  016E  083F               	movf	??_high_isr,w
 24049  016F  00D4               	movwf	high_isr@ackInfoIndex
 24050                           
 24051                           ;drv_mrf_miwi_89xa.c: 1393: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 24052  0170  0856               	movf	high_isr@BankIndex,w
 24053  0171  00BF               	movwf	??_high_isr
 24054  0172  01C0               	clrf	??_high_isr+1
 24055  0173  083F               	movf	??_high_isr,w
 24056  0174  00F0               	movwf	i1___wmul@multiplier
 24057  0175  0840               	movf	??_high_isr+1,w
 24058  0176  00F1               	movwf	i1___wmul@multiplier+1
 24059  0177  3039               	movlw	57
 24060  0178  00F2               	movwf	i1___wmul@multiplicand
 24061  0179  3000               	movlw	0
 24062  017A  00F3               	movwf	i1___wmul@multiplicand+1
 24063  017B  31B6  2652  3180   	fcall	i1___wmul
 24064  017E  0870               	movf	?i1___wmul,w
 24065  017F  3E01               	addlw	1
 24066  0180  0020               	movlb	0	; select bank0
 24067  0181  00C1               	movwf	??_high_isr+2
 24068  0182  3000               	movlw	0
 24069  0183  3D71               	addwfc	?i1___wmul+1,w
 24070  0184  00C2               	movwf	??_high_isr+3
 24071  0185  30F2               	movlw	242
 24072  0186  00C3               	movwf	??_high_isr+4
 24073  0187  3022               	movlw	34
 24074  0188  00C4               	movwf	??_high_isr+5
 24075  0189  0841               	movf	??_high_isr+2,w
 24076  018A  0743               	addwf	??_high_isr+4,w
 24077  018B  0086               	movwf	6
 24078  018C  0842               	movf	??_high_isr+3,w
 24079  018D  3D44               	addwfc	??_high_isr+5,w
 24080  018E  0087               	movwf	7
 24081  018F  1F01               	btfss	1,6
 24082  0190  29F2               	goto	i1l8177
 24083                           
 24084                           ;drv_mrf_miwi_89xa.c: 1394: {
 24085                           ;drv_mrf_miwi_89xa.c: 1395: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 24086  0191  01D7               	clrf	high_isr@i
 24087  0192                     i1l202:	
 24088  0192  0C58               	rrf	_MACInitParams,w
 24089  0193  00BF               	movwf	??_high_isr
 24090  0194  0CBF               	rrf	??_high_isr,f
 24091  0195  0C3F               	rrf	??_high_isr,w
 24092  0196  390F               	andlw	15
 24093  0197  0257               	subwf	high_isr@i,w
 24094  0198  1803               	btfsc	3,0
 24095  0199  29F2               	goto	i1l8177
 24096                           
 24097                           ;drv_mrf_miwi_89xa.c: 1396: {
 24098                           ;drv_mrf_miwi_89xa.c: 1397: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 24099  019A  0857               	movf	high_isr@i,w
 24100  019B  0759               	addwf	low ((_MACInitParams| 0+1)),w
 24101  019C  00BF               	movwf	??_high_isr
 24102  019D  083F               	movf	??_high_isr,w
 24103  019E  0086               	movwf	6
 24104  019F  3001               	movlw	1	; select bank2/3
 24105  01A0  0087               	movwf	7
 24106  01A1  0856               	movf	high_isr@BankIndex,w
 24107  01A2  00C0               	movwf	??_high_isr+1
 24108  01A3  01C1               	clrf	??_high_isr+2
 24109  01A4  0840               	movf	??_high_isr+1,w
 24110  01A5  00F0               	movwf	i1___wmul@multiplier
 24111  01A6  0841               	movf	??_high_isr+2,w
 24112  01A7  00F1               	movwf	i1___wmul@multiplier+1
 24113  01A8  3039               	movlw	57
 24114  01A9  00F2               	movwf	i1___wmul@multiplicand
 24115  01AA  3000               	movlw	0
 24116  01AB  00F3               	movwf	i1___wmul@multiplicand+1
 24117  01AC  31B6  2652  3180   	fcall	i1___wmul
 24118  01AF  0020               	movlb	0	; select bank0
 24119  01B0  0857               	movf	high_isr@i,w
 24120  01B1  3E03               	addlw	3
 24121  01B2  00C2               	movwf	??_high_isr+3
 24122  01B3  3000               	movlw	0
 24123  01B4  1803               	skipnc
 24124  01B5  3001               	movlw	1
 24125  01B6  00C3               	movwf	??_high_isr+4
 24126  01B7  30F2               	movlw	242
 24127  01B8  00C4               	movwf	??_high_isr+5
 24128  01B9  3022               	movlw	34
 24129  01BA  00C5               	movwf	??_high_isr+6
 24130  01BB  0842               	movf	??_high_isr+3,w
 24131  01BC  0744               	addwf	??_high_isr+5,w
 24132  01BD  00C6               	movwf	??_high_isr+7
 24133  01BE  0843               	movf	??_high_isr+4,w
 24134  01BF  3D45               	addwfc	??_high_isr+6,w
 24135  01C0  00C7               	movwf	??_high_isr+8
 24136  01C1  0870               	movf	?i1___wmul,w
 24137  01C2  0746               	addwf	??_high_isr+7,w
 24138  01C3  0084               	movwf	4
 24139  01C4  0871               	movf	?i1___wmul+1,w
 24140  01C5  3D47               	addwfc	??_high_isr+8,w
 24141  01C6  0085               	movwf	5
 24142  01C7  0800               	movf	0,w
 24143  01C8  0601               	xorwf	1,w
 24144  01C9  1903               	skipnz
 24145  01CA  29ED               	goto	i1l8175
 24146                           
 24147                           ;drv_mrf_miwi_89xa.c: 1398: {
 24148                           ;drv_mrf_miwi_89xa.c: 1399: RxPacketPtr = 0;
 24149  01CB  01D3               	clrf	high_isr@RxPacketPtr
 24150                           
 24151                           ;drv_mrf_miwi_89xa.c: 1400: RxPacket[BankIndex].PayloadLen = 0;
 24152  01CC  0856               	movf	high_isr@BankIndex,w
 24153  01CD  00BF               	movwf	??_high_isr
 24154  01CE  01C0               	clrf	??_high_isr+1
 24155  01CF  083F               	movf	??_high_isr,w
 24156  01D0  00F0               	movwf	i1___wmul@multiplier
 24157  01D1  0840               	movf	??_high_isr+1,w
 24158  01D2  00F1               	movwf	i1___wmul@multiplier+1
 24159  01D3  3039               	movlw	57
 24160  01D4  00F2               	movwf	i1___wmul@multiplicand
 24161  01D5  3000               	movlw	0
 24162  01D6  00F3               	movwf	i1___wmul@multiplicand+1
 24163  01D7  31B6  2652  3180   	fcall	i1___wmul
 24164  01DA  0870               	movf	?i1___wmul,w
 24165  01DB  3E38               	addlw	56
 24166  01DC  0020               	movlb	0	; select bank0
 24167  01DD  00C1               	movwf	??_high_isr+2
 24168  01DE  3000               	movlw	0
 24169  01DF  3D71               	addwfc	?i1___wmul+1,w
 24170  01E0  00C2               	movwf	??_high_isr+3
 24171  01E1  30F2               	movlw	242
 24172  01E2  00C3               	movwf	??_high_isr+4
 24173  01E3  3022               	movlw	34
 24174  01E4  00C4               	movwf	??_high_isr+5
 24175  01E5  0841               	movf	??_high_isr+2,w
 24176  01E6  0743               	addwf	??_high_isr+4,w
 24177  01E7  0086               	movwf	6
 24178  01E8  0842               	movf	??_high_isr+3,w
 24179  01E9  3D44               	addwfc	??_high_isr+5,w
 24180  01EA  0087               	movwf	7
 24181  01EB  0181               	clrf	1
 24182                           
 24183                           ;drv_mrf_miwi_89xa.c: 1401: goto IGNORE_HERE;
 24184  01EC  286F               	goto	i1l8113
 24185  01ED                     i1l8175:	
 24186  01ED  3001               	movlw	1
 24187  01EE  00BF               	movwf	??_high_isr
 24188  01EF  083F               	movf	??_high_isr,w
 24189  01F0  07D7               	addwf	high_isr@i,f
 24190  01F1  2992               	goto	i1l202
 24191  01F2                     i1l8177:	
 24192                           
 24193                           ;drv_mrf_miwi_89xa.c: 1402: }
 24194                           ;drv_mrf_miwi_89xa.c: 1403: }
 24195                           ;drv_mrf_miwi_89xa.c: 1404: }
 24196                           ;drv_mrf_miwi_89xa.c: 1407: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 24197  01F2  0856               	movf	high_isr@BankIndex,w
 24198  01F3  00BF               	movwf	??_high_isr
 24199  01F4  01C0               	clrf	??_high_isr+1
 24200  01F5  083F               	movf	??_high_isr,w
 24201  01F6  00F0               	movwf	i1___wmul@multiplier
 24202  01F7  0840               	movf	??_high_isr+1,w
 24203  01F8  00F1               	movwf	i1___wmul@multiplier+1
 24204  01F9  3039               	movlw	57
 24205  01FA  00F2               	movwf	i1___wmul@multiplicand
 24206  01FB  3000               	movlw	0
 24207  01FC  00F3               	movwf	i1___wmul@multiplicand+1
 24208  01FD  31B6  2652  3180   	fcall	i1___wmul
 24209  0200  0870               	movf	?i1___wmul,w
 24210  0201  3E01               	addlw	1
 24211  0202  0020               	movlb	0	; select bank0
 24212  0203  00C1               	movwf	??_high_isr+2
 24213  0204  3000               	movlw	0
 24214  0205  3D71               	addwfc	?i1___wmul+1,w
 24215  0206  00C2               	movwf	??_high_isr+3
 24216  0207  30F2               	movlw	242
 24217  0208  00C3               	movwf	??_high_isr+4
 24218  0209  3022               	movlw	34
 24219  020A  00C4               	movwf	??_high_isr+5
 24220  020B  0841               	movf	??_high_isr+2,w
 24221  020C  0743               	addwf	??_high_isr+4,w
 24222  020D  0086               	movwf	6
 24223  020E  0842               	movf	??_high_isr+3,w
 24224  020F  3D44               	addwfc	??_high_isr+5,w
 24225  0210  0087               	movwf	7
 24226  0211  1E81               	btfss	1,5
 24227  0212  2A79               	goto	i1l8211
 24228                           
 24229                           ;drv_mrf_miwi_89xa.c: 1408: {
 24230                           ;drv_mrf_miwi_89xa.c: 1410: for(i = 0; i < 2; i++)
 24231  0213  01D7               	clrf	high_isr@i
 24232  0214  3002               	movlw	2
 24233  0215  0257               	subwf	high_isr@i,w
 24234  0216  1803               	btfsc	3,0
 24235  0217  2A2D               	goto	i1l8191
 24236  0218                     i1l8185:	
 24237                           
 24238                           ;drv_mrf_miwi_89xa.c: 1411: {
 24239                           ;drv_mrf_miwi_89xa.c: 1412: ackPacket[i] = MACTxBuffer[i];
 24240  0218  0857               	movf	high_isr@i,w
 24241  0219  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 24242  021A  0086               	movwf	6
 24243  021B  3003               	movlw	3	; select bank6/7
 24244  021C  0087               	movwf	7
 24245  021D  0801               	movf	1,w
 24246  021E  00BF               	movwf	??_high_isr
 24247  021F  0857               	movf	high_isr@i,w
 24248  0220  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 24249  0221  0086               	movwf	6
 24250  0222  0187               	clrf	7
 24251  0223  083F               	movf	??_high_isr,w
 24252  0224  0081               	movwf	1
 24253  0225  3001               	movlw	1
 24254  0226  00BF               	movwf	??_high_isr
 24255  0227  083F               	movf	??_high_isr,w
 24256  0228  07D7               	addwf	high_isr@i,f
 24257  0229  3002               	movlw	2
 24258  022A  0257               	subwf	high_isr@i,w
 24259  022B  1C03               	skipc
 24260  022C  2A18               	goto	i1l8185
 24261  022D                     i1l8191:	
 24262                           
 24263                           ;drv_mrf_miwi_89xa.c: 1413: }
 24264                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[0] = 0x02 | 0x04;
 24265  022D  3006               	movlw	6
 24266  022E  00BF               	movwf	??_high_isr
 24267  022F  083F               	movf	??_high_isr,w
 24268  0230  0026               	movlb	6	; select bank6
 24269  0231  00A0               	movwf	_MACTxBuffer^(0+768)	;volatile
 24270                           
 24271                           ;drv_mrf_miwi_89xa.c: 1415: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 24272  0232  0020               	movlb	0	; select bank0
 24273  0233  0856               	movf	high_isr@BankIndex,w
 24274  0234  00BF               	movwf	??_high_isr
 24275  0235  01C0               	clrf	??_high_isr+1
 24276  0236  083F               	movf	??_high_isr,w
 24277  0237  00F0               	movwf	i1___wmul@multiplier
 24278  0238  0840               	movf	??_high_isr+1,w
 24279  0239  00F1               	movwf	i1___wmul@multiplier+1
 24280  023A  3039               	movlw	57
 24281  023B  00F2               	movwf	i1___wmul@multiplicand
 24282  023C  3000               	movlw	0
 24283  023D  00F3               	movwf	i1___wmul@multiplicand+1
 24284  023E  31B6  2652  3180   	fcall	i1___wmul
 24285  0241  0870               	movf	?i1___wmul,w
 24286  0242  3E02               	addlw	2
 24287  0243  0020               	movlb	0	; select bank0
 24288  0244  00C1               	movwf	??_high_isr+2
 24289  0245  3000               	movlw	0
 24290  0246  3D71               	addwfc	?i1___wmul+1,w
 24291  0247  00C2               	movwf	??_high_isr+3
 24292  0248  30F2               	movlw	242
 24293  0249  00C3               	movwf	??_high_isr+4
 24294  024A  3022               	movlw	34
 24295  024B  00C4               	movwf	??_high_isr+5
 24296  024C  0841               	movf	??_high_isr+2,w
 24297  024D  0743               	addwf	??_high_isr+4,w
 24298  024E  0086               	movwf	6
 24299  024F  0842               	movf	??_high_isr+3,w
 24300  0250  3D44               	addwfc	??_high_isr+5,w
 24301  0251  0087               	movwf	7
 24302  0252  0801               	movf	1,w
 24303  0253  00C5               	movwf	??_high_isr+6
 24304  0254  0845               	movf	??_high_isr+6,w
 24305  0255  0026               	movlb	6	; select bank6
 24306  0256  00A1               	movwf	(_MACTxBuffer^(0+768)+1)	;volatile
 24307                           
 24308                           ;drv_mrf_miwi_89xa.c: 1416: IOCBFbits.IOCBF3 = 0;
 24309  0257  0027               	movlb	7	; select bank7
 24310  0258  1196               	bcf	22,3	;volatile
 24311                           
 24312                           ;drv_mrf_miwi_89xa.c: 1417: TxPacket(2, 0);
 24313  0259  01FC               	clrf	i1TxPacket@CCA
 24314  025A  3002               	movlw	2
 24315  025B  3198  2089  3180   	fcall	i1_TxPacket
 24316                           
 24317                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 2; i++)
 24318  025E  0020               	movlb	0	; select bank0
 24319  025F  01D7               	clrf	high_isr@i
 24320  0260  3002               	movlw	2
 24321  0261  0257               	subwf	high_isr@i,w
 24322  0262  1803               	btfsc	3,0
 24323  0263  2A79               	goto	i1l8211
 24324  0264                     i1l8205:	
 24325                           
 24326                           ;drv_mrf_miwi_89xa.c: 1421: {
 24327                           ;drv_mrf_miwi_89xa.c: 1422: MACTxBuffer[i] = ackPacket[i];
 24328  0264  0857               	movf	high_isr@i,w
 24329  0265  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 24330  0266  0086               	movwf	6
 24331  0267  0187               	clrf	7
 24332  0268  0801               	movf	1,w
 24333  0269  00BF               	movwf	??_high_isr
 24334  026A  0857               	movf	high_isr@i,w
 24335  026B  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 24336  026C  0086               	movwf	6
 24337  026D  3003               	movlw	3	; select bank6/7
 24338  026E  0087               	movwf	7
 24339  026F  083F               	movf	??_high_isr,w
 24340  0270  0081               	movwf	1
 24341  0271  3001               	movlw	1
 24342  0272  00BF               	movwf	??_high_isr
 24343  0273  083F               	movf	??_high_isr,w
 24344  0274  07D7               	addwf	high_isr@i,f
 24345  0275  3002               	movlw	2
 24346  0276  0257               	subwf	high_isr@i,w
 24347  0277  1C03               	skipc
 24348  0278  2A64               	goto	i1l8205
 24349  0279                     i1l8211:	
 24350                           
 24351                           ;drv_mrf_miwi_89xa.c: 1423: }
 24352                           ;drv_mrf_miwi_89xa.c: 1424: }
 24353                           ;drv_mrf_miwi_89xa.c: 1428: for(i = 0; i < 5; i++)
 24354  0279  01D7               	clrf	high_isr@i
 24355  027A  3005               	movlw	5
 24356  027B  0257               	subwf	high_isr@i,w
 24357  027C  1803               	btfsc	3,0
 24358  027D  2AF9               	goto	i1l8233
 24359  027E                     i1l8217:	
 24360                           
 24361                           ;drv_mrf_miwi_89xa.c: 1429: {
 24362                           ;drv_mrf_miwi_89xa.c: 1430: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 24363  027E  3006               	movlw	6
 24364  027F  00BF               	movwf	??_high_isr
 24365  0280  083F               	movf	??_high_isr,w
 24366  0281  00F0               	movwf	i1___bmul@multiplicand
 24367  0282  0857               	movf	high_isr@i,w
 24368  0283  31B5  2572  3180   	fcall	i1___bmul
 24369  0286  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24370  0287  0086               	movwf	6
 24371  0288  3003               	movlw	3	; select bank7/8
 24372  0289  0087               	movwf	7
 24373  028A  0801               	movf	1,w
 24374  028B  1903               	btfsc	3,2
 24375  028C  2AD8               	goto	i1l8223
 24376  028D  0020               	movlb	0	; select bank0
 24377  028E  0856               	movf	high_isr@BankIndex,w
 24378  028F  00BF               	movwf	??_high_isr
 24379  0290  01C0               	clrf	??_high_isr+1
 24380  0291  083F               	movf	??_high_isr,w
 24381  0292  00F0               	movwf	i1___wmul@multiplier
 24382  0293  0840               	movf	??_high_isr+1,w
 24383  0294  00F1               	movwf	i1___wmul@multiplier+1
 24384  0295  3039               	movlw	57
 24385  0296  00F2               	movwf	i1___wmul@multiplicand
 24386  0297  3000               	movlw	0
 24387  0298  00F3               	movwf	i1___wmul@multiplicand+1
 24388  0299  31B6  2652  3180   	fcall	i1___wmul
 24389  029C  0870               	movf	?i1___wmul,w
 24390  029D  3E02               	addlw	2
 24391  029E  0020               	movlb	0	; select bank0
 24392  029F  00C1               	movwf	??_high_isr+2
 24393  02A0  3000               	movlw	0
 24394  02A1  3D71               	addwfc	?i1___wmul+1,w
 24395  02A2  00C2               	movwf	??_high_isr+3
 24396  02A3  30F2               	movlw	242
 24397  02A4  00C3               	movwf	??_high_isr+4
 24398  02A5  3022               	movlw	34
 24399  02A6  00C4               	movwf	??_high_isr+5
 24400  02A7  0841               	movf	??_high_isr+2,w
 24401  02A8  0743               	addwf	??_high_isr+4,w
 24402  02A9  0086               	movwf	6
 24403  02AA  0842               	movf	??_high_isr+3,w
 24404  02AB  3D44               	addwfc	??_high_isr+5,w
 24405  02AC  0087               	movwf	7
 24406  02AD  3006               	movlw	6
 24407  02AE  00C5               	movwf	??_high_isr+6
 24408  02AF  0845               	movf	??_high_isr+6,w
 24409  02B0  00F0               	movwf	i1___bmul@multiplicand
 24410  02B1  0857               	movf	high_isr@i,w
 24411  02B2  31B5  2572  3180   	fcall	i1___bmul
 24412  02B5  3E01               	addlw	1
 24413  02B6  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24414  02B7  0084               	movwf	4
 24415  02B8  3003               	movlw	3	; select bank7/8
 24416  02B9  0085               	movwf	5
 24417  02BA  0800               	movf	0,w
 24418  02BB  0601               	xorwf	1,w
 24419  02BC  1D03               	skipz
 24420  02BD  2AD8               	goto	i1l8223
 24421                           
 24422                           ;drv_mrf_miwi_89xa.c: 1431: {
 24423                           ;drv_mrf_miwi_89xa.c: 1432: AckInfo[i].startTick = MiWi_TickGet();
 24424  02BE  3006               	movlw	6
 24425  02BF  0020               	movlb	0	; select bank0
 24426  02C0  00BF               	movwf	??_high_isr
 24427  02C1  083F               	movf	??_high_isr,w
 24428  02C2  00F0               	movwf	i1___bmul@multiplicand
 24429  02C3  0857               	movf	high_isr@i,w
 24430  02C4  31B5  2572  3180   	fcall	i1___bmul
 24431  02C7  3E02               	addlw	2
 24432  02C8  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24433  02C9  0086               	movwf	6
 24434  02CA  3003               	movlw	3	; select bank7/8
 24435  02CB  0087               	movwf	7
 24436  02CC  31AA  228C  3180   	fcall	i1_MiWi_TickGet
 24437  02CF  0870               	movf	?i1_MiWi_TickGet,w
 24438  02D0  3FC0               	movwi [0]fsr1
 24439  02D1  0871               	movf	?i1_MiWi_TickGet+1,w
 24440  02D2  3FC1               	movwi [1]fsr1
 24441  02D3  0872               	movf	?i1_MiWi_TickGet+2,w
 24442  02D4  3FC2               	movwi [2]fsr1
 24443  02D5  0873               	movf	?i1_MiWi_TickGet+3,w
 24444  02D6  3FC3               	movwi [3]fsr1
 24445                           
 24446                           ;drv_mrf_miwi_89xa.c: 1433: break;
 24447  02D7  2AF9               	goto	i1l8233
 24448  02D8                     i1l8223:	
 24449                           
 24450                           ;drv_mrf_miwi_89xa.c: 1434: }
 24451                           ;drv_mrf_miwi_89xa.c: 1435: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 24452  02D8  0020               	movlb	0	; select bank0
 24453  02D9  0A54               	incf	high_isr@ackInfoIndex,w
 24454  02DA  1D03               	btfss	3,2
 24455  02DB  2AF0               	goto	i1l8229
 24456  02DC  3006               	movlw	6
 24457  02DD  00BF               	movwf	??_high_isr
 24458  02DE  083F               	movf	??_high_isr,w
 24459  02DF  00F0               	movwf	i1___bmul@multiplicand
 24460  02E0  0857               	movf	high_isr@i,w
 24461  02E1  31B5  2572  3180   	fcall	i1___bmul
 24462  02E4  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24463  02E5  0086               	movwf	6
 24464  02E6  3003               	movlw	3	; select bank7/8
 24465  02E7  0087               	movwf	7
 24466  02E8  0801               	movf	1,w
 24467  02E9  1D03               	btfss	3,2
 24468  02EA  2AF0               	goto	i1l8229
 24469                           
 24470                           ;drv_mrf_miwi_89xa.c: 1436: {
 24471                           ;drv_mrf_miwi_89xa.c: 1437: ackInfoIndex = i;
 24472  02EB  0020               	movlb	0	; select bank0
 24473  02EC  0857               	movf	high_isr@i,w
 24474  02ED  00BF               	movwf	??_high_isr
 24475  02EE  083F               	movf	??_high_isr,w
 24476  02EF  00D4               	movwf	high_isr@ackInfoIndex
 24477  02F0                     i1l8229:	
 24478  02F0  3001               	movlw	1
 24479  02F1  0020               	movlb	0	; select bank0
 24480  02F2  00BF               	movwf	??_high_isr
 24481  02F3  083F               	movf	??_high_isr,w
 24482  02F4  07D7               	addwf	high_isr@i,f
 24483  02F5  3005               	movlw	5
 24484  02F6  0257               	subwf	high_isr@i,w
 24485  02F7  1C03               	skipc
 24486  02F8  2A7E               	goto	i1l8217
 24487  02F9                     i1l8233:	
 24488                           
 24489                           ;drv_mrf_miwi_89xa.c: 1438: }
 24490                           ;drv_mrf_miwi_89xa.c: 1439: }
 24491                           ;drv_mrf_miwi_89xa.c: 1441: if( i >= 5 )
 24492  02F9  3005               	movlw	5
 24493  02FA  0020               	movlb	0	; select bank0
 24494  02FB  0257               	subwf	high_isr@i,w
 24495  02FC  1C03               	skipc
 24496  02FD  2B7B               	goto	i1l8243
 24497                           
 24498                           ;drv_mrf_miwi_89xa.c: 1442: {
 24499                           ;drv_mrf_miwi_89xa.c: 1443: if( ackInfoIndex < 5 )
 24500  02FE  3005               	movlw	5
 24501  02FF  0254               	subwf	high_isr@ackInfoIndex,w
 24502  0300  1803               	skipnc
 24503  0301  2B5A               	goto	i1l216
 24504                           
 24505                           ;drv_mrf_miwi_89xa.c: 1444: {
 24506                           ;drv_mrf_miwi_89xa.c: 1445: AckInfo[ackInfoIndex].Valid = 1;
 24507  0302  3006               	movlw	6
 24508  0303  00BF               	movwf	??_high_isr
 24509  0304  083F               	movf	??_high_isr,w
 24510  0305  00F0               	movwf	i1___bmul@multiplicand
 24511  0306  0854               	movf	high_isr@ackInfoIndex,w
 24512  0307  31B5  2572  3180   	fcall	i1___bmul
 24513  030A  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24514  030B  0086               	movwf	6
 24515  030C  3003               	movlw	3	; select bank7/8
 24516  030D  0087               	movwf	7
 24517  030E  0181               	clrf	1
 24518  030F  0A81               	incf	1,f
 24519                           
 24520                           ;drv_mrf_miwi_89xa.c: 1446: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 24521  0310  0020               	movlb	0	; select bank0
 24522  0311  0856               	movf	high_isr@BankIndex,w
 24523  0312  00BF               	movwf	??_high_isr
 24524  0313  01C0               	clrf	??_high_isr+1
 24525  0314  083F               	movf	??_high_isr,w
 24526  0315  00F0               	movwf	i1___wmul@multiplier
 24527  0316  0840               	movf	??_high_isr+1,w
 24528  0317  00F1               	movwf	i1___wmul@multiplier+1
 24529  0318  3039               	movlw	57
 24530  0319  00F2               	movwf	i1___wmul@multiplicand
 24531  031A  3000               	movlw	0
 24532  031B  00F3               	movwf	i1___wmul@multiplicand+1
 24533  031C  31B6  2652  3180   	fcall	i1___wmul
 24534  031F  0870               	movf	?i1___wmul,w
 24535  0320  3E02               	addlw	2
 24536  0321  0020               	movlb	0	; select bank0
 24537  0322  00C1               	movwf	??_high_isr+2
 24538  0323  3000               	movlw	0
 24539  0324  3D71               	addwfc	?i1___wmul+1,w
 24540  0325  00C2               	movwf	??_high_isr+3
 24541  0326  30F2               	movlw	242
 24542  0327  00C3               	movwf	??_high_isr+4
 24543  0328  3022               	movlw	34
 24544  0329  00C4               	movwf	??_high_isr+5
 24545  032A  0841               	movf	??_high_isr+2,w
 24546  032B  0743               	addwf	??_high_isr+4,w
 24547  032C  0086               	movwf	6
 24548  032D  0842               	movf	??_high_isr+3,w
 24549  032E  3D44               	addwfc	??_high_isr+5,w
 24550  032F  0087               	movwf	7
 24551  0330  0801               	movf	1,w
 24552  0331  00C5               	movwf	??_high_isr+6
 24553  0332  3006               	movlw	6
 24554  0333  00C6               	movwf	??_high_isr+7
 24555  0334  0846               	movf	??_high_isr+7,w
 24556  0335  00F0               	movwf	i1___bmul@multiplicand
 24557  0336  0854               	movf	high_isr@ackInfoIndex,w
 24558  0337  31B5  2572  3180   	fcall	i1___bmul
 24559  033A  3E01               	addlw	1
 24560  033B  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24561  033C  0086               	movwf	6
 24562  033D  3003               	movlw	3	; select bank7/8
 24563  033E  0087               	movwf	7
 24564  033F  0020               	movlb	0	; select bank0
 24565  0340  0845               	movf	??_high_isr+6,w
 24566  0341  0081               	movwf	1
 24567                           
 24568                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 24569  0342  3006               	movlw	6
 24570  0343  00BF               	movwf	??_high_isr
 24571  0344  083F               	movf	??_high_isr,w
 24572  0345  00F0               	movwf	i1___bmul@multiplicand
 24573  0346  0854               	movf	high_isr@ackInfoIndex,w
 24574  0347  31B5  2572  3180   	fcall	i1___bmul
 24575  034A  3E02               	addlw	2
 24576  034B  3EA0               	addlw	(low (_AckInfo| (0+768)))& (0+255)
 24577  034C  0086               	movwf	6
 24578  034D  3003               	movlw	3	; select bank7/8
 24579  034E  0087               	movwf	7
 24580  034F  31AA  228C  3180   	fcall	i1_MiWi_TickGet
 24581  0352  0870               	movf	?i1_MiWi_TickGet,w
 24582  0353  3FC0               	movwi [0]fsr1
 24583  0354  0871               	movf	?i1_MiWi_TickGet+1,w
 24584  0355  3FC1               	movwi [1]fsr1
 24585  0356  0872               	movf	?i1_MiWi_TickGet+2,w
 24586  0357  3FC2               	movwi [2]fsr1
 24587  0358  0873               	movf	?i1_MiWi_TickGet+3,w
 24588  0359  3FC3               	movwi [3]fsr1
 24589  035A                     i1l216:	
 24590                           
 24591                           ;drv_mrf_miwi_89xa.c: 1448: }
 24592                           ;drv_mrf_miwi_89xa.c: 1451: RxPacket[BankIndex].flags.bits.Valid = 1;
 24593  035A  0020               	movlb	0	; select bank0
 24594  035B  0856               	movf	high_isr@BankIndex,w
 24595  035C  00BF               	movwf	??_high_isr
 24596  035D  01C0               	clrf	??_high_isr+1
 24597  035E  083F               	movf	??_high_isr,w
 24598  035F  00F0               	movwf	i1___wmul@multiplier
 24599  0360  0840               	movf	??_high_isr+1,w
 24600  0361  00F1               	movwf	i1___wmul@multiplier+1
 24601  0362  3039               	movlw	57
 24602  0363  00F2               	movwf	i1___wmul@multiplicand
 24603  0364  3000               	movlw	0
 24604  0365  00F3               	movwf	i1___wmul@multiplicand+1
 24605  0366  31B6  2652  3180   	fcall	i1___wmul
 24606  0369  30F2               	movlw	242
 24607  036A  0020               	movlb	0	; select bank0
 24608  036B  00C1               	movwf	??_high_isr+2
 24609  036C  3022               	movlw	34
 24610  036D  00C2               	movwf	??_high_isr+3
 24611  036E  0870               	movf	?i1___wmul,w
 24612  036F  0741               	addwf	??_high_isr+2,w
 24613  0370  0086               	movwf	6
 24614  0371  0871               	movf	?i1___wmul+1,w
 24615  0372  3D42               	addwfc	??_high_isr+3,w
 24616  0373  0087               	movwf	7
 24617  0374  1401               	bsf	1,0
 24618                           
 24619                           ;drv_mrf_miwi_89xa.c: 1452: }
 24620                           ;drv_mrf_miwi_89xa.c: 1459: }
 24621                           ;drv_mrf_miwi_89xa.c: 1460: goto RETURN_HERE;
 24622  0375  2B7B               	goto	i1l8243
 24623  0376                     i1l8241:	
 24624                           ;drv_mrf_miwi_89xa.c: 1461: }
 24625                           ;drv_mrf_miwi_89xa.c: 1463: }
 24626                           ;drv_mrf_miwi_89xa.c: 1464: }
 24627                           ;drv_mrf_miwi_89xa.c: 1465: }
 24628                           
 24629                           
 24630                           ;drv_mrf_miwi_89xa.c: 1466: else
 24631                           ;drv_mrf_miwi_89xa.c: 1467: {
 24632                           ;drv_mrf_miwi_89xa.c: 1469: IRQ1_Received = 1;
 24633  0376  3001               	movlw	1
 24634  0377  0020               	movlb	0	; select bank0
 24635  0378  00BF               	movwf	??_high_isr
 24636  0379  083F               	movf	??_high_isr,w
 24637  037A  00DA               	movwf	_IRQ1_Received	;volatile
 24638  037B                     i1l8243:	
 24639                           ;drv_mrf_miwi_89xa.c: 1470: }
 24640                           ;drv_mrf_miwi_89xa.c: 1472: RETURN_HERE:
 24641                           
 24642                           
 24643                           ;drv_mrf_miwi_89xa.c: 1473: IOCBFbits.IOCBF3 = 0;
 24644  037B  0027               	movlb	7	; select bank7
 24645  037C  1196               	bcf	22,3	;volatile
 24646                           
 24647                           ;drv_mrf_miwi_89xa.c: 1475: __nop();
 24648  037D  0000               	nop
 24649  037E                     i1l8247:	
 24650                           
 24651                           ;drv_mrf_miwi_89xa.c: 1476: }
 24652                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 24653  037E  0020               	movlb	0	; select bank0
 24654  037F  1C11               	btfss	17,0	;volatile
 24655  0380  2B91               	goto	i1l8257
 24656                           
 24657                           ;drv_mrf_miwi_89xa.c: 1497: {
 24658                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 24659  0381  0021               	movlb	1	; select bank1
 24660  0382  1C11               	btfss	17,0	;volatile
 24661  0383  2B91               	goto	i1l8257
 24662                           
 24663                           ;drv_mrf_miwi_89xa.c: 1499: {
 24664                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 24665  0384  0020               	movlb	0	; select bank0
 24666  0385  1011               	bcf	17,0	;volatile
 24667                           
 24668                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 24669  0386  3001               	movlw	1
 24670  0387  00BF               	movwf	??_high_isr
 24671  0388  083F               	movf	??_high_isr,w
 24672  0389  07E6               	addwf	_timerExtension1,f	;volatile
 24673                           
 24674                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 24675  038A  0866               	movf	_timerExtension1,w	;volatile
 24676  038B  1D03               	btfss	3,2
 24677  038C  2B91               	goto	i1l8257
 24678                           
 24679                           ;drv_mrf_miwi_89xa.c: 1504: {
 24680                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 24681  038D  3001               	movlw	1
 24682  038E  00BF               	movwf	??_high_isr
 24683  038F  083F               	movf	??_high_isr,w
 24684  0390  07E7               	addwf	_timerExtension2,f	;volatile
 24685  0391                     i1l8257:	
 24686                           
 24687                           ;drv_mrf_miwi_89xa.c: 1506: }
 24688                           ;drv_mrf_miwi_89xa.c: 1507: }
 24689                           ;drv_mrf_miwi_89xa.c: 1508: }
 24690                           ;drv_mrf_miwi_89xa.c: 1510: UserInterruptHandler();
 24691  0391  3190  2001         	fcall	_UserInterruptHandler
 24692                           
 24693                           ;drv_mrf_miwi_89xa.c: 1512: return;
 24694  0393  0020               	movlb	0	; select bank0
 24695  0394  084A               	movf	??_high_isr+11,w
 24696  0395  00FF               	movwf	127
 24697  0396  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 24698  0397  0009               	retfie
 24699  0398                     __end_of_high_isr:	
 24700                           
 24701                           	psect	text86
 24702  3652                     __ptext86:	
 24703 ;; *************** function i1___wmul *****************
 24704 ;; Defined at:
 24705 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 24706 ;; Parameters:    Size  Location     Type
 24707 ;;  multiplier      2    0[COMMON] unsigned int 
 24708 ;;  multiplicand    2    2[COMMON] unsigned int 
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;  __wmul          2    4[COMMON] unsigned int 
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  2    0[COMMON] unsigned int 
 24713 ;; Registers used:
 24714 ;;		wreg, status,2, status,0
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24724 ;;Total ram usage:        6 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		_high_isr
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           
 24734                           ;psect for function i1___wmul
 24735  3652                     i1___wmul:	
 24736                           
 24737                           ;incstack = 0
 24738                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 24739  3652  01F4               	clrf	i1___wmul@product
 24740  3653  01F5               	clrf	i1___wmul@product+1
 24741  3654                     i1l8031:	
 24742  3654  1C70               	btfss	i1___wmul@multiplier,0
 24743  3655  2E5A               	goto	i1l1404
 24744  3656  0872               	movf	i1___wmul@multiplicand,w
 24745  3657  07F4               	addwf	i1___wmul@product,f
 24746  3658  0873               	movf	i1___wmul@multiplicand+1,w
 24747  3659  3DF5               	addwfc	i1___wmul@product+1,f
 24748  365A                     i1l1404:	
 24749  365A  3001               	movlw	1
 24750  365B                     u866_25:	
 24751  365B  35F2               	lslf	i1___wmul@multiplicand,f
 24752  365C  0DF3               	rlf	i1___wmul@multiplicand+1,f
 24753  365D  0B89               	decfsz	9,f
 24754  365E  2E5B               	goto	u866_25
 24755  365F  3001               	movlw	1
 24756  3660                     u867_25:	
 24757  3660  36F1               	lsrf	i1___wmul@multiplier+1,f
 24758  3661  0CF0               	rrf	i1___wmul@multiplier,f
 24759  3662  0B89               	decfsz	9,f
 24760  3663  2E60               	goto	u867_25
 24761  3664  0870               	movf	i1___wmul@multiplier,w
 24762  3665  0471               	iorwf	i1___wmul@multiplier+1,w
 24763  3666  1D03               	btfss	3,2
 24764  3667  2E54               	goto	i1l8031
 24765  3668  0875               	movf	i1___wmul@product+1,w
 24766  3669  00F1               	movwf	?i1___wmul+1
 24767  366A  0874               	movf	i1___wmul@product,w
 24768  366B  00F0               	movwf	?i1___wmul
 24769  366C  0008               	return
 24770  366D                     __end_ofi1___wmul:	
 24771                           
 24772                           	psect	text87
 24773  3572                     __ptext87:	
 24774 ;; *************** function i1___bmul *****************
 24775 ;; Defined at:
 24776 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 24777 ;; Parameters:    Size  Location     Type
 24778 ;;  multiplier      1    wreg     unsigned char 
 24779 ;;  multiplicand    1    0[COMMON] unsigned char 
 24780 ;; Auto vars:     Size  Location     Type
 24781 ;;  multiplier      1    2[COMMON] unsigned char 
 24782 ;;  __bmul          1    3[COMMON] unsigned char 
 24783 ;; Return value:  Size  Location     Type
 24784 ;;                  1    wreg      unsigned char 
 24785 ;; Registers used:
 24786 ;;		wreg, status,2, status,0
 24787 ;; Tracked objects:
 24788 ;;		On entry : 0/0
 24789 ;;		On exit  : 0/0
 24790 ;;		Unchanged: 0/0
 24791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24795 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24796 ;;Total ram usage:        4 bytes
 24797 ;; Hardware stack levels used:    1
 24798 ;; This function calls:
 24799 ;;		Nothing
 24800 ;; This function is called by:
 24801 ;;		_high_isr
 24802 ;; This function uses a non-reentrant model
 24803 ;;
 24804                           
 24805                           
 24806                           ;psect for function i1___bmul
 24807  3572                     i1___bmul:	
 24808                           
 24809                           ;incstack = 0
 24810                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 24811                           ;i1___bmul@multiplier stored from wreg
 24812  3572  00F2               	movwf	i1___bmul@multiplier
 24813  3573  01F3               	clrf	i1___bmul@product
 24814  3574                     i1l8045:	
 24815  3574  1C72               	btfss	i1___bmul@multiplier,0
 24816  3575  2D7A               	goto	i1l8049
 24817  3576  0870               	movf	i1___bmul@multiplicand,w
 24818  3577  00F1               	movwf	??i1___bmul
 24819  3578  0871               	movf	??i1___bmul,w
 24820  3579  07F3               	addwf	i1___bmul@product,f
 24821  357A                     i1l8049:	
 24822  357A  1003               	clrc
 24823  357B  0DF0               	rlf	i1___bmul@multiplicand,f
 24824  357C  1003               	clrc
 24825  357D  0CF2               	rrf	i1___bmul@multiplier,f
 24826  357E  0872               	movf	i1___bmul@multiplier,w
 24827  357F  1D03               	btfss	3,2
 24828  3580  2D74               	goto	i1l8045
 24829  3581  0873               	movf	i1___bmul@product,w
 24830  3582  0008               	return
 24831  3583                     __end_ofi1___bmul:	
 24832                           
 24833                           	psect	text88
 24834  1889                     __ptext88:	
 24835 ;; *************** function i1_TxPacket *****************
 24836 ;; Defined at:
 24837 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 24838 ;; Parameters:    Size  Location     Type
 24839 ;;  TxPacketLen     1    wreg     unsigned char 
 24840 ;;  CCA             1   12[COMMON] unsigned char 
 24841 ;; Auto vars:     Size  Location     Type
 24842 ;;  TxPacketLen     1   16[BANK0 ] unsigned char 
 24843 ;;  TxPacket        4   22[BANK0 ] struct _MIWI_TICK
 24844 ;;  TxPacket        4   18[BANK0 ] struct _MIWI_TICK
 24845 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 24846 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 24847 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 24848 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 24849 ;;  TxPacket        1   26[BANK0 ] unsigned char 
 24850 ;;  TxPacket        1   17[BANK0 ] unsigned char 
 24851 ;; Return value:  Size  Location     Type
 24852 ;;                  1    wreg      unsigned char 
 24853 ;; Registers used:
 24854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24855 ;; Tracked objects:
 24856 ;;		On entry : 0/0
 24857 ;;		On exit  : 0/0
 24858 ;;		Unchanged: 0/0
 24859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24861 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24862 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24863 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24864 ;;Total ram usage:       24 bytes
 24865 ;; Hardware stack levels used:    1
 24866 ;; Hardware stack levels required when called:    3
 24867 ;; This function calls:
 24868 ;;		i1_DELAY_10us
 24869 ;;		i1_MiWi_TickGet
 24870 ;;		i1_RegisterRead
 24871 ;;		i1_RegisterSet
 24872 ;;		i1_SetRFMode
 24873 ;;		i1_WriteFIFO
 24874 ;; This function is called by:
 24875 ;;		_high_isr
 24876 ;; This function uses a non-reentrant model
 24877 ;;
 24878                           
 24879                           
 24880                           ;psect for function i1_TxPacket
 24881  1889                     i1_TxPacket:	
 24882                           
 24883                           ;incstack = 0
 24884 ;; hardware stack exceeded
 24885                           ; Regs used in i1_TxPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24886                           ;i1TxPacket@TxPacketLen stored from wreg
 24887  1889  0020               	movlb	0	; select bank0
 24888  188A  00B0               	movwf	i1TxPacket@TxPacketLen
 24889                           
 24890                           ;drv_mrf_miwi_89xa.c: 290: __nop();
 24891  188B  0000               	nop
 24892                           
 24893                           ;drv_mrf_miwi_89xa.c: 291: bool status;
 24894                           ;drv_mrf_miwi_89xa.c: 292: uint8_t i;
 24895                           ;drv_mrf_miwi_89xa.c: 293: MIWI_TICK t1, t2;
 24896                           ;drv_mrf_miwi_89xa.c: 295: uint8_t CCARetries;
 24897                           ;drv_mrf_miwi_89xa.c: 296: uint8_t rssival;
 24898                           ;drv_mrf_miwi_89xa.c: 300: uint8_t reTry = 3;
 24899  188C  3003               	movlw	3
 24900  188D  0020               	movlb	0	; select bank0
 24901  188E  00A8               	movwf	??i1_TxPacket
 24902  188F  0828               	movf	??i1_TxPacket,w
 24903  1890  00BB               	movwf	i1TxPacket@reTry
 24904  1891                     i1l8023:	
 24905                           ;drv_mrf_miwi_89xa.c: 304: while( reTry-- )
 24906                           
 24907  1891  3001               	movlw	1
 24908  1892  02BB               	subwf	i1TxPacket@reTry,f
 24909  1893  0A3B               	incf	i1TxPacket@reTry,w
 24910  1894  1903               	btfsc	3,2
 24911  1895  2959               	goto	i1l8025
 24912                           
 24913                           ;drv_mrf_miwi_89xa.c: 306: {
 24914                           ;drv_mrf_miwi_89xa.c: 307: uint8_t allowedTxFailure;
 24915                           ;drv_mrf_miwi_89xa.c: 308: allowedTxFailure = 0;
 24916  1896  01BC               	clrf	i1TxPacket@allowedTxFailure
 24917  1897                     i1l87:	
 24918                           ;drv_mrf_miwi_89xa.c: 310: Start_Transmitting:
 24919                           
 24920                           
 24921                           ;drv_mrf_miwi_89xa.c: 313: hasAck = 0;
 24922  1897  01E3               	clrf	_hasAck	;volatile
 24923                           
 24924                           ;drv_mrf_miwi_89xa.c: 317: CCARetries = 0;
 24925  1898  01BA               	clrf	i1TxPacket@CCARetries
 24926                           
 24927                           ;drv_mrf_miwi_89xa.c: 319: if( CCA )
 24928  1899  087C               	movf	i1TxPacket@CCA,w
 24929  189A  1D03               	btfss	3,2
 24930  189B  28AF               	goto	i1l7963
 24931  189C  28BF               	goto	i1l88
 24932  189D                     i1l7969:	
 24933                           
 24934                           ;drv_mrf_miwi_89xa.c: 327: {
 24935                           ;drv_mrf_miwi_89xa.c: 328: if(CCARetries++ > 4 )
 24936  189D  083A               	movf	i1TxPacket@CCARetries,w
 24937  189E  0ABA               	incf	i1TxPacket@CCARetries,f
 24938  189F  00A8               	movwf	??i1_TxPacket
 24939  18A0  3005               	movlw	5
 24940  18A1  0228               	subwf	??i1_TxPacket,w
 24941  18A2  1803               	btfsc	3,0
 24942  18A3  0008               	return
 24943                           
 24944                           ;drv_mrf_miwi_89xa.c: 332: }
 24945                           ;drv_mrf_miwi_89xa.c: 333: DELAY_10us(1);
 24946                           
 24947                           ;drv_mrf_miwi_89xa.c: 329: {
 24948                           ;drv_mrf_miwi_89xa.c: 330: return 0;
 24949                           ;	Return value of i1_TxPacket is never used
 24950  18A4  3000               	movlw	0
 24951  18A5  00A3               	movwf	i1DELAY_10us@tenMicroSecondCounter+3
 24952  18A6  3000               	movlw	0
 24953  18A7  00A2               	movwf	i1DELAY_10us@tenMicroSecondCounter+2
 24954  18A8  3000               	movlw	0
 24955  18A9  00A1               	movwf	i1DELAY_10us@tenMicroSecondCounter+1
 24956  18AA  3001               	movlw	1
 24957  18AB  00A0               	movwf	i1DELAY_10us@tenMicroSecondCounter
 24958  18AC  31B6  2637  3198   	fcall	i1_DELAY_10us
 24959  18AF                     i1l7963:	
 24960                           ;drv_mrf_miwi_89xa.c: 320: {
 24961                           ;drv_mrf_miwi_89xa.c: 322: Start_CCA:
 24962                           
 24963                           ;drv_mrf_miwi_89xa.c: 334: goto Start_CCA;
 24964                           
 24965                           
 24966                           ;drv_mrf_miwi_89xa.c: 323: rssival = RegisterRead(0x2800>>8);
 24967  18AF  3028               	movlw	40
 24968  18B0  31B7  2736  3198   	fcall	i1_RegisterRead
 24969  18B3  0020               	movlb	0	; select bank0
 24970  18B4  00A8               	movwf	??i1_TxPacket
 24971  18B5  0828               	movf	??i1_TxPacket,w
 24972  18B6  00BE               	movwf	i1TxPacket@rssival
 24973                           
 24974                           ;drv_mrf_miwi_89xa.c: 324: rssival = (rssival>>1);
 24975  18B7  363E               	lsrf	i1TxPacket@rssival,w
 24976  18B8  00A8               	movwf	??i1_TxPacket
 24977  18B9  0828               	movf	??i1_TxPacket,w
 24978  18BA  00BE               	movwf	i1TxPacket@rssival
 24979                           
 24980                           ;drv_mrf_miwi_89xa.c: 326: if( rssival > 65 )
 24981  18BB  3042               	movlw	66
 24982  18BC  023E               	subwf	i1TxPacket@rssival,w
 24983  18BD  1803               	btfsc	3,0
 24984  18BE  289D               	goto	i1l7969
 24985  18BF                     i1l88:	
 24986                           
 24987                           ;drv_mrf_miwi_89xa.c: 335: }
 24988                           ;drv_mrf_miwi_89xa.c: 336: }
 24989                           ;drv_mrf_miwi_89xa.c: 343: INTCONbits.IOCIE = 0;
 24990  18BF  118B               	bcf	11,3	;volatile
 24991                           
 24992                           ;drv_mrf_miwi_89xa.c: 344: SetRFMode(0x20);
 24993  18C0  3020               	movlw	32
 24994  18C1  31AC  246F  3198   	fcall	i1_SetRFMode
 24995                           
 24996                           ;drv_mrf_miwi_89xa.c: 345: RegisterSet(0x1A00 | (0xC8) | 0x01);
 24997  18C4  30C9               	movlw	201
 24998  18C5  00F3               	movwf	i1RegisterSet@setting
 24999  18C6  301A               	movlw	26
 25000  18C7  00F4               	movwf	i1RegisterSet@setting+1
 25001  18C8  31B5  25A7  3198   	fcall	i1_RegisterSet
 25002                           
 25003                           ;drv_mrf_miwi_89xa.c: 346: WriteFIFO(TxPacketLen);
 25004  18CB  0020               	movlb	0	; select bank0
 25005  18CC  0830               	movf	i1TxPacket@TxPacketLen,w
 25006  18CD  3190  2002  3198   	fcall	i1_WriteFIFO
 25007                           
 25008                           ;drv_mrf_miwi_89xa.c: 347: for(i=0; i< TxPacketLen; i++)
 25009  18D0  0020               	movlb	0	; select bank0
 25010  18D1  01BD               	clrf	i1TxPacket@i
 25011  18D2                     i1l7987:	
 25012  18D2  0830               	movf	i1TxPacket@TxPacketLen,w
 25013  18D3  023D               	subwf	i1TxPacket@i,w
 25014  18D4  1803               	btfsc	3,0
 25015  18D5  28E5               	goto	i1l7989
 25016                           
 25017                           ;drv_mrf_miwi_89xa.c: 348: {
 25018                           ;drv_mrf_miwi_89xa.c: 349: WriteFIFO(MACTxBuffer[i]);
 25019  18D6  083D               	movf	i1TxPacket@i,w
 25020  18D7  3E20               	addlw	(low (_MACTxBuffer| (0+768)))& (0+255)
 25021  18D8  0086               	movwf	6
 25022  18D9  3003               	movlw	3	; select bank6/7
 25023  18DA  0087               	movwf	7
 25024  18DB  0801               	movf	1,w
 25025  18DC  3190  2002  3198   	fcall	i1_WriteFIFO
 25026  18DF  3001               	movlw	1
 25027  18E0  0020               	movlb	0	; select bank0
 25028  18E1  00A8               	movwf	??i1_TxPacket
 25029  18E2  0828               	movf	??i1_TxPacket,w
 25030  18E3  07BD               	addwf	i1TxPacket@i,f
 25031  18E4  28D2               	goto	i1l7987
 25032  18E5                     i1l7989:	
 25033                           
 25034                           ;drv_mrf_miwi_89xa.c: 350: }
 25035                           ;drv_mrf_miwi_89xa.c: 351: SetRFMode(0x80);
 25036  18E5  3080               	movlw	128
 25037  18E6  31AC  246F  3198   	fcall	i1_SetRFMode
 25038                           
 25039                           ;drv_mrf_miwi_89xa.c: 355: INTCONbits.IOCIE = 1;
 25040  18E9  158B               	bsf	11,3	;volatile
 25041  18EA                     i1l7993:	
 25042                           ;drv_mrf_miwi_89xa.c: 357: {
 25043                           
 25044                           ;drv_mrf_miwi_89xa.c: 356: while((IRQ1_Received == 0) && (IOCBFbits.IOCBF3 == 0) )
 25045                           
 25046  18EA  0020               	movlb	0	; select bank0
 25047  18EB  085A               	movf	_IRQ1_Received,w	;volatile
 25048  18EC  1D03               	btfss	3,2
 25049  18ED  28F1               	goto	i1l7997
 25050  18EE  0027               	movlb	7	; select bank7
 25051  18EF  1D96               	btfss	22,3	;volatile
 25052  18F0  28EA               	goto	i1l7993
 25053  18F1                     i1l7997:	
 25054                           
 25055                           ;drv_mrf_miwi_89xa.c: 359: };
 25056                           ;drv_mrf_miwi_89xa.c: 363: IRQ1_Received = 0;
 25057  18F1  0020               	movlb	0	; select bank0
 25058  18F2  01DA               	clrf	_IRQ1_Received	;volatile
 25059                           
 25060                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x20);
 25061  18F3  3020               	movlw	32
 25062  18F4  31AC  246F  3198   	fcall	i1_SetRFMode
 25063                           
 25064                           ;drv_mrf_miwi_89xa.c: 365: SetRFMode(0x60);
 25065  18F7  3060               	movlw	96
 25066  18F8  31AC  246F  3198   	fcall	i1_SetRFMode
 25067                           
 25068                           ;drv_mrf_miwi_89xa.c: 368: if( (MACTxBuffer[0] & 0x20) > 0 )
 25069  18FB  0026               	movlb	6	; select bank6
 25070  18FC  1EA0               	btfss	_MACTxBuffer^(0+768),5	;volatile
 25071  18FD  2955               	goto	i1l101
 25072                           
 25073                           ;drv_mrf_miwi_89xa.c: 369: {
 25074                           ;drv_mrf_miwi_89xa.c: 370: TxMACSeq = MACTxBuffer[1];
 25075  18FE  0821               	movf	(_MACTxBuffer^(0+768)+1),w	;volatile
 25076  18FF  0020               	movlb	0	; select bank0
 25077  1900  00A8               	movwf	??i1_TxPacket
 25078  1901  0828               	movf	??i1_TxPacket,w
 25079  1902  0023               	movlb	3	; select bank3
 25080  1903  00D2               	movwf	_TxMACSeq^(0+384)
 25081                           
 25082                           ;drv_mrf_miwi_89xa.c: 371: t1 = MiWi_TickGet();
 25083  1904  31AA  228C  3198   	fcall	i1_MiWi_TickGet
 25084  1907  0873               	movf	?i1_MiWi_TickGet+3,w
 25085  1908  0020               	movlb	0	; select bank0
 25086  1909  00B5               	movwf	i1TxPacket@t1+3
 25087  190A  0872               	movf	?i1_MiWi_TickGet+2,w
 25088  190B  00B4               	movwf	i1TxPacket@t1+2
 25089  190C  0871               	movf	?i1_MiWi_TickGet+1,w
 25090  190D  00B3               	movwf	i1TxPacket@t1+1
 25091  190E  0870               	movf	?i1_MiWi_TickGet,w
 25092  190F  00B2               	movwf	i1TxPacket@t1
 25093  1910                     i1l8009:	
 25094                           ;drv_mrf_miwi_89xa.c: 372: while(1)
 25095                           
 25096                           
 25097                           ;drv_mrf_miwi_89xa.c: 373: {
 25098                           ;drv_mrf_miwi_89xa.c: 374: if( hasAck )
 25099  1910  0863               	movf	_hasAck,w	;volatile
 25100  1911  1903               	btfsc	3,2
 25101  1912  2916               	goto	i1l8013
 25102                           
 25103                           ;drv_mrf_miwi_89xa.c: 375: {
 25104                           ;drv_mrf_miwi_89xa.c: 376: status = 1;
 25105  1913  01B1               	clrf	i1TxPacket@status
 25106  1914  0AB1               	incf	i1TxPacket@status,f
 25107                           
 25108                           ;drv_mrf_miwi_89xa.c: 377: goto TX_END_HERE;
 25109  1915  0008               	return
 25110  1916                     i1l8013:	
 25111                           
 25112                           ;drv_mrf_miwi_89xa.c: 378: }
 25113                           ;drv_mrf_miwi_89xa.c: 379: t2 = MiWi_TickGet();
 25114  1916  31AA  228C  3198   	fcall	i1_MiWi_TickGet
 25115  1919  0873               	movf	?i1_MiWi_TickGet+3,w
 25116  191A  0020               	movlb	0	; select bank0
 25117  191B  00B9               	movwf	i1TxPacket@t2+3
 25118  191C  0872               	movf	?i1_MiWi_TickGet+2,w
 25119  191D  00B8               	movwf	i1TxPacket@t2+2
 25120  191E  0871               	movf	?i1_MiWi_TickGet+1,w
 25121  191F  00B7               	movwf	i1TxPacket@t2+1
 25122  1920  0870               	movf	?i1_MiWi_TickGet,w
 25123  1921  00B6               	movwf	i1TxPacket@t2
 25124                           
 25125                           ;drv_mrf_miwi_89xa.c: 380: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 25126  1922  0836               	movf	i1TxPacket@t2,w
 25127  1923  00A8               	movwf	??i1_TxPacket
 25128  1924  0837               	movf	i1TxPacket@t2+1,w
 25129  1925  00A9               	movwf	??i1_TxPacket+1
 25130  1926  0838               	movf	i1TxPacket@t2+2,w
 25131  1927  00AA               	movwf	??i1_TxPacket+2
 25132  1928  0839               	movf	i1TxPacket@t2+3,w
 25133  1929  00AB               	movwf	??i1_TxPacket+3
 25134  192A  0932               	comf	i1TxPacket@t1,w
 25135  192B  00AC               	movwf	??i1_TxPacket+4
 25136  192C  0933               	comf	i1TxPacket@t1+1,w
 25137  192D  00AD               	movwf	??i1_TxPacket+5
 25138  192E  0934               	comf	i1TxPacket@t1+2,w
 25139  192F  00AE               	movwf	??i1_TxPacket+6
 25140  1930  0935               	comf	i1TxPacket@t1+3,w
 25141  1931  00AF               	movwf	??i1_TxPacket+7
 25142  1932  0AAC               	incf	??i1_TxPacket+4,f
 25143  1933  1903               	skipnz
 25144  1934  0AAD               	incf	??i1_TxPacket+5,f
 25145  1935  1903               	skipnz
 25146  1936  0AAE               	incf	??i1_TxPacket+6,f
 25147  1937  1903               	skipnz
 25148  1938  0AAF               	incf	??i1_TxPacket+7,f
 25149  1939  082C               	movf	??i1_TxPacket+4,w
 25150  193A  07A8               	addwf	??i1_TxPacket,f
 25151  193B  082D               	movf	??i1_TxPacket+5,w
 25152  193C  3DA9               	addwfc	??i1_TxPacket+1,f
 25153  193D  082E               	movf	??i1_TxPacket+6,w
 25154  193E  3DAA               	addwfc	??i1_TxPacket+2,f
 25155  193F  082F               	movf	??i1_TxPacket+7,w
 25156  1940  3DAB               	addwfc	??i1_TxPacket+3,f
 25157  1941  082B               	movf	??i1_TxPacket+3,w
 25158  1942  1D03               	btfss	3,2
 25159  1943  294D               	goto	i1l8019
 25160  1944  082A               	movf	??i1_TxPacket+2,w
 25161  1945  1D03               	btfss	3,2
 25162  1946  294D               	goto	i1l8019
 25163  1947  300A               	movlw	10
 25164  1948  0228               	subwf	??i1_TxPacket,w
 25165  1949  303D               	movlw	61
 25166  194A  3B29               	subwfb	??i1_TxPacket+1,w
 25167  194B  1C03               	btfss	3,0
 25168  194C  2910               	goto	i1l8009
 25169  194D                     i1l8019:	
 25170                           ;drv_mrf_miwi_89xa.c: 381: {
 25171                           ;drv_mrf_miwi_89xa.c: 382: break;
 25172                           
 25173                           
 25174                           ;drv_mrf_miwi_89xa.c: 383: }
 25175                           ;drv_mrf_miwi_89xa.c: 384: }
 25176                           ;drv_mrf_miwi_89xa.c: 386: if(allowedTxFailure++ <= 3)
 25177  194D  083C               	movf	i1TxPacket@allowedTxFailure,w
 25178  194E  0ABC               	incf	i1TxPacket@allowedTxFailure,f
 25179  194F  00A8               	movwf	??i1_TxPacket
 25180  1950  3004               	movlw	4
 25181  1951  0228               	subwf	??i1_TxPacket,w
 25182  1952  1C03               	btfss	3,0
 25183  1953  2897               	goto	i1l87
 25184  1954  2891               	goto	i1l8023
 25185  1955                     i1l101:	
 25186                           ;drv_mrf_miwi_89xa.c: 389: }
 25187                           
 25188                           ;drv_mrf_miwi_89xa.c: 387: goto Start_Transmitting;
 25189                           
 25190                           
 25191                           ;drv_mrf_miwi_89xa.c: 390: else
 25192                           ;drv_mrf_miwi_89xa.c: 392: {
 25193                           ;drv_mrf_miwi_89xa.c: 393: status = 1;
 25194  1955  0020               	movlb	0	; select bank0
 25195  1956  01B1               	clrf	i1TxPacket@status
 25196  1957  0AB1               	incf	i1TxPacket@status,f
 25197                           
 25198                           ;drv_mrf_miwi_89xa.c: 394: goto TX_END_HERE;
 25199  1958  0008               	return
 25200  1959                     i1l8025:	
 25201                           
 25202                           ;drv_mrf_miwi_89xa.c: 395: }
 25203                           ;drv_mrf_miwi_89xa.c: 396: }
 25204                           ;drv_mrf_miwi_89xa.c: 398: status = 0;
 25205  1959  01B1               	clrf	i1TxPacket@status
 25206                           
 25207                           ;drv_mrf_miwi_89xa.c: 399: TX_END_HERE:
 25208  195A  0008               	return
 25209  195B                     __end_ofi1_TxPacket:	
 25210                           ;drv_mrf_miwi_89xa.c: 400: return status;
 25211                           ;	Return value of i1_TxPacket is never used
 25212                           
 25213                           
 25214                           	psect	text89
 25215  1002                     __ptext89:	
 25216 ;; *************** function i1_WriteFIFO *****************
 25217 ;; Defined at:
 25218 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 25219 ;; Parameters:    Size  Location     Type
 25220 ;;  Data            1    wreg     unsigned char 
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;  Data            1    3[COMMON] unsigned char 
 25223 ;;  WriteFIFO       1    4[COMMON] unsigned char 
 25224 ;; Return value:  Size  Location     Type
 25225 ;;                  1    wreg      void 
 25226 ;; Registers used:
 25227 ;;		wreg, status,2, status,0, pclath, cstack
 25228 ;; Tracked objects:
 25229 ;;		On entry : 0/0
 25230 ;;		On exit  : 0/0
 25231 ;;		Unchanged: 0/0
 25232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25237 ;;Total ram usage:        2 bytes
 25238 ;; Hardware stack levels used:    1
 25239 ;; Hardware stack levels required when called:    1
 25240 ;; This function calls:
 25241 ;;		i1_SPIPut
 25242 ;; This function is called by:
 25243 ;;		i1_TxPacket
 25244 ;; This function uses a non-reentrant model
 25245 ;;
 25246                           
 25247                           
 25248                           ;psect for function i1_WriteFIFO
 25249  1002                     i1_WriteFIFO:	
 25250                           
 25251                           ;incstack = 0
 25252 ;; hardware stack exceeded
 25253                           ; Regs used in i1_WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
 25254                           ;i1WriteFIFO@Data stored from wreg
 25255  1002  00F3               	movwf	i1WriteFIFO@Data
 25256                           
 25257                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCONbits.IOCIE;
 25258  1003  3000               	movlw	0
 25259  1004  198B               	btfsc	11,3	;volatile
 25260  1005  3001               	movlw	1
 25261  1006  00F4               	movwf	i1WriteFIFO@IRQ1select
 25262                           
 25263                           ;drv_mrf_miwi_89xa.c: 253: INTCONbits.IOCIE = 0;
 25264  1007  118B               	bcf	11,3	;volatile
 25265                           
 25266                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 25267  1008  0022               	movlb	2	; select bank2
 25268  1009  110E               	bcf	14,2	;volatile
 25269                           
 25270                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 25271  100A  0873               	movf	i1WriteFIFO@Data,w
 25272  100B  31B5  2583         	fcall	i1_SPIPut
 25273                           
 25274                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 25275  100D  0022               	movlb	2	; select bank2
 25276  100E  150E               	bsf	14,2	;volatile
 25277                           
 25278                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.IOCIE = IRQ1select;
 25279  100F  0C74               	rrf	i1WriteFIFO@IRQ1select,w
 25280  1010  1C03               	skipc
 25281  1011  118B               	bcf	11,3	;volatile
 25282  1012  1803               	skipnc
 25283  1013  158B               	bsf	11,3	;volatile
 25284  1014  0008               	return
 25285  1015                     __end_ofi1_WriteFIFO:	
 25286                           
 25287                           	psect	text90
 25288  2C6F                     __ptext90:	
 25289 ;; *************** function i1_SetRFMode *****************
 25290 ;; Defined at:
 25291 ;;		line 669 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 25292 ;; Parameters:    Size  Location     Type
 25293 ;;  mode            1    wreg     unsigned char 
 25294 ;; Auto vars:     Size  Location     Type
 25295 ;;  mode            1    7[COMMON] unsigned char 
 25296 ;; Return value:  Size  Location     Type
 25297 ;;                  1    wreg      void 
 25298 ;; Registers used:
 25299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 25300 ;; Tracked objects:
 25301 ;;		On entry : 0/0
 25302 ;;		On exit  : 0/0
 25303 ;;		Unchanged: 0/0
 25304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25309 ;;Total ram usage:        2 bytes
 25310 ;; Hardware stack levels used:    1
 25311 ;; Hardware stack levels required when called:    2
 25312 ;; This function calls:
 25313 ;;		i1_RegisterSet
 25314 ;; This function is called by:
 25315 ;;		i1_TxPacket
 25316 ;; This function uses a non-reentrant model
 25317 ;;
 25318                           
 25319                           
 25320                           ;psect for function i1_SetRFMode
 25321  2C6F                     i1_SetRFMode:	
 25322                           
 25323                           ;incstack = 0
 25324 ;; hardware stack exceeded
 25325                           ; Regs used in i1_SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 25326                           ;i1SetRFMode@mode stored from wreg
 25327  2C6F  00F7               	movwf	i1SetRFMode@mode
 25328                           
 25329                           ;drv_mrf_miwi_89xa.c: 671: switch (mode) {
 25330  2C70  2CAA               	goto	i1l7787
 25331  2C71                     i1l7765:	
 25332                           ;drv_mrf_miwi_89xa.c: 672: case 0x80:
 25333                           
 25334                           
 25335                           ;drv_mrf_miwi_89xa.c: 673: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 25336  2C71  308E               	movlw	142
 25337  2C72  00F3               	movwf	i1RegisterSet@setting
 25338  2C73  3000               	movlw	0
 25339  2C74  00F4               	movwf	i1RegisterSet@setting+1
 25340  2C75  31B5  25A7         	fcall	i1_RegisterSet
 25341                           
 25342                           ;drv_mrf_miwi_89xa.c: 674: RF_Mode = 0x80;
 25343  2C77  3080               	movlw	128
 25344  2C78  00F6               	movwf	??i1_SetRFMode
 25345  2C79  0876               	movf	??i1_SetRFMode,w
 25346  2C7A  0023               	movlb	3	; select bank3
 25347  2C7B  00CF               	movwf	_RF_Mode^(0+384)
 25348                           
 25349                           ;drv_mrf_miwi_89xa.c: 675: break;
 25350  2C7C  0008               	return
 25351  2C7D                     i1l7769:	
 25352                           ;drv_mrf_miwi_89xa.c: 676: case 0x60:
 25353                           
 25354                           
 25355                           ;drv_mrf_miwi_89xa.c: 677: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 25356  2C7D  306E               	movlw	110
 25357  2C7E  00F3               	movwf	i1RegisterSet@setting
 25358  2C7F  3000               	movlw	0
 25359  2C80  00F4               	movwf	i1RegisterSet@setting+1
 25360  2C81  31B5  25A7         	fcall	i1_RegisterSet
 25361                           
 25362                           ;drv_mrf_miwi_89xa.c: 678: RF_Mode = 0x60;
 25363  2C83  3060               	movlw	96
 25364  2C84  00F6               	movwf	??i1_SetRFMode
 25365  2C85  0876               	movf	??i1_SetRFMode,w
 25366  2C86  0023               	movlb	3	; select bank3
 25367  2C87  00CF               	movwf	_RF_Mode^(0+384)
 25368                           
 25369                           ;drv_mrf_miwi_89xa.c: 679: break;
 25370  2C88  0008               	return
 25371  2C89                     i1l7773:	
 25372                           ;drv_mrf_miwi_89xa.c: 680: case 0x40:
 25373                           
 25374                           
 25375                           ;drv_mrf_miwi_89xa.c: 681: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 25376  2C89  304E               	movlw	78
 25377  2C8A  00F3               	movwf	i1RegisterSet@setting
 25378  2C8B  3000               	movlw	0
 25379  2C8C  00F4               	movwf	i1RegisterSet@setting+1
 25380  2C8D  31B5  25A7         	fcall	i1_RegisterSet
 25381                           
 25382                           ;drv_mrf_miwi_89xa.c: 682: RF_Mode = 0x40;
 25383  2C8F  3040               	movlw	64
 25384  2C90  00F6               	movwf	??i1_SetRFMode
 25385  2C91  0876               	movf	??i1_SetRFMode,w
 25386  2C92  0023               	movlb	3	; select bank3
 25387  2C93  00CF               	movwf	_RF_Mode^(0+384)
 25388                           
 25389                           ;drv_mrf_miwi_89xa.c: 683: break;
 25390  2C94  0008               	return
 25391  2C95                     i1l7777:	
 25392                           ;drv_mrf_miwi_89xa.c: 684: case 0x20:
 25393                           
 25394                           
 25395                           ;drv_mrf_miwi_89xa.c: 685: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 25396  2C95  302E               	movlw	46
 25397  2C96  00F3               	movwf	i1RegisterSet@setting
 25398  2C97  3000               	movlw	0
 25399  2C98  00F4               	movwf	i1RegisterSet@setting+1
 25400  2C99  31B5  25A7         	fcall	i1_RegisterSet
 25401                           
 25402                           ;drv_mrf_miwi_89xa.c: 686: RF_Mode = 0x20;
 25403  2C9B  3020               	movlw	32
 25404  2C9C  00F6               	movwf	??i1_SetRFMode
 25405  2C9D  0876               	movf	??i1_SetRFMode,w
 25406  2C9E  0023               	movlb	3	; select bank3
 25407  2C9F  00CF               	movwf	_RF_Mode^(0+384)
 25408                           
 25409                           ;drv_mrf_miwi_89xa.c: 687: break;
 25410  2CA0  0008               	return
 25411  2CA1                     i1l7781:	
 25412                           ;drv_mrf_miwi_89xa.c: 688: case 0x00:
 25413                           
 25414                           
 25415                           ;drv_mrf_miwi_89xa.c: 689: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 25416  2CA1  300E               	movlw	14
 25417  2CA2  00F3               	movwf	i1RegisterSet@setting
 25418  2CA3  3000               	movlw	0
 25419  2CA4  00F4               	movwf	i1RegisterSet@setting+1
 25420  2CA5  31B5  25A7         	fcall	i1_RegisterSet
 25421                           
 25422                           ;drv_mrf_miwi_89xa.c: 690: RF_Mode = 0x00;
 25423  2CA7  0023               	movlb	3	; select bank3
 25424  2CA8  01CF               	clrf	_RF_Mode^(0+384)
 25425                           
 25426                           ;drv_mrf_miwi_89xa.c: 692: }
 25427                           
 25428                           ;drv_mrf_miwi_89xa.c: 691: break;
 25429  2CA9  0008               	return
 25430  2CAA                     i1l7787:	
 25431  2CAA  0877               	movf	i1SetRFMode@mode,w
 25432                           
 25433                           ; Switch size 1, requested type "space"
 25434                           ; Number of cases is 5, Range of values is 0 to 128
 25435                           ; switch strategies available:
 25436                           ; Name         Instructions Cycles
 25437                           ; simple_byte           16     9 (average)
 25438                           ; jumptable            260     6 (fixed)
 25439                           ;	Chosen strategy is simple_byte
 25440  2CAB  3A00               	xorlw	0	; case 0
 25441  2CAC  1903               	skipnz
 25442  2CAD  2CA1               	goto	i1l7781
 25443  2CAE  3A20               	xorlw	32	; case 32
 25444  2CAF  1903               	skipnz
 25445  2CB0  2C95               	goto	i1l7777
 25446  2CB1  3A60               	xorlw	96	; case 64
 25447  2CB2  1903               	skipnz
 25448  2CB3  2C89               	goto	i1l7773
 25449  2CB4  3A20               	xorlw	32	; case 96
 25450  2CB5  1903               	skipnz
 25451  2CB6  2C7D               	goto	i1l7769
 25452  2CB7  3AE0               	xorlw	224	; case 128
 25453  2CB8  1903               	skipnz
 25454  2CB9  2C71               	goto	i1l7765
 25455  2CBA  2CBB               	goto	i1l138
 25456  2CBB                     i1l138:	
 25457  2CBB  0008               	return
 25458  2CBC                     __end_ofi1_SetRFMode:	
 25459                           
 25460                           	psect	text91
 25461  35A7                     __ptext91:	
 25462 ;; *************** function i1_RegisterSet *****************
 25463 ;; Defined at:
 25464 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 25465 ;; Parameters:    Size  Location     Type
 25466 ;;  setting         2    3[COMMON] unsigned int 
 25467 ;; Auto vars:     Size  Location     Type
 25468 ;;  RegisterSet     1    5[COMMON] unsigned char 
 25469 ;; Return value:  Size  Location     Type
 25470 ;;                  1    wreg      void 
 25471 ;; Registers used:
 25472 ;;		wreg, status,2, status,0, pclath, cstack
 25473 ;; Tracked objects:
 25474 ;;		On entry : 0/0
 25475 ;;		On exit  : 0/0
 25476 ;;		Unchanged: 0/0
 25477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25481 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25482 ;;Total ram usage:        3 bytes
 25483 ;; Hardware stack levels used:    1
 25484 ;; Hardware stack levels required when called:    1
 25485 ;; This function calls:
 25486 ;;		i1_SPIPut
 25487 ;; This function is called by:
 25488 ;;		i1_TxPacket
 25489 ;;		i1_SetRFMode
 25490 ;; This function uses a non-reentrant model
 25491 ;;
 25492                           
 25493                           
 25494                           ;psect for function i1_RegisterSet
 25495  35A7                     i1_RegisterSet:	
 25496                           
 25497                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCONbits.IOCIE;
 25498                           
 25499                           ;incstack = 0
 25500 ;; hardware stack exceeded
 25501                           ; Regs used in i1_RegisterSet: [wreg+status,2+status,0+pclath+cstack]
 25502  35A7  3000               	movlw	0
 25503  35A8  198B               	btfsc	11,3	;volatile
 25504  35A9  3001               	movlw	1
 25505  35AA  00F5               	movwf	i1RegisterSet@IRQ1select
 25506                           
 25507                           ;drv_mrf_miwi_89xa.c: 172: INTCONbits.IOCIE = 0;
 25508  35AB  118B               	bcf	11,3	;volatile
 25509                           
 25510                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 25511  35AC  0022               	movlb	2	; select bank2
 25512  35AD  1190               	bcf	16,3	;volatile
 25513                           
 25514                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 25515  35AE  0874               	movf	i1RegisterSet@setting+1,w
 25516  35AF  31B5  2583  31B5   	fcall	i1_SPIPut
 25517                           
 25518                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 25519  35B2  0873               	movf	i1RegisterSet@setting,w
 25520  35B3  31B5  2583         	fcall	i1_SPIPut
 25521                           
 25522                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 25523  35B5  0022               	movlb	2	; select bank2
 25524  35B6  1590               	bsf	16,3	;volatile
 25525                           
 25526                           ;drv_mrf_miwi_89xa.c: 177: INTCONbits.IOCIE = IRQ1select;
 25527  35B7  0C75               	rrf	i1RegisterSet@IRQ1select,w
 25528  35B8  1C03               	skipc
 25529  35B9  118B               	bcf	11,3	;volatile
 25530  35BA  1803               	skipnc
 25531  35BB  158B               	bsf	11,3	;volatile
 25532  35BC  0008               	return
 25533  35BD                     __end_ofi1_RegisterSet:	
 25534                           
 25535                           	psect	text92
 25536  3736                     __ptext92:	
 25537 ;; *************** function i1_RegisterRead *****************
 25538 ;; Defined at:
 25539 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 25540 ;; Parameters:    Size  Location     Type
 25541 ;;  address         1    wreg     unsigned char 
 25542 ;; Auto vars:     Size  Location     Type
 25543 ;;  address         1    4[COMMON] unsigned char 
 25544 ;;  RegisterRead    1    6[COMMON] unsigned char 
 25545 ;;  RegisterRead    1    5[COMMON] unsigned char 
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  1    wreg      unsigned char 
 25548 ;; Registers used:
 25549 ;;		wreg, status,2, status,0, pclath, cstack
 25550 ;; Tracked objects:
 25551 ;;		On entry : 0/0
 25552 ;;		On exit  : 0/0
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25559 ;;Total ram usage:        4 bytes
 25560 ;; Hardware stack levels used:    1
 25561 ;; Hardware stack levels required when called:    2
 25562 ;; This function calls:
 25563 ;;		i1_SPIGet
 25564 ;;		i1_SPIPut
 25565 ;; This function is called by:
 25566 ;;		_high_isr
 25567 ;;		i1_TxPacket
 25568 ;; This function uses a non-reentrant model
 25569 ;;
 25570                           
 25571                           
 25572                           ;psect for function i1_RegisterRead
 25573  3736                     i1_RegisterRead:	
 25574                           
 25575                           ;incstack = 0
 25576 ;; hardware stack exceeded
 25577                           ; Regs used in i1_RegisterRead: [wreg+status,2+status,0+pclath+cstack]
 25578                           ;i1RegisterRead@address stored from wreg
 25579  3736  00F4               	movwf	i1RegisterRead@address
 25580                           
 25581                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 25582                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCONbits.IOCIE;
 25583  3737  3000               	movlw	0
 25584  3738  198B               	btfsc	11,3	;volatile
 25585  3739  3001               	movlw	1
 25586  373A  00F6               	movwf	i1RegisterRead@IRQ1select
 25587                           
 25588                           ;drv_mrf_miwi_89xa.c: 210: INTCONbits.IOCIE = 0;
 25589  373B  118B               	bcf	11,3	;volatile
 25590                           
 25591                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 25592  373C  0022               	movlb	2	; select bank2
 25593  373D  1190               	bcf	16,3	;volatile
 25594                           
 25595                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 25596  373E  0874               	movf	i1RegisterRead@address,w
 25597  373F  3840               	iorlw	64
 25598  3740  00F3               	movwf	??i1_RegisterRead
 25599  3741  0873               	movf	??i1_RegisterRead,w
 25600  3742  00F4               	movwf	i1RegisterRead@address
 25601                           
 25602                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 25603  3743  0874               	movf	i1RegisterRead@address,w
 25604  3744  31B5  2583  31B7   	fcall	i1_SPIPut
 25605                           
 25606                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 25607  3747  31B4  24FE         	fcall	i1_SPIGet
 25608  3749  00F3               	movwf	??i1_RegisterRead
 25609  374A  0873               	movf	??i1_RegisterRead,w
 25610  374B  00F5               	movwf	i1RegisterRead@value
 25611                           
 25612                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 25613  374C  0022               	movlb	2	; select bank2
 25614  374D  1590               	bsf	16,3	;volatile
 25615                           
 25616                           ;drv_mrf_miwi_89xa.c: 216: INTCONbits.IOCIE = IRQ1select;
 25617  374E  0C76               	rrf	i1RegisterRead@IRQ1select,w
 25618  374F  1C03               	skipc
 25619  3750  118B               	bcf	11,3	;volatile
 25620  3751  1803               	skipnc
 25621  3752  158B               	bsf	11,3	;volatile
 25622                           
 25623                           ;drv_mrf_miwi_89xa.c: 222: return value;
 25624  3753  0875               	movf	i1RegisterRead@value,w
 25625  3754  0008               	return
 25626  3755                     __end_ofi1_RegisterRead:	
 25627                           
 25628                           	psect	text93
 25629  34FE                     __ptext93:	
 25630 ;; *************** function i1_SPIGet *****************
 25631 ;; Defined at:
 25632 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 25633 ;; Parameters:    Size  Location     Type
 25634 ;;		None
 25635 ;; Auto vars:     Size  Location     Type
 25636 ;;		None
 25637 ;; Return value:  Size  Location     Type
 25638 ;;                  1    wreg      unsigned char 
 25639 ;; Registers used:
 25640 ;;		wreg, status,2, status,0, pclath, cstack
 25641 ;; Tracked objects:
 25642 ;;		On entry : 0/0
 25643 ;;		On exit  : 0/0
 25644 ;;		Unchanged: 0/0
 25645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25650 ;;Total ram usage:        0 bytes
 25651 ;; Hardware stack levels used:    1
 25652 ;; Hardware stack levels required when called:    1
 25653 ;; This function calls:
 25654 ;;		i1_SPIPut
 25655 ;; This function is called by:
 25656 ;;		_high_isr
 25657 ;;		i1_RegisterRead
 25658 ;; This function uses a non-reentrant model
 25659 ;;
 25660                           
 25661                           
 25662                           ;psect for function i1_SPIGet
 25663  34FE                     i1_SPIGet:	
 25664                           
 25665                           ;spi.c: 115: SPIPut(0x00);
 25666                           
 25667                           ;incstack = 0
 25668 ;; hardware stack exceeded
 25669                           ; Regs used in i1_SPIGet: [wreg+status,2+status,0+pclath+cstack]
 25670  34FE  3000               	movlw	0
 25671  34FF  31B5  2583         	fcall	i1_SPIPut
 25672                           
 25673                           ;spi.c: 116: return SSP1BUF;
 25674  3501  0024               	movlb	4	; select bank4
 25675  3502  0811               	movf	17,w	;volatile
 25676  3503  0008               	return
 25677  3504                     __end_ofi1_SPIGet:	
 25678                           
 25679                           	psect	text94
 25680  3583                     __ptext94:	
 25681 ;; *************** function i1_SPIPut *****************
 25682 ;; Defined at:
 25683 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 25684 ;; Parameters:    Size  Location     Type
 25685 ;;  v               1    wreg     unsigned char 
 25686 ;; Auto vars:     Size  Location     Type
 25687 ;;  v               1    2[COMMON] unsigned char 
 25688 ;;  SPIPut          1    1[COMMON] unsigned char 
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1    wreg      void 
 25691 ;; Registers used:
 25692 ;;		wreg
 25693 ;; Tracked objects:
 25694 ;;		On entry : 0/0
 25695 ;;		On exit  : 0/0
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25702 ;;Total ram usage:        3 bytes
 25703 ;; Hardware stack levels used:    1
 25704 ;; This function calls:
 25705 ;;		Nothing
 25706 ;; This function is called by:
 25707 ;;		i1_RegisterSet
 25708 ;;		i1_RegisterRead
 25709 ;;		i1_WriteFIFO
 25710 ;;		i1_SPIGet
 25711 ;; This function uses a non-reentrant model
 25712 ;;
 25713                           
 25714                           
 25715                           ;psect for function i1_SPIPut
 25716  3583                     i1_SPIPut:	
 25717                           
 25718                           ;incstack = 0
 25719 ;; hardware stack exceeded
 25720                           ; Regs used in i1_SPIPut: [wreg]
 25721                           ;i1SPIPut@v stored from wreg
 25722  3583  00F2               	movwf	i1SPIPut@v
 25723                           
 25724                           ;spi.c: 47: uint8_t i;
 25725                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 25726  3584  0020               	movlb	0	; select bank0
 25727  3585  1191               	bcf	17,3	;volatile
 25728                           
 25729                           ;spi.c: 64: i = SSP1BUF;
 25730  3586  0024               	movlb	4	; select bank4
 25731  3587  0811               	movf	17,w	;volatile
 25732  3588  00F0               	movwf	??i1_SPIPut
 25733  3589  0870               	movf	??i1_SPIPut,w
 25734  358A  00F1               	movwf	i1SPIPut@i
 25735  358B                     i1l7037:	
 25736                           ;spi.c: 66: do
 25737                           
 25738                           
 25739                           ;spi.c: 67: {
 25740                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 25741  358B  1395               	bcf	21,7	;volatile
 25742                           
 25743                           ;spi.c: 69: SSP1BUF = v;
 25744  358C  0872               	movf	i1SPIPut@v,w
 25745  358D  0091               	movwf	17	;volatile
 25746                           
 25747                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 25748  358E  1B95               	btfsc	21,7	;volatile
 25749  358F  2D8B               	goto	i1l7037
 25750  3590                     i1l1089:	
 25751                           ;spi.c: 72: while( PIR1bits.SSP1IF == 0 );
 25752                           
 25753  3590  0020               	movlb	0	; select bank0
 25754  3591  1D91               	btfss	17,3	;volatile
 25755  3592  2D90               	goto	i1l1089
 25756                           
 25757                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 25758  3593  1191               	bcf	17,3	;volatile
 25759  3594  0008               	return
 25760  3595                     __end_ofi1_SPIPut:	
 25761                           
 25762                           	psect	text95
 25763  2A8C                     __ptext95:	
 25764 ;; *************** function i1_MiWi_TickGet *****************
 25765 ;; Defined at:
 25766 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 25767 ;; Parameters:    Size  Location     Type
 25768 ;;		None
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;  MiWi_TickGet    4    7[COMMON] struct _MIWI_TICK
 25771 ;;  MiWi_TickGet    1    6[COMMON] unsigned char 
 25772 ;;  MiWi_TickGet    1    5[COMMON] unsigned char 
 25773 ;; Return value:  Size  Location     Type
 25774 ;;                  4    0[COMMON] struct _MIWI_TICK
 25775 ;; Registers used:
 25776 ;;		wreg, status,2, status,0
 25777 ;; Tracked objects:
 25778 ;;		On entry : 0/0
 25779 ;;		On exit  : 0/0
 25780 ;;		Unchanged: 0/0
 25781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25783 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25785 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25786 ;;Total ram usage:       11 bytes
 25787 ;; Hardware stack levels used:    1
 25788 ;; This function calls:
 25789 ;;		Nothing
 25790 ;; This function is called by:
 25791 ;;		_high_isr
 25792 ;;		i1_TxPacket
 25793 ;; This function uses a non-reentrant model
 25794 ;;
 25795                           
 25796                           
 25797                           ;psect for function i1_MiWi_TickGet
 25798  2A8C                     i1_MiWi_TickGet:	
 25799                           
 25800                           ;symbol.c: 108: MIWI_TICK currentTime;
 25801                           ;symbol.c: 109: uint8_t IntFlag1;
 25802                           ;symbol.c: 110: uint8_t IntFlag2;
 25803                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 25804                           
 25805                           ;incstack = 0
 25806 ;; hardware stack exceeded
 25807                           ; Regs used in i1_MiWi_TickGet: [wreg+status,2+status,0]
 25808  2A8C  01F9               	clrf	i1MiWi_TickGet@currentTime+2
 25809                           
 25810                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 25811  2A8D  01FA               	clrf	i1MiWi_TickGet@currentTime+3
 25812                           
 25813                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 25814  2A8E  0021               	movlb	1	; select bank1
 25815  2A8F  1011               	bcf	17,0	;volatile
 25816  2A90                     i1l7807:	
 25817                           ;symbol.c: 119: do
 25818                           
 25819                           
 25820                           ;symbol.c: 120: {
 25821                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 25822  2A90  3000               	movlw	0
 25823  2A91  0020               	movlb	0	; select bank0
 25824  2A92  1811               	btfsc	17,0	;volatile
 25825  2A93  3001               	movlw	1
 25826  2A94  00F6               	movwf	i1MiWi_TickGet@IntFlag1
 25827                           
 25828                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 25829  2A95  0816               	movf	22,w	;volatile
 25830  2A96  00F4               	movwf	??i1_MiWi_TickGet
 25831  2A97  0874               	movf	??i1_MiWi_TickGet,w
 25832  2A98  00F7               	movwf	i1MiWi_TickGet@currentTime
 25833                           
 25834                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 25835  2A99  0817               	movf	23,w	;volatile
 25836  2A9A  00F4               	movwf	??i1_MiWi_TickGet
 25837  2A9B  0874               	movf	??i1_MiWi_TickGet,w
 25838  2A9C  00F8               	movwf	i1MiWi_TickGet@currentTime+1
 25839                           
 25840                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 25841  2A9D  3000               	movlw	0
 25842  2A9E  1811               	btfsc	17,0	;volatile
 25843  2A9F  3001               	movlw	1
 25844  2AA0  00F5               	movwf	i1MiWi_TickGet@IntFlag2
 25845                           
 25846                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 25847  2AA1  0876               	movf	i1MiWi_TickGet@IntFlag1,w
 25848  2AA2  0675               	xorwf	i1MiWi_TickGet@IntFlag2,w
 25849  2AA3  1D03               	skipz
 25850  2AA4  2A90               	goto	i1l7807
 25851                           
 25852                           ;symbol.c: 127: if( IntFlag1 > 0 )
 25853  2AA5  0876               	movf	i1MiWi_TickGet@IntFlag1,w
 25854  2AA6  1903               	btfsc	3,2
 25855  2AA7  2AB4               	goto	i1l1119
 25856                           
 25857                           ;symbol.c: 128: {
 25858                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 25859  2AA8  1011               	bcf	17,0	;volatile
 25860                           
 25861                           ;symbol.c: 130: timerExtension1++;
 25862  2AA9  3001               	movlw	1
 25863  2AAA  00F4               	movwf	??i1_MiWi_TickGet
 25864  2AAB  0874               	movf	??i1_MiWi_TickGet,w
 25865  2AAC  07E6               	addwf	_timerExtension1,f	;volatile
 25866                           
 25867                           ;symbol.c: 131: if(timerExtension1 == 0)
 25868  2AAD  0866               	movf	_timerExtension1,w	;volatile
 25869  2AAE  1D03               	btfss	3,2
 25870  2AAF  2AB4               	goto	i1l1119
 25871                           
 25872                           ;symbol.c: 132: {
 25873                           ;symbol.c: 133: timerExtension2++;
 25874  2AB0  3001               	movlw	1
 25875  2AB1  00F4               	movwf	??i1_MiWi_TickGet
 25876  2AB2  0874               	movf	??i1_MiWi_TickGet,w
 25877  2AB3  07E7               	addwf	_timerExtension2,f	;volatile
 25878  2AB4                     i1l1119:	
 25879                           
 25880                           ;symbol.c: 134: }
 25881                           ;symbol.c: 135: }
 25882                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 25883  2AB4  0866               	movf	_timerExtension1,w	;volatile
 25884  2AB5  00F4               	movwf	??i1_MiWi_TickGet
 25885  2AB6  0874               	movf	??i1_MiWi_TickGet,w
 25886  2AB7  07F9               	addwf	i1MiWi_TickGet@currentTime+2,f
 25887                           
 25888                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 25889  2AB8  0867               	movf	_timerExtension2,w	;volatile
 25890  2AB9  00F4               	movwf	??i1_MiWi_TickGet
 25891  2ABA  0874               	movf	??i1_MiWi_TickGet,w
 25892  2ABB  07FA               	addwf	i1MiWi_TickGet@currentTime+3,f
 25893                           
 25894                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 25895  2ABC  0021               	movlb	1	; select bank1
 25896  2ABD  1411               	bsf	17,0	;volatile
 25897                           
 25898                           ;symbol.c: 143: return currentTime;
 25899  2ABE  087A               	movf	i1MiWi_TickGet@currentTime+3,w
 25900  2ABF  00F3               	movwf	?i1_MiWi_TickGet+3
 25901  2AC0  0879               	movf	i1MiWi_TickGet@currentTime+2,w
 25902  2AC1  00F2               	movwf	?i1_MiWi_TickGet+2
 25903  2AC2  0878               	movf	i1MiWi_TickGet@currentTime+1,w
 25904  2AC3  00F1               	movwf	?i1_MiWi_TickGet+1
 25905  2AC4  0877               	movf	i1MiWi_TickGet@currentTime,w
 25906  2AC5  00F0               	movwf	?i1_MiWi_TickGet
 25907  2AC6  0008               	return
 25908  2AC7                     __end_ofi1_MiWi_TickGet:	
 25909                           
 25910                           	psect	text96
 25911  3637                     __ptext96:	
 25912 ;; *************** function i1_DELAY_10us *****************
 25913 ;; Defined at:
 25914 ;;		line 46 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 25915 ;; Parameters:    Size  Location     Type
 25916 ;;  tenMicroSeco    4    0[BANK0 ] unsigned long 
 25917 ;; Auto vars:     Size  Location     Type
 25918 ;;  DELAY_10us      4    4[BANK0 ] volatile long 
 25919 ;; Return value:  Size  Location     Type
 25920 ;;                  1    wreg      void 
 25921 ;; Registers used:
 25922 ;;		wreg, status,2, status,0, pclath, cstack
 25923 ;; Tracked objects:
 25924 ;;		On entry : 0/0
 25925 ;;		On exit  : 0/0
 25926 ;;		Unchanged: 0/0
 25927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25929 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25931 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25932 ;;Total ram usage:        8 bytes
 25933 ;; Hardware stack levels used:    1
 25934 ;; Hardware stack levels required when called:    1
 25935 ;; This function calls:
 25936 ;;		i1___lmul
 25937 ;; This function is called by:
 25938 ;;		i1_TxPacket
 25939 ;; This function uses a non-reentrant model
 25940 ;;
 25941                           
 25942                           
 25943                           ;psect for function i1_DELAY_10us
 25944  3637                     i1_DELAY_10us:	
 25945                           
 25946                           ;delay.c: 52: {
 25947                           ;delay.c: 58: }
 25948                           
 25949                           ;incstack = 0
 25950 ;; hardware stack exceeded
 25951                           ; Regs used in i1_DELAY_10us: [wreg+status,2+status,0+pclath+cstack]
 25952  3637  0008               	return
 25953  3638                     i1l980:	
 25954                           ;delay.c: 74: else
 25955                           ;delay.c: 75: {
 25956                           ;delay.c: 78: while (cyclesRequiredForEntireDelay>0)
 25957                           
 25958                           ;delay.c: 71: {
 25959                           ;delay.c: 73: }
 25960                           
 25961                           ;delay.c: 70: if (cyclesRequiredForEntireDelay <= 45)
 25962                           
 25963                           ;delay.c: 68: cyclesRequiredForEntireDelay -= (153 + 22);
 25964                           
 25965                           ;delay.c: 59: else
 25966                           ;delay.c: 60: {
 25967                           ;delay.c: 64: cyclesRequiredForEntireDelay = (uint32_t)(((10000000)/4)/100000) * tenMicr
      +                          oSecondCounter;
 25968                           
 25969                           
 25970                           ;delay.c: 79: {
 25971                           ;delay.c: 81: __nop();
 25972  3638  0000               	nop
 25973                           
 25974                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 25975  3639  30D6               	movlw	214
 25976  363A  0020               	movlb	0	; select bank0
 25977  363B  07A4               	addwf	i1DELAY_10us@cyclesRequiredForEntireDelay,f	;volatile
 25978  363C  30FF               	movlw	255
 25979  363D  3DA5               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+1,f	;volatile
 25980  363E  30FF               	movlw	255
 25981  363F  3DA6               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+2,f	;volatile
 25982  3640  30FF               	movlw	255
 25983  3641  3DA7               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+3,f	;volatile
 25984  3642  1BA7               	btfsc	i1DELAY_10us@cyclesRequiredForEntireDelay+3,7	;volatile
 25985  3643  0008               	return
 25986  3644  0827               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+3,w	;volatile
 25987  3645  1D03               	btfss	3,2
 25988  3646  2E38               	goto	i1l980
 25989  3647  0826               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+2,w	;volatile
 25990  3648  1D03               	btfss	3,2
 25991  3649  2E38               	goto	i1l980
 25992  364A  0825               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+1,w	;volatile
 25993  364B  1D03               	btfss	3,2
 25994  364C  2E38               	goto	i1l980
 25995  364D  3001               	movlw	1
 25996  364E  0224               	subwf	i1DELAY_10us@cyclesRequiredForEntireDelay,w	;volatile
 25997  364F  1C03               	btfss	3,0
 25998  3650  0008               	return
 25999  3651  2E38               	goto	i1l980
 26000  3652                     __end_ofi1_DELAY_10us:	
 26001                           
 26002                           	psect	text97
 26003  28F7                     __ptext97:	
 26004 ;; *************** function i1___lmul *****************
 26005 ;; Defined at:
 26006 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;  multiplier      4    0[COMMON] unsigned long 
 26009 ;;  multiplicand    4    4[COMMON] unsigned long 
 26010 ;; Auto vars:     Size  Location     Type
 26011 ;;  __lmul          4    8[COMMON] unsigned long 
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  4    0[COMMON] unsigned long 
 26014 ;; Registers used:
 26015 ;;		wreg, status,2, status,0
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26021 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26022 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26024 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26025 ;;Total ram usage:       12 bytes
 26026 ;; Hardware stack levels used:    1
 26027 ;; This function calls:
 26028 ;;		Nothing
 26029 ;; This function is called by:
 26030 ;;		i1_DELAY_10us
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           
 26035                           ;psect for function i1___lmul
 26036  28F7                     i1___lmul:	
 26037                           
 26038                           ;incstack = 0
 26039 ;; hardware stack exceeded
 26040                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
 26041  28F7  3000               	movlw	0
 26042  28F8  00FB               	movwf	i1___lmul@product+3
 26043  28F9  3000               	movlw	0
 26044  28FA  00FA               	movwf	i1___lmul@product+2
 26045  28FB  3000               	movlw	0
 26046  28FC  00F9               	movwf	i1___lmul@product+1
 26047  28FD  3000               	movlw	0
 26048  28FE  00F8               	movwf	i1___lmul@product
 26049  28FF                     i1l7391:	
 26050  28FF  1C70               	btfss	i1___lmul@multiplier,0
 26051  2900  2909               	goto	i1l7395
 26052  2901  0874               	movf	i1___lmul@multiplicand,w
 26053  2902  07F8               	addwf	i1___lmul@product,f
 26054  2903  0875               	movf	i1___lmul@multiplicand+1,w
 26055  2904  3DF9               	addwfc	i1___lmul@product+1,f
 26056  2905  0876               	movf	i1___lmul@multiplicand+2,w
 26057  2906  3DFA               	addwfc	i1___lmul@product+2,f
 26058  2907  0877               	movf	i1___lmul@multiplicand+3,w
 26059  2908  3DFB               	addwfc	i1___lmul@product+3,f
 26060  2909                     i1l7395:	
 26061  2909  3001               	movlw	1
 26062  290A                     u788_25:	
 26063  290A  35F4               	lslf	i1___lmul@multiplicand,f
 26064  290B  0DF5               	rlf	i1___lmul@multiplicand+1,f
 26065  290C  0DF6               	rlf	i1___lmul@multiplicand+2,f
 26066  290D  0DF7               	rlf	i1___lmul@multiplicand+3,f
 26067  290E  0B89               	decfsz	9,f
 26068  290F  290A               	goto	u788_25
 26069  2910  3001               	movlw	1
 26070  2911                     u789_25:	
 26071  2911  36F3               	lsrf	i1___lmul@multiplier+3,f
 26072  2912  0CF2               	rrf	i1___lmul@multiplier+2,f
 26073  2913  0CF1               	rrf	i1___lmul@multiplier+1,f
 26074  2914  0CF0               	rrf	i1___lmul@multiplier,f
 26075  2915  0B89               	decfsz	9,f
 26076  2916  2911               	goto	u789_25
 26077  2917  0873               	movf	i1___lmul@multiplier+3,w
 26078  2918  0472               	iorwf	i1___lmul@multiplier+2,w
 26079  2919  0471               	iorwf	i1___lmul@multiplier+1,w
 26080  291A  0470               	iorwf	i1___lmul@multiplier,w
 26081  291B  1D03               	skipz
 26082  291C  28FF               	goto	i1l7391
 26083  291D  087B               	movf	i1___lmul@product+3,w
 26084  291E  00F3               	movwf	?i1___lmul+3
 26085  291F  087A               	movf	i1___lmul@product+2,w
 26086  2920  00F2               	movwf	?i1___lmul+2
 26087  2921  0879               	movf	i1___lmul@product+1,w
 26088  2922  00F1               	movwf	?i1___lmul+1
 26089  2923  0878               	movf	i1___lmul@product,w
 26090  2924  00F0               	movwf	?i1___lmul
 26091  2925  0008               	return
 26092  2926                     __end_ofi1___lmul:	
 26093                           
 26094                           	psect	text98
 26095  1001                     __ptext98:	
 26096 ;; *************** function _UserInterruptHandler *****************
 26097 ;; Defined at:
 26098 ;;		line 178 in file "../src/system_config/pic18exp_pic16f1947_89xa/system.c"
 26099 ;; Parameters:    Size  Location     Type
 26100 ;;		None
 26101 ;; Auto vars:     Size  Location     Type
 26102 ;;		None
 26103 ;; Return value:  Size  Location     Type
 26104 ;;                  1    wreg      void 
 26105 ;; Registers used:
 26106 ;;		None
 26107 ;; Tracked objects:
 26108 ;;		On entry : 0/0
 26109 ;;		On exit  : 0/0
 26110 ;;		Unchanged: 0/0
 26111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26116 ;;Total ram usage:        0 bytes
 26117 ;; Hardware stack levels used:    1
 26118 ;; This function calls:
 26119 ;;		Nothing
 26120 ;; This function is called by:
 26121 ;;		_high_isr
 26122 ;; This function uses a non-reentrant model
 26123 ;;
 26124                           
 26125                           
 26126                           ;psect for function _UserInterruptHandler
 26127  1001                     _UserInterruptHandler:	
 26128                           
 26129                           ;incstack = 0
 26130                           ; Regs used in _UserInterruptHandler: []
 26131  1001  0008               	return
 26132  1002                     __end_of_UserInterruptHandler:	
 26133  007E                     btemp	set	126	;btemp
 26134  007E                     int$flags	set	126
 26135  007E                     wtemp	set	126
 26136  007E                     wtemp0	set	126
 26137  0080                     wtemp1	set	128
 26138  0082                     wtemp2	set	130
 26139  0084                     wtemp3	set	132
 26140  0086                     wtemp4	set	134
 26141  0088                     wtemp5	set	136
 26142  007F                     wtemp6	set	127
 26143  007E                     ttemp	set	126
 26144  007E                     ttemp0	set	126
 26145  0081                     ttemp1	set	129
 26146  0084                     ttemp2	set	132
 26147  0087                     ttemp3	set	135
 26148  007F                     ttemp4	set	127
 26149  007E                     ltemp	set	126
 26150  007E                     ltemp0	set	126
 26151  0082                     ltemp1	set	130
 26152  0086                     ltemp2	set	134
 26153  0080                     ltemp3	set	128


Data Sizes:
    Strings     338
    Constant    350
    Data        11
    BSS         308
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      80
    BANK1            80     80      80
    BANK2            80     78      80
    BANK3            80      0      79
    BANK4            80      0      55
    BANK5            80      0      73
    BANK6            80      0      55
    BANK7            80      0      30
    BANK8            80      0       0
    BANK9            34      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK5[33]), 

    memset@p	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK5[33]), 

    sprintf$2453	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[21]), STR_12(CODE[18]), 
		 -> STR_11(CODE[20]), STR_10(CODE[17]), STR_9(CODE[22]), STR_8(CODE[22]), 
		 -> STR_7(CODE[25]), STR_6(CODE[22]), STR_5(CODE[17]), STR_4(CODE[16]), 
		 -> STR_3(CODE[31]), STR_2(CODE[32]), STR_1(CODE[29]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK5[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_13(CODE[21]), STR_11(CODE[20]), STR_4(CODE[16]), STR_3(CODE[31]), 
		 -> STR_2(CODE[32]), STR_1(CODE[29]), 

    sp__memset	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK5[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S728$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BIGRAM[114]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    S728$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BIGRAM[114]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmmyIndex(BANK3[2]), nvmRole(BANK3[2]), nvmEdc(BANK3[2]), nvmOutFrameCounter(BANK3[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(BANK3[2]), nvmCurrentChannel(BANK3[2]), nvmMyPANID(BANK3[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), role(BANK2[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BIGRAM[140]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), role(BANK2[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BIGRAM[140]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(1) Largest target is 35
		 -> TxBuffer(BANK4[35]), 

    S205$DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), NULL(NULL[0]), RxPacket(BIGRAM[114]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BIGRAM[140]), NULL(NULL[0]), RxPacket(BIGRAM[114]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S36$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S219$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BIGRAM[114]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 

    S219$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BIGRAM[114]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[55]), RxPacket(BIGRAM[114]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _high_isr in COMMON

    _high_isr->i1_TxPacket
    i1_WriteFIFO->i1_SPIPut
    i1_SetRFMode->i1_RegisterSet
    i1_RegisterSet->i1_SPIPut
    i1_RegisterRead->i1_SPIPut
    i1_SPIGet->i1_SPIPut
    i1_DELAY_10us->i1___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->i1_TxPacket
    i1_TxPacket->i1_DELAY_10us

Critical Paths under _main in BANK1

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _run_star_demo->_MiApp_UnicastConnection
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _ButtonPressed->_MiWi_TickGet
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiApp_SetChannel
    _NVMRead->_SPIPut
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _MiApp_SetChannel->_NVMWrite
    _MiMAC_SetChannel->_SetRFMode
    _EEPROM_Read->_SPIPut
    _store_connection_tb->_handle_lost_connection
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->___wmul
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _Find_Index->___wmul
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_DELAY_10us
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _DELAY_10us->___lmul
    _AddConnection->_NVMWrite
    _isSameAddress->___wmul
    _Total_Connections->___wmul
    _MiApp_DiscardMessage->_MiMAC_DiscardPacket
    _MiMAC_DiscardPacket->___wmul
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->___wmul
    _SPIGet->_SPIPut
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___wmul->___awmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut
    _DELAY_ms->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Process_RxMessage->_MiApp_MessageAvailable
    _MiApp_UnicastStar->_MiApp_MessageAvailable
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_EstablishConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1463875
                                             76 BANK2      2     2      0
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     17    17      0   34423
                                             55 BANK1     17    17      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2437
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2437
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      46
                                              3 BANK1      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      46
                                              3 BANK1      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1017911
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       18    18      0 1017911
                                             58 BANK2     18    18      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___awmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    3     3      0  332635
                                             37 BANK2      3     3      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               8     6      2   30188
                                             48 BANK1      8     6      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                3     2      1   30477
                                             52 BANK1      3     2      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          4     3      1   30166
                                             48 BANK1      4     3      1
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   18    18      0  263963
                                             37 BANK2     18    18      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                2     2      0    8776
                                             66 BANK1      2     2      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                       16    16      0     267
                                             11 BANK1     16    16      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      3     3      0  377333
                                             58 BANK2      3     3      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
                           _NVMWrite
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     421
                                             11 BANK1      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                  10    10      0   50603
                                             27 BANK1     10    10      0
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
                            _NVMRead
                           _NVMWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              8     2      6    1761
                                              3 BANK1      8     2      6
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              2     2      0    1505
                                              6 BANK1      2     2      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1490
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           7     5      2   20102
                                             18 BANK1      7     5      2
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     2     2      0    7061
                                             25 BANK1      2     2      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3027
                                              8 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     2      2     756
                                              3 BANK1      4     2      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           22    21      1  279166
                                             37 BANK2     21    20      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               1     1      0  254919
                                             36 BANK2      1     1      0
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            27    27      0  254919
                                             10 BANK2     26    26      0
                      _AddConnection
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                             ___wmul
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                 10     8      2     559
                                              4 BANK1      9     7      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               4     4      0      92
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     2     2      0    8777
                                             66 BANK1      2     2      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          3     1      2    8865
                                             66 BANK1      3     1      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                17    17      0   16112
                                             13 BANK1     16    16      0
                       _MiWi_TickGet
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      12    12      0   26135
                                             66 BANK1     12    12      0
                         _SendPacket
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1008
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     478
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                         10     5      5   56410
                                              0 BANK2     10     5      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              9     8      1   24173
                                             71 BANK1      9     8      1
               _MiApp_UnicastAddress
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 5     1      4    9065
                                             66 BANK1      5     1      4
                         _SendPacket
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   31747
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           9     7      2   15175
                                             13 BANK1      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 7     7      0   43008
                                             78 BANK1      1     1      0
                                              0 BANK2      6     6      0
             _MiApp_RemoveConnection
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                              12    12      0   27988
                                             66 BANK1     12    12      0
                           _NVMWrite
                         _SendPacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          12     8      4    8754
                                             54 BANK1     12     8      4
                   _MiMAC_SendPacket
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                    10     5      5    5075
                                             44 BANK1     10     5      5
                           _TxPacket
 ---------------------------------------------------------------------------------
 (9) _TxPacket                                            24    23      1    4354
                                             20 BANK1     24    23      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (10) _WriteFIFO                                           2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SetRFMode                                           2     2      0    1447
                                              6 BANK1      2     2      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (11) _RegisterSet                                         3     1      2    1425
                                              3 BANK1      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _RegisterRead                                        4     4      0     137
                                              3 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        11     7      4     221
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (10) _DELAY_10us                                          8     4      4     606
                                             12 BANK1      8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                       16    16      0   35239
                                             25 BANK1     16    16      0
                           _NVMWrite
                  _Total_Connections
                             ___wmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        9     5      4     846
                                             13 BANK1      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    8     8      0   15000
                                             13 BANK1      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0   14864
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  4     4      0   14864
                                             13 BANK1      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 3     3      0    4034
                                             25 BANK1      3     3      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                            12     6      6    3990
                                             13 BANK1     12     6      6
                           _MacroNop
                             _SPIGet
                             _SPIPut
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) _SPIGet                                              0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   3     2      1   31991
                                             55 BANK1      3     2      1
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   31747
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           7     3      4   31747
                                             48 BANK1      7     3      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             38    28     10   20593
                                             14 BANK1     34    24     10
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   14864
                                              7 BANK1      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     337
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     696
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     601
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           2     2      0    4734
                                             19 BANK1      2     2      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    2277
                                             18 BANK1      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    2277
                                             18 BANK1      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2587
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     310
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     158
                                              5 BANK1      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               3     3      0      23
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                             6     4      2    2119
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     448
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           25    25      0    4193
                                             31 BANK0     25    25      0
               _UserInterruptHandler
                     i1_MiWi_TickGet
                     i1_RegisterRead
                           i1_SPIGet
                         i1_TxPacket
                           i1___bmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (16) i1___wmul                                            6     2      4     768
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (16) i1___bmul                                            4     3      1     201
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (16) i1_TxPacket                                         24    23      1    1467
                                             12 COMMON     1     0      1
                                              8 BANK0     23    23      0
                       i1_DELAY_10us
                     i1_MiWi_TickGet
                     i1_RegisterRead
                      i1_RegisterSet
                        i1_SetRFMode
                        i1_WriteFIFO
 ---------------------------------------------------------------------------------
 (17) i1_WriteFIFO                                         2     2      0      68
                                              3 COMMON     2     2      0
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (17) i1_SetRFMode                                         2     2      0     268
                                              6 COMMON     2     2      0
                      i1_RegisterSet
 ---------------------------------------------------------------------------------
 (18) i1_RegisterSet                                       3     1      2     246
                                              3 COMMON     3     1      2
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (17) i1_RegisterRead                                      4     4      0     137
                                              3 COMMON     4     4      0
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (18) i1_SPIGet                                            0     0      0      23
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (18) i1_SPIPut                                            3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (17) i1_MiWi_TickGet                                     11     7      4     201
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (17) i1_DELAY_10us                                        8     4      4     239
                                              0 BANK0      8     4      4
                           i1___lmul
 ---------------------------------------------------------------------------------
 (18) i1___lmul                                           12     4      8     144
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awmod (ARG)
           _isdigit
     _DemoOutput_ChannelError
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___wmul (ARG)
           ___awmod (ARG)
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
           ___wmul
             ___awmod (ARG)
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             _Total_Connections
               ___wmul
                 ___awmod (ARG)
             ___wmul
               ___awmod (ARG)
             _isSameAddress
               ___wmul (ARG)
                 ___awmod (ARG)
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
             ___wmul
               ___awmod (ARG)
           _Find_Index
             ___wmul
               ___awmod (ARG)
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                   ___lmul
                 _LCD_Erase
                   _DELAY_ms
                     ___lmul
                   _LCDInitWrite
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                   _memset
                 _LCD_Update
                   _LCD_d_write
                     _DELAY_ms
                       ___lmul
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                   _LCD_i_write
                     _DELAY_ms
                       ___lmul
                     _LCDWritePortA
                       _SPIPut
                     _LCDWritePortB
                       _SPIPut
                 _sprintf
                   ___bmul
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awmod (ARG)
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                         ___lmul
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             ___awdiv
             ___awmod
             ___bmul
             ___wmul
               ___awmod (ARG)
           _MiMAC_DiscardPacket
             ___wmul
               ___awmod (ARG)
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
             ___bmul
             ___wmul
               ___awmod (ARG)
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPIGet
               _SPIPut
             _SPIPut
             ___wmul (ARG)
               ___awmod (ARG)
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                   ___lmul
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             ___wmul (ARG)
               ___awmod (ARG)
           ___wmul
             ___awmod (ARG)
           _isSameAddress
             ___wmul (ARG)
               ___awmod (ARG)
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
               ___lmul
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         ___wmul (ARG)
           ___awmod (ARG)
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
         _NVMWrite
           _MacroNop
           _SPIGet
             _SPIPut
           _SPIPut
           ___wmul (ARG)
             ___awmod (ARG)
       _MiMAC_Init
         _DELAY_ms
           ___lmul
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         ___wmul
           ___awmod (ARG)
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPIGet
           _SPIPut
         _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___wmul (ARG)
           ___awmod (ARG)
       ___wmul
         ___awmod (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___wmul (ARG)
           ___awmod (ARG)
     _MiApp_StartConnection
       _MiWi_TickGet
     _NVMWrite
       _MacroNop
       _SPIGet
         _SPIPut
       _SPIPut
       ___wmul (ARG)
         ___awmod (ARG)
     _STAR_DEMO_OPTIONS_MESSAGE
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
         ___lmul
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awmod (ARG)
           _isdigit
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
                 ___lmul
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           ___wmul (ARG)
             ___awmod (ARG)
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___awmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               _Total_Connections
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
               _isSameAddress
                 ___wmul (ARG)
                   ___awmod (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                         ___lmul
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
             _Find_Index
               ___wmul
                 ___awmod (ARG)
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                           ___lmul
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
                     ___wmul (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___awmod (ARG)
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awmod (ARG)
             _isSameAddress
               ___wmul (ARG)
                 ___awmod (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
                 ___lmul
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           ___wmul (ARG)
             ___awmod (ARG)
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                   ___lmul
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             ___wmul (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         ___wmul
           ___awmod (ARG)
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               _Total_Connections
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
               _isSameAddress
                 ___wmul (ARG)
                   ___awmod (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                         ___lmul
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
             _Find_Index
               ___wmul
                 ___awmod (ARG)
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                           ___lmul
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
                     ___wmul (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___awmod (ARG)
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awmod (ARG)
             _isSameAddress
               ___wmul (ARG)
                 ___awmod (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
                 ___lmul
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           ___wmul (ARG)
             ___awmod (ARG)
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
           ___lmul
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _DELAY_ms
               ___lmul
             _LCD_Erase
               _DELAY_ms
                 ___lmul
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___bmul
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awmod (ARG)
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___awmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               _Total_Connections
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
               _isSameAddress
                 ___wmul (ARG)
                   ___awmod (ARG)
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPIGet
                     _SPIPut
                   _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                         ___lmul
                       _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
               ___wmul
                 ___awmod (ARG)
             _Find_Index
               ___wmul
                 ___awmod (ARG)
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                     ___lmul
                   _LCD_Erase
                     _DELAY_ms
                       ___lmul
                     _LCDInitWrite
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _memset
                   _LCD_Update
                     _LCD_d_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                     _LCD_i_write
                       _DELAY_ms
                         ___lmul
                       _LCDWritePortA
                         _SPIPut
                       _LCDWritePortB
                         _SPIPut
                   _sprintf
                     ___bmul
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awmod (ARG)
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                           ___lmul
                         _MiWi_TickGet
                         _RegisterRead
                           _SPIGet
                             _SPIPut
                           _SPIPut
                         _RegisterSet
                           _SPIPut
                         _SetRFMode
                           _RegisterSet
                             _SPIPut
                         _WriteFIFO
                           _SPIPut
                     ___wmul (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awmod (ARG)
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
               ___awdiv
               ___awmod
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___awmod (ARG)
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               ___wmul (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awmod (ARG)
             _isSameAddress
               ___wmul (ARG)
                 ___awmod (ARG)
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                       ___lmul
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                 ___wmul (ARG)
                   ___awmod (ARG)
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
         _Source_END_DEVICE_INFO
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
       ___awmod
       ___wmul
         ___awmod (ARG)
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
       ___lmul
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i1_MiWi_TickGet
   i1_RegisterRead
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_SPIGet
     i1_SPIPut
   i1_TxPacket
     i1_DELAY_10us
       i1___lmul
     i1_MiWi_TickGet
     i1_RegisterRead
       i1_SPIGet
         i1_SPIPut
       i1_SPIPut
     i1_RegisterSet
       i1_SPIPut
     i1_SetRFMode
       i1_RegisterSet
         i1_SPIPut
     i1_WriteFIFO
       i1_SPIPut
   i1___bmul
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4E      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      37      13       68.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      49      15       91.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      37      17       68.8%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      1E      19       37.5%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     222      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               22      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     222      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 27 14:22:06 2016

                       _PUSH_BUTTON_press_time 01B2                                              _i 0064  
                               _LCD_Initialize 2F48                       ??_Source_END_DEVICE_INFO 00D2  
                          P2PTasks@final_index 013B                              _Process_RxMessage 2E4B  
                    __end_of_MiApp_UnicastStar 248E                           ?_MiMAC_DiscardPacket 0070  
                               ___bmul@product 00A2                                 ?_isSameAddress 00AD  
                                  __CFG_CP$OFF 0000                                  ?_LCDInitPortA 0070  
                                ?_LCDInitPortB 0070                                             _DE 207E  
                                           l87 082B                                             l88 0857  
                                 ___awdiv@sign 00A6                                             _t1 01BA  
                                           _t2 01BE                                  ?_LCDInitWrite 0070  
                                  ?_LCD_Update 0070                            ___wmul@multiplicand 00A9  
                          MiApp_ProtocolInit@i 00C4                          Find_InActiveDevices@i 00EE  
                             i1___wmul@product 0074                             ?_Process_RxMessage 0070  
                                  i1_WriteFIFO 1002                        MiApp_RemoveConnection@i 00ED  
                      MiApp_RemoveConnection@j 00E8                                   NVMRead@count 00A7  
                                   _MiMAC_Init 1802                                _P2PCapacityInfo 005C  
                                          l101 08EC                                            l138 2F47  
                                          l148 2701                                            l253 2A83  
                                          l263 240D                                            l520 0FFC  
                                          l451 0A79                                            l516 0FCE  
                                          l452 0FF4                                            l606 2A53  
                                          l368 24FF                                            l617 1A4F  
                                          l491 0DB5                                            l768 25A4  
                                          l962 233B                                            l980 366E  
                                          l898 1F39                                            l989 2C64  
                                 __CFG_CPD$OFF 0000                                   ___awmod@sign 00A6  
                              ??_AddConnection 00B9                                    LCDDisplay@i 00D6  
                                          wreg 0009                                   __CFG_FOSC$HS 0000  
                          ??_Process_RxMessage 0145                            __size_of_DELAY_10us 001B  
                        i1WriteFIFO@IRQ1select 0074                                  NVMInit@result 00A7  
            __end_of_MiApp_EstablishConnection 1A61                 __size_of_MiApp_StartConnection 0036  
                __end_of_MiApp_StartConnection 2A54                                   ?_LCD_d_write 0070  
                            _Total_Connections 248E                                           l1001 284E  
                                         l1201 13D8                                           l1222 1482  
                                         l1223 1483                                           l1119 2C0D  
                                         l1218 1480                                           l1315 17D7  
                                         l1404 36AD                                           l1253 1594  
                                         l1248 1572                                           l1089 35E5  
                                         l1257 15B6                                           l1195 13BB  
                                         l1293 16FF                                           l1277 1694  
                                         l1197 13BD                                           l1198 13BF  
                                         l1199 13C1                                           l5123 295E  
                                         l5203 2F35                                           l5301 08F0  
                                         l5127 2968                                           l6023 23D8  
                                         l6111 287E                                           l5303 08F1  
                                         l6121 289E                                           l5209 2BDD  
                                         l6201 2E17                                           l7001 07ED  
                                         l5243 0833                                           l5403 272A  
                                         l6203 2E23                                           l5501 36A7  
                                         l6117 2896                                           l5181 2EF4  
                                         l5237 0847                                           l5405 2747  
                                         l6213 2E3E                                           l6301 074F  
                                         l5319 2C55                                           l5263 086B  
                                         l6151 1ADB                                           l5097 35DD  
                                         l6065 24FB                                           l5193 2F1D  
                                         l5185 2F01                                           l5273 088A  
                                         l5265 087E                                           l5249 083C  
                                         l5361 26BC                                           l6401 22FC  
                                         l6217 2E46                                           l6209 2E35  
                                         l6241 2B62                                           l6233 2B5C  
                                         l6321 07CE                                           l5515 3598  
                                         l6059 2495                                           l6243 2B6E  
                                         l6251 2B83                                           l6307 078B  
                                         l7211 197F                                           l5701 14D6  
                                         l5621 13C2                                           l5613 13B6  
                                         l6069 2507                                           l5197 2F2B  
                                         l5189 2F0F                                           l5285 08A9  
                                         l5269 0883                                           l6173 1B9E  
                                         l6149 1AD0                                           l6157 1B39  
                                         l6229 2B55                                           l6309 078E  
                                         l6325 07D7                                           l6085 2D99  
                                         l7109 2A6A                                           l5519 359E  
                                         l5711 14FA                                           l5295 08E4  
                                         l5383 26DC                                           l6175 1BA9  
                                         l6351 27F4                                           l6415 232A  
                                         l6191 2E0F                                           l6255 2B8B  
                                         l6247 2B7A                                           l6087 2D5F  
                                         l7223 19E4                                           l7071 184F  
                                         l7303 2604                                           l5545 2A10  
                                         l5537 29F2                                           l5561 28D1  
                                         l5801 1630                                           l5705 14E3  
                                         l5633 13EB                                           l5641 141A  
                                         l5625 13C6                                           l6601 1133  
                                         l5393 2704                                           l6433 2DEB  
                                         l6353 2753                                           l6409 231A  
                                         l6185 2E04                                           l6505 05B1  
                                         l6521 04E8                                           l6273 06B7  
                                         l6265 0639                                           l6089 2D9F  
                                         l7145 2838                                           l7065 184A  
                                         l7305 2606                                           l5539 29FE  
                                         l5563 28DD                                           l5571 28F2  
                                         l5803 1633                                           l5715 1505  
                                         l5723 1513                                           l5299 0825  
                                         l5395 2729                                           l6435 2DF2  
                                         l6355 27F9                                           l6099 2D07  
                                         l6523 0600                                           l6291 06D9  
                                         l6275 06C4                                           l7059 1828  
                                         l7331 2E9A                                           l5485 368E  
                                         l5549 2A19                                           l5901 173F  
                                         l5821 1683                                           l5741 1566  
                                         l5709 14EF                                           l5725 153A  
                                         l5629 13DE                                           l6285 06D3  
                                         l7237 19FB                                           l7077 186A  
                                         l5567 28E9                                           l5495 3561  
                                         l5903 1764                                           l5823 1686  
                                         l5815 1664                                           l5719 150E  
                                         l5663 1458                                           l5671 147D  
                                         l6607 1179                                           l5583 2BA7  
                                         l6535 0622                                           l6527 0609  
                                         l6519 05FB                                           l6463 047A  
                                         l6279 06CD                                           l6375 26A0  
                                         l6711 0B07                                           l7271 1A59  
                                         l7415 11BD                                           l7511 2A47  
                                         l7327 2E93                                           l5913 1797  
                                         l5817 1667                                           l5809 1646  
                                         l5737 155B                                           l5673 1485  
                                         l5649 1432                                           l6561 107D  
                                         l6457 042F                                           l6369 2612  
                                         l6801 0C1F                                           l7265 1A43  
                                         l7257 1A2B                                           l7169 2876  
                                         l7441 11FB                                           l7409 11A4  
                                         l7505 2A21                                           l7193 2442  
                                         l7601 1E11                                           l5923 17C0  
                                         l5835 1698                                           l5851 16C5  
                                         l5683 14A7                                           l6539 047B  
                                         l6379 26A9                                           l6731 0B20  
                                         l6707 0AC6                                           l6715 0B10  
                                         l6651 09F0                                           l6643 09A7  
                                         l7435 11E2                                           l7195 248C  
                                         l5909 1786                                           l5845 16B5  
                                         l5781 15E7                                           l5693 14B8  
                                         l5685 14A9                                           l5669 1459  
                                         l5933 1392                                           l6573 108B  
                                         l6557 1076                                           l6565 1086  
                                         l6549 1020                                           l5589 2BB9  
                                         l6813 0C4F                                           l6661 0A4C  
                                         l6645 09DA                                           l6637 0961  
                                         l7269 19A5                                           l7453 1208  
                                         l7189 2488                                           l7613 1E68  
                                         l5951 2D1D                                           l5927 17E4  
                                         l5919 17B4                                           l5863 16DF  
                                         l5695 14C3                                           l5679 149A  
                                         l5935 17FA                                           l7527 3786  
                                         l6639 0994                                           l7463 129C  
                                         l7551 1C38                                           l7543 1C2E  
                                         l5785 15F4                                           l5689 14AC  
                                         l6593 10E1                                           l6921 0F18  
                                         l6905 0ED1                                           l6825 0C63  
                                         l6809 0C37                                           l6657 0A37  
                                         l7297 25BF                                           l7609 1E5D  
                                         l5947 2D13                                           l5859 16DA  
                                         l5795 1612                                           l5779 15D8  
                                         l6587 109E                                           l6579 1092  
                                         l6931 0F25                                           l6923 0F1C  
                                         l6915 0F06                                           l6907 0ED5  
                                         l6835 0D38                                           l6675 0A6F  
                                         l7651 1F2F                                           l5957 2D30  
                                         l5885 171C                                           l5869 16F3  
                                         l5789 1600                                           l5981 23A6  
                                         l6861 0DA3                                           l6693 0AA6  
                                         l6685 0A92                                           l7477 1322  
                                         l7645 1F1E                                           l7637 1ECD  
                                         l7565 1CA0                                           l5895 1739  
                                         l5879 170D           __size_of_Forward_Packet_PANCr_to_EDy 0070  
                                         l6943 0FC6                                           l6919 0F14  
                                         l6863 0DB1                                           l6847 0D56  
                                         l6839 0D41                                           l6783 0BEE  
                                         l6759 0B63                                           l6767 0B7B  
                                         l6951 0FF5                                           l7479 135E  
                                         l7663 1F6F                                           l7559 1C84  
                                         l7671 1F78                                           l5969 2D47  
                                         l6945 0FCA                                           l6849 0D6B  
                                         l6697 0AAF                                           l6777 0BE1  
                                         l7665 1F75                                           l7649 1F29  
                                         l7657 1F53                                           l7577 1D0A  
                                         l6939 0FBE                                           l6883 0E95  
                                         l6867 0DB8                                           l6787 0BFD  
                                         l6779 0BE5                                           l7931 234E  
                                         l7683 1FD3                                           l7667 1DE9  
                                         l8379 3633                                           l6877 0DCB  
                                         l6869 0DBC                                           l6949 0FCF  
                                         l7669 1CA8                                           l7917 2FFE  
                                         l6895 0EAD                                           l6887 0E9E  
                                         l6975 2EA5                                           l7943 2371  
                                         l7679 1F87                                           l6897 0EB1  
                                         l6889 0EA2                                           l7697 1C16  
                                         l7947 2385                                           STR_1 219D  
                                         STR_2 215E                                           STR_3 217E  
                                         STR_4 22A0                                           STR_5 228F  
                                         STR_6 21E9                                           STR_7 21BA  
                                         STR_8 21D3                                           STR_9 21D3  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATD 010F  
                       __size_of_ButtonPressed 0080                                           u5210 2B98  
                                         u5115 29FF                                           u5035 36AE  
                                         u5220 2B99                                           u5125 2A09  
                                         u5045 36B3                                           u5230 2BA5  
                                         u5135 2A11                                           u6105 2D6F  
                                         u5250 2BB7                                           u5165 28D4  
                                         u5095 29F5                                           u4705 2970  
                                         u5185 28E3                                           u6305 2E24  
                                         u6065 2D75                                           u5195 28EA  
                                         u5515 15AF                                           u6315 2E2E  
                                         u5365 1493                                           u6325 2E36  
                                         u6405 2B74                                           u6085 2D87  
                                         u4910 26BA                                           u5615 1623  
                                         u5375 14A0                                           u6415 2B7B  
                                         u7080 0A6D                                           u5545 15D1  
                                         u8025 1381                      DemoOutput_Channel@channel 00D9  
                                         u5485 158D                                           u8045 2935  
                                         u6285 2E1A                                           u8205 1D5A  
                                         i1l87 1897                                           u4695 2969  
                                         u5655 165C                                           u8215 1D7B  
                                         u8135 1CBE                                           i1l88 18BF  
                                         u5665 1676                                           u6385 2B65  
                                         u6465 0679                                           u8305 1E93  
                                         u8225 1D93                                           u8145 1CD6  
                                         u8315 1EAD                                           u8235 1DAA  
                                         u8155 1CED                                           u6645 2626  
                                         u8245 1DC2                                           u8165 1D05  
                                         u5855 17E2                                           u6655 263F  
                                         u8175 1D13                                           u6665 2659  
                                         u8185 1D2B                                           u6835 04FE  
                                         u6675 2676                                           u8195 1D42  
                                         u6685 2694                                           u8365 1F6A  
                                         u8295 1E7A                                           u6795 0429  
                                 ?_LCD_i_write 0070                      freezer_feature@switch_val 00E7  
                                         _MiWi 2000                             ?_Total_Connections 0070  
                    MiApp_StartConnection@Mode 00B0                         MiApp_UnicastStar@SecEn 0156  
                   MiMAC_SetChannel@offsetFreq 00A8                                           _main 361D  
                              __end_of_NVMInit 2588                                __end_of_NVMRead 2A8C  
                         i1RegisterSet@setting 0073                                           _role 016F  
                                         fsr0h 0005                                           fsr1h 0007  
                                         fsr0l 0004                                           indf0 0000  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                             __size_of_LCD_Erase 0019  
       __end_of_MiApp_BroadcastConnectionTable 0633        __size_of_MiApp_BroadcastConnectionTable 0224  
               _MiApp_BroadcastConnectionTable 040F                                           ltemp 007E  
                                         start 0398                         __size_of_run_star_demo 03FF  
                                         ttemp 007E                                           wtemp 007E  
                                __CFG_IESO$OFF 0000                               __end_of_DELAY_ms 2C6F  
                                 _sprintf$2453 00C0                                   _sprintf$2446 00BC  
                                 _sprintf$2447 00BE                            ??_Total_Connections 00AD  
                       __end_of_LCD_Initialize 2F9F                              ___bmul@multiplier 00A3  
                    __end_of_Process_RxMessage 2E9D                                  __CFG_MCLRE$ON 0000  
                               _InitConfigRegs 20C0                                   high_isr@bAck 0052  
                        ??_MiMAC_DiscardPacket 00AD                                 NVMRead@oldRFIE 00AA  
                               ??_LCDInitPortA 00A3                                 ??_LCDInitPortB 00A3  
                               ??_LCDInitWrite 00A5                               __end_of_P2PTasks 1000  
                 __end_of_MiApp_DiscardMessage 34FE                                ??i1_RegisterSet 0075  
                             _send_link_status 28A0                                     _Find_Index 2751  
                                        ?_main 0070                                __end_of___awdiv 2E4B  
                                        STR_10 227E                                          STR_11 2214  
                                        STR_12 2228                  MiApp_EstablishConnection@Mode 0145  
                                        STR_13 21FF                                          STR_14 226D  
                                        STR_15 225C                                          STR_16 223A  
                                        STR_17 224B                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 2B90                                ___awdiv@divisor 00A0  
                                        _T1CON 0018                                    LCD_Update@i 00B4  
                              __end_of___lwdiv 2A1E                                          i1l101 1955  
                                        i1l202 0192                                          i1l216 035A  
                                        i1l138 2CBB                                          i1l193 00A0  
                              __end_of___lwmod 28F7                                          i1l196 0147  
                                        i1l980 3638                                ___awdiv@counter 00A5  
                     __size_of_InitSymbolTimer 000B                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                  ?i1_DELAY_10us 0020  
                             __end_ofi1_SPIGet 3504                               SendPacket@tParam 00DF  
                                P2PTasks@tick2 0137                                  P2PTasks@tick3 013C  
                             __end_ofi1_SPIPut 3595                            ___lmul@multiplicand 00A4  
                                _LCDWritePortA 36DC                                  _LCDWritePortB 36FA  
                       ?_DemoOutput_UpdateTxRx 00D4                              high_isr@BankIndex 0056  
                               __CFG_FCMEN$OFF 0000                      __end_of_Total_Connections 2509  
                                        _RxNum 005F                         run_star_demo@select_ed 016B  
                                        _TxNum 0060                            __size_of_LCDDisplay 0034  
                __size_of_MiApp_ConnectionMode 002F                           freezer_feature@tick1 00DF  
                         freezer_feature@tick2 00E3                                __end_of_dpowers 2156  
                          __size_of_LCDInitSPI 0006                               SendPacket@status 00DD  
                   store_connection_tb@payload 00A4                  __size_of_MiApp_UnicastAddress 000E  
                                  _SW_Ack_SrED 3755                                __end_of_isdigit 3563  
                                        _tick1 01C2                                          _tick4 01C6  
                             __end_of_NVMWrite 2416                               __end_ofi1___bmul 3583  
                             __end_ofi1___lmul 2926                               __end_of_NVMalloc 0800  
                             __end_ofi1___wmul 366D                                          ltemp0 007E  
                                        ltemp1 0082                                          ltemp2 0086  
                                        ltemp3 0080                                 ButtonPressed@t 00B7  
                          __size_of_LCD_Update 004E                                          ttemp0 007E  
                                        ttemp1 0081                                          ttemp2 0084  
                                        ttemp3 0087                                          ttemp4 007F  
                      ?_MiApp_RemoveConnection 0070                                          status 0003  
                          i1___wmul@multiplier 0070                                          wtemp0 007E  
                                        wtemp1 0080                                          wtemp2 0082  
                                        wtemp3 0084                                          wtemp4 0086  
                                        wtemp5 0088                                          wtemp6 007F  
                              __end_of_sprintf 1800                         run_star_demo@update_ed 0168  
                       __end_of_InitConfigRegs 2100                                    ?i1_TxPacket 007C  
                    __size_of_MiMAC_SetChannel 0054                           __size_of_EEPROM_Read 0026  
                      MiApp_UnicastStar@status 014D                    __end_of_DemoOutput_Greeting 3530  
                              ?_LCD_Initialize 0070                                   __end_of_MiWi 207E  
                              __initialization 039A                                ??_isSameAddress 00B1  
                    __size_of_MiMAC_SendPacket 00A5           STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 00A0  
                             __end_of_MacroNop 0004                                   __end_of_main 3637  
                      handle_lost_connection@i 00A3                            i1___lmul@multiplier 0070  
                   __size_of_MiApp_UnicastStar 0078                __size_of_Source_END_DEVICE_INFO 0043  
                               TxPacket@status 00C8                                  _ButtonPressed 2588  
       MiApp_UnicastConnection@ConnectionIndex 00EF                       i1RegisterRead@IRQ1select 0076  
                                ??_RegisterSet 00A5                              high_isr@PacketLen 0055  
                                       ??_main 016C                                    ?_MiMAC_Init 00B2  
                      _DemoOutput_ChannelError 0800                                   NVMWrite@addr 00AF  
                            __end_of_LCD_Erase 3603                                 ??i1_DELAY_10us 007C  
                                _run_star_demo 1C01                           __end_of_MiWi_TickGet 2C23  
                                _IRQ1_Received 005A                               ??i1_RegisterRead 0073  
                               ?_LCDWritePortA 0070                                 ?_LCDWritePortB 0070  
                      MiApp_SetChannel@channel 00BA                           store_connection_tb@i 00AC  
                         store_connection_tb@j 00AB                               __end_of_TxPacket 08F3  
                 __size_of_store_connection_tb 00A4                               __end_of_Run_Demo 34F7  
            MiApp_ProtocolInit@bNetworkFreezer 00C1                           _MiMAC_ReceivedPacket 0633  
                                   _SendPacket 2B90                                      ??_NVMInit 00A6  
                                    ??_NVMRead 00A9                               ___awdiv@dividend 00A2  
                                       _ANSELA 018C                       ?_MiApp_UnicastConnection 00E7  
                               P2PTasks@p_1091 0141                 __end_of_MiApp_RemoveConnection 1C01  
                                       i1l1119 2AB4                                         i1l1404 365A  
                                       _MACSeq 01CC                                         i1l1089 3590  
                                       i1l7037 358B                                         i1l8013 1916  
                                       i1l8023 1891                                         i1l8031 3654  
                                       i1l8103 0060                                         i1l8025 1959  
                                       i1l8009 1910                                         i1l8121 0081  
                                       i1l8113 006F                                         i1l8105 0061  
                                       i1l8019 194D                                         i1l8211 0279  
                                       i1l8045 3574                                         i1l8205 0264  
                                       i1l8223 02D8                                         i1l8049 357A  
                                       i1l8233 02F9                                         i1l8217 027E  
                                       i1l8161 00FB                                         i1l8153 00F2  
                                       i1l8241 0376                                         i1l8243 037B  
                                       i1l8091 0036                                         i1l8229 02F0  
                                       i1l8157 00F5                                         i1l7391 28FF  
                                       i1l8191 022D                                         i1l8175 01ED  
                                       i1l8239 0089                                         i1l8247 037E  
                                       i1l8257 0391                                         i1l8185 0218  
                                       i1l8177 01F2                                         i1l7395 2909  
                                       i1l8099 0059                                         i1l7807 2A90  
                                       i1l7781 2CA1                                         i1l7773 2C89  
                                       i1l7765 2C71                                         i1l7777 2C95  
                                       i1l7769 2C7D                                         i1l7787 2CAA  
                                       i1l7963 18AF                                         i1l7993 18EA  
                                       i1l7969 189D                                         i1l7987 18D2  
                                       i1l7997 18F1                                         i1l7989 18E5  
                                       _OSCCON 0099                                         _PVALUE 2100  
                                       u866_25 365B                                         u867_25 3660  
                                       u788_25 290A                                         u789_25 2911  
                                       _SVALUE 2120                                         _SPIGet 3504  
                                       _SPIPut 35D3                MiApp_StartConnection@ChannelMap 00AC  
                         __size_of_LCDTRXCount 0030                  __size_of_UserInterruptHandler 0001  
                                 ??_DELAY_10us 00B0                        ?_DemoOutput_UnicastFail 0070  
                               __CFG_PWRTE$OFF 0000                                  LCDInitWrite@v 00A5  
                                   TxPacket@t1 00BD                                     TxPacket@t2 00C1  
                           __size_of_SetRFMode 0057                                 P2PTasks@status 0142  
                                       _TxData 016E                     __size_of_Process_RxMessage 0052  
                             __end_of_high_isr 0398                                         ___bmul 3595  
                                       ___lmul 2955                                         ___wmul 36A4  
                      ??_MiApp_BroadcastPacket 00E2                                      ??___awdiv 00A4  
                               ?_ButtonPressed 0070                                      ??___awmod 00A4  
                                       _hasAck 0063                       __size_of_freezer_feature 0061  
                    __size_of_MiApp_SetChannel 0027                                      ??___lwdiv 00A4  
                                    ??___lwmod 00AC                                         _fix_me 01D6  
                                       _memset 3688                                    ?_Find_Index 00AD  
                             ___awdiv@quotient 00A7                                         _nvmEdc 01DD  
                              ___awmod@divisor 00A0                                ___awmod@counter 00A5  
                                 NVMalloc@size 00A0                                 ?_run_star_demo 0070  
                            high_isr@ackPacket 004E                                      ??_isdigit 00A0  
                                 ?i1_SetRFMode 0070                                 LCDDisplay@text 00D0  
                          __size_ofi1_TxPacket 00D2                          ?_MiMAC_ReceivedPacket 0070  
                  __size_of_DemoOutput_Channel 0020                     __size_of_Total_Connections 007B  
                  ??_MiApp_EstablishConnection 0146                                      ?_DELAY_ms 00AC  
                                 LCD_d_write@v 00B2                             __end_of_DELAY_10us 3688  
                                   _TxSynCount 0061                            __end_of_RegisterSet 361D  
                                ?_RegisterRead 0070                                      ??_sprintf 00B8  
                       _Source_END_DEVICE_INFO 2B07                              _ReceivedBankIndex 005E  
                            ??_InitSymbolTimer 00A0                           __end_of_LCDInitPortA 36DC  
                         __end_of_LCDInitPortB 081D                           __end_of_LCDInitWrite 3736  
                            _SYSTEM_Initialize 2AC7                                      ?_P2PTasks 0070  
                         _MiApp_DiscardMessage 34FA                            _PUSH_BUTTON_pressed 005D  
                         __size_of_LCD_d_write 0024                             __size_of_WriteFIFO 0016  
                      __end_of__initialization 040B                  __size_of_Find_InActiveDevices 0052  
               __end_of_DemoOutput_UnicastFail 353B                                      P2PTasks@i 0143  
                         __size_of_LCD_i_write 0025                                      P2PTasks@p 0140  
                                 LCD_i_write@v 00B2                MiMAC_ReceivedPacket@currentTick 00B7  
                           ?_SYSTEM_Initialize 0070                            __size_of_MiMAC_Init 0087  
                               _chk_sel_status 01D4                               _LatestConnection 005B  
MiApp_BroadcastConnectionTable@broadcast_count 00EB                            ___bmul@multiplicand 00A0  
                                 ??_LCDDisplay 00D4                                NVMWrite@oldRFIE 00B7  
                                 ??_LCDInitSPI 00A0                     _myConnectionIndex_in_PanCo 006C  
                                    ?i1_SPIGet 0070                              high_isr@fifo_stat 004D  
                               __pcstackCOMMON 0070                                      ?i1_SPIPut 0070  
        Forward_Packet_PANCr_to_EDy@fw_payload 0120                        __size_ofi1_MiWi_TickGet 003B  
                                 __pidataBANK0 34F7                                   __pidataBANK3 350A  
                          ??_SYSTEM_Initialize 00B2                       __size_of_Initialize_Demo 0072  
                    ??_DemoOutput_ChannelError 00A0                                   ??_LCD_Update 00B3  
                                 ?i1_WriteFIFO 0070                                     __end_of_DE 20C0  
                                    ?_NVMWrite 00AD                                      ?i1___bmul 0070  
                      run_star_demo@switch_val 016A                   ?_Forward_Packet_PANCr_to_EDy 0120  
                                    ?i1___lmul 0070                                      ?_NVMalloc 00A0  
                              ??_LCDWritePortA 00A3                                ??_LCDWritePortB 00A3  
                                    ?i1___wmul 0070                                TxPacket@rssival 00CB  
                              _ConnectionTable 2364                __end_of_MiApp_UnicastConnection 2D09  
                            __end_of_SetRFMode 2F48                                     ??_DELAY_ms 00AE  
                    _END_DEVICES_Short_Address 02A0                                 ??_RegisterRead 00A3  
                         i1TxPacket@CCARetries 003A                                    ?_SendPacket 00D6  
                             i1___bmul@product 0073                             __end_of_LCDDisplay 29E9  
                    __end_of_SYSTEM_Initialize 2B07                                   sprintf@width 00CA  
                           __end_of_LCDInitSPI 2806                          isSameAddress@Address1 00AD  
                        isSameAddress@Address2 00AF                                      ?_MacroNop 0070  
                                   __pbssBANK0 0058                                     __pbssBANK2 016E  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                                   __pbssBANK5 02A0                                     __pbssBANK6 0320  
                                   __pbssBANK7 03A0                          ?_MiApp_DiscardMessage 0070  
                     __end_of_send_link_status 28CA                                     ??_P2PTasks 012A  
                  __size_of_MiApp_ProtocolInit 01EF                                  NVMWrite@count 00B1  
                          __size_of_Find_Index 00AF                                        ?_SPIGet 0070  
                                      ?_SPIPut 0070                             RegisterSet@setting 00A3  
                           __end_of_LCD_Update 2D57                      SendPacket@SecurityEnabled 00D9  
                               isSameAddress@i 00B5                     MiApp_BroadcastPacket@SecEn 00E3  
                              P2PTasks@FW_Stat 0136                           __end_ofi1_DELAY_10us 3652  
                             _MiMAC_SetChannel 2E9D                      _MiApp_EstablishConnection 195B  
                              ??_ButtonPressed 00AB                                     __pmaintext 361D  
                                   ??i1_SPIGet 0073                                      ?_TxPacket 00B4  
                                   ??i1_SPIPut 0070                               _MiMAC_SendPacket 26AC  
                                      ?___bmul 00A0                                        ?___lmul 00A0  
                                    ?_Run_Demo 0070                                        ?___wmul 00A7  
                                   __pintentry 0004                          __size_of_MiWi_TickGet 004A  
                                      ?_memset 00A0                                ??_run_star_demo 015A  
                               ___lmul@product 00A8                                        SPIPut@i 00A1  
                                      SPIPut@v 00A2                                     ??_NVMWrite 00B3  
                                   ??i1___bmul 0071               run_star_demo@sw_layer_ack_status 0167  
                                   ??i1___lmul 0078                                     ??_NVMalloc 00A4  
                            __end_of_WriteFIFO 35D3                        ??_DemoOutput_UpdateTxRx 00D5  
                                   ??i1___wmul 0074                                    _RegisterSet 3603  
                            ??_freezer_feature 00D7                  ??_Forward_Packet_PANCr_to_EDy 0125  
                       ??_MiMAC_ReceivedPacket 00AD                                        _LCDText 02C8  
                        __end_of_AddConnection 119D                                        _SSP1BUF 0211  
                                 ?_SW_Ack_SrED 00E2                                        _NVMInit 2509  
                                      _NVMRead 2A54                                        _RF_Mode 01CF  
                                      _AckInfo 03A0                                      ?_high_isr 0070  
                                      _RSSIVal 01D1                                     ??_MacroNop 00A0  
           __size_of_STAR_DEMO_OPTIONS_MESSAGE 0003                          _MiApp_StartConnection 2A1E  
                             ??_LCD_Initialize 00B2                     ?_STAR_DEMO_OPTIONS_MESSAGE 0070  
                  AddConnection@connectionSlot 00C7                                _timerExtension1 0066  
                              _timerExtension2 0067                                    TxPacket@CCA 00B4  
                     MiApp_ConnectionMode@Mode 00BB                                __size_of_SPIGet 0006  
                             _AdditionalNodeID 006D                                __size_of_SPIPut 0017  
                  __end_of_MiMAC_DiscardPacket 282B                                P2PTasks@tmpTick 0132  
                                 ??i1_TxPacket 0028                                     DELAY_ms@ms 00AC  
                                 _MiWi_TickGet 2BD9                            _store_connection_tb 2608  
                 __end_of_MiApp_ConnectionMode 2955                                     ??_TxPacket 00B5  
                 __end_of_MiApp_UnicastAddress 3554                                     ??_Run_Demo 00F0  
                              __size_of___bmul 0012                                        ___awdiv 2DF9  
                              __size_of___lmul 0030                                        ___awmod 2B4A  
                              __size_of___wmul 001C                               _MiApp_SetChannel 2851  
                          __size_of_SendPacket 0049                                        ___lwdiv 29E9  
                                      ___lwmod 28CA                       ??_handle_lost_connection 00A0  
                              __size_of_memset 001C                 DemoOutput_ChannelError@channel 0070  
                                      __ptext1 2F9F                                   ??_MiMAC_Init 00B4  
                                      __ptext2 2AC7                                        __ptext3 2F48  
                                      __ptext4 2800                                        __ptext5 0801  
                                      __ptext6 36C0                                        __ptext7 34F4  
                                      __ptext8 1C01                                        __ptext9 2E4B  
                        __end_ofi1_RegisterSet 35BD                              __end_of_hexpowers 215E  
                                    _T1CONbits 0018                                        _dpowers 214C  
                Initialize_Demo@freezer_enable 015B                       ??_MiApp_MessageAvailable 0144  
                                      _rec_ack 0065                                        _isdigit 3554  
                        i1TxPacket@TxPacketLen 0030                              ??_Initialize_Demo 015A  
                                _myLongAddress 01E7                               ___awmod@dividend 00A2  
                        __size_of_LCDInitPortA 001C                          __size_of_LCDInitPortB 001C  
                         ?_store_connection_tb 00A4                         DemoOutput_Channel@Step 00D7  
                                    _IOCBFbits 0396                          __size_of_LCDInitWrite 001E  
                          i1___bmul@multiplier 0072                         i1MiWi_TickGet@IntFlag1 0076  
                       i1MiWi_TickGet@IntFlag2 0075                                        _nvmRole 01E3  
                                    _IOCBNbits 0395                         RegisterRead@IRQ1select 00A5  
                         LCDWritePortA@preRFIE 00A4                             __end_ofi1_TxPacket 195B  
                                    _P2PStatus 007D                                      _LCD_Erase 35EA  
                         __size_ofi1_SetRFMode 004D                        _NumOfActiveScanResponse 01CE  
                                  _MyindexinPC 01CD                           LCDWritePortB@preRFIE 00A4  
                             i1TxPacket@status 0031                     __size_of_SYSTEM_Initialize 0040  
                                      _sprintf 138C                                        clrloop0 22B2  
                       ??_MiApp_DiscardMessage 00B1                                     ??_high_isr 003F  
                         end_of_initialization 040B                   MiApp_RemoveConnection@j_1240 00EA  
                                    i1SPIPut@i 0071                              __end_of_octpowers 214C  
                                    i1SPIPut@v 0072                                  ??_EEPROM_Read 00A5  
                                      memset@c 00A0                                        memset@n 00A2  
                                      memset@p 00A6                  MiMAC_SendPacket@MACPayloadLen 00D0  
                              LCDDisplay@delay 00D3              i1DELAY_10us@tenMicroSecondCounter 0020  
              DELAY_10us@tenMicroSecondCounter 00AC                                     _nvmMyPANID 01DF  
            __end_of_STAR_DEMO_OPTIONS_MESSAGE 34F4                                LCDDisplay@value 00D2  
                           __end_of_MiMAC_Init 1889                   MiApp_UnicastConnection@SecEn 00E7  
                               i1_MiWi_TickGet 2A8C               __size_of_MiApp_UnicastConnection 004D  
                      MiMAC_SetChannel@channel 00AA                                    _TxSynCount2 01D3  
                         __end_of_RegisterRead 37B7                          __end_of_isSameAddress 28A0  
                                 __pstringtext 2000           DELAY_ms@cyclesRequiredForEntireDelay 00AE  
                          RegisterRead@address 00A6                          i1___wmul@multiplicand 0072  
               __size_of_MiApp_BroadcastPacket 000F                                   _LCDInitPortA 36C0  
                                 _LCDInitPortB 0801                                  WriteFIFO@Data 00A3  
                                 ??_Find_Index 00AF                     run_star_demo@PressedButton 0169  
                __end_of_MiApp_BroadcastPacket 3572                                   _LCDInitWrite 3718  
                 __size_of_DemoOutput_Greeting 000B                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                _InitSymbolTimer 353B  
                             NVMalloc@location 00A2                   __end_of_UserInterruptHandler 1002  
                         __size_ofi1_WriteFIFO 0013                          ??_store_connection_tb 00A6  
                                   _nvmmyIndex 01E5                        ?_Source_END_DEVICE_INFO 00D0  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                                      _TRISDbits 008F  
                                    _TRISEbits 0090                                      _TRISFbits 030C  
                                   ?_LCD_Erase 0070                           MiWi_TickGet@IntFlag1 00A6  
                         MiWi_TickGet@IntFlag2 00A5                        MiMAC_SendPacket@TxIndex 00D4  
                                  NVMRead@addr 00A5                                    NVMRead@dest 00A3  
                       ?_MiApp_StartConnection 00AB                              __size_of_DELAY_ms 004C  
                                ??_LCDTRXCount 00D1                          __size_ofi1_DELAY_10us 001B  
                   MiMAC_SendPacket@transParam 00CC                      MiApp_UnicastAddress@SecEn 00E5  
                           __end_of_Find_Index 2800                                 __end_of_PVALUE 2120  
                            __size_of_P2PTasks 070D                                 __end_of_SVALUE 2140  
                               __end_of_SPIGet 350A                         __end_ofi1_MiWi_TickGet 2AC7  
                               __end_of_SPIPut 35EA                            __end_of_EEPROM_Read 2851  
                               __end_of___bmul 35A7                              __size_ofi1_SPIGet 0006  
                               __end_of___lmul 2985                              __size_ofi1_SPIPut 0012  
                               __end_of___wmul 36C0                __size_of_handle_lost_connection 0050  
                 __end_of_Find_InActiveDevices 2DF9             __size_of_MiApp_EstablishConnection 0106  
                               __end_of_memset 36A4                     __end_of_DemoOutput_Channel 3794  
               __end_of_Source_END_DEVICE_INFO 2B4A                              __size_of_NVMWrite 0077  
                            __size_ofi1___bmul 0011                __size_of_MiApp_MessageAvailable 0009  
                        i1___lmul@multiplicand 0074               MiMAC_ReceivedPacket@PayloadIndex 00BB  
                            __size_ofi1___lmul 002F                       __end_of_MiMAC_SetChannel 2EF1  
                            __size_of_NVMalloc 0027                            start_initialization 039A  
                                 i1_DELAY_10us 3637                              __size_ofi1___wmul 001B  
                                TxPacket@reTry 00C6                            WriteFIFO@IRQ1select 00A4  
                     __end_of_MiMAC_SendPacket 2751                                   ??_SendPacket 00DA  
                         _MiApp_ConnectionMode 2926                             TxPacket@CCARetries 00C5  
                              high_isr@counter 004B                                  ??_LCD_d_write 00B2  
                         _MiApp_UnicastAddress 3546                                      _SetRFMode 2EF1  
                                ??_LCD_i_write 00B2                           __size_of_SW_Ack_SrED 001F  
                            ?_send_link_status 0070                        __size_ofi1_RegisterRead 001F  
            Forward_Packet_PANCr_to_EDy@status 0128                              __size_of_MacroNop 0002  
                                     ??_SPIGet 00A3                                       ??_SPIPut 00A0  
                           ??_send_link_status 00E2                                 _currentChannel 006B  
                              ?i1_MiWi_TickGet 0070                                      TxPacket@i 00CA  
                          __end_of_LCDTRXCount 29B5    MiApp_EstablishConnection@connectionInterval 0154  
                              _freezer_feature 2F9F                                       ??___bmul 00A1  
                      __end_of_InitSymbolTimer 3546                                       ??___lmul 00A8  
                                     ??___wmul 00AB              MiApp_UnicastAddress@PermanentAddr 00E4  
                                  __pdataBANK0 006D                                    __pdataBANK3 01E7  
                            __size_of_TxPacket 00D6                             __end_of_SendPacket 2BD9  
                                     ??_memset 00A4                              __size_of_Run_Demo 0003  
                                 ?_RegisterSet 00A3                              RegisterRead@value 00A4  
               __size_of_DemoOutput_UpdateTxRx 000A                                    __pbssBIGRAM 22F2  
                        __end_of_LCDWritePortA 36FA                        MiWi_TickGet@currentTime 00A7  
                        __end_of_LCDWritePortB 3718                  __end_of_DemoOutput_UpdateTxRx 3525  
                              i1WriteFIFO@Data 0073                                    __pbssCOMMON 007D  
                     ??_MiApp_RemoveConnection 00E2                                      ___latbits 0003  
                                    _WriteFIFO 35BD                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                        ?_MiApp_ConnectionMode 0070                            SendPacket@Broadcast 00DE  
                                  ??_LCD_Erase 00B2         MiApp_UnicastAddress@DestinationAddress 00E2  
                        ?_MiApp_UnicastAddress 00E2                                   _isdigit$2639 00A0  
                                     ?_NVMInit 0070                     __end_of_MiApp_ProtocolInit 138C  
                                     ?_NVMRead 00A3                                 NVMWrite@source 00AD  
                   MiApp_EstablishConnection@i 0159                       __end_of_MiApp_SetChannel 2878  
                             i1___lmul@product 0078                                     ?_SetRFMode 0070  
                       _handle_lost_connection 2D57                                    MiMAC_Init@i 00B8  
                    i1MiWi_TickGet@currentTime 0077                              __size_of_high_isr 0394  
                                  sprintf@flag 00CD                    ??_STAR_DEMO_OPTIONS_MESSAGE 00A0  
                                  _EEPROM_Read 282B                                    sprintf@prec 00C9  
                          __end_of_LCD_d_write 37DB                          __size_of_RegisterRead 0023  
                       _MiApp_MessageAvailable 3512                           _UserInterruptHandler 1001  
                          __end_of_LCD_i_write 3800                              MiMAC_SendPacket@i 00D5  
                             ___lwdiv@dividend 00A2                        _MiApp_UnicastConnection 2CBC  
                     ?_DemoOutput_ChannelError 0070                                _Initialize_Demo 232D  
                        __end_of_ButtonPressed 2608                                       ?___awdiv 00A0  
                                     ?___awmod 00A0                                       ?___lwdiv 00A0  
                                     ?___lwmod 00A8                                      _end_nodes 0062  
     store_connection_tb@connections_perpacket 00AA                                      _conn_size 006A  
                        __end_of_run_star_demo 2000                   Forward_Packet_PANCr_to_EDy@i 0129  
                                     ?_isdigit 0070                                     ?_WriteFIFO 0070  
                __size_of_MiMAC_ReceivedPacket 01A6                                      _myChannel 006E  
                                     _DELAY_ms 2C23                            AddConnection@status 00C6  
                                    _hexpowers 2156                       ??_DemoOutput_UnicastFail 00D7  
                             ___lwdiv@quotient 00A5                                       ?_sprintf 00AE  
                          NVMWrite@PageCounter 00B8                                   _RegisterRead 3794  
                                    _link_stat 0220                                    _LCDTRXCount 2985  
                                     _P2PTasks 08F3                                i1TxPacket@reTry 003B  
                          _DemoOutput_Greeting 3525                           _Find_InActiveDevices 2DA7  
                      __end_of_freezer_feature 3000                                 ___wmul@product 00AB  
                                     _LATAbits 010C                                       _LATCbits 010E  
                                     _LATDbits 010F                                       _LATEbits 0110  
                                     _LATFbits 038C                          ?_UserInterruptHandler 0070  
                                    clear_ram0 22B1                                      _octpowers 2140  
                                     _PIE1bits 0091                     DemoOutput_UpdateTxRx@RxNum 00D4  
                        i1___bmul@multiplicand 0070                     DemoOutput_UpdateTxRx@TxNum 00D6  
                                     _PIR1bits 0011                                      _rxMessage 01A0  
                           _nvmConnectionTable 0068                                       i1_SPIGet 34FE  
                                     i1_SPIPut 3583                            high_isr@RxPacketPtr 0053  
                             ?_InitSymbolTimer 0070                                       _SSP1CON1 0215  
                       __size_of_AddConnection 0188            MiApp_BroadcastConnectionTable@count 00EA  
                                     _SSP1STAT 0214                   __size_of_MiMAC_DiscardPacket 0025  
     MiApp_EstablishConnection@ActiveScanIndex 0070              MiApp_StartConnection@ScanDuration 00AB  
          __end_of_Forward_Packet_PANCr_to_EDy 232D                    _Forward_Packet_PANCr_to_EDy 22BD  
                                  _MACRxPacket 01AA                           ?_DemoOutput_Greeting 0070  
                                     _RSSILock 01D0                      _STAR_DEMO_OPTIONS_MESSAGE 34F1  
                                     _NVMWrite 239F                                    _MACTxBuffer 0320  
                                     i1___bmul 3572                                  SetRFMode@mode 00A7  
                                     i1___lmul 28F7                                       _NVMalloc 07D9  
                            ___wmul@multiplier 00A7                                       i1___wmul 3652  
                                    high_isr@i 0057                                  ??i1_SetRFMode 0076  
              ?_MiApp_BroadcastConnectionTable 0070               ??_MiApp_BroadcastConnectionTable 00E2  
                       ??_MiApp_ConnectionMode 00B9                             main@freezer_enable 016D  
                       ??_MiApp_UnicastAddress 00E6                        ??_MiApp_StartConnection 00B0  
              __size_of_MiApp_RemoveConnection 01A0                            SendPacket@isCommand 00D8  
                         high_isr@ackInfoIndex 0054                                 _nextEEPosition 01CA  
     i1DELAY_10us@cyclesRequiredForEntireDelay 0024         DELAY_10us@cyclesRequiredForEntireDelay 00B0  
                                     _ConnMode 006F                              ___lmul@multiplier 00A0  
               MiApp_EstablishConnection@retry 014F                                    _LCD_d_write 37B7  
        Forward_Packet_PANCr_to_EDy@EDxAddress 0123                                    ??_SetRFMode 00A6  
                                     _MacroNop 0002                               __size_of_NVMInit 007F  
                             __size_of_NVMRead 0038                                    _LCD_i_write 37DB  
                               i1_RegisterRead 3736                  __size_of_MiApp_DiscardMessage 0004  
                        ?_Find_InActiveDevices 0070          MiApp_RemoveConnection@ConnectionIndex 00EC  
                                     _TxMACSeq 01D2                __end_of_DemoOutput_ChannelError 0801  
                    ??_MiApp_UnicastConnection 00E8                        __end_of_Initialize_Demo 239F  
                       __size_ofi1_RegisterSet 0016                            _display_connections 01D5  
                                   _DELAY_10us 366D                                       _RxPacket 22F2  
                                     _TxBuffer 0234                                   _nvmDelayTick 01B6  
                                     _TxPacket 081D                    run_star_demo@mac_ack_status 0166  
                                     _Run_Demo 34F4                             Total_Connections@i 00B4  
                      __size_of_LCD_Initialize 0057                MiApp_BroadcastConnectionTable@i 00EC  
              MiApp_BroadcastConnectionTable@j 00ED                MiApp_BroadcastConnectionTable@k 00E9  
                        MiMAC_ReceivedPacket@i 00BC                               __size_of___awdiv 0052  
                             __size_of___awmod 0046                    __end_of_store_connection_tb 26AC  
                        ??_DemoOutput_Greeting 00D7                                  ??i1_WriteFIFO 0073  
                             __size_of___lwdiv 0035                               __size_of___lwmod 002D  
                        _MiApp_BroadcastPacket 3563                                     sprintf@idx 00C2  
                                   sprintf@len 00C4                                     sprintf@val 00C7  
                         __size_of_RegisterSet 001A                                _lost_connection 01D7  
                                  ??_WriteFIFO 00A3                               __size_of_isdigit 000F  
                            ?_MiMAC_SetChannel 00A8                                ___lwdiv@divisor 00A0  
                              ___lwdiv@counter 00A7                                       __ptext10 2B07  
                                     __ptext11 351B                                       __ptext20 2A54  
                                     __ptext12 2985                                       __ptext21 2509  
                                     __ptext13 2416                                       __ptext30 08F3  
                                     __ptext22 07D9                                       __ptext14 3563  
                                     __ptext31 2608                                       __ptext23 1802  
                                     __ptext15 2588                                       __ptext40 2CBC  
                                     __ptext32 2D57                                       __ptext24 2851  
                                     __ptext16 232D                                       __ptext41 3546  
                                     __ptext33 28A0                                       __ptext25 2E9D  
                                     __ptext17 34F1                                       __ptext50 2EF1  
                                     __ptext42 3530                                       __ptext34 3755  
                                     __ptext26 353B                                       __ptext18 2A1E  
                                     __ptext51 3603                                       __ptext43 2751  
                                     __ptext35 0633                                       __ptext27 282B  
                                     __ptext19 119D                                       __ptext60 2926  
                                     __ptext52 3794                                       __ptext44 2DA7  
                                     __ptext36 040F                                       __ptext28 195B  
                                     __ptext61 239F                                       __ptext53 2BD9  
                                     __ptext45 1A61                                       __ptext37 2B4A  
                                     __ptext29 3512                                       __ptext70 36A4  
                                     __ptext62 3504                                       __ptext54 366D  
                                     __ptext46 2B90                                       __ptext38 2DF9  
                                     __ptext71 28CA                                       __ptext63 0002  
                                     __ptext55 1015                                       __ptext47 26AC  
                                     __ptext39 22BD                                       __ptext80 36FA  
                                     __ptext72 29E9                                       __ptext64 0800  
                                     __ptext56 2878                                       __ptext48 081D  
                                     __ptext81 36DC                                       __ptext73 3595  
                                     __ptext65 3774                                       __ptext57 248E  
                                     __ptext49 35BD                                       __ptext90 2C6F  
                                     __ptext82 35D3                                       __ptext74 2D09  
                                     __ptext66 3525                                       __ptext58 34FA  
                                     __ptext91 35A7                                       __ptext83 2C23  
                                     __ptext75 37DB                                       __ptext67 29B5  
                                     __ptext59 2806                                       __ptext92 3736  
                                     __ptext84 2955                                       __ptext76 37B7  
                                     __ptext68 138C                                       __ptext93 34FE  
                                     __ptext77 35EA                                       __ptext69 3554  
                                     __ptext94 3583                                       __ptext86 3652  
                                     __ptext78 3688                                       __ptext95 2A8C  
                                     __ptext87 3572                                       __ptext79 3718  
                                     __ptext96 3637                                       __ptext88 1889  
                                     __ptext97 28F7                                       __ptext89 1002  
                                     __ptext98 1001                                   _SSP1CON1bits 0215  
                                _AddConnection 1015                       TxPacket@allowedTxFailure 00C7  
                           ??_MiMAC_SetChannel 00A9                              ?_MiMAC_SendPacket 00CC  
              __size_of_DemoOutput_UnicastFail 000B                         __end_ofi1_RegisterRead 3755  
                                     _high_isr 0004                   Source_END_DEVICE_INFO@SrAddr 00D0  
                          __end_ofi1_SetRFMode 2CBC                               __size_of_sprintf 0474  
                             ??i1_MiWi_TickGet 0074                         __size_of_isSameAddress 0028  
                           ??_MiMAC_SendPacket 00D1                               Initialize_Demo@i 015C  
                           _DemoOutput_Channel 3774                         ??_UserInterruptHandler 0070  
                                __size_of_main 001A                               ?_freezer_feature 0070  
                      i1RegisterSet@IRQ1select 0075                         _MiApp_RemoveConnection 1A61  
                          ?_DemoOutput_Channel 00D7                                     _LCDDisplay 29B5  
                                     _temp_bit 01D8                                     _LCDInitSPI 2800  
                                     int$flags 007E                             LCDTRXCount@rxCount 00D0  
                  MiApp_EstablishConnection@t1 0150                    MiApp_EstablishConnection@t2 0155  
                           LCDTRXCount@txCount 00D3                              i1TxPacket@rssival 003E  
                                   _LCD_Update 2D09                      __size_of_send_link_status 002A  
                          MiApp_UnicastStar@t1 014E                            MiApp_UnicastStar@t2 0152  
                   MiMAC_SendPacket@MACPayload 00CF                     i1TxPacket@allowedTxFailure 003C  
                                  Find_Index@i 00B5                                  i1_RegisterSet 35A7  
                        _permanent_connections 022A                                     _INTCONbits 000B  
                               AddConnection@i 00C8                           ??_DemoOutput_Channel 00D8  
                   handle_lost_connection@stat 00A2                            __end_ofi1_WriteFIFO 1015  
                              i1SetRFMode@mode 0077                        ?_handle_lost_connection 0070  
                            __CFG_BOREN$SBODEN 0000                                 ?_AddConnection 0070  
                  ButtonPressed@tickDifference 00B3                                       isdigit@c 00A1  
                                     memset@p1 00A5                                  ??_SW_Ack_SrED 00E4  
                          LCDInitPortA@preRFIE 00A3                                ?i1_RegisterRead 0070  
                                  _nvmConnMode 01D9                           SW_Ack_SrED@Dest_Addr 00E2  
                       Total_Connections@count 00B3                    MiApp_ProtocolInit@initValue 00C2  
                          LCDInitPortB@preRFIE 00A3                         ??_Find_InActiveDevices 0120  
                                     intlevel1 0000                              ?_MiApp_SetChannel 0070  
                                    sprintf@ap 00C6                                      sprintf@cp 00C3  
                                    sprintf@sp 00CF                        ?_MiApp_MessageAvailable 0070  
                             ___lwmod@dividend 00AA                                   ?_EEPROM_Read 00A3  
                           ??_MiApp_SetChannel 00B9                              __CFG_CLKOUTEN$OFF 0000  
                             ?_Initialize_Demo 0070                                  i1TxPacket@CCA 007C  
                                ?_MiWi_TickGet 00A0                                    ?_DELAY_10us 00AC  
                               LCDWritePortA@v 00A3                                 LCDWritePortB@v 00A3  
                           _MiApp_ProtocolInit 119D                   SendPacket@DestinationAddress 00D6  
                       _DemoOutput_UnicastFail 3530                                  _MACInitParams 0058  
                          MiMAC_Init@initValue 00B2                          i1RegisterRead@address 0074  
                                _isSameAddress 2878                            ?_MiApp_ProtocolInit 0070  
                            _MiApp_UnicastStar 2416                         ?_MiApp_BroadcastPacket 0070  
                               ?i1_RegisterSet 0073                                       sprintf@c 00CC  
                                     sprintf@f 00AE                             ?_MiApp_UnicastStar 0070  
             __size_of_DemoOutput_ChannelError 0001                 __end_of_handle_lost_connection 2DA7  
                              ___lwmod@divisor 00A8                                    i1_SetRFMode 2C6F  
   MiApp_EstablishConnection@tmpConnectionMode 014E                                ___lwmod@counter 00AD  
                          TxPacket@TxPacketLen 00C9                                   i1TxPacket@t1 0032  
                                 i1TxPacket@t2 0036                     ?_MiApp_EstablishConnection 0145  
                        _DemoOutput_UpdateTxRx 351B                            ??_MiApp_UnicastStar 0145  
               __end_of_MiApp_MessageAvailable 351B                            _MiMAC_DiscardPacket 2806  
                           _nvmOutFrameCounter 01E1                              _nvmCurrentChannel 01DB  
                         ??_MiApp_ProtocolInit 00BB                                   ?_LCDTRXCount 00D0  
                                  i1TxPacket@i 003D                    send_link_status@send_status 00E3  
                             EEPROM_Read@count 00A4                                 ??_MiWi_TickGet 00A4  
            Process_RxMessage@User_data_status 0147                            __end_of_SW_Ack_SrED 3774  
                          i1RegisterRead@value 0075                                EEPROM_Read@addr 00A3  
                              EEPROM_Read@dest 00A6                                     i1_TxPacket 1889  
             Forward_Packet_PANCr_to_EDy@index 0122                          RegisterSet@IRQ1select 00A5  
                 __end_of_MiMAC_ReceivedPacket 07D9                             Find_Index@DestAddr 00AD  
                                  ?_LCDDisplay 00D0                         __size_of_LCDWritePortA 001E  
                       __size_of_LCDWritePortB 001E                                    ?_LCDInitSPI 0070  
