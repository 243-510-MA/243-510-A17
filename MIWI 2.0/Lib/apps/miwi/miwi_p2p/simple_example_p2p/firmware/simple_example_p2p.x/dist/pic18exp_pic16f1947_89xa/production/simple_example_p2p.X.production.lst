

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Oct 13 15:24:21 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK4,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	intentry,global,class=CODE,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,delta=2
   119                           	psect	text94,local,class=CODE,merge=1,delta=2
   120                           	dabs	1,0x620,48
   121                           	dabs	1,0x5B8,56
   122                           	dabs	1,0x2388,0,_RxPacket
   123                           	dabs	1,0x7E,2
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  008F                     	;# 
   160  0090                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0110                     	;# 
   181  0111                     	;# 
   182  0112                     	;# 
   183  0113                     	;# 
   184  0114                     	;# 
   185  0115                     	;# 
   186  0116                     	;# 
   187  0117                     	;# 
   188  0118                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011B                     	;# 
   192  011D                     	;# 
   193  011E                     	;# 
   194  011F                     	;# 
   195  018C                     	;# 
   196  0190                     	;# 
   197  0191                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0193                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0194                     	;# 
   204  0195                     	;# 
   205  0196                     	;# 
   206  0199                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019D                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019E                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  020D                     	;# 
   223  0211                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0212                     	;# 
   227  0213                     	;# 
   228  0213                     	;# 
   229  0214                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  0219                     	;# 
   239  021A                     	;# 
   240  021B                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021E                     	;# 
   244  021F                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  029B                     	;# 
   260  029C                     	;# 
   261  029C                     	;# 
   262  029D                     	;# 
   263  029E                     	;# 
   264  029F                     	;# 
   265  030C                     	;# 
   266  030D                     	;# 
   267  0311                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0315                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0318                     	;# 
   276  0318                     	;# 
   277  0319                     	;# 
   278  031A                     	;# 
   279  031C                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  038C                     	;# 
   284  038D                     	;# 
   285  0394                     	;# 
   286  0395                     	;# 
   287  0396                     	;# 
   288  040C                     	;# 
   289  040D                     	;# 
   290  0415                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  048D                     	;# 
   297  0491                     	;# 
   298  0492                     	;# 
   299  0493                     	;# 
   300  0493                     	;# 
   301  0494                     	;# 
   302  0495                     	;# 
   303  0496                     	;# 
   304  0497                     	;# 
   305  0791                     	;# 
   306  0792                     	;# 
   307  0793                     	;# 
   308  0794                     	;# 
   309  0795                     	;# 
   310  0798                     	;# 
   311  0799                     	;# 
   312  079A                     	;# 
   313  079B                     	;# 
   314  079C                     	;# 
   315  079D                     	;# 
   316  07A0                     	;# 
   317  07A1                     	;# 
   318  07A2                     	;# 
   319  07A3                     	;# 
   320  07A4                     	;# 
   321  07A5                     	;# 
   322  07A6                     	;# 
   323  07A7                     	;# 
   324  07A8                     	;# 
   325  07A9                     	;# 
   326  07AA                     	;# 
   327  07AB                     	;# 
   328  07AC                     	;# 
   329  07AD                     	;# 
   330  07AE                     	;# 
   331  07AF                     	;# 
   332  07B0                     	;# 
   333  07B1                     	;# 
   334  07B2                     	;# 
   335  07B3                     	;# 
   336  07B4                     	;# 
   337  07B5                     	;# 
   338  07B6                     	;# 
   339  07B7                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000F                     	;# 
   367  0010                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0014                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  008E                     	;# 
   386  008F                     	;# 
   387  0090                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0093                     	;# 
   391  0094                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0110                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011A                     	;# 
   418  011B                     	;# 
   419  011D                     	;# 
   420  011E                     	;# 
   421  011F                     	;# 
   422  018C                     	;# 
   423  0190                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0199                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019A                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019C                     	;# 
   442  019C                     	;# 
   443  019D                     	;# 
   444  019D                     	;# 
   445  019E                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  019F                     	;# 
   449  020D                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  0219                     	;# 
   466  021A                     	;# 
   467  021B                     	;# 
   468  021C                     	;# 
   469  021D                     	;# 
   470  021E                     	;# 
   471  021F                     	;# 
   472  028C                     	;# 
   473  028D                     	;# 
   474  0291                     	;# 
   475  0291                     	;# 
   476  0292                     	;# 
   477  0293                     	;# 
   478  0294                     	;# 
   479  0295                     	;# 
   480  0295                     	;# 
   481  0296                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  029B                     	;# 
   487  029C                     	;# 
   488  029C                     	;# 
   489  029D                     	;# 
   490  029E                     	;# 
   491  029F                     	;# 
   492  030C                     	;# 
   493  030D                     	;# 
   494  0311                     	;# 
   495  0311                     	;# 
   496  0312                     	;# 
   497  0313                     	;# 
   498  0314                     	;# 
   499  0315                     	;# 
   500  0315                     	;# 
   501  0316                     	;# 
   502  0318                     	;# 
   503  0318                     	;# 
   504  0319                     	;# 
   505  031A                     	;# 
   506  031C                     	;# 
   507  031C                     	;# 
   508  031D                     	;# 
   509  031E                     	;# 
   510  038C                     	;# 
   511  038D                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  040C                     	;# 
   516  040D                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  048D                     	;# 
   524  0491                     	;# 
   525  0492                     	;# 
   526  0493                     	;# 
   527  0493                     	;# 
   528  0494                     	;# 
   529  0495                     	;# 
   530  0496                     	;# 
   531  0497                     	;# 
   532  0791                     	;# 
   533  0792                     	;# 
   534  0793                     	;# 
   535  0794                     	;# 
   536  0795                     	;# 
   537  0798                     	;# 
   538  0799                     	;# 
   539  079A                     	;# 
   540  079B                     	;# 
   541  079C                     	;# 
   542  079D                     	;# 
   543  07A0                     	;# 
   544  07A1                     	;# 
   545  07A2                     	;# 
   546  07A3                     	;# 
   547  07A4                     	;# 
   548  07A5                     	;# 
   549  07A6                     	;# 
   550  07A7                     	;# 
   551  07A8                     	;# 
   552  07A9                     	;# 
   553  07AA                     	;# 
   554  07AB                     	;# 
   555  07AC                     	;# 
   556  07AD                     	;# 
   557  07AE                     	;# 
   558  07AF                     	;# 
   559  07B0                     	;# 
   560  07B1                     	;# 
   561  07B2                     	;# 
   562  07B3                     	;# 
   563  07B4                     	;# 
   564  07B5                     	;# 
   565  07B6                     	;# 
   566  07B7                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000D                     	;# 
   592  000E                     	;# 
   593  000F                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  001E                     	;# 
   609  001F                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010D                     	;# 
   632  010E                     	;# 
   633  010F                     	;# 
   634  0110                     	;# 
   635  0111                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0115                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0118                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011D                     	;# 
   647  011E                     	;# 
   648  011F                     	;# 
   649  018C                     	;# 
   650  0190                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0199                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019A                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019C                     	;# 
   669  019C                     	;# 
   670  019D                     	;# 
   671  019D                     	;# 
   672  019E                     	;# 
   673  019E                     	;# 
   674  019F                     	;# 
   675  019F                     	;# 
   676  020D                     	;# 
   677  0211                     	;# 
   678  0211                     	;# 
   679  0212                     	;# 
   680  0212                     	;# 
   681  0213                     	;# 
   682  0213                     	;# 
   683  0214                     	;# 
   684  0214                     	;# 
   685  0215                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0216                     	;# 
   690  0217                     	;# 
   691  0217                     	;# 
   692  0219                     	;# 
   693  021A                     	;# 
   694  021B                     	;# 
   695  021C                     	;# 
   696  021D                     	;# 
   697  021E                     	;# 
   698  021F                     	;# 
   699  028C                     	;# 
   700  028D                     	;# 
   701  0291                     	;# 
   702  0291                     	;# 
   703  0292                     	;# 
   704  0293                     	;# 
   705  0294                     	;# 
   706  0295                     	;# 
   707  0295                     	;# 
   708  0296                     	;# 
   709  0298                     	;# 
   710  0298                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  029B                     	;# 
   714  029C                     	;# 
   715  029C                     	;# 
   716  029D                     	;# 
   717  029E                     	;# 
   718  029F                     	;# 
   719  030C                     	;# 
   720  030D                     	;# 
   721  0311                     	;# 
   722  0311                     	;# 
   723  0312                     	;# 
   724  0313                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0315                     	;# 
   728  0316                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031C                     	;# 
   734  031C                     	;# 
   735  031D                     	;# 
   736  031E                     	;# 
   737  038C                     	;# 
   738  038D                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  040C                     	;# 
   743  040D                     	;# 
   744  0415                     	;# 
   745  0416                     	;# 
   746  0417                     	;# 
   747  041C                     	;# 
   748  041D                     	;# 
   749  041E                     	;# 
   750  048D                     	;# 
   751  0491                     	;# 
   752  0492                     	;# 
   753  0493                     	;# 
   754  0493                     	;# 
   755  0494                     	;# 
   756  0495                     	;# 
   757  0496                     	;# 
   758  0497                     	;# 
   759  0791                     	;# 
   760  0792                     	;# 
   761  0793                     	;# 
   762  0794                     	;# 
   763  0795                     	;# 
   764  0798                     	;# 
   765  0799                     	;# 
   766  079A                     	;# 
   767  079B                     	;# 
   768  079C                     	;# 
   769  079D                     	;# 
   770  07A0                     	;# 
   771  07A1                     	;# 
   772  07A2                     	;# 
   773  07A3                     	;# 
   774  07A4                     	;# 
   775  07A5                     	;# 
   776  07A6                     	;# 
   777  07A7                     	;# 
   778  07A8                     	;# 
   779  07A9                     	;# 
   780  07AA                     	;# 
   781  07AB                     	;# 
   782  07AC                     	;# 
   783  07AD                     	;# 
   784  07AE                     	;# 
   785  07AF                     	;# 
   786  07B0                     	;# 
   787  07B1                     	;# 
   788  07B2                     	;# 
   789  07B3                     	;# 
   790  07B4                     	;# 
   791  07B5                     	;# 
   792  07B6                     	;# 
   793  07B7                     	;# 
   794  0FE4                     	;# 
   795  0FE5                     	;# 
   796  0FE6                     	;# 
   797  0FE7                     	;# 
   798  0FE8                     	;# 
   799  0FE9                     	;# 
   800  0FEA                     	;# 
   801  0FEB                     	;# 
   802  0FED                     	;# 
   803  0FEE                     	;# 
   804  0FEF                     	;# 
   805  0000                     	;# 
   806  0001                     	;# 
   807  0002                     	;# 
   808  0003                     	;# 
   809  0004                     	;# 
   810  0005                     	;# 
   811  0006                     	;# 
   812  0007                     	;# 
   813  0008                     	;# 
   814  0009                     	;# 
   815  000A                     	;# 
   816  000B                     	;# 
   817  000C                     	;# 
   818  000D                     	;# 
   819  000E                     	;# 
   820  000F                     	;# 
   821  0010                     	;# 
   822  0011                     	;# 
   823  0012                     	;# 
   824  0013                     	;# 
   825  0014                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0016                     	;# 
   829  0017                     	;# 
   830  0018                     	;# 
   831  0019                     	;# 
   832  001A                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001E                     	;# 
   836  001F                     	;# 
   837  008C                     	;# 
   838  008D                     	;# 
   839  008E                     	;# 
   840  008F                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  0110                     	;# 
   862  0111                     	;# 
   863  0112                     	;# 
   864  0113                     	;# 
   865  0114                     	;# 
   866  0115                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  0118                     	;# 
   870  0119                     	;# 
   871  011A                     	;# 
   872  011B                     	;# 
   873  011D                     	;# 
   874  011E                     	;# 
   875  011F                     	;# 
   876  018C                     	;# 
   877  0190                     	;# 
   878  0191                     	;# 
   879  0191                     	;# 
   880  0192                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0194                     	;# 
   885  0195                     	;# 
   886  0196                     	;# 
   887  0199                     	;# 
   888  0199                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019C                     	;# 
   896  019C                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019F                     	;# 
   902  019F                     	;# 
   903  020D                     	;# 
   904  0211                     	;# 
   905  0211                     	;# 
   906  0212                     	;# 
   907  0212                     	;# 
   908  0213                     	;# 
   909  0213                     	;# 
   910  0214                     	;# 
   911  0214                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0216                     	;# 
   916  0216                     	;# 
   917  0217                     	;# 
   918  0217                     	;# 
   919  0219                     	;# 
   920  021A                     	;# 
   921  021B                     	;# 
   922  021C                     	;# 
   923  021D                     	;# 
   924  021E                     	;# 
   925  021F                     	;# 
   926  028C                     	;# 
   927  028D                     	;# 
   928  0291                     	;# 
   929  0291                     	;# 
   930  0292                     	;# 
   931  0293                     	;# 
   932  0294                     	;# 
   933  0295                     	;# 
   934  0295                     	;# 
   935  0296                     	;# 
   936  0298                     	;# 
   937  0298                     	;# 
   938  0299                     	;# 
   939  029A                     	;# 
   940  029B                     	;# 
   941  029C                     	;# 
   942  029C                     	;# 
   943  029D                     	;# 
   944  029E                     	;# 
   945  029F                     	;# 
   946  030C                     	;# 
   947  030D                     	;# 
   948  0311                     	;# 
   949  0311                     	;# 
   950  0312                     	;# 
   951  0313                     	;# 
   952  0314                     	;# 
   953  0315                     	;# 
   954  0315                     	;# 
   955  0316                     	;# 
   956  0318                     	;# 
   957  0318                     	;# 
   958  0319                     	;# 
   959  031A                     	;# 
   960  031C                     	;# 
   961  031C                     	;# 
   962  031D                     	;# 
   963  031E                     	;# 
   964  038C                     	;# 
   965  038D                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  040C                     	;# 
   970  040D                     	;# 
   971  0415                     	;# 
   972  0416                     	;# 
   973  0417                     	;# 
   974  041C                     	;# 
   975  041D                     	;# 
   976  041E                     	;# 
   977  048D                     	;# 
   978  0491                     	;# 
   979  0492                     	;# 
   980  0493                     	;# 
   981  0493                     	;# 
   982  0494                     	;# 
   983  0495                     	;# 
   984  0496                     	;# 
   985  0497                     	;# 
   986  0791                     	;# 
   987  0792                     	;# 
   988  0793                     	;# 
   989  0794                     	;# 
   990  0795                     	;# 
   991  0798                     	;# 
   992  0799                     	;# 
   993  079A                     	;# 
   994  079B                     	;# 
   995  079C                     	;# 
   996  079D                     	;# 
   997  07A0                     	;# 
   998  07A1                     	;# 
   999  07A2                     	;# 
  1000  07A3                     	;# 
  1001  07A4                     	;# 
  1002  07A5                     	;# 
  1003  07A6                     	;# 
  1004  07A7                     	;# 
  1005  07A8                     	;# 
  1006  07A9                     	;# 
  1007  07AA                     	;# 
  1008  07AB                     	;# 
  1009  07AC                     	;# 
  1010  07AD                     	;# 
  1011  07AE                     	;# 
  1012  07AF                     	;# 
  1013  07B0                     	;# 
  1014  07B1                     	;# 
  1015  07B2                     	;# 
  1016  07B3                     	;# 
  1017  07B4                     	;# 
  1018  07B5                     	;# 
  1019  07B6                     	;# 
  1020  07B7                     	;# 
  1021  0FE4                     	;# 
  1022  0FE5                     	;# 
  1023  0FE6                     	;# 
  1024  0FE7                     	;# 
  1025  0FE8                     	;# 
  1026  0FE9                     	;# 
  1027  0FEA                     	;# 
  1028  0FEB                     	;# 
  1029  0FED                     	;# 
  1030  0FEE                     	;# 
  1031  0FEF                     	;# 
  1032  0000                     	;# 
  1033  0001                     	;# 
  1034  0002                     	;# 
  1035  0003                     	;# 
  1036  0004                     	;# 
  1037  0005                     	;# 
  1038  0006                     	;# 
  1039  0007                     	;# 
  1040  0008                     	;# 
  1041  0009                     	;# 
  1042  000A                     	;# 
  1043  000B                     	;# 
  1044  000C                     	;# 
  1045  000D                     	;# 
  1046  000E                     	;# 
  1047  000F                     	;# 
  1048  0010                     	;# 
  1049  0011                     	;# 
  1050  0012                     	;# 
  1051  0013                     	;# 
  1052  0014                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0016                     	;# 
  1056  0017                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001E                     	;# 
  1063  001F                     	;# 
  1064  008C                     	;# 
  1065  008D                     	;# 
  1066  008E                     	;# 
  1067  008F                     	;# 
  1068  0090                     	;# 
  1069  0091                     	;# 
  1070  0092                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  010F                     	;# 
  1088  0110                     	;# 
  1089  0111                     	;# 
  1090  0112                     	;# 
  1091  0113                     	;# 
  1092  0114                     	;# 
  1093  0115                     	;# 
  1094  0116                     	;# 
  1095  0117                     	;# 
  1096  0118                     	;# 
  1097  0119                     	;# 
  1098  011A                     	;# 
  1099  011B                     	;# 
  1100  011D                     	;# 
  1101  011E                     	;# 
  1102  011F                     	;# 
  1103  018C                     	;# 
  1104  0190                     	;# 
  1105  0191                     	;# 
  1106  0191                     	;# 
  1107  0192                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0194                     	;# 
  1112  0195                     	;# 
  1113  0196                     	;# 
  1114  0199                     	;# 
  1115  0199                     	;# 
  1116  019A                     	;# 
  1117  019A                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019C                     	;# 
  1123  019C                     	;# 
  1124  019D                     	;# 
  1125  019D                     	;# 
  1126  019E                     	;# 
  1127  019E                     	;# 
  1128  019F                     	;# 
  1129  019F                     	;# 
  1130  020D                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0216                     	;# 
  1143  0216                     	;# 
  1144  0217                     	;# 
  1145  0217                     	;# 
  1146  0219                     	;# 
  1147  021A                     	;# 
  1148  021B                     	;# 
  1149  021C                     	;# 
  1150  021D                     	;# 
  1151  021E                     	;# 
  1152  021F                     	;# 
  1153  028C                     	;# 
  1154  028D                     	;# 
  1155  0291                     	;# 
  1156  0291                     	;# 
  1157  0292                     	;# 
  1158  0293                     	;# 
  1159  0294                     	;# 
  1160  0295                     	;# 
  1161  0295                     	;# 
  1162  0296                     	;# 
  1163  0298                     	;# 
  1164  0298                     	;# 
  1165  0299                     	;# 
  1166  029A                     	;# 
  1167  029B                     	;# 
  1168  029C                     	;# 
  1169  029C                     	;# 
  1170  029D                     	;# 
  1171  029E                     	;# 
  1172  029F                     	;# 
  1173  030C                     	;# 
  1174  030D                     	;# 
  1175  0311                     	;# 
  1176  0311                     	;# 
  1177  0312                     	;# 
  1178  0313                     	;# 
  1179  0314                     	;# 
  1180  0315                     	;# 
  1181  0315                     	;# 
  1182  0316                     	;# 
  1183  0318                     	;# 
  1184  0318                     	;# 
  1185  0319                     	;# 
  1186  031A                     	;# 
  1187  031C                     	;# 
  1188  031C                     	;# 
  1189  031D                     	;# 
  1190  031E                     	;# 
  1191  038C                     	;# 
  1192  038D                     	;# 
  1193  0394                     	;# 
  1194  0395                     	;# 
  1195  0396                     	;# 
  1196  040C                     	;# 
  1197  040D                     	;# 
  1198  0415                     	;# 
  1199  0416                     	;# 
  1200  0417                     	;# 
  1201  041C                     	;# 
  1202  041D                     	;# 
  1203  041E                     	;# 
  1204  048D                     	;# 
  1205  0491                     	;# 
  1206  0492                     	;# 
  1207  0493                     	;# 
  1208  0493                     	;# 
  1209  0494                     	;# 
  1210  0495                     	;# 
  1211  0496                     	;# 
  1212  0497                     	;# 
  1213  0791                     	;# 
  1214  0792                     	;# 
  1215  0793                     	;# 
  1216  0794                     	;# 
  1217  0795                     	;# 
  1218  0798                     	;# 
  1219  0799                     	;# 
  1220  079A                     	;# 
  1221  079B                     	;# 
  1222  079C                     	;# 
  1223  079D                     	;# 
  1224  07A0                     	;# 
  1225  07A1                     	;# 
  1226  07A2                     	;# 
  1227  07A3                     	;# 
  1228  07A4                     	;# 
  1229  07A5                     	;# 
  1230  07A6                     	;# 
  1231  07A7                     	;# 
  1232  07A8                     	;# 
  1233  07A9                     	;# 
  1234  07AA                     	;# 
  1235  07AB                     	;# 
  1236  07AC                     	;# 
  1237  07AD                     	;# 
  1238  07AE                     	;# 
  1239  07AF                     	;# 
  1240  07B0                     	;# 
  1241  07B1                     	;# 
  1242  07B2                     	;# 
  1243  07B3                     	;# 
  1244  07B4                     	;# 
  1245  07B5                     	;# 
  1246  07B6                     	;# 
  1247  07B7                     	;# 
  1248  0FE4                     	;# 
  1249  0FE5                     	;# 
  1250  0FE6                     	;# 
  1251  0FE7                     	;# 
  1252  0FE8                     	;# 
  1253  0FE9                     	;# 
  1254  0FEA                     	;# 
  1255  0FEB                     	;# 
  1256  0FED                     	;# 
  1257  0FEE                     	;# 
  1258  0FEF                     	;# 
  1259  0000                     	;# 
  1260  0001                     	;# 
  1261  0002                     	;# 
  1262  0003                     	;# 
  1263  0004                     	;# 
  1264  0005                     	;# 
  1265  0006                     	;# 
  1266  0007                     	;# 
  1267  0008                     	;# 
  1268  0009                     	;# 
  1269  000A                     	;# 
  1270  000B                     	;# 
  1271  000C                     	;# 
  1272  000D                     	;# 
  1273  000E                     	;# 
  1274  000F                     	;# 
  1275  0010                     	;# 
  1276  0011                     	;# 
  1277  0012                     	;# 
  1278  0013                     	;# 
  1279  0014                     	;# 
  1280  0015                     	;# 
  1281  0016                     	;# 
  1282  0016                     	;# 
  1283  0017                     	;# 
  1284  0018                     	;# 
  1285  0019                     	;# 
  1286  001A                     	;# 
  1287  001B                     	;# 
  1288  001C                     	;# 
  1289  001E                     	;# 
  1290  001F                     	;# 
  1291  008C                     	;# 
  1292  008D                     	;# 
  1293  008E                     	;# 
  1294  008F                     	;# 
  1295  0090                     	;# 
  1296  0091                     	;# 
  1297  0092                     	;# 
  1298  0093                     	;# 
  1299  0094                     	;# 
  1300  0095                     	;# 
  1301  0096                     	;# 
  1302  0097                     	;# 
  1303  0098                     	;# 
  1304  0099                     	;# 
  1305  009A                     	;# 
  1306  009B                     	;# 
  1307  009B                     	;# 
  1308  009C                     	;# 
  1309  009D                     	;# 
  1310  009E                     	;# 
  1311  010C                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0110                     	;# 
  1316  0111                     	;# 
  1317  0112                     	;# 
  1318  0113                     	;# 
  1319  0114                     	;# 
  1320  0115                     	;# 
  1321  0116                     	;# 
  1322  0117                     	;# 
  1323  0118                     	;# 
  1324  0119                     	;# 
  1325  011A                     	;# 
  1326  011B                     	;# 
  1327  011D                     	;# 
  1328  011E                     	;# 
  1329  011F                     	;# 
  1330  018C                     	;# 
  1331  0190                     	;# 
  1332  0191                     	;# 
  1333  0191                     	;# 
  1334  0192                     	;# 
  1335  0193                     	;# 
  1336  0193                     	;# 
  1337  0193                     	;# 
  1338  0194                     	;# 
  1339  0195                     	;# 
  1340  0196                     	;# 
  1341  0199                     	;# 
  1342  0199                     	;# 
  1343  019A                     	;# 
  1344  019A                     	;# 
  1345  019B                     	;# 
  1346  019B                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019C                     	;# 
  1350  019C                     	;# 
  1351  019D                     	;# 
  1352  019D                     	;# 
  1353  019E                     	;# 
  1354  019E                     	;# 
  1355  019F                     	;# 
  1356  019F                     	;# 
  1357  020D                     	;# 
  1358  0211                     	;# 
  1359  0211                     	;# 
  1360  0212                     	;# 
  1361  0212                     	;# 
  1362  0213                     	;# 
  1363  0213                     	;# 
  1364  0214                     	;# 
  1365  0214                     	;# 
  1366  0215                     	;# 
  1367  0215                     	;# 
  1368  0215                     	;# 
  1369  0216                     	;# 
  1370  0216                     	;# 
  1371  0217                     	;# 
  1372  0217                     	;# 
  1373  0219                     	;# 
  1374  021A                     	;# 
  1375  021B                     	;# 
  1376  021C                     	;# 
  1377  021D                     	;# 
  1378  021E                     	;# 
  1379  021F                     	;# 
  1380  028C                     	;# 
  1381  028D                     	;# 
  1382  0291                     	;# 
  1383  0291                     	;# 
  1384  0292                     	;# 
  1385  0293                     	;# 
  1386  0294                     	;# 
  1387  0295                     	;# 
  1388  0295                     	;# 
  1389  0296                     	;# 
  1390  0298                     	;# 
  1391  0298                     	;# 
  1392  0299                     	;# 
  1393  029A                     	;# 
  1394  029B                     	;# 
  1395  029C                     	;# 
  1396  029C                     	;# 
  1397  029D                     	;# 
  1398  029E                     	;# 
  1399  029F                     	;# 
  1400  030C                     	;# 
  1401  030D                     	;# 
  1402  0311                     	;# 
  1403  0311                     	;# 
  1404  0312                     	;# 
  1405  0313                     	;# 
  1406  0314                     	;# 
  1407  0315                     	;# 
  1408  0315                     	;# 
  1409  0316                     	;# 
  1410  0318                     	;# 
  1411  0318                     	;# 
  1412  0319                     	;# 
  1413  031A                     	;# 
  1414  031C                     	;# 
  1415  031C                     	;# 
  1416  031D                     	;# 
  1417  031E                     	;# 
  1418  038C                     	;# 
  1419  038D                     	;# 
  1420  0394                     	;# 
  1421  0395                     	;# 
  1422  0396                     	;# 
  1423  040C                     	;# 
  1424  040D                     	;# 
  1425  0415                     	;# 
  1426  0416                     	;# 
  1427  0417                     	;# 
  1428  041C                     	;# 
  1429  041D                     	;# 
  1430  041E                     	;# 
  1431  048D                     	;# 
  1432  0491                     	;# 
  1433  0492                     	;# 
  1434  0493                     	;# 
  1435  0493                     	;# 
  1436  0494                     	;# 
  1437  0495                     	;# 
  1438  0496                     	;# 
  1439  0497                     	;# 
  1440  0791                     	;# 
  1441  0792                     	;# 
  1442  0793                     	;# 
  1443  0794                     	;# 
  1444  0795                     	;# 
  1445  0798                     	;# 
  1446  0799                     	;# 
  1447  079A                     	;# 
  1448  079B                     	;# 
  1449  079C                     	;# 
  1450  079D                     	;# 
  1451  07A0                     	;# 
  1452  07A1                     	;# 
  1453  07A2                     	;# 
  1454  07A3                     	;# 
  1455  07A4                     	;# 
  1456  07A5                     	;# 
  1457  07A6                     	;# 
  1458  07A7                     	;# 
  1459  07A8                     	;# 
  1460  07A9                     	;# 
  1461  07AA                     	;# 
  1462  07AB                     	;# 
  1463  07AC                     	;# 
  1464  07AD                     	;# 
  1465  07AE                     	;# 
  1466  07AF                     	;# 
  1467  07B0                     	;# 
  1468  07B1                     	;# 
  1469  07B2                     	;# 
  1470  07B3                     	;# 
  1471  07B4                     	;# 
  1472  07B5                     	;# 
  1473  07B6                     	;# 
  1474  07B7                     	;# 
  1475  0FE4                     	;# 
  1476  0FE5                     	;# 
  1477  0FE6                     	;# 
  1478  0FE7                     	;# 
  1479  0FE8                     	;# 
  1480  0FE9                     	;# 
  1481  0FEA                     	;# 
  1482  0FEB                     	;# 
  1483  0FED                     	;# 
  1484  0FEE                     	;# 
  1485  0FEF                     	;# 
  1486  0000                     	;# 
  1487  0001                     	;# 
  1488  0002                     	;# 
  1489  0003                     	;# 
  1490  0004                     	;# 
  1491  0005                     	;# 
  1492  0006                     	;# 
  1493  0007                     	;# 
  1494  0008                     	;# 
  1495  0009                     	;# 
  1496  000A                     	;# 
  1497  000B                     	;# 
  1498  000C                     	;# 
  1499  000D                     	;# 
  1500  000E                     	;# 
  1501  000F                     	;# 
  1502  0010                     	;# 
  1503  0011                     	;# 
  1504  0012                     	;# 
  1505  0013                     	;# 
  1506  0014                     	;# 
  1507  0015                     	;# 
  1508  0016                     	;# 
  1509  0016                     	;# 
  1510  0017                     	;# 
  1511  0018                     	;# 
  1512  0019                     	;# 
  1513  001A                     	;# 
  1514  001B                     	;# 
  1515  001C                     	;# 
  1516  001E                     	;# 
  1517  001F                     	;# 
  1518  008C                     	;# 
  1519  008D                     	;# 
  1520  008E                     	;# 
  1521  008F                     	;# 
  1522  0090                     	;# 
  1523  0091                     	;# 
  1524  0092                     	;# 
  1525  0093                     	;# 
  1526  0094                     	;# 
  1527  0095                     	;# 
  1528  0096                     	;# 
  1529  0097                     	;# 
  1530  0098                     	;# 
  1531  0099                     	;# 
  1532  009A                     	;# 
  1533  009B                     	;# 
  1534  009B                     	;# 
  1535  009C                     	;# 
  1536  009D                     	;# 
  1537  009E                     	;# 
  1538  010C                     	;# 
  1539  010D                     	;# 
  1540  010E                     	;# 
  1541  010F                     	;# 
  1542  0110                     	;# 
  1543  0111                     	;# 
  1544  0112                     	;# 
  1545  0113                     	;# 
  1546  0114                     	;# 
  1547  0115                     	;# 
  1548  0116                     	;# 
  1549  0117                     	;# 
  1550  0118                     	;# 
  1551  0119                     	;# 
  1552  011A                     	;# 
  1553  011B                     	;# 
  1554  011D                     	;# 
  1555  011E                     	;# 
  1556  011F                     	;# 
  1557  018C                     	;# 
  1558  0190                     	;# 
  1559  0191                     	;# 
  1560  0191                     	;# 
  1561  0192                     	;# 
  1562  0193                     	;# 
  1563  0193                     	;# 
  1564  0193                     	;# 
  1565  0194                     	;# 
  1566  0195                     	;# 
  1567  0196                     	;# 
  1568  0199                     	;# 
  1569  0199                     	;# 
  1570  019A                     	;# 
  1571  019A                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019C                     	;# 
  1577  019C                     	;# 
  1578  019D                     	;# 
  1579  019D                     	;# 
  1580  019E                     	;# 
  1581  019E                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  020D                     	;# 
  1585  0211                     	;# 
  1586  0211                     	;# 
  1587  0212                     	;# 
  1588  0212                     	;# 
  1589  0213                     	;# 
  1590  0213                     	;# 
  1591  0214                     	;# 
  1592  0214                     	;# 
  1593  0215                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0216                     	;# 
  1597  0216                     	;# 
  1598  0217                     	;# 
  1599  0217                     	;# 
  1600  0219                     	;# 
  1601  021A                     	;# 
  1602  021B                     	;# 
  1603  021C                     	;# 
  1604  021D                     	;# 
  1605  021E                     	;# 
  1606  021F                     	;# 
  1607  028C                     	;# 
  1608  028D                     	;# 
  1609  0291                     	;# 
  1610  0291                     	;# 
  1611  0292                     	;# 
  1612  0293                     	;# 
  1613  0294                     	;# 
  1614  0295                     	;# 
  1615  0295                     	;# 
  1616  0296                     	;# 
  1617  0298                     	;# 
  1618  0298                     	;# 
  1619  0299                     	;# 
  1620  029A                     	;# 
  1621  029B                     	;# 
  1622  029C                     	;# 
  1623  029C                     	;# 
  1624  029D                     	;# 
  1625  029E                     	;# 
  1626  029F                     	;# 
  1627  030C                     	;# 
  1628  030D                     	;# 
  1629  0311                     	;# 
  1630  0311                     	;# 
  1631  0312                     	;# 
  1632  0313                     	;# 
  1633  0314                     	;# 
  1634  0315                     	;# 
  1635  0315                     	;# 
  1636  0316                     	;# 
  1637  0318                     	;# 
  1638  0318                     	;# 
  1639  0319                     	;# 
  1640  031A                     	;# 
  1641  031C                     	;# 
  1642  031C                     	;# 
  1643  031D                     	;# 
  1644  031E                     	;# 
  1645  038C                     	;# 
  1646  038D                     	;# 
  1647  0394                     	;# 
  1648  0395                     	;# 
  1649  0396                     	;# 
  1650  040C                     	;# 
  1651  040D                     	;# 
  1652  0415                     	;# 
  1653  0416                     	;# 
  1654  0417                     	;# 
  1655  041C                     	;# 
  1656  041D                     	;# 
  1657  041E                     	;# 
  1658  048D                     	;# 
  1659  0491                     	;# 
  1660  0492                     	;# 
  1661  0493                     	;# 
  1662  0493                     	;# 
  1663  0494                     	;# 
  1664  0495                     	;# 
  1665  0496                     	;# 
  1666  0497                     	;# 
  1667  0791                     	;# 
  1668  0792                     	;# 
  1669  0793                     	;# 
  1670  0794                     	;# 
  1671  0795                     	;# 
  1672  0798                     	;# 
  1673  0799                     	;# 
  1674  079A                     	;# 
  1675  079B                     	;# 
  1676  079C                     	;# 
  1677  079D                     	;# 
  1678  07A0                     	;# 
  1679  07A1                     	;# 
  1680  07A2                     	;# 
  1681  07A3                     	;# 
  1682  07A4                     	;# 
  1683  07A5                     	;# 
  1684  07A6                     	;# 
  1685  07A7                     	;# 
  1686  07A8                     	;# 
  1687  07A9                     	;# 
  1688  07AA                     	;# 
  1689  07AB                     	;# 
  1690  07AC                     	;# 
  1691  07AD                     	;# 
  1692  07AE                     	;# 
  1693  07AF                     	;# 
  1694  07B0                     	;# 
  1695  07B1                     	;# 
  1696  07B2                     	;# 
  1697  07B3                     	;# 
  1698  07B4                     	;# 
  1699  07B5                     	;# 
  1700  07B6                     	;# 
  1701  07B7                     	;# 
  1702  0FE4                     	;# 
  1703  0FE5                     	;# 
  1704  0FE6                     	;# 
  1705  0FE7                     	;# 
  1706  0FE8                     	;# 
  1707  0FE9                     	;# 
  1708  0FEA                     	;# 
  1709  0FEB                     	;# 
  1710  0FED                     	;# 
  1711  0FEE                     	;# 
  1712  0FEF                     	;# 
  1713  0000                     	;# 
  1714  0001                     	;# 
  1715  0002                     	;# 
  1716  0003                     	;# 
  1717  0004                     	;# 
  1718  0005                     	;# 
  1719  0006                     	;# 
  1720  0007                     	;# 
  1721  0008                     	;# 
  1722  0009                     	;# 
  1723  000A                     	;# 
  1724  000B                     	;# 
  1725  000C                     	;# 
  1726  000D                     	;# 
  1727  000E                     	;# 
  1728  000F                     	;# 
  1729  0010                     	;# 
  1730  0011                     	;# 
  1731  0012                     	;# 
  1732  0013                     	;# 
  1733  0014                     	;# 
  1734  0015                     	;# 
  1735  0016                     	;# 
  1736  0016                     	;# 
  1737  0017                     	;# 
  1738  0018                     	;# 
  1739  0019                     	;# 
  1740  001A                     	;# 
  1741  001B                     	;# 
  1742  001C                     	;# 
  1743  001E                     	;# 
  1744  001F                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  008E                     	;# 
  1748  008F                     	;# 
  1749  0090                     	;# 
  1750  0091                     	;# 
  1751  0092                     	;# 
  1752  0093                     	;# 
  1753  0094                     	;# 
  1754  0095                     	;# 
  1755  0096                     	;# 
  1756  0097                     	;# 
  1757  0098                     	;# 
  1758  0099                     	;# 
  1759  009A                     	;# 
  1760  009B                     	;# 
  1761  009B                     	;# 
  1762  009C                     	;# 
  1763  009D                     	;# 
  1764  009E                     	;# 
  1765  010C                     	;# 
  1766  010D                     	;# 
  1767  010E                     	;# 
  1768  010F                     	;# 
  1769  0110                     	;# 
  1770  0111                     	;# 
  1771  0112                     	;# 
  1772  0113                     	;# 
  1773  0114                     	;# 
  1774  0115                     	;# 
  1775  0116                     	;# 
  1776  0117                     	;# 
  1777  0118                     	;# 
  1778  0119                     	;# 
  1779  011A                     	;# 
  1780  011B                     	;# 
  1781  011D                     	;# 
  1782  011E                     	;# 
  1783  011F                     	;# 
  1784  018C                     	;# 
  1785  0190                     	;# 
  1786  0191                     	;# 
  1787  0191                     	;# 
  1788  0192                     	;# 
  1789  0193                     	;# 
  1790  0193                     	;# 
  1791  0193                     	;# 
  1792  0194                     	;# 
  1793  0195                     	;# 
  1794  0196                     	;# 
  1795  0199                     	;# 
  1796  0199                     	;# 
  1797  019A                     	;# 
  1798  019A                     	;# 
  1799  019B                     	;# 
  1800  019B                     	;# 
  1801  019B                     	;# 
  1802  019B                     	;# 
  1803  019C                     	;# 
  1804  019C                     	;# 
  1805  019D                     	;# 
  1806  019D                     	;# 
  1807  019E                     	;# 
  1808  019E                     	;# 
  1809  019F                     	;# 
  1810  019F                     	;# 
  1811  020D                     	;# 
  1812  0211                     	;# 
  1813  0211                     	;# 
  1814  0212                     	;# 
  1815  0212                     	;# 
  1816  0213                     	;# 
  1817  0213                     	;# 
  1818  0214                     	;# 
  1819  0214                     	;# 
  1820  0215                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0216                     	;# 
  1824  0216                     	;# 
  1825  0217                     	;# 
  1826  0217                     	;# 
  1827  0219                     	;# 
  1828  021A                     	;# 
  1829  021B                     	;# 
  1830  021C                     	;# 
  1831  021D                     	;# 
  1832  021E                     	;# 
  1833  021F                     	;# 
  1834  028C                     	;# 
  1835  028D                     	;# 
  1836  0291                     	;# 
  1837  0291                     	;# 
  1838  0292                     	;# 
  1839  0293                     	;# 
  1840  0294                     	;# 
  1841  0295                     	;# 
  1842  0295                     	;# 
  1843  0296                     	;# 
  1844  0298                     	;# 
  1845  0298                     	;# 
  1846  0299                     	;# 
  1847  029A                     	;# 
  1848  029B                     	;# 
  1849  029C                     	;# 
  1850  029C                     	;# 
  1851  029D                     	;# 
  1852  029E                     	;# 
  1853  029F                     	;# 
  1854  030C                     	;# 
  1855  030D                     	;# 
  1856  0311                     	;# 
  1857  0311                     	;# 
  1858  0312                     	;# 
  1859  0313                     	;# 
  1860  0314                     	;# 
  1861  0315                     	;# 
  1862  0315                     	;# 
  1863  0316                     	;# 
  1864  0318                     	;# 
  1865  0318                     	;# 
  1866  0319                     	;# 
  1867  031A                     	;# 
  1868  031C                     	;# 
  1869  031C                     	;# 
  1870  031D                     	;# 
  1871  031E                     	;# 
  1872  038C                     	;# 
  1873  038D                     	;# 
  1874  0394                     	;# 
  1875  0395                     	;# 
  1876  0396                     	;# 
  1877  040C                     	;# 
  1878  040D                     	;# 
  1879  0415                     	;# 
  1880  0416                     	;# 
  1881  0417                     	;# 
  1882  041C                     	;# 
  1883  041D                     	;# 
  1884  041E                     	;# 
  1885  048D                     	;# 
  1886  0491                     	;# 
  1887  0492                     	;# 
  1888  0493                     	;# 
  1889  0493                     	;# 
  1890  0494                     	;# 
  1891  0495                     	;# 
  1892  0496                     	;# 
  1893  0497                     	;# 
  1894  0791                     	;# 
  1895  0792                     	;# 
  1896  0793                     	;# 
  1897  0794                     	;# 
  1898  0795                     	;# 
  1899  0798                     	;# 
  1900  0799                     	;# 
  1901  079A                     	;# 
  1902  079B                     	;# 
  1903  079C                     	;# 
  1904  079D                     	;# 
  1905  07A0                     	;# 
  1906  07A1                     	;# 
  1907  07A2                     	;# 
  1908  07A3                     	;# 
  1909  07A4                     	;# 
  1910  07A5                     	;# 
  1911  07A6                     	;# 
  1912  07A7                     	;# 
  1913  07A8                     	;# 
  1914  07A9                     	;# 
  1915  07AA                     	;# 
  1916  07AB                     	;# 
  1917  07AC                     	;# 
  1918  07AD                     	;# 
  1919  07AE                     	;# 
  1920  07AF                     	;# 
  1921  07B0                     	;# 
  1922  07B1                     	;# 
  1923  07B2                     	;# 
  1924  07B3                     	;# 
  1925  07B4                     	;# 
  1926  07B5                     	;# 
  1927  07B6                     	;# 
  1928  07B7                     	;# 
  1929  0FE4                     	;# 
  1930  0FE5                     	;# 
  1931  0FE6                     	;# 
  1932  0FE7                     	;# 
  1933  0FE8                     	;# 
  1934  0FE9                     	;# 
  1935  0FEA                     	;# 
  1936  0FEB                     	;# 
  1937  0FED                     	;# 
  1938  0FEE                     	;# 
  1939  0FEF                     	;# 
  1940  0000                     	;# 
  1941  0001                     	;# 
  1942  0002                     	;# 
  1943  0003                     	;# 
  1944  0004                     	;# 
  1945  0005                     	;# 
  1946  0006                     	;# 
  1947  0007                     	;# 
  1948  0008                     	;# 
  1949  0009                     	;# 
  1950  000A                     	;# 
  1951  000B                     	;# 
  1952  000C                     	;# 
  1953  000D                     	;# 
  1954  000E                     	;# 
  1955  000F                     	;# 
  1956  0010                     	;# 
  1957  0011                     	;# 
  1958  0012                     	;# 
  1959  0013                     	;# 
  1960  0014                     	;# 
  1961  0015                     	;# 
  1962  0016                     	;# 
  1963  0016                     	;# 
  1964  0017                     	;# 
  1965  0018                     	;# 
  1966  0019                     	;# 
  1967  001A                     	;# 
  1968  001B                     	;# 
  1969  001C                     	;# 
  1970  001E                     	;# 
  1971  001F                     	;# 
  1972  008C                     	;# 
  1973  008D                     	;# 
  1974  008E                     	;# 
  1975  008F                     	;# 
  1976  0090                     	;# 
  1977  0091                     	;# 
  1978  0092                     	;# 
  1979  0093                     	;# 
  1980  0094                     	;# 
  1981  0095                     	;# 
  1982  0096                     	;# 
  1983  0097                     	;# 
  1984  0098                     	;# 
  1985  0099                     	;# 
  1986  009A                     	;# 
  1987  009B                     	;# 
  1988  009B                     	;# 
  1989  009C                     	;# 
  1990  009D                     	;# 
  1991  009E                     	;# 
  1992  010C                     	;# 
  1993  010D                     	;# 
  1994  010E                     	;# 
  1995  010F                     	;# 
  1996  0110                     	;# 
  1997  0111                     	;# 
  1998  0112                     	;# 
  1999  0113                     	;# 
  2000  0114                     	;# 
  2001  0115                     	;# 
  2002  0116                     	;# 
  2003  0117                     	;# 
  2004  0118                     	;# 
  2005  0119                     	;# 
  2006  011A                     	;# 
  2007  011B                     	;# 
  2008  011D                     	;# 
  2009  011E                     	;# 
  2010  011F                     	;# 
  2011  018C                     	;# 
  2012  0190                     	;# 
  2013  0191                     	;# 
  2014  0191                     	;# 
  2015  0192                     	;# 
  2016  0193                     	;# 
  2017  0193                     	;# 
  2018  0193                     	;# 
  2019  0194                     	;# 
  2020  0195                     	;# 
  2021  0196                     	;# 
  2022  0199                     	;# 
  2023  0199                     	;# 
  2024  019A                     	;# 
  2025  019A                     	;# 
  2026  019B                     	;# 
  2027  019B                     	;# 
  2028  019B                     	;# 
  2029  019B                     	;# 
  2030  019C                     	;# 
  2031  019C                     	;# 
  2032  019D                     	;# 
  2033  019D                     	;# 
  2034  019E                     	;# 
  2035  019E                     	;# 
  2036  019F                     	;# 
  2037  019F                     	;# 
  2038  020D                     	;# 
  2039  0211                     	;# 
  2040  0211                     	;# 
  2041  0212                     	;# 
  2042  0212                     	;# 
  2043  0213                     	;# 
  2044  0213                     	;# 
  2045  0214                     	;# 
  2046  0214                     	;# 
  2047  0215                     	;# 
  2048  0215                     	;# 
  2049  0215                     	;# 
  2050  0216                     	;# 
  2051  0216                     	;# 
  2052  0217                     	;# 
  2053  0217                     	;# 
  2054  0219                     	;# 
  2055  021A                     	;# 
  2056  021B                     	;# 
  2057  021C                     	;# 
  2058  021D                     	;# 
  2059  021E                     	;# 
  2060  021F                     	;# 
  2061  028C                     	;# 
  2062  028D                     	;# 
  2063  0291                     	;# 
  2064  0291                     	;# 
  2065  0292                     	;# 
  2066  0293                     	;# 
  2067  0294                     	;# 
  2068  0295                     	;# 
  2069  0295                     	;# 
  2070  0296                     	;# 
  2071  0298                     	;# 
  2072  0298                     	;# 
  2073  0299                     	;# 
  2074  029A                     	;# 
  2075  029B                     	;# 
  2076  029C                     	;# 
  2077  029C                     	;# 
  2078  029D                     	;# 
  2079  029E                     	;# 
  2080  029F                     	;# 
  2081  030C                     	;# 
  2082  030D                     	;# 
  2083  0311                     	;# 
  2084  0311                     	;# 
  2085  0312                     	;# 
  2086  0313                     	;# 
  2087  0314                     	;# 
  2088  0315                     	;# 
  2089  0315                     	;# 
  2090  0316                     	;# 
  2091  0318                     	;# 
  2092  0318                     	;# 
  2093  0319                     	;# 
  2094  031A                     	;# 
  2095  031C                     	;# 
  2096  031C                     	;# 
  2097  031D                     	;# 
  2098  031E                     	;# 
  2099  038C                     	;# 
  2100  038D                     	;# 
  2101  0394                     	;# 
  2102  0395                     	;# 
  2103  0396                     	;# 
  2104  040C                     	;# 
  2105  040D                     	;# 
  2106  0415                     	;# 
  2107  0416                     	;# 
  2108  0417                     	;# 
  2109  041C                     	;# 
  2110  041D                     	;# 
  2111  041E                     	;# 
  2112  048D                     	;# 
  2113  0491                     	;# 
  2114  0492                     	;# 
  2115  0493                     	;# 
  2116  0493                     	;# 
  2117  0494                     	;# 
  2118  0495                     	;# 
  2119  0496                     	;# 
  2120  0497                     	;# 
  2121  0791                     	;# 
  2122  0792                     	;# 
  2123  0793                     	;# 
  2124  0794                     	;# 
  2125  0795                     	;# 
  2126  0798                     	;# 
  2127  0799                     	;# 
  2128  079A                     	;# 
  2129  079B                     	;# 
  2130  079C                     	;# 
  2131  079D                     	;# 
  2132  07A0                     	;# 
  2133  07A1                     	;# 
  2134  07A2                     	;# 
  2135  07A3                     	;# 
  2136  07A4                     	;# 
  2137  07A5                     	;# 
  2138  07A6                     	;# 
  2139  07A7                     	;# 
  2140  07A8                     	;# 
  2141  07A9                     	;# 
  2142  07AA                     	;# 
  2143  07AB                     	;# 
  2144  07AC                     	;# 
  2145  07AD                     	;# 
  2146  07AE                     	;# 
  2147  07AF                     	;# 
  2148  07B0                     	;# 
  2149  07B1                     	;# 
  2150  07B2                     	;# 
  2151  07B3                     	;# 
  2152  07B4                     	;# 
  2153  07B5                     	;# 
  2154  07B6                     	;# 
  2155  07B7                     	;# 
  2156  0FE4                     	;# 
  2157  0FE5                     	;# 
  2158  0FE6                     	;# 
  2159  0FE7                     	;# 
  2160  0FE8                     	;# 
  2161  0FE9                     	;# 
  2162  0FEA                     	;# 
  2163  0FEB                     	;# 
  2164  0FED                     	;# 
  2165  0FEE                     	;# 
  2166  0FEF                     	;# 
  2167  0000                     	;# 
  2168  0001                     	;# 
  2169  0002                     	;# 
  2170  0003                     	;# 
  2171  0004                     	;# 
  2172  0005                     	;# 
  2173  0006                     	;# 
  2174  0007                     	;# 
  2175  0008                     	;# 
  2176  0009                     	;# 
  2177  000A                     	;# 
  2178  000B                     	;# 
  2179  000C                     	;# 
  2180  000D                     	;# 
  2181  000E                     	;# 
  2182  000F                     	;# 
  2183  0010                     	;# 
  2184  0011                     	;# 
  2185  0012                     	;# 
  2186  0013                     	;# 
  2187  0014                     	;# 
  2188  0015                     	;# 
  2189  0016                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  0019                     	;# 
  2194  001A                     	;# 
  2195  001B                     	;# 
  2196  001C                     	;# 
  2197  001E                     	;# 
  2198  001F                     	;# 
  2199  008C                     	;# 
  2200  008D                     	;# 
  2201  008E                     	;# 
  2202  008F                     	;# 
  2203  0090                     	;# 
  2204  0091                     	;# 
  2205  0092                     	;# 
  2206  0093                     	;# 
  2207  0094                     	;# 
  2208  0095                     	;# 
  2209  0096                     	;# 
  2210  0097                     	;# 
  2211  0098                     	;# 
  2212  0099                     	;# 
  2213  009A                     	;# 
  2214  009B                     	;# 
  2215  009B                     	;# 
  2216  009C                     	;# 
  2217  009D                     	;# 
  2218  009E                     	;# 
  2219  010C                     	;# 
  2220  010D                     	;# 
  2221  010E                     	;# 
  2222  010F                     	;# 
  2223  0110                     	;# 
  2224  0111                     	;# 
  2225  0112                     	;# 
  2226  0113                     	;# 
  2227  0114                     	;# 
  2228  0115                     	;# 
  2229  0116                     	;# 
  2230  0117                     	;# 
  2231  0118                     	;# 
  2232  0119                     	;# 
  2233  011A                     	;# 
  2234  011B                     	;# 
  2235  011D                     	;# 
  2236  011E                     	;# 
  2237  011F                     	;# 
  2238  018C                     	;# 
  2239  0190                     	;# 
  2240  0191                     	;# 
  2241  0191                     	;# 
  2242  0192                     	;# 
  2243  0193                     	;# 
  2244  0193                     	;# 
  2245  0193                     	;# 
  2246  0194                     	;# 
  2247  0195                     	;# 
  2248  0196                     	;# 
  2249  0199                     	;# 
  2250  0199                     	;# 
  2251  019A                     	;# 
  2252  019A                     	;# 
  2253  019B                     	;# 
  2254  019B                     	;# 
  2255  019B                     	;# 
  2256  019B                     	;# 
  2257  019C                     	;# 
  2258  019C                     	;# 
  2259  019D                     	;# 
  2260  019D                     	;# 
  2261  019E                     	;# 
  2262  019E                     	;# 
  2263  019F                     	;# 
  2264  019F                     	;# 
  2265  020D                     	;# 
  2266  0211                     	;# 
  2267  0211                     	;# 
  2268  0212                     	;# 
  2269  0212                     	;# 
  2270  0213                     	;# 
  2271  0213                     	;# 
  2272  0214                     	;# 
  2273  0214                     	;# 
  2274  0215                     	;# 
  2275  0215                     	;# 
  2276  0215                     	;# 
  2277  0216                     	;# 
  2278  0216                     	;# 
  2279  0217                     	;# 
  2280  0217                     	;# 
  2281  0219                     	;# 
  2282  021A                     	;# 
  2283  021B                     	;# 
  2284  021C                     	;# 
  2285  021D                     	;# 
  2286  021E                     	;# 
  2287  021F                     	;# 
  2288  028C                     	;# 
  2289  028D                     	;# 
  2290  0291                     	;# 
  2291  0291                     	;# 
  2292  0292                     	;# 
  2293  0293                     	;# 
  2294  0294                     	;# 
  2295  0295                     	;# 
  2296  0295                     	;# 
  2297  0296                     	;# 
  2298  0298                     	;# 
  2299  0298                     	;# 
  2300  0299                     	;# 
  2301  029A                     	;# 
  2302  029B                     	;# 
  2303  029C                     	;# 
  2304  029C                     	;# 
  2305  029D                     	;# 
  2306  029E                     	;# 
  2307  029F                     	;# 
  2308  030C                     	;# 
  2309  030D                     	;# 
  2310  0311                     	;# 
  2311  0311                     	;# 
  2312  0312                     	;# 
  2313  0313                     	;# 
  2314  0314                     	;# 
  2315  0315                     	;# 
  2316  0315                     	;# 
  2317  0316                     	;# 
  2318  0318                     	;# 
  2319  0318                     	;# 
  2320  0319                     	;# 
  2321  031A                     	;# 
  2322  031C                     	;# 
  2323  031C                     	;# 
  2324  031D                     	;# 
  2325  031E                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  0394                     	;# 
  2329  0395                     	;# 
  2330  0396                     	;# 
  2331  040C                     	;# 
  2332  040D                     	;# 
  2333  0415                     	;# 
  2334  0416                     	;# 
  2335  0417                     	;# 
  2336  041C                     	;# 
  2337  041D                     	;# 
  2338  041E                     	;# 
  2339  048D                     	;# 
  2340  0491                     	;# 
  2341  0492                     	;# 
  2342  0493                     	;# 
  2343  0493                     	;# 
  2344  0494                     	;# 
  2345  0495                     	;# 
  2346  0496                     	;# 
  2347  0497                     	;# 
  2348  0791                     	;# 
  2349  0792                     	;# 
  2350  0793                     	;# 
  2351  0794                     	;# 
  2352  0795                     	;# 
  2353  0798                     	;# 
  2354  0799                     	;# 
  2355  079A                     	;# 
  2356  079B                     	;# 
  2357  079C                     	;# 
  2358  079D                     	;# 
  2359  07A0                     	;# 
  2360  07A1                     	;# 
  2361  07A2                     	;# 
  2362  07A3                     	;# 
  2363  07A4                     	;# 
  2364  07A5                     	;# 
  2365  07A6                     	;# 
  2366  07A7                     	;# 
  2367  07A8                     	;# 
  2368  07A9                     	;# 
  2369  07AA                     	;# 
  2370  07AB                     	;# 
  2371  07AC                     	;# 
  2372  07AD                     	;# 
  2373  07AE                     	;# 
  2374  07AF                     	;# 
  2375  07B0                     	;# 
  2376  07B1                     	;# 
  2377  07B2                     	;# 
  2378  07B3                     	;# 
  2379  07B4                     	;# 
  2380  07B5                     	;# 
  2381  07B6                     	;# 
  2382  07B7                     	;# 
  2383  0FE4                     	;# 
  2384  0FE5                     	;# 
  2385  0FE6                     	;# 
  2386  0FE7                     	;# 
  2387  0FE8                     	;# 
  2388  0FE9                     	;# 
  2389  0FEA                     	;# 
  2390  0FEB                     	;# 
  2391  0FED                     	;# 
  2392  0FEE                     	;# 
  2393  0FEF                     	;# 
  2394  0000                     	;# 
  2395  0001                     	;# 
  2396  0002                     	;# 
  2397  0003                     	;# 
  2398  0004                     	;# 
  2399  0005                     	;# 
  2400  0006                     	;# 
  2401  0007                     	;# 
  2402  0008                     	;# 
  2403  0009                     	;# 
  2404  000A                     	;# 
  2405  000B                     	;# 
  2406  000C                     	;# 
  2407  000D                     	;# 
  2408  000E                     	;# 
  2409  000F                     	;# 
  2410  0010                     	;# 
  2411  0011                     	;# 
  2412  0012                     	;# 
  2413  0013                     	;# 
  2414  0014                     	;# 
  2415  0015                     	;# 
  2416  0016                     	;# 
  2417  0016                     	;# 
  2418  0017                     	;# 
  2419  0018                     	;# 
  2420  0019                     	;# 
  2421  001A                     	;# 
  2422  001B                     	;# 
  2423  001C                     	;# 
  2424  001E                     	;# 
  2425  001F                     	;# 
  2426  008C                     	;# 
  2427  008D                     	;# 
  2428  008E                     	;# 
  2429  008F                     	;# 
  2430  0090                     	;# 
  2431  0091                     	;# 
  2432  0092                     	;# 
  2433  0093                     	;# 
  2434  0094                     	;# 
  2435  0095                     	;# 
  2436  0096                     	;# 
  2437  0097                     	;# 
  2438  0098                     	;# 
  2439  0099                     	;# 
  2440  009A                     	;# 
  2441  009B                     	;# 
  2442  009B                     	;# 
  2443  009C                     	;# 
  2444  009D                     	;# 
  2445  009E                     	;# 
  2446  010C                     	;# 
  2447  010D                     	;# 
  2448  010E                     	;# 
  2449  010F                     	;# 
  2450  0110                     	;# 
  2451  0111                     	;# 
  2452  0112                     	;# 
  2453  0113                     	;# 
  2454  0114                     	;# 
  2455  0115                     	;# 
  2456  0116                     	;# 
  2457  0117                     	;# 
  2458  0118                     	;# 
  2459  0119                     	;# 
  2460  011A                     	;# 
  2461  011B                     	;# 
  2462  011D                     	;# 
  2463  011E                     	;# 
  2464  011F                     	;# 
  2465  018C                     	;# 
  2466  0190                     	;# 
  2467  0191                     	;# 
  2468  0191                     	;# 
  2469  0192                     	;# 
  2470  0193                     	;# 
  2471  0193                     	;# 
  2472  0193                     	;# 
  2473  0194                     	;# 
  2474  0195                     	;# 
  2475  0196                     	;# 
  2476  0199                     	;# 
  2477  0199                     	;# 
  2478  019A                     	;# 
  2479  019A                     	;# 
  2480  019B                     	;# 
  2481  019B                     	;# 
  2482  019B                     	;# 
  2483  019B                     	;# 
  2484  019C                     	;# 
  2485  019C                     	;# 
  2486  019D                     	;# 
  2487  019D                     	;# 
  2488  019E                     	;# 
  2489  019E                     	;# 
  2490  019F                     	;# 
  2491  019F                     	;# 
  2492  020D                     	;# 
  2493  0211                     	;# 
  2494  0211                     	;# 
  2495  0212                     	;# 
  2496  0212                     	;# 
  2497  0213                     	;# 
  2498  0213                     	;# 
  2499  0214                     	;# 
  2500  0214                     	;# 
  2501  0215                     	;# 
  2502  0215                     	;# 
  2503  0215                     	;# 
  2504  0216                     	;# 
  2505  0216                     	;# 
  2506  0217                     	;# 
  2507  0217                     	;# 
  2508  0219                     	;# 
  2509  021A                     	;# 
  2510  021B                     	;# 
  2511  021C                     	;# 
  2512  021D                     	;# 
  2513  021E                     	;# 
  2514  021F                     	;# 
  2515  028C                     	;# 
  2516  028D                     	;# 
  2517  0291                     	;# 
  2518  0291                     	;# 
  2519  0292                     	;# 
  2520  0293                     	;# 
  2521  0294                     	;# 
  2522  0295                     	;# 
  2523  0295                     	;# 
  2524  0296                     	;# 
  2525  0298                     	;# 
  2526  0298                     	;# 
  2527  0299                     	;# 
  2528  029A                     	;# 
  2529  029B                     	;# 
  2530  029C                     	;# 
  2531  029C                     	;# 
  2532  029D                     	;# 
  2533  029E                     	;# 
  2534  029F                     	;# 
  2535  030C                     	;# 
  2536  030D                     	;# 
  2537  0311                     	;# 
  2538  0311                     	;# 
  2539  0312                     	;# 
  2540  0313                     	;# 
  2541  0314                     	;# 
  2542  0315                     	;# 
  2543  0315                     	;# 
  2544  0316                     	;# 
  2545  0318                     	;# 
  2546  0318                     	;# 
  2547  0319                     	;# 
  2548  031A                     	;# 
  2549  031C                     	;# 
  2550  031C                     	;# 
  2551  031D                     	;# 
  2552  031E                     	;# 
  2553  038C                     	;# 
  2554  038D                     	;# 
  2555  0394                     	;# 
  2556  0395                     	;# 
  2557  0396                     	;# 
  2558  040C                     	;# 
  2559  040D                     	;# 
  2560  0415                     	;# 
  2561  0416                     	;# 
  2562  0417                     	;# 
  2563  041C                     	;# 
  2564  041D                     	;# 
  2565  041E                     	;# 
  2566  048D                     	;# 
  2567  0491                     	;# 
  2568  0492                     	;# 
  2569  0493                     	;# 
  2570  0493                     	;# 
  2571  0494                     	;# 
  2572  0495                     	;# 
  2573  0496                     	;# 
  2574  0497                     	;# 
  2575  0791                     	;# 
  2576  0792                     	;# 
  2577  0793                     	;# 
  2578  0794                     	;# 
  2579  0795                     	;# 
  2580  0798                     	;# 
  2581  0799                     	;# 
  2582  079A                     	;# 
  2583  079B                     	;# 
  2584  079C                     	;# 
  2585  079D                     	;# 
  2586  07A0                     	;# 
  2587  07A1                     	;# 
  2588  07A2                     	;# 
  2589  07A3                     	;# 
  2590  07A4                     	;# 
  2591  07A5                     	;# 
  2592  07A6                     	;# 
  2593  07A7                     	;# 
  2594  07A8                     	;# 
  2595  07A9                     	;# 
  2596  07AA                     	;# 
  2597  07AB                     	;# 
  2598  07AC                     	;# 
  2599  07AD                     	;# 
  2600  07AE                     	;# 
  2601  07AF                     	;# 
  2602  07B0                     	;# 
  2603  07B1                     	;# 
  2604  07B2                     	;# 
  2605  07B3                     	;# 
  2606  07B4                     	;# 
  2607  07B5                     	;# 
  2608  07B6                     	;# 
  2609  07B7                     	;# 
  2610  0FE4                     	;# 
  2611  0FE5                     	;# 
  2612  0FE6                     	;# 
  2613  0FE7                     	;# 
  2614  0FE8                     	;# 
  2615  0FE9                     	;# 
  2616  0FEA                     	;# 
  2617  0FEB                     	;# 
  2618  0FED                     	;# 
  2619  0FEE                     	;# 
  2620  0FEF                     	;# 
  2621  0000                     	;# 
  2622  0001                     	;# 
  2623  0002                     	;# 
  2624  0003                     	;# 
  2625  0004                     	;# 
  2626  0005                     	;# 
  2627  0006                     	;# 
  2628  0007                     	;# 
  2629  0008                     	;# 
  2630  0009                     	;# 
  2631  000A                     	;# 
  2632  000B                     	;# 
  2633  000C                     	;# 
  2634  000D                     	;# 
  2635  000E                     	;# 
  2636  000F                     	;# 
  2637  0010                     	;# 
  2638  0011                     	;# 
  2639  0012                     	;# 
  2640  0013                     	;# 
  2641  0014                     	;# 
  2642  0015                     	;# 
  2643  0016                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  0019                     	;# 
  2648  001A                     	;# 
  2649  001B                     	;# 
  2650  001C                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008D                     	;# 
  2655  008E                     	;# 
  2656  008F                     	;# 
  2657  0090                     	;# 
  2658  0091                     	;# 
  2659  0092                     	;# 
  2660  0093                     	;# 
  2661  0094                     	;# 
  2662  0095                     	;# 
  2663  0096                     	;# 
  2664  0097                     	;# 
  2665  0098                     	;# 
  2666  0099                     	;# 
  2667  009A                     	;# 
  2668  009B                     	;# 
  2669  009B                     	;# 
  2670  009C                     	;# 
  2671  009D                     	;# 
  2672  009E                     	;# 
  2673  010C                     	;# 
  2674  010D                     	;# 
  2675  010E                     	;# 
  2676  010F                     	;# 
  2677  0110                     	;# 
  2678  0111                     	;# 
  2679  0112                     	;# 
  2680  0113                     	;# 
  2681  0114                     	;# 
  2682  0115                     	;# 
  2683  0116                     	;# 
  2684  0117                     	;# 
  2685  0118                     	;# 
  2686  0119                     	;# 
  2687  011A                     	;# 
  2688  011B                     	;# 
  2689  011D                     	;# 
  2690  011E                     	;# 
  2691  011F                     	;# 
  2692  018C                     	;# 
  2693  0190                     	;# 
  2694  0191                     	;# 
  2695  0191                     	;# 
  2696  0192                     	;# 
  2697  0193                     	;# 
  2698  0193                     	;# 
  2699  0193                     	;# 
  2700  0194                     	;# 
  2701  0195                     	;# 
  2702  0196                     	;# 
  2703  0199                     	;# 
  2704  0199                     	;# 
  2705  019A                     	;# 
  2706  019A                     	;# 
  2707  019B                     	;# 
  2708  019B                     	;# 
  2709  019B                     	;# 
  2710  019B                     	;# 
  2711  019C                     	;# 
  2712  019C                     	;# 
  2713  019D                     	;# 
  2714  019D                     	;# 
  2715  019E                     	;# 
  2716  019E                     	;# 
  2717  019F                     	;# 
  2718  019F                     	;# 
  2719  020D                     	;# 
  2720  0211                     	;# 
  2721  0211                     	;# 
  2722  0212                     	;# 
  2723  0212                     	;# 
  2724  0213                     	;# 
  2725  0213                     	;# 
  2726  0214                     	;# 
  2727  0214                     	;# 
  2728  0215                     	;# 
  2729  0215                     	;# 
  2730  0215                     	;# 
  2731  0216                     	;# 
  2732  0216                     	;# 
  2733  0217                     	;# 
  2734  0217                     	;# 
  2735  0219                     	;# 
  2736  021A                     	;# 
  2737  021B                     	;# 
  2738  021C                     	;# 
  2739  021D                     	;# 
  2740  021E                     	;# 
  2741  021F                     	;# 
  2742  028C                     	;# 
  2743  028D                     	;# 
  2744  0291                     	;# 
  2745  0291                     	;# 
  2746  0292                     	;# 
  2747  0293                     	;# 
  2748  0294                     	;# 
  2749  0295                     	;# 
  2750  0295                     	;# 
  2751  0296                     	;# 
  2752  0298                     	;# 
  2753  0298                     	;# 
  2754  0299                     	;# 
  2755  029A                     	;# 
  2756  029B                     	;# 
  2757  029C                     	;# 
  2758  029C                     	;# 
  2759  029D                     	;# 
  2760  029E                     	;# 
  2761  029F                     	;# 
  2762  030C                     	;# 
  2763  030D                     	;# 
  2764  0311                     	;# 
  2765  0311                     	;# 
  2766  0312                     	;# 
  2767  0313                     	;# 
  2768  0314                     	;# 
  2769  0315                     	;# 
  2770  0315                     	;# 
  2771  0316                     	;# 
  2772  0318                     	;# 
  2773  0318                     	;# 
  2774  0319                     	;# 
  2775  031A                     	;# 
  2776  031C                     	;# 
  2777  031C                     	;# 
  2778  031D                     	;# 
  2779  031E                     	;# 
  2780  038C                     	;# 
  2781  038D                     	;# 
  2782  0394                     	;# 
  2783  0395                     	;# 
  2784  0396                     	;# 
  2785  040C                     	;# 
  2786  040D                     	;# 
  2787  0415                     	;# 
  2788  0416                     	;# 
  2789  0417                     	;# 
  2790  041C                     	;# 
  2791  041D                     	;# 
  2792  041E                     	;# 
  2793  048D                     	;# 
  2794  0491                     	;# 
  2795  0492                     	;# 
  2796  0493                     	;# 
  2797  0493                     	;# 
  2798  0494                     	;# 
  2799  0495                     	;# 
  2800  0496                     	;# 
  2801  0497                     	;# 
  2802  0791                     	;# 
  2803  0792                     	;# 
  2804  0793                     	;# 
  2805  0794                     	;# 
  2806  0795                     	;# 
  2807  0798                     	;# 
  2808  0799                     	;# 
  2809  079A                     	;# 
  2810  079B                     	;# 
  2811  079C                     	;# 
  2812  079D                     	;# 
  2813  07A0                     	;# 
  2814  07A1                     	;# 
  2815  07A2                     	;# 
  2816  07A3                     	;# 
  2817  07A4                     	;# 
  2818  07A5                     	;# 
  2819  07A6                     	;# 
  2820  07A7                     	;# 
  2821  07A8                     	;# 
  2822  07A9                     	;# 
  2823  07AA                     	;# 
  2824  07AB                     	;# 
  2825  07AC                     	;# 
  2826  07AD                     	;# 
  2827  07AE                     	;# 
  2828  07AF                     	;# 
  2829  07B0                     	;# 
  2830  07B1                     	;# 
  2831  07B2                     	;# 
  2832  07B3                     	;# 
  2833  07B4                     	;# 
  2834  07B5                     	;# 
  2835  07B6                     	;# 
  2836  07B7                     	;# 
  2837  0FE4                     	;# 
  2838  0FE5                     	;# 
  2839  0FE6                     	;# 
  2840  0FE7                     	;# 
  2841  0FE8                     	;# 
  2842  0FE9                     	;# 
  2843  0FEA                     	;# 
  2844  0FEB                     	;# 
  2845  0FED                     	;# 
  2846  0FEE                     	;# 
  2847  0FEF                     	;# 
  2848  0000                     	;# 
  2849  0001                     	;# 
  2850  0002                     	;# 
  2851  0003                     	;# 
  2852  0004                     	;# 
  2853  0005                     	;# 
  2854  0006                     	;# 
  2855  0007                     	;# 
  2856  0008                     	;# 
  2857  0009                     	;# 
  2858  000A                     	;# 
  2859  000B                     	;# 
  2860  000C                     	;# 
  2861  000D                     	;# 
  2862  000E                     	;# 
  2863  000F                     	;# 
  2864  0010                     	;# 
  2865  0011                     	;# 
  2866  0012                     	;# 
  2867  0013                     	;# 
  2868  0014                     	;# 
  2869  0015                     	;# 
  2870  0016                     	;# 
  2871  0016                     	;# 
  2872  0017                     	;# 
  2873  0018                     	;# 
  2874  0019                     	;# 
  2875  001A                     	;# 
  2876  001B                     	;# 
  2877  001C                     	;# 
  2878  001E                     	;# 
  2879  001F                     	;# 
  2880  008C                     	;# 
  2881  008D                     	;# 
  2882  008E                     	;# 
  2883  008F                     	;# 
  2884  0090                     	;# 
  2885  0091                     	;# 
  2886  0092                     	;# 
  2887  0093                     	;# 
  2888  0094                     	;# 
  2889  0095                     	;# 
  2890  0096                     	;# 
  2891  0097                     	;# 
  2892  0098                     	;# 
  2893  0099                     	;# 
  2894  009A                     	;# 
  2895  009B                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009E                     	;# 
  2900  010C                     	;# 
  2901  010D                     	;# 
  2902  010E                     	;# 
  2903  010F                     	;# 
  2904  0110                     	;# 
  2905  0111                     	;# 
  2906  0112                     	;# 
  2907  0113                     	;# 
  2908  0114                     	;# 
  2909  0115                     	;# 
  2910  0116                     	;# 
  2911  0117                     	;# 
  2912  0118                     	;# 
  2913  0119                     	;# 
  2914  011A                     	;# 
  2915  011B                     	;# 
  2916  011D                     	;# 
  2917  011E                     	;# 
  2918  011F                     	;# 
  2919  018C                     	;# 
  2920  0190                     	;# 
  2921  0191                     	;# 
  2922  0191                     	;# 
  2923  0192                     	;# 
  2924  0193                     	;# 
  2925  0193                     	;# 
  2926  0193                     	;# 
  2927  0194                     	;# 
  2928  0195                     	;# 
  2929  0196                     	;# 
  2930  0199                     	;# 
  2931  0199                     	;# 
  2932  019A                     	;# 
  2933  019A                     	;# 
  2934  019B                     	;# 
  2935  019B                     	;# 
  2936  019B                     	;# 
  2937  019B                     	;# 
  2938  019C                     	;# 
  2939  019C                     	;# 
  2940  019D                     	;# 
  2941  019D                     	;# 
  2942  019E                     	;# 
  2943  019E                     	;# 
  2944  019F                     	;# 
  2945  019F                     	;# 
  2946  020D                     	;# 
  2947  0211                     	;# 
  2948  0211                     	;# 
  2949  0212                     	;# 
  2950  0212                     	;# 
  2951  0213                     	;# 
  2952  0213                     	;# 
  2953  0214                     	;# 
  2954  0214                     	;# 
  2955  0215                     	;# 
  2956  0215                     	;# 
  2957  0215                     	;# 
  2958  0216                     	;# 
  2959  0216                     	;# 
  2960  0217                     	;# 
  2961  0217                     	;# 
  2962  0219                     	;# 
  2963  021A                     	;# 
  2964  021B                     	;# 
  2965  021C                     	;# 
  2966  021D                     	;# 
  2967  021E                     	;# 
  2968  021F                     	;# 
  2969  028C                     	;# 
  2970  028D                     	;# 
  2971  0291                     	;# 
  2972  0291                     	;# 
  2973  0292                     	;# 
  2974  0293                     	;# 
  2975  0294                     	;# 
  2976  0295                     	;# 
  2977  0295                     	;# 
  2978  0296                     	;# 
  2979  0298                     	;# 
  2980  0298                     	;# 
  2981  0299                     	;# 
  2982  029A                     	;# 
  2983  029B                     	;# 
  2984  029C                     	;# 
  2985  029C                     	;# 
  2986  029D                     	;# 
  2987  029E                     	;# 
  2988  029F                     	;# 
  2989  030C                     	;# 
  2990  030D                     	;# 
  2991  0311                     	;# 
  2992  0311                     	;# 
  2993  0312                     	;# 
  2994  0313                     	;# 
  2995  0314                     	;# 
  2996  0315                     	;# 
  2997  0315                     	;# 
  2998  0316                     	;# 
  2999  0318                     	;# 
  3000  0318                     	;# 
  3001  0319                     	;# 
  3002  031A                     	;# 
  3003  031C                     	;# 
  3004  031C                     	;# 
  3005  031D                     	;# 
  3006  031E                     	;# 
  3007  038C                     	;# 
  3008  038D                     	;# 
  3009  0394                     	;# 
  3010  0395                     	;# 
  3011  0396                     	;# 
  3012  040C                     	;# 
  3013  040D                     	;# 
  3014  0415                     	;# 
  3015  0416                     	;# 
  3016  0417                     	;# 
  3017  041C                     	;# 
  3018  041D                     	;# 
  3019  041E                     	;# 
  3020  048D                     	;# 
  3021  0491                     	;# 
  3022  0492                     	;# 
  3023  0493                     	;# 
  3024  0493                     	;# 
  3025  0494                     	;# 
  3026  0495                     	;# 
  3027  0496                     	;# 
  3028  0497                     	;# 
  3029  0791                     	;# 
  3030  0792                     	;# 
  3031  0793                     	;# 
  3032  0794                     	;# 
  3033  0795                     	;# 
  3034  0798                     	;# 
  3035  0799                     	;# 
  3036  079A                     	;# 
  3037  079B                     	;# 
  3038  079C                     	;# 
  3039  079D                     	;# 
  3040  07A0                     	;# 
  3041  07A1                     	;# 
  3042  07A2                     	;# 
  3043  07A3                     	;# 
  3044  07A4                     	;# 
  3045  07A5                     	;# 
  3046  07A6                     	;# 
  3047  07A7                     	;# 
  3048  07A8                     	;# 
  3049  07A9                     	;# 
  3050  07AA                     	;# 
  3051  07AB                     	;# 
  3052  07AC                     	;# 
  3053  07AD                     	;# 
  3054  07AE                     	;# 
  3055  07AF                     	;# 
  3056  07B0                     	;# 
  3057  07B1                     	;# 
  3058  07B2                     	;# 
  3059  07B3                     	;# 
  3060  07B4                     	;# 
  3061  07B5                     	;# 
  3062  07B6                     	;# 
  3063  07B7                     	;# 
  3064  0FE4                     	;# 
  3065  0FE5                     	;# 
  3066  0FE6                     	;# 
  3067  0FE7                     	;# 
  3068  0FE8                     	;# 
  3069  0FE9                     	;# 
  3070  0FEA                     	;# 
  3071  0FEB                     	;# 
  3072  0FED                     	;# 
  3073  0FEE                     	;# 
  3074  0FEF                     	;# 
  3075  0000                     	;# 
  3076  0001                     	;# 
  3077  0002                     	;# 
  3078  0003                     	;# 
  3079  0004                     	;# 
  3080  0005                     	;# 
  3081  0006                     	;# 
  3082  0007                     	;# 
  3083  0008                     	;# 
  3084  0009                     	;# 
  3085  000A                     	;# 
  3086  000B                     	;# 
  3087  000C                     	;# 
  3088  000D                     	;# 
  3089  000E                     	;# 
  3090  000F                     	;# 
  3091  0010                     	;# 
  3092  0011                     	;# 
  3093  0012                     	;# 
  3094  0013                     	;# 
  3095  0014                     	;# 
  3096  0015                     	;# 
  3097  0016                     	;# 
  3098  0016                     	;# 
  3099  0017                     	;# 
  3100  0018                     	;# 
  3101  0019                     	;# 
  3102  001A                     	;# 
  3103  001B                     	;# 
  3104  001C                     	;# 
  3105  001E                     	;# 
  3106  001F                     	;# 
  3107  008C                     	;# 
  3108  008D                     	;# 
  3109  008E                     	;# 
  3110  008F                     	;# 
  3111  0090                     	;# 
  3112  0091                     	;# 
  3113  0092                     	;# 
  3114  0093                     	;# 
  3115  0094                     	;# 
  3116  0095                     	;# 
  3117  0096                     	;# 
  3118  0097                     	;# 
  3119  0098                     	;# 
  3120  0099                     	;# 
  3121  009A                     	;# 
  3122  009B                     	;# 
  3123  009B                     	;# 
  3124  009C                     	;# 
  3125  009D                     	;# 
  3126  009E                     	;# 
  3127  010C                     	;# 
  3128  010D                     	;# 
  3129  010E                     	;# 
  3130  010F                     	;# 
  3131  0110                     	;# 
  3132  0111                     	;# 
  3133  0112                     	;# 
  3134  0113                     	;# 
  3135  0114                     	;# 
  3136  0115                     	;# 
  3137  0116                     	;# 
  3138  0117                     	;# 
  3139  0118                     	;# 
  3140  0119                     	;# 
  3141  011A                     	;# 
  3142  011B                     	;# 
  3143  011D                     	;# 
  3144  011E                     	;# 
  3145  011F                     	;# 
  3146  018C                     	;# 
  3147  0190                     	;# 
  3148  0191                     	;# 
  3149  0191                     	;# 
  3150  0192                     	;# 
  3151  0193                     	;# 
  3152  0193                     	;# 
  3153  0193                     	;# 
  3154  0194                     	;# 
  3155  0195                     	;# 
  3156  0196                     	;# 
  3157  0199                     	;# 
  3158  0199                     	;# 
  3159  019A                     	;# 
  3160  019A                     	;# 
  3161  019B                     	;# 
  3162  019B                     	;# 
  3163  019B                     	;# 
  3164  019B                     	;# 
  3165  019C                     	;# 
  3166  019C                     	;# 
  3167  019D                     	;# 
  3168  019D                     	;# 
  3169  019E                     	;# 
  3170  019E                     	;# 
  3171  019F                     	;# 
  3172  019F                     	;# 
  3173  020D                     	;# 
  3174  0211                     	;# 
  3175  0211                     	;# 
  3176  0212                     	;# 
  3177  0212                     	;# 
  3178  0213                     	;# 
  3179  0213                     	;# 
  3180  0214                     	;# 
  3181  0214                     	;# 
  3182  0215                     	;# 
  3183  0215                     	;# 
  3184  0215                     	;# 
  3185  0216                     	;# 
  3186  0216                     	;# 
  3187  0217                     	;# 
  3188  0217                     	;# 
  3189  0219                     	;# 
  3190  021A                     	;# 
  3191  021B                     	;# 
  3192  021C                     	;# 
  3193  021D                     	;# 
  3194  021E                     	;# 
  3195  021F                     	;# 
  3196  028C                     	;# 
  3197  028D                     	;# 
  3198  0291                     	;# 
  3199  0291                     	;# 
  3200  0292                     	;# 
  3201  0293                     	;# 
  3202  0294                     	;# 
  3203  0295                     	;# 
  3204  0295                     	;# 
  3205  0296                     	;# 
  3206  0298                     	;# 
  3207  0298                     	;# 
  3208  0299                     	;# 
  3209  029A                     	;# 
  3210  029B                     	;# 
  3211  029C                     	;# 
  3212  029C                     	;# 
  3213  029D                     	;# 
  3214  029E                     	;# 
  3215  029F                     	;# 
  3216  030C                     	;# 
  3217  030D                     	;# 
  3218  0311                     	;# 
  3219  0311                     	;# 
  3220  0312                     	;# 
  3221  0313                     	;# 
  3222  0314                     	;# 
  3223  0315                     	;# 
  3224  0315                     	;# 
  3225  0316                     	;# 
  3226  0318                     	;# 
  3227  0318                     	;# 
  3228  0319                     	;# 
  3229  031A                     	;# 
  3230  031C                     	;# 
  3231  031C                     	;# 
  3232  031D                     	;# 
  3233  031E                     	;# 
  3234  038C                     	;# 
  3235  038D                     	;# 
  3236  0394                     	;# 
  3237  0395                     	;# 
  3238  0396                     	;# 
  3239  040C                     	;# 
  3240  040D                     	;# 
  3241  0415                     	;# 
  3242  0416                     	;# 
  3243  0417                     	;# 
  3244  041C                     	;# 
  3245  041D                     	;# 
  3246  041E                     	;# 
  3247  048D                     	;# 
  3248  0491                     	;# 
  3249  0492                     	;# 
  3250  0493                     	;# 
  3251  0493                     	;# 
  3252  0494                     	;# 
  3253  0495                     	;# 
  3254  0496                     	;# 
  3255  0497                     	;# 
  3256  0791                     	;# 
  3257  0792                     	;# 
  3258  0793                     	;# 
  3259  0794                     	;# 
  3260  0795                     	;# 
  3261  0798                     	;# 
  3262  0799                     	;# 
  3263  079A                     	;# 
  3264  079B                     	;# 
  3265  079C                     	;# 
  3266  079D                     	;# 
  3267  07A0                     	;# 
  3268  07A1                     	;# 
  3269  07A2                     	;# 
  3270  07A3                     	;# 
  3271  07A4                     	;# 
  3272  07A5                     	;# 
  3273  07A6                     	;# 
  3274  07A7                     	;# 
  3275  07A8                     	;# 
  3276  07A9                     	;# 
  3277  07AA                     	;# 
  3278  07AB                     	;# 
  3279  07AC                     	;# 
  3280  07AD                     	;# 
  3281  07AE                     	;# 
  3282  07AF                     	;# 
  3283  07B0                     	;# 
  3284  07B1                     	;# 
  3285  07B2                     	;# 
  3286  07B3                     	;# 
  3287  07B4                     	;# 
  3288  07B5                     	;# 
  3289  07B6                     	;# 
  3290  07B7                     	;# 
  3291  0FE4                     	;# 
  3292  0FE5                     	;# 
  3293  0FE6                     	;# 
  3294  0FE7                     	;# 
  3295  0FE8                     	;# 
  3296  0FE9                     	;# 
  3297  0FEA                     	;# 
  3298  0FEB                     	;# 
  3299  0FED                     	;# 
  3300  0FEE                     	;# 
  3301  0FEF                     	;# 
  3302  0000                     	;# 
  3303  0001                     	;# 
  3304  0002                     	;# 
  3305  0003                     	;# 
  3306  0004                     	;# 
  3307  0005                     	;# 
  3308  0006                     	;# 
  3309  0007                     	;# 
  3310  0008                     	;# 
  3311  0009                     	;# 
  3312  000A                     	;# 
  3313  000B                     	;# 
  3314  000C                     	;# 
  3315  000D                     	;# 
  3316  000E                     	;# 
  3317  000F                     	;# 
  3318  0010                     	;# 
  3319  0011                     	;# 
  3320  0012                     	;# 
  3321  0013                     	;# 
  3322  0014                     	;# 
  3323  0015                     	;# 
  3324  0016                     	;# 
  3325  0016                     	;# 
  3326  0017                     	;# 
  3327  0018                     	;# 
  3328  0019                     	;# 
  3329  001A                     	;# 
  3330  001B                     	;# 
  3331  001C                     	;# 
  3332  001E                     	;# 
  3333  001F                     	;# 
  3334  008C                     	;# 
  3335  008D                     	;# 
  3336  008E                     	;# 
  3337  008F                     	;# 
  3338  0090                     	;# 
  3339  0091                     	;# 
  3340  0092                     	;# 
  3341  0093                     	;# 
  3342  0094                     	;# 
  3343  0095                     	;# 
  3344  0096                     	;# 
  3345  0097                     	;# 
  3346  0098                     	;# 
  3347  0099                     	;# 
  3348  009A                     	;# 
  3349  009B                     	;# 
  3350  009B                     	;# 
  3351  009C                     	;# 
  3352  009D                     	;# 
  3353  009E                     	;# 
  3354  010C                     	;# 
  3355  010D                     	;# 
  3356  010E                     	;# 
  3357  010F                     	;# 
  3358  0110                     	;# 
  3359  0111                     	;# 
  3360  0112                     	;# 
  3361  0113                     	;# 
  3362  0114                     	;# 
  3363  0115                     	;# 
  3364  0116                     	;# 
  3365  0117                     	;# 
  3366  0118                     	;# 
  3367  0119                     	;# 
  3368  011A                     	;# 
  3369  011B                     	;# 
  3370  011D                     	;# 
  3371  011E                     	;# 
  3372  011F                     	;# 
  3373  018C                     	;# 
  3374  0190                     	;# 
  3375  0191                     	;# 
  3376  0191                     	;# 
  3377  0192                     	;# 
  3378  0193                     	;# 
  3379  0193                     	;# 
  3380  0193                     	;# 
  3381  0194                     	;# 
  3382  0195                     	;# 
  3383  0196                     	;# 
  3384  0199                     	;# 
  3385  0199                     	;# 
  3386  019A                     	;# 
  3387  019A                     	;# 
  3388  019B                     	;# 
  3389  019B                     	;# 
  3390  019B                     	;# 
  3391  019B                     	;# 
  3392  019C                     	;# 
  3393  019C                     	;# 
  3394  019D                     	;# 
  3395  019D                     	;# 
  3396  019E                     	;# 
  3397  019E                     	;# 
  3398  019F                     	;# 
  3399  019F                     	;# 
  3400  020D                     	;# 
  3401  0211                     	;# 
  3402  0211                     	;# 
  3403  0212                     	;# 
  3404  0212                     	;# 
  3405  0213                     	;# 
  3406  0213                     	;# 
  3407  0214                     	;# 
  3408  0214                     	;# 
  3409  0215                     	;# 
  3410  0215                     	;# 
  3411  0215                     	;# 
  3412  0216                     	;# 
  3413  0216                     	;# 
  3414  0217                     	;# 
  3415  0217                     	;# 
  3416  0219                     	;# 
  3417  021A                     	;# 
  3418  021B                     	;# 
  3419  021C                     	;# 
  3420  021D                     	;# 
  3421  021E                     	;# 
  3422  021F                     	;# 
  3423  028C                     	;# 
  3424  028D                     	;# 
  3425  0291                     	;# 
  3426  0291                     	;# 
  3427  0292                     	;# 
  3428  0293                     	;# 
  3429  0294                     	;# 
  3430  0295                     	;# 
  3431  0295                     	;# 
  3432  0296                     	;# 
  3433  0298                     	;# 
  3434  0298                     	;# 
  3435  0299                     	;# 
  3436  029A                     	;# 
  3437  029B                     	;# 
  3438  029C                     	;# 
  3439  029C                     	;# 
  3440  029D                     	;# 
  3441  029E                     	;# 
  3442  029F                     	;# 
  3443  030C                     	;# 
  3444  030D                     	;# 
  3445  0311                     	;# 
  3446  0311                     	;# 
  3447  0312                     	;# 
  3448  0313                     	;# 
  3449  0314                     	;# 
  3450  0315                     	;# 
  3451  0315                     	;# 
  3452  0316                     	;# 
  3453  0318                     	;# 
  3454  0318                     	;# 
  3455  0319                     	;# 
  3456  031A                     	;# 
  3457  031C                     	;# 
  3458  031C                     	;# 
  3459  031D                     	;# 
  3460  031E                     	;# 
  3461  038C                     	;# 
  3462  038D                     	;# 
  3463  0394                     	;# 
  3464  0395                     	;# 
  3465  0396                     	;# 
  3466  040C                     	;# 
  3467  040D                     	;# 
  3468  0415                     	;# 
  3469  0416                     	;# 
  3470  0417                     	;# 
  3471  041C                     	;# 
  3472  041D                     	;# 
  3473  041E                     	;# 
  3474  048D                     	;# 
  3475  0491                     	;# 
  3476  0492                     	;# 
  3477  0493                     	;# 
  3478  0493                     	;# 
  3479  0494                     	;# 
  3480  0495                     	;# 
  3481  0496                     	;# 
  3482  0497                     	;# 
  3483  0791                     	;# 
  3484  0792                     	;# 
  3485  0793                     	;# 
  3486  0794                     	;# 
  3487  0795                     	;# 
  3488  0798                     	;# 
  3489  0799                     	;# 
  3490  079A                     	;# 
  3491  079B                     	;# 
  3492  079C                     	;# 
  3493  079D                     	;# 
  3494  07A0                     	;# 
  3495  07A1                     	;# 
  3496  07A2                     	;# 
  3497  07A3                     	;# 
  3498  07A4                     	;# 
  3499  07A5                     	;# 
  3500  07A6                     	;# 
  3501  07A7                     	;# 
  3502  07A8                     	;# 
  3503  07A9                     	;# 
  3504  07AA                     	;# 
  3505  07AB                     	;# 
  3506  07AC                     	;# 
  3507  07AD                     	;# 
  3508  07AE                     	;# 
  3509  07AF                     	;# 
  3510  07B0                     	;# 
  3511  07B1                     	;# 
  3512  07B2                     	;# 
  3513  07B3                     	;# 
  3514  07B4                     	;# 
  3515  07B5                     	;# 
  3516  07B6                     	;# 
  3517  07B7                     	;# 
  3518  0FE4                     	;# 
  3519  0FE5                     	;# 
  3520  0FE6                     	;# 
  3521  0FE7                     	;# 
  3522  0FE8                     	;# 
  3523  0FE9                     	;# 
  3524  0FEA                     	;# 
  3525  0FEB                     	;# 
  3526  0FED                     	;# 
  3527  0FEE                     	;# 
  3528  0FEF                     	;_RxPacket
  3529                           
  3530                           	psect	idataBANK2
  3531  2DA5                     __pidataBANK2:	
  3532                           
  3533                           ;initializer for _AdditionalNodeID
  3534  2DA5  3401               	retlw	1
  3535                           
  3536                           ;initializer for _chk_sel_status
  3537  2DA6  3401               	retlw	1
  3538                           
  3539                           ;initializer for _myChannel
  3540  2DA7  3419               	retlw	25
  3541                           
  3542                           ;initializer for _ConnMode
  3543  2DA8  3403               	retlw	3
  3544                           
  3545                           	psect	idataBANK3
  3546  2000                     __pidataBANK3:	
  3547                           
  3548                           ;initializer for _myLongAddress
  3549  2000  34FF               	retlw	255
  3550  2001  3411               	retlw	17
  3551  2002  3422               	retlw	34
  3552  2003  3433               	retlw	51
  3553  2004  3444               	retlw	68
  3554  2005  3455               	retlw	85
  3555  2006  3466               	retlw	102
  3556  2007  3411               	retlw	17
  3557                           
  3558                           	psect	idataBANK4
  3559  2E2F                     __pidataBANK4:	
  3560                           
  3561                           ;initializer for _CharacterArray
  3562  2E2F  3430               	retlw	48
  3563  2E30  3431               	retlw	49
  3564  2E31  3432               	retlw	50
  3565  2E32  3433               	retlw	51
  3566  2E33  3434               	retlw	52
  3567  2E34  3435               	retlw	53
  3568  2E35  3436               	retlw	54
  3569  2E36  3437               	retlw	55
  3570  2E37  3438               	retlw	56
  3571  2E38  3439               	retlw	57
  3572  2E39  3441               	retlw	65
  3573  2E3A  3442               	retlw	66
  3574  2E3B  3443               	retlw	67
  3575  2E3C  3444               	retlw	68
  3576  2E3D  3445               	retlw	69
  3577  2E3E  3446               	retlw	70
  3578                           
  3579                           	psect	stringtext
  3580  040E                     __pstringtext:	
  3581  040E                     _MiWi:	
  3582  040E  3420               	retlw	32
  3583  040F  34B2               	retlw	178
  3584  0410  3420               	retlw	32
  3585  0411  3420               	retlw	32
  3586  0412  3420               	retlw	32
  3587  0413  34B2               	retlw	178
  3588  0414  3420               	retlw	32
  3589  0415  3420               	retlw	32
  3590  0416  34B2               	retlw	178
  3591  0417  3420               	retlw	32
  3592  0418  34B2               	retlw	178
  3593  0419  3420               	retlw	32
  3594  041A  3420               	retlw	32
  3595  041B  3420               	retlw	32
  3596  041C  3420               	retlw	32
  3597  041D  3420               	retlw	32
  3598  041E  34B2               	retlw	178
  3599  041F  3420               	retlw	32
  3600  0420  34B2               	retlw	178
  3601  0421  340D               	retlw	13
  3602  0422  340A               	retlw	10
  3603  0423  34B2               	retlw	178
  3604  0424  3420               	retlw	32
  3605  0425  34B2               	retlw	178
  3606  0426  3420               	retlw	32
  3607  0427  34B2               	retlw	178
  3608  0428  3420               	retlw	32
  3609  0429  34B2               	retlw	178
  3610  042A  3420               	retlw	32
  3611  042B  3420               	retlw	32
  3612  042C  3420               	retlw	32
  3613  042D  34B2               	retlw	178
  3614  042E  3420               	retlw	32
  3615  042F  3420               	retlw	32
  3616  0430  34B2               	retlw	178
  3617  0431  3420               	retlw	32
  3618  0432  3420               	retlw	32
  3619  0433  34B2               	retlw	178
  3620  0434  3420               	retlw	32
  3621  0435  3420               	retlw	32
  3622  0436  340D               	retlw	13
  3623  0437  340A               	retlw	10
  3624  0438  34B2               	retlw	178
  3625  0439  3420               	retlw	32
  3626  043A  3420               	retlw	32
  3627  043B  34B2               	retlw	178
  3628  043C  3420               	retlw	32
  3629  043D  3420               	retlw	32
  3630  043E  34B2               	retlw	178
  3631  043F  3420               	retlw	32
  3632  0440  34B2               	retlw	178
  3633  0441  3420               	retlw	32
  3634  0442  34B2               	retlw	178
  3635  0443  3420               	retlw	32
  3636  0444  3420               	retlw	32
  3637  0445  34B2               	retlw	178
  3638  0446  3420               	retlw	32
  3639  0447  3420               	retlw	32
  3640  0448  34B2               	retlw	178
  3641  0449  3420               	retlw	32
  3642  044A  34B2               	retlw	178
  3643  044B  340D               	retlw	13
  3644  044C  340A               	retlw	10
  3645  044D  34B2               	retlw	178
  3646  044E  3420               	retlw	32
  3647  044F  3420               	retlw	32
  3648  0450  34B2               	retlw	178
  3649  0451  3420               	retlw	32
  3650  0452  3420               	retlw	32
  3651  0453  34B2               	retlw	178
  3652  0454  3420               	retlw	32
  3653  0455  34B2               	retlw	178
  3654  0456  3420               	retlw	32
  3655  0457  3420               	retlw	32
  3656  0458  34B2               	retlw	178
  3657  0459  3420               	retlw	32
  3658  045A  34B2               	retlw	178
  3659  045B  3420               	retlw	32
  3660  045C  34B2               	retlw	178
  3661  045D  3420               	retlw	32
  3662  045E  3420               	retlw	32
  3663  045F  34B2               	retlw	178
  3664  0460  340D               	retlw	13
  3665  0461  340A               	retlw	10
  3666  0462  34B2               	retlw	178
  3667  0463  3420               	retlw	32
  3668  0464  3420               	retlw	32
  3669  0465  34B2               	retlw	178
  3670  0466  3420               	retlw	32
  3671  0467  3420               	retlw	32
  3672  0468  34B2               	retlw	178
  3673  0469  3420               	retlw	32
  3674  046A  34B2               	retlw	178
  3675  046B  3420               	retlw	32
  3676  046C  3420               	retlw	32
  3677  046D  3420               	retlw	32
  3678  046E  34B2               	retlw	178
  3679  046F  3420               	retlw	32
  3680  0470  34B2               	retlw	178
  3681  0471  3420               	retlw	32
  3682  0472  3420               	retlw	32
  3683  0473  3420               	retlw	32
  3684  0474  34B2               	retlw	178
  3685  0475  340D               	retlw	13
  3686  0476  340A               	retlw	10
  3687  0477  3420               	retlw	32
  3688  0478  3420               	retlw	32
  3689  0479  3420               	retlw	32
  3690  047A  3420               	retlw	32
  3691  047B  3420               	retlw	32
  3692  047C  3420               	retlw	32
  3693  047D  3420               	retlw	32
  3694  047E  3420               	retlw	32
  3695  047F  3420               	retlw	32
  3696  0480  3420               	retlw	32
  3697  0481  3420               	retlw	32
  3698  0482  3420               	retlw	32
  3699  0483  3420               	retlw	32
  3700  0484  3420               	retlw	32
  3701  0485  3420               	retlw	32
  3702  0486  3420               	retlw	32
  3703  0487  3420               	retlw	32
  3704  0488  3420               	retlw	32
  3705  0489  3420               	retlw	32
  3706  048A  340D               	retlw	13
  3707  048B  340A               	retlw	10
  3708  048C                     __end_of_MiWi:	
  3709  048C                     _DE:	
  3710  048C  34B2               	retlw	178
  3711  048D  34B2               	retlw	178
  3712  048E  34B2               	retlw	178
  3713  048F  3420               	retlw	32
  3714  0490  3420               	retlw	32
  3715  0491  34B2               	retlw	178
  3716  0492  34B2               	retlw	178
  3717  0493  34B2               	retlw	178
  3718  0494  34B2               	retlw	178
  3719  0495  340D               	retlw	13
  3720  0496  340A               	retlw	10
  3721  0497  34B2               	retlw	178
  3722  0498  3420               	retlw	32
  3723  0499  3420               	retlw	32
  3724  049A  34B2               	retlw	178
  3725  049B  3420               	retlw	32
  3726  049C  34B2               	retlw	178
  3727  049D  3420               	retlw	32
  3728  049E  3420               	retlw	32
  3729  049F  3420               	retlw	32
  3730  04A0  340D               	retlw	13
  3731  04A1  340A               	retlw	10
  3732  04A2  34B2               	retlw	178
  3733  04A3  3420               	retlw	32
  3734  04A4  3420               	retlw	32
  3735  04A5  34B2               	retlw	178
  3736  04A6  3420               	retlw	32
  3737  04A7  34B2               	retlw	178
  3738  04A8  34B2               	retlw	178
  3739  04A9  34B2               	retlw	178
  3740  04AA  34B2               	retlw	178
  3741  04AB  340D               	retlw	13
  3742  04AC  340A               	retlw	10
  3743  04AD  34B2               	retlw	178
  3744  04AE  3420               	retlw	32
  3745  04AF  3420               	retlw	32
  3746  04B0  34B2               	retlw	178
  3747  04B1  3420               	retlw	32
  3748  04B2  34B2               	retlw	178
  3749  04B3  3420               	retlw	32
  3750  04B4  3420               	retlw	32
  3751  04B5  3420               	retlw	32
  3752  04B6  340D               	retlw	13
  3753  04B7  340A               	retlw	10
  3754  04B8  34B2               	retlw	178
  3755  04B9  34B2               	retlw	178
  3756  04BA  34B2               	retlw	178
  3757  04BB  3420               	retlw	32
  3758  04BC  3420               	retlw	32
  3759  04BD  34B2               	retlw	178
  3760  04BE  34B2               	retlw	178
  3761  04BF  34B2               	retlw	178
  3762  04C0  34B2               	retlw	178
  3763  04C1  340D               	retlw	13
  3764  04C2  340A               	retlw	10
  3765  04C3  3420               	retlw	32
  3766  04C4  3420               	retlw	32
  3767  04C5  3420               	retlw	32
  3768  04C6  3420               	retlw	32
  3769  04C7  3420               	retlw	32
  3770  04C8  3420               	retlw	32
  3771  04C9  3420               	retlw	32
  3772  04CA  3420               	retlw	32
  3773  04CB  3420               	retlw	32
  3774  04CC  340D               	retlw	13
  3775  04CD  340A               	retlw	10
  3776  04CE                     __end_of_DE:	
  3777  04CE                     _InitConfigRegs:	
  3778  04CE  342E               	retlw	46
  3779  04CF  3400               	retlw	0
  3780  04D0  3484               	retlw	132
  3781  04D1  3402               	retlw	2
  3782  04D2  3409               	retlw	9
  3783  04D3  3404               	retlw	4
  3784  04D4  3409               	retlw	9
  3785  04D5  3406               	retlw	6
  3786  04D6  340C               	retlw	12
  3787  04D7  3408               	retlw	8
  3788  04D8  34C1               	retlw	193
  3789  04D9  340A               	retlw	10
  3790  04DA  3477               	retlw	119
  3791  04DB  340C               	retlw	12
  3792  04DC  3464               	retlw	100
  3793  04DD  340E               	retlw	14
  3794  04DE  3432               	retlw	50
  3795  04DF  3410               	retlw	16
  3796  04E0  3400               	retlw	0
  3797  04E1  3412               	retlw	18
  3798  04E2  3400               	retlw	0
  3799  04E3  3414               	retlw	20
  3800  04E4  3400               	retlw	0
  3801  04E5  3416               	retlw	22
  3802  04E6  3438               	retlw	56
  3803  04E7  3418               	retlw	24
  3804  04E8  34C8               	retlw	200
  3805  04E9  341A               	retlw	26
  3806  04EA  340D               	retlw	13
  3807  04EB  341C               	retlw	28
  3808  04EC  3400               	retlw	0
  3809  04ED  341E               	retlw	30
  3810  04EE  3472               	retlw	114
  3811  04EF  3420               	retlw	32
  3812  04F0  3438               	retlw	56
  3813  04F1  3422               	retlw	34
  3814  04F2  3438               	retlw	56
  3815  04F3  3424               	retlw	36
  3816  04F4  3407               	retlw	7
  3817  04F5  3426               	retlw	38
  3818  04F6  3400               	retlw	0
  3819  04F7  3428               	retlw	40
  3820  04F8  3400               	retlw	0
  3821  04F9  342A               	retlw	42
  3822  04FA  3469               	retlw	105
  3823  04FB  342C               	retlw	44
  3824  04FC  3481               	retlw	129
  3825  04FD  342E               	retlw	46
  3826  04FE  347E               	retlw	126
  3827  04FF  3430               	retlw	48
  3828  0500  3496               	retlw	150
  3829  0501  3432               	retlw	50
  3830  0502  34F8               	retlw	248
  3831  0503  3434               	retlw	52
  3832  0504  3488               	retlw	136
  3833  0505  3436               	retlw	54
  3834  0506  3440               	retlw	64
  3835  0507  3438               	retlw	56
  3836  0508  3400               	retlw	0
  3837  0509  343A               	retlw	58
  3838  050A  34E8               	retlw	232
  3839  050B  343C               	retlw	60
  3840  050C  3400               	retlw	0
  3841  050D  343E               	retlw	62
  3842  050E                     __end_of_InitConfigRegs:	
  3843  050E                     _PVALUE:	
  3844  050E  3454               	retlw	84
  3845  050F  3454               	retlw	84
  3846  0510  3454               	retlw	84
  3847  0511  3454               	retlw	84
  3848  0512  3454               	retlw	84
  3849  0513  3454               	retlw	84
  3850  0514  3454               	retlw	84
  3851  0515  3454               	retlw	84
  3852  0516  3454               	retlw	84
  3853  0517  3454               	retlw	84
  3854  0518  3454               	retlw	84
  3855  0519  3454               	retlw	84
  3856  051A  3454               	retlw	84
  3857  051B  3454               	retlw	84
  3858  051C  3455               	retlw	85
  3859  051D  3455               	retlw	85
  3860  051E  3455               	retlw	85
  3861  051F  3455               	retlw	85
  3862  0520  3455               	retlw	85
  3863  0521  3455               	retlw	85
  3864  0522  3455               	retlw	85
  3865  0523  3455               	retlw	85
  3866  0524  3455               	retlw	85
  3867  0525  3455               	retlw	85
  3868  0526  3455               	retlw	85
  3869  0527  3455               	retlw	85
  3870  0528  3455               	retlw	85
  3871  0529  3455               	retlw	85
  3872  052A  3455               	retlw	85
  3873  052B  3455               	retlw	85
  3874  052C  3455               	retlw	85
  3875  052D  3455               	retlw	85
  3876  052E                     __end_of_PVALUE:	
  3877  052E                     _SVALUE:	
  3878  052E  342D               	retlw	45
  3879  052F  3430               	retlw	48
  3880  0530  3433               	retlw	51
  3881  0531  3435               	retlw	53
  3882  0532  3438               	retlw	56
  3883  0533  343B               	retlw	59
  3884  0534  343E               	retlw	62
  3885  0535  3441               	retlw	65
  3886  0536  3443               	retlw	67
  3887  0537  3446               	retlw	70
  3888  0538  3449               	retlw	73
  3889  0539  344C               	retlw	76
  3890  053A  344F               	retlw	79
  3891  053B  3451               	retlw	81
  3892  053C  3409               	retlw	9
  3893  053D  340C               	retlw	12
  3894  053E  340F               	retlw	15
  3895  053F  3412               	retlw	18
  3896  0540  3415               	retlw	21
  3897  0541  3417               	retlw	23
  3898  0542  341A               	retlw	26
  3899  0543  341D               	retlw	29
  3900  0544  3420               	retlw	32
  3901  0545  3423               	retlw	35
  3902  0546  3425               	retlw	37
  3903  0547  3428               	retlw	40
  3904  0548  342B               	retlw	43
  3905  0549  342E               	retlw	46
  3906  054A  3431               	retlw	49
  3907  054B  3433               	retlw	51
  3908  054C  3436               	retlw	54
  3909  054D  3439               	retlw	57
  3910  054E                     __end_of_SVALUE:	
  3911  054E                     _octpowers:	
  3912  054E  3401               	retlw	1
  3913  054F  3400               	retlw	0
  3914  0550  3408               	retlw	8
  3915  0551  3400               	retlw	0
  3916  0552  3440               	retlw	64
  3917  0553  3400               	retlw	0
  3918  0554  3400               	retlw	0
  3919  0555  3402               	retlw	2
  3920  0556  3400               	retlw	0
  3921  0557  3410               	retlw	16
  3922  0558  3400               	retlw	0
  3923  0559  3480               	retlw	128
  3924  055A                     __end_of_octpowers:	
  3925  055A                     _dpowers:	
  3926  055A  3401               	retlw	1
  3927  055B  3400               	retlw	0
  3928  055C  340A               	retlw	10
  3929  055D  3400               	retlw	0
  3930  055E  3464               	retlw	100
  3931  055F  3400               	retlw	0
  3932  0560  34E8               	retlw	232
  3933  0561  3403               	retlw	3
  3934  0562  3410               	retlw	16
  3935  0563  3427               	retlw	39
  3936  0564                     __end_of_dpowers:	
  3937  0564                     _hexpowers:	
  3938  0564  3401               	retlw	1
  3939  0565  3400               	retlw	0
  3940  0566  3410               	retlw	16
  3941  0567  3400               	retlw	0
  3942  0568  3400               	retlw	0
  3943  0569  3401               	retlw	1
  3944  056A  3400               	retlw	0
  3945  056B  3410               	retlw	16
  3946  056C                     __end_of_hexpowers:	
  3947  000B                     _INTCONbits	set	11
  3948  0011                     _PIR1bits	set	17
  3949  000C                     _PORTAbits	set	12
  3950  000D                     _PORTBbits	set	13
  3951  0018                     _T1CON	set	24
  3952  0018                     _T1CONbits	set	24
  3953  0017                     _TMR1H	set	23
  3954  0016                     _TMR1L	set	22
  3955  0099                     _OSCCON	set	153
  3956  0091                     _PIE1bits	set	145
  3957  008C                     _TRISA	set	140
  3958  008C                     _TRISAbits	set	140
  3959  008D                     _TRISB	set	141
  3960  008D                     _TRISBbits	set	141
  3961  008E                     _TRISC	set	142
  3962  008E                     _TRISCbits	set	142
  3963  008F                     _TRISD	set	143
  3964  008F                     _TRISDbits	set	143
  3965  0090                     _TRISEbits	set	144
  3966  010C                     _LATA	set	268
  3967  010C                     _LATAbits	set	268
  3968  010D                     _LATB	set	269
  3969  010E                     _LATC	set	270
  3970  010E                     _LATCbits	set	270
  3971  010F                     _LATD	set	271
  3972  010F                     _LATDbits	set	271
  3973  0110                     _LATEbits	set	272
  3974  018C                     _ANSELA	set	396
  3975  0199                     _RCREG	set	409
  3976  019D                     _RCSTA	set	413
  3977  019D                     _RCSTAbits	set	413
  3978  019B                     _SPBRG	set	411
  3979  019A                     _TXREG	set	410
  3980  019E                     _TXSTA	set	414
  3981  019E                     _TXSTAbits	set	414
  3982  0211                     _SSP1BUF	set	529
  3983  0215                     _SSP1CON1	set	533
  3984  0215                     _SSP1CON1bits	set	533
  3985  0214                     _SSP1STAT	set	532
  3986  030C                     _TRISFbits	set	780
  3987  0396                     _IOCBFbits	set	918
  3988  0395                     _IOCBNbits	set	917
  3989  038C                     _LATFbits	set	908
  3990  056C                     STR_23:	
  3991  056C  340D               	retlw	13
  3992  056D  340A               	retlw	10
  3993  056E  3420               	retlw	32	;' '
  3994  056F  3420               	retlw	32	;' '
  3995  0570  3420               	retlw	32	;' '
  3996  0571  3420               	retlw	32	;' '
  3997  0572  3420               	retlw	32	;' '
  3998  0573  3420               	retlw	32	;' '
  3999  0574  3420               	retlw	32	;' '
  4000  0575  3420               	retlw	32	;' '
  4001  0576  3420               	retlw	32	;' '
  4002  0577  3420               	retlw	32	;' '
  4003  0578  3420               	retlw	32	;' '
  4004  0579  3420               	retlw	32	;' '
  4005  057A  3420               	retlw	32	;' '
  4006  057B  3420               	retlw	32	;' '
  4007  057C  3420               	retlw	32	;' '
  4008  057D  3420               	retlw	32	;' '
  4009  057E  3420               	retlw	32	;' '
  4010  057F  3420               	retlw	32	;' '
  4011  0580  3420               	retlw	32	;' '
  4012  0581  3420               	retlw	32	;' '
  4013  0582  3420               	retlw	32	;' '
  4014  0583  3432               	retlw	50	;'2'
  4015  0584  3420               	retlw	32	;' '
  4016  0585  3474               	retlw	116	;'t'
  4017  0586  346F               	retlw	111	;'o'
  4018  0587  3420               	retlw	32	;' '
  4019  0588  3475               	retlw	117	;'u'
  4020  0589  346E               	retlw	110	;'n'
  4021  058A  3469               	retlw	105	;'i'
  4022  058B  3463               	retlw	99	;'c'
  4023  058C  3461               	retlw	97	;'a'
  4024  058D  3473               	retlw	115	;'s'
  4025  058E  3474               	retlw	116	;'t'
  4026  058F  3420               	retlw	32	;' '
  4027  0590  3465               	retlw	101	;'e'
  4028  0591  346E               	retlw	110	;'n'
  4029  0592  3463               	retlw	99	;'c'
  4030  0593  3472               	retlw	114	;'r'
  4031  0594  3479               	retlw	121	;'y'
  4032  0595  3470               	retlw	112	;'p'
  4033  0596  3474               	retlw	116	;'t'
  4034  0597  3465               	retlw	101	;'e'
  4035  0598  3464               	retlw	100	;'d'
  4036  0599  3420               	retlw	32	;' '
  4037  059A  346D               	retlw	109	;'m'
  4038  059B  3465               	retlw	101	;'e'
  4039  059C  3473               	retlw	115	;'s'
  4040  059D  3473               	retlw	115	;'s'
  4041  059E  3461               	retlw	97	;'a'
  4042  059F  3467               	retlw	103	;'g'
  4043  05A0  3465               	retlw	101	;'e'
  4044  05A1  342E               	retlw	46	;'.'
  4045  05A2  3420               	retlw	32	;' '
  4046  05A3  344C               	retlw	76	;'L'
  4047  05A4  3445               	retlw	69	;'E'
  4048  05A5  3444               	retlw	68	;'D'
  4049  05A6  3420               	retlw	32	;' '
  4050  05A7  3432               	retlw	50	;'2'
  4051  05A8  3420               	retlw	32	;' '
  4052  05A9  3477               	retlw	119	;'w'
  4053  05AA  3469               	retlw	105	;'i'
  4054  05AB  346C               	retlw	108	;'l'
  4055  05AC  346C               	retlw	108	;'l'
  4056  05AD  3400               	retlw	0
  4057  05AE                     STR_22:	
  4058  05AE  340D               	retlw	13
  4059  05AF  340A               	retlw	10
  4060  05B0  3420               	retlw	32	;' '
  4061  05B1  3420               	retlw	32	;' '
  4062  05B2  3420               	retlw	32	;' '
  4063  05B3  3420               	retlw	32	;' '
  4064  05B4  3420               	retlw	32	;' '
  4065  05B5  3420               	retlw	32	;' '
  4066  05B6  3420               	retlw	32	;' '
  4067  05B7  3420               	retlw	32	;' '
  4068  05B8  3420               	retlw	32	;' '
  4069  05B9  3420               	retlw	32	;' '
  4070  05BA  3420               	retlw	32	;' '
  4071  05BB  3420               	retlw	32	;' '
  4072  05BC  3420               	retlw	32	;' '
  4073  05BD  3420               	retlw	32	;' '
  4074  05BE  3420               	retlw	32	;' '
  4075  05BF  3420               	retlw	32	;' '
  4076  05C0  3420               	retlw	32	;' '
  4077  05C1  3420               	retlw	32	;' '
  4078  05C2  3420               	retlw	32	;' '
  4079  05C3  3420               	retlw	32	;' '
  4080  05C4  3420               	retlw	32	;' '
  4081  05C5  3442               	retlw	66	;'B'
  4082  05C6  3475               	retlw	117	;'u'
  4083  05C7  3474               	retlw	116	;'t'
  4084  05C8  3474               	retlw	116	;'t'
  4085  05C9  346F               	retlw	111	;'o'
  4086  05CA  346E               	retlw	110	;'n'
  4087  05CB  3420               	retlw	32	;' '
  4088  05CC  3431               	retlw	49	;'1'
  4089  05CD  3420               	retlw	32	;' '
  4090  05CE  3474               	retlw	116	;'t'
  4091  05CF  346F               	retlw	111	;'o'
  4092  05D0  3420               	retlw	32	;' '
  4093  05D1  3462               	retlw	98	;'b'
  4094  05D2  3472               	retlw	114	;'r'
  4095  05D3  346F               	retlw	111	;'o'
  4096  05D4  3461               	retlw	97	;'a'
  4097  05D5  3464               	retlw	100	;'d'
  4098  05D6  3463               	retlw	99	;'c'
  4099  05D7  3461               	retlw	97	;'a'
  4100  05D8  3473               	retlw	115	;'s'
  4101  05D9  3474               	retlw	116	;'t'
  4102  05DA  3420               	retlw	32	;' '
  4103  05DB  346D               	retlw	109	;'m'
  4104  05DC  3465               	retlw	101	;'e'
  4105  05DD  3473               	retlw	115	;'s'
  4106  05DE  3473               	retlw	115	;'s'
  4107  05DF  3461               	retlw	97	;'a'
  4108  05E0  3467               	retlw	103	;'g'
  4109  05E1  3465               	retlw	101	;'e'
  4110  05E2  342E               	retlw	46	;'.'
  4111  05E3  3420               	retlw	32	;' '
  4112  05E4  3450               	retlw	80	;'P'
  4113  05E5  3475               	retlw	117	;'u'
  4114  05E6  3473               	retlw	115	;'s'
  4115  05E7  3468               	retlw	104	;'h'
  4116  05E8  3420               	retlw	32	;' '
  4117  05E9  3442               	retlw	66	;'B'
  4118  05EA  3475               	retlw	117	;'u'
  4119  05EB  3474               	retlw	116	;'t'
  4120  05EC  3474               	retlw	116	;'t'
  4121  05ED  346F               	retlw	111	;'o'
  4122  05EE  346E               	retlw	110	;'n'
  4123  05EF  3400               	retlw	0
  4124  05F0                     STR_20:	
  4125  05F0  340D               	retlw	13
  4126  05F1  340A               	retlw	10
  4127  05F2  3420               	retlw	32	;' '
  4128  05F3  3420               	retlw	32	;' '
  4129  05F4  3420               	retlw	32	;' '
  4130  05F5  3420               	retlw	32	;' '
  4131  05F6  3420               	retlw	32	;' '
  4132  05F7  3420               	retlw	32	;' '
  4133  05F8  3420               	retlw	32	;' '
  4134  05F9  3420               	retlw	32	;' '
  4135  05FA  3420               	retlw	32	;' '
  4136  05FB  3420               	retlw	32	;' '
  4137  05FC  3420               	retlw	32	;' '
  4138  05FD  3420               	retlw	32	;' '
  4139  05FE  3420               	retlw	32	;' '
  4140  05FF  3420               	retlw	32	;' '
  4141  0600  3420               	retlw	32	;' '
  4142  0601  3420               	retlw	32	;' '
  4143  0602  3420               	retlw	32	;' '
  4144  0603  3420               	retlw	32	;' '
  4145  0604  3420               	retlw	32	;' '
  4146  0605  3420               	retlw	32	;' '
  4147  0606  3420               	retlw	32	;' '
  4148  0607  3450               	retlw	80	;'P'
  4149  0608  346F               	retlw	111	;'o'
  4150  0609  3477               	retlw	119	;'w'
  4151  060A  3465               	retlw	101	;'e'
  4152  060B  3472               	retlw	114	;'r'
  4153  060C  3420               	retlw	32	;' '
  4154  060D  346F               	retlw	111	;'o'
  4155  060E  346E               	retlw	110	;'n'
  4156  060F  3420               	retlw	32	;' '
  4157  0610  3474               	retlw	116	;'t'
  4158  0611  3468               	retlw	104	;'h'
  4159  0612  3465               	retlw	101	;'e'
  4160  0613  3420               	retlw	32	;' '
  4161  0614  3462               	retlw	98	;'b'
  4162  0615  346F               	retlw	111	;'o'
  4163  0616  3461               	retlw	97	;'a'
  4164  0617  3472               	retlw	114	;'r'
  4165  0618  3464               	retlw	100	;'d'
  4166  0619  3420               	retlw	32	;' '
  4167  061A  3475               	retlw	117	;'u'
  4168  061B  346E               	retlw	110	;'n'
  4169  061C  3474               	retlw	116	;'t'
  4170  061D  3469               	retlw	105	;'i'
  4171  061E  346C               	retlw	108	;'l'
  4172  061F  3420               	retlw	32	;' '
  4173  0620  344C               	retlw	76	;'L'
  4174  0621  3445               	retlw	69	;'E'
  4175  0622  3444               	retlw	68	;'D'
  4176  0623  3420               	retlw	32	;' '
  4177  0624  3431               	retlw	49	;'1'
  4178  0625  3420               	retlw	32	;' '
  4179  0626  346C               	retlw	108	;'l'
  4180  0627  3469               	retlw	105	;'i'
  4181  0628  3467               	retlw	103	;'g'
  4182  0629  3468               	retlw	104	;'h'
  4183  062A  3474               	retlw	116	;'t'
  4184  062B  3473               	retlw	115	;'s'
  4185  062C  3420               	retlw	32	;' '
  4186  062D  3475               	retlw	117	;'u'
  4187  062E  3470               	retlw	112	;'p'
  4188  062F  3400               	retlw	0
  4189  0630                     STR_21:	
  4190  0630  340D               	retlw	13
  4191  0631  340A               	retlw	10
  4192  0632  3420               	retlw	32	;' '
  4193  0633  3420               	retlw	32	;' '
  4194  0634  3420               	retlw	32	;' '
  4195  0635  3420               	retlw	32	;' '
  4196  0636  3420               	retlw	32	;' '
  4197  0637  3420               	retlw	32	;' '
  4198  0638  3420               	retlw	32	;' '
  4199  0639  3420               	retlw	32	;' '
  4200  063A  3420               	retlw	32	;' '
  4201  063B  3420               	retlw	32	;' '
  4202  063C  3420               	retlw	32	;' '
  4203  063D  3420               	retlw	32	;' '
  4204  063E  3420               	retlw	32	;' '
  4205  063F  3420               	retlw	32	;' '
  4206  0640  3420               	retlw	32	;' '
  4207  0641  3420               	retlw	32	;' '
  4208  0642  3420               	retlw	32	;' '
  4209  0643  3420               	retlw	32	;' '
  4210  0644  3420               	retlw	32	;' '
  4211  0645  3420               	retlw	32	;' '
  4212  0646  3420               	retlw	32	;' '
  4213  0647  3474               	retlw	116	;'t'
  4214  0648  346F               	retlw	111	;'o'
  4215  0649  3420               	retlw	32	;' '
  4216  064A  3469               	retlw	105	;'i'
  4217  064B  346E               	retlw	110	;'n'
  4218  064C  3464               	retlw	100	;'d'
  4219  064D  3469               	retlw	105	;'i'
  4220  064E  3463               	retlw	99	;'c'
  4221  064F  3461               	retlw	97	;'a'
  4222  0650  3474               	retlw	116	;'t'
  4223  0651  3465               	retlw	101	;'e'
  4224  0652  3420               	retlw	32	;' '
  4225  0653  3463               	retlw	99	;'c'
  4226  0654  346F               	retlw	111	;'o'
  4227  0655  346E               	retlw	110	;'n'
  4228  0656  346E               	retlw	110	;'n'
  4229  0657  3465               	retlw	101	;'e'
  4230  0658  3463               	retlw	99	;'c'
  4231  0659  3474               	retlw	116	;'t'
  4232  065A  3469               	retlw	105	;'i'
  4233  065B  346E               	retlw	110	;'n'
  4234  065C  3467               	retlw	103	;'g'
  4235  065D  3420               	retlw	32	;' '
  4236  065E  3477               	retlw	119	;'w'
  4237  065F  3469               	retlw	105	;'i'
  4238  0660  3474               	retlw	116	;'t'
  4239  0661  3468               	retlw	104	;'h'
  4240  0662  3420               	retlw	32	;' '
  4241  0663  3470               	retlw	112	;'p'
  4242  0664  3465               	retlw	101	;'e'
  4243  0665  3465               	retlw	101	;'e'
  4244  0666  3472               	retlw	114	;'r'
  4245  0667  342E               	retlw	46	;'.'
  4246  0668  3420               	retlw	32	;' '
  4247  0669  3450               	retlw	80	;'P'
  4248  066A  3475               	retlw	117	;'u'
  4249  066B  3473               	retlw	115	;'s'
  4250  066C  3468               	retlw	104	;'h'
  4251  066D  3400               	retlw	0
  4252  066E                     STR_24:	
  4253  066E  340D               	retlw	13
  4254  066F  340A               	retlw	10
  4255  0670  3420               	retlw	32	;' '
  4256  0671  3420               	retlw	32	;' '
  4257  0672  3420               	retlw	32	;' '
  4258  0673  3420               	retlw	32	;' '
  4259  0674  3420               	retlw	32	;' '
  4260  0675  3420               	retlw	32	;' '
  4261  0676  3420               	retlw	32	;' '
  4262  0677  3420               	retlw	32	;' '
  4263  0678  3420               	retlw	32	;' '
  4264  0679  3420               	retlw	32	;' '
  4265  067A  3420               	retlw	32	;' '
  4266  067B  3420               	retlw	32	;' '
  4267  067C  3420               	retlw	32	;' '
  4268  067D  3420               	retlw	32	;' '
  4269  067E  3420               	retlw	32	;' '
  4270  067F  3420               	retlw	32	;' '
  4271  0680  3420               	retlw	32	;' '
  4272  0681  3420               	retlw	32	;' '
  4273  0682  3420               	retlw	32	;' '
  4274  0683  3420               	retlw	32	;' '
  4275  0684  3420               	retlw	32	;' '
  4276  0685  3462               	retlw	98	;'b'
  4277  0686  3465               	retlw	101	;'e'
  4278  0687  3420               	retlw	32	;' '
  4279  0688  3474               	retlw	116	;'t'
  4280  0689  346F               	retlw	111	;'o'
  4281  068A  3467               	retlw	103	;'g'
  4282  068B  3467               	retlw	103	;'g'
  4283  068C  346C               	retlw	108	;'l'
  4284  068D  3465               	retlw	101	;'e'
  4285  068E  3464               	retlw	100	;'d'
  4286  068F  3420               	retlw	32	;' '
  4287  0690  3475               	retlw	117	;'u'
  4288  0691  3470               	retlw	112	;'p'
  4289  0692  346F               	retlw	111	;'o'
  4290  0693  346E               	retlw	110	;'n'
  4291  0694  3420               	retlw	32	;' '
  4292  0695  3472               	retlw	114	;'r'
  4293  0696  3465               	retlw	101	;'e'
  4294  0697  3463               	retlw	99	;'c'
  4295  0698  3465               	retlw	101	;'e'
  4296  0699  3469               	retlw	105	;'i'
  4297  069A  3476               	retlw	118	;'v'
  4298  069B  3469               	retlw	105	;'i'
  4299  069C  346E               	retlw	110	;'n'
  4300  069D  3467               	retlw	103	;'g'
  4301  069E  3420               	retlw	32	;' '
  4302  069F  346D               	retlw	109	;'m'
  4303  06A0  3465               	retlw	101	;'e'
  4304  06A1  3473               	retlw	115	;'s'
  4305  06A2  3473               	retlw	115	;'s'
  4306  06A3  3461               	retlw	97	;'a'
  4307  06A4  3467               	retlw	103	;'g'
  4308  06A5  3465               	retlw	101	;'e'
  4309  06A6  3473               	retlw	115	;'s'
  4310  06A7  342E               	retlw	46	;'.'
  4311  06A8  3420               	retlw	32	;' '
  4312  06A9  3400               	retlw	0
  4313  06AA                     STR_17:	
  4314  06AA  340D               	retlw	13
  4315  06AB  340A               	retlw	10
  4316  06AC  3453               	retlw	83	;'S'
  4317  06AD  3474               	retlw	116	;'t'
  4318  06AE  3461               	retlw	97	;'a'
  4319  06AF  3472               	retlw	114	;'r'
  4320  06B0  3474               	retlw	116	;'t'
  4321  06B1  3469               	retlw	105	;'i'
  4322  06B2  346E               	retlw	110	;'n'
  4323  06B3  3467               	retlw	103	;'g'
  4324  06B4  3420               	retlw	32	;' '
  4325  06B5  344E               	retlw	78	;'N'
  4326  06B6  346F               	retlw	111	;'o'
  4327  06B7  3464               	retlw	100	;'d'
  4328  06B8  3465               	retlw	101	;'e'
  4329  06B9  3420               	retlw	32	;' '
  4330  06BA  3431               	retlw	49	;'1'
  4331  06BB  3420               	retlw	32	;' '
  4332  06BC  346F               	retlw	111	;'o'
  4333  06BD  3466               	retlw	102	;'f'
  4334  06BE  3420               	retlw	32	;' '
  4335  06BF  3453               	retlw	83	;'S'
  4336  06C0  3469               	retlw	105	;'i'
  4337  06C1  346D               	retlw	109	;'m'
  4338  06C2  3470               	retlw	112	;'p'
  4339  06C3  346C               	retlw	108	;'l'
  4340  06C4  3465               	retlw	101	;'e'
  4341  06C5  3420               	retlw	32	;' '
  4342  06C6  3444               	retlw	68	;'D'
  4343  06C7  3465               	retlw	101	;'e'
  4344  06C8  346D               	retlw	109	;'m'
  4345  06C9  346F               	retlw	111	;'o'
  4346  06CA  3420               	retlw	32	;' '
  4347  06CB  3466               	retlw	102	;'f'
  4348  06CC  346F               	retlw	111	;'o'
  4349  06CD  3472               	retlw	114	;'r'
  4350  06CE  3420               	retlw	32	;' '
  4351  06CF  344D               	retlw	77	;'M'
  4352  06D0  3469               	retlw	105	;'i'
  4353  06D1  3457               	retlw	87	;'W'
  4354  06D2  3469               	retlw	105	;'i'
  4355  06D3  3428               	retlw	40	;'('
  4356  06D4  3454               	retlw	84	;'T'
  4357  06D5  344D               	retlw	77	;'M'
  4358  06D6  3429               	retlw	41	;')'
  4359  06D7  3420               	retlw	32	;' '
  4360  06D8  3450               	retlw	80	;'P'
  4361  06D9  3432               	retlw	50	;'2'
  4362  06DA  3450               	retlw	80	;'P'
  4363  06DB  3420               	retlw	32	;' '
  4364  06DC  3453               	retlw	83	;'S'
  4365  06DD  3474               	retlw	116	;'t'
  4366  06DE  3461               	retlw	97	;'a'
  4367  06DF  3463               	retlw	99	;'c'
  4368  06E0  346B               	retlw	107	;'k'
  4369  06E1  3420               	retlw	32	;' '
  4370  06E2  342E               	retlw	46	;'.'
  4371  06E3  342E               	retlw	46	;'.'
  4372  06E4  342E               	retlw	46	;'.'
  4373  06E5  3400               	retlw	0
  4374  06E6                     STR_9:	
  4375  06E6  340D               	retlw	13
  4376  06E7  340A               	retlw	10
  4377  06E8  340D               	retlw	13
  4378  06E9  340A               	retlw	10
  4379  06EA  3443               	retlw	67	;'C'
  4380  06EB  346F               	retlw	111	;'o'
  4381  06EC  346E               	retlw	110	;'n'
  4382  06ED  346E               	retlw	110	;'n'
  4383  06EE  3465               	retlw	101	;'e'
  4384  06EF  3463               	retlw	99	;'c'
  4385  06F0  3474               	retlw	116	;'t'
  4386  06F1  3469               	retlw	105	;'i'
  4387  06F2  346F               	retlw	111	;'o'
  4388  06F3  346E               	retlw	110	;'n'
  4389  06F4  3420               	retlw	32	;' '
  4390  06F5  3420               	retlw	32	;' '
  4391  06F6  3420               	retlw	32	;' '
  4392  06F7  3420               	retlw	32	;' '
  4393  06F8  3420               	retlw	32	;' '
  4394  06F9  3450               	retlw	80	;'P'
  4395  06FA  3465               	retlw	101	;'e'
  4396  06FB  3465               	retlw	101	;'e'
  4397  06FC  3472               	retlw	114	;'r'
  4398  06FD  344C               	retlw	76	;'L'
  4399  06FE  346F               	retlw	111	;'o'
  4400  06FF  346E               	retlw	110	;'n'
  4401  0700  3467               	retlw	103	;'g'
  4402  0701  3441               	retlw	65	;'A'
  4403  0702  3464               	retlw	100	;'d'
  4404  0703  3464               	retlw	100	;'d'
  4405  0704  3472               	retlw	114	;'r'
  4406  0705  3465               	retlw	101	;'e'
  4407  0706  3473               	retlw	115	;'s'
  4408  0707  3473               	retlw	115	;'s'
  4409  0708  3420               	retlw	32	;' '
  4410  0709  3420               	retlw	32	;' '
  4411  070A  3420               	retlw	32	;' '
  4412  070B  3420               	retlw	32	;' '
  4413  070C  3420               	retlw	32	;' '
  4414  070D  3450               	retlw	80	;'P'
  4415  070E  3465               	retlw	101	;'e'
  4416  070F  3465               	retlw	101	;'e'
  4417  0710  3472               	retlw	114	;'r'
  4418  0711  3449               	retlw	73	;'I'
  4419  0712  346E               	retlw	110	;'n'
  4420  0713  3466               	retlw	102	;'f'
  4421  0714  346F               	retlw	111	;'o'
  4422  0715  340D               	retlw	13
  4423  0716  340A               	retlw	10
  4424  0717  3400               	retlw	0
  4425  0718                     STR_38:	
  4426  0718  3420               	retlw	32	;' '
  4427  0719  3469               	retlw	105	;'i'
  4428  071A  3473               	retlw	115	;'s'
  4429  071B  3420               	retlw	32	;' '
  4430  071C  346E               	retlw	110	;'n'
  4431  071D  346F               	retlw	111	;'o'
  4432  071E  3474               	retlw	116	;'t'
  4433  071F  3420               	retlw	32	;' '
  4434  0720  3473               	retlw	115	;'s'
  4435  0721  3475               	retlw	117	;'u'
  4436  0722  3470               	retlw	112	;'p'
  4437  0723  3470               	retlw	112	;'p'
  4438  0724  346F               	retlw	111	;'o'
  4439  0725  3472               	retlw	114	;'r'
  4440  0726  3474               	retlw	116	;'t'
  4441  0727  3465               	retlw	101	;'e'
  4442  0728  3464               	retlw	100	;'d'
  4443  0729  3420               	retlw	32	;' '
  4444  072A  3469               	retlw	105	;'i'
  4445  072B  346E               	retlw	110	;'n'
  4446  072C  3420               	retlw	32	;' '
  4447  072D  3463               	retlw	99	;'c'
  4448  072E  3475               	retlw	117	;'u'
  4449  072F  3472               	retlw	114	;'r'
  4450  0730  3472               	retlw	114	;'r'
  4451  0731  3465               	retlw	101	;'e'
  4452  0732  346E               	retlw	110	;'n'
  4453  0733  3474               	retlw	116	;'t'
  4454  0734  3420               	retlw	32	;' '
  4455  0735  3463               	retlw	99	;'c'
  4456  0736  346F               	retlw	111	;'o'
  4457  0737  346E               	retlw	110	;'n'
  4458  0738  3466               	retlw	102	;'f'
  4459  0739  3469               	retlw	105	;'i'
  4460  073A  3467               	retlw	103	;'g'
  4461  073B  3475               	retlw	117	;'u'
  4462  073C  3472               	retlw	114	;'r'
  4463  073D  3461               	retlw	97	;'a'
  4464  073E  3474               	retlw	116	;'t'
  4465  073F  3469               	retlw	105	;'i'
  4466  0740  346F               	retlw	111	;'o'
  4467  0741  346E               	retlw	110	;'n'
  4468  0742  342E               	retlw	46	;'.'
  4469  0743  340D               	retlw	13
  4470  0744  340A               	retlw	10
  4471  0745  3400               	retlw	0
  4472  0746                     STR_26:	
  4473  0746  3443               	retlw	67	;'C'
  4474  0747  346F               	retlw	111	;'o'
  4475  0748  346E               	retlw	110	;'n'
  4476  0749  346E               	retlw	110	;'n'
  4477  074A  3465               	retlw	101	;'e'
  4478  074B  3463               	retlw	99	;'c'
  4479  074C  3474               	retlw	116	;'t'
  4480  074D  3469               	retlw	105	;'i'
  4481  074E  346E               	retlw	110	;'n'
  4482  074F  3467               	retlw	103	;'g'
  4483  0750  3420               	retlw	32	;' '
  4484  0751  3450               	retlw	80	;'P'
  4485  0752  3465               	retlw	101	;'e'
  4486  0753  3465               	retlw	101	;'e'
  4487  0754  3472               	retlw	114	;'r'
  4488  0755  3420               	retlw	32	;' '
  4489  0756  3420               	retlw	32	;' '
  4490  0757  346F               	retlw	111	;'o'
  4491  0758  346E               	retlw	110	;'n'
  4492  0759  3420               	retlw	32	;' '
  4493  075A  3443               	retlw	67	;'C'
  4494  075B  3468               	retlw	104	;'h'
  4495  075C  3461               	retlw	97	;'a'
  4496  075D  346E               	retlw	110	;'n'
  4497  075E  346E               	retlw	110	;'n'
  4498  075F  3465               	retlw	101	;'e'
  4499  0760  346C               	retlw	108	;'l'
  4500  0761  3420               	retlw	32	;' '
  4501  0762  3425               	retlw	37	;'%'
  4502  0763  3464               	retlw	100	;'d'
  4503  0764  3420               	retlw	32	;' '
  4504  0765  3400               	retlw	0
  4505  0766                     STR_16:	
  4506  0766  3453               	retlw	83	;'S'
  4507  0767  3469               	retlw	105	;'i'
  4508  0768  346D               	retlw	109	;'m'
  4509  0769  3470               	retlw	112	;'p'
  4510  076A  346C               	retlw	108	;'l'
  4511  076B  3465               	retlw	101	;'e'
  4512  076C  3420               	retlw	32	;' '
  4513  076D  3450               	retlw	80	;'P'
  4514  076E  3432               	retlw	50	;'2'
  4515  076F  3450               	retlw	80	;'P'
  4516  0770  3420               	retlw	32	;' '
  4517  0771  3444               	retlw	68	;'D'
  4518  0772  3465               	retlw	101	;'e'
  4519  0773  346D               	retlw	109	;'m'
  4520  0774  346F               	retlw	111	;'o'
  4521  0775  3420               	retlw	32	;' '
  4522  0776  3420               	retlw	32	;' '
  4523  0777  344D               	retlw	77	;'M'
  4524  0778  3452               	retlw	82	;'R'
  4525  0779  3446               	retlw	70	;'F'
  4526  077A  3438               	retlw	56	;'8'
  4527  077B  3439               	retlw	57	;'9'
  4528  077C  3458               	retlw	88	;'X'
  4529  077D  3441               	retlw	65	;'A'
  4530  077E  3420               	retlw	32	;' '
  4531  077F  344E               	retlw	78	;'N'
  4532  0780  346F               	retlw	111	;'o'
  4533  0781  3464               	retlw	100	;'d'
  4534  0782  3465               	retlw	101	;'e'
  4535  0783  3420               	retlw	32	;' '
  4536  0784  3400               	retlw	0
  4537  0785                     STR_18:	
  4538  0785  340D               	retlw	13
  4539  0786  340A               	retlw	10
  4540  0787  3420               	retlw	32	;' '
  4541  0788  3420               	retlw	32	;' '
  4542  0789  3420               	retlw	32	;' '
  4543  078A  3420               	retlw	32	;' '
  4544  078B  3420               	retlw	32	;' '
  4545  078C  3452               	retlw	82	;'R'
  4546  078D  3446               	retlw	70	;'F'
  4547  078E  3420               	retlw	32	;' '
  4548  078F  3454               	retlw	84	;'T'
  4549  0790  3472               	retlw	114	;'r'
  4550  0791  3461               	retlw	97	;'a'
  4551  0792  346E               	retlw	110	;'n'
  4552  0793  3473               	retlw	115	;'s'
  4553  0794  3463               	retlw	99	;'c'
  4554  0795  3465               	retlw	101	;'e'
  4555  0796  3469               	retlw	105	;'i'
  4556  0797  3476               	retlw	118	;'v'
  4557  0798  3465               	retlw	101	;'e'
  4558  0799  3472               	retlw	114	;'r'
  4559  079A  343A               	retlw	58	;':'
  4560  079B  3420               	retlw	32	;' '
  4561  079C  344D               	retlw	77	;'M'
  4562  079D  3452               	retlw	82	;'R'
  4563  079E  3446               	retlw	70	;'F'
  4564  079F  3438               	retlw	56	;'8'
  4565  07A0  3439               	retlw	57	;'9'
  4566  07A1  3458               	retlw	88	;'X'
  4567  07A2  3441               	retlw	65	;'A'
  4568  07A3  3400               	retlw	0
  4569  07A4                     STR_27:	
  4570  07A4  340D               	retlw	13
  4571  07A5  340A               	retlw	10
  4572  07A6  3443               	retlw	67	;'C'
  4573  07A7  346F               	retlw	111	;'o'
  4574  07A8  346E               	retlw	110	;'n'
  4575  07A9  346E               	retlw	110	;'n'
  4576  07AA  3465               	retlw	101	;'e'
  4577  07AB  3463               	retlw	99	;'c'
  4578  07AC  3474               	retlw	116	;'t'
  4579  07AD  3469               	retlw	105	;'i'
  4580  07AE  346E               	retlw	110	;'n'
  4581  07AF  3467               	retlw	103	;'g'
  4582  07B0  3420               	retlw	32	;' '
  4583  07B1  3450               	retlw	80	;'P'
  4584  07B2  3465               	retlw	101	;'e'
  4585  07B3  3465               	retlw	101	;'e'
  4586  07B4  3472               	retlw	114	;'r'
  4587  07B5  3420               	retlw	32	;' '
  4588  07B6  346F               	retlw	111	;'o'
  4589  07B7  346E               	retlw	110	;'n'
  4590  07B8  3420               	retlw	32	;' '
  4591  07B9  3443               	retlw	67	;'C'
  4592  07BA  3468               	retlw	104	;'h'
  4593  07BB  3461               	retlw	97	;'a'
  4594  07BC  346E               	retlw	110	;'n'
  4595  07BD  346E               	retlw	110	;'n'
  4596  07BE  3465               	retlw	101	;'e'
  4597  07BF  346C               	retlw	108	;'l'
  4598  07C0  3420               	retlw	32	;' '
  4599  07C1  3400               	retlw	0
  4600  07C2                     STR_29:	
  4601  07C2  3443               	retlw	67	;'C'
  4602  07C3  346F               	retlw	111	;'o'
  4603  07C4  346E               	retlw	110	;'n'
  4604  07C5  346E               	retlw	110	;'n'
  4605  07C6  3465               	retlw	101	;'e'
  4606  07C7  3463               	retlw	99	;'c'
  4607  07C8  3474               	retlw	116	;'t'
  4608  07C9  3465               	retlw	101	;'e'
  4609  07CA  3464               	retlw	100	;'d'
  4610  07CB  3420               	retlw	32	;' '
  4611  07CC  3450               	retlw	80	;'P'
  4612  07CD  3465               	retlw	101	;'e'
  4613  07CE  3465               	retlw	101	;'e'
  4614  07CF  3472               	retlw	114	;'r'
  4615  07D0  3420               	retlw	32	;' '
  4616  07D1  3420               	retlw	32	;' '
  4617  07D2  346F               	retlw	111	;'o'
  4618  07D3  346E               	retlw	110	;'n'
  4619  07D4  3420               	retlw	32	;' '
  4620  07D5  3443               	retlw	67	;'C'
  4621  07D6  3468               	retlw	104	;'h'
  4622  07D7  3461               	retlw	97	;'a'
  4623  07D8  346E               	retlw	110	;'n'
  4624  07D9  346E               	retlw	110	;'n'
  4625  07DA  3465               	retlw	101	;'e'
  4626  07DB  346C               	retlw	108	;'l'
  4627  07DC  3420               	retlw	32	;' '
  4628  07DD  3425               	retlw	37	;'%'
  4629  07DE  3464               	retlw	100	;'d'
  4630  07DF  3400               	retlw	0
  4631  07E0                     STR_30:	
  4632  07E0  340D               	retlw	13
  4633  07E1  340A               	retlw	10
  4634  07E2  3443               	retlw	67	;'C'
  4635  07E3  346F               	retlw	111	;'o'
  4636  07E4  346E               	retlw	110	;'n'
  4637  07E5  346E               	retlw	110	;'n'
  4638  07E6  3465               	retlw	101	;'e'
  4639  07E7  3463               	retlw	99	;'c'
  4640  07E8  3474               	retlw	116	;'t'
  4641  07E9  3465               	retlw	101	;'e'
  4642  07EA  3464               	retlw	100	;'d'
  4643  07EB  3420               	retlw	32	;' '
  4644  07EC  3450               	retlw	80	;'P'
  4645  07ED  3465               	retlw	101	;'e'
  4646  07EE  3465               	retlw	101	;'e'
  4647  07EF  3472               	retlw	114	;'r'
  4648  07F0  3420               	retlw	32	;' '
  4649  07F1  346F               	retlw	111	;'o'
  4650  07F2  346E               	retlw	110	;'n'
  4651  07F3  3420               	retlw	32	;' '
  4652  07F4  3443               	retlw	67	;'C'
  4653  07F5  3468               	retlw	104	;'h'
  4654  07F6  3461               	retlw	97	;'a'
  4655  07F7  346E               	retlw	110	;'n'
  4656  07F8  346E               	retlw	110	;'n'
  4657  07F9  3465               	retlw	101	;'e'
  4658  07FA  346C               	retlw	108	;'l'
  4659  07FB  3420               	retlw	32	;' '
  4660  07FC  3400               	retlw	0
  4661  07FD                     STR_33:	
  4662  07FD  3442               	retlw	66	;'B'
  4663  07FE  3472               	retlw	114	;'r'
  4664  07FF  346F               	retlw	111	;'o'
  4665  0800  3461               	retlw	97	;'a'
  4666  0801  3464               	retlw	100	;'d'
  4667  0802  3463               	retlw	99	;'c'
  4668  0803  3461               	retlw	97	;'a'
  4669  0804  3473               	retlw	115	;'s'
  4670  0805  3474               	retlw	116	;'t'
  4671  0806  3420               	retlw	32	;' '
  4672  0807  3450               	retlw	80	;'P'
  4673  0808  3461               	retlw	97	;'a'
  4674  0809  3463               	retlw	99	;'c'
  4675  080A  346B               	retlw	107	;'k'
  4676  080B  3465               	retlw	101	;'e'
  4677  080C  3474               	retlw	116	;'t'
  4678  080D  3420               	retlw	32	;' '
  4679  080E  3477               	retlw	119	;'w'
  4680  080F  3469               	retlw	105	;'i'
  4681  0810  3474               	retlw	116	;'t'
  4682  0811  3468               	retlw	104	;'h'
  4683  0812  3420               	retlw	32	;' '
  4684  0813  3452               	retlw	82	;'R'
  4685  0814  3453               	retlw	83	;'S'
  4686  0815  3453               	retlw	83	;'S'
  4687  0816  3449               	retlw	73	;'I'
  4688  0817  3420               	retlw	32	;' '
  4689  0818  3400               	retlw	0
  4690  0819                     STR_34:	
  4691  0819  3455               	retlw	85	;'U'
  4692  081A  346E               	retlw	110	;'n'
  4693  081B  3469               	retlw	105	;'i'
  4694  081C  3463               	retlw	99	;'c'
  4695  081D  3461               	retlw	97	;'a'
  4696  081E  3473               	retlw	115	;'s'
  4697  081F  3474               	retlw	116	;'t'
  4698  0820  3420               	retlw	32	;' '
  4699  0821  3450               	retlw	80	;'P'
  4700  0822  3461               	retlw	97	;'a'
  4701  0823  3463               	retlw	99	;'c'
  4702  0824  346B               	retlw	107	;'k'
  4703  0825  3465               	retlw	101	;'e'
  4704  0826  3474               	retlw	116	;'t'
  4705  0827  3420               	retlw	32	;' '
  4706  0828  3477               	retlw	119	;'w'
  4707  0829  3469               	retlw	105	;'i'
  4708  082A  3474               	retlw	116	;'t'
  4709  082B  3468               	retlw	104	;'h'
  4710  082C  3420               	retlw	32	;' '
  4711  082D  3452               	retlw	82	;'R'
  4712  082E  3453               	retlw	83	;'S'
  4713  082F  3453               	retlw	83	;'S'
  4714  0830  3449               	retlw	73	;'I'
  4715  0831  3420               	retlw	32	;' '
  4716  0832  3400               	retlw	0
  4717  0833                     STR_37:	
  4718  0833  340D               	retlw	13
  4719  0834  340A               	retlw	10
  4720  0835  3453               	retlw	83	;'S'
  4721  0836  3465               	retlw	101	;'e'
  4722  0837  346C               	retlw	108	;'l'
  4723  0838  3465               	retlw	101	;'e'
  4724  0839  3463               	retlw	99	;'c'
  4725  083A  3474               	retlw	116	;'t'
  4726  083B  3469               	retlw	105	;'i'
  4727  083C  346F               	retlw	111	;'o'
  4728  083D  346E               	retlw	110	;'n'
  4729  083E  3420               	retlw	32	;' '
  4730  083F  346F               	retlw	111	;'o'
  4731  0840  3466               	retlw	102	;'f'
  4732  0841  3420               	retlw	32	;' '
  4733  0842  3463               	retlw	99	;'c'
  4734  0843  3468               	retlw	104	;'h'
  4735  0844  3461               	retlw	97	;'a'
  4736  0845  346E               	retlw	110	;'n'
  4737  0846  346E               	retlw	110	;'n'
  4738  0847  3465               	retlw	101	;'e'
  4739  0848  346C               	retlw	108	;'l'
  4740  0849  3420               	retlw	32	;' '
  4741  084A  3400               	retlw	0
  4742  084B                     STR_19:	
  4743  084B  340D               	retlw	13
  4744  084C  340A               	retlw	10
  4745  084D  3420               	retlw	32	;' '
  4746  084E  3420               	retlw	32	;' '
  4747  084F  3420               	retlw	32	;' '
  4748  0850  3444               	retlw	68	;'D'
  4749  0851  3465               	retlw	101	;'e'
  4750  0852  346D               	retlw	109	;'m'
  4751  0853  346F               	retlw	111	;'o'
  4752  0854  3420               	retlw	32	;' '
  4753  0855  3449               	retlw	73	;'I'
  4754  0856  346E               	retlw	110	;'n'
  4755  0857  3473               	retlw	115	;'s'
  4756  0858  3474               	retlw	116	;'t'
  4757  0859  3472               	retlw	114	;'r'
  4758  085A  3475               	retlw	117	;'u'
  4759  085B  3463               	retlw	99	;'c'
  4760  085C  3474               	retlw	116	;'t'
  4761  085D  3469               	retlw	105	;'i'
  4762  085E  346F               	retlw	111	;'o'
  4763  085F  346E               	retlw	110	;'n'
  4764  0860  343A               	retlw	58	;':'
  4765  0861  3400               	retlw	0
  4766  0862                     STR_41:	
  4767  0862  3452               	retlw	82	;'R'
  4768  0863  3442               	retlw	66	;'B'
  4769  0864  3430               	retlw	48	;'0'
  4770  0865  343A               	retlw	58	;':'
  4771  0866  3425               	retlw	37	;'%'
  4772  0867  3430               	retlw	48	;'0'
  4773  0868  3432               	retlw	50	;'2'
  4774  0869  3464               	retlw	100	;'d'
  4775  086A  342D               	retlw	45	;'-'
  4776  086B  3425               	retlw	37	;'%'
  4777  086C  3430               	retlw	48	;'0'
  4778  086D  3432               	retlw	50	;'2'
  4779  086E  3478               	retlw	120	;'x'
  4780  086F  3425               	retlw	37	;'%'
  4781  0870  3430               	retlw	48	;'0'
  4782  0871  3432               	retlw	50	;'2'
  4783  0872  3478               	retlw	120	;'x'
  4784  0873  3425               	retlw	37	;'%'
  4785  0874  3430               	retlw	48	;'0'
  4786  0875  3432               	retlw	50	;'2'
  4787  0876  3478               	retlw	120	;'x'
  4788  0877  3400               	retlw	0
  4789  0878                     STR_43:	
  4790  0878  3452               	retlw	82	;'R'
  4791  0879  3465               	retlw	101	;'e'
  4792  087A  3473               	retlw	115	;'s'
  4793  087B  3474               	retlw	116	;'t'
  4794  087C  346F               	retlw	111	;'o'
  4795  087D  3472               	retlw	114	;'r'
  4796  087E  3469               	retlw	105	;'i'
  4797  087F  346E               	retlw	110	;'n'
  4798  0880  3467               	retlw	103	;'g'
  4799  0881  3420               	retlw	32	;' '
  4800  0882  344E               	retlw	78	;'N'
  4801  0883  3465               	retlw	101	;'e'
  4802  0884  3474               	retlw	116	;'t'
  4803  0885  3477               	retlw	119	;'w'
  4804  0886  346F               	retlw	111	;'o'
  4805  0887  3472               	retlw	114	;'r'
  4806  0888  346B               	retlw	107	;'k'
  4807  0889  3420               	retlw	32	;' '
  4808  088A  3421               	retlw	33	;'!'
  4809  088B  3421               	retlw	33	;'!'
  4810  088C  3400               	retlw	0
  4811  088D                     STR_39:	
  4812  088D  340D               	retlw	13
  4813  088E  340A               	retlw	10
  4814  088F  3455               	retlw	85	;'U'
  4815  0890  346E               	retlw	110	;'n'
  4816  0891  3469               	retlw	105	;'i'
  4817  0892  3463               	retlw	99	;'c'
  4818  0893  3461               	retlw	97	;'a'
  4819  0894  3473               	retlw	115	;'s'
  4820  0895  3474               	retlw	116	;'t'
  4821  0896  3420               	retlw	32	;' '
  4822  0897  3446               	retlw	70	;'F'
  4823  0898  3461               	retlw	97	;'a'
  4824  0899  3469               	retlw	105	;'i'
  4825  089A  346C               	retlw	108	;'l'
  4826  089B  3465               	retlw	101	;'e'
  4827  089C  3464               	retlw	100	;'d'
  4828  089D  340D               	retlw	13
  4829  089E  340A               	retlw	10
  4830  089F  3400               	retlw	0
  4831  08A0                     STR_2:	
  4832  08A0  340D               	retlw	13
  4833  08A1  340A               	retlw	10
  4834  08A2  340D               	retlw	13
  4835  08A3  340A               	retlw	10
  4836  08A4  344D               	retlw	77	;'M'
  4837  08A5  3479               	retlw	121	;'y'
  4838  08A6  3420               	retlw	32	;' '
  4839  08A7  3441               	retlw	65	;'A'
  4840  08A8  3464               	retlw	100	;'d'
  4841  08A9  3464               	retlw	100	;'d'
  4842  08AA  3472               	retlw	114	;'r'
  4843  08AB  3465               	retlw	101	;'e'
  4844  08AC  3473               	retlw	115	;'s'
  4845  08AD  3473               	retlw	115	;'s'
  4846  08AE  343A               	retlw	58	;':'
  4847  08AF  3420               	retlw	32	;' '
  4848  08B0  3430               	retlw	48	;'0'
  4849  08B1  3478               	retlw	120	;'x'
  4850  08B2  3400               	retlw	0
  4851  08B3                     STR_44:	
  4852  08B3  3430               	retlw	48	;'0'
  4853  08B4  3431               	retlw	49	;'1'
  4854  08B5  3432               	retlw	50	;'2'
  4855  08B6  3433               	retlw	51	;'3'
  4856  08B7  3434               	retlw	52	;'4'
  4857  08B8  3435               	retlw	53	;'5'
  4858  08B9  3436               	retlw	54	;'6'
  4859  08BA  3437               	retlw	55	;'7'
  4860  08BB  3438               	retlw	56	;'8'
  4861  08BC  3439               	retlw	57	;'9'
  4862  08BD  3441               	retlw	65	;'A'
  4863  08BE  3442               	retlw	66	;'B'
  4864  08BF  3443               	retlw	67	;'C'
  4865  08C0  3444               	retlw	68	;'D'
  4866  08C1  3445               	retlw	69	;'E'
  4867  08C2  3446               	retlw	70	;'F'
  4868  08C3  3400               	retlw	0
  4869  08C4                     STR_45:	
  4870  08C4  3430               	retlw	48	;'0'
  4871  08C5  3431               	retlw	49	;'1'
  4872  08C6  3432               	retlw	50	;'2'
  4873  08C7  3433               	retlw	51	;'3'
  4874  08C8  3434               	retlw	52	;'4'
  4875  08C9  3435               	retlw	53	;'5'
  4876  08CA  3436               	retlw	54	;'6'
  4877  08CB  3437               	retlw	55	;'7'
  4878  08CC  3438               	retlw	56	;'8'
  4879  08CD  3439               	retlw	57	;'9'
  4880  08CE  3461               	retlw	97	;'a'
  4881  08CF  3462               	retlw	98	;'b'
  4882  08D0  3463               	retlw	99	;'c'
  4883  08D1  3464               	retlw	100	;'d'
  4884  08D2  3465               	retlw	101	;'e'
  4885  08D3  3466               	retlw	102	;'f'
  4886  08D4  3400               	retlw	0
  4887  08D5                     STR_15:	
  4888  08D5  3452               	retlw	82	;'R'
  4889  08D6  3458               	retlw	88	;'X'
  4890  08D7  3420               	retlw	32	;' '
  4891  08D8  344D               	retlw	77	;'M'
  4892  08D9  3465               	retlw	101	;'e'
  4893  08DA  3473               	retlw	115	;'s'
  4894  08DB  3473               	retlw	115	;'s'
  4895  08DC  3461               	retlw	97	;'a'
  4896  08DD  3467               	retlw	103	;'g'
  4897  08DE  3465               	retlw	101	;'e'
  4898  08DF  3473               	retlw	115	;'s'
  4899  08E0  343A               	retlw	58	;':'
  4900  08E1  3420               	retlw	32	;' '
  4901  08E2  3425               	retlw	37	;'%'
  4902  08E3  3433               	retlw	51	;'3'
  4903  08E4  3464               	retlw	100	;'d'
  4904  08E5  3400               	retlw	0
  4905  08E6                     STR_14:	
  4906  08E6  3454               	retlw	84	;'T'
  4907  08E7  3458               	retlw	88	;'X'
  4908  08E8  3420               	retlw	32	;' '
  4909  08E9  344D               	retlw	77	;'M'
  4910  08EA  3465               	retlw	101	;'e'
  4911  08EB  3473               	retlw	115	;'s'
  4912  08EC  3473               	retlw	115	;'s'
  4913  08ED  3461               	retlw	97	;'a'
  4914  08EE  3467               	retlw	103	;'g'
  4915  08EF  3465               	retlw	101	;'e'
  4916  08F0  3473               	retlw	115	;'s'
  4917  08F1  343A               	retlw	58	;':'
  4918  08F2  3420               	retlw	32	;' '
  4919  08F3  3425               	retlw	37	;'%'
  4920  08F4  3433               	retlw	51	;'3'
  4921  08F5  3464               	retlw	100	;'d'
  4922  08F6  3400               	retlw	0
  4923  08F7                     STR_42:	
  4924  08F7  3452               	retlw	82	;'R'
  4925  08F8  3442               	retlw	66	;'B'
  4926  08F9  3432               	retlw	50	;'2'
  4927  08FA  343A               	retlw	58	;':'
  4928  08FB  3420               	retlw	32	;' '
  4929  08FC  3443               	retlw	67	;'C'
  4930  08FD  3468               	retlw	104	;'h'
  4931  08FE  346E               	retlw	110	;'n'
  4932  08FF  3467               	retlw	103	;'g'
  4933  0900  3465               	retlw	101	;'e'
  4934  0901  3420               	retlw	32	;' '
  4935  0902  346E               	retlw	110	;'n'
  4936  0903  346F               	retlw	111	;'o'
  4937  0904  3464               	retlw	100	;'d'
  4938  0905  3465               	retlw	101	;'e'
  4939  0906  3400               	retlw	0
  4940  0907                     STR_40:	
  4941  0907  3420               	retlw	32	;' '
  4942  0908  3455               	retlw	85	;'U'
  4943  0909  346E               	retlw	110	;'n'
  4944  090A  3469               	retlw	105	;'i'
  4945  090B  3463               	retlw	99	;'c'
  4946  090C  3461               	retlw	97	;'a'
  4947  090D  3473               	retlw	115	;'s'
  4948  090E  3474               	retlw	116	;'t'
  4949  090F  3420               	retlw	32	;' '
  4950  0910  3446               	retlw	70	;'F'
  4951  0911  3461               	retlw	97	;'a'
  4952  0912  3469               	retlw	105	;'i'
  4953  0913  346C               	retlw	108	;'l'
  4954  0914  3465               	retlw	101	;'e'
  4955  0915  3464               	retlw	100	;'d'
  4956  0916  3400               	retlw	0
  4957  0917                     STR_5:	
  4958  0917  3420               	retlw	32	;' '
  4959  0918  3420               	retlw	32	;' '
  4960  0919  3420               	retlw	32	;' '
  4961  091A  3420               	retlw	32	;' '
  4962  091B  3420               	retlw	32	;' '
  4963  091C  3420               	retlw	32	;' '
  4964  091D  3420               	retlw	32	;' '
  4965  091E  3420               	retlw	32	;' '
  4966  091F  3420               	retlw	32	;' '
  4967  0920  3420               	retlw	32	;' '
  4968  0921  3420               	retlw	32	;' '
  4969  0922  3420               	retlw	32	;' '
  4970  0923  3420               	retlw	32	;' '
  4971  0924  3400               	retlw	0
  4972  0925                     STR_3:	
  4973  0925  3420               	retlw	32	;' '
  4974  0926  3420               	retlw	32	;' '
  4975  0927  3443               	retlw	67	;'C'
  4976  0928  3468               	retlw	104	;'h'
  4977  0929  3461               	retlw	97	;'a'
  4978  092A  346E               	retlw	110	;'n'
  4979  092B  346E               	retlw	110	;'n'
  4980  092C  3465               	retlw	101	;'e'
  4981  092D  346C               	retlw	108	;'l'
  4982  092E  343A               	retlw	58	;':'
  4983  092F  3420               	retlw	32	;' '
  4984  0930  3400               	retlw	0
  4985  0931                     STR_1:	
  4986  0931  3420               	retlw	32	;' '
  4987  0932  3443               	retlw	67	;'C'
  4988  0933  3468               	retlw	104	;'h'
  4989  0934  3461               	retlw	97	;'a'
  4990  0935  346E               	retlw	110	;'n'
  4991  0936  346E               	retlw	110	;'n'
  4992  0937  3465               	retlw	101	;'e'
  4993  0938  346C               	retlw	108	;'l'
  4994  0939  343A               	retlw	58	;':'
  4995  093A  3400               	retlw	0
  4996  093B                     STR_32:	
  4997  093B  3453               	retlw	83	;'S'
  4998  093C  3465               	retlw	101	;'e'
  4999  093D  3463               	retlw	99	;'c'
  5000  093E  3475               	retlw	117	;'u'
  5001  093F  3472               	retlw	114	;'r'
  5002  0940  3465               	retlw	101	;'e'
  5003  0941  3464               	retlw	100	;'d'
  5004  0942  3420               	retlw	32	;' '
  5005  0943  3400               	retlw	0
  5006  0944                     STR_35:	
  5007  0944  3420               	retlw	32	;' '
  5008  0945  3466               	retlw	102	;'f'
  5009  0946  3472               	retlw	114	;'r'
  5010  0947  346F               	retlw	111	;'o'
  5011  0948  346D               	retlw	109	;'m'
  5012  0949  3420               	retlw	32	;' '
  5013  094A  3400               	retlw	0
  5014  094B                     STR_25:	
  5015  094B  340D               	retlw	13
  5016  094C  340A               	retlw	10
  5017  094D  340D               	retlw	13
  5018  094E  340A               	retlw	10
  5019  094F  3400               	retlw	0
  5020  094D                     
  5021                           ; #config settings
  5022  0000                     
  5023                           	psect	cinit
  5024  0393                     start_initialization:	
  5025  0393                     __initialization:		;BIGRAM
  5026                           
  5027                           ; Initialize objects allocated to BANK2
  5028  0393  30A5               	movlw	low __pidataBANK2
  5029  0394  0084               	movwf	4
  5030  0395  30AD               	movlw	(high __pidataBANK2)| (0+128)
  5031  0396  0085               	movwf	5
  5032  0397  3069               	movlw	low __pdataBANK2
  5033  0398  0086               	movwf	6
  5034  0399  3001               	movlw	high __pdataBANK2
  5035  039A  0087               	movwf	7
  5036  039B  3000               	movlw	0
  5037  039C  00FF               	movwf	btemp+1
  5038  039D  3004               	movlw	4
  5039  039E  31AD  25F6  3183   	fcall	init_ram
  5040                           
  5041                           ; Initialize objects allocated to BANK3
  5042  03A1  3000               	movlw	low __pidataBANK3
  5043  03A2  0084               	movwf	4
  5044  03A3  30A0               	movlw	(high __pidataBANK3)| (0+128)
  5045  03A4  0085               	movwf	5
  5046  03A5  30DA               	movlw	low __pdataBANK3
  5047  03A6  0086               	movwf	6
  5048  03A7  3001               	movlw	high __pdataBANK3
  5049  03A8  0087               	movwf	7
  5050  03A9  3000               	movlw	0
  5051  03AA  00FF               	movwf	btemp+1
  5052  03AB  3008               	movlw	8
  5053  03AC  31AD  25F6  3183   	fcall	init_ram
  5054                           
  5055                           ; Initialize objects allocated to BANK4
  5056  03AF  302F               	movlw	low __pidataBANK4
  5057  03B0  0084               	movwf	4
  5058  03B1  30AE               	movlw	(high __pidataBANK4)| (0+128)
  5059  03B2  0085               	movwf	5
  5060  03B3  305C               	movlw	low __pdataBANK4
  5061  03B4  0086               	movwf	6
  5062  03B5  3002               	movlw	high __pdataBANK4
  5063  03B6  0087               	movwf	7
  5064  03B7  3000               	movlw	0
  5065  03B8  00FF               	movwf	btemp+1
  5066  03B9  3010               	movlw	16
  5067  03BA  31AD  25F6  3183   	fcall	init_ram
  5068                           
  5069                           ; Clear objects allocated to BIGRAM
  5070  03BD  3088               	movlw	low (0+9096)
  5071  03BE  0084               	movwf	4
  5072  03BF  3023               	movlw	high (0+9096)
  5073  03C0  0085               	movwf	5
  5074  03C1  3068               	movlw	104
  5075  03C2  00FE               	movwf	btemp
  5076  03C3  3000               	movlw	0
  5077  03C4  00FF               	movwf	btemp+1
  5078  03C5  31AD  25EA  3183   	fcall	clear_ram0
  5079                           
  5080                           ; Clear objects allocated to COMMON
  5081  03C8  01FD               	clrf	__pbssCOMMON& (0+127)
  5082                           
  5083                           ; Clear objects allocated to BANK0
  5084  03C9  3058               	movlw	low __pbssBANK0
  5085  03CA  0084               	movwf	4
  5086  03CB  3000               	movlw	high __pbssBANK0
  5087  03CC  0085               	movwf	5
  5088  03CD  3017               	movlw	23
  5089  03CE  00FE               	movwf	btemp
  5090  03CF  3000               	movlw	0
  5091  03D0  00FF               	movwf	btemp+1
  5092  03D1  31AD  25EA  3183   	fcall	clear_ram0
  5093                           
  5094                           ; Clear objects allocated to BANK2
  5095  03D4  3020               	movlw	low __pbssBANK2
  5096  03D5  0084               	movwf	4
  5097  03D6  3001               	movlw	high __pbssBANK2
  5098  03D7  0085               	movwf	5
  5099  03D8  302D               	movlw	45
  5100  03D9  00FE               	movwf	btemp
  5101  03DA  3000               	movlw	0
  5102  03DB  00FF               	movwf	btemp+1
  5103  03DC  31AD  25EA  3183   	fcall	clear_ram0
  5104                           
  5105                           ; Clear objects allocated to BANK3
  5106  03DF  30A0               	movlw	low __pbssBANK3
  5107  03E0  0084               	movwf	4
  5108  03E1  3001               	movlw	high __pbssBANK3
  5109  03E2  0085               	movwf	5
  5110  03E3  303A               	movlw	58
  5111  03E4  00FE               	movwf	btemp
  5112  03E5  3000               	movlw	0
  5113  03E6  00FF               	movwf	btemp+1
  5114  03E7  31AD  25EA  3183   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK4
  5117  03EA  3020               	movlw	low __pbssBANK4
  5118  03EB  0084               	movwf	4
  5119  03EC  3002               	movlw	high __pbssBANK4
  5120  03ED  0085               	movwf	5
  5121  03EE  303C               	movlw	60
  5122  03EF  00FE               	movwf	btemp
  5123  03F0  3000               	movlw	0
  5124  03F1  00FF               	movwf	btemp+1
  5125  03F2  31AD  25EA  3183   	fcall	clear_ram0
  5126                           
  5127                           ; Clear objects allocated to BANK5
  5128  03F5  30A0               	movlw	low __pbssBANK5
  5129  03F6  0084               	movwf	4
  5130  03F7  3002               	movlw	high __pbssBANK5
  5131  03F8  0085               	movwf	5
  5132  03F9  3032               	movlw	50
  5133  03FA  00FE               	movwf	btemp
  5134  03FB  3000               	movlw	0
  5135  03FC  00FF               	movwf	btemp+1
  5136  03FD  31AD  25EA  3183   	fcall	clear_ram0
  5137                           
  5138                           ; Clear objects allocated to BANK6
  5139  0400  3020               	movlw	low __pbssBANK6
  5140  0401  0084               	movwf	4
  5141  0402  3003               	movlw	high __pbssBANK6
  5142  0403  0085               	movwf	5
  5143  0404  3021               	movlw	33
  5144  0405  00FE               	movwf	btemp
  5145  0406  3000               	movlw	0
  5146  0407  00FF               	movwf	btemp+1
  5147  0408  31AD  25EA         	fcall	clear_ram0
  5148  040A                     end_of_initialization:	
  5149                           ;End of C runtime variable initialization code
  5150                           
  5151  040A                     __end_of__initialization:	
  5152  040A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5153  040B  0020               	movlb	0
  5154  040C  31A0  2862         	ljmp	_main	;jump to C main() function
  5155                           
  5156                           	psect	bssCOMMON
  5157  007D                     __pbssCOMMON:	
  5158  007D                     _timerExtension2:	
  5159  007D                     	ds	1
  5160                           
  5161                           	psect	bssBANK0
  5162  0058                     __pbssBANK0:	
  5163  0058                     _MACInitParams:	
  5164  0058                     	ds	2
  5165  005A                     _nextEEPosition:	
  5166  005A                     	ds	2
  5167  005C                     _IRQ1_Received:	
  5168  005C                     	ds	1
  5169  005D                     _MACSeq:	
  5170  005D                     	ds	1
  5171  005E                     _NumOfActiveScanResponse:	
  5172  005E                     	ds	1
  5173  005F                     _PUSH_BUTTON_pressed:	
  5174  005F                     	ds	1
  5175  0060                     _RF_Mode:	
  5176  0060                     	ds	1
  5177  0061                     _RSSILock:	
  5178  0061                     	ds	1
  5179  0062                     _RSSIVal:	
  5180  0062                     	ds	1
  5181  0063                     _ReceivedBankIndex:	
  5182  0063                     	ds	1
  5183  0064                     _TxMACSeq:	
  5184  0064                     	ds	1
  5185  0065                     _hasAck:	
  5186  0065                     	ds	1
  5187  0066                     _lost_connection:	
  5188  0066                     	ds	1
  5189  0067                     _myConnectionIndex_in_PanCo:	
  5190  0067                     	ds	1
  5191  0068                     _timerExtension1:	
  5192  0068                     	ds	1
  5193  0069                     _nvmConnMode:	
  5194  0069                     	ds	2
  5195  006B                     _nvmCurrentChannel:	
  5196  006B                     	ds	2
  5197  006D                     _nvmEdc:	
  5198  006D                     	ds	2
  5199                           
  5200                           	psect	bssBANK2
  5201  0120                     __pbssBANK2:	
  5202  0120                     _rxMessage:	
  5203  0120                     	ds	10
  5204  012A                     _MACRxPacket:	
  5205  012A                     	ds	8
  5206  0132                     _PUSH_BUTTON_press_time:	
  5207  0132                     	ds	4
  5208  0136                     _nvmDelayTick:	
  5209  0136                     	ds	4
  5210  013A                     _LatestConnection:	
  5211  013A                     	ds	1
  5212  013B                     _MyindexinPC:	
  5213  013B                     	ds	1
  5214  013C                     _P2PCapacityInfo:	
  5215  013C                     	ds	1
  5216  013D                     _P2PStatus:	
  5217  013D                     	ds	1
  5218  013E                     _RxNum:	
  5219  013E                     	ds	1
  5220  013F                     _TxData:	
  5221  013F                     	ds	1
  5222  0140                     _TxNum:	
  5223  0140                     	ds	1
  5224  0141                     _TxSynCount:	
  5225  0141                     	ds	1
  5226  0142                     _TxSynCount2:	
  5227  0142                     	ds	1
  5228  0143                     _i:	
  5229  0143                     	ds	1
  5230  0144                     _temp_bit:	
  5231  0144                     	ds	1
  5232  0145                     _nvmConnectionTable:	
  5233  0145                     	ds	2
  5234  0147                     _nvmMyPANID:	
  5235  0147                     	ds	2
  5236  0149                     _nvmOutFrameCounter:	
  5237  0149                     	ds	2
  5238  014B                     _conn_size:	
  5239  014B                     	ds	1
  5240  014C                     _currentChannel:	
  5241  014C                     	ds	1
  5242                           
  5243                           	psect	dataBANK2
  5244  0169                     __pdataBANK2:	
  5245  0169                     _AdditionalNodeID:	
  5246  0169                     	ds	1
  5247  016A                     _chk_sel_status:	
  5248  016A                     	ds	1
  5249  016B                     _myChannel:	
  5250  016B                     	ds	1
  5251  016C                     _ConnMode:	
  5252  016C                     	ds	1
  5253                           
  5254                           	psect	bssBANK3
  5255  01A0                     __pbssBANK3:	
  5256  01A0                     _tick1:	
  5257  01A0                     	ds	4
  5258  01A4                     _tick4:	
  5259  01A4                     	ds	4
  5260  01A8                     _ConnectionTable:	
  5261  01A8                     	ds	50
  5262                           
  5263                           	psect	dataBANK3
  5264  01DA                     __pdataBANK3:	
  5265  01DA                     _myLongAddress:	
  5266  01DA                     	ds	8
  5267                           
  5268                           	psect	bssBANK4
  5269  0220                     __pbssBANK4:	
  5270  0220                     _AckInfo:	
  5271  0220                     	ds	30
  5272  023E                     _TxBuffer:	
  5273  023E                     	ds	30
  5274                           
  5275                           	psect	dataBANK4
  5276  025C                     __pdataBANK4:	
  5277  025C                     _CharacterArray:	
  5278  025C                     	ds	16
  5279                           
  5280                           	psect	bssBANK5
  5281  02A0                     __pbssBANK5:	
  5282  02A0                     _MACTxBuffer:	
  5283  02A0                     	ds	50
  5284                           
  5285                           	psect	bssBANK6
  5286  0320                     __pbssBANK6:	
  5287  0320                     _LCDText:	
  5288  0320                     	ds	33
  5289                           
  5290                           	psect	inittext
  5291  2DF6                     init_ram:	
  5292  2DF6  00FE               	movwf	126
  5293  2DF7                     initloop:	
  5294  2DF7  0012               	moviw fsr0++
  5295  2DF8  001E               	movwi fsr1++
  5296  2DF9  3001               	movlw	1
  5297  2DFA  02FE               	subwf	126,f
  5298  2DFB  3000               	movlw	0
  5299  2DFC  3BFF               	subwfb	127,f
  5300  2DFD  087F               	movf	127,w
  5301  2DFE  047E               	iorwf	126,w
  5302  2DFF  1903               	btfsc	3,2
  5303  2E00  3400               	retlw	0
  5304  2E01  2DF7               	goto	initloop
  5305                           
  5306                           	psect	clrtext
  5307  2DEA                     clear_ram0:	
  5308                           ;	Called with FSR0 containing the base address, and
  5309                           ;	btemp/btemp+1 has the size to clear
  5310                           
  5311  2DEA  0064               	clrwdt	;clear the watchdog before getting into this loop
  5312  2DEB                     clrloop0:	
  5313  2DEB  0180               	clrf	0	;clear RAM location pointed to by FSR
  5314  2DEC  3101               	addfsr 0,1
  5315  2DED  3001               	movlw	1
  5316  2DEE  02FE               	subwf	126,f
  5317  2DEF  3000               	movlw	0
  5318  2DF0  3BFF               	subwfb	127,f
  5319  2DF1  087F               	movf	127,w
  5320  2DF2  047E               	iorwf	126,w
  5321  2DF3  1903               	btfsc	3,2
  5322  2DF4  3400               	retlw	0	;all done for this memory range, return
  5323  2DF5  2DEB               	goto	clrloop0	;have we reached the end yet?
  5324                           
  5325                           	psect	cstackBANK2
  5326  014D                     __pcstackBANK2:	
  5327  014D                     P2PTasks@FW_Stat:	
  5328                           
  5329                           ; 1 bytes @ 0x0
  5330  014D                     	ds	1
  5331  014E                     P2PTasks@tmpTick:	
  5332                           
  5333                           ; 4 bytes @ 0x1
  5334  014E                     	ds	4
  5335  0152                     P2PTasks@status:	
  5336                           
  5337                           ; 1 bytes @ 0x5
  5338  0152                     	ds	1
  5339  0153                     P2PTasks@i:	
  5340                           
  5341                           ; 1 bytes @ 0x6
  5342  0153                     	ds	1
  5343  0154                     ??_MiApp_EstablishConnection:	
  5344  0154                     ??_run_p2p_demo:	
  5345                           ; 1 bytes @ 0x7
  5346                           
  5347                           
  5348                           ; 1 bytes @ 0x7
  5349  0154                     	ds	7
  5350  015B                     _run_p2p_demo$2971:	
  5351                           
  5352                           ; 2 bytes @ 0xE
  5353  015B                     	ds	1
  5354  015C                     MiApp_EstablishConnection@tmpConnectionMode:	
  5355                           
  5356                           ; 1 bytes @ 0xF
  5357  015C                     	ds	1
  5358  015D                     MiApp_EstablishConnection@retry:	
  5359  015D                     _run_p2p_demo$2972:	
  5360                           ; 1 bytes @ 0x10
  5361                           
  5362                           
  5363                           ; 2 bytes @ 0x10
  5364  015D                     	ds	1
  5365  015E                     MiApp_EstablishConnection@t1:	
  5366                           
  5367                           ; 4 bytes @ 0x11
  5368  015E                     	ds	1
  5369  015F                     _run_p2p_demo$2973:	
  5370                           
  5371                           ; 2 bytes @ 0x12
  5372  015F                     	ds	2
  5373  0161                     run_p2p_demo@PressedButton:	
  5374                           
  5375                           ; 1 bytes @ 0x14
  5376  0161                     	ds	1
  5377  0162                     MiApp_EstablishConnection@connectionInterval:	
  5378  0162                     run_p2p_demo@update_ed:	
  5379                           ; 1 bytes @ 0x15
  5380                           
  5381                           
  5382                           ; 1 bytes @ 0x15
  5383  0162                     	ds	1
  5384  0163                     run_p2p_demo@switch_val:	
  5385  0163                     MiApp_EstablishConnection@t2:	
  5386                           ; 1 bytes @ 0x16
  5387                           
  5388                           
  5389                           ; 4 bytes @ 0x16
  5390  0163                     	ds	1
  5391  0164                     run_p2p_demo@select_ed:	
  5392                           
  5393                           ; 1 bytes @ 0x17
  5394  0164                     	ds	3
  5395  0167                     MiApp_EstablishConnection@i:	
  5396                           
  5397                           ; 1 bytes @ 0x1A
  5398  0167                     	ds	1
  5399  0168                     main@freezer_enable:	
  5400                           
  5401                           ; 1 bytes @ 0x1B
  5402  0168                     	ds	1
  5403                           
  5404                           	psect	cstackBANK1
  5405  00A0                     __pcstackBANK1:	
  5406  00A0                     ??_SPIPut:	
  5407  00A0                     ??_MacroNop:	
  5408                           ; 1 bytes @ 0x0
  5409                           
  5410  00A0                     ??_InitSymbolTimer:	
  5411                           ; 1 bytes @ 0x0
  5412                           
  5413  00A0                     ??_CONSOLE_Put:	
  5414                           ; 1 bytes @ 0x0
  5415                           
  5416  00A0                     ?_memset:	
  5417                           ; 1 bytes @ 0x0
  5418                           
  5419  00A0                     ??_isdigit:	
  5420                           ; 1 bytes @ 0x0
  5421                           
  5422  00A0                     ?_NVMalloc:	
  5423                           ; 1 bytes @ 0x0
  5424                           
  5425  00A0                     ??_CONSOLE_Initialize:	
  5426                           ; 1 bytes @ 0x0
  5427                           
  5428  00A0                     ??_LCDInitSPI:	
  5429                           ; 1 bytes @ 0x0
  5430                           
  5431  00A0                     ??_DemoOutput_Instruction:	
  5432                           ; 1 bytes @ 0x0
  5433                           
  5434  00A0                     ?___bmul:	
  5435                           ; 1 bytes @ 0x0
  5436                           
  5437  00A0                     ?___awmod:	
  5438                           ; 1 bytes @ 0x0
  5439                           
  5440  00A0                     ?___lwdiv:	
  5441                           ; 2 bytes @ 0x0
  5442                           
  5443  00A0                     ?_MiWi_TickGet:	
  5444                           ; 2 bytes @ 0x0
  5445                           
  5446  00A0                     ?___lmul:	
  5447                           ; 4 bytes @ 0x0
  5448                           
  5449  00A0                     CONSOLE_Put@c:	
  5450                           ; 4 bytes @ 0x0
  5451                           
  5452  00A0                     ___bmul@multiplicand:	
  5453                           ; 1 bytes @ 0x0
  5454                           
  5455  00A0                     _isdigit$2577:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458  00A0                     NVMalloc@size:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461  00A0                     ___awmod@divisor:	
  5462                           ; 2 bytes @ 0x0
  5463                           
  5464  00A0                     ___lwdiv@divisor:	
  5465                           ; 2 bytes @ 0x0
  5466                           
  5467  00A0                     memset@c:	
  5468                           ; 2 bytes @ 0x0
  5469                           
  5470  00A0                     ___lmul@multiplier:	
  5471                           ; 2 bytes @ 0x0
  5472                           
  5473                           
  5474                           ; 4 bytes @ 0x0
  5475  00A0                     	ds	1
  5476  00A1                     ?_CONSOLE_PutString:	
  5477  00A1                     ??_CONSOLE_PrintHex:	
  5478                           ; 1 bytes @ 0x1
  5479                           
  5480  00A1                     ??___bmul:	
  5481                           ; 1 bytes @ 0x1
  5482                           
  5483  00A1                     SPIPut@i:	
  5484                           ; 1 bytes @ 0x1
  5485                           
  5486  00A1                     isdigit@c:	
  5487                           ; 1 bytes @ 0x1
  5488                           
  5489  00A1                     CONSOLE_PutString@str:	
  5490                           ; 1 bytes @ 0x1
  5491                           
  5492                           
  5493                           ; 2 bytes @ 0x1
  5494  00A1                     	ds	1
  5495  00A2                     SPIPut@v:	
  5496  00A2                     ___bmul@product:	
  5497                           ; 1 bytes @ 0x2
  5498                           
  5499  00A2                     NVMalloc@location:	
  5500                           ; 1 bytes @ 0x2
  5501                           
  5502  00A2                     ___awmod@dividend:	
  5503                           ; 2 bytes @ 0x2
  5504                           
  5505  00A2                     ___lwdiv@dividend:	
  5506                           ; 2 bytes @ 0x2
  5507                           
  5508  00A2                     memset@n:	
  5509                           ; 2 bytes @ 0x2
  5510                           
  5511                           
  5512                           ; 2 bytes @ 0x2
  5513  00A2                     	ds	1
  5514  00A3                     ??_RegisterRead:	
  5515  00A3                     ??_SPIGet:	
  5516                           ; 1 bytes @ 0x3
  5517                           
  5518  00A3                     ?_EEPROM_Read:	
  5519                           ; 1 bytes @ 0x3
  5520                           
  5521  00A3                     ??_CONSOLE_PutString:	
  5522                           ; 1 bytes @ 0x3
  5523                           
  5524  00A3                     ?_RegisterSet:	
  5525                           ; 1 bytes @ 0x3
  5526                           
  5527  00A3                     ??_WriteFIFO:	
  5528                           ; 1 bytes @ 0x3
  5529                           
  5530  00A3                     ?_NVMRead:	
  5531                           ; 1 bytes @ 0x3
  5532                           
  5533  00A3                     ??_LCDInitPortA:	
  5534                           ; 1 bytes @ 0x3
  5535                           
  5536  00A3                     ??_LCDInitPortB:	
  5537                           ; 1 bytes @ 0x3
  5538                           
  5539  00A3                     ??_LCDWritePortA:	
  5540                           ; 1 bytes @ 0x3
  5541                           
  5542  00A3                     ??_LCDWritePortB:	
  5543                           ; 1 bytes @ 0x3
  5544                           
  5545  00A3                     WriteFIFO@Data:	
  5546                           ; 1 bytes @ 0x3
  5547                           
  5548  00A3                     CONSOLE_PrintHex@PRINT_VAR:	
  5549                           ; 1 bytes @ 0x3
  5550                           
  5551  00A3                     EEPROM_Read@addr:	
  5552                           ; 1 bytes @ 0x3
  5553                           
  5554  00A3                     LCDInitPortA@preRFIE:	
  5555                           ; 1 bytes @ 0x3
  5556                           
  5557  00A3                     LCDInitPortB@preRFIE:	
  5558                           ; 1 bytes @ 0x3
  5559                           
  5560  00A3                     LCDWritePortA@v:	
  5561                           ; 1 bytes @ 0x3
  5562                           
  5563  00A3                     LCDWritePortB@v:	
  5564                           ; 1 bytes @ 0x3
  5565                           
  5566  00A3                     ___bmul@multiplier:	
  5567                           ; 1 bytes @ 0x3
  5568                           
  5569  00A3                     RegisterSet@setting:	
  5570                           ; 1 bytes @ 0x3
  5571                           
  5572  00A3                     NVMRead@addr:	
  5573                           ; 2 bytes @ 0x3
  5574                           
  5575                           
  5576                           ; 2 bytes @ 0x3
  5577  00A3                     	ds	1
  5578  00A4                     ??_MiWi_TickGet:	
  5579  00A4                     ?_isSameAddress:	
  5580                           ; 1 bytes @ 0x4
  5581                           
  5582  00A4                     ??_memset:	
  5583                           ; 1 bytes @ 0x4
  5584                           
  5585  00A4                     ??_NVMalloc:	
  5586                           ; 1 bytes @ 0x4
  5587                           
  5588  00A4                     ??_Total_Connections:	
  5589                           ; 1 bytes @ 0x4
  5590                           
  5591  00A4                     ??___awmod:	
  5592                           ; 1 bytes @ 0x4
  5593                           
  5594  00A4                     ??___lwdiv:	
  5595                           ; 1 bytes @ 0x4
  5596                           
  5597  00A4                     RegisterRead@value:	
  5598                           ; 1 bytes @ 0x4
  5599                           
  5600  00A4                     WriteFIFO@IRQ1select:	
  5601                           ; 1 bytes @ 0x4
  5602                           
  5603  00A4                     CONSOLE_PrintHex@toPrint:	
  5604                           ; 1 bytes @ 0x4
  5605                           
  5606  00A4                     EEPROM_Read@count:	
  5607                           ; 1 bytes @ 0x4
  5608                           
  5609  00A4                     LCDWritePortA@preRFIE:	
  5610                           ; 1 bytes @ 0x4
  5611                           
  5612  00A4                     LCDWritePortB@preRFIE:	
  5613                           ; 1 bytes @ 0x4
  5614                           
  5615  00A4                     isSameAddress@Address1:	
  5616                           ; 1 bytes @ 0x4
  5617                           
  5618  00A4                     ___lmul@multiplicand:	
  5619                           ; 2 bytes @ 0x4
  5620                           
  5621                           
  5622                           ; 4 bytes @ 0x4
  5623  00A4                     	ds	1
  5624  00A5                     ??_EEPROM_Read:	
  5625  00A5                     ??_RegisterSet:	
  5626                           ; 1 bytes @ 0x5
  5627                           
  5628  00A5                     ??_LCDInitWrite:	
  5629                           ; 1 bytes @ 0x5
  5630                           
  5631  00A5                     RegisterSet@IRQ1select:	
  5632                           ; 1 bytes @ 0x5
  5633                           
  5634  00A5                     RegisterRead@IRQ1select:	
  5635                           ; 1 bytes @ 0x5
  5636                           
  5637  00A5                     Total_Connections@count:	
  5638                           ; 1 bytes @ 0x5
  5639                           
  5640  00A5                     LCDInitWrite@v:	
  5641                           ; 1 bytes @ 0x5
  5642                           
  5643  00A5                     MiWi_TickGet@IntFlag2:	
  5644                           ; 1 bytes @ 0x5
  5645                           
  5646  00A5                     ___awmod@counter:	
  5647                           ; 1 bytes @ 0x5
  5648                           
  5649  00A5                     memset@p1:	
  5650                           ; 1 bytes @ 0x5
  5651                           
  5652  00A5                     NVMRead@count:	
  5653                           ; 1 bytes @ 0x5
  5654                           
  5655  00A5                     ___lwdiv@quotient:	
  5656                           ; 2 bytes @ 0x5
  5657                           
  5658                           
  5659                           ; 2 bytes @ 0x5
  5660  00A5                     	ds	1
  5661  00A6                     ??_SetRFMode:	
  5662  00A6                     ??_NVMInit:	
  5663                           ; 1 bytes @ 0x6
  5664                           
  5665  00A6                     RegisterRead@address:	
  5666                           ; 1 bytes @ 0x6
  5667                           
  5668  00A6                     Total_Connections@i:	
  5669                           ; 1 bytes @ 0x6
  5670                           
  5671  00A6                     isSameAddress@Address2:	
  5672                           ; 1 bytes @ 0x6
  5673                           
  5674  00A6                     CONSOLE_PutString@c:	
  5675                           ; 1 bytes @ 0x6
  5676                           
  5677  00A6                     EEPROM_Read@dest:	
  5678                           ; 1 bytes @ 0x6
  5679                           
  5680  00A6                     MiWi_TickGet@IntFlag1:	
  5681                           ; 1 bytes @ 0x6
  5682                           
  5683  00A6                     ___awmod@sign:	
  5684                           ; 1 bytes @ 0x6
  5685                           
  5686  00A6                     memset@p:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689                           
  5690                           ; 1 bytes @ 0x6
  5691  00A6                     	ds	1
  5692  00A7                     ??_isSameAddress:	
  5693  00A7                     ??_NVMRead:	
  5694                           ; 1 bytes @ 0x7
  5695                           
  5696  00A7                     ??_DemoOutput_HandleMessage:	
  5697                           ; 1 bytes @ 0x7
  5698                           
  5699  00A7                     ?___wmul:	
  5700                           ; 1 bytes @ 0x7
  5701                           
  5702  00A7                     ?___awdiv:	
  5703                           ; 2 bytes @ 0x7
  5704                           
  5705  00A7                     SetRFMode@mode:	
  5706                           ; 2 bytes @ 0x7
  5707                           
  5708  00A7                     NVMInit@result:	
  5709                           ; 1 bytes @ 0x7
  5710                           
  5711  00A7                     ___lwdiv@counter:	
  5712                           ; 1 bytes @ 0x7
  5713                           
  5714  00A7                     ___wmul@multiplier:	
  5715                           ; 1 bytes @ 0x7
  5716                           
  5717  00A7                     ___awdiv@divisor:	
  5718                           ; 2 bytes @ 0x7
  5719                           
  5720  00A7                     MiWi_TickGet@currentTime:	
  5721                           ; 2 bytes @ 0x7
  5722                           
  5723                           
  5724                           ; 4 bytes @ 0x7
  5725  00A7                     	ds	1
  5726  00A8                     ?_MiMAC_SetChannel:	
  5727  00A8                     ??___lmul:	
  5728                           ; 1 bytes @ 0x8
  5729                           
  5730  00A8                     ?___lwmod:	
  5731                           ; 1 bytes @ 0x8
  5732                           
  5733  00A8                     MiMAC_SetChannel@offsetFreq:	
  5734                           ; 2 bytes @ 0x8
  5735                           
  5736  00A8                     NVMRead@oldRFIE:	
  5737                           ; 1 bytes @ 0x8
  5738                           
  5739  00A8                     ___lwmod@divisor:	
  5740                           ; 1 bytes @ 0x8
  5741                           
  5742  00A8                     ___lmul@product:	
  5743                           ; 2 bytes @ 0x8
  5744                           
  5745                           
  5746                           ; 4 bytes @ 0x8
  5747  00A8                     	ds	1
  5748  00A9                     ??_MiMAC_SetChannel:	
  5749  00A9                     NVMRead@dest:	
  5750                           ; 1 bytes @ 0x9
  5751                           
  5752  00A9                     ___wmul@multiplicand:	
  5753                           ; 1 bytes @ 0x9
  5754                           
  5755  00A9                     ___awdiv@dividend:	
  5756                           ; 2 bytes @ 0x9
  5757                           
  5758                           
  5759                           ; 2 bytes @ 0x9
  5760  00A9                     	ds	1
  5761  00AA                     MiMAC_SetChannel@channel:	
  5762  00AA                     isSameAddress@i:	
  5763                           ; 1 bytes @ 0xA
  5764                           
  5765  00AA                     ___lwmod@dividend:	
  5766                           ; 1 bytes @ 0xA
  5767                           
  5768                           
  5769                           ; 2 bytes @ 0xA
  5770  00AA                     	ds	1
  5771  00AB                     ?_MiApp_StartConnection:	
  5772  00AB                     ??_ButtonPressed:	
  5773                           ; 1 bytes @ 0xB
  5774                           
  5775  00AB                     ??___wmul:	
  5776                           ; 1 bytes @ 0xB
  5777                           
  5778  00AB                     ??___awdiv:	
  5779                           ; 1 bytes @ 0xB
  5780                           
  5781  00AB                     MiApp_StartConnection@ScanDuration:	
  5782                           ; 1 bytes @ 0xB
  5783                           
  5784  00AB                     DemoOutput_HandleMessage@i:	
  5785                           ; 1 bytes @ 0xB
  5786                           
  5787  00AB                     ___wmul@product:	
  5788                           ; 1 bytes @ 0xB
  5789                           
  5790                           
  5791                           ; 2 bytes @ 0xB
  5792  00AB                     	ds	1
  5793  00AC                     ?_DELAY_10us:	
  5794  00AC                     ?_DELAY_ms:	
  5795                           ; 1 bytes @ 0xC
  5796                           
  5797  00AC                     ??___lwmod:	
  5798                           ; 1 bytes @ 0xC
  5799                           
  5800  00AC                     ___awdiv@counter:	
  5801                           ; 1 bytes @ 0xC
  5802                           
  5803  00AC                     DELAY_ms@ms:	
  5804                           ; 1 bytes @ 0xC
  5805                           
  5806  00AC                     MiApp_StartConnection@ChannelMap:	
  5807                           ; 2 bytes @ 0xC
  5808                           
  5809  00AC                     DELAY_10us@tenMicroSecondCounter:	
  5810                           ; 4 bytes @ 0xC
  5811                           
  5812                           
  5813                           ; 4 bytes @ 0xC
  5814  00AC                     	ds	1
  5815  00AD                     ??_MiMAC_ReceivedPacket:	
  5816  00AD                     ??_MiMAC_DiscardPacket:	
  5817                           ; 1 bytes @ 0xD
  5818                           
  5819  00AD                     ?_NVMWrite:	
  5820                           ; 1 bytes @ 0xD
  5821                           
  5822  00AD                     ___awdiv@sign:	
  5823                           ; 1 bytes @ 0xD
  5824                           
  5825  00AD                     ___lwmod@counter:	
  5826                           ; 1 bytes @ 0xD
  5827                           
  5828  00AD                     NVMWrite@addr:	
  5829                           ; 1 bytes @ 0xD
  5830                           
  5831                           
  5832                           ; 2 bytes @ 0xD
  5833  00AD                     	ds	1
  5834  00AE                     ??_DELAY_ms:	
  5835  00AE                     ?_sprintf:	
  5836                           ; 1 bytes @ 0xE
  5837                           
  5838  00AE                     sprintf@f:	
  5839                           ; 2 bytes @ 0xE
  5840                           
  5841  00AE                     ___awdiv@quotient:	
  5842                           ; 2 bytes @ 0xE
  5843                           
  5844  00AE                     DELAY_ms@cyclesRequiredForEntireDelay:	
  5845                           ; 2 bytes @ 0xE
  5846                           
  5847                           
  5848                           ; 4 bytes @ 0xE
  5849  00AE                     	ds	1
  5850  00AF                     NVMWrite@count:	
  5851                           
  5852                           ; 2 bytes @ 0xF
  5853  00AF                     	ds	1
  5854  00B0                     ??_DELAY_10us:	
  5855  00B0                     ??_CONSOLE_PrintDec:	
  5856                           ; 1 bytes @ 0x10
  5857                           
  5858  00B0                     ??_MiApp_StartConnection:	
  5859                           ; 1 bytes @ 0x10
  5860                           
  5861  00B0                     MiApp_StartConnection@Mode:	
  5862                           ; 1 bytes @ 0x10
  5863                           
  5864  00B0                     DELAY_10us@cyclesRequiredForEntireDelay:	
  5865                           ; 1 bytes @ 0x10
  5866                           
  5867                           
  5868                           ; 4 bytes @ 0x10
  5869  00B0                     	ds	1
  5870  00B1                     ??_MiApp_DiscardMessage:	
  5871  00B1                     ??_NVMWrite:	
  5872                           ; 1 bytes @ 0x11
  5873                           
  5874                           
  5875                           ; 1 bytes @ 0x11
  5876  00B1                     	ds	1
  5877  00B2                     ?_MiMAC_Init:	
  5878  00B2                     ??_LCD_i_write:	
  5879                           ; 1 bytes @ 0x12
  5880                           
  5881  00B2                     ??_LCD_d_write:	
  5882                           ; 1 bytes @ 0x12
  5883                           
  5884  00B2                     ??_LCD_Initialize:	
  5885                           ; 1 bytes @ 0x12
  5886                           
  5887  00B2                     ??_LCD_Erase:	
  5888                           ; 1 bytes @ 0x12
  5889                           
  5890  00B2                     ??_SYSTEM_Initialize:	
  5891                           ; 1 bytes @ 0x12
  5892                           
  5893  00B2                     CONSOLE_PrintDec@toPrint:	
  5894                           ; 1 bytes @ 0x12
  5895                           
  5896  00B2                     LCD_i_write@v:	
  5897                           ; 1 bytes @ 0x12
  5898                           
  5899  00B2                     LCD_d_write@v:	
  5900                           ; 1 bytes @ 0x12
  5901                           
  5902  00B2                     MiMAC_Init@initValue:	
  5903                           ; 1 bytes @ 0x12
  5904                           
  5905                           
  5906                           ; 2 bytes @ 0x12
  5907  00B2                     	ds	1
  5908  00B3                     ??_DumpConnection:	
  5909  00B3                     ??_LCD_Update:	
  5910                           ; 1 bytes @ 0x13
  5911                           
  5912  00B3                     ??_DemoOutput_ChannelError:	
  5913                           ; 1 bytes @ 0x13
  5914                           
  5915  00B3                     DemoOutput_ChannelError@channel:	
  5916                           ; 1 bytes @ 0x13
  5917                           
  5918  00B3                     ButtonPressed@tickDifference:	
  5919                           ; 1 bytes @ 0x13
  5920                           
  5921                           
  5922                           ; 4 bytes @ 0x13
  5923  00B3                     	ds	1
  5924  00B4                     ?_TxPacket:	
  5925  00B4                     ??_MiMAC_Init:	
  5926                           ; 1 bytes @ 0x14
  5927                           
  5928  00B4                     TxPacket@CCA:	
  5929                           ; 1 bytes @ 0x14
  5930                           
  5931  00B4                     LCD_Update@i:	
  5932                           ; 1 bytes @ 0x14
  5933                           
  5934                           
  5935                           ; 1 bytes @ 0x14
  5936  00B4                     	ds	1
  5937  00B5                     ??_TxPacket:	
  5938  00B5                     NVMWrite@oldRFIE:	
  5939                           ; 1 bytes @ 0x15
  5940                           
  5941                           
  5942                           ; 1 bytes @ 0x15
  5943  00B5                     	ds	1
  5944  00B6                     NVMWrite@PageCounter:	
  5945                           
  5946                           ; 1 bytes @ 0x16
  5947  00B6                     	ds	1
  5948  00B7                     NVMWrite@source:	
  5949  00B7                     DumpConnection@index:	
  5950                           ; 1 bytes @ 0x17
  5951                           
  5952  00B7                     MiMAC_ReceivedPacket@currentTick:	
  5953                           ; 1 bytes @ 0x17
  5954                           
  5955  00B7                     ButtonPressed@t:	
  5956                           ; 4 bytes @ 0x17
  5957                           
  5958                           
  5959                           ; 4 bytes @ 0x17
  5960  00B7                     	ds	1
  5961  00B8                     ??_AddConnection:	
  5962  00B8                     ??_MiApp_SetChannel:	
  5963                           ; 1 bytes @ 0x18
  5964                           
  5965  00B8                     ??_sprintf:	
  5966                           ; 1 bytes @ 0x18
  5967                           
  5968  00B8                     ??_MiApp_ConnectionMode:	
  5969                           ; 1 bytes @ 0x18
  5970                           
  5971  00B8                     MiMAC_Init@i:	
  5972                           ; 1 bytes @ 0x18
  5973                           
  5974  00B8                     DumpConnection@j:	
  5975                           ; 1 bytes @ 0x18
  5976                           
  5977                           
  5978                           ; 1 bytes @ 0x18
  5979  00B8                     	ds	1
  5980  00B9                     MiApp_SetChannel@channel:	
  5981  00B9                     DumpConnection@i:	
  5982                           ; 1 bytes @ 0x19
  5983                           
  5984                           
  5985                           ; 1 bytes @ 0x19
  5986  00B9                     	ds	1
  5987  00BA                     ??_MiApp_ProtocolInit:	
  5988  00BA                     MiApp_ConnectionMode@Mode:	
  5989                           ; 1 bytes @ 0x1A
  5990                           
  5991                           
  5992                           ; 1 bytes @ 0x1A
  5993  00BA                     	ds	1
  5994  00BB                     MiMAC_ReceivedPacket@PayloadIndex:	
  5995                           
  5996                           ; 1 bytes @ 0x1B
  5997  00BB                     	ds	1
  5998  00BC                     MiMAC_ReceivedPacket@i:	
  5999  00BC                     MiApp_ProtocolInit@bNetworkFreezer:	
  6000                           ; 1 bytes @ 0x1C
  6001                           
  6002  00BC                     _sprintf$2384:	
  6003                           ; 1 bytes @ 0x1C
  6004                           
  6005                           
  6006                           ; 2 bytes @ 0x1C
  6007  00BC                     	ds	1
  6008  00BD                     MiApp_ProtocolInit@initValue:	
  6009  00BD                     TxPacket@t1:	
  6010                           ; 2 bytes @ 0x1D
  6011                           
  6012                           
  6013                           ; 4 bytes @ 0x1D
  6014  00BD                     	ds	1
  6015  00BE                     _sprintf$2385:	
  6016                           
  6017                           ; 2 bytes @ 0x1E
  6018  00BE                     	ds	1
  6019  00BF                     MiApp_ProtocolInit@i:	
  6020  00BF                     AddConnection@status:	
  6021                           ; 1 bytes @ 0x1F
  6022                           
  6023                           
  6024                           ; 1 bytes @ 0x1F
  6025  00BF                     	ds	1
  6026  00C0                     AddConnection@connectionSlot:	
  6027  00C0                     _sprintf$2391:	
  6028                           ; 1 bytes @ 0x20
  6029                           
  6030                           
  6031                           ; 2 bytes @ 0x20
  6032  00C0                     	ds	1
  6033  00C1                     AddConnection@i:	
  6034  00C1                     TxPacket@t2:	
  6035                           ; 1 bytes @ 0x21
  6036                           
  6037                           
  6038                           ; 4 bytes @ 0x21
  6039  00C1                     	ds	1
  6040  00C2                     sprintf@idx:	
  6041                           
  6042                           ; 1 bytes @ 0x22
  6043  00C2                     	ds	1
  6044  00C3                     sprintf@cp:	
  6045                           
  6046                           ; 1 bytes @ 0x23
  6047  00C3                     	ds	1
  6048  00C4                     sprintf@len:	
  6049                           
  6050                           ; 2 bytes @ 0x24
  6051  00C4                     	ds	1
  6052  00C5                     TxPacket@CCARetries:	
  6053                           
  6054                           ; 1 bytes @ 0x25
  6055  00C5                     	ds	1
  6056  00C6                     TxPacket@reTry:	
  6057  00C6                     sprintf@ap:	
  6058                           ; 1 bytes @ 0x26
  6059                           
  6060                           
  6061                           ; 1 bytes @ 0x26
  6062  00C6                     	ds	1
  6063  00C7                     TxPacket@allowedTxFailure:	
  6064  00C7                     sprintf@val:	
  6065                           ; 1 bytes @ 0x27
  6066                           
  6067                           
  6068                           ; 2 bytes @ 0x27
  6069  00C7                     	ds	1
  6070  00C8                     TxPacket@status:	
  6071                           
  6072                           ; 1 bytes @ 0x28
  6073  00C8                     	ds	1
  6074  00C9                     TxPacket@TxPacketLen:	
  6075  00C9                     sprintf@prec:	
  6076                           ; 1 bytes @ 0x29
  6077                           
  6078                           
  6079                           ; 1 bytes @ 0x29
  6080  00C9                     	ds	1
  6081  00CA                     TxPacket@i:	
  6082  00CA                     sprintf@width:	
  6083                           ; 1 bytes @ 0x2A
  6084                           
  6085                           
  6086                           ; 2 bytes @ 0x2A
  6087  00CA                     	ds	1
  6088  00CB                     TxPacket@rssival:	
  6089                           
  6090                           ; 1 bytes @ 0x2B
  6091  00CB                     	ds	1
  6092  00CC                     ?_MiMAC_SendPacket:	
  6093  00CC                     sprintf@c:	
  6094                           ; 1 bytes @ 0x2C
  6095                           
  6096  00CC                     MiMAC_SendPacket@transParam:	
  6097                           ; 1 bytes @ 0x2C
  6098                           
  6099                           
  6100                           ; 3 bytes @ 0x2C
  6101  00CC                     	ds	1
  6102  00CD                     sprintf@sp:	
  6103                           
  6104                           ; 1 bytes @ 0x2D
  6105  00CD                     	ds	1
  6106  00CE                     sprintf@flag:	
  6107                           
  6108                           ; 2 bytes @ 0x2E
  6109  00CE                     	ds	1
  6110  00CF                     MiMAC_SendPacket@MACPayload:	
  6111                           
  6112                           ; 1 bytes @ 0x2F
  6113  00CF                     	ds	1
  6114  00D0                     ?_LCDTRXCount:	
  6115  00D0                     ?_LCDDisplay:	
  6116                           ; 1 bytes @ 0x30
  6117                           
  6118  00D0                     MiMAC_SendPacket@MACPayloadLen:	
  6119                           ; 1 bytes @ 0x30
  6120                           
  6121  00D0                     LCDTRXCount@rxCount:	
  6122                           ; 1 bytes @ 0x30
  6123                           
  6124  00D0                     LCDDisplay@text:	
  6125                           ; 1 bytes @ 0x30
  6126                           
  6127                           
  6128                           ; 2 bytes @ 0x30
  6129  00D0                     	ds	1
  6130  00D1                     ??_MiMAC_SendPacket:	
  6131  00D1                     ??_LCDTRXCount:	
  6132                           ; 1 bytes @ 0x31
  6133                           
  6134                           
  6135                           ; 1 bytes @ 0x31
  6136  00D1                     	ds	1
  6137  00D2                     LCDDisplay@value:	
  6138                           
  6139                           ; 1 bytes @ 0x32
  6140  00D2                     	ds	1
  6141  00D3                     LCDTRXCount@txCount:	
  6142  00D3                     LCDDisplay@delay:	
  6143                           ; 1 bytes @ 0x33
  6144                           
  6145                           
  6146                           ; 1 bytes @ 0x33
  6147  00D3                     	ds	1
  6148  00D4                     ??_LCDDisplay:	
  6149  00D4                     ?_DemoOutput_UpdateTxRx:	
  6150                           ; 1 bytes @ 0x34
  6151                           
  6152  00D4                     MiMAC_SendPacket@TxIndex:	
  6153                           ; 1 bytes @ 0x34
  6154                           
  6155  00D4                     DemoOutput_UpdateTxRx@RxNum:	
  6156                           ; 1 bytes @ 0x34
  6157                           
  6158                           
  6159                           ; 1 bytes @ 0x34
  6160  00D4                     	ds	1
  6161  00D5                     ??_DemoOutput_UpdateTxRx:	
  6162  00D5                     MiMAC_SendPacket@i:	
  6163                           ; 1 bytes @ 0x35
  6164                           
  6165                           
  6166                           ; 1 bytes @ 0x35
  6167  00D5                     	ds	1
  6168  00D6                     ?_SendPacket:	
  6169  00D6                     LCDDisplay@i:	
  6170                           ; 1 bytes @ 0x36
  6171                           
  6172  00D6                     DemoOutput_UpdateTxRx@TxNum:	
  6173                           ; 1 bytes @ 0x36
  6174                           
  6175  00D6                     SendPacket@DestinationAddress:	
  6176                           ; 1 bytes @ 0x36
  6177                           
  6178                           
  6179                           ; 2 bytes @ 0x36
  6180  00D6                     	ds	1
  6181  00D7                     ??_freezer_feature:	
  6182  00D7                     ??_DemoOutput_Greeting:	
  6183                           ; 1 bytes @ 0x37
  6184                           
  6185  00D7                     ?_DemoOutput_Channel:	
  6186                           ; 1 bytes @ 0x37
  6187                           
  6188  00D7                     ??_DemoOutput_UnicastFail:	
  6189                           ; 1 bytes @ 0x37
  6190                           
  6191  00D7                     DemoOutput_Channel@Step:	
  6192                           ; 1 bytes @ 0x37
  6193                           
  6194                           
  6195                           ; 1 bytes @ 0x37
  6196  00D7                     	ds	1
  6197  00D8                     ??_DemoOutput_Channel:	
  6198  00D8                     SendPacket@isCommand:	
  6199                           ; 1 bytes @ 0x38
  6200                           
  6201                           
  6202                           ; 1 bytes @ 0x38
  6203  00D8                     	ds	1
  6204  00D9                     SendPacket@SecurityEnabled:	
  6205  00D9                     DemoOutput_Channel@channel:	
  6206                           ; 1 bytes @ 0x39
  6207                           
  6208                           
  6209                           ; 1 bytes @ 0x39
  6210  00D9                     	ds	1
  6211  00DA                     ??_SendPacket:	
  6212                           
  6213                           ; 1 bytes @ 0x3A
  6214  00DA                     	ds	3
  6215  00DD                     SendPacket@status:	
  6216                           
  6217                           ; 1 bytes @ 0x3D
  6218  00DD                     	ds	1
  6219  00DE                     SendPacket@Broadcast:	
  6220                           
  6221                           ; 1 bytes @ 0x3E
  6222  00DE                     	ds	1
  6223  00DF                     SendPacket@tParam:	
  6224  00DF                     freezer_feature@tick1:	
  6225                           ; 3 bytes @ 0x3F
  6226                           
  6227                           
  6228                           ; 4 bytes @ 0x3F
  6229  00DF                     	ds	3
  6230  00E2                     ?_MiApp_UnicastAddress:	
  6231  00E2                     ??_P2PTasks:	
  6232                           ; 1 bytes @ 0x42
  6233                           
  6234  00E2                     ??_MiApp_BroadcastPacket:	
  6235                           ; 1 bytes @ 0x42
  6236                           
  6237  00E2                     MiApp_UnicastAddress@PermanentAddr:	
  6238                           ; 1 bytes @ 0x42
  6239                           
  6240                           
  6241                           ; 1 bytes @ 0x42
  6242  00E2                     	ds	1
  6243  00E3                     MiApp_BroadcastPacket@SecEn:	
  6244  00E3                     MiApp_UnicastAddress@SecEn:	
  6245                           ; 1 bytes @ 0x43
  6246                           
  6247  00E3                     freezer_feature@tick2:	
  6248                           ; 1 bytes @ 0x43
  6249                           
  6250                           
  6251                           ; 4 bytes @ 0x43
  6252  00E3                     	ds	1
  6253  00E4                     ??_MiApp_UnicastAddress:	
  6254                           
  6255                           ; 1 bytes @ 0x44
  6256  00E4                     	ds	1
  6257  00E5                     MiApp_UnicastAddress@DestinationAddress:	
  6258                           
  6259                           ; 1 bytes @ 0x45
  6260  00E5                     	ds	1
  6261  00E6                     ?_MiApp_UnicastConnection:	
  6262  00E6                     MiApp_UnicastConnection@SecEn:	
  6263                           ; 1 bytes @ 0x46
  6264                           
  6265                           
  6266                           ; 1 bytes @ 0x46
  6267  00E6                     	ds	1
  6268  00E7                     ??_MiApp_UnicastConnection:	
  6269  00E7                     freezer_feature@switch_val:	
  6270                           ; 1 bytes @ 0x47
  6271                           
  6272                           
  6273                           ; 1 bytes @ 0x47
  6274  00E7                     	ds	2
  6275  00E9                     MiApp_UnicastConnection@ConnectionIndex:	
  6276                           
  6277                           ; 1 bytes @ 0x49
  6278  00E9                     	ds	1
  6279  00EA                     ??_MiApp_MessageAvailable:	
  6280                           
  6281                           ; 1 bytes @ 0x4A
  6282  00EA                     	ds	1
  6283  00EB                     ?_MiApp_EstablishConnection:	
  6284  00EB                     ??_Process_RxMessage:	
  6285                           ; 1 bytes @ 0x4B
  6286                           
  6287  00EB                     MiApp_EstablishConnection@Mode:	
  6288                           ; 1 bytes @ 0x4B
  6289                           
  6290                           
  6291                           ; 1 bytes @ 0x4B
  6292  00EB                     	ds	1
  6293  00EC                     ??_Initialize_Demo:	
  6294                           
  6295                           ; 1 bytes @ 0x4C
  6296  00EC                     	ds	1
  6297  00ED                     ??_Run_Demo:	
  6298  00ED                     Initialize_Demo@freezer_enable:	
  6299                           ; 1 bytes @ 0x4D
  6300                           
  6301                           
  6302                           ; 1 bytes @ 0x4D
  6303  00ED                     	ds	1
  6304  00EE                     Initialize_Demo@i:	
  6305                           
  6306                           ; 1 bytes @ 0x4E
  6307  00EE                     	ds	1
  6308  00EF                     ??_main:	
  6309                           
  6310                           ; 1 bytes @ 0x4F
  6311  00EF                     	ds	1
  6312                           
  6313                           	psect	cstackCOMMON
  6314  0070                     __pcstackCOMMON:	
  6315  0070                     ?_isdigit:	
  6316  0070                     ?_RegisterRead:	
  6317                           ; 1 bit 
  6318                           
  6319  0070                     ?_SPIPut:	
  6320                           ; 1 bytes @ 0x0
  6321                           
  6322  0070                     ?_SPIGet:	
  6323                           ; 1 bytes @ 0x0
  6324                           
  6325  0070                     ?_SetRFMode:	
  6326                           ; 1 bytes @ 0x0
  6327                           
  6328  0070                     ?_UserInterruptHandler:	
  6329                           ; 1 bytes @ 0x0
  6330                           
  6331  0070                     ??_UserInterruptHandler:	
  6332                           ; 1 bytes @ 0x0
  6333                           
  6334  0070                     ?_MacroNop:	
  6335                           ; 1 bytes @ 0x0
  6336                           
  6337  0070                     ?_AddConnection:	
  6338                           ; 1 bytes @ 0x0
  6339                           
  6340  0070                     ?_InitSymbolTimer:	
  6341                           ; 1 bytes @ 0x0
  6342                           
  6343  0070                     ?_CONSOLE_PrintHex:	
  6344                           ; 1 bytes @ 0x0
  6345                           
  6346  0070                     ?_MiApp_SetChannel:	
  6347                           ; 1 bytes @ 0x0
  6348                           
  6349  0070                     ?_MiApp_MessageAvailable:	
  6350                           ; 1 bytes @ 0x0
  6351                           
  6352  0070                     ?_MiApp_DiscardMessage:	
  6353                           ; 1 bytes @ 0x0
  6354                           
  6355  0070                     ?_CONSOLE_PrintDec:	
  6356                           ; 1 bytes @ 0x0
  6357                           
  6358  0070                     ?_CONSOLE_Put:	
  6359                           ; 1 bytes @ 0x0
  6360                           
  6361  0070                     ?_freezer_feature:	
  6362                           ; 1 bytes @ 0x0
  6363                           
  6364  0070                     ?_Initialize_Demo:	
  6365                           ; 1 bytes @ 0x0
  6366                           
  6367  0070                     ?_Run_Demo:	
  6368                           ; 1 bytes @ 0x0
  6369                           
  6370  0070                     ?_WriteFIFO:	
  6371                           ; 1 bytes @ 0x0
  6372                           
  6373  0070                     ?_MiMAC_ReceivedPacket:	
  6374                           ; 1 bytes @ 0x0
  6375                           
  6376  0070                     ?_MiMAC_DiscardPacket:	
  6377                           ; 1 bytes @ 0x0
  6378                           
  6379  0070                     ?_high_isr:	
  6380                           ; 1 bytes @ 0x0
  6381                           
  6382  0070                     ?_NVMInit:	
  6383                           ; 1 bytes @ 0x0
  6384                           
  6385  0070                     ?_Total_Connections:	
  6386                           ; 1 bytes @ 0x0
  6387                           
  6388  0070                     ?_P2PTasks:	
  6389                           ; 1 bytes @ 0x0
  6390                           
  6391  0070                     ?_MiApp_ProtocolInit:	
  6392                           ; 1 bytes @ 0x0
  6393                           
  6394  0070                     ?_MiApp_BroadcastPacket:	
  6395                           ; 1 bytes @ 0x0
  6396                           
  6397  0070                     ?_DumpConnection:	
  6398                           ; 1 bytes @ 0x0
  6399                           
  6400  0070                     ?_MiApp_ConnectionMode:	
  6401                           ; 1 bytes @ 0x0
  6402                           
  6403  0070                     ?_CONSOLE_Initialize:	
  6404                           ; 1 bytes @ 0x0
  6405                           
  6406  0070                     ?_LCDInitSPI:	
  6407                           ; 1 bytes @ 0x0
  6408                           
  6409  0070                     ?_LCDInitPortA:	
  6410                           ; 1 bytes @ 0x0
  6411                           
  6412  0070                     ?_LCDInitPortB:	
  6413                           ; 1 bytes @ 0x0
  6414                           
  6415  0070                     ?_LCDWritePortA:	
  6416                           ; 1 bytes @ 0x0
  6417                           
  6418  0070                     ?_LCDWritePortB:	
  6419                           ; 1 bytes @ 0x0
  6420                           
  6421  0070                     ?_LCDInitWrite:	
  6422                           ; 1 bytes @ 0x0
  6423                           
  6424  0070                     ?_LCD_i_write:	
  6425                           ; 1 bytes @ 0x0
  6426                           
  6427  0070                     ?_LCD_d_write:	
  6428                           ; 1 bytes @ 0x0
  6429                           
  6430  0070                     ?_LCD_Initialize:	
  6431                           ; 1 bytes @ 0x0
  6432                           
  6433  0070                     ?_LCD_Update:	
  6434                           ; 1 bytes @ 0x0
  6435                           
  6436  0070                     ?_LCD_Erase:	
  6437                           ; 1 bytes @ 0x0
  6438                           
  6439  0070                     ?_SYSTEM_Initialize:	
  6440                           ; 1 bytes @ 0x0
  6441                           
  6442  0070                     ?_DemoOutput_Greeting:	
  6443                           ; 1 bytes @ 0x0
  6444                           
  6445  0070                     ?_DemoOutput_Instruction:	
  6446                           ; 1 bytes @ 0x0
  6447                           
  6448  0070                     ?_DemoOutput_HandleMessage:	
  6449                           ; 1 bytes @ 0x0
  6450                           
  6451  0070                     ?_DemoOutput_ChannelError:	
  6452                           ; 1 bytes @ 0x0
  6453                           
  6454  0070                     ?_DemoOutput_UnicastFail:	
  6455                           ; 1 bytes @ 0x0
  6456                           
  6457  0070                     ?_ButtonPressed:	
  6458                           ; 1 bytes @ 0x0
  6459                           
  6460  0070                     ?_main:	
  6461                           ; 1 bytes @ 0x0
  6462                           
  6463  0070                     ?_Process_RxMessage:	
  6464                           ; 1 bytes @ 0x0
  6465                           
  6466  0070                     ?_run_p2p_demo:	
  6467                           ; 1 bytes @ 0x0
  6468                           
  6469  0070                     ?i1_RegisterRead:	
  6470                           ; 1 bytes @ 0x0
  6471                           
  6472  0070                     ?i1_WriteFIFO:	
  6473                           ; 1 bytes @ 0x0
  6474                           
  6475  0070                     ?i1_SetRFMode:	
  6476                           ; 1 bytes @ 0x0
  6477                           
  6478  0070                     ?i1_SPIPut:	
  6479                           ; 1 bytes @ 0x0
  6480                           
  6481  0070                     ??i1_SPIPut:	
  6482                           ; 1 bytes @ 0x0
  6483                           
  6484  0070                     ?i1_SPIGet:	
  6485                           ; 1 bytes @ 0x0
  6486                           
  6487  0070                     ?i1___bmul:	
  6488                           ; 1 bytes @ 0x0
  6489                           
  6490  0070                     ?i1___wmul:	
  6491                           ; 1 bytes @ 0x0
  6492                           
  6493  0070                     ?i1_MiWi_TickGet:	
  6494                           ; 2 bytes @ 0x0
  6495                           
  6496  0070                     ?i1___lmul:	
  6497                           ; 4 bytes @ 0x0
  6498                           
  6499  0070                     MiApp_EstablishConnection@ActiveScanIndex:	
  6500                           ; 4 bytes @ 0x0
  6501                           
  6502  0070                     i1___bmul@multiplicand:	
  6503                           ; 1 bytes @ 0x0
  6504                           
  6505  0070                     i1___wmul@multiplier:	
  6506                           ; 1 bytes @ 0x0
  6507                           
  6508  0070                     i1___lmul@multiplier:	
  6509                           ; 2 bytes @ 0x0
  6510                           
  6511                           
  6512                           ; 4 bytes @ 0x0
  6513  0070                     	ds	1
  6514  0071                     ??i1___bmul:	
  6515  0071                     i1SPIPut@i:	
  6516                           ; 1 bytes @ 0x1
  6517                           
  6518                           
  6519                           ; 1 bytes @ 0x1
  6520  0071                     	ds	1
  6521  0072                     i1SPIPut@v:	
  6522  0072                     i1___bmul@multiplier:	
  6523                           ; 1 bytes @ 0x2
  6524                           
  6525  0072                     i1___wmul@multiplicand:	
  6526                           ; 1 bytes @ 0x2
  6527                           
  6528                           
  6529                           ; 2 bytes @ 0x2
  6530  0072                     	ds	1
  6531  0073                     ?i1_RegisterSet:	
  6532  0073                     ??i1_RegisterRead:	
  6533                           ; 1 bytes @ 0x3
  6534                           
  6535  0073                     ??i1_WriteFIFO:	
  6536                           ; 1 bytes @ 0x3
  6537                           
  6538  0073                     ??i1_SPIGet:	
  6539                           ; 1 bytes @ 0x3
  6540                           
  6541  0073                     i1WriteFIFO@Data:	
  6542                           ; 1 bytes @ 0x3
  6543                           
  6544  0073                     i1___bmul@product:	
  6545                           ; 1 bytes @ 0x3
  6546                           
  6547  0073                     i1RegisterSet@setting:	
  6548                           ; 1 bytes @ 0x3
  6549                           
  6550                           
  6551                           ; 2 bytes @ 0x3
  6552  0073                     	ds	1
  6553  0074                     ??i1_MiWi_TickGet:	
  6554  0074                     ??i1___wmul:	
  6555                           ; 1 bytes @ 0x4
  6556                           
  6557  0074                     i1RegisterRead@address:	
  6558                           ; 1 bytes @ 0x4
  6559                           
  6560  0074                     i1WriteFIFO@IRQ1select:	
  6561                           ; 1 bytes @ 0x4
  6562                           
  6563  0074                     i1___wmul@product:	
  6564                           ; 1 bytes @ 0x4
  6565                           
  6566  0074                     i1___lmul@multiplicand:	
  6567                           ; 2 bytes @ 0x4
  6568                           
  6569                           
  6570                           ; 4 bytes @ 0x4
  6571  0074                     	ds	1
  6572  0075                     ??i1_RegisterSet:	
  6573  0075                     i1RegisterSet@IRQ1select:	
  6574                           ; 1 bytes @ 0x5
  6575                           
  6576  0075                     i1RegisterRead@value:	
  6577                           ; 1 bytes @ 0x5
  6578                           
  6579  0075                     i1MiWi_TickGet@IntFlag2:	
  6580                           ; 1 bytes @ 0x5
  6581                           
  6582                           
  6583                           ; 1 bytes @ 0x5
  6584  0075                     	ds	1
  6585  0076                     ??i1_SetRFMode:	
  6586  0076                     i1RegisterRead@IRQ1select:	
  6587                           ; 1 bytes @ 0x6
  6588                           
  6589  0076                     i1MiWi_TickGet@IntFlag1:	
  6590                           ; 1 bytes @ 0x6
  6591                           
  6592                           
  6593                           ; 1 bytes @ 0x6
  6594  0076                     	ds	1
  6595  0077                     i1SetRFMode@mode:	
  6596  0077                     i1MiWi_TickGet@currentTime:	
  6597                           ; 1 bytes @ 0x7
  6598                           
  6599                           
  6600                           ; 4 bytes @ 0x7
  6601  0077                     	ds	1
  6602  0078                     ??i1___lmul:	
  6603  0078                     i1___lmul@product:	
  6604                           ; 1 bytes @ 0x8
  6605                           
  6606                           
  6607                           ; 4 bytes @ 0x8
  6608  0078                     	ds	4
  6609  007C                     ?i1_TxPacket:	
  6610  007C                     ??i1_DELAY_10us:	
  6611                           ; 1 bytes @ 0xC
  6612                           
  6613  007C                     i1TxPacket@CCA:	
  6614                           ; 1 bytes @ 0xC
  6615                           
  6616                           
  6617                           ; 1 bytes @ 0xC
  6618  007C                     	ds	1
  6619                           
  6620                           	psect	cstackBANK0
  6621  0020                     __pcstackBANK0:	
  6622  0020                     ?i1_DELAY_10us:	
  6623  0020                     i1DELAY_10us@tenMicroSecondCounter:	
  6624                           ; 1 bytes @ 0x0
  6625                           
  6626                           
  6627                           ; 4 bytes @ 0x0
  6628  0020                     	ds	4
  6629  0024                     i1DELAY_10us@cyclesRequiredForEntireDelay:	
  6630                           
  6631                           ; 4 bytes @ 0x4
  6632  0024                     	ds	4
  6633  0028                     ??i1_TxPacket:	
  6634                           
  6635                           ; 1 bytes @ 0x8
  6636  0028                     	ds	8
  6637  0030                     i1TxPacket@TxPacketLen:	
  6638                           
  6639                           ; 1 bytes @ 0x10
  6640  0030                     	ds	1
  6641  0031                     i1TxPacket@status:	
  6642                           
  6643                           ; 1 bytes @ 0x11
  6644  0031                     	ds	1
  6645  0032                     i1TxPacket@t1:	
  6646                           
  6647                           ; 4 bytes @ 0x12
  6648  0032                     	ds	4
  6649  0036                     i1TxPacket@t2:	
  6650                           
  6651                           ; 4 bytes @ 0x16
  6652  0036                     	ds	4
  6653  003A                     i1TxPacket@CCARetries:	
  6654                           
  6655                           ; 1 bytes @ 0x1A
  6656  003A                     	ds	1
  6657  003B                     i1TxPacket@reTry:	
  6658                           
  6659                           ; 1 bytes @ 0x1B
  6660  003B                     	ds	1
  6661  003C                     i1TxPacket@allowedTxFailure:	
  6662                           
  6663                           ; 1 bytes @ 0x1C
  6664  003C                     	ds	1
  6665  003D                     i1TxPacket@i:	
  6666                           
  6667                           ; 1 bytes @ 0x1D
  6668  003D                     	ds	1
  6669  003E                     i1TxPacket@rssival:	
  6670                           
  6671                           ; 1 bytes @ 0x1E
  6672  003E                     	ds	1
  6673  003F                     ??_high_isr:	
  6674                           
  6675                           ; 1 bytes @ 0x1F
  6676  003F                     	ds	12
  6677  004B                     high_isr@counter:	
  6678                           
  6679                           ; 2 bytes @ 0x2B
  6680  004B                     	ds	2
  6681  004D                     high_isr@fifo_stat:	
  6682                           
  6683                           ; 1 bytes @ 0x2D
  6684  004D                     	ds	1
  6685  004E                     high_isr@ackPacket:	
  6686                           
  6687                           ; 4 bytes @ 0x2E
  6688  004E                     	ds	4
  6689  0052                     high_isr@bAck:	
  6690                           
  6691                           ; 1 bytes @ 0x32
  6692  0052                     	ds	1
  6693  0053                     high_isr@RxPacketPtr:	
  6694                           
  6695                           ; 1 bytes @ 0x33
  6696  0053                     	ds	1
  6697  0054                     high_isr@ackInfoIndex:	
  6698                           
  6699                           ; 1 bytes @ 0x34
  6700  0054                     	ds	1
  6701  0055                     high_isr@PacketLen:	
  6702                           
  6703                           ; 1 bytes @ 0x35
  6704  0055                     	ds	1
  6705  0056                     high_isr@BankIndex:	
  6706                           
  6707                           ; 1 bytes @ 0x36
  6708  0056                     	ds	1
  6709  0057                     high_isr@i:	
  6710                           
  6711                           ; 1 bytes @ 0x37
  6712  0057                     	ds	1
  6713                           
  6714                           	psect	maintext
  6715  2062                     __pmaintext:	
  6716 ;;
  6717 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6718 ;;
  6719 ;; *************** function _main *****************
  6720 ;; Defined at:
  6721 ;;		line 56 in file "../src/main.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  freezer_enab    1   27[BANK2 ] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : B1F/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         0       0       1       1       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        2 bytes
  6740 ;; Hardware stack levels required when called:   16
  6741 ;; This function calls:
  6742 ;;		_CONSOLE_Initialize
  6743 ;;		_DemoOutput_Greeting
  6744 ;;		_InitSymbolTimer
  6745 ;;		_Initialize_Demo
  6746 ;;		_Run_Demo
  6747 ;;		_SYSTEM_Initialize
  6748 ;;		_freezer_feature
  6749 ;; This function is called by:
  6750 ;;		Startup code after reset
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function _main
  6756  2062                     _main:	
  6757                           
  6758                           ;main.c: 58: bool freezer_enable = 0;
  6759                           
  6760                           ;incstack = 0
  6761                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6762  2062  0022               	movlb	2	; select bank2
  6763  2063  01E8               	clrf	main@freezer_enable^(0+256)
  6764                           
  6765                           ;main.c: 60: SYSTEM_Initialize();
  6766  2064  31A4  2411  31A0   	fcall	_SYSTEM_Initialize
  6767                           
  6768                           ;main.c: 63: CONSOLE_Initialize();
  6769  2067  31AD  25D4  31A0   	fcall	_CONSOLE_Initialize
  6770                           
  6771                           ;main.c: 66: InitSymbolTimer ();
  6772  206A  31AD  25DF  31A0   	fcall	_InitSymbolTimer
  6773                           
  6774                           ;main.c: 68: DemoOutput_Greeting();
  6775  206D  31A6  26AB  31A0   	fcall	_DemoOutput_Greeting
  6776                           
  6777                           ;main.c: 72: freezer_enable = freezer_feature();
  6778  2070  3189  215A  31A0   	fcall	_freezer_feature
  6779  2073  0021               	movlb	1	; select bank1
  6780  2074  00EF               	movwf	??_main^(0+128)
  6781  2075  086F               	movf	??_main^(0+128),w
  6782  2076  0022               	movlb	2	; select bank2
  6783  2077  00E8               	movwf	main@freezer_enable^(0+256)
  6784                           
  6785                           ;main.c: 76: Initialize_Demo(freezer_enable);
  6786  2078  0868               	movf	main@freezer_enable^(0+256),w
  6787  2079  3198  2024  31A0   	fcall	_Initialize_Demo
  6788  207C                     l7562:	
  6789                           ;main.c: 77: while(1)
  6790                           
  6791                           
  6792                           ;main.c: 78: {
  6793                           ;main.c: 80: Run_Demo();
  6794  207C  31AD  25A2  31A0   	fcall	_Run_Demo
  6795  207F  287C               	goto	l7562
  6796  2080                     __end_of_main:	
  6797                           
  6798                           	psect	text1
  6799  095A                     __ptext1:	
  6800 ;; *************** function _freezer_feature *****************
  6801 ;; Defined at:
  6802 ;;		line 69 in file "../src/task.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  tick2           4   67[BANK1 ] struct _MIWI_TICK
  6807 ;;  tick1           4   63[BANK1 ] struct _MIWI_TICK
  6808 ;;  switch_val      1   71[BANK1 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      unsigned char 
  6811 ;; Registers used:
  6812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;Total ram usage:       17 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:   10
  6825 ;; This function calls:
  6826 ;;		_ButtonPressed
  6827 ;;		_DELAY_ms
  6828 ;;		_LCDDisplay
  6829 ;;		_MiWi_TickGet
  6830 ;; This function is called by:
  6831 ;;		_main
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           
  6836                           ;psect for function _freezer_feature
  6837  095A                     _freezer_feature:	
  6838                           
  6839                           ;task.c: 71: MIWI_TICK tick1, tick2;
  6840                           ;task.c: 72: uint8_t switch_val;
  6841                           ;task.c: 73: tick1 = MiWi_TickGet();
  6842                           
  6843                           ;incstack = 0
  6844                           ; Regs used in _freezer_feature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6845  095A  31A4  2498  3189   	fcall	_MiWi_TickGet
  6846  095D  0021               	movlb	1	; select bank1
  6847  095E  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  6848  095F  00E2               	movwf	(freezer_feature@tick1+3)^(0+128)
  6849  0960  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  6850  0961  00E1               	movwf	(freezer_feature@tick1+2)^(0+128)
  6851  0962  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  6852  0963  00E0               	movwf	(freezer_feature@tick1+1)^(0+128)
  6853  0964  0820               	movf	?_MiWi_TickGet^(0+128),w
  6854  0965  00DF               	movwf	freezer_feature@tick1^(0+128)
  6855                           
  6856                           ;task.c: 75: {
  6857                           ;task.c: 76: tick2 = MiWi_TickGet();
  6858                           
  6859                           ;task.c: 74: while(1)
  6860  0966  31A4  2498  3189   	fcall	_MiWi_TickGet
  6861  0969  0021               	movlb	1	; select bank1
  6862  096A  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  6863  096B  00E6               	movwf	(freezer_feature@tick2+3)^(0+128)
  6864  096C  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  6865  096D  00E5               	movwf	(freezer_feature@tick2+2)^(0+128)
  6866  096E  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  6867  096F  00E4               	movwf	(freezer_feature@tick2+1)^(0+128)
  6868  0970  0820               	movf	?_MiWi_TickGet^(0+128),w
  6869  0971  00E3               	movwf	freezer_feature@tick2^(0+128)
  6870                           
  6871                           ;task.c: 77: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
  6872  0972  0863               	movf	freezer_feature@tick2^(0+128),w
  6873  0973  00D7               	movwf	??_freezer_feature^(0+128)
  6874  0974  0864               	movf	(freezer_feature@tick2+1)^(0+128),w
  6875  0975  00D8               	movwf	(??_freezer_feature^(0+128)+1)
  6876  0976  0865               	movf	(freezer_feature@tick2+2)^(0+128),w
  6877  0977  00D9               	movwf	(??_freezer_feature^(0+128)+2)
  6878  0978  0866               	movf	(freezer_feature@tick2+3)^(0+128),w
  6879  0979  00DA               	movwf	(??_freezer_feature^(0+128)+3)
  6880  097A  095F               	comf	freezer_feature@tick1^(0+128),w
  6881  097B  00DB               	movwf	(??_freezer_feature+4)^(0+128)
  6882  097C  0960               	comf	(freezer_feature@tick1+1)^(0+128),w
  6883  097D  00DC               	movwf	((??_freezer_feature+4)^(0+128)+1)
  6884  097E  0961               	comf	(freezer_feature@tick1+2)^(0+128),w
  6885  097F  00DD               	movwf	((??_freezer_feature+4)^(0+128)+2)
  6886  0980  0962               	comf	(freezer_feature@tick1+3)^(0+128),w
  6887  0981  00DE               	movwf	((??_freezer_feature+4)^(0+128)+3)
  6888  0982  0ADB               	incf	(??_freezer_feature+4)^(0+128),f
  6889  0983  1903               	skipnz
  6890  0984  0ADC               	incf	((??_freezer_feature+4)^(0+128)+1),f
  6891  0985  1903               	skipnz
  6892  0986  0ADD               	incf	((??_freezer_feature+4)^(0+128)+2),f
  6893  0987  1903               	skipnz
  6894  0988  0ADE               	incf	((??_freezer_feature+4)^(0+128)+3),f
  6895  0989  085B               	movf	(??_freezer_feature+4)^(0+128),w
  6896  098A  07D7               	addwf	??_freezer_feature^(0+128),f
  6897  098B  085C               	movf	(??_freezer_feature+5)^(0+128),w
  6898  098C  3DD8               	addwfc	(??_freezer_feature^(0+128)+1),f
  6899  098D  085D               	movf	(??_freezer_feature+6)^(0+128),w
  6900  098E  3DD9               	addwfc	(??_freezer_feature^(0+128)+2),f
  6901  098F  085E               	movf	(??_freezer_feature+7)^(0+128),w
  6902  0990  3DDA               	addwfc	(??_freezer_feature^(0+128)+3),f
  6903  0991  085A               	movf	(??_freezer_feature^(0+128)+3),w
  6904  0992  1D03               	btfss	3,2
  6905  0993  0008               	return
  6906  0994  30D1               	movlw	209
  6907  0995  0257               	subwf	??_freezer_feature^(0+128),w
  6908  0996  3012               	movlw	18
  6909  0997  3B58               	subwfb	(??_freezer_feature^(0+128)+1),w
  6910  0998  3013               	movlw	19
  6911  0999  3B59               	subwfb	(??_freezer_feature^(0+128)+2),w
  6912  099A  1803               	btfsc	3,0
  6913  099B  0008               	return
  6914                           
  6915                           ;task.c: 79: switch_val = ButtonPressed ();
  6916                           
  6917                           ;task.c: 78: break;
  6918  099C  3199  21B7  3189   	fcall	_ButtonPressed
  6919  099F  0021               	movlb	1	; select bank1
  6920  09A0  00D7               	movwf	??_freezer_feature^(0+128)
  6921  09A1  0857               	movf	??_freezer_feature^(0+128),w
  6922  09A2  00E7               	movwf	freezer_feature@switch_val^(0+128)
  6923                           
  6924                           ;task.c: 80: if(switch_val == 2)
  6925  09A3  3002               	movlw	2
  6926  09A4  0667               	xorwf	freezer_feature@switch_val^(0+128),w
  6927  09A5  1D03               	btfss	3,2
  6928  09A6  29B9               	goto	l7156
  6929                           
  6930                           ;task.c: 81: {
  6931                           ;task.c: 82: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  6932  09A7  3078               	movlw	low (STR_43| (0+32768))
  6933  09A8  00D0               	movwf	LCDDisplay@text^(0+128)
  6934  09A9  3088               	movlw	high (STR_43| (0+32768))
  6935  09AA  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
  6936  09AB  01D2               	clrf	LCDDisplay@value^(0+128)
  6937  09AC  01D3               	clrf	LCDDisplay@delay^(0+128)
  6938  09AD  31A2  22FE  3189   	fcall	_LCDDisplay
  6939                           
  6940                           ;task.c: 83: DELAY_ms(1000);
  6941  09B0  30E8               	movlw	232
  6942  09B1  0021               	movlb	1	; select bank1
  6943  09B2  00AC               	movwf	DELAY_ms@ms^(0+128)
  6944  09B3  3003               	movlw	3
  6945  09B4  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  6946  09B5  31A5  2572         	fcall	_DELAY_ms
  6947                           
  6948                           ;task.c: 84: return 1;
  6949  09B7  3001               	movlw	1
  6950  09B8  0008               	return
  6951  09B9                     l7156:	
  6952                           ;task.c: 85: }
  6953                           
  6954                           
  6955                           ;task.c: 86: else
  6956                           ;task.c: 87: {
  6957                           ;task.c: 88: return 0;
  6958  09B9  3000               	movlw	0
  6959  09BA  0008               	return
  6960  09BB                     __end_of_freezer_feature:	
  6961                           
  6962                           	psect	text2
  6963  2411                     __ptext2:	
  6964 ;; *************** function _SYSTEM_Initialize *****************
  6965 ;; Defined at:
  6966 ;;		line 64 in file "../src/system_config/pic18exp_pic16f1947_89xa/system.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;		None
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2, status,0, pclath, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;Total ram usage:        0 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    9
  6987 ;; This function calls:
  6988 ;;		_LCD_Initialize
  6989 ;; This function is called by:
  6990 ;;		_main
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _SYSTEM_Initialize
  6996  2411                     _SYSTEM_Initialize:	
  6997                           
  6998                           ;system.c: 68: OSCCON = 0x70;
  6999                           
  7000                           ;incstack = 0
  7001                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7002  2411  3070               	movlw	112
  7003  2412  0021               	movlb	1	; select bank1
  7004  2413  0099               	movwf	25	;volatile
  7005                           
  7006                           ;system.c: 78: ANSELA = 0;
  7007  2414  0023               	movlb	3	; select bank3
  7008  2415  018C               	clrf	12	;volatile
  7009                           
  7010                           ;system.c: 81: TRISA = 0xFF;
  7011  2416  30FF               	movlw	255
  7012  2417  0021               	movlb	1	; select bank1
  7013  2418  008C               	movwf	12	;volatile
  7014                           
  7015                           ;system.c: 82: TRISB = 0xFF;
  7016  2419  30FF               	movlw	255
  7017  241A  008D               	movwf	13	;volatile
  7018                           
  7019                           ;system.c: 83: TRISC = 0xFF;
  7020  241B  30FF               	movlw	255
  7021  241C  008E               	movwf	14	;volatile
  7022                           
  7023                           ;system.c: 84: TRISD = 0x00;
  7024  241D  018F               	clrf	15	;volatile
  7025                           
  7026                           ;system.c: 86: LATA = 0;
  7027  241E  0022               	movlb	2	; select bank2
  7028  241F  018C               	clrf	12	;volatile
  7029                           
  7030                           ;system.c: 87: LATB = 0;
  7031  2420  018D               	clrf	13	;volatile
  7032                           
  7033                           ;system.c: 88: LATC = 0;
  7034  2421  018E               	clrf	14	;volatile
  7035                           
  7036                           ;system.c: 89: LATD = 0;
  7037  2422  018F               	clrf	15	;volatile
  7038                           
  7039                           ;system.c: 92: TRISBbits.TRISB0 = 1;
  7040  2423  0021               	movlb	1	; select bank1
  7041  2424  140D               	bsf	13,0	;volatile
  7042                           
  7043                           ;system.c: 93: TRISAbits.TRISA5 = 1;
  7044  2425  168C               	bsf	12,5	;volatile
  7045                           
  7046                           ;system.c: 94: TRISDbits.TRISD7 = 0;
  7047  2426  138F               	bcf	15,7	;volatile
  7048                           
  7049                           ;system.c: 95: TRISDbits.TRISD6 = 0;
  7050  2427  130F               	bcf	15,6	;volatile
  7051                           
  7052                           ;system.c: 100: TRISBbits.TRISB5 = 1;
  7053  2428  168D               	bsf	13,5	;volatile
  7054                           
  7055                           ;system.c: 103: TRISCbits.TRISC4 = 1;
  7056  2429  160E               	bsf	14,4	;volatile
  7057                           
  7058                           ;system.c: 104: TRISCbits.TRISC5 = 0;
  7059  242A  128E               	bcf	14,5	;volatile
  7060                           
  7061                           ;system.c: 105: TRISCbits.TRISC3 = 0;
  7062  242B  118E               	bcf	14,3	;volatile
  7063                           
  7064                           ;system.c: 111: SSP1STAT = 0xC0;
  7065  242C  30C0               	movlw	192
  7066  242D  0024               	movlb	4	; select bank4
  7067  242E  0094               	movwf	20	;volatile
  7068                           
  7069                           ;system.c: 112: SSP1CON1 = 0x21;
  7070  242F  3021               	movlw	33
  7071  2430  0095               	movwf	21	;volatile
  7072                           
  7073                           ;system.c: 123: TRISEbits.TRISE3 = 0;
  7074  2431  0021               	movlb	1	; select bank1
  7075  2432  1190               	bcf	16,3	;volatile
  7076                           
  7077                           ;system.c: 124: TRISCbits.TRISC2 = 0;
  7078  2433  110E               	bcf	14,2	;volatile
  7079                           
  7080                           ;system.c: 125: TRISDbits.TRISD7 = 0;
  7081  2434  138F               	bcf	15,7	;volatile
  7082                           
  7083                           ;system.c: 126: TRISDbits.TRISD6 = 0;
  7084  2435  130F               	bcf	15,6	;volatile
  7085                           
  7086                           ;system.c: 127: IOCBFbits.IOCBF3 = 0;
  7087  2436  0027               	movlb	7	; select bank7
  7088  2437  1196               	bcf	22,3	;volatile
  7089                           
  7090                           ;system.c: 128: INTCONbits.IOCIE = 1;
  7091  2438  158B               	bsf	11,3	;volatile
  7092                           
  7093                           ;system.c: 137: LATEbits.LATE3 = 1;
  7094  2439  0022               	movlb	2	; select bank2
  7095  243A  1590               	bsf	16,3	;volatile
  7096                           
  7097                           ;system.c: 138: LATCbits.LATC2 = 1;
  7098  243B  150E               	bsf	14,2	;volatile
  7099                           
  7100                           ;system.c: 140: INTCONbits.GIE = 1;
  7101  243C  178B               	bsf	11,7	;volatile
  7102                           
  7103                           ;system.c: 141: INTCONbits.PEIE = 1;
  7104  243D  170B               	bsf	11,6	;volatile
  7105                           
  7106                           ;system.c: 143: SSP1STAT = 0x40;
  7107  243E  3040               	movlw	64
  7108  243F  0024               	movlb	4	; select bank4
  7109  2440  0094               	movwf	20	;volatile
  7110                           
  7111                           ;system.c: 144: SSP1CON1 = 0x21;
  7112  2441  3021               	movlw	33
  7113  2442  0095               	movwf	21	;volatile
  7114                           
  7115                           ;system.c: 147: IOCBNbits.IOCBN3 = 1;
  7116  2443  0027               	movlb	7	; select bank7
  7117  2444  1595               	bsf	21,3	;volatile
  7118                           
  7119                           ;system.c: 154: TRISAbits.TRISA3 = 0;
  7120  2445  0021               	movlb	1	; select bank1
  7121  2446  118C               	bcf	12,3	;volatile
  7122                           
  7123                           ;system.c: 155: LATAbits.LATA3 = 1;
  7124  2447  0022               	movlb	2	; select bank2
  7125  2448  158C               	bsf	12,3	;volatile
  7126                           
  7127                           ;system.c: 161: TRISEbits.TRISE2 = 0;
  7128  2449  0021               	movlb	1	; select bank1
  7129  244A  1110               	bcf	16,2	;volatile
  7130                           
  7131                           ;system.c: 162: LATEbits.LATE2 = 1;
  7132  244B  0022               	movlb	2	; select bank2
  7133  244C  1510               	bsf	16,2	;volatile
  7134                           
  7135                           ;system.c: 167: INTCONbits.GIE = 1;
  7136  244D  178B               	bsf	11,7	;volatile
  7137                           
  7138                           ;system.c: 168: INTCONbits.IOCIE = 1;
  7139  244E  158B               	bsf	11,3	;volatile
  7140                           
  7141                           ;system.c: 171: LCD_Initialize();
  7142  244F  31A7  27A9         	fcall	_LCD_Initialize
  7143  2451  0008               	return
  7144  2452                     __end_of_SYSTEM_Initialize:	
  7145                           
  7146                           	psect	text3
  7147  27A9                     __ptext3:	
  7148 ;; *************** function _LCD_Initialize *****************
  7149 ;; Defined at:
  7150 ;;		line 208 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    8
  7171 ;; This function calls:
  7172 ;;		_DELAY_ms
  7173 ;;		_LCDInitPortA
  7174 ;;		_LCDInitPortB
  7175 ;;		_LCDInitSPI
  7176 ;;		_LCDInitWrite
  7177 ;;		_LCDWritePortA
  7178 ;; This function is called by:
  7179 ;;		_SYSTEM_Initialize
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function _LCD_Initialize
  7185  27A9                     _LCD_Initialize:	
  7186                           
  7187                           ;lcd.c: 211: (TRISAbits.TRISA2) = 0;
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7191  27A9  0021               	movlb	1	; select bank1
  7192  27AA  110C               	bcf	12,2	;volatile
  7193                           
  7194                           ;lcd.c: 212: (LATAbits.LATA2) = 1;
  7195  27AB  0022               	movlb	2	; select bank2
  7196  27AC  150C               	bsf	12,2	;volatile
  7197                           
  7198                           ;lcd.c: 213: DELAY_ms(10);
  7199  27AD  300A               	movlw	10
  7200  27AE  0021               	movlb	1	; select bank1
  7201  27AF  00AC               	movwf	DELAY_ms@ms^(0+128)
  7202  27B0  3000               	movlw	0
  7203  27B1  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7204  27B2  31A5  2572  31A7   	fcall	_DELAY_ms
  7205                           
  7206                           ;lcd.c: 215: (TRISFbits.TRISF6) = 0;
  7207  27B5  0026               	movlb	6	; select bank6
  7208  27B6  130C               	bcf	12,6	;volatile
  7209                           
  7210                           ;lcd.c: 216: (LATFbits.LATF6) = 0;
  7211  27B7  0027               	movlb	7	; select bank7
  7212  27B8  130C               	bcf	12,6	;volatile
  7213                           
  7214                           ;lcd.c: 217: DELAY_ms(10);
  7215  27B9  300A               	movlw	10
  7216  27BA  0021               	movlb	1	; select bank1
  7217  27BB  00AC               	movwf	DELAY_ms@ms^(0+128)
  7218  27BC  3000               	movlw	0
  7219  27BD  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7220  27BE  31A5  2572  31A7   	fcall	_DELAY_ms
  7221                           
  7222                           ;lcd.c: 218: (LATFbits.LATF6) = 1;
  7223  27C1  0027               	movlb	7	; select bank7
  7224  27C2  170C               	bsf	12,6	;volatile
  7225                           
  7226                           ;lcd.c: 221: LCDInitSPI();
  7227  27C3  31AD  25BA  31A7   	fcall	_LCDInitSPI
  7228                           
  7229                           ;lcd.c: 224: LCDInitPortA();
  7230  27C6  31AF  27C8  31A7   	fcall	_LCDInitPortA
  7231                           
  7232                           ;lcd.c: 227: LCDInitPortB();
  7233  27C9  31AF  27E4  31A7   	fcall	_LCDInitPortB
  7234                           
  7235                           ;lcd.c: 229: LCDWritePortA(0);
  7236  27CC  3000               	movlw	0
  7237  27CD  31A0  2008  31A7   	fcall	_LCDWritePortA
  7238                           
  7239                           ;lcd.c: 232: DELAY_ms(10);
  7240  27D0  300A               	movlw	10
  7241  27D1  0021               	movlb	1	; select bank1
  7242  27D2  00AC               	movwf	DELAY_ms@ms^(0+128)
  7243  27D3  3000               	movlw	0
  7244  27D4  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7245  27D5  31A5  2572  31A7   	fcall	_DELAY_ms
  7246                           
  7247                           ;lcd.c: 233: LCDInitWrite(0x3C);
  7248  27D8  303C               	movlw	60
  7249  27D9  31A0  2044  31A7   	fcall	_LCDInitWrite
  7250                           
  7251                           ;lcd.c: 235: DELAY_ms(10);
  7252  27DC  300A               	movlw	10
  7253  27DD  0021               	movlb	1	; select bank1
  7254  27DE  00AC               	movwf	DELAY_ms@ms^(0+128)
  7255  27DF  3000               	movlw	0
  7256  27E0  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7257  27E1  31A5  2572  31A7   	fcall	_DELAY_ms
  7258                           
  7259                           ;lcd.c: 236: LCDInitWrite(0x0C);
  7260  27E4  300C               	movlw	12
  7261  27E5  31A0  2044  31A7   	fcall	_LCDInitWrite
  7262                           
  7263                           ;lcd.c: 238: DELAY_ms(10);
  7264  27E8  300A               	movlw	10
  7265  27E9  0021               	movlb	1	; select bank1
  7266  27EA  00AC               	movwf	DELAY_ms@ms^(0+128)
  7267  27EB  3000               	movlw	0
  7268  27EC  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7269  27ED  31A5  2572  31A7   	fcall	_DELAY_ms
  7270                           
  7271                           ;lcd.c: 239: LCDInitWrite(0x01);
  7272  27F0  3001               	movlw	1
  7273  27F1  31A0  2044  31A7   	fcall	_LCDInitWrite
  7274                           
  7275                           ;lcd.c: 241: DELAY_ms(10);
  7276  27F4  300A               	movlw	10
  7277  27F5  0021               	movlb	1	; select bank1
  7278  27F6  00AC               	movwf	DELAY_ms@ms^(0+128)
  7279  27F7  3000               	movlw	0
  7280  27F8  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7281  27F9  31A5  2572  31A7   	fcall	_DELAY_ms
  7282                           
  7283                           ;lcd.c: 242: LCDInitWrite(0x0C);
  7284  27FC  300C               	movlw	12
  7285  27FD  31A0  2044         	fcall	_LCDInitWrite
  7286  27FF  0008               	return
  7287  2800                     __end_of_LCD_Initialize:	
  7288                           
  7289                           	psect	text4
  7290  2DBA                     __ptext4:	
  7291 ;; *************** function _LCDInitSPI *****************
  7292 ;; Defined at:
  7293 ;;		line 41 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		None
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:        0 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    5
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_LCD_Initialize
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _LCDInitSPI
  7323  2DBA                     _LCDInitSPI:	
  7324                           
  7325                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _LCDInitSPI: []
  7329  2DBA  0021               	movlb	1	; select bank1
  7330  2DBB  128E               	bcf	14,5	;volatile
  7331                           
  7332                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
  7333  2DBC  118E               	bcf	14,3	;volatile
  7334                           
  7335                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
  7336  2DBD  0020               	movlb	0	; select bank0
  7337  2DBE  1191               	bcf	17,3	;volatile
  7338  2DBF  0008               	return
  7339  2DC0                     __end_of_LCDInitSPI:	
  7340                           
  7341                           	psect	text5
  7342  2FE4                     __ptext5:	
  7343 ;; *************** function _LCDInitPortB *****************
  7344 ;; Defined at:
  7345 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  preRFIE         1    3[BANK1 ] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0, pclath, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;Total ram usage:        1 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    6
  7366 ;; This function calls:
  7367 ;;		_SPIPut
  7368 ;; This function is called by:
  7369 ;;		_LCD_Initialize
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _LCDInitPortB
  7375  2FE4                     _LCDInitPortB:	
  7376                           
  7377                           ;lcd.c: 62: uint8_t preRFIE = INTCONbits.IOCIE;
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _LCDInitPortB: [wreg+status,2+status,0+pclath+cstack]
  7381  2FE4  3000               	movlw	0
  7382  2FE5  198B               	btfsc	11,3	;volatile
  7383  2FE6  3001               	movlw	1
  7384  2FE7  0021               	movlb	1	; select bank1
  7385  2FE8  00A3               	movwf	LCDInitPortB@preRFIE^(0+128)
  7386                           
  7387                           ;lcd.c: 63: INTCONbits.IOCIE = 0;
  7388  2FE9  118B               	bcf	11,3	;volatile
  7389                           
  7390                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  7391  2FEA  0022               	movlb	2	; select bank2
  7392  2FEB  110C               	bcf	12,2	;volatile
  7393                           
  7394                           ;lcd.c: 65: SPIPut(0x40);
  7395  2FEC  3040               	movlw	64
  7396  2FED  31AE  26DC  31AF   	fcall	_SPIPut
  7397                           
  7398                           ;lcd.c: 66: SPIPut(0x01);
  7399  2FF0  3001               	movlw	1
  7400  2FF1  31AE  26DC  31AF   	fcall	_SPIPut
  7401                           
  7402                           ;lcd.c: 67: SPIPut(0x00);
  7403  2FF4  3000               	movlw	0
  7404  2FF5  31AE  26DC         	fcall	_SPIPut
  7405                           
  7406                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  7407  2FF7  0022               	movlb	2	; select bank2
  7408  2FF8  150C               	bsf	12,2	;volatile
  7409                           
  7410                           ;lcd.c: 69: INTCONbits.IOCIE = preRFIE;
  7411  2FF9  0021               	movlb	1	; select bank1
  7412  2FFA  0C23               	rrf	LCDInitPortB@preRFIE^(0+128),w
  7413  2FFB  1C03               	skipc
  7414  2FFC  118B               	bcf	11,3	;volatile
  7415  2FFD  1803               	skipnc
  7416  2FFE  158B               	bsf	11,3	;volatile
  7417  2FFF  0008               	return
  7418  3000                     __end_of_LCDInitPortB:	
  7419                           
  7420                           	psect	text6
  7421  2FC8                     __ptext6:	
  7422 ;; *************** function _LCDInitPortA *****************
  7423 ;; Defined at:
  7424 ;;		line 48 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  preRFIE         1    3[BANK1 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    6
  7445 ;; This function calls:
  7446 ;;		_SPIPut
  7447 ;; This function is called by:
  7448 ;;		_LCD_Initialize
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _LCDInitPortA
  7454  2FC8                     _LCDInitPortA:	
  7455                           
  7456                           ;lcd.c: 50: uint8_t preRFIE = INTCONbits.IOCIE;
  7457                           
  7458                           ;incstack = 0
  7459                           ; Regs used in _LCDInitPortA: [wreg+status,2+status,0+pclath+cstack]
  7460  2FC8  3000               	movlw	0
  7461  2FC9  198B               	btfsc	11,3	;volatile
  7462  2FCA  3001               	movlw	1
  7463  2FCB  0021               	movlb	1	; select bank1
  7464  2FCC  00A3               	movwf	LCDInitPortA@preRFIE^(0+128)
  7465                           
  7466                           ;lcd.c: 51: INTCONbits.IOCIE = 0;
  7467  2FCD  118B               	bcf	11,3	;volatile
  7468                           
  7469                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  7470  2FCE  0022               	movlb	2	; select bank2
  7471  2FCF  110C               	bcf	12,2	;volatile
  7472                           
  7473                           ;lcd.c: 53: SPIPut(0x40);
  7474  2FD0  3040               	movlw	64
  7475  2FD1  31AE  26DC  31AF   	fcall	_SPIPut
  7476                           
  7477                           ;lcd.c: 54: SPIPut(0x00);
  7478  2FD4  3000               	movlw	0
  7479  2FD5  31AE  26DC  31AF   	fcall	_SPIPut
  7480                           
  7481                           ;lcd.c: 55: SPIPut(0x00);
  7482  2FD8  3000               	movlw	0
  7483  2FD9  31AE  26DC         	fcall	_SPIPut
  7484                           
  7485                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  7486  2FDB  0022               	movlb	2	; select bank2
  7487  2FDC  150C               	bsf	12,2	;volatile
  7488                           
  7489                           ;lcd.c: 57: INTCONbits.IOCIE = preRFIE;
  7490  2FDD  0021               	movlb	1	; select bank1
  7491  2FDE  0C23               	rrf	LCDInitPortA@preRFIE^(0+128),w
  7492  2FDF  1C03               	skipc
  7493  2FE0  118B               	bcf	11,3	;volatile
  7494  2FE1  1803               	skipnc
  7495  2FE2  158B               	bsf	11,3	;volatile
  7496  2FE3  0008               	return
  7497  2FE4                     __end_of_LCDInitPortA:	
  7498                           
  7499                           	psect	text7
  7500  2DA2                     __ptext7:	
  7501 ;; *************** function _Run_Demo *****************
  7502 ;; Defined at:
  7503 ;;		line 245 in file "../src/task.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:   15
  7524 ;; This function calls:
  7525 ;;		_run_p2p_demo
  7526 ;; This function is called by:
  7527 ;;		_main
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function _Run_Demo
  7533  2DA2                     _Run_Demo:	
  7534                           
  7535                           ;task.c: 249: run_p2p_demo();
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in _Run_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7539  2DA2  3189  21BB         	fcall	_run_p2p_demo
  7540  2DA4  0008               	return
  7541  2DA5                     __end_of_Run_Demo:	
  7542                           
  7543                           	psect	text8
  7544  09BB                     __ptext8:	
  7545 ;; *************** function _run_p2p_demo *****************
  7546 ;; Defined at:
  7547 ;;		line 72 in file "../src/p2p_demo.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;  switch_val      1   22[BANK2 ] unsigned char 
  7552 ;;  select_ed       1   23[BANK2 ] unsigned char 
  7553 ;;  update_ed       1   21[BANK2 ] unsigned char 
  7554 ;;  PressedButto    1   20[BANK2 ] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;Total ram usage:       17 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:   14
  7571 ;; This function calls:
  7572 ;;		_ButtonPressed
  7573 ;;		_DELAY_ms
  7574 ;;		_DemoOutput_Instruction
  7575 ;;		_DemoOutput_UnicastFail
  7576 ;;		_DemoOutput_UpdateTxRx
  7577 ;;		_LCD_Erase
  7578 ;;		_LCD_Update
  7579 ;;		_MiApp_BroadcastPacket
  7580 ;;		_MiApp_UnicastConnection
  7581 ;;		_Process_RxMessage
  7582 ;;		___awmod
  7583 ;;		___bmul
  7584 ;;		___wmul
  7585 ;;		_sprintf
  7586 ;; This function is called by:
  7587 ;;		_Run_Demo
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           
  7592                           ;psect for function _run_p2p_demo
  7593  09BB                     _run_p2p_demo:	
  7594                           
  7595                           ;p2p_demo.c: 75: if (Process_RxMessage())
  7596                           
  7597                           ;incstack = 0
  7598                           ; Regs used in _run_p2p_demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7599  09BB  3190  2001  3189   	fcall	_Process_RxMessage
  7600  09BE  3A00               	xorlw	0
  7601  09BF  1D03               	btfss	3,2
  7602  09C0  0008               	return
  7603                           
  7604                           ;p2p_demo.c: 79: else
  7605                           ;p2p_demo.c: 80: {
  7606                           ;p2p_demo.c: 87: uint8_t PressedButton = ButtonPressed();
  7607                           
  7608                           ;p2p_demo.c: 76: {
  7609                           ;p2p_demo.c: 78: }
  7610  09C1  3199  21B7  3189   	fcall	_ButtonPressed
  7611  09C4  0022               	movlb	2	; select bank2
  7612  09C5  00D4               	movwf	??_run_p2p_demo^(0+256)
  7613  09C6  0854               	movf	??_run_p2p_demo^(0+256),w
  7614  09C7  00E1               	movwf	run_p2p_demo@PressedButton^(0+256)
  7615                           
  7616                           ;p2p_demo.c: 88: switch( PressedButton )
  7617  09C8  2B82               	goto	l6946
  7618  09C9                     l6852:	
  7619                           ;p2p_demo.c: 89: {
  7620                           ;p2p_demo.c: 90: case 1:
  7621                           
  7622                           
  7623                           ;p2p_demo.c: 97: {TxData = 0;};
  7624  09C9  01BF               	clrf	_TxData^(0+256)
  7625                           
  7626                           ;p2p_demo.c: 98: for(i = 0; i < 21; i++)
  7627  09CA  01C3               	clrf	_i^(0+256)
  7628  09CB  3015               	movlw	21
  7629  09CC  0243               	subwf	_i^(0+256),w
  7630  09CD  1803               	btfsc	3,0
  7631  09CE  2A17               	goto	l6866
  7632  09CF                     l6858:	
  7633                           
  7634                           ;p2p_demo.c: 99: {
  7635                           ;p2p_demo.c: 101: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  7636  09CF  0841               	movf	_TxSynCount^(0+256),w
  7637  09D0  00D4               	movwf	??_run_p2p_demo^(0+256)
  7638  09D1  01D5               	clrf	(??_run_p2p_demo^(0+256)+1)
  7639  09D2  0854               	movf	??_run_p2p_demo^(0+256),w
  7640  09D3  0021               	movlb	1	; select bank1
  7641  09D4  00A2               	movwf	___awmod@dividend^(0+128)
  7642  09D5  0022               	movlb	2	; select bank2
  7643  09D6  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7644  09D7  0021               	movlb	1	; select bank1
  7645  09D8  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  7646  09D9  3006               	movlw	6
  7647  09DA  00A0               	movwf	___awmod@divisor^(0+128)
  7648  09DB  3000               	movlw	0
  7649  09DC  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  7650  09DD  31A4  2452  3189   	fcall	___awmod
  7651  09E0  0021               	movlb	1	; select bank1
  7652  09E1  0821               	movf	(?___awmod+1)^(0+128),w
  7653  09E2  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  7654  09E3  0820               	movf	?___awmod^(0+128),w
  7655  09E4  00A7               	movwf	___wmul@multiplier^(0+128)
  7656  09E5  3015               	movlw	21
  7657  09E6  00A9               	movwf	___wmul@multiplicand^(0+128)
  7658  09E7  3000               	movlw	0
  7659  09E8  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  7660  09E9  31AF  27AC  3189   	fcall	___wmul
  7661  09EC  300E               	movlw	low (_MiWi| (0+32768))
  7662  09ED  0022               	movlb	2	; select bank2
  7663  09EE  00D6               	movwf	(??_run_p2p_demo+2)^(0+256)
  7664  09EF  3084               	movlw	high (_MiWi| (0+32768))
  7665  09F0  00D7               	movwf	((??_run_p2p_demo+2)^(0+256)+1)
  7666  09F1  0021               	movlb	1	; select bank1
  7667  09F2  0827               	movf	?___wmul^(0+128),w
  7668  09F3  0022               	movlb	2	; select bank2
  7669  09F4  0756               	addwf	(??_run_p2p_demo+2)^(0+256),w
  7670  09F5  00D8               	movwf	(??_run_p2p_demo+4)^(0+256)
  7671  09F6  0021               	movlb	1	; select bank1
  7672  09F7  0828               	movf	(?___wmul+1)^(0+128),w
  7673  09F8  0022               	movlb	2	; select bank2
  7674  09F9  3D57               	addwfc	(??_run_p2p_demo+3)^(0+256),w
  7675  09FA  00D9               	movwf	(??_run_p2p_demo+5)^(0+256)
  7676  09FB  0843               	movf	_i^(0+256),w
  7677  09FC  0758               	addwf	(??_run_p2p_demo+4)^(0+256),w
  7678  09FD  0084               	movwf	4
  7679  09FE  0859               	movf	((??_run_p2p_demo+4)^(0+256)+1),w
  7680  09FF  1803               	skipnc
  7681  0A00  0A59               	incf	((??_run_p2p_demo+4)^(0+256)+1),w
  7682  0A01  0085               	movwf	5
  7683  0A02  0800               	movf	0,w	;code access
  7684  0A03  00DA               	movwf	(??_run_p2p_demo+6)^(0+256)
  7685  0A04  083F               	movf	_TxData^(0+256),w
  7686  0A05  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  7687  0A06  0086               	movwf	6
  7688  0A07  3002               	movlw	2	; select bank4/5
  7689  0A08  0087               	movwf	7
  7690  0A09  085A               	movf	(??_run_p2p_demo+6)^(0+256),w
  7691  0A0A  0081               	movwf	1
  7692  0A0B  3001               	movlw	1
  7693  0A0C  00D4               	movwf	??_run_p2p_demo^(0+256)
  7694  0A0D  0854               	movf	??_run_p2p_demo^(0+256),w
  7695  0A0E  07BF               	addwf	_TxData^(0+256),f
  7696  0A0F  3001               	movlw	1
  7697  0A10  00D4               	movwf	??_run_p2p_demo^(0+256)
  7698  0A11  0854               	movf	??_run_p2p_demo^(0+256),w
  7699  0A12  07C3               	addwf	_i^(0+256),f
  7700  0A13  3015               	movlw	21
  7701  0A14  0243               	subwf	_i^(0+256),w
  7702  0A15  1C03               	skipc
  7703  0A16  29CF               	goto	l6858
  7704  0A17                     l6866:	
  7705                           
  7706                           ;p2p_demo.c: 102: }
  7707                           ;p2p_demo.c: 103: TxSynCount++;
  7708  0A17  3001               	movlw	1
  7709  0A18  00D4               	movwf	??_run_p2p_demo^(0+256)
  7710  0A19  0854               	movf	??_run_p2p_demo^(0+256),w
  7711  0A1A  07C1               	addwf	_TxSynCount^(0+256),f
  7712                           
  7713                           ;p2p_demo.c: 112: MiApp_BroadcastPacket(0);
  7714  0A1B  3000               	movlw	0
  7715  0A1C  31AE  2611  3189   	fcall	_MiApp_BroadcastPacket
  7716                           
  7717                           ;p2p_demo.c: 121: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  7718  0A1F  0022               	movlb	2	; select bank2
  7719  0A20  083E               	movf	_RxNum^(0+256),w
  7720  0A21  00D4               	movwf	??_run_p2p_demo^(0+256)
  7721  0A22  0854               	movf	??_run_p2p_demo^(0+256),w
  7722  0A23  0021               	movlb	1	; select bank1
  7723  0A24  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  7724  0A25  3001               	movlw	1
  7725  0A26  0022               	movlb	2	; select bank2
  7726  0A27  00D5               	movwf	(??_run_p2p_demo+1)^(0+256)
  7727  0A28  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7728  0A29  07C0               	addwf	_TxNum^(0+256),f
  7729  0A2A  0840               	movf	_TxNum^(0+256),w
  7730  0A2B  3189  2150  3189   	fcall	_DemoOutput_UpdateTxRx
  7731                           
  7732                           ;p2p_demo.c: 122: DELAY_ms(1000);
  7733  0A2E  30E8               	movlw	232
  7734  0A2F  0021               	movlb	1	; select bank1
  7735  0A30  00AC               	movwf	DELAY_ms@ms^(0+128)
  7736  0A31  3003               	movlw	3
  7737  0A32  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  7738  0A33  31A5  2572  3189   	fcall	_DELAY_ms
  7739                           
  7740                           ;p2p_demo.c: 123: DemoOutput_Instruction();
  7741  0A36  3190  2000         	fcall	_DemoOutput_Instruction
  7742                           
  7743                           ;p2p_demo.c: 124: break;
  7744  0A38  0008               	return
  7745  0A39                     l971:	
  7746                           ;p2p_demo.c: 126: case 2:
  7747                           
  7748                           
  7749                           ;p2p_demo.c: 127: chk_sel_status = 1;
  7750  0A39  01EA               	clrf	_chk_sel_status^(0+256)
  7751  0A3A  0AEA               	incf	_chk_sel_status^(0+256),f
  7752                           
  7753                           ;p2p_demo.c: 128: uint8_t select_ed =0;
  7754  0A3B  01E4               	clrf	run_p2p_demo@select_ed^(0+256)
  7755                           
  7756                           ;p2p_demo.c: 129: bool update_ed = 1;
  7757  0A3C  01E2               	clrf	run_p2p_demo@update_ed^(0+256)
  7758  0A3D  0AE2               	incf	run_p2p_demo@update_ed^(0+256),f
  7759  0A3E                     l6942:	
  7760                           ;p2p_demo.c: 130: while(update_ed == 1)
  7761                           
  7762  0A3E  0022               	movlb	2	; select bank2
  7763  0A3F  0362               	decf	run_p2p_demo@update_ed^(0+256),w
  7764  0A40  1D03               	btfss	3,2
  7765  0A41  0008               	return
  7766                           
  7767                           ;p2p_demo.c: 131: {
  7768                           ;p2p_demo.c: 134: LCD_Erase();
  7769  0A42  31AF  270C  3189   	fcall	_LCD_Erase
  7770                           
  7771                           ;p2p_demo.c: 135: LCD_Erase();
  7772  0A45  31AF  270C  3189   	fcall	_LCD_Erase
  7773                           
  7774                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  7775                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  7776  0A48  300A               	movlw	10
  7777  0A49  0022               	movlb	2	; select bank2
  7778  0A4A  00D4               	movwf	??_run_p2p_demo^(0+256)
  7779  0A4B  0854               	movf	??_run_p2p_demo^(0+256),w
  7780  0A4C  0021               	movlb	1	; select bank1
  7781  0A4D  00A0               	movwf	___bmul@multiplicand^(0+128)
  7782  0A4E  0022               	movlb	2	; select bank2
  7783  0A4F  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  7784  0A50  31AE  2662  3189   	fcall	___bmul
  7785  0A53  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  7786  0A54  0086               	movwf	6
  7787  0A55  3001               	movlw	1	; select bank3/4
  7788  0A56  0087               	movwf	7
  7789  0A57  0801               	movf	1,w
  7790  0A58  0022               	movlb	2	; select bank2
  7791  0A59  00D5               	movwf	(??_run_p2p_demo+1)^(0+256)
  7792  0A5A  01D6               	clrf	((??_run_p2p_demo+1)^(0+256)+1)
  7793  0A5B  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7794  0A5C  00DB               	movwf	_run_p2p_demo$2971^(0+256)
  7795  0A5D  0856               	movf	(??_run_p2p_demo+2)^(0+256),w
  7796  0A5E  00DC               	movwf	(_run_p2p_demo$2971+1)^(0+256)
  7797                           
  7798                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  7799                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  7800  0A5F  300A               	movlw	10
  7801  0A60  00D4               	movwf	??_run_p2p_demo^(0+256)
  7802  0A61  0854               	movf	??_run_p2p_demo^(0+256),w
  7803  0A62  0021               	movlb	1	; select bank1
  7804  0A63  00A0               	movwf	___bmul@multiplicand^(0+128)
  7805  0A64  0022               	movlb	2	; select bank2
  7806  0A65  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  7807  0A66  31AE  2662  3189   	fcall	___bmul
  7808  0A69  3E01               	addlw	1
  7809  0A6A  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  7810  0A6B  0086               	movwf	6
  7811  0A6C  3001               	movlw	1	; select bank3/4
  7812  0A6D  0087               	movwf	7
  7813  0A6E  0801               	movf	1,w
  7814  0A6F  0022               	movlb	2	; select bank2
  7815  0A70  00D5               	movwf	(??_run_p2p_demo+1)^(0+256)
  7816  0A71  01D6               	clrf	((??_run_p2p_demo+1)^(0+256)+1)
  7817  0A72  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7818  0A73  00DD               	movwf	_run_p2p_demo$2972^(0+256)
  7819  0A74  0856               	movf	(??_run_p2p_demo+2)^(0+256),w
  7820  0A75  00DE               	movwf	(_run_p2p_demo$2972+1)^(0+256)
  7821                           
  7822                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  7823                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  7824  0A76  300A               	movlw	10
  7825  0A77  00D4               	movwf	??_run_p2p_demo^(0+256)
  7826  0A78  0854               	movf	??_run_p2p_demo^(0+256),w
  7827  0A79  0021               	movlb	1	; select bank1
  7828  0A7A  00A0               	movwf	___bmul@multiplicand^(0+128)
  7829  0A7B  0022               	movlb	2	; select bank2
  7830  0A7C  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  7831  0A7D  31AE  2662  3189   	fcall	___bmul
  7832  0A80  3E02               	addlw	2
  7833  0A81  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  7834  0A82  0086               	movwf	6
  7835  0A83  3001               	movlw	1	; select bank3/4
  7836  0A84  0087               	movwf	7
  7837  0A85  0801               	movf	1,w
  7838  0A86  0022               	movlb	2	; select bank2
  7839  0A87  00D5               	movwf	(??_run_p2p_demo+1)^(0+256)
  7840  0A88  01D6               	clrf	((??_run_p2p_demo+1)^(0+256)+1)
  7841  0A89  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7842  0A8A  00DF               	movwf	_run_p2p_demo$2973^(0+256)
  7843  0A8B  0856               	movf	(??_run_p2p_demo+2)^(0+256),w
  7844  0A8C  00E0               	movwf	(_run_p2p_demo$2973+1)^(0+256)
  7845                           
  7846                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  7847                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  7848  0A8D  3062               	movlw	low (STR_41| (0+32768))
  7849  0A8E  0021               	movlb	1	; select bank1
  7850  0A8F  00AE               	movwf	sprintf@f^(0+128)
  7851  0A90  3088               	movlw	high (STR_41| (0+32768))
  7852  0A91  00AF               	movwf	(sprintf@f^(0+128)+1)
  7853  0A92  0022               	movlb	2	; select bank2
  7854  0A93  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  7855  0A94  00D4               	movwf	??_run_p2p_demo^(0+256)
  7856  0A95  01D5               	clrf	(??_run_p2p_demo^(0+256)+1)
  7857  0A96  0854               	movf	??_run_p2p_demo^(0+256),w
  7858  0A97  0021               	movlb	1	; select bank1
  7859  0A98  00B0               	movwf	(?_sprintf^(0+128)+2)
  7860  0A99  0022               	movlb	2	; select bank2
  7861  0A9A  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7862  0A9B  0021               	movlb	1	; select bank1
  7863  0A9C  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  7864  0A9D  0022               	movlb	2	; select bank2
  7865  0A9E  085C               	movf	(_run_p2p_demo$2971+1)^(0+256),w
  7866  0A9F  0021               	movlb	1	; select bank1
  7867  0AA0  00B3               	movwf	((?_sprintf+1)^(0+128)+4)
  7868  0AA1  0022               	movlb	2	; select bank2
  7869  0AA2  085B               	movf	_run_p2p_demo$2971^(0+256),w
  7870  0AA3  0021               	movlb	1	; select bank1
  7871  0AA4  00B2               	movwf	(?_sprintf^(0+128)+4)
  7872  0AA5  0022               	movlb	2	; select bank2
  7873  0AA6  085E               	movf	(_run_p2p_demo$2972+1)^(0+256),w
  7874  0AA7  0021               	movlb	1	; select bank1
  7875  0AA8  00B5               	movwf	((?_sprintf+1)^(0+128)+6)
  7876  0AA9  0022               	movlb	2	; select bank2
  7877  0AAA  085D               	movf	_run_p2p_demo$2972^(0+256),w
  7878  0AAB  0021               	movlb	1	; select bank1
  7879  0AAC  00B4               	movwf	(?_sprintf^(0+128)+6)
  7880  0AAD  0022               	movlb	2	; select bank2
  7881  0AAE  0860               	movf	(_run_p2p_demo$2973+1)^(0+256),w
  7882  0AAF  0021               	movlb	1	; select bank1
  7883  0AB0  00B7               	movwf	((?_sprintf+1)^(0+128)+8)
  7884  0AB1  0022               	movlb	2	; select bank2
  7885  0AB2  085F               	movf	_run_p2p_demo$2973^(0+256),w
  7886  0AB3  0021               	movlb	1	; select bank1
  7887  0AB4  00B6               	movwf	(?_sprintf^(0+128)+8)
  7888  0AB5  3020               	movlw	(low (_LCDText| (0+768)))& (0+255)
  7889  0AB6  318B  238C  3189   	fcall	_sprintf
  7890                           
  7891                           ;p2p_demo.c: 138: sprintf((char *)&(LCDText[16]), (char*)"RB2: Chnge node");
  7892  0AB9  30F7               	movlw	low (STR_42| (0+32768))
  7893  0ABA  0021               	movlb	1	; select bank1
  7894  0ABB  00AE               	movwf	sprintf@f^(0+128)
  7895  0ABC  3088               	movlw	high (STR_42| (0+32768))
  7896  0ABD  00AF               	movwf	(sprintf@f^(0+128)+1)
  7897  0ABE  3030               	movlw	(low ((_LCDText| (0+768)+16)))& (0+255)
  7898  0ABF  318B  238C  3189   	fcall	_sprintf
  7899                           
  7900                           ;p2p_demo.c: 139: LCD_Update();
  7901  0AC2  31A6  260B  3189   	fcall	_LCD_Update
  7902                           
  7903                           ;p2p_demo.c: 140: LCD_Update();
  7904  0AC5  31A6  260B  3189   	fcall	_LCD_Update
  7905                           
  7906                           ;p2p_demo.c: 142: chk_sel_status = 1;
  7907  0AC8  0022               	movlb	2	; select bank2
  7908  0AC9  01EA               	clrf	_chk_sel_status^(0+256)
  7909  0ACA  0AEA               	incf	_chk_sel_status^(0+256),f
  7910  0ACB                     l6940:	
  7911                           ;p2p_demo.c: 144: while(chk_sel_status)
  7912                           
  7913  0ACB  0022               	movlb	2	; select bank2
  7914  0ACC  086A               	movf	_chk_sel_status^(0+256),w
  7915  0ACD  1903               	btfsc	3,2
  7916  0ACE  2A3E               	goto	l6942
  7917                           
  7918                           ;p2p_demo.c: 145: {
  7919                           ;p2p_demo.c: 146: uint8_t switch_val = ButtonPressed();
  7920  0ACF  3199  21B7  3189   	fcall	_ButtonPressed
  7921  0AD2  0022               	movlb	2	; select bank2
  7922  0AD3  00D4               	movwf	??_run_p2p_demo^(0+256)
  7923  0AD4  0854               	movf	??_run_p2p_demo^(0+256),w
  7924  0AD5  00E3               	movwf	run_p2p_demo@switch_val^(0+256)
  7925                           
  7926                           ;p2p_demo.c: 148: Process_RxMessage();
  7927  0AD6  3190  2001  3189   	fcall	_Process_RxMessage
  7928                           
  7929                           ;p2p_demo.c: 149: if(switch_val == 1)
  7930  0AD9  0022               	movlb	2	; select bank2
  7931  0ADA  0363               	decf	run_p2p_demo@switch_val^(0+256),w
  7932  0ADB  1D03               	btfss	3,2
  7933  0ADC  2B60               	goto	l6930
  7934                           
  7935                           ;p2p_demo.c: 150: {
  7936                           ;p2p_demo.c: 151: update_ed = 0;
  7937  0ADD  01E2               	clrf	run_p2p_demo@update_ed^(0+256)
  7938                           
  7939                           ;p2p_demo.c: 152: chk_sel_status = 0;
  7940  0ADE  01EA               	clrf	_chk_sel_status^(0+256)
  7941                           
  7942                           ;p2p_demo.c: 154: TxSynCount2++;
  7943  0ADF  3001               	movlw	1
  7944  0AE0  00D4               	movwf	??_run_p2p_demo^(0+256)
  7945  0AE1  0854               	movf	??_run_p2p_demo^(0+256),w
  7946  0AE2  07C2               	addwf	_TxSynCount2^(0+256),f
  7947                           
  7948                           ;p2p_demo.c: 155: {TxData = 0;};
  7949  0AE3  01BF               	clrf	_TxData^(0+256)
  7950                           
  7951                           ;p2p_demo.c: 156: for(i = 0; i < 11; i++)
  7952  0AE4  01C3               	clrf	_i^(0+256)
  7953  0AE5  300B               	movlw	11
  7954  0AE6  0243               	subwf	_i^(0+256),w
  7955  0AE7  1803               	btfsc	3,0
  7956  0AE8  2B31               	goto	l6914
  7957  0AE9                     l6906:	
  7958                           
  7959                           ;p2p_demo.c: 157: {
  7960                           ;p2p_demo.c: 159: TxBuffer[TxData++] = DE[(TxSynCount2%6)][i];
  7961  0AE9  0842               	movf	_TxSynCount2^(0+256),w
  7962  0AEA  00D4               	movwf	??_run_p2p_demo^(0+256)
  7963  0AEB  01D5               	clrf	(??_run_p2p_demo^(0+256)+1)
  7964  0AEC  0854               	movf	??_run_p2p_demo^(0+256),w
  7965  0AED  0021               	movlb	1	; select bank1
  7966  0AEE  00A2               	movwf	___awmod@dividend^(0+128)
  7967  0AEF  0022               	movlb	2	; select bank2
  7968  0AF0  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  7969  0AF1  0021               	movlb	1	; select bank1
  7970  0AF2  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  7971  0AF3  3006               	movlw	6
  7972  0AF4  00A0               	movwf	___awmod@divisor^(0+128)
  7973  0AF5  3000               	movlw	0
  7974  0AF6  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  7975  0AF7  31A4  2452  3189   	fcall	___awmod
  7976  0AFA  0021               	movlb	1	; select bank1
  7977  0AFB  0821               	movf	(?___awmod+1)^(0+128),w
  7978  0AFC  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  7979  0AFD  0820               	movf	?___awmod^(0+128),w
  7980  0AFE  00A7               	movwf	___wmul@multiplier^(0+128)
  7981  0AFF  300B               	movlw	11
  7982  0B00  00A9               	movwf	___wmul@multiplicand^(0+128)
  7983  0B01  3000               	movlw	0
  7984  0B02  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  7985  0B03  31AF  27AC  3189   	fcall	___wmul
  7986  0B06  308C               	movlw	low (_DE| (0+32768))
  7987  0B07  0022               	movlb	2	; select bank2
  7988  0B08  00D6               	movwf	(??_run_p2p_demo+2)^(0+256)
  7989  0B09  3084               	movlw	high (_DE| (0+32768))
  7990  0B0A  00D7               	movwf	((??_run_p2p_demo+2)^(0+256)+1)
  7991  0B0B  0021               	movlb	1	; select bank1
  7992  0B0C  0827               	movf	?___wmul^(0+128),w
  7993  0B0D  0022               	movlb	2	; select bank2
  7994  0B0E  0756               	addwf	(??_run_p2p_demo+2)^(0+256),w
  7995  0B0F  00D8               	movwf	(??_run_p2p_demo+4)^(0+256)
  7996  0B10  0021               	movlb	1	; select bank1
  7997  0B11  0828               	movf	(?___wmul+1)^(0+128),w
  7998  0B12  0022               	movlb	2	; select bank2
  7999  0B13  3D57               	addwfc	(??_run_p2p_demo+3)^(0+256),w
  8000  0B14  00D9               	movwf	(??_run_p2p_demo+5)^(0+256)
  8001  0B15  0843               	movf	_i^(0+256),w
  8002  0B16  0758               	addwf	(??_run_p2p_demo+4)^(0+256),w
  8003  0B17  0084               	movwf	4
  8004  0B18  0859               	movf	((??_run_p2p_demo+4)^(0+256)+1),w
  8005  0B19  1803               	skipnc
  8006  0B1A  0A59               	incf	((??_run_p2p_demo+4)^(0+256)+1),w
  8007  0B1B  0085               	movwf	5
  8008  0B1C  0800               	movf	0,w	;code access
  8009  0B1D  00DA               	movwf	(??_run_p2p_demo+6)^(0+256)
  8010  0B1E  083F               	movf	_TxData^(0+256),w
  8011  0B1F  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  8012  0B20  0086               	movwf	6
  8013  0B21  3002               	movlw	2	; select bank4/5
  8014  0B22  0087               	movwf	7
  8015  0B23  085A               	movf	(??_run_p2p_demo+6)^(0+256),w
  8016  0B24  0081               	movwf	1
  8017  0B25  3001               	movlw	1
  8018  0B26  00D4               	movwf	??_run_p2p_demo^(0+256)
  8019  0B27  0854               	movf	??_run_p2p_demo^(0+256),w
  8020  0B28  07BF               	addwf	_TxData^(0+256),f
  8021  0B29  3001               	movlw	1
  8022  0B2A  00D4               	movwf	??_run_p2p_demo^(0+256)
  8023  0B2B  0854               	movf	??_run_p2p_demo^(0+256),w
  8024  0B2C  07C3               	addwf	_i^(0+256),f
  8025  0B2D  300B               	movlw	11
  8026  0B2E  0243               	subwf	_i^(0+256),w
  8027  0B2F  1C03               	skipc
  8028  0B30  2AE9               	goto	l6906
  8029  0B31                     l6914:	
  8030                           
  8031                           ;p2p_demo.c: 160: }
  8032                           ;p2p_demo.c: 161: TxSynCount2++;
  8033  0B31  3001               	movlw	1
  8034  0B32  00D4               	movwf	??_run_p2p_demo^(0+256)
  8035  0B33  0854               	movf	??_run_p2p_demo^(0+256),w
  8036  0B34  07C2               	addwf	_TxSynCount2^(0+256),f
  8037                           
  8038                           ;p2p_demo.c: 162: if( MiApp_UnicastConnection(select_ed, 1) == 0 )
  8039  0B35  0021               	movlb	1	; select bank1
  8040  0B36  01E6               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
  8041  0B37  0AE6               	incf	MiApp_UnicastConnection@SecEn^(0+128),f
  8042  0B38  0022               	movlb	2	; select bank2
  8043  0B39  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  8044  0B3A  31A1  21A1  3189   	fcall	_MiApp_UnicastConnection
  8045  0B3D  3A00               	xorlw	0
  8046  0B3E  1D03               	skipz
  8047  0B3F  2B44               	goto	l6920
  8048                           
  8049                           ;p2p_demo.c: 163: {
  8050                           ;p2p_demo.c: 164: DemoOutput_UnicastFail();
  8051  0B40  31AE  2687  3189   	fcall	_DemoOutput_UnicastFail
  8052                           
  8053                           ;p2p_demo.c: 165: }
  8054  0B43  2B49               	goto	l6922
  8055  0B44                     l6920:	
  8056                           
  8057                           ;p2p_demo.c: 166: else
  8058                           ;p2p_demo.c: 167: {
  8059                           ;p2p_demo.c: 169: TxNum++;
  8060  0B44  3001               	movlw	1
  8061  0B45  0022               	movlb	2	; select bank2
  8062  0B46  00D4               	movwf	??_run_p2p_demo^(0+256)
  8063  0B47  0854               	movf	??_run_p2p_demo^(0+256),w
  8064  0B48  07C0               	addwf	_TxNum^(0+256),f
  8065  0B49                     l6922:	
  8066                           
  8067                           ;p2p_demo.c: 170: }
  8068                           ;p2p_demo.c: 172: DemoOutput_UpdateTxRx(TxNum, RxNum);
  8069  0B49  0022               	movlb	2	; select bank2
  8070  0B4A  083E               	movf	_RxNum^(0+256),w
  8071  0B4B  00D4               	movwf	??_run_p2p_demo^(0+256)
  8072  0B4C  0854               	movf	??_run_p2p_demo^(0+256),w
  8073  0B4D  0021               	movlb	1	; select bank1
  8074  0B4E  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  8075  0B4F  0022               	movlb	2	; select bank2
  8076  0B50  0840               	movf	_TxNum^(0+256),w
  8077  0B51  3189  2150  3189   	fcall	_DemoOutput_UpdateTxRx
  8078                           
  8079                           ;p2p_demo.c: 173: DELAY_ms(1000);
  8080  0B54  30E8               	movlw	232
  8081  0B55  0021               	movlb	1	; select bank1
  8082  0B56  00AC               	movwf	DELAY_ms@ms^(0+128)
  8083  0B57  3003               	movlw	3
  8084  0B58  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8085  0B59  31A5  2572  3189   	fcall	_DELAY_ms
  8086                           
  8087                           ;p2p_demo.c: 174: DemoOutput_Instruction();
  8088  0B5C  3190  2000  3189   	fcall	_DemoOutput_Instruction
  8089                           
  8090                           ;p2p_demo.c: 176: break;
  8091  0B5F  2A3E               	goto	l6942
  8092  0B60                     l6930:	
  8093                           ;p2p_demo.c: 177: }
  8094                           
  8095                           
  8096                           ;p2p_demo.c: 179: else if(switch_val == 2)
  8097  0B60  3002               	movlw	2
  8098  0B61  0022               	movlb	2	; select bank2
  8099  0B62  0663               	xorwf	run_p2p_demo@switch_val^(0+256),w
  8100  0B63  1D03               	btfss	3,2
  8101  0B64  2ACB               	goto	l6940
  8102                           
  8103                           ;p2p_demo.c: 180: {
  8104                           ;p2p_demo.c: 181: if (select_ed > conn_size-2)
  8105  0B65  084B               	movf	_conn_size^(0+256),w
  8106  0B66  3EFE               	addlw	254
  8107  0B67  00D4               	movwf	??_run_p2p_demo^(0+256)
  8108  0B68  30FF               	movlw	255
  8109  0B69  1803               	skipnc
  8110  0B6A  3000               	movlw	0
  8111  0B6B  00D5               	movwf	(??_run_p2p_demo^(0+256)+1)
  8112  0B6C  0855               	movf	(??_run_p2p_demo+1)^(0+256),w
  8113  0B6D  3A80               	xorlw	128
  8114  0B6E  00D6               	movwf	(??_run_p2p_demo+2)^(0+256)
  8115  0B6F  3080               	movlw	128
  8116  0B70  0256               	subwf	(??_run_p2p_demo+2)^(0+256),w
  8117  0B71  1D03               	skipz
  8118  0B72  2B75               	goto	u6865
  8119  0B73  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  8120  0B74  0254               	subwf	??_run_p2p_demo^(0+256),w
  8121  0B75                     u6865:	
  8122  0B75  1803               	skipnc
  8123  0B76  2B7A               	goto	l6936
  8124                           
  8125                           ;p2p_demo.c: 182: {
  8126                           ;p2p_demo.c: 184: select_ed = 0;
  8127  0B77  0022               	movlb	2	; select bank2
  8128  0B78  01E4               	clrf	run_p2p_demo@select_ed^(0+256)
  8129                           
  8130                           ;p2p_demo.c: 185: }
  8131  0B79  2B80               	goto	l6938
  8132  0B7A                     l6936:	
  8133                           
  8134                           ;p2p_demo.c: 186: else
  8135                           ;p2p_demo.c: 187: {
  8136                           ;p2p_demo.c: 189: select_ed = select_ed+1;
  8137  0B7A  0022               	movlb	2	; select bank2
  8138  0B7B  0864               	movf	run_p2p_demo@select_ed^(0+256),w
  8139  0B7C  3E01               	addlw	1
  8140  0B7D  00D4               	movwf	??_run_p2p_demo^(0+256)
  8141  0B7E  0854               	movf	??_run_p2p_demo^(0+256),w
  8142  0B7F  00E4               	movwf	run_p2p_demo@select_ed^(0+256)
  8143  0B80                     l6938:	
  8144                           
  8145                           ;p2p_demo.c: 190: }
  8146                           ;p2p_demo.c: 191: chk_sel_status = 0;
  8147  0B80  01EA               	clrf	_chk_sel_status^(0+256)
  8148  0B81  2ACB               	goto	l6940
  8149  0B82                     l6946:	
  8150                           ;p2p_demo.c: 201: }
  8151                           
  8152                           ;p2p_demo.c: 200: break;
  8153                           
  8154                           ;p2p_demo.c: 199: default:
  8155                           
  8156                           ;p2p_demo.c: 192: }
  8157                           ;p2p_demo.c: 193: }
  8158                           ;p2p_demo.c: 195: }
  8159                           ;p2p_demo.c: 198: break;
  8160                           
  8161  0B82  0861               	movf	run_p2p_demo@PressedButton^(0+256),w
  8162                           
  8163                           ; Switch size 1, requested type "space"
  8164                           ; Number of cases is 2, Range of values is 1 to 2
  8165                           ; switch strategies available:
  8166                           ; Name         Instructions Cycles
  8167                           ; simple_byte            7     4 (average)
  8168                           ; direct_byte           13     9 (fixed)
  8169                           ; jumptable            263     9 (fixed)
  8170                           ;	Chosen strategy is simple_byte
  8171  0B83  3A01               	xorlw	1	; case 1
  8172  0B84  1903               	skipnz
  8173  0B85  29C9               	goto	l6852
  8174  0B86  3A03               	xorlw	3	; case 2
  8175  0B87  1903               	skipnz
  8176  0B88  2A39               	goto	l971
  8177  0B89  2B8B               	goto	l988
  8178  0B8A  0008               	return
  8179  0B8B                     l988:	
  8180  0B8B  0008               	return
  8181  0B8C                     __end_of_run_p2p_demo:	
  8182                           
  8183                           	psect	text9
  8184  1001                     __ptext9:	
  8185 ;; *************** function _Process_RxMessage *****************
  8186 ;; Defined at:
  8187 ;;		line 39 in file "../src/p2p_demo.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      unsigned char 
  8194 ;; Registers used:
  8195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;Total ram usage:        2 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:   13
  8208 ;; This function calls:
  8209 ;;		_DELAY_ms
  8210 ;;		_DemoOutput_HandleMessage
  8211 ;;		_DemoOutput_Instruction
  8212 ;;		_DemoOutput_UpdateTxRx
  8213 ;;		_MiApp_DiscardMessage
  8214 ;;		_MiApp_MessageAvailable
  8215 ;; This function is called by:
  8216 ;;		_run_p2p_demo
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _Process_RxMessage
  8222  1001                     _Process_RxMessage:	
  8223                           
  8224                           ;p2p_demo.c: 47: if( MiApp_MessageAvailable() )
  8225                           
  8226                           ;incstack = 0
  8227                           ; Regs used in _Process_RxMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8228  1001  31AD  25CA  3190   	fcall	_MiApp_MessageAvailable
  8229  1004  3A00               	xorlw	0
  8230  1005  1903               	skipnz
  8231  1006  0008               	return
  8232                           
  8233                           ;p2p_demo.c: 48: {
  8234                           ;p2p_demo.c: 55: DemoOutput_HandleMessage();
  8235  1007  319A  22BE  3190   	fcall	_DemoOutput_HandleMessage
  8236                           
  8237                           ;p2p_demo.c: 57: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  8238  100A  3001               	movlw	1
  8239  100B  0021               	movlb	1	; select bank1
  8240  100C  00EB               	movwf	??_Process_RxMessage^(0+128)
  8241  100D  086B               	movf	??_Process_RxMessage^(0+128),w
  8242  100E  0022               	movlb	2	; select bank2
  8243  100F  07BE               	addwf	_RxNum^(0+256),f
  8244  1010  083E               	movf	_RxNum^(0+256),w
  8245  1011  0021               	movlb	1	; select bank1
  8246  1012  00EC               	movwf	(??_Process_RxMessage+1)^(0+128)
  8247  1013  086C               	movf	(??_Process_RxMessage+1)^(0+128),w
  8248  1014  00D4               	movwf	DemoOutput_UpdateTxRx@RxNum^(0+128)
  8249  1015  0022               	movlb	2	; select bank2
  8250  1016  0840               	movf	_TxNum^(0+256),w
  8251  1017  3189  2150  3190   	fcall	_DemoOutput_UpdateTxRx
  8252                           
  8253                           ;p2p_demo.c: 59: LATDbits.LATD6 ^= 1;
  8254  101A  0022               	movlb	2	; select bank2
  8255  101B  0E0F               	swapf	15,w	;volatile
  8256  101C  0021               	movlb	1	; select bank1
  8257  101D  00EB               	movwf	??_Process_RxMessage^(0+128)
  8258  101E  0CEB               	rrf	??_Process_RxMessage^(0+128),f
  8259  101F  0C6B               	rrf	??_Process_RxMessage^(0+128),w
  8260  1020  3901               	andlw	1
  8261  1021  00EB               	movwf	??_Process_RxMessage^(0+128)
  8262  1022  3001               	movlw	1
  8263  1023  06EB               	xorwf	??_Process_RxMessage^(0+128),f
  8264  1024  0EEB               	swapf	??_Process_RxMessage^(0+128),f
  8265  1025  0DEB               	rlf	??_Process_RxMessage^(0+128),f
  8266  1026  0DEB               	rlf	??_Process_RxMessage^(0+128),f
  8267  1027  0022               	movlb	2	; select bank2
  8268  1028  080F               	movf	15,w	;volatile
  8269  1029  0021               	movlb	1	; select bank1
  8270  102A  066B               	xorwf	??_Process_RxMessage^(0+128),w
  8271  102B  39BF               	andlw	-65
  8272  102C  066B               	xorwf	??_Process_RxMessage^(0+128),w
  8273  102D  0022               	movlb	2	; select bank2
  8274  102E  008F               	movwf	15	;volatile
  8275                           
  8276                           ;p2p_demo.c: 60: DELAY_ms(2000);
  8277  102F  30D0               	movlw	208
  8278  1030  0021               	movlb	1	; select bank1
  8279  1031  00AC               	movwf	DELAY_ms@ms^(0+128)
  8280  1032  3007               	movlw	7
  8281  1033  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8282  1034  31A5  2572  3190   	fcall	_DELAY_ms
  8283                           
  8284                           ;p2p_demo.c: 61: DemoOutput_Instruction();
  8285  1037  3190  2000  3190   	fcall	_DemoOutput_Instruction
  8286                           
  8287                           ;p2p_demo.c: 68: MiApp_DiscardMessage();
  8288  103A  31AD  25A9         	fcall	_MiApp_DiscardMessage
  8289  103C  0008               	return
  8290  103D                     __end_of_Process_RxMessage:	
  8291                           
  8292                           	psect	text10
  8293  0950                     __ptext10:	
  8294 ;; *************** function _DemoOutput_UpdateTxRx *****************
  8295 ;; Defined at:
  8296 ;;		line 280 in file "../src/demo_ouput.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  TxNum           1    wreg     unsigned char 
  8299 ;;  RxNum           1   52[BANK1 ] unsigned char 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  TxNum           1   54[BANK1 ] unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8311 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;Total ram usage:        3 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:   10
  8318 ;; This function calls:
  8319 ;;		_LCDTRXCount
  8320 ;; This function is called by:
  8321 ;;		_Process_RxMessage
  8322 ;;		_run_p2p_demo
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           
  8327                           ;psect for function _DemoOutput_UpdateTxRx
  8328  0950                     _DemoOutput_UpdateTxRx:	
  8329                           
  8330                           ;incstack = 0
  8331                           ; Regs used in _DemoOutput_UpdateTxRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8332                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  8333  0950  0021               	movlb	1	; select bank1
  8334  0951  00D6               	movwf	DemoOutput_UpdateTxRx@TxNum^(0+128)
  8335                           
  8336                           ;demo_ouput.c: 282: LCDTRXCount(TxNum, RxNum);
  8337  0952  0854               	movf	DemoOutput_UpdateTxRx@RxNum^(0+128),w
  8338  0953  00D5               	movwf	??_DemoOutput_UpdateTxRx^(0+128)
  8339  0954  0855               	movf	??_DemoOutput_UpdateTxRx^(0+128),w
  8340  0955  00D0               	movwf	LCDTRXCount@rxCount^(0+128)
  8341  0956  0856               	movf	DemoOutput_UpdateTxRx@TxNum^(0+128),w
  8342  0957  31A2  22CE         	fcall	_LCDTRXCount
  8343  0959  0008               	return
  8344  095A                     __end_of_DemoOutput_UpdateTxRx:	
  8345                           
  8346                           	psect	text11
  8347  22CE                     __ptext11:	
  8348 ;; *************** function _LCDTRXCount *****************
  8349 ;; Defined at:
  8350 ;;		line 340 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  txCount         1    wreg     unsigned char 
  8353 ;;  rxCount         1   48[BANK1 ] unsigned char 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  txCount         1   51[BANK1 ] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8365 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;Total ram usage:        4 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    9
  8372 ;; This function calls:
  8373 ;;		_DELAY_ms
  8374 ;;		_LCD_Erase
  8375 ;;		_LCD_Update
  8376 ;;		_sprintf
  8377 ;; This function is called by:
  8378 ;;		_DemoOutput_UpdateTxRx
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           
  8383                           ;psect for function _LCDTRXCount
  8384  22CE                     _LCDTRXCount:	
  8385                           
  8386                           ;incstack = 0
  8387                           ; Regs used in _LCDTRXCount: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8388                           ;LCDTRXCount@txCount stored from wreg
  8389  22CE  0021               	movlb	1	; select bank1
  8390  22CF  00D3               	movwf	LCDTRXCount@txCount^(0+128)
  8391                           
  8392                           ;lcd.c: 343: LCD_Erase();
  8393  22D0  31AF  270C  31A2   	fcall	_LCD_Erase
  8394                           
  8395                           ;lcd.c: 344: DELAY_ms(5);
  8396  22D3  3005               	movlw	5
  8397  22D4  0021               	movlb	1	; select bank1
  8398  22D5  00AC               	movwf	DELAY_ms@ms^(0+128)
  8399  22D6  3000               	movlw	0
  8400  22D7  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
  8401  22D8  31A5  2572  31A2   	fcall	_DELAY_ms
  8402                           
  8403                           ;lcd.c: 345: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  8404  22DB  30E6               	movlw	low (STR_14| (0+32768))
  8405  22DC  0021               	movlb	1	; select bank1
  8406  22DD  00AE               	movwf	sprintf@f^(0+128)
  8407  22DE  3088               	movlw	high (STR_14| (0+32768))
  8408  22DF  00AF               	movwf	(sprintf@f^(0+128)+1)
  8409  22E0  0853               	movf	LCDTRXCount@txCount^(0+128),w
  8410  22E1  00D1               	movwf	??_LCDTRXCount^(0+128)
  8411  22E2  01D2               	clrf	(??_LCDTRXCount^(0+128)+1)
  8412  22E3  0851               	movf	??_LCDTRXCount^(0+128),w
  8413  22E4  00B0               	movwf	(?_sprintf^(0+128)+2)
  8414  22E5  0852               	movf	(??_LCDTRXCount+1)^(0+128),w
  8415  22E6  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8416  22E7  3020               	movlw	(low (_LCDText| (0+768)))& (0+255)
  8417  22E8  318B  238C  31A2   	fcall	_sprintf
  8418                           
  8419                           ;lcd.c: 346: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  8420  22EB  30D5               	movlw	low (STR_15| (0+32768))
  8421  22EC  0021               	movlb	1	; select bank1
  8422  22ED  00AE               	movwf	sprintf@f^(0+128)
  8423  22EE  3088               	movlw	high (STR_15| (0+32768))
  8424  22EF  00AF               	movwf	(sprintf@f^(0+128)+1)
  8425  22F0  0850               	movf	LCDTRXCount@rxCount^(0+128),w
  8426  22F1  00D1               	movwf	??_LCDTRXCount^(0+128)
  8427  22F2  01D2               	clrf	(??_LCDTRXCount^(0+128)+1)
  8428  22F3  0851               	movf	??_LCDTRXCount^(0+128),w
  8429  22F4  00B0               	movwf	(?_sprintf^(0+128)+2)
  8430  22F5  0852               	movf	(??_LCDTRXCount+1)^(0+128),w
  8431  22F6  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
  8432  22F7  3030               	movlw	(low ((_LCDText| (0+768)+16)))& (0+255)
  8433  22F8  318B  238C  31A2   	fcall	_sprintf
  8434                           
  8435                           ;lcd.c: 347: LCD_Update();
  8436  22FB  31A6  260B         	fcall	_LCD_Update
  8437  22FD  0008               	return
  8438  22FE                     __end_of_LCDTRXCount:	
  8439                           
  8440                           	psect	text12
  8441  1ABE                     __ptext12:	
  8442 ;; *************** function _DemoOutput_HandleMessage *****************
  8443 ;; Defined at:
  8444 ;;		line 238 in file "../src/demo_ouput.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  i               1   11[BANK1 ] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        5 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    7
  8465 ;; This function calls:
  8466 ;;		_CONSOLE_PrintHex
  8467 ;;		_CONSOLE_Put
  8468 ;;		_CONSOLE_PutString
  8469 ;; This function is called by:
  8470 ;;		_Process_RxMessage
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           
  8475                           ;psect for function _DemoOutput_HandleMessage
  8476  1ABE                     _DemoOutput_HandleMessage:	
  8477                           
  8478                           ;demo_ouput.c: 240: uint8_t i;
  8479                           ;demo_ouput.c: 242: if( rxMessage.flags.bits.secEn )
  8480                           
  8481                           ;incstack = 0
  8482                           ; Regs used in _DemoOutput_HandleMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8483  1ABE  0022               	movlb	2	; select bank2
  8484  1ABF  1DA0               	btfss	_rxMessage^(0+256),3
  8485  1AC0  2AC9               	goto	l6082
  8486                           
  8487                           ;demo_ouput.c: 243: {
  8488                           ;demo_ouput.c: 244: CONSOLE_PutString((char *)"Secured ");
  8489  1AC1  303B               	movlw	low (STR_32| (0+32768))
  8490  1AC2  0021               	movlb	1	; select bank1
  8491  1AC3  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8492  1AC4  3089               	movlw	high (STR_32| (0+32768))
  8493  1AC5  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  8494  1AC6  31AE  26F3  319A   	fcall	_CONSOLE_PutString
  8495  1AC9                     l6082:	
  8496                           
  8497                           ;demo_ouput.c: 245: }
  8498                           ;demo_ouput.c: 247: if( rxMessage.flags.bits.broadcast )
  8499  1AC9  0022               	movlb	2	; select bank2
  8500  1ACA  0820               	movf	_rxMessage^(0+256),w
  8501  1ACB  3903               	andlw	3
  8502  1ACC  3A00               	xorlw	0
  8503  1ACD  1903               	skipnz
  8504  1ACE  2AD4               	goto	l6086
  8505                           
  8506                           ;demo_ouput.c: 248: {
  8507                           ;demo_ouput.c: 249: CONSOLE_PutString((char *)"Broadcast Packet with RSSI ");
  8508  1ACF  30FD               	movlw	low (STR_33| (0+32768))
  8509  1AD0  0021               	movlb	1	; select bank1
  8510  1AD1  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8511  1AD2  3087               	movlw	high (STR_33| (0+32768))
  8512  1AD3  2AD8               	goto	L1
  8513  1AD4                     l6086:	
  8514                           ;demo_ouput.c: 250: }
  8515                           
  8516                           
  8517                           ;demo_ouput.c: 251: else
  8518                           ;demo_ouput.c: 252: {
  8519                           ;demo_ouput.c: 253: CONSOLE_PutString((char *)"Unicast Packet with RSSI ");
  8520  1AD4  3019               	movlw	low (STR_34| (0+32768))
  8521  1AD5  0021               	movlb	1	; select bank1
  8522  1AD6  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8523  1AD7  3088               	movlw	high (STR_34| (0+32768))
  8524  1AD8                     L1:	
  8525  1AD8  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  8526  1AD9  31AE  26F3  319A   	fcall	_CONSOLE_PutString
  8527                           
  8528                           ;demo_ouput.c: 254: }
  8529                           ;demo_ouput.c: 255: CONSOLE_PrintHex(rxMessage.PacketRSSI);
  8530  1ADC  0022               	movlb	2	; select bank2
  8531  1ADD  0828               	movf	(_rxMessage^(0+256)+8),w
  8532  1ADE  31A1  21EE  319A   	fcall	_CONSOLE_PrintHex
  8533                           
  8534                           ;demo_ouput.c: 256: if( rxMessage.flags.bits.srcPrsnt )
  8535  1AE1  0022               	movlb	2	; select bank2
  8536  1AE2  1F20               	btfss	_rxMessage^(0+256),6
  8537  1AE3  2B30               	goto	l6110
  8538                           
  8539                           ;demo_ouput.c: 257: {
  8540                           ;demo_ouput.c: 258: CONSOLE_PutString((char *)" from ");
  8541  1AE4  3044               	movlw	low (STR_35| (0+32768))
  8542  1AE5  0021               	movlb	1	; select bank1
  8543  1AE6  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8544  1AE7  3089               	movlw	high (STR_35| (0+32768))
  8545  1AE8  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  8546  1AE9  31AE  26F3  319A   	fcall	_CONSOLE_PutString
  8547                           
  8548                           ;demo_ouput.c: 259: if( rxMessage.flags.bits.altSrcAddr )
  8549  1AEC  0022               	movlb	2	; select bank2
  8550  1AED  1FA0               	btfss	_rxMessage^(0+256),7
  8551  1AEE  2B02               	goto	l6098
  8552                           
  8553                           ;demo_ouput.c: 260: {
  8554                           ;demo_ouput.c: 261: CONSOLE_PrintHex( rxMessage.SourceAddress[1]);
  8555  1AEF  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
  8556  1AF0  0086               	movwf	6
  8557  1AF1  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
  8558  1AF2  0087               	movwf	7
  8559  1AF3  3141               	addfsr 1,1
  8560  1AF4  0801               	movf	1,w
  8561  1AF5  31A1  21EE  319A   	fcall	_CONSOLE_PrintHex
  8562                           
  8563                           ;demo_ouput.c: 262: CONSOLE_PrintHex( rxMessage.SourceAddress[0]);
  8564  1AF8  0022               	movlb	2	; select bank2
  8565  1AF9  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
  8566  1AFA  0086               	movwf	6
  8567  1AFB  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
  8568  1AFC  0087               	movwf	7
  8569  1AFD  0801               	movf	1,w
  8570  1AFE  31A1  21EE  319A   	fcall	_CONSOLE_PrintHex
  8571                           
  8572                           ;demo_ouput.c: 263: }
  8573  1B01  2B30               	goto	l6110
  8574  1B02                     l6098:	
  8575                           
  8576                           ;demo_ouput.c: 264: else
  8577                           ;demo_ouput.c: 265: {
  8578                           ;demo_ouput.c: 266: for(i = 0; i < 8; i++)
  8579  1B02  0021               	movlb	1	; select bank1
  8580  1B03  01AB               	clrf	DemoOutput_HandleMessage@i^(0+128)
  8581  1B04  3008               	movlw	8
  8582  1B05  022B               	subwf	DemoOutput_HandleMessage@i^(0+128),w
  8583  1B06  1803               	btfsc	3,0
  8584  1B07  2B30               	goto	l6110
  8585  1B08                     l6104:	
  8586                           
  8587                           ;demo_ouput.c: 267: {
  8588                           ;demo_ouput.c: 268: CONSOLE_PrintHex(rxMessage.SourceAddress[8-1-i]);
  8589  1B08  082B               	movf	DemoOutput_HandleMessage@i^(0+128),w
  8590  1B09  3E01               	addlw	1
  8591  1B0A  00A7               	movwf	??_DemoOutput_HandleMessage^(0+128)
  8592  1B0B  3000               	movlw	0
  8593  1B0C  1803               	skipnc
  8594  1B0D  3001               	movlw	1
  8595  1B0E  00A8               	movwf	(??_DemoOutput_HandleMessage^(0+128)+1)
  8596  1B0F  09A7               	comf	??_DemoOutput_HandleMessage^(0+128),f
  8597  1B10  09A8               	comf	(??_DemoOutput_HandleMessage^(0+128)+1),f
  8598  1B11  0AA7               	incf	??_DemoOutput_HandleMessage^(0+128),f
  8599  1B12  1903               	skipnz
  8600  1B13  0AA8               	incf	(??_DemoOutput_HandleMessage^(0+128)+1),f
  8601  1B14  0827               	movf	??_DemoOutput_HandleMessage^(0+128),w
  8602  1B15  3E08               	addlw	8
  8603  1B16  00A9               	movwf	(??_DemoOutput_HandleMessage+2)^(0+128)
  8604  1B17  3000               	movlw	0
  8605  1B18  3D28               	addwfc	(??_DemoOutput_HandleMessage+1)^(0+128),w
  8606  1B19  00AA               	movwf	(??_DemoOutput_HandleMessage+3)^(0+128)
  8607  1B1A  0829               	movf	(??_DemoOutput_HandleMessage+2)^(0+128),w
  8608  1B1B  0022               	movlb	2	; select bank2
  8609  1B1C  0723               	addwf	(low ((_rxMessage| (0+256)+3)))^0,w
  8610  1B1D  0086               	movwf	6
  8611  1B1E  0021               	movlb	1	; select bank1
  8612  1B1F  082A               	movf	(??_DemoOutput_HandleMessage+3)^(0+128),w
  8613  1B20  0022               	movlb	2	; select bank2
  8614  1B21  3D24               	addwfc	((low ((_rxMessage| (0+256)+3))+1))^0,w
  8615  1B22  0087               	movwf	7
  8616  1B23  0801               	movf	1,w
  8617  1B24  31A1  21EE  319A   	fcall	_CONSOLE_PrintHex
  8618  1B27  3001               	movlw	1
  8619  1B28  0021               	movlb	1	; select bank1
  8620  1B29  00A7               	movwf	??_DemoOutput_HandleMessage^(0+128)
  8621  1B2A  0827               	movf	??_DemoOutput_HandleMessage^(0+128),w
  8622  1B2B  07AB               	addwf	DemoOutput_HandleMessage@i^(0+128),f
  8623  1B2C  3008               	movlw	8
  8624  1B2D  022B               	subwf	DemoOutput_HandleMessage@i^(0+128),w
  8625  1B2E  1C03               	skipc
  8626  1B2F  2B08               	goto	l6104
  8627  1B30                     l6110:	
  8628                           
  8629                           ;demo_ouput.c: 269: }
  8630                           ;demo_ouput.c: 270: }
  8631                           ;demo_ouput.c: 271: }
  8632                           ;demo_ouput.c: 272: CONSOLE_PutString((char *)": ");
  8633  1B30  302E               	movlw	low ((STR_3+9)| (0+32768))
  8634  1B31  0021               	movlb	1	; select bank1
  8635  1B32  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8636  1B33  3089               	movlw	high ((STR_3+9)| (0+32768))
  8637  1B34  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  8638  1B35  31AE  26F3  319A   	fcall	_CONSOLE_PutString
  8639                           
  8640                           ;demo_ouput.c: 274: for(i = 0; i < rxMessage.PayloadSize; i++)
  8641  1B38  0021               	movlb	1	; select bank1
  8642  1B39  01AB               	clrf	DemoOutput_HandleMessage@i^(0+128)
  8643  1B3A                     l6118:	
  8644  1B3A  0022               	movlb	2	; select bank2
  8645  1B3B  0827               	movf	(_rxMessage^(0+256)+7),w
  8646  1B3C  0021               	movlb	1	; select bank1
  8647  1B3D  022B               	subwf	DemoOutput_HandleMessage@i^(0+128),w
  8648  1B3E  1803               	btfsc	3,0
  8649  1B3F  0008               	return
  8650                           
  8651                           ;demo_ouput.c: 275: {
  8652                           ;demo_ouput.c: 276: CONSOLE_Put(rxMessage.Payload[i]);
  8653  1B40  082B               	movf	DemoOutput_HandleMessage@i^(0+128),w
  8654  1B41  00A7               	movwf	??_DemoOutput_HandleMessage^(0+128)
  8655  1B42  01A8               	clrf	(??_DemoOutput_HandleMessage^(0+128)+1)
  8656  1B43  0827               	movf	??_DemoOutput_HandleMessage^(0+128),w
  8657  1B44  0022               	movlb	2	; select bank2
  8658  1B45  0725               	addwf	(low ((_rxMessage| (0+256)+5)))^0,w
  8659  1B46  0086               	movwf	6
  8660  1B47  0021               	movlb	1	; select bank1
  8661  1B48  0828               	movf	(??_DemoOutput_HandleMessage+1)^(0+128),w
  8662  1B49  0022               	movlb	2	; select bank2
  8663  1B4A  3D26               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^0,w
  8664  1B4B  0087               	movwf	7
  8665  1B4C  0801               	movf	1,w
  8666  1B4D  31AD  25C0  319A   	fcall	_CONSOLE_Put
  8667  1B50  3001               	movlw	1
  8668  1B51  0021               	movlb	1	; select bank1
  8669  1B52  00A7               	movwf	??_DemoOutput_HandleMessage^(0+128)
  8670  1B53  0827               	movf	??_DemoOutput_HandleMessage^(0+128),w
  8671  1B54  07AB               	addwf	DemoOutput_HandleMessage@i^(0+128),f
  8672  1B55  2B3A               	goto	l6118
  8673  1B56                     __end_of_DemoOutput_HandleMessage:	
  8674                           
  8675                           	psect	text13
  8676  21A1                     __ptext13:	
  8677 ;; *************** function _MiApp_UnicastConnection *****************
  8678 ;; Defined at:
  8679 ;;		line 1776 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  ConnectionIn    1    wreg     unsigned char 
  8682 ;;  SecEn           1   70[BANK1 ] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  ConnectionIn    1   73[BANK1 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8694 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;Total ram usage:        4 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:   12
  8701 ;; This function calls:
  8702 ;;		_MiApp_UnicastAddress
  8703 ;;		___bmul
  8704 ;; This function is called by:
  8705 ;;		_run_p2p_demo
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           
  8710                           ;psect for function _MiApp_UnicastConnection
  8711  21A1                     _MiApp_UnicastConnection:	
  8712                           
  8713                           ;incstack = 0
  8714                           ; Regs used in _MiApp_UnicastConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8715                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  8716  21A1  0021               	movlb	1	; select bank1
  8717  21A2  00E9               	movwf	MiApp_UnicastConnection@ConnectionIndex^(0+128)
  8718                           
  8719                           ;miwi_p2p.c: 1779: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  8720  21A3  300A               	movlw	10
  8721  21A4  00E7               	movwf	??_MiApp_UnicastConnection^(0+128)
  8722  21A5  0867               	movf	??_MiApp_UnicastConnection^(0+128),w
  8723  21A6  00A0               	movwf	___bmul@multiplicand^(0+128)
  8724  21A7  0869               	movf	MiApp_UnicastConnection@ConnectionIndex^(0+128),w
  8725  21A8  31AE  2662  31A1   	fcall	___bmul
  8726  21AB  3E08               	addlw	8
  8727  21AC  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  8728  21AD  0086               	movwf	6
  8729  21AE  3001               	movlw	1	; select bank3/4
  8730  21AF  0087               	movwf	7
  8731  21B0  1F81               	btfss	1,7
  8732  21B1  29C5               	goto	l6350
  8733                           
  8734                           ;miwi_p2p.c: 1780: {
  8735                           ;miwi_p2p.c: 1813: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  8736  21B2  0021               	movlb	1	; select bank1
  8737  21B3  01E2               	clrf	MiApp_UnicastAddress@PermanentAddr^(0+128)
  8738  21B4  0AE2               	incf	MiApp_UnicastAddress@PermanentAddr^(0+128),f
  8739  21B5  0866               	movf	MiApp_UnicastConnection@SecEn^(0+128),w
  8740  21B6  00E7               	movwf	??_MiApp_UnicastConnection^(0+128)
  8741  21B7  0867               	movf	??_MiApp_UnicastConnection^(0+128),w
  8742  21B8  00E3               	movwf	MiApp_UnicastAddress@SecEn^(0+128)
  8743  21B9  300A               	movlw	10
  8744  21BA  00E8               	movwf	(??_MiApp_UnicastConnection+1)^(0+128)
  8745  21BB  0868               	movf	(??_MiApp_UnicastConnection+1)^(0+128),w
  8746  21BC  00A0               	movwf	___bmul@multiplicand^(0+128)
  8747  21BD  0869               	movf	MiApp_UnicastConnection@ConnectionIndex^(0+128),w
  8748  21BE  31AE  2662  31A1   	fcall	___bmul
  8749  21C1  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  8750  21C2  31AE  2620         	fcall	_MiApp_UnicastAddress
  8751  21C4  0008               	return
  8752  21C5                     l6350:	
  8753                           
  8754                           ;miwi_p2p.c: 1814: }
  8755                           ;miwi_p2p.c: 1815: return 0;
  8756  21C5  3000               	movlw	0
  8757  21C6  0008               	return
  8758  21C7                     __end_of_MiApp_UnicastConnection:	
  8759                           
  8760                           	psect	text14
  8761  2E20                     __ptext14:	
  8762 ;; *************** function _MiApp_UnicastAddress *****************
  8763 ;; Defined at:
  8764 ;;		line 1855 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  DestinationA    1    wreg     PTR unsigned char 
  8767 ;;		 -> ConnectionTable(50), 
  8768 ;;  PermanentAdd    1   66[BANK1 ] unsigned char 
  8769 ;;  SecEn           1   67[BANK1 ] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  DestinationA    1   69[BANK1 ] PTR unsigned char 
  8772 ;;		 -> ConnectionTable(50), 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      unsigned char 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8782 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;Total ram usage:        4 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:   11
  8789 ;; This function calls:
  8790 ;;		_SendPacket
  8791 ;; This function is called by:
  8792 ;;		_MiApp_UnicastConnection
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _MiApp_UnicastAddress
  8798  2E20                     _MiApp_UnicastAddress:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _MiApp_UnicastAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8802                           ;MiApp_UnicastAddress@DestinationAddress stored from wreg
  8803  2E20  0021               	movlb	1	; select bank1
  8804  2E21  00E5               	movwf	MiApp_UnicastAddress@DestinationAddress^(0+128)
  8805                           
  8806                           ;miwi_p2p.c: 1888: return SendPacket(0, DestinationAddress, 0, SecEn);
  8807  2E22  0865               	movf	MiApp_UnicastAddress@DestinationAddress^(0+128),w
  8808  2E23  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
  8809  2E24  3001               	movlw	1
  8810  2E25  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
  8811  2E26  01D8               	clrf	SendPacket@isCommand^(0+128)
  8812  2E27  0863               	movf	MiApp_UnicastAddress@SecEn^(0+128),w
  8813  2E28  00E4               	movwf	??_MiApp_UnicastAddress^(0+128)
  8814  2E29  0864               	movf	??_MiApp_UnicastAddress^(0+128),w
  8815  2E2A  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
  8816  2E2B  3000               	movlw	0
  8817  2E2C  31A4  24DF         	fcall	_SendPacket
  8818  2E2E  0008               	return
  8819  2E2F                     __end_of_MiApp_UnicastAddress:	
  8820                           
  8821                           	psect	text15
  8822  2E11                     __ptext15:	
  8823 ;; *************** function _MiApp_BroadcastPacket *****************
  8824 ;; Defined at:
  8825 ;;		line 1705 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  SecEn           1    wreg     unsigned char 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  SecEn           1   67[BANK1 ] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      unsigned char 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;Total ram usage:        2 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   11
  8846 ;; This function calls:
  8847 ;;		_SendPacket
  8848 ;; This function is called by:
  8849 ;;		_run_p2p_demo
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           
  8854                           ;psect for function _MiApp_BroadcastPacket
  8855  2E11                     _MiApp_BroadcastPacket:	
  8856                           
  8857                           ;incstack = 0
  8858                           ; Regs used in _MiApp_BroadcastPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8859                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  8860  2E11  0021               	movlb	1	; select bank1
  8861  2E12  00E3               	movwf	MiApp_BroadcastPacket@SecEn^(0+128)
  8862                           
  8863                           ;miwi_p2p.c: 1735: return SendPacket(1, (0), 0, SecEn);
  8864                           ;	Return value of _MiApp_BroadcastPacket is never used
  8865  2E13  3000               	movlw	0
  8866  2E14  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
  8867  2E15  3000               	movlw	0
  8868  2E16  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
  8869  2E17  01D8               	clrf	SendPacket@isCommand^(0+128)
  8870  2E18  0863               	movf	MiApp_BroadcastPacket@SecEn^(0+128),w
  8871  2E19  00E2               	movwf	??_MiApp_BroadcastPacket^(0+128)
  8872  2E1A  0862               	movf	??_MiApp_BroadcastPacket^(0+128),w
  8873  2E1B  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
  8874  2E1C  3001               	movlw	1
  8875  2E1D  31A4  24DF         	fcall	_SendPacket
  8876  2E1F  0008               	return
  8877  2E20                     __end_of_MiApp_BroadcastPacket:	
  8878                           
  8879                           	psect	text16
  8880  2E87                     __ptext16:	
  8881 ;; *************** function _DemoOutput_UnicastFail *****************
  8882 ;; Defined at:
  8883 ;;		line 294 in file "../src/demo_ouput.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:   10
  8904 ;; This function calls:
  8905 ;;		_CONSOLE_PutString
  8906 ;;		_LCDDisplay
  8907 ;; This function is called by:
  8908 ;;		_run_p2p_demo
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _DemoOutput_UnicastFail
  8914  2E87                     _DemoOutput_UnicastFail:	
  8915                           
  8916                           ;demo_ouput.c: 297: CONSOLE_PutString((char*)"\r\nUnicast Failed\r\n");
  8917                           
  8918                           ;incstack = 0
  8919                           ; Regs used in _DemoOutput_UnicastFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8920  2E87  308D               	movlw	low (STR_39| (0+32768))
  8921  2E88  0021               	movlb	1	; select bank1
  8922  2E89  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  8923  2E8A  3088               	movlw	high (STR_39| (0+32768))
  8924  2E8B  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  8925  2E8C  31AE  26F3  31AE   	fcall	_CONSOLE_PutString
  8926                           
  8927                           ;demo_ouput.c: 299: LCDDisplay((char *)" Unicast Failed", 0, 1);
  8928  2E8F  3007               	movlw	low (STR_40| (0+32768))
  8929  2E90  0021               	movlb	1	; select bank1
  8930  2E91  00D0               	movwf	LCDDisplay@text^(0+128)
  8931  2E92  3089               	movlw	high (STR_40| (0+32768))
  8932  2E93  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
  8933  2E94  01D2               	clrf	LCDDisplay@value^(0+128)
  8934  2E95  01D3               	clrf	LCDDisplay@delay^(0+128)
  8935  2E96  0AD3               	incf	LCDDisplay@delay^(0+128),f
  8936  2E97  31A2  22FE         	fcall	_LCDDisplay
  8937  2E99  0008               	return
  8938  2E9A                     __end_of_DemoOutput_UnicastFail:	
  8939                           
  8940                           	psect	text17
  8941  19B7                     __ptext17:	
  8942 ;; *************** function _ButtonPressed *****************
  8943 ;; Defined at:
  8944 ;;		line 359 in file "../src/demo_ouput.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  t               4   23[BANK1 ] struct _MIWI_TICK
  8949 ;;  tickDifferen    4   19[BANK1 ] struct _MIWI_TICK
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      unsigned char 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0, pclath, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;Total ram usage:       16 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    6
  8966 ;; This function calls:
  8967 ;;		_MiWi_TickGet
  8968 ;; This function is called by:
  8969 ;;		_run_p2p_demo
  8970 ;;		_freezer_feature
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           
  8975                           ;psect for function _ButtonPressed
  8976  19B7                     _ButtonPressed:	
  8977                           
  8978                           ;demo_ouput.c: 361: MIWI_TICK tickDifference;
  8979                           ;demo_ouput.c: 363: if(PORTBbits.RB0 == 0)
  8980                           
  8981                           ;incstack = 0
  8982                           ; Regs used in _ButtonPressed: [wreg+status,2+status,0+pclath+cstack]
  8983  19B7  0020               	movlb	0	; select bank0
  8984  19B8  180D               	btfsc	13,0	;volatile
  8985  19B9  29D3               	goto	l874
  8986                           
  8987                           ;demo_ouput.c: 364: {
  8988                           ;demo_ouput.c: 366: if(PUSH_BUTTON_pressed == 0)
  8989  19BA  085F               	movf	_PUSH_BUTTON_pressed,w
  8990  19BB  1D03               	btfss	3,2
  8991  19BC  2A35               	goto	l6430
  8992                           
  8993                           ;demo_ouput.c: 367: {
  8994                           ;demo_ouput.c: 368: PUSH_BUTTON_pressed = 1;
  8995  19BD  01DF               	clrf	_PUSH_BUTTON_pressed
  8996  19BE  0ADF               	incf	_PUSH_BUTTON_pressed,f
  8997                           
  8998                           ;demo_ouput.c: 369: PUSH_BUTTON_press_time = MiWi_TickGet();
  8999  19BF  31A4  2498         	fcall	_MiWi_TickGet
  9000  19C1  0021               	movlb	1	; select bank1
  9001  19C2  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9002  19C3  0022               	movlb	2	; select bank2
  9003  19C4  00B5               	movwf	(_PUSH_BUTTON_press_time+3)^(0+256)
  9004  19C5  0021               	movlb	1	; select bank1
  9005  19C6  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9006  19C7  0022               	movlb	2	; select bank2
  9007  19C8  00B4               	movwf	(_PUSH_BUTTON_press_time+2)^(0+256)
  9008  19C9  0021               	movlb	1	; select bank1
  9009  19CA  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9010  19CB  0022               	movlb	2	; select bank2
  9011  19CC  00B3               	movwf	(_PUSH_BUTTON_press_time+1)^(0+256)
  9012  19CD  0021               	movlb	1	; select bank1
  9013  19CE  0820               	movf	?_MiWi_TickGet^(0+128),w
  9014  19CF  0022               	movlb	2	; select bank2
  9015  19D0  00B2               	movwf	_PUSH_BUTTON_press_time^(0+256)
  9016                           
  9017                           ;demo_ouput.c: 370: return 1;
  9018  19D1  3001               	movlw	1
  9019  19D2  0008               	return
  9020  19D3                     l874:	
  9021                           ;demo_ouput.c: 371: }
  9022                           ;demo_ouput.c: 372: }
  9023                           
  9024                           
  9025                           ;demo_ouput.c: 373: else if(PORTAbits.RA5 == 0)
  9026  19D3  1A8C               	btfsc	12,5	;volatile
  9027  19D4  29EE               	goto	l6422
  9028                           
  9029                           ;demo_ouput.c: 374: {
  9030                           ;demo_ouput.c: 376: if(PUSH_BUTTON_pressed == 0)
  9031  19D5  085F               	movf	_PUSH_BUTTON_pressed,w
  9032  19D6  1D03               	btfss	3,2
  9033  19D7  2A35               	goto	l6430
  9034                           
  9035                           ;demo_ouput.c: 377: {
  9036                           ;demo_ouput.c: 378: PUSH_BUTTON_pressed = 1;
  9037  19D8  01DF               	clrf	_PUSH_BUTTON_pressed
  9038  19D9  0ADF               	incf	_PUSH_BUTTON_pressed,f
  9039                           
  9040                           ;demo_ouput.c: 379: PUSH_BUTTON_press_time = MiWi_TickGet();
  9041  19DA  31A4  2498         	fcall	_MiWi_TickGet
  9042  19DC  0021               	movlb	1	; select bank1
  9043  19DD  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9044  19DE  0022               	movlb	2	; select bank2
  9045  19DF  00B5               	movwf	(_PUSH_BUTTON_press_time+3)^(0+256)
  9046  19E0  0021               	movlb	1	; select bank1
  9047  19E1  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9048  19E2  0022               	movlb	2	; select bank2
  9049  19E3  00B4               	movwf	(_PUSH_BUTTON_press_time+2)^(0+256)
  9050  19E4  0021               	movlb	1	; select bank1
  9051  19E5  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9052  19E6  0022               	movlb	2	; select bank2
  9053  19E7  00B3               	movwf	(_PUSH_BUTTON_press_time+1)^(0+256)
  9054  19E8  0021               	movlb	1	; select bank1
  9055  19E9  0820               	movf	?_MiWi_TickGet^(0+128),w
  9056  19EA  0022               	movlb	2	; select bank2
  9057  19EB  00B2               	movwf	_PUSH_BUTTON_press_time^(0+256)
  9058                           
  9059                           ;demo_ouput.c: 380: return 2;
  9060  19EC  3002               	movlw	2
  9061  19ED  0008               	return
  9062  19EE                     l6422:	
  9063                           ;demo_ouput.c: 381: }
  9064                           ;demo_ouput.c: 382: }
  9065                           
  9066                           
  9067                           ;demo_ouput.c: 383: else
  9068                           ;demo_ouput.c: 384: {
  9069                           ;demo_ouput.c: 386: MIWI_TICK t = MiWi_TickGet();
  9070  19EE  31A4  2498  3199   	fcall	_MiWi_TickGet
  9071  19F1  0021               	movlb	1	; select bank1
  9072  19F2  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9073  19F3  00BA               	movwf	(ButtonPressed@t+3)^(0+128)
  9074  19F4  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9075  19F5  00B9               	movwf	(ButtonPressed@t+2)^(0+128)
  9076  19F6  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9077  19F7  00B8               	movwf	(ButtonPressed@t+1)^(0+128)
  9078  19F8  0820               	movf	?_MiWi_TickGet^(0+128),w
  9079  19F9  00B7               	movwf	ButtonPressed@t^(0+128)
  9080                           
  9081                           ;demo_ouput.c: 389: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  9082  19FA  0837               	movf	ButtonPressed@t^(0+128),w
  9083  19FB  00AB               	movwf	??_ButtonPressed^(0+128)
  9084  19FC  0838               	movf	(ButtonPressed@t+1)^(0+128),w
  9085  19FD  00AC               	movwf	(??_ButtonPressed^(0+128)+1)
  9086  19FE  0839               	movf	(ButtonPressed@t+2)^(0+128),w
  9087  19FF  00AD               	movwf	(??_ButtonPressed^(0+128)+2)
  9088  1A00  083A               	movf	(ButtonPressed@t+3)^(0+128),w
  9089  1A01  00AE               	movwf	(??_ButtonPressed^(0+128)+3)
  9090  1A02  0022               	movlb	2	; select bank2
  9091  1A03  0932               	comf	_PUSH_BUTTON_press_time^(0+256),w
  9092  1A04  0021               	movlb	1	; select bank1
  9093  1A05  00AF               	movwf	(??_ButtonPressed+4)^(0+128)
  9094  1A06  0022               	movlb	2	; select bank2
  9095  1A07  0933               	comf	(_PUSH_BUTTON_press_time+1)^(0+256),w
  9096  1A08  0021               	movlb	1	; select bank1
  9097  1A09  00B0               	movwf	((??_ButtonPressed+4)^(0+128)+1)
  9098  1A0A  0022               	movlb	2	; select bank2
  9099  1A0B  0934               	comf	(_PUSH_BUTTON_press_time+2)^(0+256),w
  9100  1A0C  0021               	movlb	1	; select bank1
  9101  1A0D  00B1               	movwf	((??_ButtonPressed+4)^(0+128)+2)
  9102  1A0E  0022               	movlb	2	; select bank2
  9103  1A0F  0935               	comf	(_PUSH_BUTTON_press_time+3)^(0+256),w
  9104  1A10  0021               	movlb	1	; select bank1
  9105  1A11  00B2               	movwf	((??_ButtonPressed+4)^(0+128)+3)
  9106  1A12  0AAF               	incf	(??_ButtonPressed+4)^(0+128),f
  9107  1A13  1903               	skipnz
  9108  1A14  0AB0               	incf	((??_ButtonPressed+4)^(0+128)+1),f
  9109  1A15  1903               	skipnz
  9110  1A16  0AB1               	incf	((??_ButtonPressed+4)^(0+128)+2),f
  9111  1A17  1903               	skipnz
  9112  1A18  0AB2               	incf	((??_ButtonPressed+4)^(0+128)+3),f
  9113  1A19  082F               	movf	(??_ButtonPressed+4)^(0+128),w
  9114  1A1A  07AB               	addwf	??_ButtonPressed^(0+128),f
  9115  1A1B  0830               	movf	(??_ButtonPressed+5)^(0+128),w
  9116  1A1C  3DAC               	addwfc	(??_ButtonPressed^(0+128)+1),f
  9117  1A1D  0831               	movf	(??_ButtonPressed+6)^(0+128),w
  9118  1A1E  3DAD               	addwfc	(??_ButtonPressed^(0+128)+2),f
  9119  1A1F  0832               	movf	(??_ButtonPressed+7)^(0+128),w
  9120  1A20  3DAE               	addwfc	(??_ButtonPressed^(0+128)+3),f
  9121  1A21  082E               	movf	(??_ButtonPressed+3)^(0+128),w
  9122  1A22  00B6               	movwf	(ButtonPressed@tickDifference+3)^(0+128)
  9123  1A23  082D               	movf	(??_ButtonPressed+2)^(0+128),w
  9124  1A24  00B5               	movwf	(ButtonPressed@tickDifference+2)^(0+128)
  9125  1A25  082C               	movf	(??_ButtonPressed+1)^(0+128),w
  9126  1A26  00B4               	movwf	(ButtonPressed@tickDifference+1)^(0+128)
  9127  1A27  082B               	movf	??_ButtonPressed^(0+128),w
  9128  1A28  00B3               	movwf	ButtonPressed@tickDifference^(0+128)
  9129                           
  9130                           ;demo_ouput.c: 392: if(tickDifference.Val > 0x00003FFF)
  9131  1A29  0836               	movf	(ButtonPressed@tickDifference+3)^(0+128),w
  9132  1A2A  1D03               	btfss	3,2
  9133  1A2B  2A33               	goto	l6428
  9134  1A2C  0835               	movf	(ButtonPressed@tickDifference+2)^(0+128),w
  9135  1A2D  1D03               	btfss	3,2
  9136  1A2E  2A33               	goto	l6428
  9137  1A2F  3040               	movlw	64
  9138  1A30  0234               	subwf	(ButtonPressed@tickDifference+1)^(0+128),w
  9139  1A31  1C03               	btfss	3,0
  9140  1A32  2A35               	goto	l6430
  9141  1A33                     l6428:	
  9142                           
  9143                           ;demo_ouput.c: 393: {
  9144                           ;demo_ouput.c: 394: PUSH_BUTTON_pressed = 0;
  9145  1A33  0020               	movlb	0	; select bank0
  9146  1A34  01DF               	clrf	_PUSH_BUTTON_pressed
  9147  1A35                     l6430:	
  9148                           
  9149                           ;demo_ouput.c: 395: }
  9150                           ;demo_ouput.c: 396: }
  9151                           ;demo_ouput.c: 398: return 0;
  9152  1A35  3000               	movlw	0
  9153  1A36  0008               	return
  9154  1A37                     __end_of_ButtonPressed:	
  9155                           
  9156                           	psect	text18
  9157  1824                     __ptext18:	
  9158 ;; *************** function _Initialize_Demo *****************
  9159 ;; Defined at:
  9160 ;;		line 96 in file "../src/task.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  freezer_enab    1    wreg     unsigned char 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  freezer_enab    1   77[BANK1 ] unsigned char 
  9165 ;;  i               1   78[BANK1 ] unsigned char 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      unsigned char 
  9168 ;; Registers used:
  9169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;Total ram usage:        3 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:   14
  9182 ;; This function calls:
  9183 ;;		_DemoOutput_Channel
  9184 ;;		_DemoOutput_ChannelError
  9185 ;;		_DemoOutput_Instruction
  9186 ;;		_DumpConnection
  9187 ;;		_MiApp_ConnectionMode
  9188 ;;		_MiApp_EstablishConnection
  9189 ;;		_MiApp_ProtocolInit
  9190 ;;		_MiApp_SetChannel
  9191 ;;		_MiApp_StartConnection
  9192 ;; This function is called by:
  9193 ;;		_main
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _Initialize_Demo
  9199  1824                     _Initialize_Demo:	
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _Initialize_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9203                           ;Initialize_Demo@freezer_enable stored from wreg
  9204  1824  0021               	movlb	1	; select bank1
  9205  1825  00ED               	movwf	Initialize_Demo@freezer_enable^(0+128)
  9206                           
  9207                           ;task.c: 98: uint8_t i;
  9208                           ;task.c: 100: if (freezer_enable)
  9209  1826  086D               	movf	Initialize_Demo@freezer_enable^(0+128),w
  9210  1827  1903               	btfsc	3,2
  9211  1828  2830               	goto	l1034
  9212                           
  9213                           ;task.c: 101: {
  9214                           ;task.c: 112: MiApp_ProtocolInit(1);
  9215  1829  3001               	movlw	1
  9216  182A  3191  214C  3198   	fcall	_MiApp_ProtocolInit
  9217                           
  9218                           ;task.c: 114: DemoOutput_Instruction();
  9219  182D  3190  2000         	fcall	_DemoOutput_Instruction
  9220                           
  9221                           ;task.c: 119: }
  9222  182F  0008               	return
  9223  1830                     l1034:	
  9224                           
  9225                           ;task.c: 120: else
  9226                           ;task.c: 121: {
  9227                           ;task.c: 122: LATDbits.LATD7 = 0;
  9228  1830  0022               	movlb	2	; select bank2
  9229  1831  138F               	bcf	15,7	;volatile
  9230                           
  9231                           ;task.c: 123: LATDbits.LATD6 = 0;
  9232  1832  130F               	bcf	15,6	;volatile
  9233                           
  9234                           ;task.c: 135: MiApp_ProtocolInit(0);
  9235  1833  3000               	movlw	0
  9236  1834  3191  214C  3198   	fcall	_MiApp_ProtocolInit
  9237                           
  9238                           ;task.c: 138: if( MiApp_SetChannel(myChannel) == 0 )
  9239  1837  0022               	movlb	2	; select bank2
  9240  1838  086B               	movf	_myChannel^(0+256),w
  9241  1839  31A0  20C2  3198   	fcall	_MiApp_SetChannel
  9242  183C  3A00               	xorlw	0
  9243  183D  1D03               	skipz
  9244  183E  2844               	goto	l7170
  9245                           
  9246                           ;task.c: 139: {
  9247                           ;task.c: 140: DemoOutput_ChannelError(myChannel);
  9248  183F  0022               	movlb	2	; select bank2
  9249  1840  086B               	movf	_myChannel^(0+256),w
  9250  1841  31AE  26B0  3198   	fcall	_DemoOutput_ChannelError
  9251  1844                     l7170:	
  9252                           
  9253                           ;task.c: 141: }
  9254                           ;task.c: 152: MiApp_ConnectionMode(0x00);
  9255  1844  3000               	movlw	0
  9256  1845  31A2  2217  3198   	fcall	_MiApp_ConnectionMode
  9257                           
  9258                           ;task.c: 153: DemoOutput_Channel(myChannel, 0);
  9259  1848  0021               	movlb	1	; select bank1
  9260  1849  01D7               	clrf	DemoOutput_Channel@Step^(0+128)
  9261  184A  0022               	movlb	2	; select bank2
  9262  184B  086B               	movf	_myChannel^(0+256),w
  9263  184C  31A5  2528  3198   	fcall	_DemoOutput_Channel
  9264                           
  9265                           ;task.c: 167: i = MiApp_EstablishConnection(0xFF, 0x00);
  9266  184F  0021               	movlb	1	; select bank1
  9267  1850  01EB               	clrf	MiApp_EstablishConnection@Mode^(0+128)
  9268  1851  30FF               	movlw	255
  9269  1852  319D  25A2  3198   	fcall	_MiApp_EstablishConnection
  9270  1855  0021               	movlb	1	; select bank1
  9271  1856  00EC               	movwf	??_Initialize_Demo^(0+128)
  9272  1857  086C               	movf	??_Initialize_Demo^(0+128),w
  9273  1858  00EE               	movwf	Initialize_Demo@i^(0+128)
  9274                           
  9275                           ;task.c: 172: if( i != 0xFF )
  9276  1859  0A6E               	incf	Initialize_Demo@i^(0+128),w
  9277  185A  1903               	btfsc	3,2
  9278  185B  2864               	goto	l7180
  9279                           
  9280                           ;task.c: 173: {
  9281                           ;task.c: 174: DemoOutput_Channel(myChannel, 1);
  9282  185C  01D7               	clrf	DemoOutput_Channel@Step^(0+128)
  9283  185D  0AD7               	incf	DemoOutput_Channel@Step^(0+128),f
  9284  185E  0022               	movlb	2	; select bank2
  9285  185F  086B               	movf	_myChannel^(0+256),w
  9286  1860  31A5  2528  3198   	fcall	_DemoOutput_Channel
  9287                           
  9288                           ;task.c: 178: }
  9289  1863  2875               	goto	l7182
  9290  1864                     l7180:	
  9291                           
  9292                           ;task.c: 179: else
  9293                           ;task.c: 180: {
  9294                           ;task.c: 211: MiApp_StartConnection(0x00, 10, 0);
  9295  1864  300A               	movlw	10
  9296  1865  0021               	movlb	1	; select bank1
  9297  1866  00EC               	movwf	??_Initialize_Demo^(0+128)
  9298  1867  086C               	movf	??_Initialize_Demo^(0+128),w
  9299  1868  00AB               	movwf	MiApp_StartConnection@ScanDuration^(0+128)
  9300  1869  3000               	movlw	0
  9301  186A  00AF               	movwf	(MiApp_StartConnection@ChannelMap+3)^(0+128)
  9302  186B  3000               	movlw	0
  9303  186C  00AE               	movwf	(MiApp_StartConnection@ChannelMap+2)^(0+128)
  9304  186D  3000               	movlw	0
  9305  186E  00AD               	movwf	(MiApp_StartConnection@ChannelMap+1)^(0+128)
  9306  186F  3000               	movlw	0
  9307  1870  00AC               	movwf	MiApp_StartConnection@ChannelMap^(0+128)
  9308  1871  3000               	movlw	0
  9309  1872  31A3  2367  3198   	fcall	_MiApp_StartConnection
  9310  1875                     l7182:	
  9311                           
  9312                           ;task.c: 215: }
  9313                           ;task.c: 229: DumpConnection(0xFF);
  9314  1875  30FF               	movlw	255
  9315  1876  319E  26A2  3198   	fcall	_DumpConnection
  9316                           
  9317                           ;task.c: 234: LATDbits.LATD7 = 1;
  9318  1879  0022               	movlb	2	; select bank2
  9319  187A  178F               	bsf	15,7	;volatile
  9320                           
  9321                           ;task.c: 236: DemoOutput_Instruction();
  9322  187B  3190  2000         	fcall	_DemoOutput_Instruction
  9323  187D  0008               	return
  9324  187E                     __end_of_Initialize_Demo:	
  9325                           
  9326                           	psect	text19
  9327  2367                     __ptext19:	
  9328 ;; *************** function _MiApp_StartConnection *****************
  9329 ;; Defined at:
  9330 ;;		line 2156 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  Mode            1    wreg     unsigned char 
  9333 ;;  ScanDuration    1   11[BANK1 ] unsigned char 
  9334 ;;  ChannelMap      4   12[BANK1 ] unsigned long 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  Mode            1   16[BANK1 ] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      unsigned char 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        6 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    6
  9353 ;; This function calls:
  9354 ;;		_MiWi_TickGet
  9355 ;; This function is called by:
  9356 ;;		_Initialize_Demo
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _MiApp_StartConnection
  9362  2367                     _MiApp_StartConnection:	
  9363                           
  9364                           ;incstack = 0
  9365                           ; Regs used in _MiApp_StartConnection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9366                           ;MiApp_StartConnection@Mode stored from wreg
  9367  2367  0021               	movlb	1	; select bank1
  9368  2368  00B0               	movwf	MiApp_StartConnection@Mode^(0+128)
  9369                           
  9370                           ;miwi_p2p.c: 2158: switch(Mode)
  9371  2369  2B90               	goto	l6588
  9372  236A                     l6582:	
  9373                           ;miwi_p2p.c: 2159: {
  9374                           ;miwi_p2p.c: 2160: case 0x00:
  9375                           
  9376                           
  9377                           ;miwi_p2p.c: 2176: tick1 = MiWi_TickGet();
  9378  236A  31A4  2498  31A3   	fcall	_MiWi_TickGet
  9379  236D  0021               	movlb	1	; select bank1
  9380  236E  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9381  236F  0023               	movlb	3	; select bank3
  9382  2370  00A3               	movwf	(_tick1+3)^(0+384)
  9383  2371  0021               	movlb	1	; select bank1
  9384  2372  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9385  2373  0023               	movlb	3	; select bank3
  9386  2374  00A2               	movwf	(_tick1+2)^(0+384)
  9387  2375  0021               	movlb	1	; select bank1
  9388  2376  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9389  2377  0023               	movlb	3	; select bank3
  9390  2378  00A1               	movwf	(_tick1+1)^(0+384)
  9391  2379  0021               	movlb	1	; select bank1
  9392  237A  0820               	movf	?_MiWi_TickGet^(0+128),w
  9393  237B  0023               	movlb	3	; select bank3
  9394  237C  00A0               	movwf	_tick1^(0+384)
  9395                           
  9396                           ;miwi_p2p.c: 2177: tick4 = MiWi_TickGet();
  9397  237D  31A4  2498         	fcall	_MiWi_TickGet
  9398  237F  0021               	movlb	1	; select bank1
  9399  2380  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
  9400  2381  0023               	movlb	3	; select bank3
  9401  2382  00A7               	movwf	(_tick4+3)^(0+384)
  9402  2383  0021               	movlb	1	; select bank1
  9403  2384  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
  9404  2385  0023               	movlb	3	; select bank3
  9405  2386  00A6               	movwf	(_tick4+2)^(0+384)
  9406  2387  0021               	movlb	1	; select bank1
  9407  2388  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
  9408  2389  0023               	movlb	3	; select bank3
  9409  238A  00A5               	movwf	(_tick4+1)^(0+384)
  9410  238B  0021               	movlb	1	; select bank1
  9411  238C  0820               	movf	?_MiWi_TickGet^(0+128),w
  9412  238D  0023               	movlb	3	; select bank3
  9413  238E  00A4               	movwf	_tick4^(0+384)
  9414                           
  9415                           ;miwi_p2p.c: 2218: }
  9416                           
  9417                           ;miwi_p2p.c: 2217: break;
  9418                           
  9419                           ;miwi_p2p.c: 2216: default:
  9420                           
  9421                           ;miwi_p2p.c: 2214: return 0;
  9422                           ;	Return value of _MiApp_StartConnection is never used
  9423                           
  9424                           ;miwi_p2p.c: 2212: case 0x02:
  9425                           
  9426                           ;miwi_p2p.c: 2209: return 0;
  9427                           ;	Return value of _MiApp_StartConnection is never used
  9428                           
  9429                           ;miwi_p2p.c: 2180: case 0x01:
  9430                           
  9431                           ;miwi_p2p.c: 2178: return 1;
  9432                           ;	Return value of _MiApp_StartConnection is never used
  9433  238F  0008               	return
  9434  2390                     l6588:	
  9435  2390  0021               	movlb	1	; select bank1
  9436  2391  0830               	movf	MiApp_StartConnection@Mode^(0+128),w
  9437                           
  9438                           ; Switch size 1, requested type "space"
  9439                           ; Number of cases is 3, Range of values is 0 to 2
  9440                           ; switch strategies available:
  9441                           ; Name         Instructions Cycles
  9442                           ; simple_byte           10     6 (average)
  9443                           ; direct_byte           12     6 (fixed)
  9444                           ; jumptable            260     6 (fixed)
  9445                           ;	Chosen strategy is simple_byte
  9446  2392  3A00               	xorlw	0	; case 0
  9447  2393  1903               	skipnz
  9448  2394  2B6A               	goto	l6582
  9449  2395  3A01               	xorlw	1	; case 1
  9450  2396  1903               	skipnz
  9451  2397  2B9C               	goto	l470
  9452  2398  3A03               	xorlw	3	; case 2
  9453  2399  1903               	skipnz
  9454  239A  2B9C               	goto	l470
  9455  239B  2B9C               	goto	l470
  9456  239C                     l470:	
  9457                           ;miwi_p2p.c: 2219: return 0;
  9458                           ;	Return value of _MiApp_StartConnection is never used
  9459                           
  9460  239C  0008               	return
  9461  239D                     __end_of_MiApp_StartConnection:	
  9462                           
  9463                           	psect	text20
  9464  114C                     __ptext20:	
  9465 ;; *************** function _MiApp_ProtocolInit *****************
  9466 ;; Defined at:
  9467 ;;		line 1118 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  bNetworkFree    1    wreg     unsigned char 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  bNetworkFree    1   28[BANK1 ] unsigned char 
  9472 ;;  initValue       2   29[BANK1 ] struct .
  9473 ;;  i               1   31[BANK1 ] unsigned char 
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      unsigned char 
  9476 ;; Registers used:
  9477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;Total ram usage:        6 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:   10
  9490 ;; This function calls:
  9491 ;;		_CONSOLE_PrintHex
  9492 ;;		_CONSOLE_PutString
  9493 ;;		_EEPROM_Read
  9494 ;;		_InitSymbolTimer
  9495 ;;		_MiApp_SetChannel
  9496 ;;		_MiMAC_Init
  9497 ;;		_NVMInit
  9498 ;;		_NVMRead
  9499 ;;		_NVMWrite
  9500 ;;		___bmul
  9501 ;; This function is called by:
  9502 ;;		_Initialize_Demo
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           
  9507                           ;psect for function _MiApp_ProtocolInit
  9508  114C                     _MiApp_ProtocolInit:	
  9509                           
  9510                           ;incstack = 0
  9511                           ; Regs used in _MiApp_ProtocolInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9512                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  9513  114C  0021               	movlb	1	; select bank1
  9514  114D  00BC               	movwf	MiApp_ProtocolInit@bNetworkFreezer^(0+128)
  9515                           
  9516                           ;miwi_p2p.c: 1127: {
  9517                           ;miwi_p2p.c: 1128: for(i = 0; i < 3; i++)
  9518  114E  01BF               	clrf	MiApp_ProtocolInit@i^(0+128)
  9519  114F  3003               	movlw	3
  9520  1150  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9521  1151  1803               	btfsc	3,0
  9522  1152  296C               	goto	l6492
  9523  1153                     l6486:	
  9524                           
  9525                           ;miwi_p2p.c: 1129: {
  9526                           ;miwi_p2p.c: 1130: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  9527  1153  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9528  1154  3EFA               	addlw	250
  9529  1155  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9530  1156  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9531  1157  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9532  1158  01A4               	clrf	EEPROM_Read@count^(0+128)
  9533  1159  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9534  115A  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9535  115B  3E01               	addlw	1
  9536  115C  3AFF               	xorlw	255
  9537  115D  3E01               	addlw	1
  9538  115E  3E08               	addlw	8
  9539  115F  3EDA               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9540  1160  31A1  217B  3191   	fcall	_EEPROM_Read
  9541  1163  3001               	movlw	1
  9542  1164  0021               	movlb	1	; select bank1
  9543  1165  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9544  1166  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9545  1167  07BF               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9546  1168  3003               	movlw	3
  9547  1169  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9548  116A  1C03               	skipc
  9549  116B  2953               	goto	l6486
  9550  116C                     l6492:	
  9551                           
  9552                           ;miwi_p2p.c: 1133: if( 8 > 7 )
  9553  116C  30FF               	movlw	255
  9554  116D  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9555  116E  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9556  116F  0023               	movlb	3	; select bank3
  9557  1170  00DE               	movwf	(_myLongAddress^(0+384)+4)
  9558                           
  9559                           ;miwi_p2p.c: 1134: {
  9560                           ;miwi_p2p.c: 1135: myLongAddress[3] = 0xFE;
  9561  1171  30FE               	movlw	254
  9562  1172  0021               	movlb	1	; select bank1
  9563  1173  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9564  1174  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9565  1175  0023               	movlb	3	; select bank3
  9566  1176  00DD               	movwf	(_myLongAddress^(0+384)+3)
  9567                           
  9568                           ;miwi_p2p.c: 1136: }
  9569                           ;miwi_p2p.c: 1137: for(i = 0; i < 3; i++)
  9570  1177  0021               	movlb	1	; select bank1
  9571  1178  01BF               	clrf	MiApp_ProtocolInit@i^(0+128)
  9572  1179                     L2:	
  9573  1179  3003               	movlw	3
  9574  117A  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9575  117B  1803               	btfsc	3,0
  9576  117C  29AA               	goto	l6518
  9577                           
  9578                           ;miwi_p2p.c: 1138: {
  9579                           ;miwi_p2p.c: 1139: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
  9580  117D  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9581  117E  3EFD               	addlw	253
  9582  117F  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9583  1180  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9584  1181  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9585  1182  01A4               	clrf	EEPROM_Read@count^(0+128)
  9586  1183  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9587  1184  033F               	decf	MiApp_ProtocolInit@i^(0+128),w
  9588  1185  3AFF               	xorlw	255
  9589  1186  3E02               	addlw	2
  9590  1187  3EDA               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9591  1188  31A1  217B  3191   	fcall	_EEPROM_Read
  9592  118B  3001               	movlw	1
  9593  118C  0021               	movlb	1	; select bank1
  9594  118D  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9595  118E  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9596  118F  07BF               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9597  1190  2979               	goto	L2
  9598  1191                     l6512:	
  9599                           ;miwi_p2p.c: 1142: else
  9600                           ;miwi_p2p.c: 1143: {
  9601                           ;miwi_p2p.c: 1144: for(i = 0; i < 8; i++)
  9602                           
  9603                           ;miwi_p2p.c: 1140: }
  9604                           ;miwi_p2p.c: 1141: }
  9605                           
  9606                           
  9607                           ;miwi_p2p.c: 1145: {
  9608                           ;miwi_p2p.c: 1146: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  9609  1191  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9610  1192  3EFA               	addlw	250
  9611  1193  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9612  1194  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9613  1195  00A3               	movwf	EEPROM_Read@addr^(0+128)
  9614  1196  01A4               	clrf	EEPROM_Read@count^(0+128)
  9615  1197  0AA4               	incf	EEPROM_Read@count^(0+128),f
  9616  1198  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9617  1199  3E01               	addlw	1
  9618  119A  3AFF               	xorlw	255
  9619  119B  3E01               	addlw	1
  9620  119C  3E08               	addlw	8
  9621  119D  3EDA               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
  9622  119E  31A1  217B  3191   	fcall	_EEPROM_Read
  9623  11A1  3001               	movlw	1
  9624  11A2  0021               	movlb	1	; select bank1
  9625  11A3  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9626  11A4  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9627  11A5  07BF               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9628  11A6  3008               	movlw	8
  9629  11A7  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9630  11A8  1C03               	skipc
  9631  11A9  2991               	goto	l6512
  9632  11AA                     l6518:	
  9633                           
  9634                           ;miwi_p2p.c: 1147: }
  9635                           ;miwi_p2p.c: 1148: }
  9636                           ;miwi_p2p.c: 1154: NVMInit();
  9637  11AA  3198  20DE  3191   	fcall	_NVMInit
  9638                           
  9639                           ;miwi_p2p.c: 1158: P2PStatus.Val = 0;
  9640  11AD  0022               	movlb	2	; select bank2
  9641  11AE  01BD               	clrf	_P2PStatus^(0+256)	;volatile
  9642                           
  9643                           ;miwi_p2p.c: 1160: if (!bNetworkFreezer)
  9644  11AF  0021               	movlb	1	; select bank1
  9645  11B0  083C               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
  9646  11B1  1D03               	btfss	3,2
  9647  11B2  29FB               	goto	l6536
  9648                           
  9649                           ;miwi_p2p.c: 1161: {
  9650                           ;miwi_p2p.c: 1162: for(i = 0; i < 5; i++)
  9651  11B3  01BF               	clrf	MiApp_ProtocolInit@i^(0+128)
  9652  11B4  3005               	movlw	5
  9653  11B5  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9654  11B6  1803               	btfsc	3,0
  9655  11B7  29FB               	goto	l6536
  9656  11B8                     l6530:	
  9657                           
  9658                           ;miwi_p2p.c: 1163: {
  9659                           ;miwi_p2p.c: 1164: ConnectionTable[i].status.Val = 0;
  9660  11B8  300A               	movlw	10
  9661  11B9  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9662  11BA  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9663  11BB  00A0               	movwf	___bmul@multiplicand^(0+128)
  9664  11BC  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9665  11BD  31AE  2662  3191   	fcall	___bmul
  9666  11C0  3E08               	addlw	8
  9667  11C1  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9668  11C2  0086               	movwf	6
  9669  11C3  3001               	movlw	1	; select bank3/4
  9670  11C4  0087               	movwf	7
  9671  11C5  0181               	clrf	1
  9672                           
  9673                           ;miwi_p2p.c: 1165: ConnectionTable[i].Address[0] = 0x00;
  9674  11C6  300A               	movlw	10
  9675  11C7  0021               	movlb	1	; select bank1
  9676  11C8  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9677  11C9  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9678  11CA  00A0               	movwf	___bmul@multiplicand^(0+128)
  9679  11CB  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9680  11CC  31AE  2662  3191   	fcall	___bmul
  9681  11CF  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9682  11D0  0086               	movwf	6
  9683  11D1  3001               	movlw	1	; select bank3/4
  9684  11D2  0087               	movwf	7
  9685  11D3  0181               	clrf	1
  9686                           
  9687                           ;miwi_p2p.c: 1166: ConnectionTable[i].Address[1] = 0x00;
  9688  11D4  300A               	movlw	10
  9689  11D5  0021               	movlb	1	; select bank1
  9690  11D6  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9691  11D7  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9692  11D8  00A0               	movwf	___bmul@multiplicand^(0+128)
  9693  11D9  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9694  11DA  31AE  2662  3191   	fcall	___bmul
  9695  11DD  3E01               	addlw	1
  9696  11DE  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9697  11DF  0086               	movwf	6
  9698  11E0  3001               	movlw	1	; select bank3/4
  9699  11E1  0087               	movwf	7
  9700  11E2  0181               	clrf	1
  9701                           
  9702                           ;miwi_p2p.c: 1167: ConnectionTable[i].Address[2] = 0x00;
  9703  11E3  300A               	movlw	10
  9704  11E4  0021               	movlb	1	; select bank1
  9705  11E5  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9706  11E6  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9707  11E7  00A0               	movwf	___bmul@multiplicand^(0+128)
  9708  11E8  083F               	movf	MiApp_ProtocolInit@i^(0+128),w
  9709  11E9  31AE  2662  3191   	fcall	___bmul
  9710  11EC  3E02               	addlw	2
  9711  11ED  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9712  11EE  0086               	movwf	6
  9713  11EF  3001               	movlw	1	; select bank3/4
  9714  11F0  0087               	movwf	7
  9715  11F1  0181               	clrf	1
  9716  11F2  3001               	movlw	1
  9717  11F3  0021               	movlb	1	; select bank1
  9718  11F4  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9719  11F5  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9720  11F6  07BF               	addwf	MiApp_ProtocolInit@i^(0+128),f
  9721  11F7  3005               	movlw	5
  9722  11F8  023F               	subwf	MiApp_ProtocolInit@i^(0+128),w
  9723  11F9  1C03               	skipc
  9724  11FA  29B8               	goto	l6530
  9725  11FB                     l6536:	
  9726                           
  9727                           ;miwi_p2p.c: 1172: }
  9728                           ;miwi_p2p.c: 1173: }
  9729                           ;miwi_p2p.c: 1175: InitSymbolTimer();
  9730  11FB  31AD  25DF  3191   	fcall	_InitSymbolTimer
  9731                           
  9732                           ;miwi_p2p.c: 1177: TxData = 0;
  9733  11FE  0022               	movlb	2	; select bank2
  9734  11FF  01BF               	clrf	_TxData^(0+256)
  9735                           
  9736                           ;miwi_p2p.c: 1194: if( bNetworkFreezer )
  9737  1200  0021               	movlb	1	; select bank1
  9738  1201  083C               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
  9739  1202  1903               	btfsc	3,2
  9740  1203  2A57               	goto	l6554
  9741                           
  9742                           ;miwi_p2p.c: 1195: {
  9743                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  9744  1204  0020               	movlb	0	; select bank0
  9745  1205  086C               	movf	_nvmCurrentChannel+1,w
  9746  1206  0021               	movlb	1	; select bank1
  9747  1207  00A4               	movwf	(NVMRead@addr+1)^(0+128)
  9748  1208  0020               	movlb	0	; select bank0
  9749  1209  086B               	movf	_nvmCurrentChannel,w
  9750  120A  0021               	movlb	1	; select bank1
  9751  120B  00A3               	movwf	NVMRead@addr^(0+128)
  9752  120C  3001               	movlw	1
  9753  120D  00A5               	movwf	NVMRead@count^(0+128)
  9754  120E  3000               	movlw	0
  9755  120F  00A6               	movwf	(NVMRead@count^(0+128)+1)
  9756  1210  304C               	movlw	(low (_currentChannel| (0+256)))& (0+255)
  9757  1211  31A3  239D  3191   	fcall	_NVMRead
  9758                           
  9759                           ;miwi_p2p.c: 1197: if( currentChannel >= 32 )
  9760  1214  3020               	movlw	32
  9761  1215  0022               	movlb	2	; select bank2
  9762  1216  024C               	subwf	_currentChannel^(0+256),w
  9763  1217  1803               	btfsc	3,0
  9764  1218  0008               	return
  9765                           
  9766                           ;miwi_p2p.c: 1200: }
  9767                           ;miwi_p2p.c: 1205: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  9768                           
  9769                           ;miwi_p2p.c: 1198: {
  9770                           ;miwi_p2p.c: 1199: return 0;
  9771                           ;	Return value of _MiApp_ProtocolInit is never used
  9772  1219  0020               	movlb	0	; select bank0
  9773  121A  086A               	movf	_nvmConnMode+1,w
  9774  121B  0021               	movlb	1	; select bank1
  9775  121C  00A4               	movwf	(NVMRead@addr+1)^(0+128)
  9776  121D  0020               	movlb	0	; select bank0
  9777  121E  0869               	movf	_nvmConnMode,w
  9778  121F  0021               	movlb	1	; select bank1
  9779  1220  00A3               	movwf	NVMRead@addr^(0+128)
  9780  1221  3001               	movlw	1
  9781  1222  00A5               	movwf	NVMRead@count^(0+128)
  9782  1223  3000               	movlw	0
  9783  1224  00A6               	movwf	(NVMRead@count^(0+128)+1)
  9784  1225  306C               	movlw	(low (_ConnMode| (0+256)))& (0+255)
  9785  1226  31A3  239D  3191   	fcall	_NVMRead
  9786                           
  9787                           ;miwi_p2p.c: 1206: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
  9788  1229  0022               	movlb	2	; select bank2
  9789  122A  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
  9790  122B  0021               	movlb	1	; select bank1
  9791  122C  00A4               	movwf	(NVMRead@addr+1)^(0+128)
  9792  122D  0022               	movlb	2	; select bank2
  9793  122E  0845               	movf	_nvmConnectionTable^(0+256),w
  9794  122F  0021               	movlb	1	; select bank1
  9795  1230  00A3               	movwf	NVMRead@addr^(0+128)
  9796  1231  3032               	movlw	50
  9797  1232  00A5               	movwf	NVMRead@count^(0+128)
  9798  1233  3000               	movlw	0
  9799  1234  00A6               	movwf	(NVMRead@count^(0+128)+1)
  9800  1235  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9801  1236  31A3  239D  3191   	fcall	_NVMRead
  9802                           
  9803                           ;miwi_p2p.c: 1212: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  9804  1239  0020               	movlb	0	; select bank0
  9805  123A  086E               	movf	_nvmEdc+1,w
  9806  123B  0021               	movlb	1	; select bank1
  9807  123C  00A4               	movwf	(NVMRead@addr+1)^(0+128)
  9808  123D  0020               	movlb	0	; select bank0
  9809  123E  086D               	movf	_nvmEdc,w
  9810  123F  0021               	movlb	1	; select bank1
  9811  1240  00A3               	movwf	NVMRead@addr^(0+128)
  9812  1241  3001               	movlw	1
  9813  1242  00A5               	movwf	NVMRead@count^(0+128)
  9814  1243  3000               	movlw	0
  9815  1244  00A6               	movwf	(NVMRead@count^(0+128)+1)
  9816  1245  304B               	movlw	(low (_conn_size| (0+256)))& (0+255)
  9817  1246  31A3  239D  3191   	fcall	_NVMRead
  9818                           
  9819                           ;miwi_p2p.c: 1220: CONSOLE_PutString((char*)" Channel:");
  9820  1249  3031               	movlw	low (STR_1| (0+32768))
  9821  124A  0021               	movlb	1	; select bank1
  9822  124B  00A1               	movwf	CONSOLE_PutString@str^(0+128)
  9823  124C  3089               	movlw	high (STR_1| (0+32768))
  9824  124D  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
  9825  124E  31AE  26F3  3191   	fcall	_CONSOLE_PutString
  9826                           
  9827                           ;miwi_p2p.c: 1221: CONSOLE_PrintHex(currentChannel);
  9828  1251  0022               	movlb	2	; select bank2
  9829  1252  084C               	movf	_currentChannel^(0+256),w
  9830  1253  31A1  21EE  3191   	fcall	_CONSOLE_PrintHex
  9831                           
  9832                           ;miwi_p2p.c: 1223: }
  9833  1256  2A87               	goto	l6556
  9834  1257                     l6554:	
  9835                           
  9836                           ;miwi_p2p.c: 1224: else
  9837                           ;miwi_p2p.c: 1225: {
  9838                           ;miwi_p2p.c: 1230: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  9839  1257  0020               	movlb	0	; select bank0
  9840  1258  086C               	movf	_nvmCurrentChannel+1,w
  9841  1259  0021               	movlb	1	; select bank1
  9842  125A  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
  9843  125B  0020               	movlb	0	; select bank0
  9844  125C  086B               	movf	_nvmCurrentChannel,w
  9845  125D  0021               	movlb	1	; select bank1
  9846  125E  00AD               	movwf	NVMWrite@addr^(0+128)
  9847  125F  3001               	movlw	1
  9848  1260  00AF               	movwf	NVMWrite@count^(0+128)
  9849  1261  3000               	movlw	0
  9850  1262  00B0               	movwf	(NVMWrite@count^(0+128)+1)
  9851  1263  304C               	movlw	(low (_currentChannel| (0+256)))& (0+255)
  9852  1264  3199  213F  3191   	fcall	_NVMWrite
  9853                           
  9854                           ;miwi_p2p.c: 1231: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  9855  1267  0020               	movlb	0	; select bank0
  9856  1268  086A               	movf	_nvmConnMode+1,w
  9857  1269  0021               	movlb	1	; select bank1
  9858  126A  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
  9859  126B  0020               	movlb	0	; select bank0
  9860  126C  0869               	movf	_nvmConnMode,w
  9861  126D  0021               	movlb	1	; select bank1
  9862  126E  00AD               	movwf	NVMWrite@addr^(0+128)
  9863  126F  3001               	movlw	1
  9864  1270  00AF               	movwf	NVMWrite@count^(0+128)
  9865  1271  3000               	movlw	0
  9866  1272  00B0               	movwf	(NVMWrite@count^(0+128)+1)
  9867  1273  306C               	movlw	(low (_ConnMode| (0+256)))& (0+255)
  9868  1274  3199  213F  3191   	fcall	_NVMWrite
  9869                           
  9870                           ;miwi_p2p.c: 1232: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
  9871  1277  0022               	movlb	2	; select bank2
  9872  1278  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
  9873  1279  0021               	movlb	1	; select bank1
  9874  127A  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
  9875  127B  0022               	movlb	2	; select bank2
  9876  127C  0845               	movf	_nvmConnectionTable^(0+256),w
  9877  127D  0021               	movlb	1	; select bank1
  9878  127E  00AD               	movwf	NVMWrite@addr^(0+128)
  9879  127F  3032               	movlw	50
  9880  1280  00AF               	movwf	NVMWrite@count^(0+128)
  9881  1281  3000               	movlw	0
  9882  1282  00B0               	movwf	(NVMWrite@count^(0+128)+1)
  9883  1283  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9884  1284  3199  213F  3191   	fcall	_NVMWrite
  9885  1287                     l6556:	
  9886                           
  9887                           ;miwi_p2p.c: 1233: }
  9888                           ;miwi_p2p.c: 1240: initValue.PAddress = myLongAddress;
  9889  1287  30DA               	movlw	(low (_myLongAddress| (0+256)))& (0+255)
  9890  1288  0021               	movlb	1	; select bank1
  9891  1289  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9892  128A  083A               	movf	??_MiApp_ProtocolInit^(0+128),w
  9893  128B  00BE               	movwf	(low ((MiApp_ProtocolInit@initValue| 0+1)))^(0+128)
  9894                           
  9895                           ;miwi_p2p.c: 1241: initValue.actionFlags.bits.CCAEnable = 1;
  9896  128C  14BD               	bsf	MiApp_ProtocolInit@initValue^(0+128),1
  9897                           
  9898                           ;miwi_p2p.c: 1242: initValue.actionFlags.bits.PAddrLength = 8;
  9899  128D  083D               	movf	MiApp_ProtocolInit@initValue^(0+128),w
  9900  128E  3987               	andlw	-121
  9901  128F  3840               	iorlw	64
  9902  1290  00BD               	movwf	MiApp_ProtocolInit@initValue^(0+128)
  9903                           
  9904                           ;miwi_p2p.c: 1243: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  9905  1291  083C               	movf	MiApp_ProtocolInit@bNetworkFreezer^(0+128),w
  9906  1292  3901               	andlw	1
  9907  1293  113D               	bcf	MiApp_ProtocolInit@initValue^(0+128),2
  9908  1294  1D03               	skipz
  9909  1295  153D               	bsf	MiApp_ProtocolInit@initValue^(0+128),2
  9910                           
  9911                           ;miwi_p2p.c: 1244: initValue.actionFlags.bits.RepeaterMode = 0;
  9912  1296  103D               	bcf	MiApp_ProtocolInit@initValue^(0+128),0
  9913                           
  9914                           ;miwi_p2p.c: 1246: MiMAC_Init(initValue);
  9915  1297  083E               	movf	(MiApp_ProtocolInit@initValue+1)^(0+128),w
  9916  1298  00B3               	movwf	(MiMAC_Init@initValue+1)^(0+128)
  9917  1299  083D               	movf	MiApp_ProtocolInit@initValue^(0+128),w
  9918  129A  00B2               	movwf	MiMAC_Init@initValue^(0+128)
  9919  129B  319A  2237  3191   	fcall	_MiMAC_Init
  9920                           
  9921                           ;miwi_p2p.c: 1255: MiApp_SetChannel(currentChannel);
  9922  129E  0022               	movlb	2	; select bank2
  9923  129F  084C               	movf	_currentChannel^(0+256),w
  9924  12A0  31A0  20C2  3191   	fcall	_MiApp_SetChannel
  9925                           
  9926                           ;miwi_p2p.c: 1266: P2PCapacityInfo = 0;
  9927  12A3  0022               	movlb	2	; select bank2
  9928  12A4  01BC               	clrf	_P2PCapacityInfo^(0+256)
  9929                           
  9930                           ;miwi_p2p.c: 1268: P2PCapacityInfo |= 0x01;
  9931  12A5  143C               	bsf	_P2PCapacityInfo^(0+256),0
  9932                           
  9933                           ;miwi_p2p.c: 1273: P2PCapacityInfo |= (ConnMode << 4);
  9934  12A6  086C               	movf	_ConnMode^(0+256),w
  9935  12A7  0021               	movlb	1	; select bank1
  9936  12A8  00BA               	movwf	??_MiApp_ProtocolInit^(0+128)
  9937  12A9  3003               	movlw	3
  9938  12AA                     u6485:	
  9939  12AA  35BA               	lslf	??_MiApp_ProtocolInit^(0+128),f
  9940  12AB  3EFF               	addlw	-1
  9941  12AC  1D03               	skipz
  9942  12AD  2AAA               	goto	u6485
  9943  12AE  353A               	lslf	??_MiApp_ProtocolInit^(0+128),w
  9944  12AF  00BB               	movwf	(??_MiApp_ProtocolInit+1)^(0+128)
  9945  12B0  083B               	movf	(??_MiApp_ProtocolInit+1)^(0+128),w
  9946  12B1  0022               	movlb	2	; select bank2
  9947  12B2  04BC               	iorwf	_P2PCapacityInfo^(0+256),f
  9948                           
  9949                           ;miwi_p2p.c: 1275: INTCONbits.IOCIE = 1;
  9950  12B3  158B               	bsf	11,3	;volatile
  9951  12B4  0008               	return
  9952  12B5                     __end_of_MiApp_ProtocolInit:	
  9953                           ;miwi_p2p.c: 1276: return 1;
  9954                           ;	Return value of _MiApp_ProtocolInit is never used
  9955                           
  9956                           
  9957                           	psect	text21
  9958  239D                     __ptext21:	
  9959 ;; *************** function _NVMRead *****************
  9960 ;; Defined at:
  9961 ;;		line 208 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  dest            1    wreg     PTR unsigned char 
  9964 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
  9965 ;;  addr            2    3[BANK1 ] unsigned int 
  9966 ;;  count           2    5[BANK1 ] unsigned int 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;  dest            1    9[BANK1 ] PTR unsigned char 
  9969 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
  9970 ;;  oldRFIE         1    8[BANK1 ] unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9980 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;Total ram usage:        7 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    7
  9987 ;; This function calls:
  9988 ;;		_SPIGet
  9989 ;;		_SPIPut
  9990 ;; This function is called by:
  9991 ;;		_MiApp_ProtocolInit
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           
  9996                           ;psect for function _NVMRead
  9997  239D                     _NVMRead:	
  9998                           
  9999                           ;incstack = 0
 10000                           ; Regs used in _NVMRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10001                           ;NVMRead@dest stored from wreg
 10002  239D  0021               	movlb	1	; select bank1
 10003  239E  00A9               	movwf	NVMRead@dest^(0+128)
 10004                           
 10005                           ;miwi_nvm.c: 215: uint8_t oldRFIE = INTCONbits.IOCIE;
 10006  239F  3000               	movlw	0
 10007  23A0  198B               	btfsc	11,3	;volatile
 10008  23A1  3001               	movlw	1
 10009  23A2  00A8               	movwf	NVMRead@oldRFIE^(0+128)
 10010                           
 10011                           ;miwi_nvm.c: 217: INTCONbits.IOCIE = 0;
 10012  23A3  118B               	bcf	11,3	;volatile
 10013                           
 10014                           ;miwi_nvm.c: 220: LATAbits.LATA3 = 0;
 10015  23A4  0022               	movlb	2	; select bank2
 10016  23A5  118C               	bcf	12,3	;volatile
 10017                           
 10018                           ;miwi_nvm.c: 236: SPIPut( 0x03 );
 10019  23A6  3003               	movlw	3
 10020  23A7  31AE  26DC  31A3   	fcall	_SPIPut
 10021                           
 10022                           ;miwi_nvm.c: 237: SPIPut( addr>>8 );
 10023  23AA  0021               	movlb	1	; select bank1
 10024  23AB  0824               	movf	(NVMRead@addr+1)^(0+128),w
 10025  23AC  31AE  26DC  31A3   	fcall	_SPIPut
 10026                           
 10027                           ;miwi_nvm.c: 238: SPIPut( addr );
 10028  23AF  0021               	movlb	1	; select bank1
 10029  23B0  0823               	movf	NVMRead@addr^(0+128),w
 10030  23B1  31AE  26DC  31A3   	fcall	_SPIPut
 10031  23B4                     l6280:	
 10032                           ;miwi_nvm.c: 241: while( count > 0 )
 10033                           
 10034  23B4  0021               	movlb	1	; select bank1
 10035  23B5  0825               	movf	NVMRead@count^(0+128),w
 10036  23B6  0426               	iorwf	(NVMRead@count+1)^(0+128),w
 10037  23B7  1903               	btfsc	3,2
 10038  23B8  2BCD               	goto	l249
 10039                           
 10040                           ;miwi_nvm.c: 242: {
 10041                           ;miwi_nvm.c: 243: *dest++ = SPIGet();
 10042  23B9  31AD  25B4  31A3   	fcall	_SPIGet
 10043  23BC  0021               	movlb	1	; select bank1
 10044  23BD  00A7               	movwf	??_NVMRead^(0+128)
 10045  23BE  0829               	movf	NVMRead@dest^(0+128),w
 10046  23BF  0086               	movwf	6
 10047  23C0  3001               	movlw	1	; select bank2/3
 10048  23C1  0087               	movwf	7
 10049  23C2  0827               	movf	??_NVMRead^(0+128),w
 10050  23C3  0081               	movwf	1
 10051  23C4  3001               	movlw	1
 10052  23C5  00A7               	movwf	??_NVMRead^(0+128)
 10053  23C6  0827               	movf	??_NVMRead^(0+128),w
 10054  23C7  07A9               	addwf	NVMRead@dest^(0+128),f
 10055                           
 10056                           ;miwi_nvm.c: 244: count--;
 10057  23C8  3001               	movlw	1
 10058  23C9  02A5               	subwf	NVMRead@count^(0+128),f
 10059  23CA  3000               	movlw	0
 10060  23CB  3BA6               	subwfb	(NVMRead@count+1)^(0+128),f
 10061  23CC  2BB4               	goto	l6280
 10062  23CD                     l249:	
 10063                           
 10064                           ;miwi_nvm.c: 245: }
 10065                           ;miwi_nvm.c: 246: LATAbits.LATA3 = 1;
 10066  23CD  0022               	movlb	2	; select bank2
 10067  23CE  158C               	bsf	12,3	;volatile
 10068                           
 10069                           ;miwi_nvm.c: 251: INTCONbits.IOCIE = oldRFIE;
 10070  23CF  0021               	movlb	1	; select bank1
 10071  23D0  0C28               	rrf	NVMRead@oldRFIE^(0+128),w
 10072  23D1  1C03               	skipc
 10073  23D2  118B               	bcf	11,3	;volatile
 10074  23D3  1803               	skipnc
 10075  23D4  158B               	bsf	11,3	;volatile
 10076  23D5  0008               	return
 10077  23D6                     __end_of_NVMRead:	
 10078                           
 10079                           	psect	text22
 10080  18DE                     __ptext22:	
 10081 ;; *************** function _NVMInit *****************
 10082 ;; Defined at:
 10083 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;		None
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  result          1    7[BANK1 ] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      unsigned char 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        2 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    6
 10104 ;; This function calls:
 10105 ;;		_NVMalloc
 10106 ;; This function is called by:
 10107 ;;		_MiApp_ProtocolInit
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           
 10112                           ;psect for function _NVMInit
 10113  18DE                     _NVMInit:	
 10114                           
 10115                           ;miwi_nvm.c: 709: bool result = 1;
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in _NVMInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10119  18DE  0021               	movlb	1	; select bank1
 10120  18DF  01A7               	clrf	NVMInit@result^(0+128)
 10121  18E0  0AA7               	incf	NVMInit@result^(0+128),f
 10122                           
 10123                           ;miwi_nvm.c: 711: nextEEPosition = 0;
 10124  18E1  0020               	movlb	0	; select bank0
 10125  18E2  01DA               	clrf	_nextEEPosition
 10126  18E3  01DB               	clrf	_nextEEPosition+1
 10127                           
 10128                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
 10129  18E4  3002               	movlw	2
 10130  18E5  0021               	movlb	1	; select bank1
 10131  18E6  00A0               	movwf	NVMalloc@size^(0+128)
 10132  18E7  3000               	movlw	0
 10133  18E8  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10134  18E9  3047               	movlw	low _nvmMyPANID
 10135  18EA  00A2               	movwf	NVMalloc@location^(0+128)
 10136  18EB  3001               	movlw	high _nvmMyPANID
 10137  18EC  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10138  18ED  31A1  21C7  3198   	fcall	_NVMalloc
 10139  18F0  0021               	movlb	1	; select bank1
 10140  18F1  00A6               	movwf	??_NVMInit^(0+128)
 10141  18F2  0826               	movf	??_NVMInit^(0+128),w
 10142  18F3  05A7               	andwf	NVMInit@result^(0+128),f
 10143                           
 10144                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
 10145  18F4  3001               	movlw	1
 10146  18F5  00A0               	movwf	NVMalloc@size^(0+128)
 10147  18F6  3000               	movlw	0
 10148  18F7  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10149  18F8  306B               	movlw	low _nvmCurrentChannel
 10150  18F9  00A2               	movwf	NVMalloc@location^(0+128)
 10151  18FA  3000               	movlw	high _nvmCurrentChannel
 10152  18FB  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10153  18FC  31A1  21C7  3198   	fcall	_NVMalloc
 10154  18FF  0021               	movlb	1	; select bank1
 10155  1900  00A6               	movwf	??_NVMInit^(0+128)
 10156  1901  0826               	movf	??_NVMInit^(0+128),w
 10157  1902  05A7               	andwf	NVMInit@result^(0+128),f
 10158                           
 10159                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
 10160  1903  3001               	movlw	1
 10161  1904  00A0               	movwf	NVMalloc@size^(0+128)
 10162  1905  3000               	movlw	0
 10163  1906  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10164  1907  3069               	movlw	low _nvmConnMode
 10165  1908  00A2               	movwf	NVMalloc@location^(0+128)
 10166  1909  3000               	movlw	high _nvmConnMode
 10167  190A  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10168  190B  31A1  21C7  3198   	fcall	_NVMalloc
 10169  190E  0021               	movlb	1	; select bank1
 10170  190F  00A6               	movwf	??_NVMInit^(0+128)
 10171  1910  0826               	movf	??_NVMInit^(0+128),w
 10172  1911  05A7               	andwf	NVMInit@result^(0+128),f
 10173                           
 10174                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 5, &nvmConnectionTable);
 10175  1912  3032               	movlw	50
 10176  1913  00A0               	movwf	NVMalloc@size^(0+128)
 10177  1914  3000               	movlw	0
 10178  1915  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10179  1916  3045               	movlw	low _nvmConnectionTable
 10180  1917  00A2               	movwf	NVMalloc@location^(0+128)
 10181  1918  3001               	movlw	high _nvmConnectionTable
 10182  1919  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10183  191A  31A1  21C7  3198   	fcall	_NVMalloc
 10184  191D  0021               	movlb	1	; select bank1
 10185  191E  00A6               	movwf	??_NVMInit^(0+128)
 10186  191F  0826               	movf	??_NVMInit^(0+128),w
 10187  1920  05A7               	andwf	NVMInit@result^(0+128),f
 10188                           
 10189                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
 10190  1921  3004               	movlw	4
 10191  1922  00A0               	movwf	NVMalloc@size^(0+128)
 10192  1923  3000               	movlw	0
 10193  1924  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10194  1925  3049               	movlw	low _nvmOutFrameCounter
 10195  1926  00A2               	movwf	NVMalloc@location^(0+128)
 10196  1927  3001               	movlw	high _nvmOutFrameCounter
 10197  1928  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10198  1929  31A1  21C7  3198   	fcall	_NVMalloc
 10199  192C  0021               	movlb	1	; select bank1
 10200  192D  00A6               	movwf	??_NVMInit^(0+128)
 10201  192E  0826               	movf	??_NVMInit^(0+128),w
 10202  192F  05A7               	andwf	NVMInit@result^(0+128),f
 10203                           
 10204                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
 10205  1930  3001               	movlw	1
 10206  1931  00A0               	movwf	NVMalloc@size^(0+128)
 10207  1932  3000               	movlw	0
 10208  1933  00A1               	movwf	(NVMalloc@size^(0+128)+1)
 10209  1934  306D               	movlw	low _nvmEdc
 10210  1935  00A2               	movwf	NVMalloc@location^(0+128)
 10211  1936  3000               	movlw	high _nvmEdc
 10212  1937  00A3               	movwf	(NVMalloc@location+1)^(0+128)
 10213  1938  31A1  21C7         	fcall	_NVMalloc
 10214  193A  0021               	movlb	1	; select bank1
 10215  193B  00A6               	movwf	??_NVMInit^(0+128)
 10216  193C  0826               	movf	??_NVMInit^(0+128),w
 10217  193D  05A7               	andwf	NVMInit@result^(0+128),f
 10218  193E  0008               	return
 10219  193F                     __end_of_NVMInit:	
 10220                           ;miwi_nvm.c: 750: return result;
 10221                           ;	Return value of _NVMInit is never used
 10222                           
 10223                           
 10224                           	psect	text23
 10225  21C7                     __ptext23:	
 10226 ;; *************** function _NVMalloc *****************
 10227 ;; Defined at:
 10228 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  size            2    0[BANK1 ] unsigned int 
 10231 ;;  location        2    2[BANK1 ] PTR unsigned int 
 10232 ;;		 -> nvmEdc(2), nvmOutFrameCounter(2), nvmConnectionTable(2), nvmConnMode(2), 
 10233 ;;		 -> nvmCurrentChannel(2), nvmMyPANID(2), 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;		None
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      unsigned char 
 10238 ;; Registers used:
 10239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10245 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;Total ram usage:        6 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:    5
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		_NVMInit
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           
 10260                           ;psect for function _NVMalloc
 10261  21C7                     _NVMalloc:	
 10262                           
 10263                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 32768)
 10264                           
 10265                           ;incstack = 0
 10266                           ; Regs used in _NVMalloc: [wreg+fsr1l+fsr1h+status,2+status,0]
 10267  21C7  0021               	movlb	1	; select bank1
 10268  21C8  0820               	movf	NVMalloc@size^(0+128),w
 10269  21C9  0020               	movlb	0	; select bank0
 10270  21CA  075A               	addwf	_nextEEPosition,w
 10271  21CB  0021               	movlb	1	; select bank1
 10272  21CC  00A4               	movwf	??_NVMalloc^(0+128)
 10273  21CD  0821               	movf	(NVMalloc@size+1)^(0+128),w
 10274  21CE  0020               	movlb	0	; select bank0
 10275  21CF  3D5B               	addwfc	_nextEEPosition+1,w
 10276  21D0  0021               	movlb	1	; select bank1
 10277  21D1  00A5               	movwf	(??_NVMalloc+1)^(0+128)
 10278  21D2  3080               	movlw	128
 10279  21D3  0225               	subwf	(??_NVMalloc+1)^(0+128),w
 10280  21D4  3001               	movlw	1
 10281  21D5  1903               	skipnz
 10282  21D6  0224               	subwf	??_NVMalloc^(0+128),w
 10283  21D7  1C03               	skipc
 10284  21D8  29DB               	goto	l6034
 10285                           
 10286                           ;miwi_nvm.c: 697: {
 10287                           ;miwi_nvm.c: 698: return 0;
 10288  21D9  3000               	movlw	0
 10289  21DA  0008               	return
 10290  21DB                     l6034:	
 10291                           
 10292                           ;miwi_nvm.c: 699: }
 10293                           ;miwi_nvm.c: 701: *location = nextEEPosition;
 10294  21DB  0822               	movf	NVMalloc@location^(0+128),w
 10295  21DC  0086               	movwf	6
 10296  21DD  0823               	movf	(NVMalloc@location+1)^(0+128),w
 10297  21DE  0087               	movwf	7
 10298  21DF  0020               	movlb	0	; select bank0
 10299  21E0  085A               	movf	_nextEEPosition,w
 10300  21E1  3FC0               	movwi [0]fsr1
 10301  21E2  085B               	movf	_nextEEPosition+1,w
 10302  21E3  3FC1               	movwi [1]fsr1
 10303                           
 10304                           ;miwi_nvm.c: 702: nextEEPosition += size;
 10305  21E4  0021               	movlb	1	; select bank1
 10306  21E5  0820               	movf	NVMalloc@size^(0+128),w
 10307  21E6  0020               	movlb	0	; select bank0
 10308  21E7  07DA               	addwf	_nextEEPosition,f
 10309  21E8  0021               	movlb	1	; select bank1
 10310  21E9  0821               	movf	(NVMalloc@size+1)^(0+128),w
 10311  21EA  0020               	movlb	0	; select bank0
 10312  21EB  3DDB               	addwfc	_nextEEPosition+1,f
 10313                           
 10314                           ;miwi_nvm.c: 703: return 1;
 10315  21EC  3001               	movlw	1
 10316  21ED  0008               	return
 10317  21EE                     __end_of_NVMalloc:	
 10318                           
 10319                           	psect	text24
 10320  1A37                     __ptext24:	
 10321 ;; *************** function _MiMAC_Init *****************
 10322 ;; Defined at:
 10323 ;;		line 580 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  initValue       2   18[BANK1 ] struct .
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  i               1   24[BANK1 ] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      unsigned char 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10337 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;Total ram usage:        7 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    8
 10344 ;; This function calls:
 10345 ;;		_DELAY_ms
 10346 ;;		_RegisterSet
 10347 ;;		_SetRFMode
 10348 ;;		___wmul
 10349 ;; This function is called by:
 10350 ;;		_MiApp_ProtocolInit
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           
 10355                           ;psect for function _MiMAC_Init
 10356  1A37                     _MiMAC_Init:	
 10357                           
 10358                           ;drv_mrf_miwi_89xa.c: 582: uint8_t i;
 10359                           ;drv_mrf_miwi_89xa.c: 584: MACInitParams = initValue;
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in _MiMAC_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10363  1A37  0021               	movlb	1	; select bank1
 10364  1A38  0833               	movf	(MiMAC_Init@initValue+1)^(0+128),w
 10365  1A39  0020               	movlb	0	; select bank0
 10366  1A3A  00D9               	movwf	_MACInitParams+1
 10367  1A3B  0021               	movlb	1	; select bank1
 10368  1A3C  0832               	movf	MiMAC_Init@initValue^(0+128),w
 10369  1A3D  0020               	movlb	0	; select bank0
 10370  1A3E  00D8               	movwf	_MACInitParams
 10371                           
 10372                           ;drv_mrf_miwi_89xa.c: 586: DELAY_ms(20);
 10373  1A3F  3014               	movlw	20
 10374  1A40  0021               	movlb	1	; select bank1
 10375  1A41  00AC               	movwf	DELAY_ms@ms^(0+128)
 10376  1A42  3000               	movlw	0
 10377  1A43  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 10378  1A44  31A5  2572  319A   	fcall	_DELAY_ms
 10379                           
 10380                           ;drv_mrf_miwi_89xa.c: 587: LATEbits.LATE3 = 1;
 10381  1A47  0022               	movlb	2	; select bank2
 10382  1A48  1590               	bsf	16,3	;volatile
 10383                           
 10384                           ;drv_mrf_miwi_89xa.c: 588: LATCbits.LATC2 = 1;
 10385  1A49  150E               	bsf	14,2	;volatile
 10386                           
 10387                           ;drv_mrf_miwi_89xa.c: 591: MACSeq = TMR1L;
 10388  1A4A  0020               	movlb	0	; select bank0
 10389  1A4B  0816               	movf	22,w	;volatile
 10390  1A4C  0021               	movlb	1	; select bank1
 10391  1A4D  00B4               	movwf	??_MiMAC_Init^(0+128)
 10392  1A4E  0834               	movf	??_MiMAC_Init^(0+128),w
 10393  1A4F  0020               	movlb	0	; select bank0
 10394  1A50  00DD               	movwf	_MACSeq
 10395                           
 10396                           ;drv_mrf_miwi_89xa.c: 593: ReceivedBankIndex = 0xFF;
 10397  1A51  30FF               	movlw	255
 10398  1A52  0021               	movlb	1	; select bank1
 10399  1A53  00B4               	movwf	??_MiMAC_Init^(0+128)
 10400  1A54  0834               	movf	??_MiMAC_Init^(0+128),w
 10401  1A55  0020               	movlb	0	; select bank0
 10402  1A56  00E3               	movwf	_ReceivedBankIndex
 10403                           
 10404                           ;drv_mrf_miwi_89xa.c: 595: for(i = 0; i < 2; i++)
 10405  1A57  0021               	movlb	1	; select bank1
 10406  1A58  01B8               	clrf	MiMAC_Init@i^(0+128)
 10407  1A59  3002               	movlw	2
 10408  1A5A  0238               	subwf	MiMAC_Init@i^(0+128),w
 10409  1A5B  1803               	btfsc	3,0
 10410  1A5C  2A7F               	goto	l6236
 10411  1A5D                     l6230:	
 10412                           
 10413                           ;drv_mrf_miwi_89xa.c: 596: {
 10414                           ;drv_mrf_miwi_89xa.c: 597: RxPacket[i].flags.Val = 0;
 10415  1A5D  0838               	movf	MiMAC_Init@i^(0+128),w
 10416  1A5E  00B4               	movwf	??_MiMAC_Init^(0+128)
 10417  1A5F  01B5               	clrf	(??_MiMAC_Init^(0+128)+1)
 10418  1A60  0834               	movf	??_MiMAC_Init^(0+128),w
 10419  1A61  00A7               	movwf	___wmul@multiplier^(0+128)
 10420  1A62  0835               	movf	(??_MiMAC_Init+1)^(0+128),w
 10421  1A63  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 10422  1A64  3034               	movlw	52
 10423  1A65  00A9               	movwf	___wmul@multiplicand^(0+128)
 10424  1A66  3000               	movlw	0
 10425  1A67  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 10426  1A68  31AF  27AC  319A   	fcall	___wmul
 10427  1A6B  3088               	movlw	136
 10428  1A6C  0021               	movlb	1	; select bank1
 10429  1A6D  00B6               	movwf	(??_MiMAC_Init+2)^(0+128)
 10430  1A6E  3023               	movlw	35
 10431  1A6F  00B7               	movwf	((??_MiMAC_Init+2)^(0+128)+1)
 10432  1A70  0827               	movf	?___wmul^(0+128),w
 10433  1A71  0736               	addwf	(??_MiMAC_Init+2)^(0+128),w
 10434  1A72  0086               	movwf	6
 10435  1A73  0828               	movf	(?___wmul+1)^(0+128),w
 10436  1A74  3D37               	addwfc	(??_MiMAC_Init+3)^(0+128),w
 10437  1A75  0087               	movwf	7
 10438  1A76  0181               	clrf	1
 10439  1A77  3001               	movlw	1
 10440  1A78  00B4               	movwf	??_MiMAC_Init^(0+128)
 10441  1A79  0834               	movf	??_MiMAC_Init^(0+128),w
 10442  1A7A  07B8               	addwf	MiMAC_Init@i^(0+128),f
 10443  1A7B  3002               	movlw	2
 10444  1A7C  0238               	subwf	MiMAC_Init@i^(0+128),w
 10445  1A7D  1C03               	skipc
 10446  1A7E  2A5D               	goto	l6230
 10447  1A7F                     l6236:	
 10448                           
 10449                           ;drv_mrf_miwi_89xa.c: 598: }
 10450                           ;drv_mrf_miwi_89xa.c: 632: for (i = 0 ; i <= 31; i++)
 10451  1A7F  01B8               	clrf	MiMAC_Init@i^(0+128)
 10452  1A80  3020               	movlw	32
 10453  1A81  0238               	subwf	MiMAC_Init@i^(0+128),w
 10454  1A82  1803               	btfsc	3,0
 10455  1A83  2A9F               	goto	l6248
 10456  1A84                     l6242:	
 10457                           
 10458                           ;drv_mrf_miwi_89xa.c: 633: {
 10459                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(InitConfigRegs[i]);
 10460  1A84  0838               	movf	MiMAC_Init@i^(0+128),w
 10461  1A85  00B4               	movwf	??_MiMAC_Init^(0+128)
 10462  1A86  01B5               	clrf	(??_MiMAC_Init^(0+128)+1)
 10463  1A87  35B4               	lslf	??_MiMAC_Init^(0+128),f
 10464  1A88  0DB5               	rlf	(??_MiMAC_Init^(0+128)+1),f
 10465  1A89  30CE               	movlw	low (_InitConfigRegs| (0+32768))
 10466  1A8A  0734               	addwf	??_MiMAC_Init^(0+128),w
 10467  1A8B  0084               	movwf	4
 10468  1A8C  3084               	movlw	high (_InitConfigRegs| (0+32768))
 10469  1A8D  3D35               	addwfc	(??_MiMAC_Init+1)^(0+128),w
 10470  1A8E  0085               	movwf	5
 10471  1A8F  3F00               	moviw [0]fsr0
 10472  1A90  00A3               	movwf	RegisterSet@setting^(0+128)
 10473  1A91  3F01               	moviw [1]fsr0
 10474  1A92  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10475  1A93  31AF  2725  319A   	fcall	_RegisterSet
 10476  1A96  3001               	movlw	1
 10477  1A97  0021               	movlb	1	; select bank1
 10478  1A98  00B4               	movwf	??_MiMAC_Init^(0+128)
 10479  1A99  0834               	movf	??_MiMAC_Init^(0+128),w
 10480  1A9A  07B8               	addwf	MiMAC_Init@i^(0+128),f
 10481  1A9B  3020               	movlw	32
 10482  1A9C  0238               	subwf	MiMAC_Init@i^(0+128),w
 10483  1A9D  1C03               	skipc
 10484  1A9E  2A84               	goto	l6242
 10485  1A9F                     l6248:	
 10486                           
 10487                           ;drv_mrf_miwi_89xa.c: 635: }
 10488                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x20);
 10489  1A9F  3020               	movlw	32
 10490  1AA0  31A7  2752  319A   	fcall	_SetRFMode
 10491                           
 10492                           ;drv_mrf_miwi_89xa.c: 637: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 10493  1AA3  304E               	movlw	78
 10494  1AA4  0021               	movlb	1	; select bank1
 10495  1AA5  00A3               	movwf	RegisterSet@setting^(0+128)
 10496  1AA6  3000               	movlw	0
 10497  1AA7  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10498  1AA8  31AF  2725  319A   	fcall	_RegisterSet
 10499                           
 10500                           ;drv_mrf_miwi_89xa.c: 638: SetRFMode(0x40);
 10501  1AAB  3040               	movlw	64
 10502  1AAC  31A7  2752  319A   	fcall	_SetRFMode
 10503                           
 10504                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 10505  1AAF  300F               	movlw	15
 10506  1AB0  0021               	movlb	1	; select bank1
 10507  1AB1  00A3               	movwf	RegisterSet@setting^(0+128)
 10508  1AB2  301C               	movlw	28
 10509  1AB3  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10510  1AB4  31AF  2725  319A   	fcall	_RegisterSet
 10511                           
 10512                           ;drv_mrf_miwi_89xa.c: 644: SetRFMode(0x60);
 10513  1AB7  3060               	movlw	96
 10514  1AB8  31A7  2752         	fcall	_SetRFMode
 10515                           
 10516                           ;drv_mrf_miwi_89xa.c: 649: IOCBFbits.IOCBF3 = 0;
 10517  1ABA  0027               	movlb	7	; select bank7
 10518  1ABB  1196               	bcf	22,3	;volatile
 10519                           
 10520                           ;drv_mrf_miwi_89xa.c: 650: INTCONbits.IOCIE = 1;
 10521  1ABC  158B               	bsf	11,3	;volatile
 10522  1ABD  0008               	return
 10523  1ABE                     __end_of_MiMAC_Init:	
 10524                           ;drv_mrf_miwi_89xa.c: 651: return 1;
 10525                           ;	Return value of _MiMAC_Init is never used
 10526                           
 10527                           
 10528                           	psect	text25
 10529  20C2                     __ptext25:	
 10530 ;; *************** function _MiApp_SetChannel *****************
 10531 ;; Defined at:
 10532 ;;		line 2388 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;  channel         1    wreg     unsigned char 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  channel         1   25[BANK1 ] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      unsigned char 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;Total ram usage:        2 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    9
 10553 ;; This function calls:
 10554 ;;		_MiMAC_SetChannel
 10555 ;;		_NVMWrite
 10556 ;; This function is called by:
 10557 ;;		_MiApp_ProtocolInit
 10558 ;;		_Initialize_Demo
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           
 10563                           ;psect for function _MiApp_SetChannel
 10564  20C2                     _MiApp_SetChannel:	
 10565                           
 10566                           ;incstack = 0
 10567                           ; Regs used in _MiApp_SetChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10568                           ;MiApp_SetChannel@channel stored from wreg
 10569  20C2  0021               	movlb	1	; select bank1
 10570  20C3  00B9               	movwf	MiApp_SetChannel@channel^(0+128)
 10571                           
 10572                           ;miwi_p2p.c: 2390: if( MiMAC_SetChannel(channel, 0) )
 10573  20C4  01A8               	clrf	MiMAC_SetChannel@offsetFreq^(0+128)
 10574  20C5  0839               	movf	MiApp_SetChannel@channel^(0+128),w
 10575  20C6  31A6  26FE  31A0   	fcall	_MiMAC_SetChannel
 10576  20C9  3A00               	xorlw	0
 10577  20CA  1903               	skipnz
 10578  20CB  28E3               	goto	l6336
 10579                           
 10580                           ;miwi_p2p.c: 2391: {
 10581                           ;miwi_p2p.c: 2392: currentChannel = channel;
 10582  20CC  0021               	movlb	1	; select bank1
 10583  20CD  0839               	movf	MiApp_SetChannel@channel^(0+128),w
 10584  20CE  00B8               	movwf	??_MiApp_SetChannel^(0+128)
 10585  20CF  0838               	movf	??_MiApp_SetChannel^(0+128),w
 10586  20D0  0022               	movlb	2	; select bank2
 10587  20D1  00CC               	movwf	_currentChannel^(0+256)
 10588                           
 10589                           ;miwi_p2p.c: 2394: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 10590  20D2  0020               	movlb	0	; select bank0
 10591  20D3  086C               	movf	_nvmCurrentChannel+1,w
 10592  20D4  0021               	movlb	1	; select bank1
 10593  20D5  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 10594  20D6  0020               	movlb	0	; select bank0
 10595  20D7  086B               	movf	_nvmCurrentChannel,w
 10596  20D8  0021               	movlb	1	; select bank1
 10597  20D9  00AD               	movwf	NVMWrite@addr^(0+128)
 10598  20DA  3001               	movlw	1
 10599  20DB  00AF               	movwf	NVMWrite@count^(0+128)
 10600  20DC  3000               	movlw	0
 10601  20DD  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 10602  20DE  304C               	movlw	(low (_currentChannel| (0+256)))& (0+255)
 10603  20DF  3199  213F         	fcall	_NVMWrite
 10604                           
 10605                           ;miwi_p2p.c: 2396: return 1;
 10606  20E1  3001               	movlw	1
 10607  20E2  0008               	return
 10608  20E3                     l6336:	
 10609                           
 10610                           ;miwi_p2p.c: 2397: }
 10611                           ;miwi_p2p.c: 2398: return 0;
 10612  20E3  3000               	movlw	0
 10613  20E4  0008               	return
 10614  20E5                     __end_of_MiApp_SetChannel:	
 10615                           
 10616                           	psect	text26
 10617  26FE                     __ptext26:	
 10618 ;; *************** function _MiMAC_SetChannel *****************
 10619 ;; Defined at:
 10620 ;;		line 485 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  channel         1    wreg     unsigned char 
 10623 ;;  offsetFreq      1    8[BANK1 ] unsigned char 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;  channel         1   10[BANK1 ] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  1    wreg      unsigned char 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10635 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;Total ram usage:        3 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    8
 10642 ;; This function calls:
 10643 ;;		_RegisterSet
 10644 ;;		_SetRFMode
 10645 ;; This function is called by:
 10646 ;;		_MiApp_SetChannel
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function _MiMAC_SetChannel
 10652  26FE                     _MiMAC_SetChannel:	
 10653                           
 10654                           ;incstack = 0
 10655                           ; Regs used in _MiMAC_SetChannel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10656                           ;MiMAC_SetChannel@channel stored from wreg
 10657  26FE  0021               	movlb	1	; select bank1
 10658  26FF  00AA               	movwf	MiMAC_SetChannel@channel^(0+128)
 10659                           
 10660                           ;drv_mrf_miwi_89xa.c: 487: if( channel >= 32 )
 10661  2700  3020               	movlw	32
 10662  2701  022A               	subwf	MiMAC_SetChannel@channel^(0+128),w
 10663  2702  1C03               	skipc
 10664  2703  2F06               	goto	l6008
 10665                           
 10666                           ;drv_mrf_miwi_89xa.c: 488: {
 10667                           ;drv_mrf_miwi_89xa.c: 489: return 0;
 10668  2704  3000               	movlw	0
 10669  2705  0008               	return
 10670  2706                     l6008:	
 10671                           
 10672                           ;drv_mrf_miwi_89xa.c: 490: }
 10673                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0C00 | 100);
 10674  2706  3064               	movlw	100
 10675  2707  00A3               	movwf	RegisterSet@setting^(0+128)
 10676  2708  300C               	movlw	12
 10677  2709  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10678  270A  31AF  2725  31A6   	fcall	_RegisterSet
 10679                           
 10680                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x0E00 | PVALUE[channel]);
 10681  270D  0021               	movlb	1	; select bank1
 10682  270E  082A               	movf	MiMAC_SetChannel@channel^(0+128),w
 10683  270F  3E0E               	addlw	low (_PVALUE| (0+32768))
 10684  2710  0084               	movwf	4
 10685  2711  3085               	movlw	high (_PVALUE| (0+32768))
 10686  2712  1803               	skipnc
 10687  2713  3E01               	addlw	1
 10688  2714  0085               	movwf	5
 10689  2715  0800               	movf	0,w	;code access
 10690  2716  00A9               	movwf	??_MiMAC_SetChannel^(0+128)
 10691  2717  3000               	movlw	0
 10692  2718  0429               	iorwf	??_MiMAC_SetChannel^(0+128),w
 10693  2719  00A3               	movwf	RegisterSet@setting^(0+128)
 10694  271A  300E               	movlw	14
 10695  271B  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10696  271C  31AF  2725  31A6   	fcall	_RegisterSet
 10697                           
 10698                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x1000 | SVALUE[channel]);
 10699  271F  0021               	movlb	1	; select bank1
 10700  2720  082A               	movf	MiMAC_SetChannel@channel^(0+128),w
 10701  2721  3E2E               	addlw	low (_SVALUE| (0+32768))
 10702  2722  0084               	movwf	4
 10703  2723  3085               	movlw	high (_SVALUE| (0+32768))
 10704  2724  1803               	skipnc
 10705  2725  3E01               	addlw	1
 10706  2726  0085               	movwf	5
 10707  2727  0800               	movf	0,w	;code access
 10708  2728  00A9               	movwf	??_MiMAC_SetChannel^(0+128)
 10709  2729  3000               	movlw	0
 10710  272A  0429               	iorwf	??_MiMAC_SetChannel^(0+128),w
 10711  272B  00A3               	movwf	RegisterSet@setting^(0+128)
 10712  272C  3010               	movlw	16
 10713  272D  00A4               	movwf	(RegisterSet@setting+1)^(0+128)
 10714  272E  31AF  2725  31A6   	fcall	_RegisterSet
 10715                           
 10716                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x20);
 10717  2731  3020               	movlw	32
 10718  2732  31A7  2752  31A6   	fcall	_SetRFMode
 10719                           
 10720                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 10721  2735  304E               	movlw	78
 10722  2736  0021               	movlb	1	; select bank1
 10723  2737  00A3               	movwf	RegisterSet@setting^(0+128)
 10724  2738  3000               	movlw	0
 10725  2739  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10726  273A  31AF  2725  31A6   	fcall	_RegisterSet
 10727                           
 10728                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x40);
 10729  273D  3040               	movlw	64
 10730  273E  31A7  2752  31A6   	fcall	_SetRFMode
 10731                           
 10732                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 10733  2741  300F               	movlw	15
 10734  2742  0021               	movlb	1	; select bank1
 10735  2743  00A3               	movwf	RegisterSet@setting^(0+128)
 10736  2744  301C               	movlw	28
 10737  2745  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 10738  2746  31AF  2725  31A6   	fcall	_RegisterSet
 10739                           
 10740                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x20);
 10741  2749  3020               	movlw	32
 10742  274A  31A7  2752  31A6   	fcall	_SetRFMode
 10743                           
 10744                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x60);
 10745  274D  3060               	movlw	96
 10746  274E  31A7  2752         	fcall	_SetRFMode
 10747                           
 10748                           ;drv_mrf_miwi_89xa.c: 503: return 1;
 10749  2750  3001               	movlw	1
 10750  2751  0008               	return
 10751  2752                     __end_of_MiMAC_SetChannel:	
 10752                           
 10753                           	psect	text27
 10754  2DDF                     __ptext27:	
 10755 ;; *************** function _InitSymbolTimer *****************
 10756 ;; Defined at:
 10757 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;		None
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;		None
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		wreg, status,2
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;Total ram usage:        0 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    5
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_MiApp_ProtocolInit
 10782 ;;		_main
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           
 10787                           ;psect for function _InitSymbolTimer
 10788  2DDF                     _InitSymbolTimer:	
 10789                           
 10790                           ;symbol.c: 70: T1CON = 0b00111000;
 10791                           
 10792                           ;incstack = 0
 10793                           ; Regs used in _InitSymbolTimer: [wreg+status,2]
 10794  2DDF  3038               	movlw	56
 10795  2DE0  0020               	movlb	0	; select bank0
 10796  2DE1  0098               	movwf	24	;volatile
 10797                           
 10798                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
 10799  2DE2  1011               	bcf	17,0	;volatile
 10800                           
 10801                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
 10802  2DE3  0021               	movlb	1	; select bank1
 10803  2DE4  1411               	bsf	17,0	;volatile
 10804                           
 10805                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
 10806  2DE5  0020               	movlb	0	; select bank0
 10807  2DE6  1418               	bsf	24,0	;volatile
 10808                           
 10809                           ;symbol.c: 75: timerExtension1 = 0;
 10810  2DE7  01E8               	clrf	_timerExtension1	;volatile
 10811                           
 10812                           ;symbol.c: 76: timerExtension2 = 0;
 10813  2DE8  01FD               	clrf	_timerExtension2	;volatile
 10814  2DE9  0008               	return
 10815  2DEA                     __end_of_InitSymbolTimer:	
 10816                           
 10817                           	psect	text28
 10818  217B                     __ptext28:	
 10819 ;; *************** function _EEPROM_Read *****************
 10820 ;; Defined at:
 10821 ;;		line 26 in file "../src/system_config/pic18exp_pic16f1947_89xa/eeprom.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  dest            1    wreg     PTR unsigned char 
 10824 ;;		 -> myLongAddress(8), 
 10825 ;;  addr            1    3[BANK1 ] unsigned char 
 10826 ;;  count           1    4[BANK1 ] unsigned char 
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;  dest            1    6[BANK1 ] PTR unsigned char 
 10829 ;;		 -> myLongAddress(8), 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:        4 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    7
 10846 ;; This function calls:
 10847 ;;		_SPIGet
 10848 ;;		_SPIPut
 10849 ;; This function is called by:
 10850 ;;		_MiApp_ProtocolInit
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _EEPROM_Read
 10856  217B                     _EEPROM_Read:	
 10857                           
 10858                           ;incstack = 0
 10859                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10860                           ;EEPROM_Read@dest stored from wreg
 10861  217B  0021               	movlb	1	; select bank1
 10862  217C  00A6               	movwf	EEPROM_Read@dest^(0+128)
 10863                           
 10864                           ;eeprom.c: 34: LATEbits.LATE2 = 0;
 10865  217D  0022               	movlb	2	; select bank2
 10866  217E  1110               	bcf	16,2	;volatile
 10867                           
 10868                           ;eeprom.c: 35: SPIPut(0x03);
 10869  217F  3003               	movlw	3
 10870  2180  31AE  26DC  31A1   	fcall	_SPIPut
 10871                           
 10872                           ;eeprom.c: 36: SPIPut(addr);
 10873  2183  0021               	movlb	1	; select bank1
 10874  2184  0823               	movf	EEPROM_Read@addr^(0+128),w
 10875  2185  31AE  26DC  31A1   	fcall	_SPIPut
 10876  2188                     l6312:	
 10877                           ;eeprom.c: 37: while( count )
 10878                           
 10879  2188  0021               	movlb	1	; select bank1
 10880  2189  0824               	movf	EEPROM_Read@count^(0+128),w
 10881  218A  1903               	btfsc	3,2
 10882  218B  299E               	goto	l632
 10883                           
 10884                           ;eeprom.c: 38: {
 10885                           ;eeprom.c: 39: *dest++ = SPIGet();
 10886  218C  31AD  25B4  31A1   	fcall	_SPIGet
 10887  218F  0021               	movlb	1	; select bank1
 10888  2190  00A5               	movwf	??_EEPROM_Read^(0+128)
 10889  2191  0826               	movf	EEPROM_Read@dest^(0+128),w
 10890  2192  0086               	movwf	6
 10891  2193  3001               	movlw	1	; select bank2/3
 10892  2194  0087               	movwf	7
 10893  2195  0825               	movf	??_EEPROM_Read^(0+128),w
 10894  2196  0081               	movwf	1
 10895  2197  3001               	movlw	1
 10896  2198  00A5               	movwf	??_EEPROM_Read^(0+128)
 10897  2199  0825               	movf	??_EEPROM_Read^(0+128),w
 10898  219A  07A6               	addwf	EEPROM_Read@dest^(0+128),f
 10899                           
 10900                           ;eeprom.c: 40: count--;
 10901  219B  3001               	movlw	1
 10902  219C  02A4               	subwf	EEPROM_Read@count^(0+128),f
 10903  219D  2988               	goto	l6312
 10904  219E                     l632:	
 10905                           
 10906                           ;eeprom.c: 41: }
 10907                           ;eeprom.c: 42: LATEbits.LATE2 = 1;
 10908  219E  0022               	movlb	2	; select bank2
 10909  219F  1510               	bsf	16,2	;volatile
 10910  21A0  0008               	return
 10911  21A1                     __end_of_EEPROM_Read:	
 10912                           
 10913                           	psect	text29
 10914  1DA2                     __ptext29:	
 10915 ;; *************** function _MiApp_EstablishConnection *****************
 10916 ;; Defined at:
 10917 ;;		line 2272 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  ActiveScanIn    1    wreg     unsigned char 
 10920 ;;  Mode            1   75[BANK1 ] unsigned char 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;  ActiveScanIn    1    0[COMMON] unsigned char 
 10923 ;;  i               1   26[BANK2 ] unsigned char 
 10924 ;;  t2              4   22[BANK2 ] struct _MIWI_TICK
 10925 ;;  t1              4   17[BANK2 ] struct _MIWI_TICK
 10926 ;;  connectionIn    1   21[BANK2 ] unsigned char 
 10927 ;;  retry           1   16[BANK2 ] unsigned char 
 10928 ;;  tmpConnectio    1   15[BANK2 ] unsigned char 
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      unsigned char 
 10931 ;; Registers used:
 10932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         0       0       1      20       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:       21 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:   13
 10945 ;; This function calls:
 10946 ;;		_MiApp_DiscardMessage
 10947 ;;		_MiApp_MessageAvailable
 10948 ;;		_MiWi_TickGet
 10949 ;;		_SendPacket
 10950 ;; This function is called by:
 10951 ;;		_Initialize_Demo
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _MiApp_EstablishConnection
 10957  1DA2                     _MiApp_EstablishConnection:	
 10958                           
 10959                           ;miwi_p2p.c: 2274: uint8_t tmpConnectionMode = ConnMode;
 10960                           
 10961                           ;incstack = 0
 10962                           ; Regs used in _MiApp_EstablishConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10963  1DA2  0022               	movlb	2	; select bank2
 10964  1DA3  086C               	movf	_ConnMode^(0+256),w
 10965  1DA4  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 10966  1DA5  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 10967  1DA6  00DC               	movwf	MiApp_EstablishConnection@tmpConnectionMode^(0+256)
 10968                           
 10969                           ;miwi_p2p.c: 2275: uint8_t retry = 3;
 10970  1DA7  3003               	movlw	3
 10971  1DA8  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 10972  1DA9  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 10973  1DAA  00DD               	movwf	MiApp_EstablishConnection@retry^(0+256)
 10974                           
 10975                           ;miwi_p2p.c: 2276: uint8_t connectionInterval = 0;
 10976  1DAB  01E2               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 10977                           
 10978                           ;miwi_p2p.c: 2277: MIWI_TICK t1, t2;
 10979                           ;miwi_p2p.c: 2278: tick1 = MiWi_TickGet();
 10980  1DAC  31A4  2498  319D   	fcall	_MiWi_TickGet
 10981  1DAF  0021               	movlb	1	; select bank1
 10982  1DB0  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 10983  1DB1  0023               	movlb	3	; select bank3
 10984  1DB2  00A3               	movwf	(_tick1+3)^(0+384)
 10985  1DB3  0021               	movlb	1	; select bank1
 10986  1DB4  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 10987  1DB5  0023               	movlb	3	; select bank3
 10988  1DB6  00A2               	movwf	(_tick1+2)^(0+384)
 10989  1DB7  0021               	movlb	1	; select bank1
 10990  1DB8  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 10991  1DB9  0023               	movlb	3	; select bank3
 10992  1DBA  00A1               	movwf	(_tick1+1)^(0+384)
 10993  1DBB  0021               	movlb	1	; select bank1
 10994  1DBC  0820               	movf	?_MiWi_TickGet^(0+128),w
 10995  1DBD  0023               	movlb	3	; select bank3
 10996  1DBE  00A0               	movwf	_tick1^(0+384)
 10997                           
 10998                           ;miwi_p2p.c: 2279: if( Mode == 0x01 )
 10999  1DBF  0021               	movlb	1	; select bank1
 11000  1DC0  036B               	decf	MiApp_EstablishConnection@Mode^(0+128),w
 11001  1DC1  1D03               	btfss	3,2
 11002  1DC2  2DC5               	goto	l6602
 11003                           
 11004                           ;miwi_p2p.c: 2280: {
 11005                           ;miwi_p2p.c: 2281: return 0xFF;
 11006  1DC3  30FF               	movlw	255
 11007  1DC4  0008               	return
 11008  1DC5                     l6602:	
 11009                           
 11010                           ;miwi_p2p.c: 2282: }
 11011                           ;miwi_p2p.c: 2284: t1 = MiWi_TickGet();
 11012  1DC5  31A4  2498  319D   	fcall	_MiWi_TickGet
 11013  1DC8  0021               	movlb	1	; select bank1
 11014  1DC9  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11015  1DCA  0022               	movlb	2	; select bank2
 11016  1DCB  00E1               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 11017  1DCC  0021               	movlb	1	; select bank1
 11018  1DCD  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11019  1DCE  0022               	movlb	2	; select bank2
 11020  1DCF  00E0               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 11021  1DD0  0021               	movlb	1	; select bank1
 11022  1DD1  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11023  1DD2  0022               	movlb	2	; select bank2
 11024  1DD3  00DF               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 11025  1DD4  0021               	movlb	1	; select bank1
 11026  1DD5  0820               	movf	?_MiWi_TickGet^(0+128),w
 11027  1DD6  0022               	movlb	2	; select bank2
 11028  1DD7  00DE               	movwf	MiApp_EstablishConnection@t1^(0+256)
 11029                           
 11030                           ;miwi_p2p.c: 2286: t1.Val -= (((uint32_t)(10000000)/32));
 11031  1DD8  30B4               	movlw	180
 11032  1DD9  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11033  1DDA  30C4               	movlw	196
 11034  1DDB  00D5               	movwf	(??_MiApp_EstablishConnection^(0+256)+1)
 11035  1DDC  3004               	movlw	4
 11036  1DDD  00D6               	movwf	(??_MiApp_EstablishConnection^(0+256)+2)
 11037  1DDE  3000               	movlw	0
 11038  1DDF  00D7               	movwf	(??_MiApp_EstablishConnection^(0+256)+3)
 11039  1DE0  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11040  1DE1  02DE               	subwf	MiApp_EstablishConnection@t1^(0+256),f
 11041  1DE2  0855               	movf	(??_MiApp_EstablishConnection+1)^(0+256),w
 11042  1DE3  3BDF               	subwfb	(MiApp_EstablishConnection@t1+1)^(0+256),f
 11043  1DE4  0856               	movf	(??_MiApp_EstablishConnection+2)^(0+256),w
 11044  1DE5  3BE0               	subwfb	(MiApp_EstablishConnection@t1+2)^(0+256),f
 11045  1DE6  0857               	movf	(??_MiApp_EstablishConnection+3)^(0+256),w
 11046  1DE7  3BE1               	subwfb	(MiApp_EstablishConnection@t1+3)^(0+256),f
 11047                           
 11048                           ;miwi_p2p.c: 2287: ConnMode = 0x00;
 11049  1DE8  01EC               	clrf	_ConnMode^(0+256)
 11050                           
 11051                           ;miwi_p2p.c: 2288: P2PStatus.bits.SearchConnection = 1;
 11052  1DE9  163D               	bsf	_P2PStatus^(0+256),4	;volatile
 11053  1DEA                     l6660:	
 11054                           ;miwi_p2p.c: 2289: while( P2PStatus.bits.SearchConnection )
 11055                           
 11056  1DEA  0022               	movlb	2	; select bank2
 11057  1DEB  1E3D               	btfss	_P2PStatus^(0+256),4	;volatile
 11058  1DEC  2E9C               	goto	l6662
 11059                           
 11060                           ;miwi_p2p.c: 2290: {
 11061                           ;miwi_p2p.c: 2291: t2 = MiWi_TickGet();
 11062  1DED  31A4  2498  319D   	fcall	_MiWi_TickGet
 11063  1DF0  0021               	movlb	1	; select bank1
 11064  1DF1  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11065  1DF2  0022               	movlb	2	; select bank2
 11066  1DF3  00E6               	movwf	(MiApp_EstablishConnection@t2+3)^(0+256)
 11067  1DF4  0021               	movlb	1	; select bank1
 11068  1DF5  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11069  1DF6  0022               	movlb	2	; select bank2
 11070  1DF7  00E5               	movwf	(MiApp_EstablishConnection@t2+2)^(0+256)
 11071  1DF8  0021               	movlb	1	; select bank1
 11072  1DF9  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11073  1DFA  0022               	movlb	2	; select bank2
 11074  1DFB  00E4               	movwf	(MiApp_EstablishConnection@t2+1)^(0+256)
 11075  1DFC  0021               	movlb	1	; select bank1
 11076  1DFD  0820               	movf	?_MiWi_TickGet^(0+128),w
 11077  1DFE  0022               	movlb	2	; select bank2
 11078  1DFF  00E3               	movwf	MiApp_EstablishConnection@t2^(0+256)
 11079                           
 11080                           ;miwi_p2p.c: 2292: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
 11081  1E00  0863               	movf	MiApp_EstablishConnection@t2^(0+256),w
 11082  1E01  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11083  1E02  0864               	movf	(MiApp_EstablishConnection@t2+1)^(0+256),w
 11084  1E03  00D5               	movwf	(??_MiApp_EstablishConnection^(0+256)+1)
 11085  1E04  0865               	movf	(MiApp_EstablishConnection@t2+2)^(0+256),w
 11086  1E05  00D6               	movwf	(??_MiApp_EstablishConnection^(0+256)+2)
 11087  1E06  0866               	movf	(MiApp_EstablishConnection@t2+3)^(0+256),w
 11088  1E07  00D7               	movwf	(??_MiApp_EstablishConnection^(0+256)+3)
 11089  1E08  095E               	comf	MiApp_EstablishConnection@t1^(0+256),w
 11090  1E09  00D8               	movwf	(??_MiApp_EstablishConnection+4)^(0+256)
 11091  1E0A  095F               	comf	(MiApp_EstablishConnection@t1+1)^(0+256),w
 11092  1E0B  00D9               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+1)
 11093  1E0C  0960               	comf	(MiApp_EstablishConnection@t1+2)^(0+256),w
 11094  1E0D  00DA               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+2)
 11095  1E0E  0961               	comf	(MiApp_EstablishConnection@t1+3)^(0+256),w
 11096  1E0F  00DB               	movwf	((??_MiApp_EstablishConnection+4)^(0+256)+3)
 11097  1E10  0AD8               	incf	(??_MiApp_EstablishConnection+4)^(0+256),f
 11098  1E11  1903               	skipnz
 11099  1E12  0AD9               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+1),f
 11100  1E13  1903               	skipnz
 11101  1E14  0ADA               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+2),f
 11102  1E15  1903               	skipnz
 11103  1E16  0ADB               	incf	((??_MiApp_EstablishConnection+4)^(0+256)+3),f
 11104  1E17  0858               	movf	(??_MiApp_EstablishConnection+4)^(0+256),w
 11105  1E18  07D4               	addwf	??_MiApp_EstablishConnection^(0+256),f
 11106  1E19  0859               	movf	(??_MiApp_EstablishConnection+5)^(0+256),w
 11107  1E1A  3DD5               	addwfc	(??_MiApp_EstablishConnection^(0+256)+1),f
 11108  1E1B  085A               	movf	(??_MiApp_EstablishConnection+6)^(0+256),w
 11109  1E1C  3DD6               	addwfc	(??_MiApp_EstablishConnection^(0+256)+2),f
 11110  1E1D  085B               	movf	(??_MiApp_EstablishConnection+7)^(0+256),w
 11111  1E1E  3DD7               	addwfc	(??_MiApp_EstablishConnection^(0+256)+3),f
 11112  1E1F  0857               	movf	(??_MiApp_EstablishConnection^(0+256)+3),w
 11113  1E20  1D03               	btfss	3,2
 11114  1E21  2E2A               	goto	l6614
 11115  1E22  30B5               	movlw	181
 11116  1E23  0254               	subwf	??_MiApp_EstablishConnection^(0+256),w
 11117  1E24  30C4               	movlw	196
 11118  1E25  3B55               	subwfb	(??_MiApp_EstablishConnection^(0+256)+1),w
 11119  1E26  3004               	movlw	4
 11120  1E27  3B56               	subwfb	(??_MiApp_EstablishConnection^(0+256)+2),w
 11121  1E28  1C03               	btfss	3,0
 11122  1E29  2E92               	goto	l481
 11123  1E2A                     l6614:	
 11124                           
 11125                           ;miwi_p2p.c: 2293: {
 11126                           ;miwi_p2p.c: 2294: t1.Val = t2.Val;
 11127  1E2A  0866               	movf	(MiApp_EstablishConnection@t2+3)^(0+256),w
 11128  1E2B  00E1               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 11129  1E2C  0865               	movf	(MiApp_EstablishConnection@t2+2)^(0+256),w
 11130  1E2D  00E0               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 11131  1E2E  0864               	movf	(MiApp_EstablishConnection@t2+1)^(0+256),w
 11132  1E2F  00DF               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 11133  1E30  0863               	movf	MiApp_EstablishConnection@t2^(0+256),w
 11134  1E31  00DE               	movwf	MiApp_EstablishConnection@t1^(0+256)
 11135                           
 11136                           ;miwi_p2p.c: 2296: if( connectionInterval-- > 0 )
 11137  1E32  3001               	movlw	1
 11138  1E33  02E2               	subwf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 11139  1E34  0A62               	incf	MiApp_EstablishConnection@connectionInterval^(0+256),w
 11140  1E35  1D03               	btfss	3,2
 11141  1E36  2DEA               	goto	l6660
 11142                           
 11143                           ;miwi_p2p.c: 2299: }
 11144                           ;miwi_p2p.c: 2300: connectionInterval = 2-1;
 11145                           
 11146                           ;miwi_p2p.c: 2297: {
 11147                           ;miwi_p2p.c: 2298: continue;
 11148  1E37  01E2               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 11149  1E38  0AE2               	incf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 11150                           
 11151                           ;miwi_p2p.c: 2301: if( retry-- == 0 )
 11152  1E39  3001               	movlw	1
 11153  1E3A  02DD               	subwf	MiApp_EstablishConnection@retry^(0+256),f
 11154  1E3B  0A5D               	incf	MiApp_EstablishConnection@retry^(0+256),w
 11155  1E3C  1D03               	btfss	3,2
 11156  1E3D  2E41               	goto	l6628
 11157                           
 11158                           ;miwi_p2p.c: 2302: {
 11159                           ;miwi_p2p.c: 2304: P2PStatus.bits.SearchConnection = 0;
 11160  1E3E  123D               	bcf	_P2PStatus^(0+256),4	;volatile
 11161                           
 11162                           ;miwi_p2p.c: 2305: return 0xFF;
 11163  1E3F  30FF               	movlw	255
 11164  1E40  0008               	return
 11165  1E41                     l6628:	
 11166                           
 11167                           ;miwi_p2p.c: 2306: }
 11168                           ;miwi_p2p.c: 2307: {TxData = 0;};
 11169  1E41  01BF               	clrf	_TxData^(0+256)
 11170                           
 11171                           ;miwi_p2p.c: 2308: TxBuffer[TxData++] = 0x81;
 11172  1E42  3081               	movlw	129
 11173  1E43  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11174  1E44  083F               	movf	_TxData^(0+256),w
 11175  1E45  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11176  1E46  0086               	movwf	6
 11177  1E47  3002               	movlw	2	; select bank4/5
 11178  1E48  0087               	movwf	7
 11179  1E49  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11180  1E4A  0081               	movwf	1
 11181  1E4B  3001               	movlw	1
 11182  1E4C  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11183  1E4D  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11184  1E4E  07BF               	addwf	_TxData^(0+256),f
 11185                           
 11186                           ;miwi_p2p.c: 2309: TxBuffer[TxData++] = currentChannel;
 11187  1E4F  084C               	movf	_currentChannel^(0+256),w
 11188  1E50  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11189  1E51  083F               	movf	_TxData^(0+256),w
 11190  1E52  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11191  1E53  0086               	movwf	6
 11192  1E54  3002               	movlw	2	; select bank4/5
 11193  1E55  0087               	movwf	7
 11194  1E56  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11195  1E57  0081               	movwf	1
 11196  1E58  3001               	movlw	1
 11197  1E59  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11198  1E5A  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11199  1E5B  07BF               	addwf	_TxData^(0+256),f
 11200                           
 11201                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = P2PCapacityInfo;
 11202  1E5C  083C               	movf	_P2PCapacityInfo^(0+256),w
 11203  1E5D  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11204  1E5E  083F               	movf	_TxData^(0+256),w
 11205  1E5F  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11206  1E60  0086               	movwf	6
 11207  1E61  3002               	movlw	2	; select bank4/5
 11208  1E62  0087               	movwf	7
 11209  1E63  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11210  1E64  0081               	movwf	1
 11211  1E65  3001               	movlw	1
 11212  1E66  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11213  1E67  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11214  1E68  07BF               	addwf	_TxData^(0+256),f
 11215                           
 11216                           ;miwi_p2p.c: 2317: {
 11217                           ;miwi_p2p.c: 2318: uint8_t i;
 11218                           ;miwi_p2p.c: 2320: for(i = 0; i < 1; i++)
 11219  1E69  01E7               	clrf	MiApp_EstablishConnection@i^(0+256)
 11220  1E6A  0867               	movf	MiApp_EstablishConnection@i^(0+256),w
 11221  1E6B  1D03               	btfss	3,2
 11222  1E6C  2E86               	goto	l6656
 11223  1E6D                     l6648:	
 11224                           
 11225                           ;miwi_p2p.c: 2321: {
 11226                           ;miwi_p2p.c: 2322: TxBuffer[TxData++] = AdditionalNodeID[i];
 11227  1E6D  0867               	movf	MiApp_EstablishConnection@i^(0+256),w
 11228  1E6E  3E69               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
 11229  1E6F  0086               	movwf	6
 11230  1E70  3001               	movlw	1	; select bank2/3
 11231  1E71  0087               	movwf	7
 11232  1E72  0801               	movf	1,w
 11233  1E73  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11234  1E74  083F               	movf	_TxData^(0+256),w
 11235  1E75  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11236  1E76  0086               	movwf	6
 11237  1E77  3002               	movlw	2	; select bank4/5
 11238  1E78  0087               	movwf	7
 11239  1E79  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11240  1E7A  0081               	movwf	1
 11241  1E7B  3001               	movlw	1
 11242  1E7C  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11243  1E7D  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11244  1E7E  07BF               	addwf	_TxData^(0+256),f
 11245  1E7F  3001               	movlw	1
 11246  1E80  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11247  1E81  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11248  1E82  07E7               	addwf	MiApp_EstablishConnection@i^(0+256),f
 11249  1E83  0867               	movf	MiApp_EstablishConnection@i^(0+256),w
 11250  1E84  1903               	btfsc	3,2
 11251  1E85  2E6D               	goto	l6648
 11252  1E86                     l6656:	
 11253                           
 11254                           ;miwi_p2p.c: 2323: }
 11255                           ;miwi_p2p.c: 2324: }
 11256                           ;miwi_p2p.c: 2353: SendPacket(1, (0), 1, 0);
 11257  1E86  3000               	movlw	0
 11258  1E87  0021               	movlb	1	; select bank1
 11259  1E88  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 11260  1E89  3000               	movlw	0
 11261  1E8A  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 11262  1E8B  01D8               	clrf	SendPacket@isCommand^(0+128)
 11263  1E8C  0AD8               	incf	SendPacket@isCommand^(0+128),f
 11264  1E8D  01D9               	clrf	SendPacket@SecurityEnabled^(0+128)
 11265  1E8E  3001               	movlw	1
 11266  1E8F  31A4  24DF  319D   	fcall	_SendPacket
 11267  1E92                     l481:	
 11268                           
 11269                           ;miwi_p2p.c: 2356: }
 11270                           ;miwi_p2p.c: 2358: if( MiApp_MessageAvailable())
 11271  1E92  31AD  25CA  319D   	fcall	_MiApp_MessageAvailable
 11272  1E95  3A00               	xorlw	0
 11273  1E96  1903               	skipnz
 11274  1E97  2DEA               	goto	l6660
 11275                           
 11276                           ;miwi_p2p.c: 2359: {
 11277                           ;miwi_p2p.c: 2360: MiApp_DiscardMessage();
 11278  1E98  31AD  25A9  319D   	fcall	_MiApp_DiscardMessage
 11279  1E9B  2DEA               	goto	l6660
 11280  1E9C                     l6662:	
 11281                           
 11282                           ;miwi_p2p.c: 2361: }
 11283                           ;miwi_p2p.c: 2363: }
 11284                           ;miwi_p2p.c: 2365: ConnMode = tmpConnectionMode;
 11285  1E9C  085C               	movf	MiApp_EstablishConnection@tmpConnectionMode^(0+256),w
 11286  1E9D  00D4               	movwf	??_MiApp_EstablishConnection^(0+256)
 11287  1E9E  0854               	movf	??_MiApp_EstablishConnection^(0+256),w
 11288  1E9F  00EC               	movwf	_ConnMode^(0+256)
 11289                           
 11290                           ;miwi_p2p.c: 2370: return LatestConnection;
 11291  1EA0  083A               	movf	_LatestConnection^(0+256),w
 11292  1EA1  0008               	return
 11293  1EA2                     __end_of_MiApp_EstablishConnection:	
 11294                           
 11295                           	psect	text30
 11296  2DCA                     __ptext30:	
 11297 ;; *************** function _MiApp_MessageAvailable *****************
 11298 ;; Defined at:
 11299 ;;		line 2402 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      unsigned char 
 11306 ;; Registers used:
 11307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;Total ram usage:        1 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:   12
 11320 ;; This function calls:
 11321 ;;		_P2PTasks
 11322 ;; This function is called by:
 11323 ;;		_MiApp_EstablishConnection
 11324 ;;		_Process_RxMessage
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           
 11329                           ;psect for function _MiApp_MessageAvailable
 11330  2DCA                     _MiApp_MessageAvailable:	
 11331                           
 11332                           ;miwi_p2p.c: 2404: P2PTasks();
 11333                           
 11334                           ;incstack = 0
 11335                           ; Regs used in _MiApp_MessageAvailable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11336  2DCA  3194  245C         	fcall	_P2PTasks
 11337                           
 11338                           ;miwi_p2p.c: 2406: return P2PStatus.bits.RxHasUserData;
 11339  2DCC  0022               	movlb	2	; select bank2
 11340  2DCD  0C3D               	rrf	_P2PStatus^(0+256),w	;volatile
 11341  2DCE  0021               	movlb	1	; select bank1
 11342  2DCF  00EA               	movwf	??_MiApp_MessageAvailable^(0+128)
 11343  2DD0  0CEA               	rrf	??_MiApp_MessageAvailable^(0+128),f
 11344  2DD1  0C6A               	rrf	??_MiApp_MessageAvailable^(0+128),w
 11345  2DD2  3901               	andlw	1
 11346  2DD3  0008               	return
 11347  2DD4                     __end_of_MiApp_MessageAvailable:	
 11348                           
 11349                           	psect	text31
 11350  145C                     __ptext31:	
 11351 ;; *************** function _P2PTasks *****************
 11352 ;; Defined at:
 11353 ;;		line 346 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;		None
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;  status          1    5[BANK2 ] unsigned char 
 11358 ;;  FW_Stat         1    0[BANK2 ] unsigned char 
 11359 ;;  tmpTick         4    1[BANK2 ] struct _MIWI_TICK
 11360 ;;  tick3           4    0        struct _MIWI_TICK
 11361 ;;  tick2           4    0        struct _MIWI_TICK
 11362 ;;  i               1    6[BANK2 ] unsigned char 
 11363 ;;  broadcast_st    1    0        unsigned char 
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      void 
 11366 ;; Registers used:
 11367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Totals:         0       0       8       7       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;Total ram usage:       15 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:   11
 11380 ;; This function calls:
 11381 ;;		_AddConnection
 11382 ;;		_MiMAC_DiscardPacket
 11383 ;;		_MiMAC_ReceivedPacket
 11384 ;;		_MiWi_TickGet
 11385 ;;		_NVMWrite
 11386 ;;		_SendPacket
 11387 ;;		___bmul
 11388 ;;		___wmul
 11389 ;;		_isSameAddress
 11390 ;; This function is called by:
 11391 ;;		_MiApp_MessageAvailable
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           
 11396                           ;psect for function _P2PTasks
 11397  145C                     _P2PTasks:	
 11398                           
 11399                           ;miwi_p2p.c: 348: uint8_t i;
 11400                           ;miwi_p2p.c: 349: MIWI_TICK tmpTick ,tick2 , tick3 ;
 11401                           ;miwi_p2p.c: 350: bool broadcast_status;
 11402                           ;miwi_p2p.c: 423: if( P2PStatus.bits.SaveConnection )
 11403                           
 11404                           ;incstack = 0
 11405                           ; Regs used in _P2PTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11406  145C  0022               	movlb	2	; select bank2
 11407  145D  1CBD               	btfss	_P2PStatus^(0+256),1	;volatile
 11408  145E  2CBC               	goto	l5758
 11409                           
 11410                           ;miwi_p2p.c: 424: {
 11411                           ;miwi_p2p.c: 425: tmpTick = MiWi_TickGet();
 11412  145F  31A4  2498  3194   	fcall	_MiWi_TickGet
 11413  1462  0021               	movlb	1	; select bank1
 11414  1463  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 11415  1464  0022               	movlb	2	; select bank2
 11416  1465  00D1               	movwf	(P2PTasks@tmpTick+3)^(0+256)
 11417  1466  0021               	movlb	1	; select bank1
 11418  1467  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 11419  1468  0022               	movlb	2	; select bank2
 11420  1469  00D0               	movwf	(P2PTasks@tmpTick+2)^(0+256)
 11421  146A  0021               	movlb	1	; select bank1
 11422  146B  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 11423  146C  0022               	movlb	2	; select bank2
 11424  146D  00CF               	movwf	(P2PTasks@tmpTick+1)^(0+256)
 11425  146E  0021               	movlb	1	; select bank1
 11426  146F  0820               	movf	?_MiWi_TickGet^(0+128),w
 11427  1470  0022               	movlb	2	; select bank2
 11428  1471  00CE               	movwf	P2PTasks@tmpTick^(0+256)
 11429                           
 11430                           ;miwi_p2p.c: 426: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
 11431  1472  084E               	movf	P2PTasks@tmpTick^(0+256),w
 11432  1473  0021               	movlb	1	; select bank1
 11433  1474  00E2               	movwf	??_P2PTasks^(0+128)
 11434  1475  0022               	movlb	2	; select bank2
 11435  1476  084F               	movf	(P2PTasks@tmpTick+1)^(0+256),w
 11436  1477  0021               	movlb	1	; select bank1
 11437  1478  00E3               	movwf	(??_P2PTasks^(0+128)+1)
 11438  1479  0022               	movlb	2	; select bank2
 11439  147A  0850               	movf	(P2PTasks@tmpTick+2)^(0+256),w
 11440  147B  0021               	movlb	1	; select bank1
 11441  147C  00E4               	movwf	(??_P2PTasks^(0+128)+2)
 11442  147D  0022               	movlb	2	; select bank2
 11443  147E  0851               	movf	(P2PTasks@tmpTick+3)^(0+256),w
 11444  147F  0021               	movlb	1	; select bank1
 11445  1480  00E5               	movwf	(??_P2PTasks^(0+128)+3)
 11446  1481  0022               	movlb	2	; select bank2
 11447  1482  0936               	comf	_nvmDelayTick^(0+256),w
 11448  1483  0021               	movlb	1	; select bank1
 11449  1484  00E6               	movwf	(??_P2PTasks+4)^(0+128)
 11450  1485  0022               	movlb	2	; select bank2
 11451  1486  0937               	comf	(_nvmDelayTick+1)^(0+256),w
 11452  1487  0021               	movlb	1	; select bank1
 11453  1488  00E7               	movwf	((??_P2PTasks+4)^(0+128)+1)
 11454  1489  0022               	movlb	2	; select bank2
 11455  148A  0938               	comf	(_nvmDelayTick+2)^(0+256),w
 11456  148B  0021               	movlb	1	; select bank1
 11457  148C  00E8               	movwf	((??_P2PTasks+4)^(0+128)+2)
 11458  148D  0022               	movlb	2	; select bank2
 11459  148E  0939               	comf	(_nvmDelayTick+3)^(0+256),w
 11460  148F  0021               	movlb	1	; select bank1
 11461  1490  00E9               	movwf	((??_P2PTasks+4)^(0+128)+3)
 11462  1491  0AE6               	incf	(??_P2PTasks+4)^(0+128),f
 11463  1492  1903               	skipnz
 11464  1493  0AE7               	incf	((??_P2PTasks+4)^(0+128)+1),f
 11465  1494  1903               	skipnz
 11466  1495  0AE8               	incf	((??_P2PTasks+4)^(0+128)+2),f
 11467  1496  1903               	skipnz
 11468  1497  0AE9               	incf	((??_P2PTasks+4)^(0+128)+3),f
 11469  1498  0866               	movf	(??_P2PTasks+4)^(0+128),w
 11470  1499  07E2               	addwf	??_P2PTasks^(0+128),f
 11471  149A  0867               	movf	(??_P2PTasks+5)^(0+128),w
 11472  149B  3DE3               	addwfc	(??_P2PTasks^(0+128)+1),f
 11473  149C  0868               	movf	(??_P2PTasks+6)^(0+128),w
 11474  149D  3DE4               	addwfc	(??_P2PTasks^(0+128)+2),f
 11475  149E  0869               	movf	(??_P2PTasks+7)^(0+128),w
 11476  149F  3DE5               	addwfc	(??_P2PTasks^(0+128)+3),f
 11477  14A0  0865               	movf	(??_P2PTasks^(0+128)+3),w
 11478  14A1  1D03               	btfss	3,2
 11479  14A2  2CAB               	goto	l5754
 11480  14A3  30B5               	movlw	181
 11481  14A4  0262               	subwf	??_P2PTasks^(0+128),w
 11482  14A5  30C4               	movlw	196
 11483  14A6  3B63               	subwfb	(??_P2PTasks^(0+128)+1),w
 11484  14A7  3004               	movlw	4
 11485  14A8  3B64               	subwfb	(??_P2PTasks^(0+128)+2),w
 11486  14A9  1C03               	btfss	3,0
 11487  14AA  2CBC               	goto	l5758
 11488  14AB                     l5754:	
 11489                           
 11490                           ;miwi_p2p.c: 427: {
 11491                           ;miwi_p2p.c: 428: P2PStatus.bits.SaveConnection = 0;
 11492  14AB  0022               	movlb	2	; select bank2
 11493  14AC  10BD               	bcf	_P2PStatus^(0+256),1	;volatile
 11494                           
 11495                           ;miwi_p2p.c: 429: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 *
      +                           sizeof(CONNECTION_ENTRY));
 11496  14AD  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
 11497  14AE  0021               	movlb	1	; select bank1
 11498  14AF  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 11499  14B0  0022               	movlb	2	; select bank2
 11500  14B1  0845               	movf	_nvmConnectionTable^(0+256),w
 11501  14B2  0021               	movlb	1	; select bank1
 11502  14B3  00AD               	movwf	NVMWrite@addr^(0+128)
 11503  14B4  3032               	movlw	50
 11504  14B5  00AF               	movwf	NVMWrite@count^(0+128)
 11505  14B6  3000               	movlw	0
 11506  14B7  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 11507  14B8  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
 11508  14B9  3199  213F  3194   	fcall	_NVMWrite
 11509  14BC                     l5758:	
 11510                           
 11511                           ;miwi_p2p.c: 431: }
 11512                           ;miwi_p2p.c: 432: }
 11513                           ;miwi_p2p.c: 449: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
 11514  14BC  0022               	movlb	2	; select bank2
 11515  14BD  19BD               	btfsc	_P2PStatus^(0+256),3	;volatile
 11516  14BE  0008               	return
 11517  14BF  3192  22B5  3194   	fcall	_MiMAC_ReceivedPacket
 11518  14C2  3A00               	xorlw	0
 11519  14C3  1903               	skipnz
 11520  14C4  0008               	return
 11521                           
 11522                           ;miwi_p2p.c: 450: {
 11523                           ;miwi_p2p.c: 451: bool FW_Stat = 0;
 11524  14C5  0022               	movlb	2	; select bank2
 11525  14C6  01CD               	clrf	P2PTasks@FW_Stat^(0+256)
 11526                           
 11527                           ;miwi_p2p.c: 452: rxMessage.flags.Val = 0;
 11528  14C7  01A0               	clrf	_rxMessage^(0+256)
 11529                           
 11530                           ;miwi_p2p.c: 455: temp_bit = MACRxPacket.flags.bits.broadcast;
 11531  14C8  3000               	movlw	0
 11532  14C9  192A               	btfsc	_MACRxPacket^(0+256),2
 11533  14CA  3001               	movlw	1
 11534  14CB  00C4               	movwf	_temp_bit^(0+256)
 11535                           
 11536                           ;miwi_p2p.c: 456: rxMessage.flags.bits.broadcast = temp_bit;
 11537  14CC  0820               	movf	_rxMessage^(0+256),w
 11538  14CD  0644               	xorwf	_temp_bit^(0+256),w
 11539  14CE  39FC               	andlw	-4
 11540  14CF  0644               	xorwf	_temp_bit^(0+256),w
 11541  14D0  00A0               	movwf	_rxMessage^(0+256)
 11542                           
 11543                           ;miwi_p2p.c: 458: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 11544  14D1  11A0               	bcf	_rxMessage^(0+256),3
 11545  14D2  19AA               	btfsc	_MACRxPacket^(0+256),3
 11546  14D3  15A0               	bsf	_rxMessage^(0+256),3
 11547                           
 11548                           ;miwi_p2p.c: 459: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
 11549  14D4  0022               	movlb	2	; select bank2
 11550  14D5  082A               	movf	_MACRxPacket^(0+256),w
 11551  14D6  3903               	andlw	3
 11552  14D7  3A01               	xorlw	1
 11553  14D8  1D03               	btfss	3,2
 11554  14D9  2CDD               	goto	u5490
 11555  14DA  0022               	movlb	2	; select bank2
 11556  14DB  16A0               	bsf	_rxMessage^(0+256),5
 11557  14DC  2CDF               	goto	l5772
 11558  14DD                     u5490:	
 11559  14DD  0022               	movlb	2	; select bank2
 11560  14DE  12A0               	bcf	_rxMessage^(0+256),5
 11561  14DF                     l5772:	
 11562                           
 11563                           ;miwi_p2p.c: 460: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 11564  14DF  1320               	bcf	_rxMessage^(0+256),6
 11565  14E0  1BAA               	btfsc	_MACRxPacket^(0+256),7
 11566  14E1  1720               	bsf	_rxMessage^(0+256),6
 11567                           
 11568                           ;miwi_p2p.c: 461: if( MACRxPacket.flags.bits.sourcePrsnt )
 11569  14E2  0022               	movlb	2	; select bank2
 11570  14E3  1FAA               	btfss	_MACRxPacket^(0+256),7
 11571  14E4  2CE9               	goto	l380
 11572                           
 11573                           ;miwi_p2p.c: 462: {
 11574                           ;miwi_p2p.c: 463: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 11575  14E5  082C               	movf	((low ((_MACRxPacket| (0+256)+1))+1))^0,w
 11576  14E6  00A4               	movwf	((low ((_rxMessage| (0+256)+3))+1))^0
 11577  14E7  082B               	movf	(low ((_MACRxPacket| (0+256)+1)))^0,w
 11578  14E8  00A3               	movwf	(low ((_rxMessage| (0+256)+3)))^0
 11579  14E9                     l380:	
 11580                           
 11581                           ;miwi_p2p.c: 464: }
 11582                           ;miwi_p2p.c: 469: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
 11583  14E9  082F               	movf	(_MACRxPacket^(0+256)+5),w
 11584  14EA  0021               	movlb	1	; select bank1
 11585  14EB  00E2               	movwf	??_P2PTasks^(0+128)
 11586  14EC  0862               	movf	??_P2PTasks^(0+128),w
 11587  14ED  0022               	movlb	2	; select bank2
 11588  14EE  00A7               	movwf	(_rxMessage^(0+256)+7)
 11589                           
 11590                           ;miwi_p2p.c: 470: rxMessage.Payload = MACRxPacket.Payload;
 11591  14EF  082E               	movf	((low ((_MACRxPacket| (0+256)+3))+1))^0,w
 11592  14F0  00A6               	movwf	((low ((_rxMessage| (0+256)+5))+1))^0
 11593  14F1  082D               	movf	(low ((_MACRxPacket| (0+256)+3)))^0,w
 11594  14F2  00A5               	movwf	(low ((_rxMessage| (0+256)+5)))^0
 11595                           
 11596                           ;miwi_p2p.c: 479: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 11597  14F3  0831               	movf	(_MACRxPacket^(0+256)+7),w
 11598  14F4  0021               	movlb	1	; select bank1
 11599  14F5  00E2               	movwf	??_P2PTasks^(0+128)
 11600  14F6  0862               	movf	??_P2PTasks^(0+128),w
 11601  14F7  0022               	movlb	2	; select bank2
 11602  14F8  00A9               	movwf	(_rxMessage^(0+256)+9)
 11603                           
 11604                           ;miwi_p2p.c: 480: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 11605  14F9  0830               	movf	(_MACRxPacket^(0+256)+6),w
 11606  14FA  0021               	movlb	1	; select bank1
 11607  14FB  00E2               	movwf	??_P2PTasks^(0+128)
 11608  14FC  0862               	movf	??_P2PTasks^(0+128),w
 11609  14FD  0022               	movlb	2	; select bank2
 11610  14FE  00A8               	movwf	(_rxMessage^(0+256)+8)
 11611                           
 11612                           ;miwi_p2p.c: 483: if( rxMessage.flags.bits.command )
 11613  14FF  1AA0               	btfsc	_rxMessage^(0+256),5
 11614  1500  2FDB               	goto	l5964
 11615  1501  2FF4               	goto	l381
 11616  1502                     l5782:	
 11617                           ;miwi_p2p.c: 487: {
 11618                           ;miwi_p2p.c: 490: case 0x81:
 11619                           
 11620                           ;miwi_p2p.c: 484: {
 11621                           ;miwi_p2p.c: 486: switch( rxMessage.Payload[0] )
 11622                           
 11623                           
 11624                           ;miwi_p2p.c: 491: {
 11625                           ;miwi_p2p.c: 505: uint8_t status = 0x00;
 11626  1502  01D2               	clrf	P2PTasks@status^(0+256)
 11627                           
 11628                           ;miwi_p2p.c: 509: if( currentChannel != rxMessage.Payload[1] )
 11629  1503  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 11630  1504  0086               	movwf	6
 11631  1505  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 11632  1506  0087               	movwf	7
 11633  1507  3141               	addfsr 1,1
 11634  1508  0801               	movf	1,w
 11635  1509  064C               	xorwf	_currentChannel^(0+256),w
 11636  150A  1903               	skipnz
 11637  150B  2D10               	goto	l5788
 11638                           
 11639                           ;miwi_p2p.c: 510: {
 11640                           ;miwi_p2p.c: 511: MiMAC_DiscardPacket();
 11641  150C  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11642                           
 11643                           ;miwi_p2p.c: 512: break;
 11644  150F  2FF5               	goto	l5966
 11645  1510                     l5788:	
 11646                           
 11647                           ;miwi_p2p.c: 513: }
 11648                           ;miwi_p2p.c: 517: if( ConnMode == 0x03 )
 11649  1510  3003               	movlw	3
 11650  1511  0022               	movlb	2	; select bank2
 11651  1512  066C               	xorwf	_ConnMode^(0+256),w
 11652  1513  1D03               	btfss	3,2
 11653  1514  2D19               	goto	l5792
 11654                           
 11655                           ;miwi_p2p.c: 518: {
 11656                           ;miwi_p2p.c: 519: MiMAC_DiscardPacket();
 11657  1515  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11658                           
 11659                           ;miwi_p2p.c: 520: break;
 11660  1518  2FF5               	goto	l5966
 11661  1519                     l5792:	
 11662                           
 11663                           ;miwi_p2p.c: 521: }
 11664                           ;miwi_p2p.c: 533: {
 11665                           ;miwi_p2p.c: 536: status = AddConnection();
 11666  1519  3190  203D  3194   	fcall	_AddConnection
 11667  151C  0021               	movlb	1	; select bank1
 11668  151D  00E2               	movwf	??_P2PTasks^(0+128)
 11669  151E  0862               	movf	??_P2PTasks^(0+128),w
 11670  151F  0022               	movlb	2	; select bank2
 11671  1520  00D2               	movwf	P2PTasks@status^(0+256)
 11672                           
 11673                           ;miwi_p2p.c: 537: }
 11674                           ;miwi_p2p.c: 554: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
 11675  1521  036C               	decf	_ConnMode^(0+256),w
 11676  1522  1D03               	btfss	3,2
 11677  1523  2D31               	goto	l5810
 11678  1524  0352               	decf	P2PTasks@status^(0+256),w
 11679  1525  1903               	btfsc	3,2
 11680  1526  2D31               	goto	l5810
 11681  1527  3002               	movlw	2
 11682  1528  0652               	xorwf	P2PTasks@status^(0+256),w
 11683  1529  1903               	btfsc	3,2
 11684  152A  2D31               	goto	l5810
 11685                           
 11686                           ;miwi_p2p.c: 563: status = 0xF3;
 11687                           
 11688                           ;miwi_p2p.c: 561: {
 11689                           ;miwi_p2p.c: 562: ConnectionTable[LatestConnection].status.Val = 0;
 11690                           
 11691                           ;miwi_p2p.c: 555: {
 11692                           ;miwi_p2p.c: 556: status = 0xF3;
 11693  152B  30F3               	movlw	243
 11694  152C  0021               	movlb	1	; select bank1
 11695  152D  00E2               	movwf	??_P2PTasks^(0+128)
 11696  152E  0862               	movf	??_P2PTasks^(0+128),w
 11697  152F  0022               	movlb	2	; select bank2
 11698  1530  00D2               	movwf	P2PTasks@status^(0+256)
 11699  1531                     l5810:	
 11700                           
 11701                           ;miwi_p2p.c: 564: }
 11702                           ;miwi_p2p.c: 568: {TxData = 0;};
 11703  1531  01BF               	clrf	_TxData^(0+256)
 11704                           
 11705                           ;miwi_p2p.c: 569: TxBuffer[TxData++] = 0x91;
 11706  1532  3091               	movlw	145
 11707  1533  0021               	movlb	1	; select bank1
 11708  1534  00E2               	movwf	??_P2PTasks^(0+128)
 11709  1535  0022               	movlb	2	; select bank2
 11710  1536  083F               	movf	_TxData^(0+256),w
 11711  1537  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11712  1538  0086               	movwf	6
 11713  1539  3002               	movlw	2	; select bank4/5
 11714  153A  0087               	movwf	7
 11715  153B  0021               	movlb	1	; select bank1
 11716  153C  0862               	movf	??_P2PTasks^(0+128),w
 11717  153D  0081               	movwf	1
 11718  153E  3001               	movlw	1
 11719  153F  00E2               	movwf	??_P2PTasks^(0+128)
 11720  1540  0862               	movf	??_P2PTasks^(0+128),w
 11721  1541  0022               	movlb	2	; select bank2
 11722  1542  07BF               	addwf	_TxData^(0+256),f
 11723                           
 11724                           ;miwi_p2p.c: 570: TxBuffer[TxData++] = status;
 11725  1543  0852               	movf	P2PTasks@status^(0+256),w
 11726  1544  0021               	movlb	1	; select bank1
 11727  1545  00E2               	movwf	??_P2PTasks^(0+128)
 11728  1546  0022               	movlb	2	; select bank2
 11729  1547  083F               	movf	_TxData^(0+256),w
 11730  1548  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11731  1549  0086               	movwf	6
 11732  154A  3002               	movlw	2	; select bank4/5
 11733  154B  0087               	movwf	7
 11734  154C  0021               	movlb	1	; select bank1
 11735  154D  0862               	movf	??_P2PTasks^(0+128),w
 11736  154E  0081               	movwf	1
 11737  154F  3001               	movlw	1
 11738  1550  00E2               	movwf	??_P2PTasks^(0+128)
 11739  1551  0862               	movf	??_P2PTasks^(0+128),w
 11740  1552  0022               	movlb	2	; select bank2
 11741  1553  07BF               	addwf	_TxData^(0+256),f
 11742                           
 11743                           ;miwi_p2p.c: 571: TxBuffer[TxData++] = MyindexinPC;
 11744  1554  083B               	movf	_MyindexinPC^(0+256),w
 11745  1555  0021               	movlb	1	; select bank1
 11746  1556  00E2               	movwf	??_P2PTasks^(0+128)
 11747  1557  0022               	movlb	2	; select bank2
 11748  1558  083F               	movf	_TxData^(0+256),w
 11749  1559  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11750  155A  0086               	movwf	6
 11751  155B  3002               	movlw	2	; select bank4/5
 11752  155C  0087               	movwf	7
 11753  155D  0021               	movlb	1	; select bank1
 11754  155E  0862               	movf	??_P2PTasks^(0+128),w
 11755  155F  0081               	movwf	1
 11756  1560  3001               	movlw	1
 11757  1561  00E2               	movwf	??_P2PTasks^(0+128)
 11758  1562  0862               	movf	??_P2PTasks^(0+128),w
 11759  1563  0022               	movlb	2	; select bank2
 11760  1564  07BF               	addwf	_TxData^(0+256),f
 11761                           
 11762                           ;miwi_p2p.c: 572: if( status == 0x00 ||
 11763                           ;miwi_p2p.c: 573: status == 0x01 )
 11764  1565  0852               	movf	P2PTasks@status^(0+256),w
 11765  1566  1D03               	btfss	3,2
 11766  1567  0352               	decf	P2PTasks@status^(0+256),w
 11767  1568  1D03               	btfss	3,2
 11768  1569  2D9E               	goto	l5846
 11769                           
 11770                           ;miwi_p2p.c: 574: {
 11771                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = P2PCapacityInfo;
 11772  156A  083C               	movf	_P2PCapacityInfo^(0+256),w
 11773  156B  0021               	movlb	1	; select bank1
 11774  156C  00E2               	movwf	??_P2PTasks^(0+128)
 11775  156D  0022               	movlb	2	; select bank2
 11776  156E  083F               	movf	_TxData^(0+256),w
 11777  156F  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11778  1570  0086               	movwf	6
 11779  1571  3002               	movlw	2	; select bank4/5
 11780  1572  0087               	movwf	7
 11781  1573  0021               	movlb	1	; select bank1
 11782  1574  0862               	movf	??_P2PTasks^(0+128),w
 11783  1575  0081               	movwf	1
 11784  1576  3001               	movlw	1
 11785  1577  00E2               	movwf	??_P2PTasks^(0+128)
 11786  1578  0862               	movf	??_P2PTasks^(0+128),w
 11787  1579  0022               	movlb	2	; select bank2
 11788  157A  07BF               	addwf	_TxData^(0+256),f
 11789                           
 11790                           ;miwi_p2p.c: 577: for(i = 0; i < 1; i++)
 11791  157B  01D3               	clrf	P2PTasks@i^(0+256)
 11792  157C  0853               	movf	P2PTasks@i^(0+256),w
 11793  157D  1D03               	btfss	3,2
 11794  157E  2D9E               	goto	l5846
 11795  157F                     l5838:	
 11796                           
 11797                           ;miwi_p2p.c: 578: {
 11798                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = AdditionalNodeID[i];
 11799  157F  0853               	movf	P2PTasks@i^(0+256),w
 11800  1580  3E69               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
 11801  1581  0086               	movwf	6
 11802  1582  3001               	movlw	1	; select bank2/3
 11803  1583  0087               	movwf	7
 11804  1584  0801               	movf	1,w
 11805  1585  0021               	movlb	1	; select bank1
 11806  1586  00E2               	movwf	??_P2PTasks^(0+128)
 11807  1587  0022               	movlb	2	; select bank2
 11808  1588  083F               	movf	_TxData^(0+256),w
 11809  1589  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11810  158A  0086               	movwf	6
 11811  158B  3002               	movlw	2	; select bank4/5
 11812  158C  0087               	movwf	7
 11813  158D  0021               	movlb	1	; select bank1
 11814  158E  0862               	movf	??_P2PTasks^(0+128),w
 11815  158F  0081               	movwf	1
 11816  1590  3001               	movlw	1
 11817  1591  00E2               	movwf	??_P2PTasks^(0+128)
 11818  1592  0862               	movf	??_P2PTasks^(0+128),w
 11819  1593  0022               	movlb	2	; select bank2
 11820  1594  07BF               	addwf	_TxData^(0+256),f
 11821  1595  3001               	movlw	1
 11822  1596  0021               	movlb	1	; select bank1
 11823  1597  00E2               	movwf	??_P2PTasks^(0+128)
 11824  1598  0862               	movf	??_P2PTasks^(0+128),w
 11825  1599  0022               	movlb	2	; select bank2
 11826  159A  07D3               	addwf	P2PTasks@i^(0+256),f
 11827  159B  0853               	movf	P2PTasks@i^(0+256),w
 11828  159C  1903               	btfsc	3,2
 11829  159D  2D7F               	goto	l5838
 11830  159E                     l5846:	
 11831                           
 11832                           ;miwi_p2p.c: 580: }
 11833                           ;miwi_p2p.c: 582: }
 11834                           ;miwi_p2p.c: 584: MiMAC_DiscardPacket();
 11835  159E  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11836                           
 11837                           ;miwi_p2p.c: 598: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 11838  15A1  0022               	movlb	2	; select bank2
 11839  15A2  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 11840  15A3  0021               	movlb	1	; select bank1
 11841  15A4  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 11842  15A5  0022               	movlb	2	; select bank2
 11843  15A6  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 11844  15A7  0021               	movlb	1	; select bank1
 11845  15A8  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 11846  15A9  01D8               	clrf	SendPacket@isCommand^(0+128)
 11847  15AA  0AD8               	incf	SendPacket@isCommand^(0+128),f
 11848  15AB  3000               	movlw	0
 11849  15AC  0022               	movlb	2	; select bank2
 11850  15AD  19A0               	btfsc	_rxMessage^(0+256),3
 11851  15AE  3001               	movlw	1
 11852  15AF  0021               	movlb	1	; select bank1
 11853  15B0  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 11854  15B1  3000               	movlw	0
 11855  15B2  31A4  24DF  3194   	fcall	_SendPacket
 11856                           
 11857                           ;miwi_p2p.c: 606: if( status == 0x00 )
 11858  15B5  0022               	movlb	2	; select bank2
 11859  15B6  0852               	movf	P2PTasks@status^(0+256),w
 11860  15B7  1D03               	btfss	3,2
 11861  15B8  2DE4               	goto	l5854
 11862                           
 11863                           ;miwi_p2p.c: 607: {
 11864                           ;miwi_p2p.c: 608: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
 11865  15B9  083A               	movf	_LatestConnection^(0+256),w
 11866  15BA  0021               	movlb	1	; select bank1
 11867  15BB  00E2               	movwf	??_P2PTasks^(0+128)
 11868  15BC  01E3               	clrf	(??_P2PTasks^(0+128)+1)
 11869  15BD  0862               	movf	??_P2PTasks^(0+128),w
 11870  15BE  00A7               	movwf	___wmul@multiplier^(0+128)
 11871  15BF  0863               	movf	(??_P2PTasks+1)^(0+128),w
 11872  15C0  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 11873  15C1  300A               	movlw	10
 11874  15C2  00A9               	movwf	___wmul@multiplicand^(0+128)
 11875  15C3  3000               	movlw	0
 11876  15C4  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 11877  15C5  31AF  27AC  3194   	fcall	___wmul
 11878  15C8  0022               	movlb	2	; select bank2
 11879  15C9  0845               	movf	_nvmConnectionTable^(0+256),w
 11880  15CA  0021               	movlb	1	; select bank1
 11881  15CB  0727               	addwf	?___wmul^(0+128),w
 11882  15CC  00AD               	movwf	NVMWrite@addr^(0+128)
 11883  15CD  0022               	movlb	2	; select bank2
 11884  15CE  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
 11885  15CF  0021               	movlb	1	; select bank1
 11886  15D0  3D28               	addwfc	(?___wmul+1)^(0+128),w
 11887  15D1  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 11888  15D2  300A               	movlw	10
 11889  15D3  00AF               	movwf	NVMWrite@count^(0+128)
 11890  15D4  3000               	movlw	0
 11891  15D5  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 11892  15D6  300A               	movlw	10
 11893  15D7  00E4               	movwf	(??_P2PTasks+2)^(0+128)
 11894  15D8  0864               	movf	(??_P2PTasks+2)^(0+128),w
 11895  15D9  00A0               	movwf	___bmul@multiplicand^(0+128)
 11896  15DA  0022               	movlb	2	; select bank2
 11897  15DB  083A               	movf	_LatestConnection^(0+256),w
 11898  15DC  31AE  2662  3194   	fcall	___bmul
 11899  15DF  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 11900  15E0  3199  213F  3194   	fcall	_NVMWrite
 11901                           
 11902                           ;miwi_p2p.c: 609: }
 11903  15E3  2FF5               	goto	l5966
 11904  15E4                     l5854:	
 11905                           
 11906                           ;miwi_p2p.c: 618: else
 11907                           ;miwi_p2p.c: 619: {
 11908                           ;miwi_p2p.c: 620: MiMAC_DiscardPacket();
 11909  15E4  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11910                           
 11911                           ;miwi_p2p.c: 621: }
 11912                           ;miwi_p2p.c: 623: }
 11913                           ;miwi_p2p.c: 624: break;
 11914  15E7  2FF5               	goto	l5966
 11915  15E8                     l5856:	
 11916                           ;miwi_p2p.c: 626: case 0x87:
 11917                           
 11918                           
 11919                           ;miwi_p2p.c: 627: {
 11920                           ;miwi_p2p.c: 628: if(ConnMode > 0x02)
 11921  15E8  3003               	movlw	3
 11922  15E9  0022               	movlb	2	; select bank2
 11923  15EA  026C               	subwf	_ConnMode^(0+256),w
 11924  15EB  1C03               	skipc
 11925  15EC  2DF1               	goto	l5860
 11926                           
 11927                           ;miwi_p2p.c: 629: {
 11928                           ;miwi_p2p.c: 630: MiMAC_DiscardPacket();
 11929  15ED  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11930                           
 11931                           ;miwi_p2p.c: 631: break;
 11932  15F0  2FF5               	goto	l5966
 11933  15F1                     l5860:	
 11934                           
 11935                           ;miwi_p2p.c: 632: }
 11936                           ;miwi_p2p.c: 633: if( currentChannel != rxMessage.Payload[1] )
 11937  15F1  0022               	movlb	2	; select bank2
 11938  15F2  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 11939  15F3  0086               	movwf	6
 11940  15F4  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 11941  15F5  0087               	movwf	7
 11942  15F6  3141               	addfsr 1,1
 11943  15F7  0801               	movf	1,w
 11944  15F8  064C               	xorwf	_currentChannel^(0+256),w
 11945  15F9  1903               	skipnz
 11946  15FA  2DFF               	goto	l5864
 11947                           
 11948                           ;miwi_p2p.c: 634: {
 11949                           ;miwi_p2p.c: 635: MiMAC_DiscardPacket();
 11950  15FB  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 11951                           
 11952                           ;miwi_p2p.c: 636: break;
 11953  15FE  2FF5               	goto	l5966
 11954  15FF                     l5864:	
 11955                           
 11956                           ;miwi_p2p.c: 637: }
 11957                           ;miwi_p2p.c: 639: {TxData = 0;};
 11958  15FF  0022               	movlb	2	; select bank2
 11959  1600  01BF               	clrf	_TxData^(0+256)
 11960                           
 11961                           ;miwi_p2p.c: 640: TxBuffer[TxData++] = 0x97;
 11962  1601  3097               	movlw	151
 11963  1602  0021               	movlb	1	; select bank1
 11964  1603  00E2               	movwf	??_P2PTasks^(0+128)
 11965  1604  0022               	movlb	2	; select bank2
 11966  1605  083F               	movf	_TxData^(0+256),w
 11967  1606  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11968  1607  0086               	movwf	6
 11969  1608  3002               	movlw	2	; select bank4/5
 11970  1609  0087               	movwf	7
 11971  160A  0021               	movlb	1	; select bank1
 11972  160B  0862               	movf	??_P2PTasks^(0+128),w
 11973  160C  0081               	movwf	1
 11974  160D  3001               	movlw	1
 11975  160E  00E2               	movwf	??_P2PTasks^(0+128)
 11976  160F  0862               	movf	??_P2PTasks^(0+128),w
 11977  1610  0022               	movlb	2	; select bank2
 11978  1611  07BF               	addwf	_TxData^(0+256),f
 11979                           
 11980                           ;miwi_p2p.c: 641: TxBuffer[TxData++] = P2PCapacityInfo;
 11981  1612  083C               	movf	_P2PCapacityInfo^(0+256),w
 11982  1613  0021               	movlb	1	; select bank1
 11983  1614  00E2               	movwf	??_P2PTasks^(0+128)
 11984  1615  0022               	movlb	2	; select bank2
 11985  1616  083F               	movf	_TxData^(0+256),w
 11986  1617  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 11987  1618  0086               	movwf	6
 11988  1619  3002               	movlw	2	; select bank4/5
 11989  161A  0087               	movwf	7
 11990  161B  0021               	movlb	1	; select bank1
 11991  161C  0862               	movf	??_P2PTasks^(0+128),w
 11992  161D  0081               	movwf	1
 11993  161E  3001               	movlw	1
 11994  161F  00E2               	movwf	??_P2PTasks^(0+128)
 11995  1620  0862               	movf	??_P2PTasks^(0+128),w
 11996  1621  0022               	movlb	2	; select bank2
 11997  1622  07BF               	addwf	_TxData^(0+256),f
 11998                           
 11999                           ;miwi_p2p.c: 643: for(i = 0; i < 1; i++)
 12000  1623  01D3               	clrf	P2PTasks@i^(0+256)
 12001  1624  0853               	movf	P2PTasks@i^(0+256),w
 12002  1625  1D03               	btfss	3,2
 12003  1626  2E46               	goto	l5886
 12004  1627                     l5878:	
 12005                           
 12006                           ;miwi_p2p.c: 644: {
 12007                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = AdditionalNodeID[i];
 12008  1627  0853               	movf	P2PTasks@i^(0+256),w
 12009  1628  3E69               	addlw	(low (_AdditionalNodeID| (0+256)))& (0+255)
 12010  1629  0086               	movwf	6
 12011  162A  3001               	movlw	1	; select bank2/3
 12012  162B  0087               	movwf	7
 12013  162C  0801               	movf	1,w
 12014  162D  0021               	movlb	1	; select bank1
 12015  162E  00E2               	movwf	??_P2PTasks^(0+128)
 12016  162F  0022               	movlb	2	; select bank2
 12017  1630  083F               	movf	_TxData^(0+256),w
 12018  1631  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12019  1632  0086               	movwf	6
 12020  1633  3002               	movlw	2	; select bank4/5
 12021  1634  0087               	movwf	7
 12022  1635  0021               	movlb	1	; select bank1
 12023  1636  0862               	movf	??_P2PTasks^(0+128),w
 12024  1637  0081               	movwf	1
 12025  1638  3001               	movlw	1
 12026  1639  00E2               	movwf	??_P2PTasks^(0+128)
 12027  163A  0862               	movf	??_P2PTasks^(0+128),w
 12028  163B  0022               	movlb	2	; select bank2
 12029  163C  07BF               	addwf	_TxData^(0+256),f
 12030  163D  3001               	movlw	1
 12031  163E  0021               	movlb	1	; select bank1
 12032  163F  00E2               	movwf	??_P2PTasks^(0+128)
 12033  1640  0862               	movf	??_P2PTasks^(0+128),w
 12034  1641  0022               	movlb	2	; select bank2
 12035  1642  07D3               	addwf	P2PTasks@i^(0+256),f
 12036  1643  0853               	movf	P2PTasks@i^(0+256),w
 12037  1644  1903               	btfsc	3,2
 12038  1645  2E27               	goto	l5878
 12039  1646                     l5886:	
 12040                           
 12041                           ;miwi_p2p.c: 646: }
 12042                           ;miwi_p2p.c: 648: MiMAC_DiscardPacket();
 12043  1646  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 12044                           
 12045                           ;miwi_p2p.c: 661: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 12046  1649  0022               	movlb	2	; select bank2
 12047  164A  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 12048  164B  0021               	movlb	1	; select bank1
 12049  164C  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 12050  164D  0022               	movlb	2	; select bank2
 12051  164E  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 12052  164F  0021               	movlb	1	; select bank1
 12053  1650  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 12054  1651  01D8               	clrf	SendPacket@isCommand^(0+128)
 12055  1652  0AD8               	incf	SendPacket@isCommand^(0+128),f
 12056  1653  3000               	movlw	0
 12057  1654  0022               	movlb	2	; select bank2
 12058  1655  19A0               	btfsc	_rxMessage^(0+256),3
 12059  1656  3001               	movlw	1
 12060  1657  0021               	movlb	1	; select bank1
 12061  1658  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 12062  1659  3000               	movlw	0
 12063  165A  31A4  24DF  3194   	fcall	_SendPacket
 12064                           
 12065                           ;miwi_p2p.c: 664: }
 12066                           ;miwi_p2p.c: 665: break;
 12067  165D  2FF5               	goto	l5966
 12068  165E                     l5890:	
 12069                           ;miwi_p2p.c: 672: case 0x82:
 12070                           
 12071                           
 12072                           ;miwi_p2p.c: 673: {
 12073                           ;miwi_p2p.c: 674: {TxData = 0;};
 12074  165E  0022               	movlb	2	; select bank2
 12075  165F  01BF               	clrf	_TxData^(0+256)
 12076                           
 12077                           ;miwi_p2p.c: 675: TxBuffer[TxData++] = 0x92;
 12078  1660  3092               	movlw	146
 12079  1661  0021               	movlb	1	; select bank1
 12080  1662  00E2               	movwf	??_P2PTasks^(0+128)
 12081  1663  0022               	movlb	2	; select bank2
 12082  1664  083F               	movf	_TxData^(0+256),w
 12083  1665  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12084  1666  0086               	movwf	6
 12085  1667  3002               	movlw	2	; select bank4/5
 12086  1668  0087               	movwf	7
 12087  1669  0021               	movlb	1	; select bank1
 12088  166A  0862               	movf	??_P2PTasks^(0+128),w
 12089  166B  0081               	movwf	1
 12090  166C  3001               	movlw	1
 12091  166D  00E2               	movwf	??_P2PTasks^(0+128)
 12092  166E  0862               	movf	??_P2PTasks^(0+128),w
 12093  166F  0022               	movlb	2	; select bank2
 12094  1670  07BF               	addwf	_TxData^(0+256),f
 12095                           
 12096                           ;miwi_p2p.c: 677: for(i = 0; i < 5; i++)
 12097  1671  01D3               	clrf	P2PTasks@i^(0+256)
 12098  1672  3005               	movlw	5
 12099  1673  0253               	subwf	P2PTasks@i^(0+256),w
 12100  1674  1803               	btfsc	3,0
 12101  1675  2EF6               	goto	l5916
 12102  1676                     l5902:	
 12103                           
 12104                           ;miwi_p2p.c: 678: {
 12105                           ;miwi_p2p.c: 680: if( ConnectionTable[i].status.bits.isValid )
 12106  1676  300A               	movlw	10
 12107  1677  0021               	movlb	1	; select bank1
 12108  1678  00E2               	movwf	??_P2PTasks^(0+128)
 12109  1679  0862               	movf	??_P2PTasks^(0+128),w
 12110  167A  00A0               	movwf	___bmul@multiplicand^(0+128)
 12111  167B  0022               	movlb	2	; select bank2
 12112  167C  0853               	movf	P2PTasks@i^(0+256),w
 12113  167D  31AE  2662  3194   	fcall	___bmul
 12114  1680  3E08               	addlw	8
 12115  1681  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12116  1682  0086               	movwf	6
 12117  1683  3001               	movlw	1	; select bank3/4
 12118  1684  0087               	movwf	7
 12119  1685  1F81               	btfss	1,7
 12120  1686  2EEC               	goto	l5912
 12121                           
 12122                           ;miwi_p2p.c: 681: {
 12123                           ;miwi_p2p.c: 683: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 12124  1687  0022               	movlb	2	; select bank2
 12125  1688  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 12126  1689  0021               	movlb	1	; select bank1
 12127  168A  00A5               	movwf	(isSameAddress@Address1+1)^(0+128)
 12128  168B  0022               	movlb	2	; select bank2
 12129  168C  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 12130  168D  0021               	movlb	1	; select bank1
 12131  168E  00A4               	movwf	isSameAddress@Address1^(0+128)
 12132  168F  300A               	movlw	10
 12133  1690  00E2               	movwf	??_P2PTasks^(0+128)
 12134  1691  0862               	movf	??_P2PTasks^(0+128),w
 12135  1692  00A0               	movwf	___bmul@multiplicand^(0+128)
 12136  1693  0022               	movlb	2	; select bank2
 12137  1694  0853               	movf	P2PTasks@i^(0+256),w
 12138  1695  31AE  2662  3194   	fcall	___bmul
 12139  1698  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12140  1699  0021               	movlb	1	; select bank1
 12141  169A  00E3               	movwf	(??_P2PTasks+1)^(0+128)
 12142  169B  0863               	movf	(??_P2PTasks+1)^(0+128),w
 12143  169C  00A6               	movwf	isSameAddress@Address2^(0+128)
 12144  169D  31A1  2155  3194   	fcall	_isSameAddress
 12145  16A0  3A00               	xorlw	0
 12146  16A1  1903               	skipnz
 12147  16A2  2EEC               	goto	l5912
 12148                           
 12149                           ;miwi_p2p.c: 684: {
 12150                           ;miwi_p2p.c: 687: ConnectionTable[i].status.Val = 0;
 12151  16A3  300A               	movlw	10
 12152  16A4  0021               	movlb	1	; select bank1
 12153  16A5  00E2               	movwf	??_P2PTasks^(0+128)
 12154  16A6  0862               	movf	??_P2PTasks^(0+128),w
 12155  16A7  00A0               	movwf	___bmul@multiplicand^(0+128)
 12156  16A8  0022               	movlb	2	; select bank2
 12157  16A9  0853               	movf	P2PTasks@i^(0+256),w
 12158  16AA  31AE  2662  3194   	fcall	___bmul
 12159  16AD  3E08               	addlw	8
 12160  16AE  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12161  16AF  0086               	movwf	6
 12162  16B0  3001               	movlw	1	; select bank3/4
 12163  16B1  0087               	movwf	7
 12164  16B2  0181               	clrf	1
 12165                           
 12166                           ;miwi_p2p.c: 689: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12167  16B3  0022               	movlb	2	; select bank2
 12168  16B4  0853               	movf	P2PTasks@i^(0+256),w
 12169  16B5  0021               	movlb	1	; select bank1
 12170  16B6  00E2               	movwf	??_P2PTasks^(0+128)
 12171  16B7  01E3               	clrf	(??_P2PTasks^(0+128)+1)
 12172  16B8  0862               	movf	??_P2PTasks^(0+128),w
 12173  16B9  00A7               	movwf	___wmul@multiplier^(0+128)
 12174  16BA  0863               	movf	(??_P2PTasks+1)^(0+128),w
 12175  16BB  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12176  16BC  300A               	movlw	10
 12177  16BD  00A9               	movwf	___wmul@multiplicand^(0+128)
 12178  16BE  3000               	movlw	0
 12179  16BF  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12180  16C0  31AF  27AC  3194   	fcall	___wmul
 12181  16C3  0022               	movlb	2	; select bank2
 12182  16C4  0845               	movf	_nvmConnectionTable^(0+256),w
 12183  16C5  0021               	movlb	1	; select bank1
 12184  16C6  0727               	addwf	?___wmul^(0+128),w
 12185  16C7  00AD               	movwf	NVMWrite@addr^(0+128)
 12186  16C8  0022               	movlb	2	; select bank2
 12187  16C9  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
 12188  16CA  0021               	movlb	1	; select bank1
 12189  16CB  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12190  16CC  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 12191  16CD  300A               	movlw	10
 12192  16CE  00AF               	movwf	NVMWrite@count^(0+128)
 12193  16CF  3000               	movlw	0
 12194  16D0  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 12195  16D1  300A               	movlw	10
 12196  16D2  00E4               	movwf	(??_P2PTasks+2)^(0+128)
 12197  16D3  0864               	movf	(??_P2PTasks+2)^(0+128),w
 12198  16D4  00A0               	movwf	___bmul@multiplicand^(0+128)
 12199  16D5  0022               	movlb	2	; select bank2
 12200  16D6  0853               	movf	P2PTasks@i^(0+256),w
 12201  16D7  31AE  2662  3194   	fcall	___bmul
 12202  16DA  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12203  16DB  3199  213F  3194   	fcall	_NVMWrite
 12204                           
 12205                           ;miwi_p2p.c: 691: TxBuffer[TxData++] = 0x00;
 12206  16DE  0022               	movlb	2	; select bank2
 12207  16DF  083F               	movf	_TxData^(0+256),w
 12208  16E0  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12209  16E1  0086               	movwf	6
 12210  16E2  3002               	movlw	2	; select bank4/5
 12211  16E3  0087               	movwf	7
 12212  16E4  0181               	clrf	1
 12213  16E5  3001               	movlw	1
 12214  16E6  0021               	movlb	1	; select bank1
 12215  16E7  00E2               	movwf	??_P2PTasks^(0+128)
 12216  16E8  0862               	movf	??_P2PTasks^(0+128),w
 12217  16E9  0022               	movlb	2	; select bank2
 12218  16EA  07BF               	addwf	_TxData^(0+256),f
 12219                           
 12220                           ;miwi_p2p.c: 693: break;
 12221  16EB  2EF6               	goto	l5916
 12222  16EC                     l5912:	
 12223  16EC  3001               	movlw	1
 12224  16ED  0021               	movlb	1	; select bank1
 12225  16EE  00E2               	movwf	??_P2PTasks^(0+128)
 12226  16EF  0862               	movf	??_P2PTasks^(0+128),w
 12227  16F0  0022               	movlb	2	; select bank2
 12228  16F1  07D3               	addwf	P2PTasks@i^(0+256),f
 12229  16F2  3005               	movlw	5
 12230  16F3  0253               	subwf	P2PTasks@i^(0+256),w
 12231  16F4  1C03               	skipc
 12232  16F5  2E76               	goto	l5902
 12233  16F6                     l5916:	
 12234                           
 12235                           ;miwi_p2p.c: 694: }
 12236                           ;miwi_p2p.c: 695: }
 12237                           ;miwi_p2p.c: 696: }
 12238                           ;miwi_p2p.c: 698: MiMAC_DiscardPacket();
 12239  16F6  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 12240                           
 12241                           ;miwi_p2p.c: 700: if( i == 5 )
 12242  16F9  3005               	movlw	5
 12243  16FA  0022               	movlb	2	; select bank2
 12244  16FB  0653               	xorwf	P2PTasks@i^(0+256),w
 12245  16FC  1D03               	btfss	3,2
 12246  16FD  2F0F               	goto	l5924
 12247                           
 12248                           ;miwi_p2p.c: 701: {
 12249                           ;miwi_p2p.c: 703: TxBuffer[TxData++] = 0xF0;
 12250  16FE  30F0               	movlw	240
 12251  16FF  0021               	movlb	1	; select bank1
 12252  1700  00E2               	movwf	??_P2PTasks^(0+128)
 12253  1701  0022               	movlb	2	; select bank2
 12254  1702  083F               	movf	_TxData^(0+256),w
 12255  1703  3E3E               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 12256  1704  0086               	movwf	6
 12257  1705  3002               	movlw	2	; select bank4/5
 12258  1706  0087               	movwf	7
 12259  1707  0021               	movlb	1	; select bank1
 12260  1708  0862               	movf	??_P2PTasks^(0+128),w
 12261  1709  0081               	movwf	1
 12262  170A  3001               	movlw	1
 12263  170B  00E2               	movwf	??_P2PTasks^(0+128)
 12264  170C  0862               	movf	??_P2PTasks^(0+128),w
 12265  170D  0022               	movlb	2	; select bank2
 12266  170E  07BF               	addwf	_TxData^(0+256),f
 12267  170F                     l5924:	
 12268                           
 12269                           ;miwi_p2p.c: 704: }
 12270                           ;miwi_p2p.c: 715: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
 12271  170F  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 12272  1710  0021               	movlb	1	; select bank1
 12273  1711  00D7               	movwf	(SendPacket@DestinationAddress+1)^(0+128)
 12274  1712  0022               	movlb	2	; select bank2
 12275  1713  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 12276  1714  0021               	movlb	1	; select bank1
 12277  1715  00D6               	movwf	SendPacket@DestinationAddress^(0+128)
 12278  1716  01D8               	clrf	SendPacket@isCommand^(0+128)
 12279  1717  0AD8               	incf	SendPacket@isCommand^(0+128),f
 12280  1718  3000               	movlw	0
 12281  1719  0022               	movlb	2	; select bank2
 12282  171A  19A0               	btfsc	_rxMessage^(0+256),3
 12283  171B  3001               	movlw	1
 12284  171C  0021               	movlb	1	; select bank1
 12285  171D  00D9               	movwf	SendPacket@SecurityEnabled^(0+128)
 12286  171E  3000               	movlw	0
 12287  171F  31A4  24DF  3194   	fcall	_SendPacket
 12288                           
 12289                           ;miwi_p2p.c: 719: }
 12290                           ;miwi_p2p.c: 720: break;
 12291  1722  2FF5               	goto	l5966
 12292  1723                     l5926:	
 12293                           ;miwi_p2p.c: 726: {
 12294                           ;miwi_p2p.c: 727: case 0x00:
 12295                           
 12296                           ;miwi_p2p.c: 724: {
 12297                           ;miwi_p2p.c: 725: switch( rxMessage.Payload[1] )
 12298                           
 12299                           ;miwi_p2p.c: 723: case 0x91:
 12300                           
 12301                           
 12302                           ;miwi_p2p.c: 728: case 0x01:
 12303                           ;miwi_p2p.c: 742: AddConnection();
 12304  1723  3190  203D  3194   	fcall	_AddConnection
 12305                           
 12306                           ;miwi_p2p.c: 749: P2PStatus.bits.SaveConnection = 1;
 12307  1726  0022               	movlb	2	; select bank2
 12308  1727  14BD               	bsf	_P2PStatus^(0+256),1	;volatile
 12309                           
 12310                           ;miwi_p2p.c: 750: nvmDelayTick = MiWi_TickGet();
 12311  1728  31A4  2498  3194   	fcall	_MiWi_TickGet
 12312  172B  0021               	movlb	1	; select bank1
 12313  172C  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 12314  172D  0022               	movlb	2	; select bank2
 12315  172E  00B9               	movwf	(_nvmDelayTick+3)^(0+256)
 12316  172F  0021               	movlb	1	; select bank1
 12317  1730  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 12318  1731  0022               	movlb	2	; select bank2
 12319  1732  00B8               	movwf	(_nvmDelayTick+2)^(0+256)
 12320  1733  0021               	movlb	1	; select bank1
 12321  1734  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 12322  1735  0022               	movlb	2	; select bank2
 12323  1736  00B7               	movwf	(_nvmDelayTick+1)^(0+256)
 12324  1737  0021               	movlb	1	; select bank1
 12325  1738  0820               	movf	?_MiWi_TickGet^(0+128),w
 12326  1739  0022               	movlb	2	; select bank2
 12327  173A  00B6               	movwf	_nvmDelayTick^(0+256)
 12328                           
 12329                           ;miwi_p2p.c: 755: }
 12330                           
 12331                           ;miwi_p2p.c: 754: break;
 12332                           
 12333                           ;miwi_p2p.c: 753: default:
 12334                           
 12335                           ;miwi_p2p.c: 752: break;
 12336  173B  2F4A               	goto	l5936
 12337  173C                     l5934:	
 12338  173C  0022               	movlb	2	; select bank2
 12339  173D  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 12340  173E  0086               	movwf	6
 12341  173F  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 12342  1740  0087               	movwf	7
 12343  1741  3141               	addfsr 1,1
 12344  1742  0801               	movf	1,w
 12345                           
 12346                           ; Switch size 1, requested type "space"
 12347                           ; Number of cases is 2, Range of values is 0 to 1
 12348                           ; switch strategies available:
 12349                           ; Name         Instructions Cycles
 12350                           ; simple_byte            7     4 (average)
 12351                           ; direct_byte           10     6 (fixed)
 12352                           ; jumptable            260     6 (fixed)
 12353                           ;	Chosen strategy is simple_byte
 12354  1743  3A00               	xorlw	0	; case 0
 12355  1744  1903               	skipnz
 12356  1745  2F23               	goto	l5926
 12357  1746  3A01               	xorlw	1	; case 1
 12358  1747  1903               	skipnz
 12359  1748  2F23               	goto	l5926
 12360  1749  2F4A               	goto	l5936
 12361  174A                     l5936:	
 12362                           
 12363                           ;miwi_p2p.c: 756: }
 12364                           ;miwi_p2p.c: 757: MiMAC_DiscardPacket();
 12365  174A  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 12366                           
 12367                           ;miwi_p2p.c: 758: break;
 12368  174D  2FF5               	goto	l5966
 12369  174E                     l415:	
 12370                           ;miwi_p2p.c: 761: case 0x97:
 12371                           
 12372                           
 12373                           ;miwi_p2p.c: 762: {
 12374                           ;miwi_p2p.c: 763: if( P2PStatus.bits.Resync )
 12375  174E  1EBD               	btfss	_P2PStatus^(0+256),5	;volatile
 12376  174F  2F51               	goto	l5940
 12377                           
 12378                           ;miwi_p2p.c: 764: {
 12379                           ;miwi_p2p.c: 765: P2PStatus.bits.Resync = 0;
 12380  1750  12BD               	bcf	_P2PStatus^(0+256),5	;volatile
 12381  1751                     l5940:	
 12382                           
 12383                           ;miwi_p2p.c: 766: }
 12384                           ;miwi_p2p.c: 807: MiMAC_DiscardPacket();
 12385  1751  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 12386                           
 12387                           ;miwi_p2p.c: 808: }
 12388                           ;miwi_p2p.c: 809: break;
 12389  1754  2FF5               	goto	l5966
 12390  1755                     l5942:	
 12391                           ;miwi_p2p.c: 812: case 0x92:
 12392                           
 12393                           
 12394                           ;miwi_p2p.c: 813: {
 12395                           ;miwi_p2p.c: 814: if( rxMessage.Payload[1] == 0x00 )
 12396  1755  0022               	movlb	2	; select bank2
 12397  1756  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 12398  1757  0086               	movwf	6
 12399  1758  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 12400  1759  0087               	movwf	7
 12401  175A  3141               	addfsr 1,1
 12402  175B  0801               	movf	1,w
 12403  175C  1D03               	btfss	3,2
 12404  175D  2FD6               	goto	l5960
 12405                           
 12406                           ;miwi_p2p.c: 815: {
 12407                           ;miwi_p2p.c: 816: for(i = 0; i < 5; i++)
 12408  175E  01D3               	clrf	P2PTasks@i^(0+256)
 12409  175F  3005               	movlw	5
 12410  1760  0253               	subwf	P2PTasks@i^(0+256),w
 12411  1761  1803               	btfsc	3,0
 12412  1762  2FD6               	goto	l5960
 12413  1763                     l5950:	
 12414                           
 12415                           ;miwi_p2p.c: 817: {
 12416                           ;miwi_p2p.c: 819: if( ConnectionTable[i].status.bits.isValid )
 12417  1763  300A               	movlw	10
 12418  1764  0021               	movlb	1	; select bank1
 12419  1765  00E2               	movwf	??_P2PTasks^(0+128)
 12420  1766  0862               	movf	??_P2PTasks^(0+128),w
 12421  1767  00A0               	movwf	___bmul@multiplicand^(0+128)
 12422  1768  0022               	movlb	2	; select bank2
 12423  1769  0853               	movf	P2PTasks@i^(0+256),w
 12424  176A  31AE  2662  3194   	fcall	___bmul
 12425  176D  3E08               	addlw	8
 12426  176E  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12427  176F  0086               	movwf	6
 12428  1770  3001               	movlw	1	; select bank3/4
 12429  1771  0087               	movwf	7
 12430  1772  1F81               	btfss	1,7
 12431  1773  2FCC               	goto	l5956
 12432                           
 12433                           ;miwi_p2p.c: 820: {
 12434                           ;miwi_p2p.c: 822: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 12435  1774  0022               	movlb	2	; select bank2
 12436  1775  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 12437  1776  0021               	movlb	1	; select bank1
 12438  1777  00A5               	movwf	(isSameAddress@Address1+1)^(0+128)
 12439  1778  0022               	movlb	2	; select bank2
 12440  1779  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 12441  177A  0021               	movlb	1	; select bank1
 12442  177B  00A4               	movwf	isSameAddress@Address1^(0+128)
 12443  177C  300A               	movlw	10
 12444  177D  00E2               	movwf	??_P2PTasks^(0+128)
 12445  177E  0862               	movf	??_P2PTasks^(0+128),w
 12446  177F  00A0               	movwf	___bmul@multiplicand^(0+128)
 12447  1780  0022               	movlb	2	; select bank2
 12448  1781  0853               	movf	P2PTasks@i^(0+256),w
 12449  1782  31AE  2662  3194   	fcall	___bmul
 12450  1785  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12451  1786  0021               	movlb	1	; select bank1
 12452  1787  00E3               	movwf	(??_P2PTasks+1)^(0+128)
 12453  1788  0863               	movf	(??_P2PTasks+1)^(0+128),w
 12454  1789  00A6               	movwf	isSameAddress@Address2^(0+128)
 12455  178A  31A1  2155  3194   	fcall	_isSameAddress
 12456  178D  3A00               	xorlw	0
 12457  178E  1903               	skipnz
 12458  178F  2FCC               	goto	l5956
 12459                           
 12460                           ;miwi_p2p.c: 823: {
 12461                           ;miwi_p2p.c: 825: ConnectionTable[i].status.Val = 0;
 12462  1790  300A               	movlw	10
 12463  1791  0021               	movlb	1	; select bank1
 12464  1792  00E2               	movwf	??_P2PTasks^(0+128)
 12465  1793  0862               	movf	??_P2PTasks^(0+128),w
 12466  1794  00A0               	movwf	___bmul@multiplicand^(0+128)
 12467  1795  0022               	movlb	2	; select bank2
 12468  1796  0853               	movf	P2PTasks@i^(0+256),w
 12469  1797  31AE  2662  3194   	fcall	___bmul
 12470  179A  3E08               	addlw	8
 12471  179B  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12472  179C  0086               	movwf	6
 12473  179D  3001               	movlw	1	; select bank3/4
 12474  179E  0087               	movwf	7
 12475  179F  0181               	clrf	1
 12476                           
 12477                           ;miwi_p2p.c: 827: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12478  17A0  0022               	movlb	2	; select bank2
 12479  17A1  0853               	movf	P2PTasks@i^(0+256),w
 12480  17A2  0021               	movlb	1	; select bank1
 12481  17A3  00E2               	movwf	??_P2PTasks^(0+128)
 12482  17A4  01E3               	clrf	(??_P2PTasks^(0+128)+1)
 12483  17A5  0862               	movf	??_P2PTasks^(0+128),w
 12484  17A6  00A7               	movwf	___wmul@multiplier^(0+128)
 12485  17A7  0863               	movf	(??_P2PTasks+1)^(0+128),w
 12486  17A8  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 12487  17A9  300A               	movlw	10
 12488  17AA  00A9               	movwf	___wmul@multiplicand^(0+128)
 12489  17AB  3000               	movlw	0
 12490  17AC  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 12491  17AD  31AF  27AC  3194   	fcall	___wmul
 12492  17B0  0022               	movlb	2	; select bank2
 12493  17B1  0845               	movf	_nvmConnectionTable^(0+256),w
 12494  17B2  0021               	movlb	1	; select bank1
 12495  17B3  0727               	addwf	?___wmul^(0+128),w
 12496  17B4  00AD               	movwf	NVMWrite@addr^(0+128)
 12497  17B5  0022               	movlb	2	; select bank2
 12498  17B6  0846               	movf	(_nvmConnectionTable+1)^(0+256),w
 12499  17B7  0021               	movlb	1	; select bank1
 12500  17B8  3D28               	addwfc	(?___wmul+1)^(0+128),w
 12501  17B9  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 12502  17BA  300A               	movlw	10
 12503  17BB  00AF               	movwf	NVMWrite@count^(0+128)
 12504  17BC  3000               	movlw	0
 12505  17BD  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 12506  17BE  300A               	movlw	10
 12507  17BF  00E4               	movwf	(??_P2PTasks+2)^(0+128)
 12508  17C0  0864               	movf	(??_P2PTasks+2)^(0+128),w
 12509  17C1  00A0               	movwf	___bmul@multiplicand^(0+128)
 12510  17C2  0022               	movlb	2	; select bank2
 12511  17C3  0853               	movf	P2PTasks@i^(0+256),w
 12512  17C4  31AE  2662  3194   	fcall	___bmul
 12513  17C7  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 12514  17C8  3199  213F  3194   	fcall	_NVMWrite
 12515                           
 12516                           ;miwi_p2p.c: 829: break;
 12517  17CB  2FD6               	goto	l5960
 12518  17CC                     l5956:	
 12519  17CC  3001               	movlw	1
 12520  17CD  0021               	movlb	1	; select bank1
 12521  17CE  00E2               	movwf	??_P2PTasks^(0+128)
 12522  17CF  0862               	movf	??_P2PTasks^(0+128),w
 12523  17D0  0022               	movlb	2	; select bank2
 12524  17D1  07D3               	addwf	P2PTasks@i^(0+256),f
 12525  17D2  3005               	movlw	5
 12526  17D3  0253               	subwf	P2PTasks@i^(0+256),w
 12527  17D4  1C03               	skipc
 12528  17D5  2F63               	goto	l5950
 12529  17D6                     l5960:	
 12530                           
 12531                           ;miwi_p2p.c: 830: }
 12532                           ;miwi_p2p.c: 831: }
 12533                           ;miwi_p2p.c: 832: }
 12534                           ;miwi_p2p.c: 833: }
 12535                           ;miwi_p2p.c: 834: }
 12536                           ;miwi_p2p.c: 835: MiMAC_DiscardPacket();
 12537  17D6  31A1  210A  3194   	fcall	_MiMAC_DiscardPacket
 12538                           
 12539                           ;miwi_p2p.c: 836: break;
 12540  17D9  2FF5               	goto	l5966
 12541  17DA                     l423:	
 12542                           ;miwi_p2p.c: 1091: default:
 12543                           
 12544  17DA  2FF4               	goto	l381
 12545  17DB                     l5964:	
 12546                           ;miwi_p2p.c: 1095: }
 12547                           
 12548                           ;miwi_p2p.c: 1094: break;
 12549                           
 12550                           ;miwi_p2p.c: 1093: P2PStatus.bits.RxHasUserData = 1;
 12551                           
 12552  17DB  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 12553  17DC  0086               	movwf	6
 12554  17DD  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 12555  17DE  0087               	movwf	7
 12556  17DF  0801               	movf	1,w
 12557                           
 12558                           ; Switch size 1, requested type "space"
 12559                           ; Number of cases is 6, Range of values is 129 to 151
 12560                           ; switch strategies available:
 12561                           ; Name         Instructions Cycles
 12562                           ; simple_byte           19    10 (average)
 12563                           ; direct_byte           55     9 (fixed)
 12564                           ; jumptable            263     9 (fixed)
 12565                           ;	Chosen strategy is simple_byte
 12566  17E0  3A81               	xorlw	129	; case 129
 12567  17E1  1903               	skipnz
 12568  17E2  2D02               	goto	l5782
 12569  17E3  3A03               	xorlw	3	; case 130
 12570  17E4  1903               	skipnz
 12571  17E5  2E5E               	goto	l5890
 12572  17E6  3A05               	xorlw	5	; case 135
 12573  17E7  1903               	skipnz
 12574  17E8  2DE8               	goto	l5856
 12575  17E9  3A16               	xorlw	22	; case 145
 12576  17EA  1903               	skipnz
 12577  17EB  2F3C               	goto	l5934
 12578  17EC  3A03               	xorlw	3	; case 146
 12579  17ED  1903               	skipnz
 12580  17EE  2F55               	goto	l5942
 12581  17EF  3A05               	xorlw	5	; case 151
 12582  17F0  1903               	skipnz
 12583  17F1  2F4E               	goto	l415
 12584  17F2  2FDA               	goto	l423
 12585                           
 12586                           ;miwi_p2p.c: 1096: }
 12587  17F3  2FF5               	goto	l5966
 12588  17F4                     l381:	
 12589                           
 12590                           ;miwi_p2p.c: 1097: else
 12591                           ;miwi_p2p.c: 1098: {
 12592                           ;miwi_p2p.c: 1099: P2PStatus.bits.RxHasUserData = 1;
 12593  17F4  15BD               	bsf	_P2PStatus^(0+256),3	;volatile
 12594  17F5                     l5966:	
 12595                           
 12596                           ;miwi_p2p.c: 1100: }
 12597                           ;miwi_p2p.c: 1108: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
 12598  17F5  0022               	movlb	2	; select bank2
 12599  17F6  0827               	movf	(_rxMessage^(0+256)+7),w
 12600  17F7  1D03               	btfss	3,2
 12601  17F8  1A3D               	btfsc	_P2PStatus^(0+256),4	;volatile
 12602  17F9  2FFC               	goto	l427
 12603  17FA  1EBD               	btfss	_P2PStatus^(0+256),5	;volatile
 12604  17FB  0008               	return
 12605  17FC                     l427:	
 12606                           
 12607                           ;miwi_p2p.c: 1109: {
 12608                           ;miwi_p2p.c: 1110: P2PStatus.bits.RxHasUserData = 0;
 12609  17FC  11BD               	bcf	_P2PStatus^(0+256),3	;volatile
 12610                           
 12611                           ;miwi_p2p.c: 1111: MiMAC_DiscardPacket();
 12612  17FD  31A1  210A         	fcall	_MiMAC_DiscardPacket
 12613  17FF  0008               	return
 12614  1800                     __end_of_P2PTasks:	
 12615                           
 12616                           	psect	text32
 12617  24DF                     __ptext32:	
 12618 ;; *************** function _SendPacket *****************
 12619 ;; Defined at:
 12620 ;;		line 1623 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;  Broadcast       1    wreg     unsigned char 
 12623 ;;  DestinationA    2   54[BANK1 ] PTR unsigned char 
 12624 ;;		 -> ConnectionTable(50), NULL(0), RxPacket.Payload(50), RxPacket(104), 
 12625 ;;  isCommand       1   56[BANK1 ] unsigned char 
 12626 ;;  SecurityEnab    1   57[BANK1 ] unsigned char 
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;  Broadcast       1   62[BANK1 ] unsigned char 
 12629 ;;  tParam          3   63[BANK1 ] struct .
 12630 ;;  status          1   61[BANK1 ] unsigned char 
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  1    wreg      unsigned char 
 12633 ;; Registers used:
 12634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12640 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12643 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 12644 ;;Total ram usage:       12 bytes
 12645 ;; Hardware stack levels used:    1
 12646 ;; Hardware stack levels required when called:   10
 12647 ;; This function calls:
 12648 ;;		_MiMAC_SendPacket
 12649 ;; This function is called by:
 12650 ;;		_P2PTasks
 12651 ;;		_MiApp_BroadcastPacket
 12652 ;;		_MiApp_UnicastAddress
 12653 ;;		_MiApp_EstablishConnection
 12654 ;;		_MiApp_RemoveConnection
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           
 12659                           ;psect for function _SendPacket
 12660  24DF                     _SendPacket:	
 12661                           
 12662                           ;incstack = 0
 12663                           ; Regs used in _SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12664                           ;SendPacket@Broadcast stored from wreg
 12665  24DF  0021               	movlb	1	; select bank1
 12666  24E0  00DE               	movwf	SendPacket@Broadcast^(0+128)
 12667                           
 12668                           ;miwi_p2p.c: 1629: MAC_TRANS_PARAM tParam;
 12669                           ;miwi_p2p.c: 1630: bool status;
 12670                           ;miwi_p2p.c: 1632: tParam.flags.Val = 0;
 12671  24E1  01DF               	clrf	SendPacket@tParam^(0+128)
 12672                           
 12673                           ;miwi_p2p.c: 1633: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 12674  24E2  0858               	movf	SendPacket@isCommand^(0+128),w
 12675  24E3  1903               	btfsc	3,2
 12676  24E4  2CE7               	goto	u4700
 12677  24E5  3001               	movlw	1
 12678  24E6  2CE8               	goto	u4710
 12679  24E7                     u4700:	
 12680  24E7  3000               	movlw	0
 12681  24E8                     u4710:	
 12682  24E8  00DA               	movwf	??_SendPacket^(0+128)
 12683  24E9  085F               	movf	SendPacket@tParam^(0+128),w
 12684  24EA  065A               	xorwf	??_SendPacket^(0+128),w
 12685  24EB  39FC               	andlw	-4
 12686  24EC  065A               	xorwf	??_SendPacket^(0+128),w
 12687  24ED  00DF               	movwf	SendPacket@tParam^(0+128)
 12688                           
 12689                           ;miwi_p2p.c: 1634: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 12690  24EE  085E               	movf	SendPacket@Broadcast^(0+128),w
 12691  24EF  1D03               	btfss	3,2
 12692  24F0  2CF4               	goto	u4720
 12693  24F1  0021               	movlb	1	; select bank1
 12694  24F2  16DF               	bsf	SendPacket@tParam^(0+128),5
 12695  24F3  2CF6               	goto	l5352
 12696  24F4                     u4720:	
 12697  24F4  0021               	movlb	1	; select bank1
 12698  24F5  12DF               	bcf	SendPacket@tParam^(0+128),5
 12699  24F6                     l5352:	
 12700                           
 12701                           ;miwi_p2p.c: 1635: tParam.flags.bits.broadcast = Broadcast;
 12702  24F6  085E               	movf	SendPacket@Broadcast^(0+128),w
 12703  24F7  3901               	andlw	1
 12704  24F8  115F               	bcf	SendPacket@tParam^(0+128),2
 12705  24F9  1D03               	skipz
 12706  24FA  155F               	bsf	SendPacket@tParam^(0+128),2
 12707                           
 12708                           ;miwi_p2p.c: 1636: tParam.flags.bits.secEn = SecurityEnabled;
 12709  24FB  0859               	movf	SendPacket@SecurityEnabled^(0+128),w
 12710  24FC  3901               	andlw	1
 12711  24FD  11DF               	bcf	SendPacket@tParam^(0+128),3
 12712  24FE  1D03               	skipz
 12713  24FF  15DF               	bsf	SendPacket@tParam^(0+128),3
 12714                           
 12715                           ;miwi_p2p.c: 1645: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 12716  2500  085E               	movf	SendPacket@Broadcast^(0+128),w
 12717  2501  1D03               	btfss	3,2
 12718  2502  2D06               	goto	u4740
 12719  2503  0021               	movlb	1	; select bank1
 12720  2504  175F               	bsf	SendPacket@tParam^(0+128),6
 12721  2505  2D08               	goto	l5358
 12722  2506                     u4740:	
 12723  2506  0021               	movlb	1	; select bank1
 12724  2507  135F               	bcf	SendPacket@tParam^(0+128),6
 12725  2508                     l5358:	
 12726                           
 12727                           ;miwi_p2p.c: 1658: tParam.flags.bits.sourcePrsnt = 1;
 12728  2508  17DF               	bsf	SendPacket@tParam^(0+128),7
 12729                           
 12730                           ;miwi_p2p.c: 1661: tParam.DestAddress = DestinationAddress;
 12731  2509  0857               	movf	(SendPacket@DestinationAddress+1)^(0+128),w
 12732  250A  00E1               	movwf	((low ((SendPacket@tParam| 0+1))+1))^(0+128)
 12733  250B  0856               	movf	SendPacket@DestinationAddress^(0+128),w
 12734  250C  00E0               	movwf	(low ((SendPacket@tParam| 0+1)))^(0+128)
 12735                           
 12736                           ;miwi_p2p.c: 1667: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 12737  250D  085F               	movf	SendPacket@tParam^(0+128),w
 12738  250E  00CC               	movwf	MiMAC_SendPacket@transParam^(0+128)
 12739  250F  0860               	movf	(SendPacket@tParam+1)^(0+128),w
 12740  2510  00CD               	movwf	(MiMAC_SendPacket@transParam+1)^(0+128)
 12741  2511  0861               	movf	(SendPacket@tParam+2)^(0+128),w
 12742  2512  00CE               	movwf	(MiMAC_SendPacket@transParam+2)^(0+128)
 12743  2513  303E               	movlw	(low (_TxBuffer| (0+512)))& (0+255)
 12744  2514  00DA               	movwf	??_SendPacket^(0+128)
 12745  2515  085A               	movf	??_SendPacket^(0+128),w
 12746  2516  00CF               	movwf	MiMAC_SendPacket@MACPayload^(0+128)
 12747  2517  0022               	movlb	2	; select bank2
 12748  2518  083F               	movf	_TxData^(0+256),w
 12749  2519  0021               	movlb	1	; select bank1
 12750  251A  00DB               	movwf	(??_SendPacket+1)^(0+128)
 12751  251B  085B               	movf	(??_SendPacket+1)^(0+128),w
 12752  251C  00D0               	movwf	MiMAC_SendPacket@MACPayloadLen^(0+128)
 12753  251D  319B  2356         	fcall	_MiMAC_SendPacket
 12754  251F  0021               	movlb	1	; select bank1
 12755  2520  00DC               	movwf	(??_SendPacket+2)^(0+128)
 12756  2521  085C               	movf	(??_SendPacket+2)^(0+128),w
 12757  2522  00DD               	movwf	SendPacket@status^(0+128)
 12758                           
 12759                           ;miwi_p2p.c: 1668: TxData = 0;
 12760  2523  0022               	movlb	2	; select bank2
 12761  2524  01BF               	clrf	_TxData^(0+256)
 12762                           
 12763                           ;miwi_p2p.c: 1670: return status;
 12764  2525  0021               	movlb	1	; select bank1
 12765  2526  085D               	movf	SendPacket@status^(0+128),w
 12766  2527  0008               	return
 12767  2528                     __end_of_SendPacket:	
 12768                           
 12769                           	psect	text33
 12770  1B56                     __ptext33:	
 12771 ;; *************** function _MiMAC_SendPacket *****************
 12772 ;; Defined at:
 12773 ;;		line 730 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  transParam      3   44[BANK1 ] struct .
 12776 ;;  MACPayload      1   47[BANK1 ] PTR unsigned char 
 12777 ;;		 -> TxBuffer(30), 
 12778 ;;  MACPayloadLe    1   48[BANK1 ] unsigned char 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;  i               1   53[BANK1 ] unsigned char 
 12781 ;;  TxIndex         1   52[BANK1 ] unsigned char 
 12782 ;; Return value:  Size  Location     Type
 12783 ;;                  1    wreg      unsigned char 
 12784 ;; Registers used:
 12785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12786 ;; Tracked objects:
 12787 ;;		On entry : 0/0
 12788 ;;		On exit  : 0/0
 12789 ;;		Unchanged: 0/0
 12790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12791 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12793 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12794 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12795 ;;Total ram usage:       10 bytes
 12796 ;; Hardware stack levels used:    1
 12797 ;; Hardware stack levels required when called:    9
 12798 ;; This function calls:
 12799 ;;		_TxPacket
 12800 ;; This function is called by:
 12801 ;;		_SendPacket
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           
 12806                           ;psect for function _MiMAC_SendPacket
 12807  1B56                     _MiMAC_SendPacket:	
 12808                           
 12809                           ;drv_mrf_miwi_89xa.c: 734: uint8_t i;
 12810                           ;drv_mrf_miwi_89xa.c: 735: uint8_t TxIndex;
 12811                           ;drv_mrf_miwi_89xa.c: 737: if( MACPayloadLen > 30 )
 12812                           
 12813                           ;incstack = 0
 12814                           ; Regs used in _MiMAC_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12815  1B56  301F               	movlw	31
 12816  1B57  0021               	movlb	1	; select bank1
 12817  1B58  0250               	subwf	MiMAC_SendPacket@MACPayloadLen^(0+128),w
 12818  1B59  1C03               	skipc
 12819  1B5A  2B5D               	goto	L3
 12820                           
 12821                           ;drv_mrf_miwi_89xa.c: 738: {
 12822                           ;drv_mrf_miwi_89xa.c: 739: return 0;
 12823  1B5B  3000               	movlw	0
 12824  1B5C  0008               	return
 12825  1B5D                     L3:	
 12826                           ;drv_mrf_miwi_89xa.c: 740: }
 12827                           ;drv_mrf_miwi_89xa.c: 745: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 12828                           
 12829  1B5D  1D4C               	btfss	MiMAC_SendPacket@transParam^(0+128),2
 12830  1B5E  1403               	setc
 12831  1B5F  1C03               	btfss	3,0
 12832  1B60  2B64               	goto	u4100
 12833  1B61  0021               	movlb	1	; select bank1
 12834  1B62  174C               	bsf	MiMAC_SendPacket@transParam^(0+128),6
 12835  1B63  2B66               	goto	l4906
 12836  1B64                     u4100:	
 12837  1B64  0021               	movlb	1	; select bank1
 12838  1B65  134C               	bcf	MiMAC_SendPacket@transParam^(0+128),6
 12839  1B66                     l4906:	
 12840                           
 12841                           ;drv_mrf_miwi_89xa.c: 749: transParam.flags.bits.sourcePrsnt = 1;
 12842  1B66  17CC               	bsf	MiMAC_SendPacket@transParam^(0+128),7
 12843                           
 12844                           ;drv_mrf_miwi_89xa.c: 752: if( transParam.flags.bits.packetType == 0x01 )
 12845  1B67  084C               	movf	MiMAC_SendPacket@transParam^(0+128),w
 12846  1B68  3903               	andlw	3
 12847  1B69  3A01               	xorlw	1
 12848  1B6A  1903               	btfsc	3,2
 12849                           
 12850                           ;drv_mrf_miwi_89xa.c: 753: {
 12851                           ;drv_mrf_miwi_89xa.c: 754: transParam.flags.bits.sourcePrsnt = 1;
 12852  1B6B  17CC               	bsf	MiMAC_SendPacket@transParam^(0+128),7
 12853                           
 12854                           ;drv_mrf_miwi_89xa.c: 755: }
 12855                           ;drv_mrf_miwi_89xa.c: 757: MACTxBuffer[0] = transParam.flags.Val;
 12856  1B6C  084C               	movf	MiMAC_SendPacket@transParam^(0+128),w
 12857  1B6D  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12858  1B6E  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12859  1B6F  0025               	movlb	5	; select bank5
 12860  1B70  00A0               	movwf	_MACTxBuffer^(0+640)	;volatile
 12861                           
 12862                           ;drv_mrf_miwi_89xa.c: 758: MACTxBuffer[1] = MACSeq++;
 12863  1B71  0020               	movlb	0	; select bank0
 12864  1B72  085D               	movf	_MACSeq,w
 12865  1B73  0021               	movlb	1	; select bank1
 12866  1B74  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12867  1B75  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12868  1B76  0025               	movlb	5	; select bank5
 12869  1B77  00A1               	movwf	(_MACTxBuffer^(0+640)+1)	;volatile
 12870  1B78  3001               	movlw	1
 12871  1B79  0021               	movlb	1	; select bank1
 12872  1B7A  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12873  1B7B  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12874  1B7C  0020               	movlb	0	; select bank0
 12875  1B7D  07DD               	addwf	_MACSeq,f
 12876                           
 12877                           ;drv_mrf_miwi_89xa.c: 761: TxIndex = 2;
 12878  1B7E  3002               	movlw	2
 12879  1B7F  0021               	movlb	1	; select bank1
 12880  1B80  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12881  1B81  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12882  1B82  00D4               	movwf	MiMAC_SendPacket@TxIndex^(0+128)
 12883                           
 12884                           ;drv_mrf_miwi_89xa.c: 763: if( transParam.flags.bits.destPrsnt )
 12885  1B83  1F4C               	btfss	MiMAC_SendPacket@transParam^(0+128),6
 12886  1B84  2BAB               	goto	l148
 12887                           
 12888                           ;drv_mrf_miwi_89xa.c: 764: {
 12889                           ;drv_mrf_miwi_89xa.c: 765: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 12890  1B85  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 12891  1B86                     l4928:	
 12892  1B86  0020               	movlb	0	; select bank0
 12893  1B87  0C58               	rrf	_MACInitParams,w
 12894  1B88  0021               	movlb	1	; select bank1
 12895  1B89  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12896  1B8A  0CD1               	rrf	??_MiMAC_SendPacket^(0+128),f
 12897  1B8B  0C51               	rrf	??_MiMAC_SendPacket^(0+128),w
 12898  1B8C  390F               	andlw	15
 12899  1B8D  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 12900  1B8E  1803               	btfsc	3,0
 12901  1B8F  2BAB               	goto	l148
 12902                           
 12903                           ;drv_mrf_miwi_89xa.c: 766: {
 12904                           ;drv_mrf_miwi_89xa.c: 767: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 12905  1B90  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 12906  1B91  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12907  1B92  01D2               	clrf	(??_MiMAC_SendPacket^(0+128)+1)
 12908  1B93  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12909  1B94  074D               	addwf	(low ((MiMAC_SendPacket@transParam| 0+1)))^(0+128),w
 12910  1B95  0086               	movwf	6
 12911  1B96  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 12912  1B97  3D4E               	addwfc	((low ((MiMAC_SendPacket@transParam| 0+1))+1))^(0+128),w
 12913  1B98  0087               	movwf	7
 12914  1B99  0801               	movf	1,w
 12915  1B9A  00D3               	movwf	(??_MiMAC_SendPacket+2)^(0+128)
 12916  1B9B  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 12917  1B9C  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 12918  1B9D  0086               	movwf	6
 12919  1B9E  3002               	movlw	2	; select bank5/6
 12920  1B9F  0087               	movwf	7
 12921  1BA0  0853               	movf	(??_MiMAC_SendPacket+2)^(0+128),w
 12922  1BA1  0081               	movwf	1
 12923  1BA2  3001               	movlw	1
 12924  1BA3  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12925  1BA4  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12926  1BA5  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 12927  1BA6  3001               	movlw	1
 12928  1BA7  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12929  1BA8  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12930  1BA9  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 12931  1BAA  2B86               	goto	l4928
 12932  1BAB                     l148:	
 12933                           ;drv_mrf_miwi_89xa.c: 771: {
 12934                           
 12935                           
 12936                           ;drv_mrf_miwi_89xa.c: 773: }
 12937                           ;drv_mrf_miwi_89xa.c: 775: if( transParam.flags.bits.sourcePrsnt )
 12938  1BAB  1FCC               	btfss	MiMAC_SendPacket@transParam^(0+128),7
 12939  1BAC  2BD3               	goto	l4940
 12940                           
 12941                           ;drv_mrf_miwi_89xa.c: 776: {
 12942                           ;drv_mrf_miwi_89xa.c: 777: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 12943  1BAD  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 12944  1BAE                     l4938:	
 12945  1BAE  0020               	movlb	0	; select bank0
 12946  1BAF  0C58               	rrf	_MACInitParams,w
 12947  1BB0  0021               	movlb	1	; select bank1
 12948  1BB1  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12949  1BB2  0CD1               	rrf	??_MiMAC_SendPacket^(0+128),f
 12950  1BB3  0C51               	rrf	??_MiMAC_SendPacket^(0+128),w
 12951  1BB4  390F               	andlw	15
 12952  1BB5  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 12953  1BB6  1803               	btfsc	3,0
 12954  1BB7  2BD3               	goto	l4940
 12955                           
 12956                           ;drv_mrf_miwi_89xa.c: 778: {
 12957                           ;drv_mrf_miwi_89xa.c: 779: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 12958  1BB8  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 12959  1BB9  0020               	movlb	0	; select bank0
 12960  1BBA  0759               	addwf	low ((_MACInitParams| 0+1)),w
 12961  1BBB  0021               	movlb	1	; select bank1
 12962  1BBC  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12963  1BBD  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12964  1BBE  0086               	movwf	6
 12965  1BBF  3001               	movlw	1	; select bank2/3
 12966  1BC0  0087               	movwf	7
 12967  1BC1  0801               	movf	1,w
 12968  1BC2  00D2               	movwf	(??_MiMAC_SendPacket+1)^(0+128)
 12969  1BC3  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 12970  1BC4  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 12971  1BC5  0086               	movwf	6
 12972  1BC6  3002               	movlw	2	; select bank5/6
 12973  1BC7  0087               	movwf	7
 12974  1BC8  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 12975  1BC9  0081               	movwf	1
 12976  1BCA  3001               	movlw	1
 12977  1BCB  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12978  1BCC  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12979  1BCD  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 12980  1BCE  3001               	movlw	1
 12981  1BCF  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 12982  1BD0  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 12983  1BD1  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 12984  1BD2  2BAE               	goto	l4938
 12985  1BD3                     l4940:	
 12986                           
 12987                           ;drv_mrf_miwi_89xa.c: 780: }
 12988                           ;drv_mrf_miwi_89xa.c: 782: }
 12989                           ;drv_mrf_miwi_89xa.c: 843: for(i = 0; i < MACPayloadLen; i++)
 12990  1BD3  01D5               	clrf	MiMAC_SendPacket@i^(0+128)
 12991  1BD4                     l4948:	
 12992  1BD4  0850               	movf	MiMAC_SendPacket@MACPayloadLen^(0+128),w
 12993  1BD5  0255               	subwf	MiMAC_SendPacket@i^(0+128),w
 12994  1BD6  1803               	btfsc	3,0
 12995  1BD7  2BF1               	goto	l4950
 12996                           
 12997                           ;drv_mrf_miwi_89xa.c: 844: {
 12998                           ;drv_mrf_miwi_89xa.c: 845: MACTxBuffer[TxIndex++] = MACPayload[i];
 12999  1BD8  0855               	movf	MiMAC_SendPacket@i^(0+128),w
 13000  1BD9  074F               	addwf	MiMAC_SendPacket@MACPayload^(0+128),w
 13001  1BDA  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 13002  1BDB  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 13003  1BDC  0086               	movwf	6
 13004  1BDD  3002               	movlw	2	; select bank4/5
 13005  1BDE  0087               	movwf	7
 13006  1BDF  0801               	movf	1,w
 13007  1BE0  00D2               	movwf	(??_MiMAC_SendPacket+1)^(0+128)
 13008  1BE1  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 13009  1BE2  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 13010  1BE3  0086               	movwf	6
 13011  1BE4  3002               	movlw	2	; select bank5/6
 13012  1BE5  0087               	movwf	7
 13013  1BE6  0852               	movf	(??_MiMAC_SendPacket+1)^(0+128),w
 13014  1BE7  0081               	movwf	1
 13015  1BE8  3001               	movlw	1
 13016  1BE9  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 13017  1BEA  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 13018  1BEB  07D4               	addwf	MiMAC_SendPacket@TxIndex^(0+128),f
 13019  1BEC  3001               	movlw	1
 13020  1BED  00D1               	movwf	??_MiMAC_SendPacket^(0+128)
 13021  1BEE  0851               	movf	??_MiMAC_SendPacket^(0+128),w
 13022  1BEF  07D5               	addwf	MiMAC_SendPacket@i^(0+128),f
 13023  1BF0  2BD4               	goto	l4948
 13024  1BF1                     l4950:	
 13025                           
 13026                           ;drv_mrf_miwi_89xa.c: 846: }
 13027                           ;drv_mrf_miwi_89xa.c: 848: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 13028  1BF1  3000               	movlw	0
 13029  1BF2  0020               	movlb	0	; select bank0
 13030  1BF3  18D8               	btfsc	_MACInitParams,1
 13031  1BF4  3001               	movlw	1
 13032  1BF5  0021               	movlb	1	; select bank1
 13033  1BF6  00B4               	movwf	TxPacket@CCA^(0+128)
 13034  1BF7  0854               	movf	MiMAC_SendPacket@TxIndex^(0+128),w
 13035  1BF8  319C  24CC         	fcall	_TxPacket
 13036  1BFA  0008               	return
 13037  1BFB                     __end_of_MiMAC_SendPacket:	
 13038                           
 13039                           	psect	text34
 13040  1CCC                     __ptext34:	
 13041 ;; *************** function _TxPacket *****************
 13042 ;; Defined at:
 13043 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;  TxPacketLen     1    wreg     unsigned char 
 13046 ;;  CCA             1   20[BANK1 ] unsigned char 
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;  TxPacketLen     1   41[BANK1 ] unsigned char 
 13049 ;;  allowedTxFai    1   39[BANK1 ] unsigned char 
 13050 ;;  t2              4   33[BANK1 ] struct _MIWI_TICK
 13051 ;;  t1              4   29[BANK1 ] struct _MIWI_TICK
 13052 ;;  rssival         1   43[BANK1 ] unsigned char 
 13053 ;;  i               1   42[BANK1 ] unsigned char 
 13054 ;;  status          1   40[BANK1 ] unsigned char 
 13055 ;;  reTry           1   38[BANK1 ] unsigned char 
 13056 ;;  CCARetries      1   37[BANK1 ] unsigned char 
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      unsigned char 
 13059 ;; Registers used:
 13060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13066 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;Total ram usage:       24 bytes
 13071 ;; Hardware stack levels used:    1
 13072 ;; Hardware stack levels required when called:    8
 13073 ;; This function calls:
 13074 ;;		_DELAY_10us
 13075 ;;		_MiWi_TickGet
 13076 ;;		_RegisterRead
 13077 ;;		_RegisterSet
 13078 ;;		_SetRFMode
 13079 ;;		_WriteFIFO
 13080 ;; This function is called by:
 13081 ;;		_MiMAC_SendPacket
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           
 13086                           ;psect for function _TxPacket
 13087  1CCC                     _TxPacket:	
 13088                           
 13089                           ;incstack = 0
 13090                           ; Regs used in _TxPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13091                           ;TxPacket@TxPacketLen stored from wreg
 13092  1CCC  0021               	movlb	1	; select bank1
 13093  1CCD  00C9               	movwf	TxPacket@TxPacketLen^(0+128)
 13094                           
 13095                           ;drv_mrf_miwi_89xa.c: 290: __nop();
 13096  1CCE  0000               	nop
 13097                           
 13098                           ;drv_mrf_miwi_89xa.c: 291: bool status;
 13099                           ;drv_mrf_miwi_89xa.c: 292: uint8_t i;
 13100                           ;drv_mrf_miwi_89xa.c: 293: MIWI_TICK t1, t2;
 13101                           ;drv_mrf_miwi_89xa.c: 295: uint8_t CCARetries;
 13102                           ;drv_mrf_miwi_89xa.c: 296: uint8_t rssival;
 13103                           ;drv_mrf_miwi_89xa.c: 300: uint8_t reTry = 3;
 13104  1CCF  3003               	movlw	3
 13105  1CD0  0021               	movlb	1	; select bank1
 13106  1CD1  00B5               	movwf	??_TxPacket^(0+128)
 13107  1CD2  0835               	movf	??_TxPacket^(0+128),w
 13108  1CD3  00C6               	movwf	TxPacket@reTry^(0+128)
 13109  1CD4                     l4828:	
 13110                           ;drv_mrf_miwi_89xa.c: 304: while( reTry-- )
 13111                           
 13112  1CD4  3001               	movlw	1
 13113  1CD5  02C6               	subwf	TxPacket@reTry^(0+128),f
 13114  1CD6  0A46               	incf	TxPacket@reTry^(0+128),w
 13115  1CD7  1903               	btfsc	3,2
 13116  1CD8  2D9F               	goto	l4830
 13117                           
 13118                           ;drv_mrf_miwi_89xa.c: 306: {
 13119                           ;drv_mrf_miwi_89xa.c: 307: uint8_t allowedTxFailure;
 13120                           ;drv_mrf_miwi_89xa.c: 308: allowedTxFailure = 0;
 13121  1CD9  01C7               	clrf	TxPacket@allowedTxFailure^(0+128)
 13122  1CDA                     l87:	
 13123                           ;drv_mrf_miwi_89xa.c: 310: Start_Transmitting:
 13124                           
 13125                           
 13126                           ;drv_mrf_miwi_89xa.c: 313: hasAck = 0;
 13127  1CDA  0020               	movlb	0	; select bank0
 13128  1CDB  01E5               	clrf	_hasAck	;volatile
 13129                           
 13130                           ;drv_mrf_miwi_89xa.c: 317: CCARetries = 0;
 13131  1CDC  0021               	movlb	1	; select bank1
 13132  1CDD  01C5               	clrf	TxPacket@CCARetries^(0+128)
 13133                           
 13134                           ;drv_mrf_miwi_89xa.c: 319: if( CCA )
 13135  1CDE  0834               	movf	TxPacket@CCA^(0+128),w
 13136  1CDF  1D03               	btfss	3,2
 13137  1CE0  2CF6               	goto	l4766
 13138  1CE1  2D06               	goto	l88
 13139  1CE2                     l4772:	
 13140                           
 13141                           ;drv_mrf_miwi_89xa.c: 327: {
 13142                           ;drv_mrf_miwi_89xa.c: 328: if(CCARetries++ > 4 )
 13143  1CE2  0845               	movf	TxPacket@CCARetries^(0+128),w
 13144  1CE3  0AC5               	incf	TxPacket@CCARetries^(0+128),f
 13145  1CE4  00B5               	movwf	??_TxPacket^(0+128)
 13146  1CE5  3005               	movlw	5
 13147  1CE6  0235               	subwf	??_TxPacket^(0+128),w
 13148  1CE7  1C03               	skipc
 13149  1CE8  2CEB               	goto	l4778
 13150                           
 13151                           ;drv_mrf_miwi_89xa.c: 329: {
 13152                           ;drv_mrf_miwi_89xa.c: 330: return 0;
 13153  1CE9  3000               	movlw	0
 13154  1CEA  0008               	return
 13155  1CEB                     l4778:	
 13156                           
 13157                           ;drv_mrf_miwi_89xa.c: 332: }
 13158                           ;drv_mrf_miwi_89xa.c: 333: DELAY_10us(1);
 13159  1CEB  3000               	movlw	0
 13160  1CEC  00AF               	movwf	(DELAY_10us@tenMicroSecondCounter+3)^(0+128)
 13161  1CED  3000               	movlw	0
 13162  1CEE  00AE               	movwf	(DELAY_10us@tenMicroSecondCounter+2)^(0+128)
 13163  1CEF  3000               	movlw	0
 13164  1CF0  00AD               	movwf	(DELAY_10us@tenMicroSecondCounter+1)^(0+128)
 13165  1CF1  3001               	movlw	1
 13166  1CF2  00AC               	movwf	DELAY_10us@tenMicroSecondCounter^(0+128)
 13167  1CF3  31AF  2775  319C   	fcall	_DELAY_10us
 13168  1CF6                     l4766:	
 13169                           ;drv_mrf_miwi_89xa.c: 320: {
 13170                           ;drv_mrf_miwi_89xa.c: 322: Start_CCA:
 13171                           
 13172                           ;drv_mrf_miwi_89xa.c: 334: goto Start_CCA;
 13173                           
 13174                           
 13175                           ;drv_mrf_miwi_89xa.c: 323: rssival = RegisterRead(0x2800>>8);
 13176  1CF6  3028               	movlw	40
 13177  1CF7  31A0  209F  319C   	fcall	_RegisterRead
 13178  1CFA  0021               	movlb	1	; select bank1
 13179  1CFB  00B5               	movwf	??_TxPacket^(0+128)
 13180  1CFC  0835               	movf	??_TxPacket^(0+128),w
 13181  1CFD  00CB               	movwf	TxPacket@rssival^(0+128)
 13182                           
 13183                           ;drv_mrf_miwi_89xa.c: 324: rssival = (rssival>>1);
 13184  1CFE  364B               	lsrf	TxPacket@rssival^(0+128),w
 13185  1CFF  00B5               	movwf	??_TxPacket^(0+128)
 13186  1D00  0835               	movf	??_TxPacket^(0+128),w
 13187  1D01  00CB               	movwf	TxPacket@rssival^(0+128)
 13188                           
 13189                           ;drv_mrf_miwi_89xa.c: 326: if( rssival > 65 )
 13190  1D02  3042               	movlw	66
 13191  1D03  024B               	subwf	TxPacket@rssival^(0+128),w
 13192  1D04  1803               	btfsc	3,0
 13193  1D05  2CE2               	goto	l4772
 13194  1D06                     l88:	
 13195                           
 13196                           ;drv_mrf_miwi_89xa.c: 335: }
 13197                           ;drv_mrf_miwi_89xa.c: 336: }
 13198                           ;drv_mrf_miwi_89xa.c: 343: INTCONbits.IOCIE = 0;
 13199  1D06  118B               	bcf	11,3	;volatile
 13200                           
 13201                           ;drv_mrf_miwi_89xa.c: 344: SetRFMode(0x20);
 13202  1D07  3020               	movlw	32
 13203  1D08  31A7  2752  319C   	fcall	_SetRFMode
 13204                           
 13205                           ;drv_mrf_miwi_89xa.c: 345: RegisterSet(0x1A00 | (0xC8) | 0x01);
 13206  1D0B  30C9               	movlw	201
 13207  1D0C  0021               	movlb	1	; select bank1
 13208  1D0D  00A3               	movwf	RegisterSet@setting^(0+128)
 13209  1D0E  301A               	movlw	26
 13210  1D0F  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13211  1D10  31AF  2725  319C   	fcall	_RegisterSet
 13212                           
 13213                           ;drv_mrf_miwi_89xa.c: 346: WriteFIFO(TxPacketLen);
 13214  1D13  0021               	movlb	1	; select bank1
 13215  1D14  0849               	movf	TxPacket@TxPacketLen^(0+128),w
 13216  1D15  31AE  26C6  319C   	fcall	_WriteFIFO
 13217                           
 13218                           ;drv_mrf_miwi_89xa.c: 347: for(i=0; i< TxPacketLen; i++)
 13219  1D18  0021               	movlb	1	; select bank1
 13220  1D19  01CA               	clrf	TxPacket@i^(0+128)
 13221  1D1A                     l4792:	
 13222  1D1A  0849               	movf	TxPacket@TxPacketLen^(0+128),w
 13223  1D1B  024A               	subwf	TxPacket@i^(0+128),w
 13224  1D1C  1803               	btfsc	3,0
 13225  1D1D  2D2D               	goto	l4794
 13226                           
 13227                           ;drv_mrf_miwi_89xa.c: 348: {
 13228                           ;drv_mrf_miwi_89xa.c: 349: WriteFIFO(MACTxBuffer[i]);
 13229  1D1E  084A               	movf	TxPacket@i^(0+128),w
 13230  1D1F  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 13231  1D20  0086               	movwf	6
 13232  1D21  3002               	movlw	2	; select bank5/6
 13233  1D22  0087               	movwf	7
 13234  1D23  0801               	movf	1,w
 13235  1D24  31AE  26C6  319C   	fcall	_WriteFIFO
 13236  1D27  3001               	movlw	1
 13237  1D28  0021               	movlb	1	; select bank1
 13238  1D29  00B5               	movwf	??_TxPacket^(0+128)
 13239  1D2A  0835               	movf	??_TxPacket^(0+128),w
 13240  1D2B  07CA               	addwf	TxPacket@i^(0+128),f
 13241  1D2C  2D1A               	goto	l4792
 13242  1D2D                     l4794:	
 13243                           
 13244                           ;drv_mrf_miwi_89xa.c: 350: }
 13245                           ;drv_mrf_miwi_89xa.c: 351: SetRFMode(0x80);
 13246  1D2D  3080               	movlw	128
 13247  1D2E  31A7  2752  319C   	fcall	_SetRFMode
 13248                           
 13249                           ;drv_mrf_miwi_89xa.c: 355: INTCONbits.IOCIE = 1;
 13250  1D31  158B               	bsf	11,3	;volatile
 13251  1D32                     l4798:	
 13252                           ;drv_mrf_miwi_89xa.c: 357: {
 13253                           
 13254                           ;drv_mrf_miwi_89xa.c: 356: while((IRQ1_Received == 0) && (IOCBFbits.IOCBF3 == 0) )
 13255                           
 13256  1D32  0020               	movlb	0	; select bank0
 13257  1D33  085C               	movf	_IRQ1_Received,w	;volatile
 13258  1D34  1D03               	btfss	3,2
 13259  1D35  2D39               	goto	l4802
 13260  1D36  0027               	movlb	7	; select bank7
 13261  1D37  1D96               	btfss	22,3	;volatile
 13262  1D38  2D32               	goto	l4798
 13263  1D39                     l4802:	
 13264                           
 13265                           ;drv_mrf_miwi_89xa.c: 359: };
 13266                           ;drv_mrf_miwi_89xa.c: 363: IRQ1_Received = 0;
 13267  1D39  0020               	movlb	0	; select bank0
 13268  1D3A  01DC               	clrf	_IRQ1_Received	;volatile
 13269                           
 13270                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x20);
 13271  1D3B  3020               	movlw	32
 13272  1D3C  31A7  2752  319C   	fcall	_SetRFMode
 13273                           
 13274                           ;drv_mrf_miwi_89xa.c: 365: SetRFMode(0x60);
 13275  1D3F  3060               	movlw	96
 13276  1D40  31A7  2752  319C   	fcall	_SetRFMode
 13277                           
 13278                           ;drv_mrf_miwi_89xa.c: 368: if( (MACTxBuffer[0] & 0x20) > 0 )
 13279  1D43  0025               	movlb	5	; select bank5
 13280  1D44  1EA0               	btfss	_MACTxBuffer^(0+640),5	;volatile
 13281  1D45  2D9B               	goto	l101
 13282                           
 13283                           ;drv_mrf_miwi_89xa.c: 369: {
 13284                           ;drv_mrf_miwi_89xa.c: 370: TxMACSeq = MACTxBuffer[1];
 13285  1D46  0821               	movf	(_MACTxBuffer^(0+640)+1),w	;volatile
 13286  1D47  0021               	movlb	1	; select bank1
 13287  1D48  00B5               	movwf	??_TxPacket^(0+128)
 13288  1D49  0835               	movf	??_TxPacket^(0+128),w
 13289  1D4A  0020               	movlb	0	; select bank0
 13290  1D4B  00E4               	movwf	_TxMACSeq
 13291                           
 13292                           ;drv_mrf_miwi_89xa.c: 371: t1 = MiWi_TickGet();
 13293  1D4C  31A4  2498  319C   	fcall	_MiWi_TickGet
 13294  1D4F  0021               	movlb	1	; select bank1
 13295  1D50  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 13296  1D51  00C0               	movwf	(TxPacket@t1+3)^(0+128)
 13297  1D52  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 13298  1D53  00BF               	movwf	(TxPacket@t1+2)^(0+128)
 13299  1D54  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 13300  1D55  00BE               	movwf	(TxPacket@t1+1)^(0+128)
 13301  1D56  0820               	movf	?_MiWi_TickGet^(0+128),w
 13302  1D57  00BD               	movwf	TxPacket@t1^(0+128)
 13303  1D58                     l4814:	
 13304                           ;drv_mrf_miwi_89xa.c: 372: while(1)
 13305                           
 13306                           
 13307                           ;drv_mrf_miwi_89xa.c: 373: {
 13308                           ;drv_mrf_miwi_89xa.c: 374: if( hasAck )
 13309  1D58  0020               	movlb	0	; select bank0
 13310  1D59  0865               	movf	_hasAck,w	;volatile
 13311  1D5A  1D03               	btfss	3,2
 13312  1D5B  2D9B               	goto	l101
 13313                           
 13314                           ;drv_mrf_miwi_89xa.c: 378: }
 13315                           ;drv_mrf_miwi_89xa.c: 379: t2 = MiWi_TickGet();
 13316                           
 13317                           ;drv_mrf_miwi_89xa.c: 377: goto TX_END_HERE;
 13318                           
 13319                           ;drv_mrf_miwi_89xa.c: 375: {
 13320                           ;drv_mrf_miwi_89xa.c: 376: status = 1;
 13321  1D5C  31A4  2498  319C   	fcall	_MiWi_TickGet
 13322  1D5F  0021               	movlb	1	; select bank1
 13323  1D60  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 13324  1D61  00C4               	movwf	(TxPacket@t2+3)^(0+128)
 13325  1D62  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 13326  1D63  00C3               	movwf	(TxPacket@t2+2)^(0+128)
 13327  1D64  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 13328  1D65  00C2               	movwf	(TxPacket@t2+1)^(0+128)
 13329  1D66  0820               	movf	?_MiWi_TickGet^(0+128),w
 13330  1D67  00C1               	movwf	TxPacket@t2^(0+128)
 13331                           
 13332                           ;drv_mrf_miwi_89xa.c: 380: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 13333  1D68  0841               	movf	TxPacket@t2^(0+128),w
 13334  1D69  00B5               	movwf	??_TxPacket^(0+128)
 13335  1D6A  0842               	movf	(TxPacket@t2+1)^(0+128),w
 13336  1D6B  00B6               	movwf	(??_TxPacket^(0+128)+1)
 13337  1D6C  0843               	movf	(TxPacket@t2+2)^(0+128),w
 13338  1D6D  00B7               	movwf	(??_TxPacket^(0+128)+2)
 13339  1D6E  0844               	movf	(TxPacket@t2+3)^(0+128),w
 13340  1D6F  00B8               	movwf	(??_TxPacket^(0+128)+3)
 13341  1D70  093D               	comf	TxPacket@t1^(0+128),w
 13342  1D71  00B9               	movwf	(??_TxPacket+4)^(0+128)
 13343  1D72  093E               	comf	(TxPacket@t1+1)^(0+128),w
 13344  1D73  00BA               	movwf	((??_TxPacket+4)^(0+128)+1)
 13345  1D74  093F               	comf	(TxPacket@t1+2)^(0+128),w
 13346  1D75  00BB               	movwf	((??_TxPacket+4)^(0+128)+2)
 13347  1D76  0940               	comf	(TxPacket@t1+3)^(0+128),w
 13348  1D77  00BC               	movwf	((??_TxPacket+4)^(0+128)+3)
 13349  1D78  0AB9               	incf	(??_TxPacket+4)^(0+128),f
 13350  1D79  1903               	skipnz
 13351  1D7A  0ABA               	incf	((??_TxPacket+4)^(0+128)+1),f
 13352  1D7B  1903               	skipnz
 13353  1D7C  0ABB               	incf	((??_TxPacket+4)^(0+128)+2),f
 13354  1D7D  1903               	skipnz
 13355  1D7E  0ABC               	incf	((??_TxPacket+4)^(0+128)+3),f
 13356  1D7F  0839               	movf	(??_TxPacket+4)^(0+128),w
 13357  1D80  07B5               	addwf	??_TxPacket^(0+128),f
 13358  1D81  083A               	movf	(??_TxPacket+5)^(0+128),w
 13359  1D82  3DB6               	addwfc	(??_TxPacket^(0+128)+1),f
 13360  1D83  083B               	movf	(??_TxPacket+6)^(0+128),w
 13361  1D84  3DB7               	addwfc	(??_TxPacket^(0+128)+2),f
 13362  1D85  083C               	movf	(??_TxPacket+7)^(0+128),w
 13363  1D86  3DB8               	addwfc	(??_TxPacket^(0+128)+3),f
 13364  1D87  0838               	movf	(??_TxPacket^(0+128)+3),w
 13365  1D88  1D03               	btfss	3,2
 13366  1D89  2D93               	goto	l4824
 13367  1D8A  0837               	movf	(??_TxPacket^(0+128)+2),w
 13368  1D8B  1D03               	btfss	3,2
 13369  1D8C  2D93               	goto	l4824
 13370  1D8D  300A               	movlw	10
 13371  1D8E  0235               	subwf	??_TxPacket^(0+128),w
 13372  1D8F  303D               	movlw	61
 13373  1D90  3B36               	subwfb	(??_TxPacket^(0+128)+1),w
 13374  1D91  1C03               	btfss	3,0
 13375  1D92  2D58               	goto	l4814
 13376  1D93                     l4824:	
 13377                           ;drv_mrf_miwi_89xa.c: 381: {
 13378                           ;drv_mrf_miwi_89xa.c: 382: break;
 13379                           
 13380                           
 13381                           ;drv_mrf_miwi_89xa.c: 383: }
 13382                           ;drv_mrf_miwi_89xa.c: 384: }
 13383                           ;drv_mrf_miwi_89xa.c: 386: if(allowedTxFailure++ <= 3)
 13384  1D93  0847               	movf	TxPacket@allowedTxFailure^(0+128),w
 13385  1D94  0AC7               	incf	TxPacket@allowedTxFailure^(0+128),f
 13386  1D95  00B5               	movwf	??_TxPacket^(0+128)
 13387  1D96  3004               	movlw	4
 13388  1D97  0235               	subwf	??_TxPacket^(0+128),w
 13389  1D98  1C03               	btfss	3,0
 13390  1D99  2CDA               	goto	l87
 13391  1D9A  2CD4               	goto	l4828
 13392  1D9B                     l101:	
 13393                           ;drv_mrf_miwi_89xa.c: 389: }
 13394                           
 13395                           ;drv_mrf_miwi_89xa.c: 387: goto Start_Transmitting;
 13396                           
 13397                           
 13398                           ;drv_mrf_miwi_89xa.c: 390: else
 13399                           ;drv_mrf_miwi_89xa.c: 392: {
 13400                           ;drv_mrf_miwi_89xa.c: 393: status = 1;
 13401  1D9B  0021               	movlb	1	; select bank1
 13402  1D9C  01C8               	clrf	TxPacket@status^(0+128)
 13403  1D9D  0AC8               	incf	TxPacket@status^(0+128),f
 13404                           
 13405                           ;drv_mrf_miwi_89xa.c: 394: goto TX_END_HERE;
 13406  1D9E  2DA0               	goto	l4832
 13407  1D9F                     l4830:	
 13408                           
 13409                           ;drv_mrf_miwi_89xa.c: 395: }
 13410                           ;drv_mrf_miwi_89xa.c: 396: }
 13411                           ;drv_mrf_miwi_89xa.c: 398: status = 0;
 13412  1D9F  01C8               	clrf	TxPacket@status^(0+128)
 13413  1DA0                     l4832:	
 13414                           ;drv_mrf_miwi_89xa.c: 399: TX_END_HERE:
 13415                           
 13416                           
 13417                           ;drv_mrf_miwi_89xa.c: 400: return status;
 13418  1DA0  0848               	movf	TxPacket@status^(0+128),w
 13419  1DA1  0008               	return
 13420  1DA2                     __end_of_TxPacket:	
 13421                           
 13422                           	psect	text35
 13423  2EC6                     __ptext35:	
 13424 ;; *************** function _WriteFIFO *****************
 13425 ;; Defined at:
 13426 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  Data            1    wreg     unsigned char 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;  Data            1    3[BANK1 ] unsigned char 
 13431 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0, pclath, cstack
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13442 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;Total ram usage:        2 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    6
 13448 ;; This function calls:
 13449 ;;		_SPIPut
 13450 ;; This function is called by:
 13451 ;;		_TxPacket
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           
 13456                           ;psect for function _WriteFIFO
 13457  2EC6                     _WriteFIFO:	
 13458                           
 13459                           ;incstack = 0
 13460                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
 13461                           ;WriteFIFO@Data stored from wreg
 13462  2EC6  0021               	movlb	1	; select bank1
 13463  2EC7  00A3               	movwf	WriteFIFO@Data^(0+128)
 13464                           
 13465                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCONbits.IOCIE;
 13466  2EC8  3000               	movlw	0
 13467  2EC9  198B               	btfsc	11,3	;volatile
 13468  2ECA  3001               	movlw	1
 13469  2ECB  00A4               	movwf	WriteFIFO@IRQ1select^(0+128)
 13470                           
 13471                           ;drv_mrf_miwi_89xa.c: 253: INTCONbits.IOCIE = 0;
 13472  2ECC  118B               	bcf	11,3	;volatile
 13473                           
 13474                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 13475  2ECD  0022               	movlb	2	; select bank2
 13476  2ECE  110E               	bcf	14,2	;volatile
 13477                           
 13478                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 13479  2ECF  0021               	movlb	1	; select bank1
 13480  2ED0  0823               	movf	WriteFIFO@Data^(0+128),w
 13481  2ED1  31AE  26DC         	fcall	_SPIPut
 13482                           
 13483                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 13484  2ED3  0022               	movlb	2	; select bank2
 13485  2ED4  150E               	bsf	14,2	;volatile
 13486                           
 13487                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.IOCIE = IRQ1select;
 13488  2ED5  0021               	movlb	1	; select bank1
 13489  2ED6  0C24               	rrf	WriteFIFO@IRQ1select^(0+128),w
 13490  2ED7  1C03               	skipc
 13491  2ED8  118B               	bcf	11,3	;volatile
 13492  2ED9  1803               	skipnc
 13493  2EDA  158B               	bsf	11,3	;volatile
 13494  2EDB  0008               	return
 13495  2EDC                     __end_of_WriteFIFO:	
 13496                           
 13497                           	psect	text36
 13498  2752                     __ptext36:	
 13499 ;; *************** function _SetRFMode *****************
 13500 ;; Defined at:
 13501 ;;		line 669 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;  mode            1    wreg     unsigned char 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  mode            1    7[BANK1 ] unsigned char 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      void 
 13508 ;; Registers used:
 13509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;Total ram usage:        2 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    7
 13522 ;; This function calls:
 13523 ;;		_RegisterSet
 13524 ;; This function is called by:
 13525 ;;		_TxPacket
 13526 ;;		_MiMAC_SetChannel
 13527 ;;		_MiMAC_Init
 13528 ;; This function uses a non-reentrant model
 13529 ;;
 13530                           
 13531                           
 13532                           ;psect for function _SetRFMode
 13533  2752                     _SetRFMode:	
 13534                           
 13535                           ;incstack = 0
 13536                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13537                           ;SetRFMode@mode stored from wreg
 13538  2752  0021               	movlb	1	; select bank1
 13539  2753  00A7               	movwf	SetRFMode@mode^(0+128)
 13540                           
 13541                           ;drv_mrf_miwi_89xa.c: 671: switch (mode) {
 13542  2754  2F96               	goto	l4732
 13543  2755                     l4710:	
 13544                           ;drv_mrf_miwi_89xa.c: 672: case 0x80:
 13545                           
 13546                           
 13547                           ;drv_mrf_miwi_89xa.c: 673: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 13548  2755  308E               	movlw	142
 13549  2756  00A3               	movwf	RegisterSet@setting^(0+128)
 13550  2757  3000               	movlw	0
 13551  2758  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13552  2759  31AF  2725         	fcall	_RegisterSet
 13553                           
 13554                           ;drv_mrf_miwi_89xa.c: 674: RF_Mode = 0x80;
 13555  275B  3080               	movlw	128
 13556  275C  0021               	movlb	1	; select bank1
 13557  275D  00A6               	movwf	??_SetRFMode^(0+128)
 13558  275E  0826               	movf	??_SetRFMode^(0+128),w
 13559  275F  0020               	movlb	0	; select bank0
 13560  2760  00E0               	movwf	_RF_Mode
 13561                           
 13562                           ;drv_mrf_miwi_89xa.c: 675: break;
 13563  2761  0008               	return
 13564  2762                     l4714:	
 13565                           ;drv_mrf_miwi_89xa.c: 676: case 0x60:
 13566                           
 13567                           
 13568                           ;drv_mrf_miwi_89xa.c: 677: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 13569  2762  306E               	movlw	110
 13570  2763  0021               	movlb	1	; select bank1
 13571  2764  00A3               	movwf	RegisterSet@setting^(0+128)
 13572  2765  3000               	movlw	0
 13573  2766  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13574  2767  31AF  2725         	fcall	_RegisterSet
 13575                           
 13576                           ;drv_mrf_miwi_89xa.c: 678: RF_Mode = 0x60;
 13577  2769  3060               	movlw	96
 13578  276A  0021               	movlb	1	; select bank1
 13579  276B  00A6               	movwf	??_SetRFMode^(0+128)
 13580  276C  0826               	movf	??_SetRFMode^(0+128),w
 13581  276D  0020               	movlb	0	; select bank0
 13582  276E  00E0               	movwf	_RF_Mode
 13583                           
 13584                           ;drv_mrf_miwi_89xa.c: 679: break;
 13585  276F  0008               	return
 13586  2770                     l4718:	
 13587                           ;drv_mrf_miwi_89xa.c: 680: case 0x40:
 13588                           
 13589                           
 13590                           ;drv_mrf_miwi_89xa.c: 681: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 13591  2770  304E               	movlw	78
 13592  2771  0021               	movlb	1	; select bank1
 13593  2772  00A3               	movwf	RegisterSet@setting^(0+128)
 13594  2773  3000               	movlw	0
 13595  2774  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13596  2775  31AF  2725         	fcall	_RegisterSet
 13597                           
 13598                           ;drv_mrf_miwi_89xa.c: 682: RF_Mode = 0x40;
 13599  2777  3040               	movlw	64
 13600  2778  0021               	movlb	1	; select bank1
 13601  2779  00A6               	movwf	??_SetRFMode^(0+128)
 13602  277A  0826               	movf	??_SetRFMode^(0+128),w
 13603  277B  0020               	movlb	0	; select bank0
 13604  277C  00E0               	movwf	_RF_Mode
 13605                           
 13606                           ;drv_mrf_miwi_89xa.c: 683: break;
 13607  277D  0008               	return
 13608  277E                     l4722:	
 13609                           ;drv_mrf_miwi_89xa.c: 684: case 0x20:
 13610                           
 13611                           
 13612                           ;drv_mrf_miwi_89xa.c: 685: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 13613  277E  302E               	movlw	46
 13614  277F  0021               	movlb	1	; select bank1
 13615  2780  00A3               	movwf	RegisterSet@setting^(0+128)
 13616  2781  3000               	movlw	0
 13617  2782  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13618  2783  31AF  2725         	fcall	_RegisterSet
 13619                           
 13620                           ;drv_mrf_miwi_89xa.c: 686: RF_Mode = 0x20;
 13621  2785  3020               	movlw	32
 13622  2786  0021               	movlb	1	; select bank1
 13623  2787  00A6               	movwf	??_SetRFMode^(0+128)
 13624  2788  0826               	movf	??_SetRFMode^(0+128),w
 13625  2789  0020               	movlb	0	; select bank0
 13626  278A  00E0               	movwf	_RF_Mode
 13627                           
 13628                           ;drv_mrf_miwi_89xa.c: 687: break;
 13629  278B  0008               	return
 13630  278C                     l4726:	
 13631                           ;drv_mrf_miwi_89xa.c: 688: case 0x00:
 13632                           
 13633                           
 13634                           ;drv_mrf_miwi_89xa.c: 689: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 13635  278C  300E               	movlw	14
 13636  278D  0021               	movlb	1	; select bank1
 13637  278E  00A3               	movwf	RegisterSet@setting^(0+128)
 13638  278F  3000               	movlw	0
 13639  2790  00A4               	movwf	(RegisterSet@setting^(0+128)+1)
 13640  2791  31AF  2725         	fcall	_RegisterSet
 13641                           
 13642                           ;drv_mrf_miwi_89xa.c: 690: RF_Mode = 0x00;
 13643  2793  0020               	movlb	0	; select bank0
 13644  2794  01E0               	clrf	_RF_Mode
 13645                           
 13646                           ;drv_mrf_miwi_89xa.c: 692: }
 13647                           
 13648                           ;drv_mrf_miwi_89xa.c: 691: break;
 13649  2795  0008               	return
 13650  2796                     l4732:	
 13651  2796  0021               	movlb	1	; select bank1
 13652  2797  0827               	movf	SetRFMode@mode^(0+128),w
 13653                           
 13654                           ; Switch size 1, requested type "space"
 13655                           ; Number of cases is 5, Range of values is 0 to 128
 13656                           ; switch strategies available:
 13657                           ; Name         Instructions Cycles
 13658                           ; simple_byte           16     9 (average)
 13659                           ; jumptable            260     6 (fixed)
 13660                           ;	Chosen strategy is simple_byte
 13661  2798  3A00               	xorlw	0	; case 0
 13662  2799  1903               	skipnz
 13663  279A  2F8C               	goto	l4726
 13664  279B  3A20               	xorlw	32	; case 32
 13665  279C  1903               	skipnz
 13666  279D  2F7E               	goto	l4722
 13667  279E  3A60               	xorlw	96	; case 64
 13668  279F  1903               	skipnz
 13669  27A0  2F70               	goto	l4718
 13670  27A1  3A20               	xorlw	32	; case 96
 13671  27A2  1903               	skipnz
 13672  27A3  2F62               	goto	l4714
 13673  27A4  3AE0               	xorlw	224	; case 128
 13674  27A5  1903               	skipnz
 13675  27A6  2F55               	goto	l4710
 13676  27A7  2FA8               	goto	l138
 13677  27A8                     l138:	
 13678  27A8  0008               	return
 13679  27A9                     __end_of_SetRFMode:	
 13680                           
 13681                           	psect	text37
 13682  2F25                     __ptext37:	
 13683 ;; *************** function _RegisterSet *****************
 13684 ;; Defined at:
 13685 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  setting         2    3[BANK1 ] unsigned int 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;  IRQ1select      1    5[BANK1 ] unsigned char 
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg, status,2, status,0, pclath, cstack
 13694 ;; Tracked objects:
 13695 ;;		On entry : 0/0
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13699 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13700 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;Total ram usage:        3 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; Hardware stack levels required when called:    6
 13706 ;; This function calls:
 13707 ;;		_SPIPut
 13708 ;; This function is called by:
 13709 ;;		_TxPacket
 13710 ;;		_MiMAC_SetChannel
 13711 ;;		_MiMAC_Init
 13712 ;;		_SetRFMode
 13713 ;;		_MiMAC_SetPower
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           
 13718                           ;psect for function _RegisterSet
 13719  2F25                     _RegisterSet:	
 13720                           
 13721                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCONbits.IOCIE;
 13722                           
 13723                           ;incstack = 0
 13724                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
 13725  2F25  3000               	movlw	0
 13726  2F26  198B               	btfsc	11,3	;volatile
 13727  2F27  3001               	movlw	1
 13728  2F28  0021               	movlb	1	; select bank1
 13729  2F29  00A5               	movwf	RegisterSet@IRQ1select^(0+128)
 13730                           
 13731                           ;drv_mrf_miwi_89xa.c: 172: INTCONbits.IOCIE = 0;
 13732  2F2A  118B               	bcf	11,3	;volatile
 13733                           
 13734                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 13735  2F2B  0022               	movlb	2	; select bank2
 13736  2F2C  1190               	bcf	16,3	;volatile
 13737                           
 13738                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 13739  2F2D  0021               	movlb	1	; select bank1
 13740  2F2E  0824               	movf	(RegisterSet@setting+1)^(0+128),w
 13741  2F2F  31AE  26DC  31AF   	fcall	_SPIPut
 13742                           
 13743                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 13744  2F32  0021               	movlb	1	; select bank1
 13745  2F33  0823               	movf	RegisterSet@setting^(0+128),w
 13746  2F34  31AE  26DC         	fcall	_SPIPut
 13747                           
 13748                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 13749  2F36  0022               	movlb	2	; select bank2
 13750  2F37  1590               	bsf	16,3	;volatile
 13751                           
 13752                           ;drv_mrf_miwi_89xa.c: 177: INTCONbits.IOCIE = IRQ1select;
 13753  2F38  0021               	movlb	1	; select bank1
 13754  2F39  0C25               	rrf	RegisterSet@IRQ1select^(0+128),w
 13755  2F3A  1C03               	skipc
 13756  2F3B  118B               	bcf	11,3	;volatile
 13757  2F3C  1803               	skipnc
 13758  2F3D  158B               	bsf	11,3	;volatile
 13759  2F3E  0008               	return
 13760  2F3F                     __end_of_RegisterSet:	
 13761                           
 13762                           	psect	text38
 13763  209F                     __ptext38:	
 13764 ;; *************** function _RegisterRead *****************
 13765 ;; Defined at:
 13766 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;  address         1    wreg     unsigned char 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  address         1    6[BANK1 ] unsigned char 
 13771 ;;  IRQ1select      1    5[BANK1 ] unsigned char 
 13772 ;;  value           1    4[BANK1 ] unsigned char 
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  1    wreg      unsigned char 
 13775 ;; Registers used:
 13776 ;;		wreg, status,2, status,0, pclath, cstack
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;Total ram usage:        4 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:    7
 13789 ;; This function calls:
 13790 ;;		_SPIGet
 13791 ;;		_SPIPut
 13792 ;; This function is called by:
 13793 ;;		_TxPacket
 13794 ;;		_getReceiverBW
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           
 13799                           ;psect for function _RegisterRead
 13800  209F                     _RegisterRead:	
 13801                           
 13802                           ;incstack = 0
 13803                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
 13804                           ;RegisterRead@address stored from wreg
 13805  209F  0021               	movlb	1	; select bank1
 13806  20A0  00A6               	movwf	RegisterRead@address^(0+128)
 13807                           
 13808                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 13809                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCONbits.IOCIE;
 13810  20A1  3000               	movlw	0
 13811  20A2  198B               	btfsc	11,3	;volatile
 13812  20A3  3001               	movlw	1
 13813  20A4  00A5               	movwf	RegisterRead@IRQ1select^(0+128)
 13814                           
 13815                           ;drv_mrf_miwi_89xa.c: 210: INTCONbits.IOCIE = 0;
 13816  20A5  118B               	bcf	11,3	;volatile
 13817                           
 13818                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 13819  20A6  0022               	movlb	2	; select bank2
 13820  20A7  1190               	bcf	16,3	;volatile
 13821                           
 13822                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 13823  20A8  0021               	movlb	1	; select bank1
 13824  20A9  0826               	movf	RegisterRead@address^(0+128),w
 13825  20AA  3840               	iorlw	64
 13826  20AB  00A3               	movwf	??_RegisterRead^(0+128)
 13827  20AC  0823               	movf	??_RegisterRead^(0+128),w
 13828  20AD  00A6               	movwf	RegisterRead@address^(0+128)
 13829                           
 13830                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 13831  20AE  0826               	movf	RegisterRead@address^(0+128),w
 13832  20AF  31AE  26DC  31A0   	fcall	_SPIPut
 13833                           
 13834                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 13835  20B2  31AD  25B4         	fcall	_SPIGet
 13836  20B4  0021               	movlb	1	; select bank1
 13837  20B5  00A3               	movwf	??_RegisterRead^(0+128)
 13838  20B6  0823               	movf	??_RegisterRead^(0+128),w
 13839  20B7  00A4               	movwf	RegisterRead@value^(0+128)
 13840                           
 13841                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 13842  20B8  0022               	movlb	2	; select bank2
 13843  20B9  1590               	bsf	16,3	;volatile
 13844                           
 13845                           ;drv_mrf_miwi_89xa.c: 216: INTCONbits.IOCIE = IRQ1select;
 13846  20BA  0021               	movlb	1	; select bank1
 13847  20BB  0C25               	rrf	RegisterRead@IRQ1select^(0+128),w
 13848  20BC  1C03               	skipc
 13849  20BD  118B               	bcf	11,3	;volatile
 13850  20BE  1803               	skipnc
 13851  20BF  158B               	bsf	11,3	;volatile
 13852                           
 13853                           ;drv_mrf_miwi_89xa.c: 222: return value;
 13854  20C0  0824               	movf	RegisterRead@value^(0+128),w
 13855  20C1  0008               	return
 13856  20C2                     __end_of_RegisterRead:	
 13857                           
 13858                           	psect	text39
 13859  2F75                     __ptext39:	
 13860 ;; *************** function _DELAY_10us *****************
 13861 ;; Defined at:
 13862 ;;		line 46 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  tenMicroSeco    4   12[BANK1 ] unsigned long 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;  cyclesRequir    4   16[BANK1 ] volatile long 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg, status,2, status,0, pclath, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13876 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;Total ram usage:        8 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    6
 13883 ;; This function calls:
 13884 ;;		___lmul
 13885 ;; This function is called by:
 13886 ;;		_TxPacket
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           
 13891                           ;psect for function _DELAY_10us
 13892  2F75                     _DELAY_10us:	
 13893                           
 13894                           ;delay.c: 52: {
 13895                           ;delay.c: 58: }
 13896                           
 13897                           ;incstack = 0
 13898                           ; Regs used in _DELAY_10us: [wreg+status,2+status,0+pclath+cstack]
 13899  2F75  0008               	return
 13900  2F76                     l611:	
 13901                           ;delay.c: 74: else
 13902                           ;delay.c: 75: {
 13903                           ;delay.c: 78: while (cyclesRequiredForEntireDelay>0)
 13904                           
 13905                           ;delay.c: 71: {
 13906                           ;delay.c: 73: }
 13907                           
 13908                           ;delay.c: 70: if (cyclesRequiredForEntireDelay <= 45)
 13909                           
 13910                           ;delay.c: 68: cyclesRequiredForEntireDelay -= (153 + 22);
 13911                           
 13912                           ;delay.c: 59: else
 13913                           ;delay.c: 60: {
 13914                           ;delay.c: 64: cyclesRequiredForEntireDelay = (uint32_t)(((10000000)/4)/100000) * tenMicr
      +                          oSecondCounter;
 13915                           
 13916                           
 13917                           ;delay.c: 79: {
 13918                           ;delay.c: 80: __nop();
 13919  2F76  0000               	nop
 13920                           
 13921                           ;delay.c: 81: cyclesRequiredForEntireDelay -= 42;
 13922  2F77  30D6               	movlw	214
 13923  2F78  0021               	movlb	1	; select bank1
 13924  2F79  07B0               	addwf	DELAY_10us@cyclesRequiredForEntireDelay^(0+128),f	;volatile
 13925  2F7A  30FF               	movlw	255
 13926  2F7B  3DB1               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)^(0+128),f	;volatile
 13927  2F7C  30FF               	movlw	255
 13928  2F7D  3DB2               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)^(0+128),f	;volatile
 13929  2F7E  30FF               	movlw	255
 13930  2F7F  3DB3               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),f	;volatile
 13931  2F80  1BB3               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),7	;volatile
 13932  2F81  0008               	return
 13933  2F82  0833               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)^(0+128),w	;volatile
 13934  2F83  1D03               	btfss	3,2
 13935  2F84  2F76               	goto	l611
 13936  2F85  0832               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+2)^(0+128),w	;volatile
 13937  2F86  1D03               	btfss	3,2
 13938  2F87  2F76               	goto	l611
 13939  2F88  0831               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+1)^(0+128),w	;volatile
 13940  2F89  1D03               	btfss	3,2
 13941  2F8A  2F76               	goto	l611
 13942  2F8B  3001               	movlw	1
 13943  2F8C  0230               	subwf	DELAY_10us@cyclesRequiredForEntireDelay^(0+128),w	;volatile
 13944  2F8D  1C03               	btfss	3,0
 13945  2F8E  0008               	return
 13946  2F8F  2F76               	goto	l611
 13947  2F90                     __end_of_DELAY_10us:	
 13948                           
 13949                           	psect	text40
 13950  12B5                     __ptext40:	
 13951 ;; *************** function _MiMAC_ReceivedPacket *****************
 13952 ;; Defined at:
 13953 ;;		line 853 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;  PayloadIndex    1   27[BANK1 ] unsigned char 
 13958 ;;  j               1    0        unsigned char 
 13959 ;;  currentTick     4   23[BANK1 ] struct _MIWI_TICK
 13960 ;;  i               1   28[BANK1 ] unsigned char 
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  1    wreg      unsigned char 
 13963 ;; Registers used:
 13964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13965 ;; Tracked objects:
 13966 ;;		On entry : 0/0
 13967 ;;		On exit  : 0/0
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 13973 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 13974 ;;Total ram usage:       16 bytes
 13975 ;; Hardware stack levels used:    1
 13976 ;; Hardware stack levels required when called:    6
 13977 ;; This function calls:
 13978 ;;		_MiWi_TickGet
 13979 ;;		___bmul
 13980 ;;		___wmul
 13981 ;; This function is called by:
 13982 ;;		_P2PTasks
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986                           
 13987                           ;psect for function _MiMAC_ReceivedPacket
 13988  12B5                     _MiMAC_ReceivedPacket:	
 13989                           
 13990                           ;drv_mrf_miwi_89xa.c: 855: uint8_t i;
 13991                           ;drv_mrf_miwi_89xa.c: 856: MIWI_TICK currentTick;
 13992                           ;drv_mrf_miwi_89xa.c: 860: for(i = 0; i < 5; i++)
 13993                           
 13994                           ;incstack = 0
 13995                           ; Regs used in _MiMAC_ReceivedPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13996  12B5  0021               	movlb	1	; select bank1
 13997  12B6  01BC               	clrf	MiMAC_ReceivedPacket@i^(0+128)
 13998  12B7  3005               	movlw	5
 13999  12B8  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14000  12B9  1803               	btfsc	3,0
 14001  12BA  2B4F               	goto	l5214
 14002  12BB                     l5200:	
 14003                           
 14004                           ;drv_mrf_miwi_89xa.c: 861: {
 14005                           ;drv_mrf_miwi_89xa.c: 862: currentTick = MiWi_TickGet();
 14006  12BB  31A4  2498  3192   	fcall	_MiWi_TickGet
 14007  12BE  0021               	movlb	1	; select bank1
 14008  12BF  0823               	movf	(?_MiWi_TickGet+3)^(0+128),w
 14009  12C0  00BA               	movwf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128)
 14010  12C1  0822               	movf	(?_MiWi_TickGet+2)^(0+128),w
 14011  12C2  00B9               	movwf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128)
 14012  12C3  0821               	movf	(?_MiWi_TickGet+1)^(0+128),w
 14013  12C4  00B8               	movwf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128)
 14014  12C5  0820               	movf	?_MiWi_TickGet^(0+128),w
 14015  12C6  00B7               	movwf	MiMAC_ReceivedPacket@currentTick^(0+128)
 14016                           
 14017                           ;drv_mrf_miwi_89xa.c: 863: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 14018                           ;drv_mrf_miwi_89xa.c: 864: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          0000000)/32)) )
 14019  12C7  3006               	movlw	6
 14020  12C8  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14021  12C9  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14022  12CA  00A0               	movwf	___bmul@multiplicand^(0+128)
 14023  12CB  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14024  12CC  31AE  2662  3192   	fcall	___bmul
 14025  12CF  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 14026  12D0  0086               	movwf	6
 14027  12D1  3002               	movlw	2	; select bank4/5
 14028  12D2  0087               	movwf	7
 14029  12D3  0801               	movf	1,w
 14030  12D4  1903               	btfsc	3,2
 14031  12D5  2B46               	goto	l5210
 14032  12D6  3006               	movlw	6
 14033  12D7  0021               	movlb	1	; select bank1
 14034  12D8  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14035  12D9  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14036  12DA  00A0               	movwf	___bmul@multiplicand^(0+128)
 14037  12DB  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14038  12DC  31AE  2662  3192   	fcall	___bmul
 14039  12DF  3E02               	addlw	2
 14040  12E0  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 14041  12E1  0086               	movwf	6
 14042  12E2  3002               	movlw	2	; select bank4/5
 14043  12E3  0087               	movwf	7
 14044  12E4  3F40               	moviw [0]fsr1
 14045  12E5  0021               	movlb	1	; select bank1
 14046  12E6  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14047  12E7  3F41               	moviw [1]fsr1
 14048  12E8  00AF               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+1)
 14049  12E9  3F42               	moviw [2]fsr1
 14050  12EA  00B0               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+2)
 14051  12EB  3F43               	moviw [3]fsr1
 14052  12EC  00B1               	movwf	((??_MiMAC_ReceivedPacket+1)^(0+128)+3)
 14053  12ED  083A               	movf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128),w
 14054  12EE  0231               	subwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14055  12EF  1D03               	skipz
 14056  12F0  2AFB               	goto	u4495
 14057  12F1  0839               	movf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128),w
 14058  12F2  0230               	subwf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14059  12F3  1D03               	skipz
 14060  12F4  2AFB               	goto	u4495
 14061  12F5  0838               	movf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128),w
 14062  12F6  022F               	subwf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14063  12F7  1D03               	skipz
 14064  12F8  2AFB               	goto	u4495
 14065  12F9  0837               	movf	MiMAC_ReceivedPacket@currentTick^(0+128),w
 14066  12FA  022E               	subwf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14067  12FB                     u4495:	
 14068  12FB  1803               	skipnc
 14069  12FC  2B46               	goto	l5210
 14070  12FD  0837               	movf	MiMAC_ReceivedPacket@currentTick^(0+128),w
 14071  12FE  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14072  12FF  0838               	movf	(MiMAC_ReceivedPacket@currentTick+1)^(0+128),w
 14073  1300  00AE               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14074  1301  0839               	movf	(MiMAC_ReceivedPacket@currentTick+2)^(0+128),w
 14075  1302  00AF               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+2)
 14076  1303  083A               	movf	(MiMAC_ReceivedPacket@currentTick+3)^(0+128),w
 14077  1304  00B0               	movwf	(??_MiMAC_ReceivedPacket^(0+128)+3)
 14078  1305  3006               	movlw	6
 14079  1306  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14080  1307  0831               	movf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14081  1308  00A0               	movwf	___bmul@multiplicand^(0+128)
 14082  1309  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14083  130A  31AE  2662  3192   	fcall	___bmul
 14084  130D  3E02               	addlw	2
 14085  130E  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 14086  130F  0086               	movwf	6
 14087  1310  3002               	movlw	2	; select bank4/5
 14088  1311  0087               	movwf	7
 14089  1312  3F40               	moviw [0]fsr1
 14090  1313  0021               	movlb	1	; select bank1
 14091  1314  00B2               	movwf	(??_MiMAC_ReceivedPacket+5)^(0+128)
 14092  1315  3F41               	moviw [1]fsr1
 14093  1316  00B3               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1)
 14094  1317  3F42               	moviw [2]fsr1
 14095  1318  00B4               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2)
 14096  1319  3F43               	moviw [3]fsr1
 14097  131A  00B5               	movwf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3)
 14098  131B  09B2               	comf	(??_MiMAC_ReceivedPacket+5)^(0+128),f
 14099  131C  09B3               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1),f
 14100  131D  09B4               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2),f
 14101  131E  09B5               	comf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3),f
 14102  131F  0AB2               	incf	(??_MiMAC_ReceivedPacket+5)^(0+128),f
 14103  1320  1903               	skipnz
 14104  1321  0AB3               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+1),f
 14105  1322  1903               	skipnz
 14106  1323  0AB4               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+2),f
 14107  1324  1903               	skipnz
 14108  1325  0AB5               	incf	((??_MiMAC_ReceivedPacket+5)^(0+128)+3),f
 14109  1326  0832               	movf	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14110  1327  07AD               	addwf	??_MiMAC_ReceivedPacket^(0+128),f
 14111  1328  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14112  1329  3DAE               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+1),f
 14113  132A  0834               	movf	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14114  132B  3DAF               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+2),f
 14115  132C  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14116  132D  3DB0               	addwfc	(??_MiMAC_ReceivedPacket^(0+128)+3),f
 14117  132E  0830               	movf	(??_MiMAC_ReceivedPacket^(0+128)+3),w
 14118  132F  1D03               	btfss	3,2
 14119  1330  2B39               	goto	l5208
 14120  1331  30B5               	movlw	181
 14121  1332  022D               	subwf	??_MiMAC_ReceivedPacket^(0+128),w
 14122  1333  30C4               	movlw	196
 14123  1334  3B2E               	subwfb	(??_MiMAC_ReceivedPacket^(0+128)+1),w
 14124  1335  3004               	movlw	4
 14125  1336  3B2F               	subwfb	(??_MiMAC_ReceivedPacket^(0+128)+2),w
 14126  1337  1C03               	btfss	3,0
 14127  1338  2B46               	goto	l5210
 14128  1339                     l5208:	
 14129                           
 14130                           ;drv_mrf_miwi_89xa.c: 865: {
 14131                           ;drv_mrf_miwi_89xa.c: 866: AckInfo[i].Valid = 0;
 14132  1339  3006               	movlw	6
 14133  133A  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14134  133B  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14135  133C  00A0               	movwf	___bmul@multiplicand^(0+128)
 14136  133D  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14137  133E  31AE  2662  3192   	fcall	___bmul
 14138  1341  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 14139  1342  0086               	movwf	6
 14140  1343  3002               	movlw	2	; select bank4/5
 14141  1344  0087               	movwf	7
 14142  1345  0181               	clrf	1
 14143  1346                     l5210:	
 14144  1346  3001               	movlw	1
 14145  1347  0021               	movlb	1	; select bank1
 14146  1348  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14147  1349  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14148  134A  07BC               	addwf	MiMAC_ReceivedPacket@i^(0+128),f
 14149  134B  3005               	movlw	5
 14150  134C  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14151  134D  1C03               	skipc
 14152  134E  2ABB               	goto	l5200
 14153  134F                     l5214:	
 14154                           
 14155                           ;drv_mrf_miwi_89xa.c: 867: }
 14156                           ;drv_mrf_miwi_89xa.c: 868: }
 14157                           ;drv_mrf_miwi_89xa.c: 871: if( ReceivedBankIndex != 0xFF )
 14158  134F  0020               	movlb	0	; select bank0
 14159  1350  0A63               	incf	_ReceivedBankIndex,w
 14160  1351  1903               	btfsc	3,2
 14161  1352  2B55               	goto	l5220
 14162                           
 14163                           ;drv_mrf_miwi_89xa.c: 872: {
 14164                           ;drv_mrf_miwi_89xa.c: 873: return 0;
 14165  1353  3000               	movlw	0
 14166  1354  0008               	return
 14167  1355                     l5220:	
 14168                           
 14169                           ;drv_mrf_miwi_89xa.c: 874: }
 14170                           ;drv_mrf_miwi_89xa.c: 876: for(i = 0; i < 2; i++)
 14171  1355  0021               	movlb	1	; select bank1
 14172  1356  01BC               	clrf	MiMAC_ReceivedPacket@i^(0+128)
 14173  1357  3002               	movlw	2
 14174  1358  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14175  1359  1803               	btfsc	3,0
 14176  135A  2C5A               	goto	l5260
 14177  135B                     l5226:	
 14178                           
 14179                           ;drv_mrf_miwi_89xa.c: 877: {
 14180                           ;drv_mrf_miwi_89xa.c: 878: if( RxPacket[i].flags.bits.Valid )
 14181  135B  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14182  135C  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14183  135D  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14184  135E  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14185  135F  00A7               	movwf	___wmul@multiplier^(0+128)
 14186  1360  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14187  1361  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14188  1362  3034               	movlw	52
 14189  1363  00A9               	movwf	___wmul@multiplicand^(0+128)
 14190  1364  3000               	movlw	0
 14191  1365  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14192  1366  31AF  27AC  3192   	fcall	___wmul
 14193  1369  3088               	movlw	136
 14194  136A  0021               	movlb	1	; select bank1
 14195  136B  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14196  136C  3023               	movlw	35
 14197  136D  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14198  136E  0827               	movf	?___wmul^(0+128),w
 14199  136F  072F               	addwf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14200  1370  0086               	movwf	6
 14201  1371  0828               	movf	(?___wmul+1)^(0+128),w
 14202  1372  3D30               	addwfc	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14203  1373  0087               	movwf	7
 14204  1374  1C01               	btfss	1,0
 14205  1375  2C51               	goto	l5256
 14206                           
 14207                           ;drv_mrf_miwi_89xa.c: 879: {
 14208                           ;drv_mrf_miwi_89xa.c: 880: uint8_t PayloadIndex;
 14209                           ;drv_mrf_miwi_89xa.c: 881: uint8_t j;
 14210                           ;drv_mrf_miwi_89xa.c: 883: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 14211  1376  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14212  1377  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14213  1378  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14214  1379  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14215  137A  00A7               	movwf	___wmul@multiplier^(0+128)
 14216  137B  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14217  137C  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14218  137D  3034               	movlw	52
 14219  137E  00A9               	movwf	___wmul@multiplicand^(0+128)
 14220  137F  3000               	movlw	0
 14221  1380  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14222  1381  31AF  27AC  3192   	fcall	___wmul
 14223  1384  0021               	movlb	1	; select bank1
 14224  1385  0827               	movf	?___wmul^(0+128),w
 14225  1386  3E01               	addlw	1
 14226  1387  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14227  1388  3000               	movlw	0
 14228  1389  3D28               	addwfc	(?___wmul+1)^(0+128),w
 14229  138A  00B0               	movwf	(??_MiMAC_ReceivedPacket+3)^(0+128)
 14230  138B  3088               	movlw	136
 14231  138C  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14232  138D  3023               	movlw	35
 14233  138E  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14234  138F  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14235  1390  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14236  1391  0086               	movwf	6
 14237  1392  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14238  1393  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14239  1394  0087               	movwf	7
 14240  1395  0801               	movf	1,w
 14241  1396  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14242  1397  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14243  1398  0022               	movlb	2	; select bank2
 14244  1399  00AA               	movwf	_MACRxPacket^(0+256)
 14245                           
 14246                           ;drv_mrf_miwi_89xa.c: 884: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 14247  139A  0021               	movlb	1	; select bank1
 14248  139B  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14249  139C  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14250  139D  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14251  139E  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14252  139F  00A7               	movwf	___wmul@multiplier^(0+128)
 14253  13A0  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14254  13A1  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14255  13A2  3034               	movlw	52
 14256  13A3  00A9               	movwf	___wmul@multiplicand^(0+128)
 14257  13A4  3000               	movlw	0
 14258  13A5  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14259  13A6  31AF  27AC  3192   	fcall	___wmul
 14260  13A9  0021               	movlb	1	; select bank1
 14261  13AA  0827               	movf	?___wmul^(0+128),w
 14262  13AB  3E33               	addlw	51
 14263  13AC  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14264  13AD  3000               	movlw	0
 14265  13AE  3D28               	addwfc	(?___wmul+1)^(0+128),w
 14266  13AF  00B0               	movwf	(??_MiMAC_ReceivedPacket+3)^(0+128)
 14267  13B0  3088               	movlw	136
 14268  13B1  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14269  13B2  3023               	movlw	35
 14270  13B3  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14271  13B4  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14272  13B5  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14273  13B6  0086               	movwf	6
 14274  13B7  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14275  13B8  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14276  13B9  0087               	movwf	7
 14277  13BA  0801               	movf	1,w
 14278  13BB  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14279  13BC  0833               	movf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14280  13BD  0022               	movlb	2	; select bank2
 14281  13BE  00AF               	movwf	(_MACRxPacket^(0+256)+5)
 14282                           
 14283                           ;drv_mrf_miwi_89xa.c: 885: PayloadIndex = 2;
 14284  13BF  3002               	movlw	2
 14285  13C0  0021               	movlb	1	; select bank1
 14286  13C1  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14287  13C2  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14288  13C3  00BB               	movwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128)
 14289                           
 14290                           ;drv_mrf_miwi_89xa.c: 887: if( MACRxPacket.flags.bits.destPrsnt )
 14291  13C4  0022               	movlb	2	; select bank2
 14292  13C5  1F2A               	btfss	_MACRxPacket^(0+256),6
 14293  13C6  2BD1               	goto	l5236
 14294                           
 14295                           ;drv_mrf_miwi_89xa.c: 888: {
 14296                           ;drv_mrf_miwi_89xa.c: 889: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 14297  13C7  0020               	movlb	0	; select bank0
 14298  13C8  0C58               	rrf	_MACInitParams,w
 14299  13C9  0021               	movlb	1	; select bank1
 14300  13CA  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14301  13CB  0CAD               	rrf	??_MiMAC_ReceivedPacket^(0+128),f
 14302  13CC  0C2D               	rrf	??_MiMAC_ReceivedPacket^(0+128),w
 14303  13CD  390F               	andlw	15
 14304  13CE  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14305  13CF  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14306  13D0  07BB               	addwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),f
 14307  13D1                     l5236:	
 14308                           
 14309                           ;drv_mrf_miwi_89xa.c: 890: }
 14310                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.sourcePrsnt )
 14311  13D1  0022               	movlb	2	; select bank2
 14312  13D2  1FAA               	btfss	_MACRxPacket^(0+256),7
 14313  13D3  2C0D               	goto	l5242
 14314                           
 14315                           ;drv_mrf_miwi_89xa.c: 893: {
 14316                           ;drv_mrf_miwi_89xa.c: 894: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 14317  13D4  0021               	movlb	1	; select bank1
 14318  13D5  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14319  13D6  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14320  13D7  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14321  13D8  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14322  13D9  00A7               	movwf	___wmul@multiplier^(0+128)
 14323  13DA  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14324  13DB  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14325  13DC  3034               	movlw	52
 14326  13DD  00A9               	movwf	___wmul@multiplicand^(0+128)
 14327  13DE  3000               	movlw	0
 14328  13DF  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14329  13E0  31AF  27AC  3192   	fcall	___wmul
 14330  13E3  0021               	movlb	1	; select bank1
 14331  13E4  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14332  13E5  3E01               	addlw	1
 14333  13E6  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14334  13E7  3000               	movlw	0
 14335  13E8  1803               	skipnc
 14336  13E9  3001               	movlw	1
 14337  13EA  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14338  13EB  3088               	movlw	136
 14339  13EC  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14340  13ED  3023               	movlw	35
 14341  13EE  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14342  13EF  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14343  13F0  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14344  13F1  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14345  13F2  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14346  13F3  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14347  13F4  00B4               	movwf	(??_MiMAC_ReceivedPacket+7)^(0+128)
 14348  13F5  0827               	movf	?___wmul^(0+128),w
 14349  13F6  0733               	addwf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14350  13F7  00B5               	movwf	(??_MiMAC_ReceivedPacket+8)^(0+128)
 14351  13F8  0828               	movf	(?___wmul+1)^(0+128),w
 14352  13F9  3D34               	addwfc	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14353  13FA  00B6               	movwf	(??_MiMAC_ReceivedPacket+9)^(0+128)
 14354  13FB  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14355  13FC  0022               	movlb	2	; select bank2
 14356  13FD  00AB               	movwf	(low ((_MACRxPacket| (0+256)+1)))^0
 14357  13FE  0021               	movlb	1	; select bank1
 14358  13FF  0836               	movf	(??_MiMAC_ReceivedPacket+9)^(0+128),w
 14359  1400  0022               	movlb	2	; select bank2
 14360  1401  00AC               	movwf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 14361                           
 14362                           ;drv_mrf_miwi_89xa.c: 895: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 14363  1402  0020               	movlb	0	; select bank0
 14364  1403  0C58               	rrf	_MACInitParams,w
 14365  1404  0021               	movlb	1	; select bank1
 14366  1405  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14367  1406  0CAD               	rrf	??_MiMAC_ReceivedPacket^(0+128),f
 14368  1407  0C2D               	rrf	??_MiMAC_ReceivedPacket^(0+128),w
 14369  1408  390F               	andlw	15
 14370  1409  00AE               	movwf	(??_MiMAC_ReceivedPacket+1)^(0+128)
 14371  140A  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14372  140B  07BB               	addwf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),f
 14373                           
 14374                           ;drv_mrf_miwi_89xa.c: 896: }
 14375  140C  2C10               	goto	l5244
 14376  140D                     l5242:	
 14377                           
 14378                           ;drv_mrf_miwi_89xa.c: 897: else
 14379                           ;drv_mrf_miwi_89xa.c: 898: {
 14380                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (0);
 14381  140D  0022               	movlb	2	; select bank2
 14382  140E  01AB               	clrf	(low ((_MACRxPacket| (0+256)+1)))^0
 14383  140F  01AC               	clrf	((low ((_MACRxPacket| (0+256)+1))+1))^0
 14384  1410                     l5244:	
 14385                           
 14386                           ;drv_mrf_miwi_89xa.c: 900: }
 14387                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 14388  1410  0021               	movlb	1	; select bank1
 14389  1411  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14390  1412  0022               	movlb	2	; select bank2
 14391  1413  02AF               	subwf	(_MACRxPacket^(0+256)+5),f
 14392                           
 14393                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 14394  1414  0021               	movlb	1	; select bank1
 14395  1415  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14396  1416  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14397  1417  01AE               	clrf	(??_MiMAC_ReceivedPacket^(0+128)+1)
 14398  1418  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14399  1419  00A7               	movwf	___wmul@multiplier^(0+128)
 14400  141A  082E               	movf	(??_MiMAC_ReceivedPacket+1)^(0+128),w
 14401  141B  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 14402  141C  3034               	movlw	52
 14403  141D  00A9               	movwf	___wmul@multiplicand^(0+128)
 14404  141E  3000               	movlw	0
 14405  141F  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 14406  1420  31AF  27AC  3192   	fcall	___wmul
 14407  1423  0021               	movlb	1	; select bank1
 14408  1424  083B               	movf	MiMAC_ReceivedPacket@PayloadIndex^(0+128),w
 14409  1425  3E01               	addlw	1
 14410  1426  00AF               	movwf	(??_MiMAC_ReceivedPacket+2)^(0+128)
 14411  1427  3000               	movlw	0
 14412  1428  1803               	skipnc
 14413  1429  3001               	movlw	1
 14414  142A  00B0               	movwf	((??_MiMAC_ReceivedPacket+2)^(0+128)+1)
 14415  142B  3088               	movlw	136
 14416  142C  00B1               	movwf	(??_MiMAC_ReceivedPacket+4)^(0+128)
 14417  142D  3023               	movlw	35
 14418  142E  00B2               	movwf	((??_MiMAC_ReceivedPacket+4)^(0+128)+1)
 14419  142F  082F               	movf	(??_MiMAC_ReceivedPacket+2)^(0+128),w
 14420  1430  0731               	addwf	(??_MiMAC_ReceivedPacket+4)^(0+128),w
 14421  1431  00B3               	movwf	(??_MiMAC_ReceivedPacket+6)^(0+128)
 14422  1432  0830               	movf	(??_MiMAC_ReceivedPacket+3)^(0+128),w
 14423  1433  3D32               	addwfc	(??_MiMAC_ReceivedPacket+5)^(0+128),w
 14424  1434  00B4               	movwf	(??_MiMAC_ReceivedPacket+7)^(0+128)
 14425  1435  0827               	movf	?___wmul^(0+128),w
 14426  1436  0733               	addwf	(??_MiMAC_ReceivedPacket+6)^(0+128),w
 14427  1437  00B5               	movwf	(??_MiMAC_ReceivedPacket+8)^(0+128)
 14428  1438  0828               	movf	(?___wmul+1)^(0+128),w
 14429  1439  3D34               	addwfc	(??_MiMAC_ReceivedPacket+7)^(0+128),w
 14430  143A  00B6               	movwf	(??_MiMAC_ReceivedPacket+9)^(0+128)
 14431  143B  0835               	movf	(??_MiMAC_ReceivedPacket+8)^(0+128),w
 14432  143C  0022               	movlb	2	; select bank2
 14433  143D  00AD               	movwf	(low ((_MACRxPacket| (0+256)+3)))^0
 14434  143E  0021               	movlb	1	; select bank1
 14435  143F  0836               	movf	(??_MiMAC_ReceivedPacket+9)^(0+128),w
 14436  1440  0022               	movlb	2	; select bank2
 14437  1441  00AE               	movwf	((low ((_MACRxPacket| (0+256)+3))+1))^0
 14438                           
 14439                           ;drv_mrf_miwi_89xa.c: 1006: MACRxPacket.RSSIValue = RSSILock;
 14440  1442  0020               	movlb	0	; select bank0
 14441  1443  0861               	movf	_RSSILock,w
 14442  1444  0021               	movlb	1	; select bank1
 14443  1445  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14444  1446  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14445  1447  0022               	movlb	2	; select bank2
 14446  1448  00B0               	movwf	(_MACRxPacket^(0+256)+6)
 14447                           
 14448                           ;drv_mrf_miwi_89xa.c: 1009: ReceivedBankIndex = i;
 14449  1449  0021               	movlb	1	; select bank1
 14450  144A  083C               	movf	MiMAC_ReceivedPacket@i^(0+128),w
 14451  144B  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14452  144C  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14453  144D  0020               	movlb	0	; select bank0
 14454  144E  00E3               	movwf	_ReceivedBankIndex
 14455                           
 14456                           ;drv_mrf_miwi_89xa.c: 1010: return 1;
 14457  144F  3001               	movlw	1
 14458  1450  0008               	return
 14459  1451                     l5256:	
 14460  1451  3001               	movlw	1
 14461  1452  0021               	movlb	1	; select bank1
 14462  1453  00AD               	movwf	??_MiMAC_ReceivedPacket^(0+128)
 14463  1454  082D               	movf	??_MiMAC_ReceivedPacket^(0+128),w
 14464  1455  07BC               	addwf	MiMAC_ReceivedPacket@i^(0+128),f
 14465  1456  3002               	movlw	2
 14466  1457  023C               	subwf	MiMAC_ReceivedPacket@i^(0+128),w
 14467  1458  1C03               	skipc
 14468  1459  2B5B               	goto	l5226
 14469  145A                     l5260:	
 14470                           
 14471                           ;drv_mrf_miwi_89xa.c: 1011: }
 14472                           ;drv_mrf_miwi_89xa.c: 1012: }
 14473                           ;drv_mrf_miwi_89xa.c: 1014: return 0;
 14474  145A  3000               	movlw	0
 14475  145B  0008               	return
 14476  145C                     __end_of_MiMAC_ReceivedPacket:	
 14477                           
 14478                           	psect	text41
 14479  2498                     __ptext41:	
 14480 ;; *************** function _MiWi_TickGet *****************
 14481 ;; Defined at:
 14482 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 14483 ;; Parameters:    Size  Location     Type
 14484 ;;		None
 14485 ;; Auto vars:     Size  Location     Type
 14486 ;;  currentTime     4    7[BANK1 ] struct _MIWI_TICK
 14487 ;;  IntFlag1        1    6[BANK1 ] unsigned char 
 14488 ;;  IntFlag2        1    5[BANK1 ] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 14491 ;; Registers used:
 14492 ;;		wreg, status,2, status,0
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14498 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;Total ram usage:       11 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    5
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_TxPacket
 14509 ;;		_MiMAC_ReceivedPacket
 14510 ;;		_P2PTasks
 14511 ;;		_MiApp_StartConnection
 14512 ;;		_MiApp_EstablishConnection
 14513 ;;		_ButtonPressed
 14514 ;;		_freezer_feature
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           
 14519                           ;psect for function _MiWi_TickGet
 14520  2498                     _MiWi_TickGet:	
 14521                           
 14522                           ;symbol.c: 108: MIWI_TICK currentTime;
 14523                           ;symbol.c: 109: uint8_t IntFlag1;
 14524                           ;symbol.c: 110: uint8_t IntFlag2;
 14525                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 14526                           
 14527                           ;incstack = 0
 14528                           ; Regs used in _MiWi_TickGet: [wreg+status,2+status,0]
 14529  2498  0021               	movlb	1	; select bank1
 14530  2499  01A9               	clrf	(MiWi_TickGet@currentTime^(0+128)+2)
 14531                           
 14532                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 14533  249A  01AA               	clrf	(MiWi_TickGet@currentTime^(0+128)+3)
 14534                           
 14535                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 14536  249B  1011               	bcf	17,0	;volatile
 14537  249C                     l4738:	
 14538                           ;symbol.c: 119: do
 14539                           
 14540                           
 14541                           ;symbol.c: 120: {
 14542                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 14543  249C  3000               	movlw	0
 14544  249D  0020               	movlb	0	; select bank0
 14545  249E  1811               	btfsc	17,0	;volatile
 14546  249F  3001               	movlw	1
 14547  24A0  0021               	movlb	1	; select bank1
 14548  24A1  00A6               	movwf	MiWi_TickGet@IntFlag1^(0+128)
 14549                           
 14550                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 14551  24A2  0020               	movlb	0	; select bank0
 14552  24A3  0816               	movf	22,w	;volatile
 14553  24A4  0021               	movlb	1	; select bank1
 14554  24A5  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14555  24A6  0824               	movf	??_MiWi_TickGet^(0+128),w
 14556  24A7  00A7               	movwf	MiWi_TickGet@currentTime^(0+128)
 14557                           
 14558                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 14559  24A8  0020               	movlb	0	; select bank0
 14560  24A9  0817               	movf	23,w	;volatile
 14561  24AA  0021               	movlb	1	; select bank1
 14562  24AB  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14563  24AC  0824               	movf	??_MiWi_TickGet^(0+128),w
 14564  24AD  00A8               	movwf	(MiWi_TickGet@currentTime^(0+128)+1)
 14565                           
 14566                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 14567  24AE  3000               	movlw	0
 14568  24AF  0020               	movlb	0	; select bank0
 14569  24B0  1811               	btfsc	17,0	;volatile
 14570  24B1  3001               	movlw	1
 14571  24B2  0021               	movlb	1	; select bank1
 14572  24B3  00A5               	movwf	MiWi_TickGet@IntFlag2^(0+128)
 14573                           
 14574                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 14575  24B4  0826               	movf	MiWi_TickGet@IntFlag1^(0+128),w
 14576  24B5  0625               	xorwf	MiWi_TickGet@IntFlag2^(0+128),w
 14577  24B6  1D03               	skipz
 14578  24B7  2C9C               	goto	l4738
 14579                           
 14580                           ;symbol.c: 127: if( IntFlag1 > 0 )
 14581  24B8  0826               	movf	MiWi_TickGet@IntFlag1^(0+128),w
 14582  24B9  1903               	btfsc	3,2
 14583  24BA  2CCB               	goto	l750
 14584                           
 14585                           ;symbol.c: 128: {
 14586                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 14587  24BB  0020               	movlb	0	; select bank0
 14588  24BC  1011               	bcf	17,0	;volatile
 14589                           
 14590                           ;symbol.c: 130: timerExtension1++;
 14591  24BD  3001               	movlw	1
 14592  24BE  0021               	movlb	1	; select bank1
 14593  24BF  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14594  24C0  0824               	movf	??_MiWi_TickGet^(0+128),w
 14595  24C1  0020               	movlb	0	; select bank0
 14596  24C2  07E8               	addwf	_timerExtension1,f	;volatile
 14597                           
 14598                           ;symbol.c: 131: if(timerExtension1 == 0)
 14599  24C3  0868               	movf	_timerExtension1,w	;volatile
 14600  24C4  1D03               	btfss	3,2
 14601  24C5  2CCB               	goto	l750
 14602                           
 14603                           ;symbol.c: 132: {
 14604                           ;symbol.c: 133: timerExtension2++;
 14605  24C6  3001               	movlw	1
 14606  24C7  0021               	movlb	1	; select bank1
 14607  24C8  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14608  24C9  0824               	movf	??_MiWi_TickGet^(0+128),w
 14609  24CA  07FD               	addwf	_timerExtension2,f	;volatile
 14610  24CB                     l750:	
 14611                           
 14612                           ;symbol.c: 134: }
 14613                           ;symbol.c: 135: }
 14614                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 14615  24CB  0020               	movlb	0	; select bank0
 14616  24CC  0868               	movf	_timerExtension1,w	;volatile
 14617  24CD  0021               	movlb	1	; select bank1
 14618  24CE  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14619  24CF  0824               	movf	??_MiWi_TickGet^(0+128),w
 14620  24D0  07A9               	addwf	(MiWi_TickGet@currentTime^(0+128)+2),f
 14621                           
 14622                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 14623  24D1  087D               	movf	_timerExtension2,w	;volatile
 14624  24D2  00A4               	movwf	??_MiWi_TickGet^(0+128)
 14625  24D3  0824               	movf	??_MiWi_TickGet^(0+128),w
 14626  24D4  07AA               	addwf	(MiWi_TickGet@currentTime^(0+128)+3),f
 14627                           
 14628                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 14629  24D5  1411               	bsf	17,0	;volatile
 14630                           
 14631                           ;symbol.c: 143: return currentTime;
 14632  24D6  082A               	movf	(MiWi_TickGet@currentTime+3)^(0+128),w
 14633  24D7  00A3               	movwf	(?_MiWi_TickGet+3)^(0+128)
 14634  24D8  0829               	movf	(MiWi_TickGet@currentTime+2)^(0+128),w
 14635  24D9  00A2               	movwf	(?_MiWi_TickGet+2)^(0+128)
 14636  24DA  0828               	movf	(MiWi_TickGet@currentTime+1)^(0+128),w
 14637  24DB  00A1               	movwf	(?_MiWi_TickGet+1)^(0+128)
 14638  24DC  0827               	movf	MiWi_TickGet@currentTime^(0+128),w
 14639  24DD  00A0               	movwf	?_MiWi_TickGet^(0+128)
 14640  24DE  0008               	return
 14641  24DF                     __end_of_MiWi_TickGet:	
 14642                           
 14643                           	psect	text42
 14644  103D                     __ptext42:	
 14645 ;; *************** function _AddConnection *****************
 14646 ;; Defined at:
 14647 ;;		line 2531 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;		None
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  i               1   33[BANK1 ] unsigned char 
 14652 ;;  connectionSl    1   32[BANK1 ] unsigned char 
 14653 ;;  status          1   31[BANK1 ] unsigned char 
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      unsigned char 
 14656 ;; Registers used:
 14657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 0/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;Total ram usage:       10 bytes
 14668 ;; Hardware stack levels used:    1
 14669 ;; Hardware stack levels required when called:    8
 14670 ;; This function calls:
 14671 ;;		_NVMWrite
 14672 ;;		_Total_Connections
 14673 ;;		___bmul
 14674 ;;		_isSameAddress
 14675 ;; This function is called by:
 14676 ;;		_P2PTasks
 14677 ;; This function uses a non-reentrant model
 14678 ;;
 14679                           
 14680                           
 14681                           ;psect for function _AddConnection
 14682  103D                     _AddConnection:	
 14683                           
 14684                           ;miwi_p2p.c: 2533: uint8_t i;
 14685                           ;miwi_p2p.c: 2534: uint8_t status = 0x00;
 14686                           
 14687                           ;incstack = 0
 14688                           ; Regs used in _AddConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14689  103D  0021               	movlb	1	; select bank1
 14690  103E  01BF               	clrf	AddConnection@status^(0+128)
 14691                           
 14692                           ;miwi_p2p.c: 2535: uint8_t connectionSlot = 0xFF;
 14693  103F  30FF               	movlw	255
 14694  1040  00B8               	movwf	??_AddConnection^(0+128)
 14695  1041  0838               	movf	??_AddConnection^(0+128),w
 14696  1042  00C0               	movwf	AddConnection@connectionSlot^(0+128)
 14697                           
 14698                           ;miwi_p2p.c: 2547: for(i = 0; i < 5; i++)
 14699  1043  01C1               	clrf	AddConnection@i^(0+128)
 14700  1044  3005               	movlw	5
 14701  1045  0241               	subwf	AddConnection@i^(0+128),w
 14702  1046  1803               	btfsc	3,0
 14703  1047  288B               	goto	l5294
 14704  1048                     l5278:	
 14705                           
 14706                           ;miwi_p2p.c: 2548: {
 14707                           ;miwi_p2p.c: 2550: if( ConnectionTable[i].status.bits.isValid )
 14708  1048  300A               	movlw	10
 14709  1049  00B8               	movwf	??_AddConnection^(0+128)
 14710  104A  0838               	movf	??_AddConnection^(0+128),w
 14711  104B  00A0               	movwf	___bmul@multiplicand^(0+128)
 14712  104C  0841               	movf	AddConnection@i^(0+128),w
 14713  104D  31AE  2662  3190   	fcall	___bmul
 14714  1050  3E08               	addlw	8
 14715  1051  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14716  1052  0086               	movwf	6
 14717  1053  3001               	movlw	1	; select bank3/4
 14718  1054  0087               	movwf	7
 14719  1055  1F81               	btfss	1,7
 14720  1056  287A               	goto	l5286
 14721                           
 14722                           ;miwi_p2p.c: 2551: {
 14723                           ;miwi_p2p.c: 2553: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 14724  1057  0022               	movlb	2	; select bank2
 14725  1058  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14726  1059  0021               	movlb	1	; select bank1
 14727  105A  00A5               	movwf	(isSameAddress@Address1+1)^(0+128)
 14728  105B  0022               	movlb	2	; select bank2
 14729  105C  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14730  105D  0021               	movlb	1	; select bank1
 14731  105E  00A4               	movwf	isSameAddress@Address1^(0+128)
 14732  105F  300A               	movlw	10
 14733  1060  00B8               	movwf	??_AddConnection^(0+128)
 14734  1061  0838               	movf	??_AddConnection^(0+128),w
 14735  1062  00A0               	movwf	___bmul@multiplicand^(0+128)
 14736  1063  0841               	movf	AddConnection@i^(0+128),w
 14737  1064  31AE  2662  3190   	fcall	___bmul
 14738  1067  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14739  1068  0021               	movlb	1	; select bank1
 14740  1069  00B9               	movwf	(??_AddConnection+1)^(0+128)
 14741  106A  0839               	movf	(??_AddConnection+1)^(0+128),w
 14742  106B  00A6               	movwf	isSameAddress@Address2^(0+128)
 14743  106C  31A1  2155  3190   	fcall	_isSameAddress
 14744  106F  3A00               	xorlw	0
 14745  1070  1903               	skipnz
 14746  1071  2882               	goto	l5290
 14747                           
 14748                           ;miwi_p2p.c: 2554: {
 14749                           ;miwi_p2p.c: 2555: connectionSlot = i;
 14750  1072  0021               	movlb	1	; select bank1
 14751  1073  0841               	movf	AddConnection@i^(0+128),w
 14752  1074  00B8               	movwf	??_AddConnection^(0+128)
 14753  1075  0838               	movf	??_AddConnection^(0+128),w
 14754  1076  00C0               	movwf	AddConnection@connectionSlot^(0+128)
 14755                           
 14756                           ;miwi_p2p.c: 2556: status = 0x01;
 14757  1077  01BF               	clrf	AddConnection@status^(0+128)
 14758  1078  0ABF               	incf	AddConnection@status^(0+128),f
 14759                           
 14760                           ;miwi_p2p.c: 2557: break;
 14761  1079  288B               	goto	l5294
 14762  107A                     l5286:	
 14763                           ;miwi_p2p.c: 2558: }
 14764                           ;miwi_p2p.c: 2559: }
 14765                           
 14766                           
 14767                           ;miwi_p2p.c: 2560: else if( connectionSlot == 0xFF )
 14768  107A  0021               	movlb	1	; select bank1
 14769  107B  0A40               	incf	AddConnection@connectionSlot^(0+128),w
 14770  107C  1D03               	btfss	3,2
 14771  107D  2882               	goto	l5290
 14772                           
 14773                           ;miwi_p2p.c: 2561: {
 14774                           ;miwi_p2p.c: 2563: connectionSlot = i;
 14775  107E  0841               	movf	AddConnection@i^(0+128),w
 14776  107F  00B8               	movwf	??_AddConnection^(0+128)
 14777  1080  0838               	movf	??_AddConnection^(0+128),w
 14778  1081  00C0               	movwf	AddConnection@connectionSlot^(0+128)
 14779  1082                     l5290:	
 14780  1082  3001               	movlw	1
 14781  1083  0021               	movlb	1	; select bank1
 14782  1084  00B8               	movwf	??_AddConnection^(0+128)
 14783  1085  0838               	movf	??_AddConnection^(0+128),w
 14784  1086  07C1               	addwf	AddConnection@i^(0+128),f
 14785  1087  3005               	movlw	5
 14786  1088  0241               	subwf	AddConnection@i^(0+128),w
 14787  1089  1C03               	skipc
 14788  108A  2848               	goto	l5278
 14789  108B                     l5294:	
 14790                           
 14791                           ;miwi_p2p.c: 2564: }
 14792                           ;miwi_p2p.c: 2565: }
 14793                           ;miwi_p2p.c: 2567: if( connectionSlot == 0xFF )
 14794  108B  0A40               	incf	AddConnection@connectionSlot^(0+128),w
 14795  108C  1D03               	btfss	3,2
 14796  108D  2890               	goto	l5302
 14797                           
 14798                           ;miwi_p2p.c: 2568: {
 14799                           ;miwi_p2p.c: 2569: return 0xF1;
 14800  108E  30F1               	movlw	241
 14801  108F  0008               	return
 14802  1090                     l5302:	
 14803                           ;miwi_p2p.c: 2570: }
 14804                           
 14805                           
 14806                           ;miwi_p2p.c: 2571: else
 14807                           ;miwi_p2p.c: 2572: {
 14808                           ;miwi_p2p.c: 2573: if( ConnMode >= 0x01 )
 14809  1090  0022               	movlb	2	; select bank2
 14810  1091  086C               	movf	_ConnMode^(0+256),w
 14811  1092  1903               	btfsc	3,2
 14812  1093  2897               	goto	l5308
 14813                           
 14814                           ;miwi_p2p.c: 2574: {
 14815                           ;miwi_p2p.c: 2575: return status;
 14816  1094  0021               	movlb	1	; select bank1
 14817  1095  083F               	movf	AddConnection@status^(0+128),w
 14818  1096  0008               	return
 14819  1097                     l5308:	
 14820                           
 14821                           ;miwi_p2p.c: 2576: }
 14822                           ;miwi_p2p.c: 2577: MyindexinPC = connectionSlot;
 14823  1097  0021               	movlb	1	; select bank1
 14824  1098  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14825  1099  00B8               	movwf	??_AddConnection^(0+128)
 14826  109A  0838               	movf	??_AddConnection^(0+128),w
 14827  109B  0022               	movlb	2	; select bank2
 14828  109C  00BB               	movwf	_MyindexinPC^(0+256)
 14829                           
 14830                           ;miwi_p2p.c: 2579: for(i = 0; i < 8; i++)
 14831  109D  0021               	movlb	1	; select bank1
 14832  109E  01C1               	clrf	AddConnection@i^(0+128)
 14833  109F  3008               	movlw	8
 14834  10A0  0241               	subwf	AddConnection@i^(0+128),w
 14835  10A1  1803               	btfsc	3,0
 14836  10A2  28CC               	goto	l5322
 14837  10A3                     l5316:	
 14838                           
 14839                           ;miwi_p2p.c: 2580: {
 14840                           ;miwi_p2p.c: 2581: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 14841  10A3  0841               	movf	AddConnection@i^(0+128),w
 14842  10A4  00B8               	movwf	??_AddConnection^(0+128)
 14843  10A5  01B9               	clrf	(??_AddConnection^(0+128)+1)
 14844  10A6  0838               	movf	??_AddConnection^(0+128),w
 14845  10A7  0022               	movlb	2	; select bank2
 14846  10A8  0723               	addwf	(low ((_rxMessage| (0+256)+3)))^0,w
 14847  10A9  0086               	movwf	6
 14848  10AA  0021               	movlb	1	; select bank1
 14849  10AB  0839               	movf	(??_AddConnection+1)^(0+128),w
 14850  10AC  0022               	movlb	2	; select bank2
 14851  10AD  3D24               	addwfc	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14852  10AE  0087               	movwf	7
 14853  10AF  0801               	movf	1,w
 14854  10B0  0021               	movlb	1	; select bank1
 14855  10B1  00BA               	movwf	(??_AddConnection+2)^(0+128)
 14856  10B2  300A               	movlw	10
 14857  10B3  00BB               	movwf	(??_AddConnection+3)^(0+128)
 14858  10B4  083B               	movf	(??_AddConnection+3)^(0+128),w
 14859  10B5  00A0               	movwf	___bmul@multiplicand^(0+128)
 14860  10B6  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14861  10B7  31AE  2662  3190   	fcall	___bmul
 14862  10BA  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14863  10BB  0021               	movlb	1	; select bank1
 14864  10BC  0741               	addwf	AddConnection@i^(0+128),w
 14865  10BD  00BC               	movwf	(??_AddConnection+4)^(0+128)
 14866  10BE  083C               	movf	(??_AddConnection+4)^(0+128),w
 14867  10BF  0086               	movwf	6
 14868  10C0  3001               	movlw	1	; select bank3/4
 14869  10C1  0087               	movwf	7
 14870  10C2  083A               	movf	(??_AddConnection+2)^(0+128),w
 14871  10C3  0081               	movwf	1
 14872  10C4  3001               	movlw	1
 14873  10C5  00B8               	movwf	??_AddConnection^(0+128)
 14874  10C6  0838               	movf	??_AddConnection^(0+128),w
 14875  10C7  07C1               	addwf	AddConnection@i^(0+128),f
 14876  10C8  3008               	movlw	8
 14877  10C9  0241               	subwf	AddConnection@i^(0+128),w
 14878  10CA  1C03               	skipc
 14879  10CB  28A3               	goto	l5316
 14880  10CC                     l5322:	
 14881                           
 14882                           ;miwi_p2p.c: 2582: }
 14883                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 14884  10CC  300A               	movlw	10
 14885  10CD  00B8               	movwf	??_AddConnection^(0+128)
 14886  10CE  0838               	movf	??_AddConnection^(0+128),w
 14887  10CF  00A0               	movwf	___bmul@multiplicand^(0+128)
 14888  10D0  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14889  10D1  31AE  2662  3190   	fcall	___bmul
 14890  10D4  3E08               	addlw	8
 14891  10D5  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14892  10D6  0086               	movwf	6
 14893  10D7  3001               	movlw	1	; select bank3/4
 14894  10D8  0087               	movwf	7
 14895  10D9  1781               	bsf	1,7
 14896                           
 14897                           ;miwi_p2p.c: 2586: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 14898  10DA  0022               	movlb	2	; select bank2
 14899  10DB  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 14900  10DC  0086               	movwf	6
 14901  10DD  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 14902  10DE  0087               	movwf	7
 14903  10DF  3142               	addfsr 1,2
 14904  10E0  3001               	movlw	1
 14905  10E1  0501               	andwf	1,w
 14906  10E2  0021               	movlb	1	; select bank1
 14907  10E3  00B8               	movwf	??_AddConnection^(0+128)
 14908  10E4  300A               	movlw	10
 14909  10E5  00B9               	movwf	(??_AddConnection+1)^(0+128)
 14910  10E6  0839               	movf	(??_AddConnection+1)^(0+128),w
 14911  10E7  00A0               	movwf	___bmul@multiplicand^(0+128)
 14912  10E8  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14913  10E9  31AE  2662  3190   	fcall	___bmul
 14914  10EC  3E08               	addlw	8
 14915  10ED  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14916  10EE  0086               	movwf	6
 14917  10EF  3001               	movlw	1	; select bank3/4
 14918  10F0  0087               	movwf	7
 14919  10F1  0801               	movf	1,w
 14920  10F2  0021               	movlb	1	; select bank1
 14921  10F3  0638               	xorwf	??_AddConnection^(0+128),w
 14922  10F4  39FE               	andlw	-2
 14923  10F5  0638               	xorwf	??_AddConnection^(0+128),w
 14924  10F6  0081               	movwf	1
 14925                           
 14926                           ;miwi_p2p.c: 2590: for(i = 0; i < 1; i++)
 14927  10F7  01C1               	clrf	AddConnection@i^(0+128)
 14928  10F8  0841               	movf	AddConnection@i^(0+128),w
 14929  10F9  1D03               	btfss	3,2
 14930  10FA  292C               	goto	l5336
 14931  10FB                     l5330:	
 14932                           
 14933                           ;miwi_p2p.c: 2591: {
 14934                           ;miwi_p2p.c: 2592: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 14935  10FB  0841               	movf	AddConnection@i^(0+128),w
 14936  10FC  3E03               	addlw	3
 14937  10FD  00B8               	movwf	??_AddConnection^(0+128)
 14938  10FE  3000               	movlw	0
 14939  10FF  1803               	skipnc
 14940  1100  3001               	movlw	1
 14941  1101  00B9               	movwf	(??_AddConnection^(0+128)+1)
 14942  1102  0838               	movf	??_AddConnection^(0+128),w
 14943  1103  0022               	movlb	2	; select bank2
 14944  1104  0725               	addwf	(low ((_rxMessage| (0+256)+5)))^0,w
 14945  1105  0086               	movwf	6
 14946  1106  0021               	movlb	1	; select bank1
 14947  1107  0839               	movf	(??_AddConnection+1)^(0+128),w
 14948  1108  0022               	movlb	2	; select bank2
 14949  1109  3D26               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^0,w
 14950  110A  0087               	movwf	7
 14951  110B  0801               	movf	1,w
 14952  110C  0021               	movlb	1	; select bank1
 14953  110D  00BA               	movwf	(??_AddConnection+2)^(0+128)
 14954  110E  3009               	movlw	9
 14955  110F  0741               	addwf	AddConnection@i^(0+128),w
 14956  1110  00BB               	movwf	(??_AddConnection+3)^(0+128)
 14957  1111  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
 14958  1112  073B               	addwf	(??_AddConnection+3)^(0+128),w
 14959  1113  00BC               	movwf	(??_AddConnection+4)^(0+128)
 14960  1114  300A               	movlw	10
 14961  1115  00BD               	movwf	(??_AddConnection+5)^(0+128)
 14962  1116  083D               	movf	(??_AddConnection+5)^(0+128),w
 14963  1117  00A0               	movwf	___bmul@multiplicand^(0+128)
 14964  1118  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14965  1119  31AE  2662  3190   	fcall	___bmul
 14966  111C  0021               	movlb	1	; select bank1
 14967  111D  073C               	addwf	(??_AddConnection+4)^(0+128),w
 14968  111E  00BE               	movwf	(??_AddConnection+6)^(0+128)
 14969  111F  083E               	movf	(??_AddConnection+6)^(0+128),w
 14970  1120  0086               	movwf	6
 14971  1121  3001               	movlw	1	; select bank3/4
 14972  1122  0087               	movwf	7
 14973  1123  083A               	movf	(??_AddConnection+2)^(0+128),w
 14974  1124  0081               	movwf	1
 14975  1125  3001               	movlw	1
 14976  1126  00B8               	movwf	??_AddConnection^(0+128)
 14977  1127  0838               	movf	??_AddConnection^(0+128),w
 14978  1128  07C1               	addwf	AddConnection@i^(0+128),f
 14979  1129  0841               	movf	AddConnection@i^(0+128),w
 14980  112A  1903               	btfsc	3,2
 14981  112B  28FB               	goto	l5330
 14982  112C                     l5336:	
 14983                           
 14984                           ;miwi_p2p.c: 2593: }
 14985                           ;miwi_p2p.c: 2600: LatestConnection = connectionSlot;
 14986  112C  0840               	movf	AddConnection@connectionSlot^(0+128),w
 14987  112D  00B8               	movwf	??_AddConnection^(0+128)
 14988  112E  0838               	movf	??_AddConnection^(0+128),w
 14989  112F  0022               	movlb	2	; select bank2
 14990  1130  00BA               	movwf	_LatestConnection^(0+256)
 14991                           
 14992                           ;miwi_p2p.c: 2601: P2PStatus.bits.SearchConnection = 0;
 14993  1131  123D               	bcf	_P2PStatus^(0+256),4	;volatile
 14994                           
 14995                           ;miwi_p2p.c: 2602: }
 14996                           ;miwi_p2p.c: 2603: conn_size = Total_Connections();
 14997  1132  31A1  212F  3190   	fcall	_Total_Connections
 14998  1135  0021               	movlb	1	; select bank1
 14999  1136  00B8               	movwf	??_AddConnection^(0+128)
 15000  1137  0838               	movf	??_AddConnection^(0+128),w
 15001  1138  0022               	movlb	2	; select bank2
 15002  1139  00CB               	movwf	_conn_size^(0+256)
 15003                           
 15004                           ;miwi_p2p.c: 2605: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 15005  113A  0020               	movlb	0	; select bank0
 15006  113B  086E               	movf	_nvmEdc+1,w
 15007  113C  0021               	movlb	1	; select bank1
 15008  113D  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 15009  113E  0020               	movlb	0	; select bank0
 15010  113F  086D               	movf	_nvmEdc,w
 15011  1140  0021               	movlb	1	; select bank1
 15012  1141  00AD               	movwf	NVMWrite@addr^(0+128)
 15013  1142  3001               	movlw	1
 15014  1143  00AF               	movwf	NVMWrite@count^(0+128)
 15015  1144  3000               	movlw	0
 15016  1145  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 15017  1146  304B               	movlw	(low (_conn_size| (0+256)))& (0+255)
 15018  1147  3199  213F         	fcall	_NVMWrite
 15019                           
 15020                           ;miwi_p2p.c: 2608: return status;
 15021  1149  0021               	movlb	1	; select bank1
 15022  114A  083F               	movf	AddConnection@status^(0+128),w
 15023  114B  0008               	return
 15024  114C                     __end_of_AddConnection:	
 15025                           
 15026                           	psect	text43
 15027  2155                     __ptext43:	
 15028 ;; *************** function _isSameAddress *****************
 15029 ;; Defined at:
 15030 ;;		line 2140 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;  Address1        2    4[BANK1 ] PTR unsigned char 
 15033 ;;		 -> NULL(0), RxPacket.Payload(50), RxPacket(104), 
 15034 ;;  Address2        1    6[BANK1 ] PTR unsigned char 
 15035 ;;		 -> ConnectionTable(50), 
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;  i               1   10[BANK1 ] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      unsigned char 
 15040 ;; Registers used:
 15041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        7 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    5
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_P2PTasks
 15058 ;;		_AddConnection
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           
 15063                           ;psect for function _isSameAddress
 15064  2155                     _isSameAddress:	
 15065                           
 15066                           ;miwi_p2p.c: 2142: uint8_t i;
 15067                           ;miwi_p2p.c: 2144: for(i = 0; i < 8; i++)
 15068                           
 15069                           ;incstack = 0
 15070                           ; Regs used in _isSameAddress: [wreg-fsr1h+status,2+status,0]
 15071  2155  0021               	movlb	1	; select bank1
 15072  2156  01AA               	clrf	isSameAddress@i^(0+128)
 15073  2157  3008               	movlw	8
 15074  2158  022A               	subwf	isSameAddress@i^(0+128),w
 15075  2159  1803               	btfsc	3,0
 15076  215A  2979               	goto	l5038
 15077  215B                     l5028:	
 15078                           
 15079                           ;miwi_p2p.c: 2145: {
 15080                           ;miwi_p2p.c: 2146: if( Address1[i] != Address2[i] )
 15081  215B  082A               	movf	isSameAddress@i^(0+128),w
 15082  215C  0726               	addwf	isSameAddress@Address2^(0+128),w
 15083  215D  00A7               	movwf	??_isSameAddress^(0+128)
 15084  215E  0827               	movf	??_isSameAddress^(0+128),w
 15085  215F  0086               	movwf	6
 15086  2160  3001               	movlw	1	; select bank2/3
 15087  2161  0087               	movwf	7
 15088  2162  082A               	movf	isSameAddress@i^(0+128),w
 15089  2163  00A8               	movwf	(??_isSameAddress+1)^(0+128)
 15090  2164  01A9               	clrf	((??_isSameAddress+1)^(0+128)+1)
 15091  2165  0828               	movf	(??_isSameAddress+1)^(0+128),w
 15092  2166  0724               	addwf	isSameAddress@Address1^(0+128),w
 15093  2167  0084               	movwf	4
 15094  2168  0829               	movf	(??_isSameAddress+2)^(0+128),w
 15095  2169  3D25               	addwfc	(isSameAddress@Address1+1)^(0+128),w
 15096  216A  0085               	movwf	5
 15097  216B  0800               	movf	0,w
 15098  216C  0601               	xorwf	1,w
 15099  216D  1903               	skipnz
 15100  216E  2971               	goto	l5034
 15101                           
 15102                           ;miwi_p2p.c: 2147: {
 15103                           ;miwi_p2p.c: 2148: return 0;
 15104  216F  3000               	movlw	0
 15105  2170  0008               	return
 15106  2171                     l5034:	
 15107  2171  3001               	movlw	1
 15108  2172  00A7               	movwf	??_isSameAddress^(0+128)
 15109  2173  0827               	movf	??_isSameAddress^(0+128),w
 15110  2174  07AA               	addwf	isSameAddress@i^(0+128),f
 15111  2175  3008               	movlw	8
 15112  2176  022A               	subwf	isSameAddress@i^(0+128),w
 15113  2177  1C03               	skipc
 15114  2178  295B               	goto	l5028
 15115  2179                     l5038:	
 15116                           
 15117                           ;miwi_p2p.c: 2149: }
 15118                           ;miwi_p2p.c: 2150: }
 15119                           ;miwi_p2p.c: 2151: return 1;
 15120  2179  3001               	movlw	1
 15121  217A  0008               	return
 15122  217B                     __end_of_isSameAddress:	
 15123                           
 15124                           	psect	text44
 15125  212F                     __ptext44:	
 15126 ;; *************** function _Total_Connections *****************
 15127 ;; Defined at:
 15128 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;		None
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  i               1    6[BANK1 ] unsigned char 
 15133 ;;  count           1    5[BANK1 ] unsigned char 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      unsigned char 
 15136 ;; Registers used:
 15137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        3 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    6
 15150 ;; This function calls:
 15151 ;;		___bmul
 15152 ;; This function is called by:
 15153 ;;		_AddConnection
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           
 15158                           ;psect for function _Total_Connections
 15159  212F                     _Total_Connections:	
 15160                           
 15161                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 15162                           
 15163                           ;incstack = 0
 15164                           ; Regs used in _Total_Connections: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15165  212F  0021               	movlb	1	; select bank1
 15166  2130  01A5               	clrf	Total_Connections@count^(0+128)
 15167                           
 15168                           ;miwi_p2p.c: 69: for (i=0;i<5;i++)
 15169  2131  01A6               	clrf	Total_Connections@i^(0+128)
 15170  2132  3005               	movlw	5
 15171  2133  0226               	subwf	Total_Connections@i^(0+128),w
 15172  2134  1803               	btfsc	3,0
 15173  2135  2953               	goto	l5018
 15174  2136                     l5012:	
 15175                           
 15176                           ;miwi_p2p.c: 70: {
 15177                           ;miwi_p2p.c: 77: if (ConnectionTable[i].status.bits.isValid)
 15178  2136  300A               	movlw	10
 15179  2137  00A4               	movwf	??_Total_Connections^(0+128)
 15180  2138  0824               	movf	??_Total_Connections^(0+128),w
 15181  2139  00A0               	movwf	___bmul@multiplicand^(0+128)
 15182  213A  0826               	movf	Total_Connections@i^(0+128),w
 15183  213B  31AE  2662  31A1   	fcall	___bmul
 15184  213E  3E08               	addlw	8
 15185  213F  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 15186  2140  0086               	movwf	6
 15187  2141  3001               	movlw	1	; select bank3/4
 15188  2142  0087               	movwf	7
 15189  2143  1F81               	btfss	1,7
 15190  2144  294A               	goto	l348
 15191                           
 15192                           ;miwi_p2p.c: 78: {
 15193                           ;miwi_p2p.c: 79: count++;
 15194  2145  3001               	movlw	1
 15195  2146  0021               	movlb	1	; select bank1
 15196  2147  00A4               	movwf	??_Total_Connections^(0+128)
 15197  2148  0824               	movf	??_Total_Connections^(0+128),w
 15198  2149  07A5               	addwf	Total_Connections@count^(0+128),f
 15199  214A                     l348:	
 15200  214A  3001               	movlw	1
 15201  214B  0021               	movlb	1	; select bank1
 15202  214C  00A4               	movwf	??_Total_Connections^(0+128)
 15203  214D  0824               	movf	??_Total_Connections^(0+128),w
 15204  214E  07A6               	addwf	Total_Connections@i^(0+128),f
 15205  214F  3005               	movlw	5
 15206  2150  0226               	subwf	Total_Connections@i^(0+128),w
 15207  2151  1C03               	skipc
 15208  2152  2936               	goto	l5012
 15209  2153                     l5018:	
 15210                           
 15211                           ;miwi_p2p.c: 80: }
 15212                           ;miwi_p2p.c: 82: }
 15213                           ;miwi_p2p.c: 83: return count;
 15214  2153  0825               	movf	Total_Connections@count^(0+128),w
 15215  2154  0008               	return
 15216  2155                     __end_of_Total_Connections:	
 15217                           
 15218                           	psect	text45
 15219  2DA9                     __ptext45:	
 15220 ;; *************** function _MiApp_DiscardMessage *****************
 15221 ;; Defined at:
 15222 ;;		line 2380 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;		None
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;		None
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  1    wreg      void 
 15229 ;; Registers used:
 15230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15240 ;;Total ram usage:        0 bytes
 15241 ;; Hardware stack levels used:    1
 15242 ;; Hardware stack levels required when called:    7
 15243 ;; This function calls:
 15244 ;;		_MiMAC_DiscardPacket
 15245 ;; This function is called by:
 15246 ;;		_MiApp_EstablishConnection
 15247 ;;		_Process_RxMessage
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           
 15252                           ;psect for function _MiApp_DiscardMessage
 15253  2DA9                     _MiApp_DiscardMessage:	
 15254                           
 15255                           ;miwi_p2p.c: 2382: P2PStatus.bits.RxHasUserData = 0;
 15256                           
 15257                           ;incstack = 0
 15258                           ; Regs used in _MiApp_DiscardMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15259  2DA9  0022               	movlb	2	; select bank2
 15260  2DAA  11BD               	bcf	_P2PStatus^(0+256),3	;volatile
 15261                           
 15262                           ;miwi_p2p.c: 2383: MiMAC_DiscardPacket();
 15263  2DAB  31A1  210A         	fcall	_MiMAC_DiscardPacket
 15264  2DAD  0008               	return
 15265  2DAE                     __end_of_MiApp_DiscardMessage:	
 15266                           
 15267                           	psect	text46
 15268  210A                     __ptext46:	
 15269 ;; *************** function _MiMAC_DiscardPacket *****************
 15270 ;; Defined at:
 15271 ;;		line 1052 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15272 ;; Parameters:    Size  Location     Type
 15273 ;;		None
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;		None
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  1    wreg      void 
 15278 ;; Registers used:
 15279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;Total ram usage:        4 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:    6
 15292 ;; This function calls:
 15293 ;;		___wmul
 15294 ;; This function is called by:
 15295 ;;		_P2PTasks
 15296 ;;		_MiApp_DiscardMessage
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           
 15301                           ;psect for function _MiMAC_DiscardPacket
 15302  210A                     _MiMAC_DiscardPacket:	
 15303                           
 15304                           ;drv_mrf_miwi_89xa.c: 1054: if( ReceivedBankIndex < 2 )
 15305                           
 15306                           ;incstack = 0
 15307                           ; Regs used in _MiMAC_DiscardPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15308  210A  3002               	movlw	2
 15309  210B  0020               	movlb	0	; select bank0
 15310  210C  0263               	subwf	_ReceivedBankIndex,w
 15311  210D  1803               	skipnc
 15312  210E  0008               	return
 15313                           
 15314                           ;drv_mrf_miwi_89xa.c: 1055: {
 15315                           ;drv_mrf_miwi_89xa.c: 1056: RxPacket[ReceivedBankIndex].flags.Val = 0;
 15316  210F  0863               	movf	_ReceivedBankIndex,w
 15317  2110  0021               	movlb	1	; select bank1
 15318  2111  00AD               	movwf	??_MiMAC_DiscardPacket^(0+128)
 15319  2112  01AE               	clrf	(??_MiMAC_DiscardPacket^(0+128)+1)
 15320  2113  082D               	movf	??_MiMAC_DiscardPacket^(0+128),w
 15321  2114  00A7               	movwf	___wmul@multiplier^(0+128)
 15322  2115  082E               	movf	(??_MiMAC_DiscardPacket+1)^(0+128),w
 15323  2116  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
 15324  2117  3034               	movlw	52
 15325  2118  00A9               	movwf	___wmul@multiplicand^(0+128)
 15326  2119  3000               	movlw	0
 15327  211A  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
 15328  211B  31AF  27AC         	fcall	___wmul
 15329  211D  3088               	movlw	136
 15330  211E  0021               	movlb	1	; select bank1
 15331  211F  00AF               	movwf	(??_MiMAC_DiscardPacket+2)^(0+128)
 15332  2120  3023               	movlw	35
 15333  2121  00B0               	movwf	((??_MiMAC_DiscardPacket+2)^(0+128)+1)
 15334  2122  0827               	movf	?___wmul^(0+128),w
 15335  2123  072F               	addwf	(??_MiMAC_DiscardPacket+2)^(0+128),w
 15336  2124  0086               	movwf	6
 15337  2125  0828               	movf	(?___wmul+1)^(0+128),w
 15338  2126  3D30               	addwfc	(??_MiMAC_DiscardPacket+3)^(0+128),w
 15339  2127  0087               	movwf	7
 15340  2128  0181               	clrf	1
 15341                           
 15342                           ;drv_mrf_miwi_89xa.c: 1057: ReceivedBankIndex = 0xFF;
 15343  2129  30FF               	movlw	255
 15344  212A  00AD               	movwf	??_MiMAC_DiscardPacket^(0+128)
 15345  212B  082D               	movf	??_MiMAC_DiscardPacket^(0+128),w
 15346  212C  0020               	movlb	0	; select bank0
 15347  212D  00E3               	movwf	_ReceivedBankIndex
 15348  212E  0008               	return
 15349  212F                     __end_of_MiMAC_DiscardPacket:	
 15350                           
 15351                           	psect	text47
 15352  2217                     __ptext47:	
 15353 ;; *************** function _MiApp_ConnectionMode *****************
 15354 ;; Defined at:
 15355 ;;		line 3185 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;  Mode            1    wreg     unsigned char 
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;  Mode            1   26[BANK1 ] unsigned char 
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  1    wreg      void 
 15362 ;; Registers used:
 15363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/0
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;Total ram usage:        3 bytes
 15374 ;; Hardware stack levels used:    1
 15375 ;; Hardware stack levels required when called:    8
 15376 ;; This function calls:
 15377 ;;		_NVMWrite
 15378 ;; This function is called by:
 15379 ;;		_Initialize_Demo
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383                           
 15384                           ;psect for function _MiApp_ConnectionMode
 15385  2217                     _MiApp_ConnectionMode:	
 15386                           
 15387                           ;incstack = 0
 15388                           ; Regs used in _MiApp_ConnectionMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15389                           ;MiApp_ConnectionMode@Mode stored from wreg
 15390  2217  0021               	movlb	1	; select bank1
 15391  2218  00BA               	movwf	MiApp_ConnectionMode@Mode^(0+128)
 15392                           
 15393                           ;miwi_p2p.c: 3187: if( Mode > 3 )
 15394  2219  3004               	movlw	4
 15395  221A  023A               	subwf	MiApp_ConnectionMode@Mode^(0+128),w
 15396  221B  1803               	btfsc	3,0
 15397  221C  0008               	return
 15398                           
 15399                           ;miwi_p2p.c: 3190: }
 15400                           ;miwi_p2p.c: 3191: ConnMode = Mode;
 15401                           
 15402                           ;miwi_p2p.c: 3188: {
 15403                           ;miwi_p2p.c: 3189: return;
 15404  221D  083A               	movf	MiApp_ConnectionMode@Mode^(0+128),w
 15405  221E  00B8               	movwf	??_MiApp_ConnectionMode^(0+128)
 15406  221F  0838               	movf	??_MiApp_ConnectionMode^(0+128),w
 15407  2220  0022               	movlb	2	; select bank2
 15408  2221  00EC               	movwf	_ConnMode^(0+256)
 15409                           
 15410                           ;miwi_p2p.c: 3192: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 15411  2222  086C               	movf	_ConnMode^(0+256),w
 15412  2223  0021               	movlb	1	; select bank1
 15413  2224  00B8               	movwf	??_MiApp_ConnectionMode^(0+128)
 15414  2225  3004               	movlw	4
 15415  2226                     u6765:	
 15416  2226  35B8               	lslf	??_MiApp_ConnectionMode^(0+128),f
 15417  2227  0B89               	decfsz	9,f
 15418  2228  2A26               	goto	u6765
 15419  2229  0022               	movlb	2	; select bank2
 15420  222A  083C               	movf	_P2PCapacityInfo^(0+256),w
 15421  222B  390F               	andlw	15
 15422  222C  0021               	movlb	1	; select bank1
 15423  222D  0438               	iorwf	??_MiApp_ConnectionMode^(0+128),w
 15424  222E  00B9               	movwf	(??_MiApp_ConnectionMode+1)^(0+128)
 15425  222F  0839               	movf	(??_MiApp_ConnectionMode+1)^(0+128),w
 15426  2230  0022               	movlb	2	; select bank2
 15427  2231  00BC               	movwf	_P2PCapacityInfo^(0+256)
 15428                           
 15429                           ;miwi_p2p.c: 3195: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 15430  2232  0020               	movlb	0	; select bank0
 15431  2233  086A               	movf	_nvmConnMode+1,w
 15432  2234  0021               	movlb	1	; select bank1
 15433  2235  00AE               	movwf	(NVMWrite@addr+1)^(0+128)
 15434  2236  0020               	movlb	0	; select bank0
 15435  2237  0869               	movf	_nvmConnMode,w
 15436  2238  0021               	movlb	1	; select bank1
 15437  2239  00AD               	movwf	NVMWrite@addr^(0+128)
 15438  223A  3001               	movlw	1
 15439  223B  00AF               	movwf	NVMWrite@count^(0+128)
 15440  223C  3000               	movlw	0
 15441  223D  00B0               	movwf	(NVMWrite@count^(0+128)+1)
 15442  223E  306C               	movlw	(low (_ConnMode| (0+256)))& (0+255)
 15443  223F  3199  213F         	fcall	_NVMWrite
 15444  2241  0008               	return
 15445  2242                     __end_of_MiApp_ConnectionMode:	
 15446                           
 15447                           	psect	text48
 15448  193F                     __ptext48:	
 15449 ;; *************** function _NVMWrite *****************
 15450 ;; Defined at:
 15451 ;;		line 255 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;  source          1    wreg     PTR unsigned char 
 15454 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
 15455 ;;  addr            2   13[BANK1 ] unsigned int 
 15456 ;;  count           2   15[BANK1 ] unsigned int 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;  source          1   23[BANK1 ] PTR unsigned char 
 15459 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
 15460 ;;  PageCounter     1   22[BANK1 ] unsigned char 
 15461 ;;  oldRFIE         1   21[BANK1 ] unsigned char 
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  1    wreg      void 
 15464 ;; Registers used:
 15465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15471 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;Total ram usage:       11 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    7
 15478 ;; This function calls:
 15479 ;;		_MacroNop
 15480 ;;		_SPIGet
 15481 ;;		_SPIPut
 15482 ;; This function is called by:
 15483 ;;		_P2PTasks
 15484 ;;		_MiApp_ProtocolInit
 15485 ;;		_MiApp_SetChannel
 15486 ;;		_AddConnection
 15487 ;;		_MiApp_ConnectionMode
 15488 ;;		_MiApp_RemoveConnection
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           
 15493                           ;psect for function _NVMWrite
 15494  193F                     _NVMWrite:	
 15495                           
 15496                           ;incstack = 0
 15497                           ; Regs used in _NVMWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15498                           ;NVMWrite@source stored from wreg
 15499  193F  0021               	movlb	1	; select bank1
 15500  1940  00B7               	movwf	NVMWrite@source^(0+128)
 15501                           
 15502                           ;miwi_nvm.c: 257: uint8_t PageCounter = 0;
 15503  1941  01B6               	clrf	NVMWrite@PageCounter^(0+128)
 15504                           
 15505                           ;miwi_nvm.c: 263: uint8_t oldRFIE = INTCONbits.IOCIE;
 15506  1942  3000               	movlw	0
 15507  1943  198B               	btfsc	11,3	;volatile
 15508  1944  3001               	movlw	1
 15509  1945  00B5               	movwf	NVMWrite@oldRFIE^(0+128)
 15510                           
 15511                           ;miwi_nvm.c: 264: INTCONbits.IOCIE = 0;
 15512  1946  118B               	bcf	11,3	;volatile
 15513  1947                     l4960:	
 15514                           ;miwi_nvm.c: 269: do
 15515                           
 15516                           ;miwi_nvm.c: 268: EEPROM_NEXT_PAGE:
 15517                           
 15518                           
 15519                           ;miwi_nvm.c: 270: {
 15520                           ;miwi_nvm.c: 271: LATAbits.LATA3 = 0;
 15521  1947  0022               	movlb	2	; select bank2
 15522  1948  118C               	bcf	12,3	;volatile
 15523                           
 15524                           ;miwi_nvm.c: 272: SPIPut( 0x05 );
 15525  1949  3005               	movlw	5
 15526  194A  31AE  26DC  3199   	fcall	_SPIPut
 15527                           
 15528                           ;miwi_nvm.c: 273: PageCounter = SPIGet();
 15529  194D  31AD  25B4  3199   	fcall	_SPIGet
 15530  1950  0021               	movlb	1	; select bank1
 15531  1951  00B1               	movwf	??_NVMWrite^(0+128)
 15532  1952  0831               	movf	??_NVMWrite^(0+128),w
 15533  1953  00B6               	movwf	NVMWrite@PageCounter^(0+128)
 15534                           
 15535                           ;miwi_nvm.c: 274: LATAbits.LATA3 = 1;
 15536  1954  0022               	movlb	2	; select bank2
 15537  1955  158C               	bsf	12,3	;volatile
 15538                           
 15539                           ;miwi_nvm.c: 275: MacroNop();
 15540  1956  3180  2002  3199   	fcall	_MacroNop
 15541                           
 15542                           ;miwi_nvm.c: 276: } while(PageCounter & 0x01 );
 15543  1959  0021               	movlb	1	; select bank1
 15544  195A  1836               	btfsc	NVMWrite@PageCounter^(0+128),0
 15545  195B  2947               	goto	l4960
 15546                           
 15547                           ;miwi_nvm.c: 278: LATAbits.LATA3 = 0;
 15548  195C  0022               	movlb	2	; select bank2
 15549  195D  118C               	bcf	12,3	;volatile
 15550                           
 15551                           ;miwi_nvm.c: 279: SPIPut( 0x06 );
 15552  195E  3006               	movlw	6
 15553  195F  31AE  26DC  3199   	fcall	_SPIPut
 15554                           
 15555                           ;miwi_nvm.c: 280: LATAbits.LATA3 = 1;
 15556  1962  0022               	movlb	2	; select bank2
 15557  1963  158C               	bsf	12,3	;volatile
 15558                           
 15559                           ;miwi_nvm.c: 281: MacroNop();
 15560  1964  3180  2002  3199   	fcall	_MacroNop
 15561                           
 15562                           ;miwi_nvm.c: 282: LATAbits.LATA3 = 0;
 15563  1967  0022               	movlb	2	; select bank2
 15564  1968  118C               	bcf	12,3	;volatile
 15565                           
 15566                           ;miwi_nvm.c: 297: SPIPut( 0x02 );
 15567  1969  3002               	movlw	2
 15568  196A  31AE  26DC  3199   	fcall	_SPIPut
 15569                           
 15570                           ;miwi_nvm.c: 298: SPIPut( addr>>8 );
 15571  196D  0021               	movlb	1	; select bank1
 15572  196E  082E               	movf	(NVMWrite@addr+1)^(0+128),w
 15573  196F  31AE  26DC  3199   	fcall	_SPIPut
 15574                           
 15575                           ;miwi_nvm.c: 299: SPIPut( addr );
 15576  1972  0021               	movlb	1	; select bank1
 15577  1973  082D               	movf	NVMWrite@addr^(0+128),w
 15578  1974  31AE  26DC  3199   	fcall	_SPIPut
 15579                           
 15580                           ;miwi_nvm.c: 301: PageCounter = 0;
 15581  1977  0021               	movlb	1	; select bank1
 15582  1978  01B6               	clrf	NVMWrite@PageCounter^(0+128)
 15583  1979                     l5002:	
 15584                           ;miwi_nvm.c: 302: while( count > 0 )
 15585                           
 15586  1979  082F               	movf	NVMWrite@count^(0+128),w
 15587  197A  0430               	iorwf	(NVMWrite@count+1)^(0+128),w
 15588  197B  1903               	btfsc	3,2
 15589  197C  29AE               	goto	l259
 15590                           
 15591                           ;miwi_nvm.c: 303: {
 15592                           ;miwi_nvm.c: 304: SPIPut( *source++ );
 15593  197D  0837               	movf	NVMWrite@source^(0+128),w
 15594  197E  0086               	movwf	6
 15595  197F  3001               	movlw	1	; select bank2/3
 15596  1980  0087               	movwf	7
 15597  1981  0801               	movf	1,w
 15598  1982  31AE  26DC  3199   	fcall	_SPIPut
 15599  1985  3001               	movlw	1
 15600  1986  0021               	movlb	1	; select bank1
 15601  1987  00B1               	movwf	??_NVMWrite^(0+128)
 15602  1988  0831               	movf	??_NVMWrite^(0+128),w
 15603  1989  07B7               	addwf	NVMWrite@source^(0+128),f
 15604                           
 15605                           ;miwi_nvm.c: 305: count--;
 15606  198A  3001               	movlw	1
 15607  198B  02AF               	subwf	NVMWrite@count^(0+128),f
 15608  198C  3000               	movlw	0
 15609  198D  3BB0               	subwfb	(NVMWrite@count+1)^(0+128),f
 15610                           
 15611                           ;miwi_nvm.c: 306: PageCounter++;
 15612  198E  3001               	movlw	1
 15613  198F  00B1               	movwf	??_NVMWrite^(0+128)
 15614  1990  0831               	movf	??_NVMWrite^(0+128),w
 15615  1991  07B6               	addwf	NVMWrite@PageCounter^(0+128),f
 15616                           
 15617                           ;miwi_nvm.c: 307: if( ((addr + PageCounter) & (64-1)) == 0 )
 15618  1992  0836               	movf	NVMWrite@PageCounter^(0+128),w
 15619  1993  072D               	addwf	NVMWrite@addr^(0+128),w
 15620  1994  00B1               	movwf	??_NVMWrite^(0+128)
 15621  1995  082E               	movf	(NVMWrite@addr+1)^(0+128),w
 15622  1996  1803               	skipnc
 15623  1997  0A2E               	incf	(NVMWrite@addr+1)^(0+128),w
 15624  1998  00B2               	movwf	(??_NVMWrite^(0+128)+1)
 15625  1999  303F               	movlw	63
 15626  199A  0531               	andwf	??_NVMWrite^(0+128),w
 15627  199B  00B3               	movwf	(??_NVMWrite+2)^(0+128)
 15628  199C  3000               	movlw	0
 15629  199D  0532               	andwf	(??_NVMWrite+1)^(0+128),w
 15630  199E  00B4               	movwf	(??_NVMWrite+3)^(0+128)
 15631  199F  0833               	movf	(??_NVMWrite+2)^(0+128),w
 15632  19A0  0434               	iorwf	((??_NVMWrite+2)^(0+128)+1),w
 15633  19A1  1D03               	btfss	3,2
 15634  19A2  2979               	goto	l5002
 15635                           
 15636                           ;miwi_nvm.c: 308: {
 15637                           ;miwi_nvm.c: 309: LATAbits.LATA3 = 1;
 15638  19A3  0022               	movlb	2	; select bank2
 15639  19A4  158C               	bsf	12,3	;volatile
 15640                           
 15641                           ;miwi_nvm.c: 310: addr += PageCounter;
 15642  19A5  0021               	movlb	1	; select bank1
 15643  19A6  0836               	movf	NVMWrite@PageCounter^(0+128),w
 15644  19A7  00B1               	movwf	??_NVMWrite^(0+128)
 15645  19A8  01B2               	clrf	(??_NVMWrite^(0+128)+1)
 15646  19A9  0831               	movf	??_NVMWrite^(0+128),w
 15647  19AA  07AD               	addwf	NVMWrite@addr^(0+128),f
 15648  19AB  0832               	movf	(??_NVMWrite+1)^(0+128),w
 15649  19AC  3DAE               	addwfc	(NVMWrite@addr+1)^(0+128),f
 15650                           
 15651                           ;miwi_nvm.c: 311: goto EEPROM_NEXT_PAGE;
 15652  19AD  2947               	goto	l4960
 15653  19AE                     l259:	
 15654                           
 15655                           ;miwi_nvm.c: 312: }
 15656                           ;miwi_nvm.c: 313: }
 15657                           ;miwi_nvm.c: 314: LATAbits.LATA3 = 1;
 15658  19AE  0022               	movlb	2	; select bank2
 15659  19AF  158C               	bsf	12,3	;volatile
 15660                           
 15661                           ;miwi_nvm.c: 319: INTCONbits.IOCIE = oldRFIE;
 15662  19B0  0021               	movlb	1	; select bank1
 15663  19B1  0C35               	rrf	NVMWrite@oldRFIE^(0+128),w
 15664  19B2  1C03               	skipc
 15665  19B3  118B               	bcf	11,3	;volatile
 15666  19B4  1803               	skipnc
 15667  19B5  158B               	bsf	11,3	;volatile
 15668  19B6  0008               	return
 15669  19B7                     __end_of_NVMWrite:	
 15670                           
 15671                           	psect	text49
 15672  2DB4                     __ptext49:	
 15673 ;; *************** function _SPIGet *****************
 15674 ;; Defined at:
 15675 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      unsigned char 
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0, pclath, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;Total ram usage:        0 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:    6
 15696 ;; This function calls:
 15697 ;;		_SPIPut
 15698 ;; This function is called by:
 15699 ;;		_RegisterRead
 15700 ;;		_NVMRead
 15701 ;;		_NVMWrite
 15702 ;;		_EEPROM_Read
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           
 15707                           ;psect for function _SPIGet
 15708  2DB4                     _SPIGet:	
 15709                           
 15710                           ;spi.c: 115: SPIPut(0x00);
 15711                           
 15712                           ;incstack = 0
 15713                           ; Regs used in _SPIGet: [wreg+status,2+status,0+pclath+cstack]
 15714  2DB4  3000               	movlw	0
 15715  2DB5  31AE  26DC         	fcall	_SPIPut
 15716                           
 15717                           ;spi.c: 116: return SSP1BUF;
 15718  2DB7  0024               	movlb	4	; select bank4
 15719  2DB8  0811               	movf	17,w	;volatile
 15720  2DB9  0008               	return
 15721  2DBA                     __end_of_SPIGet:	
 15722                           
 15723                           	psect	text50
 15724  0002                     __ptext50:	
 15725 ;; *************** function _MacroNop *****************
 15726 ;; Defined at:
 15727 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;		None
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;		None
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      void 
 15734 ;; Registers used:
 15735 ;;		None
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;Total ram usage:        0 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    5
 15748 ;; This function calls:
 15749 ;;		Nothing
 15750 ;; This function is called by:
 15751 ;;		_NVMWrite
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           
 15756                           ;psect for function _MacroNop
 15757  0002                     _MacroNop:	
 15758                           
 15759                           ;miwi_p2p.c: 326: __nop();
 15760                           
 15761                           ;incstack = 0
 15762                           ; Regs used in _MacroNop: []
 15763  0002  0000               	nop
 15764  0003  0008               	return
 15765  0004                     __end_of_MacroNop:	
 15766                           
 15767                           	psect	text51
 15768  1EA2                     __ptext51:	
 15769 ;; *************** function _DumpConnection *****************
 15770 ;; Defined at:
 15771 ;;		line 2427 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;  index           1    wreg     unsigned char 
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;  index           1   23[BANK1 ] unsigned char 
 15776 ;;  i               1   25[BANK1 ] unsigned char 
 15777 ;;  j               1   24[BANK1 ] unsigned char 
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;Total ram usage:        7 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    7
 15794 ;; This function calls:
 15795 ;;		_CONSOLE_PrintDec
 15796 ;;		_CONSOLE_PrintHex
 15797 ;;		_CONSOLE_PutString
 15798 ;;		___bmul
 15799 ;; This function is called by:
 15800 ;;		_Initialize_Demo
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           
 15805                           ;psect for function _DumpConnection
 15806  1EA2                     _DumpConnection:	
 15807                           
 15808                           ;incstack = 0
 15809                           ; Regs used in _DumpConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15810                           ;DumpConnection@index stored from wreg
 15811  1EA2  0021               	movlb	1	; select bank1
 15812  1EA3  00B7               	movwf	DumpConnection@index^(0+128)
 15813                           
 15814                           ;miwi_p2p.c: 2429: uint8_t i, j;
 15815                           ;miwi_p2p.c: 2431: if( index > 5 )
 15816  1EA4  3006               	movlw	6
 15817  1EA5  0237               	subwf	DumpConnection@index^(0+128),w
 15818  1EA6  1C03               	skipc
 15819  1EA7  2ED7               	goto	l6686
 15820                           
 15821                           ;miwi_p2p.c: 2432: {
 15822                           ;miwi_p2p.c: 2433: CONSOLE_PutString((char*)"\r\n\r\nMy Address: 0x");
 15823  1EA8  30A0               	movlw	low (STR_2| (0+32768))
 15824  1EA9  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15825  1EAA  3088               	movlw	high (STR_2| (0+32768))
 15826  1EAB  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15827  1EAC  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15828                           
 15829                           ;miwi_p2p.c: 2434: for(i = 0; i < 8; i++)
 15830  1EAF  0021               	movlb	1	; select bank1
 15831  1EB0  01B9               	clrf	DumpConnection@i^(0+128)
 15832  1EB1  3008               	movlw	8
 15833  1EB2  0239               	subwf	DumpConnection@i^(0+128),w
 15834  1EB3  1803               	btfsc	3,0
 15835  1EB4  2ECB               	goto	l6682
 15836  1EB5                     l6676:	
 15837                           
 15838                           ;miwi_p2p.c: 2435: {
 15839                           ;miwi_p2p.c: 2436: CONSOLE_PrintHex(myLongAddress[8-1-i]);
 15840  1EB5  0839               	movf	DumpConnection@i^(0+128),w
 15841  1EB6  3E01               	addlw	1
 15842  1EB7  3AFF               	xorlw	255
 15843  1EB8  3E01               	addlw	1
 15844  1EB9  3E08               	addlw	8
 15845  1EBA  3EDA               	addlw	(low (_myLongAddress| (0+256)))& (0+255)
 15846  1EBB  0086               	movwf	6
 15847  1EBC  3001               	movlw	1	; select bank3/4
 15848  1EBD  0087               	movwf	7
 15849  1EBE  0801               	movf	1,w
 15850  1EBF  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 15851  1EC2  3001               	movlw	1
 15852  1EC3  0021               	movlb	1	; select bank1
 15853  1EC4  00B3               	movwf	??_DumpConnection^(0+128)
 15854  1EC5  0833               	movf	??_DumpConnection^(0+128),w
 15855  1EC6  07B9               	addwf	DumpConnection@i^(0+128),f
 15856  1EC7  3008               	movlw	8
 15857  1EC8  0239               	subwf	DumpConnection@i^(0+128),w
 15858  1EC9  1C03               	skipc
 15859  1ECA  2EB5               	goto	l6676
 15860  1ECB                     l6682:	
 15861                           
 15862                           ;miwi_p2p.c: 2437: }
 15863                           ;miwi_p2p.c: 2443: CONSOLE_PutString((char*)"  Channel: ");
 15864  1ECB  3025               	movlw	low (STR_3| (0+32768))
 15865  1ECC  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15866  1ECD  3089               	movlw	high (STR_3| (0+32768))
 15867  1ECE  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15868  1ECF  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15869                           
 15870                           ;miwi_p2p.c: 2444: CONSOLE_PrintDec(currentChannel);
 15871  1ED2  0022               	movlb	2	; select bank2
 15872  1ED3  084C               	movf	_currentChannel^(0+256),w
 15873  1ED4  3198  207E  319E   	fcall	_CONSOLE_PrintDec
 15874  1ED7                     l6686:	
 15875                           
 15876                           ;miwi_p2p.c: 2445: }
 15877                           ;miwi_p2p.c: 2447: if( index < 5 )
 15878  1ED7  3005               	movlw	5
 15879  1ED8  0021               	movlb	1	; select bank1
 15880  1ED9  0237               	subwf	DumpConnection@index^(0+128),w
 15881  1EDA  1803               	skipnc
 15882  1EDB  2F68               	goto	l6728
 15883                           
 15884                           ;miwi_p2p.c: 2448: {
 15885                           ;miwi_p2p.c: 2449: CONSOLE_PutString((char*)"\r\nConnection     PeerLongAddress     Peer
      +                          Info\r\n");
 15886  1EDC  30E8               	movlw	low ((STR_9+2)| (0+32768))
 15887  1EDD  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15888  1EDE  3086               	movlw	high ((STR_9+2)| (0+32768))
 15889  1EDF  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15890  1EE0  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15891                           
 15892                           ;miwi_p2p.c: 2450: if( ConnectionTable[index].status.bits.isValid )
 15893  1EE3  300A               	movlw	10
 15894  1EE4  0021               	movlb	1	; select bank1
 15895  1EE5  00B3               	movwf	??_DumpConnection^(0+128)
 15896  1EE6  0833               	movf	??_DumpConnection^(0+128),w
 15897  1EE7  00A0               	movwf	___bmul@multiplicand^(0+128)
 15898  1EE8  0837               	movf	DumpConnection@index^(0+128),w
 15899  1EE9  31AE  2662  319E   	fcall	___bmul
 15900  1EEC  3E08               	addlw	8
 15901  1EED  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 15902  1EEE  0086               	movwf	6
 15903  1EEF  3001               	movlw	1	; select bank3/4
 15904  1EF0  0087               	movwf	7
 15905  1EF1  1F81               	btfss	1,7
 15906  1EF2  0008               	return
 15907                           
 15908                           ;miwi_p2p.c: 2451: {
 15909                           ;miwi_p2p.c: 2452: CONSOLE_PrintHex(index);
 15910  1EF3  0021               	movlb	1	; select bank1
 15911  1EF4  0837               	movf	DumpConnection@index^(0+128),w
 15912  1EF5  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 15913                           
 15914                           ;miwi_p2p.c: 2453: CONSOLE_PutString((char*)"             ");
 15915  1EF8  3017               	movlw	low (STR_5| (0+32768))
 15916  1EF9  0021               	movlb	1	; select bank1
 15917  1EFA  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15918  1EFB  3089               	movlw	high (STR_5| (0+32768))
 15919  1EFC  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15920  1EFD  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15921                           
 15922                           ;miwi_p2p.c: 2454: for(i = 0; i < 8; i++)
 15923  1F00  0021               	movlb	1	; select bank1
 15924  1F01  01B9               	clrf	DumpConnection@i^(0+128)
 15925  1F02  3008               	movlw	8
 15926  1F03  0239               	subwf	DumpConnection@i^(0+128),w
 15927  1F04  1803               	btfsc	3,0
 15928  1F05  2F34               	goto	l6712
 15929  1F06                     l6702:	
 15930                           
 15931                           ;miwi_p2p.c: 2455: {
 15932                           ;miwi_p2p.c: 2456: if(i < 8)
 15933  1F06  3008               	movlw	8
 15934  1F07  0239               	subwf	DumpConnection@i^(0+128),w
 15935  1F08  1803               	skipnc
 15936  1F09  2F23               	goto	l6706
 15937                           
 15938                           ;miwi_p2p.c: 2457: {
 15939                           ;miwi_p2p.c: 2458: CONSOLE_PrintHex( ConnectionTable[index].Address[8-1-i] );
 15940  1F0A  0839               	movf	DumpConnection@i^(0+128),w
 15941  1F0B  3E01               	addlw	1
 15942  1F0C  3AFF               	xorlw	255
 15943  1F0D  3E01               	addlw	1
 15944  1F0E  3E08               	addlw	8
 15945  1F0F  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 15946  1F10  00B3               	movwf	??_DumpConnection^(0+128)
 15947  1F11  300A               	movlw	10
 15948  1F12  00B4               	movwf	(??_DumpConnection+1)^(0+128)
 15949  1F13  0834               	movf	(??_DumpConnection+1)^(0+128),w
 15950  1F14  00A0               	movwf	___bmul@multiplicand^(0+128)
 15951  1F15  0837               	movf	DumpConnection@index^(0+128),w
 15952  1F16  31AE  2662  319E   	fcall	___bmul
 15953  1F19  0021               	movlb	1	; select bank1
 15954  1F1A  0733               	addwf	??_DumpConnection^(0+128),w
 15955  1F1B  0086               	movwf	6
 15956  1F1C  3001               	movlw	1	; select bank3/4
 15957  1F1D  0087               	movwf	7
 15958  1F1E  0801               	movf	1,w
 15959  1F1F  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 15960                           
 15961                           ;miwi_p2p.c: 2459: }
 15962  1F22  2F2B               	goto	l6708
 15963  1F23                     l6706:	
 15964                           
 15965                           ;miwi_p2p.c: 2460: else
 15966                           ;miwi_p2p.c: 2461: {
 15967                           ;miwi_p2p.c: 2462: CONSOLE_PutString((char*)"  ");
 15968  1F23  3022               	movlw	low ((STR_5+11)| (0+32768))
 15969  1F24  0021               	movlb	1	; select bank1
 15970  1F25  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15971  1F26  3089               	movlw	high ((STR_5+11)| (0+32768))
 15972  1F27  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15973  1F28  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15974  1F2B                     l6708:	
 15975  1F2B  3001               	movlw	1
 15976  1F2C  0021               	movlb	1	; select bank1
 15977  1F2D  00B3               	movwf	??_DumpConnection^(0+128)
 15978  1F2E  0833               	movf	??_DumpConnection^(0+128),w
 15979  1F2F  07B9               	addwf	DumpConnection@i^(0+128),f
 15980  1F30  3008               	movlw	8
 15981  1F31  0239               	subwf	DumpConnection@i^(0+128),w
 15982  1F32  1C03               	skipc
 15983  1F33  2F06               	goto	l6702
 15984  1F34                     l6712:	
 15985                           
 15986                           ;miwi_p2p.c: 2463: }
 15987                           ;miwi_p2p.c: 2464: }
 15988                           ;miwi_p2p.c: 2465: CONSOLE_PutString((char*)"    ");
 15989  1F34  3020               	movlw	low ((STR_5+9)| (0+32768))
 15990  1F35  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 15991  1F36  3089               	movlw	high ((STR_5+9)| (0+32768))
 15992  1F37  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 15993  1F38  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 15994                           
 15995                           ;miwi_p2p.c: 2467: for(i = 0; i < 1; i++)
 15996  1F3B  0021               	movlb	1	; select bank1
 15997  1F3C  01B9               	clrf	DumpConnection@i^(0+128)
 15998  1F3D  0839               	movf	DumpConnection@i^(0+128),w
 15999  1F3E  1D03               	btfss	3,2
 16000  1F3F  2F61               	goto	l6726
 16001  1F40                     l6720:	
 16002                           
 16003                           ;miwi_p2p.c: 2468: {
 16004                           ;miwi_p2p.c: 2469: CONSOLE_PrintHex( ConnectionTable[index].PeerInfo[i] );
 16005  1F40  3009               	movlw	9
 16006  1F41  0739               	addwf	DumpConnection@i^(0+128),w
 16007  1F42  00B3               	movwf	??_DumpConnection^(0+128)
 16008  1F43  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16009  1F44  0733               	addwf	??_DumpConnection^(0+128),w
 16010  1F45  00B4               	movwf	(??_DumpConnection+1)^(0+128)
 16011  1F46  300A               	movlw	10
 16012  1F47  00B5               	movwf	(??_DumpConnection+2)^(0+128)
 16013  1F48  0835               	movf	(??_DumpConnection+2)^(0+128),w
 16014  1F49  00A0               	movwf	___bmul@multiplicand^(0+128)
 16015  1F4A  0837               	movf	DumpConnection@index^(0+128),w
 16016  1F4B  31AE  2662  319E   	fcall	___bmul
 16017  1F4E  0021               	movlb	1	; select bank1
 16018  1F4F  0734               	addwf	(??_DumpConnection+1)^(0+128),w
 16019  1F50  00B6               	movwf	(??_DumpConnection+3)^(0+128)
 16020  1F51  0836               	movf	(??_DumpConnection+3)^(0+128),w
 16021  1F52  0086               	movwf	6
 16022  1F53  3001               	movlw	1	; select bank3/4
 16023  1F54  0087               	movwf	7
 16024  1F55  0801               	movf	1,w
 16025  1F56  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 16026  1F59  3001               	movlw	1
 16027  1F5A  0021               	movlb	1	; select bank1
 16028  1F5B  00B3               	movwf	??_DumpConnection^(0+128)
 16029  1F5C  0833               	movf	??_DumpConnection^(0+128),w
 16030  1F5D  07B9               	addwf	DumpConnection@i^(0+128),f
 16031  1F5E  0839               	movf	DumpConnection@i^(0+128),w
 16032  1F5F  1903               	btfsc	3,2
 16033  1F60  2F40               	goto	l6720
 16034  1F61                     l6726:	
 16035                           
 16036                           ;miwi_p2p.c: 2470: }
 16037                           ;miwi_p2p.c: 2472: CONSOLE_PutString((char*)"\r\n");
 16038  1F61  304D               	movlw	low ((STR_25+2)| (0+32768))
 16039  1F62  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16040  1F63  3089               	movlw	high ((STR_25+2)| (0+32768))
 16041  1F64  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16042  1F65  31AE  26F3         	fcall	_CONSOLE_PutString
 16043                           
 16044                           ;miwi_p2p.c: 2473: }
 16045                           ;miwi_p2p.c: 2474: }
 16046  1F67  0008               	return
 16047  1F68                     l6728:	
 16048                           
 16049                           ;miwi_p2p.c: 2475: else
 16050                           ;miwi_p2p.c: 2476: {
 16051                           ;miwi_p2p.c: 2477: CONSOLE_PutString((char*)"\r\n\r\nConnection     PeerLongAddress     
      +                          PeerInfo\r\n");
 16052  1F68  30E6               	movlw	low (STR_9| (0+32768))
 16053  1F69  0021               	movlb	1	; select bank1
 16054  1F6A  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16055  1F6B  3086               	movlw	high (STR_9| (0+32768))
 16056  1F6C  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16057  1F6D  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 16058                           
 16059                           ;miwi_p2p.c: 2478: for(i = 0; i < 5; i++)
 16060  1F70  0021               	movlb	1	; select bank1
 16061  1F71  01B9               	clrf	DumpConnection@i^(0+128)
 16062  1F72                     L4:	
 16063  1F72  3005               	movlw	5
 16064  1F73  0239               	subwf	DumpConnection@i^(0+128),w
 16065  1F74  1803               	btfsc	3,0
 16066  1F75  0008               	return
 16067                           
 16068                           ;miwi_p2p.c: 2479: {
 16069                           ;miwi_p2p.c: 2481: if( ConnectionTable[i].status.bits.isValid )
 16070  1F76  300A               	movlw	10
 16071  1F77  00B3               	movwf	??_DumpConnection^(0+128)
 16072  1F78  0833               	movf	??_DumpConnection^(0+128),w
 16073  1F79  00A0               	movwf	___bmul@multiplicand^(0+128)
 16074  1F7A  0839               	movf	DumpConnection@i^(0+128),w
 16075  1F7B  31AE  2662  319E   	fcall	___bmul
 16076  1F7E  3E08               	addlw	8
 16077  1F7F  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16078  1F80  0086               	movwf	6
 16079  1F81  3001               	movlw	1	; select bank3/4
 16080  1F82  0087               	movwf	7
 16081  1F83  1F81               	btfss	1,7
 16082  1F84  2FFA               	goto	l6774
 16083                           
 16084                           ;miwi_p2p.c: 2482: {
 16085                           ;miwi_p2p.c: 2483: CONSOLE_PrintHex(i);
 16086  1F85  0021               	movlb	1	; select bank1
 16087  1F86  0839               	movf	DumpConnection@i^(0+128),w
 16088  1F87  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 16089                           
 16090                           ;miwi_p2p.c: 2484: CONSOLE_PutString((char*)"             ");
 16091  1F8A  3017               	movlw	low (STR_5| (0+32768))
 16092  1F8B  0021               	movlb	1	; select bank1
 16093  1F8C  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16094  1F8D  3089               	movlw	high (STR_5| (0+32768))
 16095  1F8E  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16096  1F8F  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 16097                           
 16098                           ;miwi_p2p.c: 2485: for(j = 0; j < 8; j++)
 16099  1F92  0021               	movlb	1	; select bank1
 16100  1F93  01B8               	clrf	DumpConnection@j^(0+128)
 16101  1F94  3008               	movlw	8
 16102  1F95  0238               	subwf	DumpConnection@j^(0+128),w
 16103  1F96  1803               	btfsc	3,0
 16104  1F97  2FC6               	goto	l6758
 16105  1F98                     l6748:	
 16106                           
 16107                           ;miwi_p2p.c: 2486: {
 16108                           ;miwi_p2p.c: 2487: if( j < 8 )
 16109  1F98  3008               	movlw	8
 16110  1F99  0238               	subwf	DumpConnection@j^(0+128),w
 16111  1F9A  1803               	skipnc
 16112  1F9B  2FB5               	goto	l6752
 16113                           
 16114                           ;miwi_p2p.c: 2488: {
 16115                           ;miwi_p2p.c: 2489: CONSOLE_PrintHex( ConnectionTable[i].Address[8-1-j] );
 16116  1F9C  0838               	movf	DumpConnection@j^(0+128),w
 16117  1F9D  3E01               	addlw	1
 16118  1F9E  3AFF               	xorlw	255
 16119  1F9F  3E01               	addlw	1
 16120  1FA0  3E08               	addlw	8
 16121  1FA1  3EA8               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16122  1FA2  00B3               	movwf	??_DumpConnection^(0+128)
 16123  1FA3  300A               	movlw	10
 16124  1FA4  00B4               	movwf	(??_DumpConnection+1)^(0+128)
 16125  1FA5  0834               	movf	(??_DumpConnection+1)^(0+128),w
 16126  1FA6  00A0               	movwf	___bmul@multiplicand^(0+128)
 16127  1FA7  0839               	movf	DumpConnection@i^(0+128),w
 16128  1FA8  31AE  2662  319E   	fcall	___bmul
 16129  1FAB  0021               	movlb	1	; select bank1
 16130  1FAC  0733               	addwf	??_DumpConnection^(0+128),w
 16131  1FAD  0086               	movwf	6
 16132  1FAE  3001               	movlw	1	; select bank3/4
 16133  1FAF  0087               	movwf	7
 16134  1FB0  0801               	movf	1,w
 16135  1FB1  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 16136                           
 16137                           ;miwi_p2p.c: 2490: }
 16138  1FB4  2FBD               	goto	l6754
 16139  1FB5                     l6752:	
 16140                           
 16141                           ;miwi_p2p.c: 2491: else
 16142                           ;miwi_p2p.c: 2492: {
 16143                           ;miwi_p2p.c: 2493: CONSOLE_PutString((char*)"  ");
 16144  1FB5  3022               	movlw	low ((STR_5+11)| (0+32768))
 16145  1FB6  0021               	movlb	1	; select bank1
 16146  1FB7  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16147  1FB8  3089               	movlw	high ((STR_5+11)| (0+32768))
 16148  1FB9  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16149  1FBA  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 16150  1FBD                     l6754:	
 16151  1FBD  3001               	movlw	1
 16152  1FBE  0021               	movlb	1	; select bank1
 16153  1FBF  00B3               	movwf	??_DumpConnection^(0+128)
 16154  1FC0  0833               	movf	??_DumpConnection^(0+128),w
 16155  1FC1  07B8               	addwf	DumpConnection@j^(0+128),f
 16156  1FC2  3008               	movlw	8
 16157  1FC3  0238               	subwf	DumpConnection@j^(0+128),w
 16158  1FC4  1C03               	skipc
 16159  1FC5  2F98               	goto	l6748
 16160  1FC6                     l6758:	
 16161                           
 16162                           ;miwi_p2p.c: 2494: }
 16163                           ;miwi_p2p.c: 2495: }
 16164                           ;miwi_p2p.c: 2496: CONSOLE_PutString((char*)"    ");
 16165  1FC6  3020               	movlw	low ((STR_5+9)| (0+32768))
 16166  1FC7  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16167  1FC8  3089               	movlw	high ((STR_5+9)| (0+32768))
 16168  1FC9  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16169  1FCA  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 16170                           
 16171                           ;miwi_p2p.c: 2498: for(j = 0; j < 1; j++)
 16172  1FCD  0021               	movlb	1	; select bank1
 16173  1FCE  01B8               	clrf	DumpConnection@j^(0+128)
 16174  1FCF  0838               	movf	DumpConnection@j^(0+128),w
 16175  1FD0  1D03               	btfss	3,2
 16176  1FD1  2FF3               	goto	l6772
 16177  1FD2                     l6766:	
 16178                           
 16179                           ;miwi_p2p.c: 2499: {
 16180                           ;miwi_p2p.c: 2500: CONSOLE_PrintHex( ConnectionTable[i].PeerInfo[j] );
 16181  1FD2  3009               	movlw	9
 16182  1FD3  0738               	addwf	DumpConnection@j^(0+128),w
 16183  1FD4  00B3               	movwf	??_DumpConnection^(0+128)
 16184  1FD5  30A8               	movlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16185  1FD6  0733               	addwf	??_DumpConnection^(0+128),w
 16186  1FD7  00B4               	movwf	(??_DumpConnection+1)^(0+128)
 16187  1FD8  300A               	movlw	10
 16188  1FD9  00B5               	movwf	(??_DumpConnection+2)^(0+128)
 16189  1FDA  0835               	movf	(??_DumpConnection+2)^(0+128),w
 16190  1FDB  00A0               	movwf	___bmul@multiplicand^(0+128)
 16191  1FDC  0839               	movf	DumpConnection@i^(0+128),w
 16192  1FDD  31AE  2662  319E   	fcall	___bmul
 16193  1FE0  0021               	movlb	1	; select bank1
 16194  1FE1  0734               	addwf	(??_DumpConnection+1)^(0+128),w
 16195  1FE2  00B6               	movwf	(??_DumpConnection+3)^(0+128)
 16196  1FE3  0836               	movf	(??_DumpConnection+3)^(0+128),w
 16197  1FE4  0086               	movwf	6
 16198  1FE5  3001               	movlw	1	; select bank3/4
 16199  1FE6  0087               	movwf	7
 16200  1FE7  0801               	movf	1,w
 16201  1FE8  31A1  21EE  319E   	fcall	_CONSOLE_PrintHex
 16202  1FEB  3001               	movlw	1
 16203  1FEC  0021               	movlb	1	; select bank1
 16204  1FED  00B3               	movwf	??_DumpConnection^(0+128)
 16205  1FEE  0833               	movf	??_DumpConnection^(0+128),w
 16206  1FEF  07B8               	addwf	DumpConnection@j^(0+128),f
 16207  1FF0  0838               	movf	DumpConnection@j^(0+128),w
 16208  1FF1  1903               	btfsc	3,2
 16209  1FF2  2FD2               	goto	l6766
 16210  1FF3                     l6772:	
 16211                           
 16212                           ;miwi_p2p.c: 2501: }
 16213                           ;miwi_p2p.c: 2503: CONSOLE_PutString((char*)"\r\n");
 16214  1FF3  304D               	movlw	low ((STR_25+2)| (0+32768))
 16215  1FF4  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16216  1FF5  3089               	movlw	high ((STR_25+2)| (0+32768))
 16217  1FF6  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16218  1FF7  31AE  26F3  319E   	fcall	_CONSOLE_PutString
 16219  1FFA                     l6774:	
 16220  1FFA  3001               	movlw	1
 16221  1FFB  0021               	movlb	1	; select bank1
 16222  1FFC  00B3               	movwf	??_DumpConnection^(0+128)
 16223  1FFD  0833               	movf	??_DumpConnection^(0+128),w
 16224  1FFE  07B9               	addwf	DumpConnection@i^(0+128),f
 16225  1FFF  2F72               	goto	L4
 16226  2000                     __end_of_DumpConnection:	
 16227                           
 16228                           	psect	text52
 16229  21EE                     __ptext52:	
 16230 ;; *************** function _CONSOLE_PrintHex *****************
 16231 ;; Defined at:
 16232 ;;		line 184 in file "../src/system_config/pic18exp_pic16f1947_89xa/console.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;  toPrint         1    wreg     unsigned char 
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  toPrint         1    4[BANK1 ] unsigned char 
 16237 ;;  PRINT_VAR       1    3[BANK1 ] unsigned char 
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16248 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16249 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16250 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16251 ;;Total ram usage:        4 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; Hardware stack levels required when called:    6
 16254 ;; This function calls:
 16255 ;;		_CONSOLE_Put
 16256 ;; This function is called by:
 16257 ;;		_MiApp_ProtocolInit
 16258 ;;		_DumpConnection
 16259 ;;		_DemoOutput_HandleMessage
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           
 16264                           ;psect for function _CONSOLE_PrintHex
 16265  21EE                     _CONSOLE_PrintHex:	
 16266                           
 16267                           ;incstack = 0
 16268                           ; Regs used in _CONSOLE_PrintHex: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16269                           ;CONSOLE_PrintHex@toPrint stored from wreg
 16270  21EE  0021               	movlb	1	; select bank1
 16271  21EF  00A4               	movwf	CONSOLE_PrintHex@toPrint^(0+128)
 16272                           
 16273                           ;console.c: 186: uint8_t PRINT_VAR;
 16274                           ;console.c: 187: PRINT_VAR = toPrint;
 16275  21F0  0824               	movf	CONSOLE_PrintHex@toPrint^(0+128),w
 16276  21F1  00A1               	movwf	??_CONSOLE_PrintHex^(0+128)
 16277  21F2  0821               	movf	??_CONSOLE_PrintHex^(0+128),w
 16278  21F3  00A3               	movwf	CONSOLE_PrintHex@PRINT_VAR^(0+128)
 16279                           
 16280                           ;console.c: 188: toPrint = (toPrint>>4)&0x0F;
 16281  21F4  0824               	movf	CONSOLE_PrintHex@toPrint^(0+128),w
 16282  21F5  00A1               	movwf	??_CONSOLE_PrintHex^(0+128)
 16283  21F6  3004               	movlw	4
 16284  21F7                     u5835:	
 16285  21F7  36A1               	lsrf	??_CONSOLE_PrintHex^(0+128),f
 16286  21F8  0B89               	decfsz	9,f
 16287  21F9  29F7               	goto	u5835
 16288  21FA  0821               	movf	??_CONSOLE_PrintHex^(0+128),w
 16289  21FB  390F               	andlw	15
 16290  21FC  00A2               	movwf	(??_CONSOLE_PrintHex+1)^(0+128)
 16291  21FD  0822               	movf	(??_CONSOLE_PrintHex+1)^(0+128),w
 16292  21FE  00A4               	movwf	CONSOLE_PrintHex@toPrint^(0+128)
 16293                           
 16294                           ;console.c: 189: CONSOLE_Put(CharacterArray[toPrint]);
 16295  21FF  0824               	movf	CONSOLE_PrintHex@toPrint^(0+128),w
 16296  2200  3E5C               	addlw	(low (_CharacterArray| (0+512)))& (0+255)
 16297  2201  0086               	movwf	6
 16298  2202  3002               	movlw	2	; select bank4/5
 16299  2203  0087               	movwf	7
 16300  2204  0801               	movf	1,w
 16301  2205  31AD  25C0  31A1   	fcall	_CONSOLE_Put
 16302                           
 16303                           ;console.c: 190: toPrint = (PRINT_VAR)&0x0F;
 16304  2208  0021               	movlb	1	; select bank1
 16305  2209  0823               	movf	CONSOLE_PrintHex@PRINT_VAR^(0+128),w
 16306  220A  390F               	andlw	15
 16307  220B  00A1               	movwf	??_CONSOLE_PrintHex^(0+128)
 16308  220C  0821               	movf	??_CONSOLE_PrintHex^(0+128),w
 16309  220D  00A4               	movwf	CONSOLE_PrintHex@toPrint^(0+128)
 16310                           
 16311                           ;console.c: 191: CONSOLE_Put(CharacterArray[toPrint]);
 16312  220E  0824               	movf	CONSOLE_PrintHex@toPrint^(0+128),w
 16313  220F  3E5C               	addlw	(low (_CharacterArray| (0+512)))& (0+255)
 16314  2210  0086               	movwf	6
 16315  2211  3002               	movlw	2	; select bank4/5
 16316  2212  0087               	movwf	7
 16317  2213  0801               	movf	1,w
 16318  2214  31AD  25C0         	fcall	_CONSOLE_Put
 16319  2216  0008               	return
 16320  2217                     __end_of_CONSOLE_PrintHex:	
 16321                           ;console.c: 192: return;
 16322                           
 16323                           
 16324                           	psect	text53
 16325  1000                     __ptext53:	
 16326 ;; *************** function _DemoOutput_Instruction *****************
 16327 ;; Defined at:
 16328 ;;		line 224 in file "../src/demo_ouput.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;		None
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;		None
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  1    wreg      void 
 16335 ;; Registers used:
 16336 ;;		None
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;Total ram usage:        0 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    5
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_Process_RxMessage
 16353 ;;		_run_p2p_demo
 16354 ;;		_Initialize_Demo
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           
 16359                           ;psect for function _DemoOutput_Instruction
 16360  1000                     _DemoOutput_Instruction:	
 16361                           
 16362                           ;incstack = 0
 16363                           ; Regs used in _DemoOutput_Instruction: []
 16364  1000  0008               	return
 16365  1001                     __end_of_DemoOutput_Instruction:	
 16366                           
 16367                           	psect	text54
 16368  2EB0                     __ptext54:	
 16369 ;; *************** function _DemoOutput_ChannelError *****************
 16370 ;; Defined at:
 16371 ;;		line 285 in file "../src/demo_ouput.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  channel         1    wreg     unsigned char 
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;  channel         1   19[BANK1 ] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;Total ram usage:        1 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:    7
 16392 ;; This function calls:
 16393 ;;		_CONSOLE_PrintDec
 16394 ;;		_CONSOLE_PutString
 16395 ;; This function is called by:
 16396 ;;		_Initialize_Demo
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400                           
 16401                           ;psect for function _DemoOutput_ChannelError
 16402  2EB0                     _DemoOutput_ChannelError:	
 16403                           
 16404                           ;incstack = 0
 16405                           ; Regs used in _DemoOutput_ChannelError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16406                           ;DemoOutput_ChannelError@channel stored from wreg
 16407  2EB0  0021               	movlb	1	; select bank1
 16408  2EB1  00B3               	movwf	DemoOutput_ChannelError@channel^(0+128)
 16409                           
 16410                           ;demo_ouput.c: 288: CONSOLE_PutString((char*)"\r\nSelection of channel ");
 16411  2EB2  3033               	movlw	low (STR_37| (0+32768))
 16412  2EB3  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16413  2EB4  3088               	movlw	high (STR_37| (0+32768))
 16414  2EB5  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16415  2EB6  31AE  26F3  31AE   	fcall	_CONSOLE_PutString
 16416                           
 16417                           ;demo_ouput.c: 289: CONSOLE_PrintDec(channel);
 16418  2EB9  0021               	movlb	1	; select bank1
 16419  2EBA  0833               	movf	DemoOutput_ChannelError@channel^(0+128),w
 16420  2EBB  3198  207E  31AE   	fcall	_CONSOLE_PrintDec
 16421                           
 16422                           ;demo_ouput.c: 290: CONSOLE_PutString((char*)" is not supported in current configuration
      +                          .\r\n");
 16423  2EBE  3018               	movlw	low (STR_38| (0+32768))
 16424  2EBF  0021               	movlb	1	; select bank1
 16425  2EC0  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16426  2EC1  3087               	movlw	high (STR_38| (0+32768))
 16427  2EC2  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16428  2EC3  31AE  26F3         	fcall	_CONSOLE_PutString
 16429  2EC5  0008               	return
 16430  2EC6                     __end_of_DemoOutput_ChannelError:	
 16431                           
 16432                           	psect	text55
 16433  2528                     __ptext55:	
 16434 ;; *************** function _DemoOutput_Channel *****************
 16435 ;; Defined at:
 16436 ;;		line 200 in file "../src/demo_ouput.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;  channel         1    wreg     unsigned char 
 16439 ;;  Step            1   55[BANK1 ] unsigned char 
 16440 ;; Auto vars:     Size  Location     Type
 16441 ;;  channel         1   57[BANK1 ] unsigned char 
 16442 ;; Return value:  Size  Location     Type
 16443 ;;                  1    wreg      void 
 16444 ;; Registers used:
 16445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16446 ;; Tracked objects:
 16447 ;;		On entry : 0/0
 16448 ;;		On exit  : 0/0
 16449 ;;		Unchanged: 0/0
 16450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16451 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16453 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16455 ;;Total ram usage:        3 bytes
 16456 ;; Hardware stack levels used:    1
 16457 ;; Hardware stack levels required when called:   10
 16458 ;; This function calls:
 16459 ;;		_CONSOLE_PrintDec
 16460 ;;		_CONSOLE_PutString
 16461 ;;		_LCDDisplay
 16462 ;; This function is called by:
 16463 ;;		_Initialize_Demo
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           
 16468                           ;psect for function _DemoOutput_Channel
 16469  2528                     _DemoOutput_Channel:	
 16470                           
 16471                           ;incstack = 0
 16472                           ; Regs used in _DemoOutput_Channel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16473                           ;DemoOutput_Channel@channel stored from wreg
 16474  2528  0021               	movlb	1	; select bank1
 16475  2529  00D9               	movwf	DemoOutput_Channel@channel^(0+128)
 16476                           
 16477                           ;demo_ouput.c: 202: if( Step == 0 )
 16478  252A  0857               	movf	DemoOutput_Channel@Step^(0+128),w
 16479  252B  1D03               	btfss	3,2
 16480  252C  2D4F               	goto	l6832
 16481                           
 16482                           ;demo_ouput.c: 203: {
 16483                           ;demo_ouput.c: 205: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 16484  252D  3046               	movlw	low (STR_26| (0+32768))
 16485  252E  00D0               	movwf	LCDDisplay@text^(0+128)
 16486  252F  3087               	movlw	high (STR_26| (0+32768))
 16487  2530  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 16488  2531  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 16489  2532  00D8               	movwf	??_DemoOutput_Channel^(0+128)
 16490  2533  0858               	movf	??_DemoOutput_Channel^(0+128),w
 16491  2534  00D2               	movwf	LCDDisplay@value^(0+128)
 16492  2535  01D3               	clrf	LCDDisplay@delay^(0+128)
 16493  2536  0AD3               	incf	LCDDisplay@delay^(0+128),f
 16494  2537  31A2  22FE  31A5   	fcall	_LCDDisplay
 16495                           
 16496                           ;demo_ouput.c: 207: CONSOLE_PutString((char*)"\r\nConnecting Peer on Channel ");
 16497  253A  30A4               	movlw	low (STR_27| (0+32768))
 16498  253B  0021               	movlb	1	; select bank1
 16499  253C  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16500  253D  3087               	movlw	high (STR_27| (0+32768))
 16501  253E  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16502  253F  31AE  26F3  31A5   	fcall	_CONSOLE_PutString
 16503                           
 16504                           ;demo_ouput.c: 208: CONSOLE_PrintDec(channel);
 16505  2542  0021               	movlb	1	; select bank1
 16506  2543  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 16507  2544  3198  207E  31A5   	fcall	_CONSOLE_PrintDec
 16508                           
 16509                           ;demo_ouput.c: 209: CONSOLE_PutString((char*)"\r\n");
 16510  2547  304D               	movlw	low ((STR_25+2)| (0+32768))
 16511  2548  0021               	movlb	1	; select bank1
 16512  2549  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16513  254A  3089               	movlw	high ((STR_25+2)| (0+32768))
 16514  254B  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16515  254C  31AE  26F3         	fcall	_CONSOLE_PutString
 16516                           
 16517                           ;demo_ouput.c: 211: }
 16518  254E  0008               	return
 16519  254F                     l6832:	
 16520                           
 16521                           ;demo_ouput.c: 212: else
 16522                           ;demo_ouput.c: 213: {
 16523                           ;demo_ouput.c: 215: LCDDisplay((char *)"Connected Peer  on Channel %d", channel, 1);
 16524  254F  30C2               	movlw	low (STR_29| (0+32768))
 16525  2550  0021               	movlb	1	; select bank1
 16526  2551  00D0               	movwf	LCDDisplay@text^(0+128)
 16527  2552  3087               	movlw	high (STR_29| (0+32768))
 16528  2553  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 16529  2554  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 16530  2555  00D8               	movwf	??_DemoOutput_Channel^(0+128)
 16531  2556  0858               	movf	??_DemoOutput_Channel^(0+128),w
 16532  2557  00D2               	movwf	LCDDisplay@value^(0+128)
 16533  2558  01D3               	clrf	LCDDisplay@delay^(0+128)
 16534  2559  0AD3               	incf	LCDDisplay@delay^(0+128),f
 16535  255A  31A2  22FE  31A5   	fcall	_LCDDisplay
 16536                           
 16537                           ;demo_ouput.c: 217: CONSOLE_PutString((char*)"\r\nConnected Peer on Channel ");
 16538  255D  30E0               	movlw	low (STR_30| (0+32768))
 16539  255E  0021               	movlb	1	; select bank1
 16540  255F  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16541  2560  3087               	movlw	high (STR_30| (0+32768))
 16542  2561  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16543  2562  31AE  26F3  31A5   	fcall	_CONSOLE_PutString
 16544                           
 16545                           ;demo_ouput.c: 218: CONSOLE_PrintDec(channel);
 16546  2565  0021               	movlb	1	; select bank1
 16547  2566  0859               	movf	DemoOutput_Channel@channel^(0+128),w
 16548  2567  3198  207E  31A5   	fcall	_CONSOLE_PrintDec
 16549                           
 16550                           ;demo_ouput.c: 219: CONSOLE_PutString((char*)"\r\n");
 16551  256A  304D               	movlw	low ((STR_25+2)| (0+32768))
 16552  256B  0021               	movlb	1	; select bank1
 16553  256C  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 16554  256D  3089               	movlw	high ((STR_25+2)| (0+32768))
 16555  256E  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 16556  256F  31AE  26F3         	fcall	_CONSOLE_PutString
 16557  2571  0008               	return
 16558  2572                     __end_of_DemoOutput_Channel:	
 16559                           
 16560                           	psect	text56
 16561  187E                     __ptext56:	
 16562 ;; *************** function _CONSOLE_PrintDec *****************
 16563 ;; Defined at:
 16564 ;;		line 214 in file "../src/system_config/pic18exp_pic16f1947_89xa/console.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;  toPrint         1    wreg     unsigned char 
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;  toPrint         1   18[BANK1 ] unsigned char 
 16569 ;; Return value:  Size  Location     Type
 16570 ;;                  1    wreg      void 
 16571 ;; Registers used:
 16572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16573 ;; Tracked objects:
 16574 ;;		On entry : 0/0
 16575 ;;		On exit  : 0/0
 16576 ;;		Unchanged: 0/0
 16577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16580 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16581 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16582 ;;Total ram usage:        3 bytes
 16583 ;; Hardware stack levels used:    1
 16584 ;; Hardware stack levels required when called:    6
 16585 ;; This function calls:
 16586 ;;		_CONSOLE_Put
 16587 ;;		___awdiv
 16588 ;;		___awmod
 16589 ;; This function is called by:
 16590 ;;		_DumpConnection
 16591 ;;		_DemoOutput_Channel
 16592 ;;		_DemoOutput_ChannelError
 16593 ;; This function uses a non-reentrant model
 16594 ;;
 16595                           
 16596                           
 16597                           ;psect for function _CONSOLE_PrintDec
 16598  187E                     _CONSOLE_PrintDec:	
 16599                           
 16600                           ;incstack = 0
 16601                           ; Regs used in _CONSOLE_PrintDec: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16602                           ;CONSOLE_PrintDec@toPrint stored from wreg
 16603  187E  0021               	movlb	1	; select bank1
 16604  187F  00B2               	movwf	CONSOLE_PrintDec@toPrint^(0+128)
 16605                           
 16606                           ;console.c: 216: if( toPrint >= 100 )
 16607  1880  3064               	movlw	100
 16608  1881  0232               	subwf	CONSOLE_PrintDec@toPrint^(0+128),w
 16609  1882  1C03               	skipc
 16610  1883  289C               	goto	l6358
 16611                           
 16612                           ;console.c: 217: CONSOLE_Put(CharacterArray[toPrint/100]);
 16613  1884  3064               	movlw	100
 16614  1885  00A7               	movwf	___awdiv@divisor^(0+128)
 16615  1886  3000               	movlw	0
 16616  1887  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
 16617  1888  0832               	movf	CONSOLE_PrintDec@toPrint^(0+128),w
 16618  1889  00B0               	movwf	??_CONSOLE_PrintDec^(0+128)
 16619  188A  01B1               	clrf	(??_CONSOLE_PrintDec^(0+128)+1)
 16620  188B  0830               	movf	??_CONSOLE_PrintDec^(0+128),w
 16621  188C  00A9               	movwf	___awdiv@dividend^(0+128)
 16622  188D  0831               	movf	(??_CONSOLE_PrintDec+1)^(0+128),w
 16623  188E  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
 16624  188F  31A6  2659  3198   	fcall	___awdiv
 16625  1892  0021               	movlb	1	; select bank1
 16626  1893  0827               	movf	?___awdiv^(0+128),w
 16627  1894  3E5C               	addlw	(low (_CharacterArray| (0+512)))& (0+255)
 16628  1895  0086               	movwf	6
 16629  1896  3002               	movlw	2	; select bank4/5
 16630  1897  0087               	movwf	7
 16631  1898  0801               	movf	1,w
 16632  1899  31AD  25C0  3198   	fcall	_CONSOLE_Put
 16633  189C                     l6358:	
 16634                           
 16635                           ;console.c: 218: if( toPrint >= 10 )
 16636  189C  300A               	movlw	10
 16637  189D  0021               	movlb	1	; select bank1
 16638  189E  0232               	subwf	CONSOLE_PrintDec@toPrint^(0+128),w
 16639  189F  1C03               	skipc
 16640  18A0  28C5               	goto	l600
 16641                           
 16642                           ;console.c: 219: CONSOLE_Put(CharacterArray[(toPrint%100)/10]);
 16643  18A1  300A               	movlw	10
 16644  18A2  00A7               	movwf	___awdiv@divisor^(0+128)
 16645  18A3  3000               	movlw	0
 16646  18A4  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
 16647  18A5  0832               	movf	CONSOLE_PrintDec@toPrint^(0+128),w
 16648  18A6  00B0               	movwf	??_CONSOLE_PrintDec^(0+128)
 16649  18A7  01B1               	clrf	(??_CONSOLE_PrintDec^(0+128)+1)
 16650  18A8  0830               	movf	??_CONSOLE_PrintDec^(0+128),w
 16651  18A9  00A2               	movwf	___awmod@dividend^(0+128)
 16652  18AA  0831               	movf	(??_CONSOLE_PrintDec+1)^(0+128),w
 16653  18AB  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 16654  18AC  3064               	movlw	100
 16655  18AD  00A0               	movwf	___awmod@divisor^(0+128)
 16656  18AE  3000               	movlw	0
 16657  18AF  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 16658  18B0  31A4  2452  3198   	fcall	___awmod
 16659  18B3  0021               	movlb	1	; select bank1
 16660  18B4  0821               	movf	(?___awmod+1)^(0+128),w
 16661  18B5  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
 16662  18B6  0820               	movf	?___awmod^(0+128),w
 16663  18B7  00A9               	movwf	___awdiv@dividend^(0+128)
 16664  18B8  31A6  2659  3198   	fcall	___awdiv
 16665  18BB  0021               	movlb	1	; select bank1
 16666  18BC  0827               	movf	?___awdiv^(0+128),w
 16667  18BD  3E5C               	addlw	(low (_CharacterArray| (0+512)))& (0+255)
 16668  18BE  0086               	movwf	6
 16669  18BF  3002               	movlw	2	; select bank4/5
 16670  18C0  0087               	movwf	7
 16671  18C1  0801               	movf	1,w
 16672  18C2  31AD  25C0  3198   	fcall	_CONSOLE_Put
 16673  18C5                     l600:	
 16674                           
 16675                           ;console.c: 220: CONSOLE_Put(CharacterArray[toPrint%10]);
 16676  18C5  300A               	movlw	10
 16677  18C6  0021               	movlb	1	; select bank1
 16678  18C7  00A0               	movwf	___awmod@divisor^(0+128)
 16679  18C8  3000               	movlw	0
 16680  18C9  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 16681  18CA  0832               	movf	CONSOLE_PrintDec@toPrint^(0+128),w
 16682  18CB  00B0               	movwf	??_CONSOLE_PrintDec^(0+128)
 16683  18CC  01B1               	clrf	(??_CONSOLE_PrintDec^(0+128)+1)
 16684  18CD  0830               	movf	??_CONSOLE_PrintDec^(0+128),w
 16685  18CE  00A2               	movwf	___awmod@dividend^(0+128)
 16686  18CF  0831               	movf	(??_CONSOLE_PrintDec+1)^(0+128),w
 16687  18D0  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 16688  18D1  31A4  2452  3198   	fcall	___awmod
 16689  18D4  0021               	movlb	1	; select bank1
 16690  18D5  0820               	movf	?___awmod^(0+128),w
 16691  18D6  3E5C               	addlw	(low (_CharacterArray| (0+512)))& (0+255)
 16692  18D7  0086               	movwf	6
 16693  18D8  3002               	movlw	2	; select bank4/5
 16694  18D9  0087               	movwf	7
 16695  18DA  0801               	movf	1,w
 16696  18DB  31AD  25C0         	fcall	_CONSOLE_Put
 16697  18DD  0008               	return
 16698  18DE                     __end_of_CONSOLE_PrintDec:	
 16699                           
 16700                           	psect	text57
 16701  2452                     __ptext57:	
 16702 ;; *************** function ___awmod *****************
 16703 ;; Defined at:
 16704 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 16705 ;; Parameters:    Size  Location     Type
 16706 ;;  divisor         2    0[BANK1 ] int 
 16707 ;;  dividend        2    2[BANK1 ] int 
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;  sign            1    6[BANK1 ] unsigned char 
 16710 ;;  counter         1    5[BANK1 ] unsigned char 
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  2    0[BANK1 ] int 
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        7 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    5
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_CONSOLE_PrintDec
 16731 ;;		_run_p2p_demo
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           
 16736                           ;psect for function ___awmod
 16737  2452                     ___awmod:	
 16738                           
 16739                           ;incstack = 0
 16740                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 16741  2452  0021               	movlb	1	; select bank1
 16742  2453  01A6               	clrf	___awmod@sign^(0+128)
 16743  2454  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 16744  2455  2C5D               	goto	l6174
 16745  2456  09A2               	comf	___awmod@dividend^(0+128),f
 16746  2457  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 16747  2458  0AA2               	incf	___awmod@dividend^(0+128),f
 16748  2459  1903               	skipnz
 16749  245A  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 16750  245B  01A6               	clrf	___awmod@sign^(0+128)
 16751  245C  0AA6               	incf	___awmod@sign^(0+128),f
 16752  245D                     l6174:	
 16753  245D  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 16754  245E  2C64               	goto	l6178
 16755  245F  09A0               	comf	___awmod@divisor^(0+128),f
 16756  2460  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 16757  2461  0AA0               	incf	___awmod@divisor^(0+128),f
 16758  2462  1903               	skipnz
 16759  2463  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 16760  2464                     l6178:	
 16761  2464  0820               	movf	___awmod@divisor^(0+128),w
 16762  2465  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 16763  2466  1903               	btfsc	3,2
 16764  2467  2C8B               	goto	l6196
 16765  2468  01A5               	clrf	___awmod@counter^(0+128)
 16766  2469  0AA5               	incf	___awmod@counter^(0+128),f
 16767  246A                     l6186:	
 16768  246A  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
 16769  246B  2C76               	goto	l6188
 16770  246C  3001               	movlw	1
 16771  246D                     u6095:	
 16772  246D  35A0               	lslf	___awmod@divisor^(0+128),f
 16773  246E  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 16774  246F  0B89               	decfsz	9,f
 16775  2470  2C6D               	goto	u6095
 16776  2471  3001               	movlw	1
 16777  2472  00A4               	movwf	??___awmod^(0+128)
 16778  2473  0824               	movf	??___awmod^(0+128),w
 16779  2474  07A5               	addwf	___awmod@counter^(0+128),f
 16780  2475  2C6A               	goto	l6186
 16781  2476                     l6188:	
 16782  2476  0821               	movf	(___awmod@divisor+1)^(0+128),w
 16783  2477  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 16784  2478  1D03               	skipz
 16785  2479  2C7C               	goto	u6115
 16786  247A  0820               	movf	___awmod@divisor^(0+128),w
 16787  247B  0222               	subwf	___awmod@dividend^(0+128),w
 16788  247C                     u6115:	
 16789  247C  1C03               	skipc
 16790  247D  2C82               	goto	l6192
 16791  247E  0820               	movf	___awmod@divisor^(0+128),w
 16792  247F  02A2               	subwf	___awmod@dividend^(0+128),f
 16793  2480  0821               	movf	(___awmod@divisor+1)^(0+128),w
 16794  2481  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 16795  2482                     l6192:	
 16796  2482  3001               	movlw	1
 16797  2483                     u6125:	
 16798  2483  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 16799  2484  0CA0               	rrf	___awmod@divisor^(0+128),f
 16800  2485  0B89               	decfsz	9,f
 16801  2486  2C83               	goto	u6125
 16802  2487  3001               	movlw	1
 16803  2488  02A5               	subwf	___awmod@counter^(0+128),f
 16804  2489  1D03               	btfss	3,2
 16805  248A  2C76               	goto	l6188
 16806  248B                     l6196:	
 16807  248B  0826               	movf	___awmod@sign^(0+128),w
 16808  248C  1903               	btfsc	3,2
 16809  248D  2C93               	goto	l6200
 16810  248E  09A2               	comf	___awmod@dividend^(0+128),f
 16811  248F  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 16812  2490  0AA2               	incf	___awmod@dividend^(0+128),f
 16813  2491  1903               	skipnz
 16814  2492  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 16815  2493                     l6200:	
 16816  2493  0823               	movf	(___awmod@dividend+1)^(0+128),w
 16817  2494  00A1               	movwf	(?___awmod+1)^(0+128)
 16818  2495  0822               	movf	___awmod@dividend^(0+128),w
 16819  2496  00A0               	movwf	?___awmod^(0+128)
 16820  2497  0008               	return
 16821  2498                     __end_of___awmod:	
 16822                           
 16823                           	psect	text58
 16824  2659                     __ptext58:	
 16825 ;; *************** function ___awdiv *****************
 16826 ;; Defined at:
 16827 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 16828 ;; Parameters:    Size  Location     Type
 16829 ;;  divisor         2    7[BANK1 ] int 
 16830 ;;  dividend        2    9[BANK1 ] int 
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;  quotient        2   14[BANK1 ] int 
 16833 ;;  sign            1   13[BANK1 ] unsigned char 
 16834 ;;  counter         1   12[BANK1 ] unsigned char 
 16835 ;; Return value:  Size  Location     Type
 16836 ;;                  2    7[BANK1 ] int 
 16837 ;; Registers used:
 16838 ;;		wreg, status,2, status,0
 16839 ;; Tracked objects:
 16840 ;;		On entry : 0/0
 16841 ;;		On exit  : 0/0
 16842 ;;		Unchanged: 0/0
 16843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16845 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16846 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16847 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16848 ;;Total ram usage:        9 bytes
 16849 ;; Hardware stack levels used:    1
 16850 ;; Hardware stack levels required when called:    5
 16851 ;; This function calls:
 16852 ;;		Nothing
 16853 ;; This function is called by:
 16854 ;;		_CONSOLE_PrintDec
 16855 ;; This function uses a non-reentrant model
 16856 ;;
 16857                           
 16858                           
 16859                           ;psect for function ___awdiv
 16860  2659                     ___awdiv:	
 16861                           
 16862                           ;incstack = 0
 16863                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16864  2659  0021               	movlb	1	; select bank1
 16865  265A  01AD               	clrf	___awdiv@sign^(0+128)
 16866  265B  1FA8               	btfss	(___awdiv@divisor+1)^(0+128),7
 16867  265C  2E64               	goto	l6130
 16868  265D  09A7               	comf	___awdiv@divisor^(0+128),f
 16869  265E  09A8               	comf	(___awdiv@divisor+1)^(0+128),f
 16870  265F  0AA7               	incf	___awdiv@divisor^(0+128),f
 16871  2660  1903               	skipnz
 16872  2661  0AA8               	incf	(___awdiv@divisor+1)^(0+128),f
 16873  2662  01AD               	clrf	___awdiv@sign^(0+128)
 16874  2663  0AAD               	incf	___awdiv@sign^(0+128),f
 16875  2664                     l6130:	
 16876  2664  1FAA               	btfss	(___awdiv@dividend+1)^(0+128),7
 16877  2665  2E6F               	goto	l6136
 16878  2666  09A9               	comf	___awdiv@dividend^(0+128),f
 16879  2667  09AA               	comf	(___awdiv@dividend+1)^(0+128),f
 16880  2668  0AA9               	incf	___awdiv@dividend^(0+128),f
 16881  2669  1903               	skipnz
 16882  266A  0AAA               	incf	(___awdiv@dividend+1)^(0+128),f
 16883  266B  3001               	movlw	1
 16884  266C  00AB               	movwf	??___awdiv^(0+128)
 16885  266D  082B               	movf	??___awdiv^(0+128),w
 16886  266E  06AD               	xorwf	___awdiv@sign^(0+128),f
 16887  266F                     l6136:	
 16888  266F  01AE               	clrf	___awdiv@quotient^(0+128)
 16889  2670  01AF               	clrf	(___awdiv@quotient+1)^(0+128)
 16890  2671  0827               	movf	___awdiv@divisor^(0+128),w
 16891  2672  0428               	iorwf	(___awdiv@divisor+1)^(0+128),w
 16892  2673  1903               	btfsc	3,2
 16893  2674  2E9E               	goto	l6158
 16894  2675  01AC               	clrf	___awdiv@counter^(0+128)
 16895  2676  0AAC               	incf	___awdiv@counter^(0+128),f
 16896  2677                     l6146:	
 16897  2677  1BA8               	btfsc	(___awdiv@divisor+1)^(0+128),7
 16898  2678  2E83               	goto	l6148
 16899  2679  3001               	movlw	1
 16900  267A                     u5995:	
 16901  267A  35A7               	lslf	___awdiv@divisor^(0+128),f
 16902  267B  0DA8               	rlf	(___awdiv@divisor+1)^(0+128),f
 16903  267C  0B89               	decfsz	9,f
 16904  267D  2E7A               	goto	u5995
 16905  267E  3001               	movlw	1
 16906  267F  00AB               	movwf	??___awdiv^(0+128)
 16907  2680  082B               	movf	??___awdiv^(0+128),w
 16908  2681  07AC               	addwf	___awdiv@counter^(0+128),f
 16909  2682  2E77               	goto	l6146
 16910  2683                     l6148:	
 16911  2683  3001               	movlw	1
 16912  2684                     u6015:	
 16913  2684  35AE               	lslf	___awdiv@quotient^(0+128),f
 16914  2685  0DAF               	rlf	(___awdiv@quotient+1)^(0+128),f
 16915  2686  0B89               	decfsz	9,f
 16916  2687  2E84               	goto	u6015
 16917  2688  0828               	movf	(___awdiv@divisor+1)^(0+128),w
 16918  2689  022A               	subwf	(___awdiv@dividend+1)^(0+128),w
 16919  268A  1D03               	skipz
 16920  268B  2E8E               	goto	u6025
 16921  268C  0827               	movf	___awdiv@divisor^(0+128),w
 16922  268D  0229               	subwf	___awdiv@dividend^(0+128),w
 16923  268E                     u6025:	
 16924  268E  1C03               	skipc
 16925  268F  2E95               	goto	l6154
 16926  2690  0827               	movf	___awdiv@divisor^(0+128),w
 16927  2691  02A9               	subwf	___awdiv@dividend^(0+128),f
 16928  2692  0828               	movf	(___awdiv@divisor+1)^(0+128),w
 16929  2693  3BAA               	subwfb	(___awdiv@dividend+1)^(0+128),f
 16930  2694  142E               	bsf	___awdiv@quotient^(0+128),0
 16931  2695                     l6154:	
 16932  2695  3001               	movlw	1
 16933  2696                     u6035:	
 16934  2696  36A8               	lsrf	(___awdiv@divisor+1)^(0+128),f
 16935  2697  0CA7               	rrf	___awdiv@divisor^(0+128),f
 16936  2698  0B89               	decfsz	9,f
 16937  2699  2E96               	goto	u6035
 16938  269A  3001               	movlw	1
 16939  269B  02AC               	subwf	___awdiv@counter^(0+128),f
 16940  269C  1D03               	btfss	3,2
 16941  269D  2E83               	goto	l6148
 16942  269E                     l6158:	
 16943  269E  082D               	movf	___awdiv@sign^(0+128),w
 16944  269F  1903               	btfsc	3,2
 16945  26A0  2EA6               	goto	l6162
 16946  26A1  09AE               	comf	___awdiv@quotient^(0+128),f
 16947  26A2  09AF               	comf	(___awdiv@quotient+1)^(0+128),f
 16948  26A3  0AAE               	incf	___awdiv@quotient^(0+128),f
 16949  26A4  1903               	skipnz
 16950  26A5  0AAF               	incf	(___awdiv@quotient+1)^(0+128),f
 16951  26A6                     l6162:	
 16952  26A6  082F               	movf	(___awdiv@quotient+1)^(0+128),w
 16953  26A7  00A8               	movwf	(?___awdiv+1)^(0+128)
 16954  26A8  082E               	movf	___awdiv@quotient^(0+128),w
 16955  26A9  00A7               	movwf	?___awdiv^(0+128)
 16956  26AA  0008               	return
 16957  26AB                     __end_of___awdiv:	
 16958                           
 16959                           	psect	text59
 16960  26AB                     __ptext59:	
 16961 ;; *************** function _DemoOutput_Greeting *****************
 16962 ;; Defined at:
 16963 ;;		line 63 in file "../src/demo_ouput.c"
 16964 ;; Parameters:    Size  Location     Type
 16965 ;;		None
 16966 ;; Auto vars:     Size  Location     Type
 16967 ;;		None
 16968 ;; Return value:  Size  Location     Type
 16969 ;;                  1    wreg      void 
 16970 ;; Registers used:
 16971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16972 ;; Tracked objects:
 16973 ;;		On entry : 0/0
 16974 ;;		On exit  : 0/0
 16975 ;;		Unchanged: 0/0
 16976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;Total ram usage:        0 bytes
 16982 ;; Hardware stack levels used:    1
 16983 ;; Hardware stack levels required when called:   10
 16984 ;; This function calls:
 16985 ;;		_CONSOLE_PutString
 16986 ;;		_LCDDisplay
 16987 ;; This function is called by:
 16988 ;;		_main
 16989 ;; This function uses a non-reentrant model
 16990 ;;
 16991                           
 16992                           
 16993                           ;psect for function _DemoOutput_Greeting
 16994  26AB                     _DemoOutput_Greeting:	
 16995                           
 16996                           ;demo_ouput.c: 106: LCDDisplay((char *)"Simple P2P Demo  MRF89XA Node ", 0, 1);
 16997                           
 16998                           ;incstack = 0
 16999                           ; Regs used in _DemoOutput_Greeting: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17000  26AB  3066               	movlw	low (STR_16| (0+32768))
 17001  26AC  0021               	movlb	1	; select bank1
 17002  26AD  00D0               	movwf	LCDDisplay@text^(0+128)
 17003  26AE  3087               	movlw	high (STR_16| (0+32768))
 17004  26AF  00D1               	movwf	(LCDDisplay@text^(0+128)+1)
 17005  26B0  01D2               	clrf	LCDDisplay@value^(0+128)
 17006  26B1  01D3               	clrf	LCDDisplay@delay^(0+128)
 17007  26B2  0AD3               	incf	LCDDisplay@delay^(0+128),f
 17008  26B3  31A2  22FE  31A6   	fcall	_LCDDisplay
 17009                           
 17010                           ;demo_ouput.c: 120: CONSOLE_PutString((char*)"\r\nStarting Node 1 of Simple Demo for MiW
      +                          i(TM) P2P Stack ...");
 17011  26B6  30AA               	movlw	low (STR_17| (0+32768))
 17012  26B7  0021               	movlb	1	; select bank1
 17013  26B8  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17014  26B9  3086               	movlw	high (STR_17| (0+32768))
 17015  26BA  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17016  26BB  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17017                           
 17018                           ;demo_ouput.c: 176: CONSOLE_PutString((char*)"\r\n     RF Transceiver: MRF89XA");
 17019  26BE  3085               	movlw	low (STR_18| (0+32768))
 17020  26BF  0021               	movlb	1	; select bank1
 17021  26C0  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17022  26C1  3087               	movlw	high (STR_18| (0+32768))
 17023  26C2  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17024  26C3  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17025                           
 17026                           ;demo_ouput.c: 178: CONSOLE_PutString((char*)"\r\n   Demo Instruction:");
 17027  26C6  304B               	movlw	low (STR_19| (0+32768))
 17028  26C7  0021               	movlb	1	; select bank1
 17029  26C8  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17030  26C9  3088               	movlw	high (STR_19| (0+32768))
 17031  26CA  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17032  26CB  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17033                           
 17034                           ;demo_ouput.c: 179: CONSOLE_PutString((char*)"\r\n                     Power on the boar
      +                          d until LED 1 lights up");
 17035  26CE  30F0               	movlw	low (STR_20| (0+32768))
 17036  26CF  0021               	movlb	1	; select bank1
 17037  26D0  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17038  26D1  3085               	movlw	high (STR_20| (0+32768))
 17039  26D2  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17040  26D3  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17041                           
 17042                           ;demo_ouput.c: 180: CONSOLE_PutString((char*)"\r\n                     to indicate conne
      +                          cting with peer. Push");
 17043  26D6  3030               	movlw	low (STR_21| (0+32768))
 17044  26D7  0021               	movlb	1	; select bank1
 17045  26D8  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17046  26D9  3086               	movlw	high (STR_21| (0+32768))
 17047  26DA  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17048  26DB  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17049                           
 17050                           ;demo_ouput.c: 181: CONSOLE_PutString((char*)"\r\n                     Button 1 to broad
      +                          cast message. Push Button");
 17051  26DE  30AE               	movlw	low (STR_22| (0+32768))
 17052  26DF  0021               	movlb	1	; select bank1
 17053  26E0  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17054  26E1  3085               	movlw	high (STR_22| (0+32768))
 17055  26E2  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17056  26E3  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17057                           
 17058                           ;demo_ouput.c: 182: CONSOLE_PutString((char*)"\r\n                     2 to unicast encr
      +                          ypted message. LED 2 will");
 17059  26E6  306C               	movlw	low (STR_23| (0+32768))
 17060  26E7  0021               	movlb	1	; select bank1
 17061  26E8  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17062  26E9  3085               	movlw	high (STR_23| (0+32768))
 17063  26EA  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17064  26EB  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17065                           
 17066                           ;demo_ouput.c: 183: CONSOLE_PutString((char*)"\r\n                     be toggled upon r
      +                          eceiving messages. ");
 17067  26EE  306E               	movlw	low (STR_24| (0+32768))
 17068  26EF  0021               	movlb	1	; select bank1
 17069  26F0  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17070  26F1  3086               	movlw	high (STR_24| (0+32768))
 17071  26F2  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17072  26F3  31AE  26F3  31A6   	fcall	_CONSOLE_PutString
 17073                           
 17074                           ;demo_ouput.c: 184: CONSOLE_PutString((char*)"\r\n\r\n");
 17075  26F6  304B               	movlw	low (STR_25| (0+32768))
 17076  26F7  0021               	movlb	1	; select bank1
 17077  26F8  00A1               	movwf	CONSOLE_PutString@str^(0+128)
 17078  26F9  3089               	movlw	high (STR_25| (0+32768))
 17079  26FA  00A2               	movwf	(CONSOLE_PutString@str^(0+128)+1)
 17080  26FB  31AE  26F3         	fcall	_CONSOLE_PutString
 17081  26FD  0008               	return
 17082  26FE                     __end_of_DemoOutput_Greeting:	
 17083                           
 17084                           	psect	text60
 17085  22FE                     __ptext60:	
 17086 ;; *************** function _LCDDisplay *****************
 17087 ;; Defined at:
 17088 ;;		line 374 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;  text            2   48[BANK1 ] PTR unsigned char 
 17091 ;;		 -> STR_43(21), STR_40(16), STR_29(30), STR_26(32), 
 17092 ;;		 -> STR_16(31), 
 17093 ;;  value           1   50[BANK1 ] unsigned char 
 17094 ;;  delay           1   51[BANK1 ] unsigned char 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;  i               1   54[BANK1 ] unsigned char 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      void 
 17099 ;; Registers used:
 17100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17106 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;Total ram usage:        7 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    9
 17113 ;; This function calls:
 17114 ;;		_DELAY_ms
 17115 ;;		_LCD_Erase
 17116 ;;		_LCD_Update
 17117 ;;		_sprintf
 17118 ;; This function is called by:
 17119 ;;		_DemoOutput_Greeting
 17120 ;;		_DemoOutput_Channel
 17121 ;;		_DemoOutput_UnicastFail
 17122 ;;		_freezer_feature
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           
 17127                           ;psect for function _LCDDisplay
 17128  22FE                     _LCDDisplay:	
 17129                           
 17130                           ;lcd.c: 377: LCD_Erase();
 17131                           
 17132                           ;incstack = 0
 17133                           ; Regs used in _LCDDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17134  22FE  31AF  270C  31A2   	fcall	_LCD_Erase
 17135                           
 17136                           ;lcd.c: 378: DELAY_ms(5);
 17137  2301  3005               	movlw	5
 17138  2302  0021               	movlb	1	; select bank1
 17139  2303  00AC               	movwf	DELAY_ms@ms^(0+128)
 17140  2304  3000               	movlw	0
 17141  2305  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 17142  2306  31A5  2572  31A2   	fcall	_DELAY_ms
 17143                           
 17144                           ;lcd.c: 379: sprintf((char *)LCDText, (char*)text, value);
 17145  2309  0021               	movlb	1	; select bank1
 17146  230A  0851               	movf	(LCDDisplay@text+1)^(0+128),w
 17147  230B  00AF               	movwf	(sprintf@f+1)^(0+128)
 17148  230C  0850               	movf	LCDDisplay@text^(0+128),w
 17149  230D  00AE               	movwf	sprintf@f^(0+128)
 17150  230E  0852               	movf	LCDDisplay@value^(0+128),w
 17151  230F  00D4               	movwf	??_LCDDisplay^(0+128)
 17152  2310  01D5               	clrf	(??_LCDDisplay^(0+128)+1)
 17153  2311  0854               	movf	??_LCDDisplay^(0+128),w
 17154  2312  00B0               	movwf	(?_sprintf^(0+128)+2)
 17155  2313  0855               	movf	(??_LCDDisplay+1)^(0+128),w
 17156  2314  00B1               	movwf	((?_sprintf+1)^(0+128)+2)
 17157  2315  3020               	movlw	(low (_LCDText| (0+768)))& (0+255)
 17158  2316  318B  238C  31A2   	fcall	_sprintf
 17159                           
 17160                           ;lcd.c: 380: LCD_Update();
 17161  2319  31A6  260B  31A2   	fcall	_LCD_Update
 17162                           
 17163                           ;lcd.c: 383: if( delay )
 17164  231C  0021               	movlb	1	; select bank1
 17165  231D  0853               	movf	LCDDisplay@delay^(0+128),w
 17166  231E  1903               	btfsc	3,2
 17167  231F  0008               	return
 17168                           
 17169                           ;lcd.c: 384: {
 17170                           ;lcd.c: 385: uint8_t i;
 17171                           ;lcd.c: 386: for(i = 0; i < 8; i++)
 17172  2320  01D6               	clrf	LCDDisplay@i^(0+128)
 17173  2321                     L5:	
 17174  2321  3008               	movlw	8
 17175  2322  0256               	subwf	LCDDisplay@i^(0+128),w
 17176  2323  1803               	btfsc	3,0
 17177  2324  0008               	return
 17178                           
 17179                           ;lcd.c: 387: {
 17180                           ;lcd.c: 388: DELAY_ms(250);
 17181  2325  30FA               	movlw	250
 17182  2326  00AC               	movwf	DELAY_ms@ms^(0+128)
 17183  2327  3000               	movlw	0
 17184  2328  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 17185  2329  31A5  2572  31A2   	fcall	_DELAY_ms
 17186  232C  3001               	movlw	1
 17187  232D  0021               	movlb	1	; select bank1
 17188  232E  00D4               	movwf	??_LCDDisplay^(0+128)
 17189  232F  0854               	movf	??_LCDDisplay^(0+128),w
 17190  2330  07D6               	addwf	LCDDisplay@i^(0+128),f
 17191  2331  2B21               	goto	L5
 17192  2332                     __end_of_LCDDisplay:	
 17193                           
 17194                           	psect	text61
 17195  0B8C                     __ptext61:	
 17196 ;; *************** function _sprintf *****************
 17197 ;; Defined at:
 17198 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  sp              1    wreg     PTR unsigned char 
 17201 ;;		 -> LCDText(33), 
 17202 ;;  f               2   14[BANK1 ] PTR const unsigned char 
 17203 ;;		 -> STR_43(21), STR_42(16), STR_41(22), STR_40(16), 
 17204 ;;		 -> STR_29(30), STR_26(32), STR_16(31), STR_15(17), 
 17205 ;;		 -> STR_14(17), 
 17206 ;; Auto vars:     Size  Location     Type
 17207 ;;  sp              1   45[BANK1 ] PTR unsigned char 
 17208 ;;		 -> LCDText(33), 
 17209 ;;  idx             1   34[BANK1 ] unsigned char 
 17210 ;;  tmpval          4    0        struct .
 17211 ;;  flag            2   46[BANK1 ] unsigned short 
 17212 ;;  width           2   42[BANK1 ] int 
 17213 ;;  val             2   39[BANK1 ] unsigned int 
 17214 ;;  len             2   36[BANK1 ] unsigned int 
 17215 ;;  c               1   44[BANK1 ] char 
 17216 ;;  prec            1   41[BANK1 ] char 
 17217 ;;  ap              1   38[BANK1 ] PTR void [1]
 17218 ;;		 -> ?_sprintf(2), 
 17219 ;;  cp              1   35[BANK1 ] PTR const unsigned char 
 17220 ;;		 -> sprintf@c(1), 
 17221 ;; Return value:  Size  Location     Type
 17222 ;;                  2   14[BANK1 ] int 
 17223 ;; Registers used:
 17224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17225 ;; Tracked objects:
 17226 ;;		On entry : 0/0
 17227 ;;		On exit  : 0/0
 17228 ;;		Unchanged: 0/0
 17229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17230 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
 17234 ;;Total ram usage:       34 bytes
 17235 ;; Hardware stack levels used:    1
 17236 ;; Hardware stack levels required when called:    6
 17237 ;; This function calls:
 17238 ;;		___bmul
 17239 ;;		___lwdiv
 17240 ;;		___lwmod
 17241 ;;		___wmul
 17242 ;;		_isdigit
 17243 ;; This function is called by:
 17244 ;;		_LCDTRXCount
 17245 ;;		_LCDDisplay
 17246 ;;		_run_p2p_demo
 17247 ;; This function uses a non-reentrant model
 17248 ;;
 17249                           
 17250                           
 17251                           ;psect for function _sprintf
 17252  0B8C                     _sprintf:	
 17253                           
 17254                           ;incstack = 0
 17255                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17256                           ;sprintf@sp stored from wreg
 17257  0B8C  0021               	movlb	1	; select bank1
 17258  0B8D  00CD               	movwf	sprintf@sp^(0+128)
 17259                           
 17260                           ;doprnt.c: 494: va_list ap;
 17261                           ;doprnt.c: 499: signed char c;
 17262                           ;doprnt.c: 501: int width;
 17263                           ;doprnt.c: 506: signed char prec;
 17264                           ;doprnt.c: 508: unsigned short flag;
 17265                           ;doprnt.c: 523: union {
 17266                           ;doprnt.c: 524: unsigned long vd;
 17267                           ;doprnt.c: 525: double integ;
 17268                           ;doprnt.c: 526: } tmpval;
 17269                           ;doprnt.c: 528: unsigned int val;
 17270                           ;doprnt.c: 529: unsigned len;
 17271                           ;doprnt.c: 530: const char * cp;
 17272                           ;doprnt.c: 533: *ap = __va_start();
 17273  0B8E  30B0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 17274  0B8F  00B8               	movwf	??_sprintf^(0+128)
 17275  0B90  0838               	movf	??_sprintf^(0+128),w
 17276  0B91  00C6               	movwf	sprintf@ap^(0+128)
 17277  0B92                     l5742:	
 17278                           ;doprnt.c: 536: while(c = *f++) {
 17279                           
 17280  0B92  0021               	movlb	1	; select bank1
 17281  0B93  082F               	movf	(sprintf@f+1)^(0+128),w
 17282  0B94  00B9               	movwf	(??_sprintf^(0+128)+1)
 17283  0B95  082E               	movf	sprintf@f^(0+128),w
 17284  0B96  00B8               	movwf	??_sprintf^(0+128)
 17285  0B97  0AAE               	incf	sprintf@f^(0+128),f
 17286  0B98  1903               	skipnz
 17287  0B99  0AAF               	incf	(sprintf@f+1)^(0+128),f
 17288  0B9A  0838               	movf	??_sprintf^(0+128),w
 17289  0B9B  0084               	movwf	4
 17290  0B9C  0839               	movf	(??_sprintf+1)^(0+128),w
 17291  0B9D  0085               	movwf	5
 17292  0B9E  0800               	movf	0,w	;code access
 17293  0B9F  00BA               	movwf	(??_sprintf+2)^(0+128)
 17294  0BA0  083A               	movf	(??_sprintf+2)^(0+128),w
 17295  0BA1  00CC               	movwf	sprintf@c^(0+128)
 17296  0BA2  084C               	movf	sprintf@c^(0+128),w
 17297  0BA3  1903               	btfsc	3,2
 17298  0BA4  2FFA               	goto	l5744
 17299                           
 17300                           ;doprnt.c: 538: if(c != '%')
 17301  0BA5  3025               	movlw	37
 17302  0BA6  064C               	xorwf	sprintf@c^(0+128),w
 17303  0BA7  1903               	btfsc	3,2
 17304  0BA8  2BB6               	goto	l5422
 17305                           
 17306                           ;doprnt.c: 540: {
 17307                           ;doprnt.c: 541: ((*sp++ = (c)));
 17308  0BA9  084C               	movf	sprintf@c^(0+128),w
 17309  0BAA  00B8               	movwf	??_sprintf^(0+128)
 17310  0BAB  084D               	movf	sprintf@sp^(0+128),w
 17311  0BAC  0086               	movwf	6
 17312  0BAD  3003               	movlw	3	; select bank6/7
 17313  0BAE  0087               	movwf	7
 17314  0BAF  0838               	movf	??_sprintf^(0+128),w
 17315  0BB0  0081               	movwf	1
 17316  0BB1  3001               	movlw	1
 17317  0BB2  00B8               	movwf	??_sprintf^(0+128)
 17318  0BB3  0838               	movf	??_sprintf^(0+128),w
 17319  0BB4  07CD               	addwf	sprintf@sp^(0+128),f
 17320                           
 17321                           ;doprnt.c: 542: continue;
 17322  0BB5  2B92               	goto	l5742
 17323  0BB6                     l5422:	
 17324                           
 17325                           ;doprnt.c: 543: }
 17326                           ;doprnt.c: 546: width = 0;
 17327  0BB6  01CA               	clrf	sprintf@width^(0+128)
 17328  0BB7  01CB               	clrf	(sprintf@width+1)^(0+128)
 17329                           
 17330                           ;doprnt.c: 548: flag = 0;
 17331  0BB8  01CE               	clrf	sprintf@flag^(0+128)
 17332  0BB9  01CF               	clrf	(sprintf@flag+1)^(0+128)
 17333                           
 17334                           ;doprnt.c: 551: switch(*f) {
 17335                           
 17336                           ;doprnt.c: 550: for(;;) {
 17337  0BBA  2BC6               	goto	l5434
 17338  0BBB                     l1062:	
 17339                           ;doprnt.c: 553: case '-':
 17340                           
 17341                           
 17342                           ;doprnt.c: 554: flag |= 0x08;
 17343  0BBB  15CE               	bsf	sprintf@flag^(0+128),3
 17344  0BBC  2BC2               	goto	l5430
 17345  0BBD                     l1064:	
 17346                           ;doprnt.c: 560: case ' ':
 17347                           
 17348                           ;doprnt.c: 556: continue;
 17349                           
 17350                           ;doprnt.c: 555: f++;
 17351                           
 17352                           
 17353                           ;doprnt.c: 561: flag |= 0x01;
 17354  0BBD  144E               	bsf	sprintf@flag^(0+128),0
 17355  0BBE  2BC2               	goto	l5430
 17356  0BBF                     l1065:	
 17357                           ;doprnt.c: 573: case '#':
 17358                           
 17359                           ;doprnt.c: 563: continue;
 17360                           
 17361                           ;doprnt.c: 562: f++;
 17362                           
 17363                           
 17364                           ;doprnt.c: 574: flag |= 0x800;
 17365  0BBF  15CF               	bsf	(sprintf@flag^(0+128)+1),3
 17366  0BC0  2BC2               	goto	l5430
 17367  0BC1                     l1066:	
 17368                           ;doprnt.c: 579: case '0':
 17369                           
 17370                           ;doprnt.c: 576: continue;
 17371                           
 17372                           ;doprnt.c: 575: f++;
 17373                           
 17374                           
 17375                           ;doprnt.c: 580: flag |= 0x04;
 17376  0BC1  154E               	bsf	sprintf@flag^(0+128),2
 17377  0BC2                     l5430:	
 17378                           
 17379                           ;doprnt.c: 581: f++;
 17380  0BC2  3001               	movlw	1
 17381  0BC3  07AE               	addwf	sprintf@f^(0+128),f
 17382  0BC4  3000               	movlw	0
 17383  0BC5  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17384  0BC6                     l5434:	
 17385                           ;doprnt.c: 584: }
 17386                           
 17387                           ;doprnt.c: 582: continue;
 17388                           
 17389  0BC6  082E               	movf	sprintf@f^(0+128),w
 17390  0BC7  0084               	movwf	4
 17391  0BC8  082F               	movf	(sprintf@f+1)^(0+128),w
 17392  0BC9  0085               	movwf	5
 17393  0BCA  0800               	movf	0,w	;code access
 17394                           
 17395                           ; Switch size 1, requested type "space"
 17396                           ; Number of cases is 4, Range of values is 32 to 48
 17397                           ; switch strategies available:
 17398                           ; Name         Instructions Cycles
 17399                           ; simple_byte           13     7 (average)
 17400                           ; direct_byte           43     9 (fixed)
 17401                           ; jumptable            263     9 (fixed)
 17402                           ;	Chosen strategy is simple_byte
 17403  0BCB  3A20               	xorlw	32	; case 32
 17404  0BCC  1903               	skipnz
 17405  0BCD  2BBD               	goto	l1064
 17406  0BCE  3A03               	xorlw	3	; case 35
 17407  0BCF  1903               	skipnz
 17408  0BD0  2BBF               	goto	l1065
 17409  0BD1  3A0E               	xorlw	14	; case 45
 17410  0BD2  1903               	skipnz
 17411  0BD3  2BBB               	goto	l1062
 17412  0BD4  3A1D               	xorlw	29	; case 48
 17413  0BD5  1903               	skipnz
 17414  0BD6  2BC1               	goto	l1066
 17415  0BD7  2BD8               	goto	l1068
 17416  0BD8                     l1068:	
 17417                           ;doprnt.c: 586: }
 17418                           
 17419                           ;doprnt.c: 585: break;
 17420                           
 17421                           
 17422                           ;doprnt.c: 593: if(flag & 0x08)
 17423  0BD8  1DCE               	btfss	sprintf@flag^(0+128),3
 17424  0BD9  2BDE               	goto	l5438
 17425                           
 17426                           ;doprnt.c: 594: flag &= ~0x04;
 17427  0BDA  30FB               	movlw	251
 17428  0BDB  05CE               	andwf	sprintf@flag^(0+128),f
 17429  0BDC  30FF               	movlw	255
 17430  0BDD  05CF               	andwf	(sprintf@flag+1)^(0+128),f
 17431  0BDE                     l5438:	
 17432                           
 17433                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 17434  0BDE  082E               	movf	sprintf@f^(0+128),w
 17435  0BDF  0084               	movwf	4
 17436  0BE0  082F               	movf	(sprintf@f+1)^(0+128),w
 17437  0BE1  0085               	movwf	5
 17438  0BE2  0800               	movf	0,w	;code access
 17439  0BE3  31AE  2602  318B   	fcall	_isdigit
 17440  0BE6  1C03               	btfss	3,0
 17441  0BE7  2C1A               	goto	l5450
 17442                           
 17443                           ;doprnt.c: 598: width = 0;
 17444  0BE8  0021               	movlb	1	; select bank1
 17445  0BE9  01CA               	clrf	sprintf@width^(0+128)
 17446  0BEA  01CB               	clrf	(sprintf@width+1)^(0+128)
 17447  0BEB                     l5442:	
 17448                           ;doprnt.c: 599: do {
 17449                           
 17450                           
 17451                           ;doprnt.c: 600: width *= 10;
 17452  0BEB  300A               	movlw	10
 17453  0BEC  0021               	movlb	1	; select bank1
 17454  0BED  00A7               	movwf	___wmul@multiplier^(0+128)
 17455  0BEE  3000               	movlw	0
 17456  0BEF  00A8               	movwf	(___wmul@multiplier^(0+128)+1)
 17457  0BF0  084B               	movf	(sprintf@width+1)^(0+128),w
 17458  0BF1  00AA               	movwf	(___wmul@multiplicand+1)^(0+128)
 17459  0BF2  084A               	movf	sprintf@width^(0+128),w
 17460  0BF3  00A9               	movwf	___wmul@multiplicand^(0+128)
 17461  0BF4  31AF  27AC  318B   	fcall	___wmul
 17462  0BF7  0021               	movlb	1	; select bank1
 17463  0BF8  0828               	movf	(?___wmul+1)^(0+128),w
 17464  0BF9  00CB               	movwf	(sprintf@width+1)^(0+128)
 17465  0BFA  0827               	movf	?___wmul^(0+128),w
 17466  0BFB  00CA               	movwf	sprintf@width^(0+128)
 17467                           
 17468                           ;doprnt.c: 601: width += *f++ - '0';
 17469  0BFC  082E               	movf	sprintf@f^(0+128),w
 17470  0BFD  0084               	movwf	4
 17471  0BFE  082F               	movf	(sprintf@f+1)^(0+128),w
 17472  0BFF  0085               	movwf	5
 17473  0C00  0800               	movf	0,w	;code access
 17474  0C01  3ED0               	addlw	208
 17475  0C02  00B8               	movwf	??_sprintf^(0+128)
 17476  0C03  30FF               	movlw	255
 17477  0C04  1803               	skipnc
 17478  0C05  3000               	movlw	0
 17479  0C06  00B9               	movwf	(??_sprintf^(0+128)+1)
 17480  0C07  0838               	movf	??_sprintf^(0+128),w
 17481  0C08  07CA               	addwf	sprintf@width^(0+128),f
 17482  0C09  0839               	movf	(??_sprintf+1)^(0+128),w
 17483  0C0A  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 17484  0C0B  3001               	movlw	1
 17485  0C0C  07AE               	addwf	sprintf@f^(0+128),f
 17486  0C0D  3000               	movlw	0
 17487  0C0E  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17488                           
 17489                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 17490  0C0F  082E               	movf	sprintf@f^(0+128),w
 17491  0C10  0084               	movwf	4
 17492  0C11  082F               	movf	(sprintf@f+1)^(0+128),w
 17493  0C12  0085               	movwf	5
 17494  0C13  0800               	movf	0,w	;code access
 17495  0C14  31AE  2602  318B   	fcall	_isdigit
 17496  0C17  1C03               	btfss	3,0
 17497  0C18  2C32               	goto	l5458
 17498  0C19  2BEB               	goto	l5442
 17499  0C1A                     l5450:	
 17500                           ;doprnt.c: 604: } else if(*f == '*') {
 17501                           
 17502  0C1A  0021               	movlb	1	; select bank1
 17503  0C1B  082E               	movf	sprintf@f^(0+128),w
 17504  0C1C  0084               	movwf	4
 17505  0C1D  082F               	movf	(sprintf@f+1)^(0+128),w
 17506  0C1E  0085               	movwf	5
 17507  0C1F  0012               	moviw fsr0++
 17508  0C20  3A2A               	xorlw	42
 17509  0C21  1D03               	btfss	3,2
 17510  0C22  2C32               	goto	l5458
 17511                           
 17512                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 17513  0C23  0846               	movf	sprintf@ap^(0+128),w
 17514  0C24  0086               	movwf	6
 17515  0C25  0187               	clrf	7
 17516  0C26  3F40               	moviw [0]fsr1
 17517  0C27  00CA               	movwf	sprintf@width^(0+128)
 17518  0C28  3F41               	moviw [1]fsr1
 17519  0C29  00CB               	movwf	(sprintf@width+1)^(0+128)
 17520  0C2A  3002               	movlw	2
 17521  0C2B  00B8               	movwf	??_sprintf^(0+128)
 17522  0C2C  0838               	movf	??_sprintf^(0+128),w
 17523  0C2D  07C6               	addwf	sprintf@ap^(0+128),f
 17524                           
 17525                           ;doprnt.c: 606: f++;
 17526  0C2E  3001               	movlw	1
 17527  0C2F  07AE               	addwf	sprintf@f^(0+128),f
 17528  0C30  3000               	movlw	0
 17529  0C31  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17530  0C32                     l5458:	
 17531                           
 17532                           ;doprnt.c: 608: }
 17533                           ;doprnt.c: 611: if(*f == '.') {
 17534  0C32  0021               	movlb	1	; select bank1
 17535  0C33  082E               	movf	sprintf@f^(0+128),w
 17536  0C34  0084               	movwf	4
 17537  0C35  082F               	movf	(sprintf@f+1)^(0+128),w
 17538  0C36  0085               	movwf	5
 17539  0C37  0012               	moviw fsr0++
 17540  0C38  3A2E               	xorlw	46
 17541  0C39  1D03               	btfss	3,2
 17542  0C3A  2C7D               	goto	l5480
 17543                           
 17544                           ;doprnt.c: 612: flag |= 0x4000;
 17545  0C3B  174F               	bsf	(sprintf@flag^(0+128)+1),6
 17546                           
 17547                           ;doprnt.c: 613: f++;
 17548  0C3C  3001               	movlw	1
 17549  0C3D  07AE               	addwf	sprintf@f^(0+128),f
 17550  0C3E  3000               	movlw	0
 17551  0C3F  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17552                           
 17553                           ;doprnt.c: 615: if(*f == '*') {
 17554  0C40  082E               	movf	sprintf@f^(0+128),w
 17555  0C41  0084               	movwf	4
 17556  0C42  082F               	movf	(sprintf@f+1)^(0+128),w
 17557  0C43  0085               	movwf	5
 17558  0C44  0012               	moviw fsr0++
 17559  0C45  3A2A               	xorlw	42
 17560  0C46  1D03               	btfss	3,2
 17561  0C47  2C58               	goto	l5472
 17562                           
 17563                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 17564  0C48  0846               	movf	sprintf@ap^(0+128),w
 17565  0C49  0086               	movwf	6
 17566  0C4A  0187               	clrf	7
 17567  0C4B  0801               	movf	1,w
 17568  0C4C  00B8               	movwf	??_sprintf^(0+128)
 17569  0C4D  0838               	movf	??_sprintf^(0+128),w
 17570  0C4E  00C9               	movwf	sprintf@prec^(0+128)
 17571  0C4F  3002               	movlw	2
 17572  0C50  00B8               	movwf	??_sprintf^(0+128)
 17573  0C51  0838               	movf	??_sprintf^(0+128),w
 17574  0C52  07C6               	addwf	sprintf@ap^(0+128),f
 17575                           
 17576                           ;doprnt.c: 617: f++;
 17577  0C53  3001               	movlw	1
 17578  0C54  07AE               	addwf	sprintf@f^(0+128),f
 17579  0C55  3000               	movlw	0
 17580  0C56  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17581                           
 17582                           ;doprnt.c: 618: } else
 17583  0C57  2D13               	goto	l5532
 17584  0C58                     l5472:	
 17585                           
 17586                           ;doprnt.c: 620: {
 17587                           ;doprnt.c: 621: prec = 0;
 17588  0C58  01C9               	clrf	sprintf@prec^(0+128)
 17589  0C59                     l5478:	
 17590                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 17591                           
 17592  0C59  082E               	movf	sprintf@f^(0+128),w
 17593  0C5A  0084               	movwf	4
 17594  0C5B  082F               	movf	(sprintf@f+1)^(0+128),w
 17595  0C5C  0085               	movwf	5
 17596  0C5D  0800               	movf	0,w	;code access
 17597  0C5E  31AE  2602  318B   	fcall	_isdigit
 17598  0C61  1C03               	btfss	3,0
 17599  0C62  2D13               	goto	l5532
 17600                           
 17601                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 17602  0C63  0021               	movlb	1	; select bank1
 17603  0C64  082E               	movf	sprintf@f^(0+128),w
 17604  0C65  0084               	movwf	4
 17605  0C66  082F               	movf	(sprintf@f+1)^(0+128),w
 17606  0C67  0085               	movwf	5
 17607  0C68  0800               	movf	0,w	;code access
 17608  0C69  00B8               	movwf	??_sprintf^(0+128)
 17609  0C6A  300A               	movlw	10
 17610  0C6B  00B9               	movwf	(??_sprintf+1)^(0+128)
 17611  0C6C  0839               	movf	(??_sprintf+1)^(0+128),w
 17612  0C6D  00A0               	movwf	___bmul@multiplicand^(0+128)
 17613  0C6E  0849               	movf	sprintf@prec^(0+128),w
 17614  0C6F  31AE  2662  318B   	fcall	___bmul
 17615  0C72  0021               	movlb	1	; select bank1
 17616  0C73  0738               	addwf	??_sprintf^(0+128),w
 17617  0C74  3ED0               	addlw	-48
 17618  0C75  00BA               	movwf	(??_sprintf+2)^(0+128)
 17619  0C76  083A               	movf	(??_sprintf+2)^(0+128),w
 17620  0C77  00C9               	movwf	sprintf@prec^(0+128)
 17621  0C78  3001               	movlw	1
 17622  0C79  07AE               	addwf	sprintf@f^(0+128),f
 17623  0C7A  3000               	movlw	0
 17624  0C7B  3DAF               	addwfc	(sprintf@f+1)^(0+128),f
 17625  0C7C  2C59               	goto	l5478
 17626  0C7D                     l5480:	
 17627                           ;doprnt.c: 624: }
 17628                           ;doprnt.c: 625: } else {
 17629                           
 17630                           
 17631                           ;doprnt.c: 626: prec = 0;
 17632  0C7D  0021               	movlb	1	; select bank1
 17633  0C7E  01C9               	clrf	sprintf@prec^(0+128)
 17634                           
 17635                           ;doprnt.c: 630: }
 17636                           ;doprnt.c: 635: switch(c = *f++) {
 17637  0C7F  2D13               	goto	l5532
 17638  0C80                     l1085:	
 17639                           ;doprnt.c: 689: case 'o':
 17640                           
 17641                           ;doprnt.c: 638: goto alldone;
 17642                           
 17643                           ;doprnt.c: 637: case 0:
 17644                           
 17645                           
 17646                           ;doprnt.c: 691: flag |= 0x40;
 17647  0C80  174E               	bsf	sprintf@flag^(0+128),6
 17648                           
 17649                           ;doprnt.c: 698: case 'i':
 17650                           ;doprnt.c: 699: break;
 17651                           
 17652                           ;doprnt.c: 697: case 'd':
 17653                           
 17654                           ;doprnt.c: 693: break;
 17655  0C81  2D3A               	goto	l5534
 17656  0C82                     l1089:	
 17657                           ;doprnt.c: 712: case 'X':
 17658                           
 17659                           
 17660                           ;doprnt.c: 714: flag |= 0x20;
 17661  0C82  16CE               	bsf	sprintf@flag^(0+128),5
 17662  0C83                     l1090:	
 17663                           ;doprnt.c: 718: case 'x':
 17664                           
 17665                           
 17666                           ;doprnt.c: 721: flag |= 0x80;
 17667  0C83  17CE               	bsf	sprintf@flag^(0+128),7
 17668                           
 17669                           ;doprnt.c: 723: break;
 17670  0C84  2D3A               	goto	l5534
 17671  0C85                     l5482:	
 17672                           ;doprnt.c: 750: dostring:
 17673                           
 17674                           
 17675                           ;doprnt.c: 753: if(prec && prec < len)
 17676  0C85  0849               	movf	sprintf@prec^(0+128),w
 17677  0C86  1903               	btfsc	3,2
 17678  0C87  2C9A               	goto	l5488
 17679  0C88  0849               	movf	sprintf@prec^(0+128),w
 17680  0C89  00B8               	movwf	??_sprintf^(0+128)
 17681  0C8A  01B9               	clrf	(??_sprintf^(0+128)+1)
 17682  0C8B  1BB8               	btfsc	??_sprintf^(0+128),7
 17683  0C8C  03B9               	decf	(??_sprintf^(0+128)+1),f
 17684  0C8D  0845               	movf	(sprintf@len+1)^(0+128),w
 17685  0C8E  0239               	subwf	(??_sprintf+1)^(0+128),w
 17686  0C8F  1D03               	skipz
 17687  0C90  2C93               	goto	u4925
 17688  0C91  0844               	movf	sprintf@len^(0+128),w
 17689  0C92  0238               	subwf	??_sprintf^(0+128),w
 17690  0C93                     u4925:	
 17691  0C93  1803               	skipnc
 17692  0C94  2C9A               	goto	l5488
 17693                           
 17694                           ;doprnt.c: 754: len = prec;
 17695  0C95  0849               	movf	sprintf@prec^(0+128),w
 17696  0C96  00C4               	movwf	sprintf@len^(0+128)
 17697  0C97  01C5               	clrf	(sprintf@len+1)^(0+128)
 17698  0C98  1BC4               	btfsc	sprintf@len^(0+128),7
 17699  0C99  03C5               	decf	(sprintf@len+1)^(0+128),f
 17700  0C9A                     l5488:	
 17701                           
 17702                           ;doprnt.c: 757: if(width > len)
 17703  0C9A  084B               	movf	(sprintf@width+1)^(0+128),w
 17704  0C9B  0245               	subwf	(sprintf@len+1)^(0+128),w
 17705  0C9C  1D03               	skipz
 17706  0C9D  2CA0               	goto	u4935
 17707  0C9E  084A               	movf	sprintf@width^(0+128),w
 17708  0C9F  0244               	subwf	sprintf@len^(0+128),w
 17709  0CA0                     u4935:	
 17710  0CA0  1803               	skipnc
 17711  0CA1  2CA7               	goto	l5492
 17712                           
 17713                           ;doprnt.c: 758: width -= len;
 17714  0CA2  0844               	movf	sprintf@len^(0+128),w
 17715  0CA3  02CA               	subwf	sprintf@width^(0+128),f
 17716  0CA4  0845               	movf	(sprintf@len+1)^(0+128),w
 17717  0CA5  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 17718  0CA6  2CA9               	goto	l5494
 17719  0CA7                     l5492:	
 17720                           
 17721                           ;doprnt.c: 759: else
 17722                           ;doprnt.c: 760: width = 0;
 17723  0CA7  01CA               	clrf	sprintf@width^(0+128)
 17724  0CA8  01CB               	clrf	(sprintf@width+1)^(0+128)
 17725  0CA9                     l5494:	
 17726                           
 17727                           ;doprnt.c: 762: if(!(flag & 0x08))
 17728  0CA9  1DCE               	btfss	sprintf@flag^(0+128),3
 17729  0CAA  2CB8               	goto	l5502
 17730  0CAB  2CD6               	goto	l5510
 17731  0CAC                     l5498:	
 17732                           ;doprnt.c: 764: while(width--)
 17733                           
 17734                           
 17735                           ;doprnt.c: 765: ((*sp++ = (' ')));
 17736  0CAC  3020               	movlw	32
 17737  0CAD  00B8               	movwf	??_sprintf^(0+128)
 17738  0CAE  084D               	movf	sprintf@sp^(0+128),w
 17739  0CAF  0086               	movwf	6
 17740  0CB0  3003               	movlw	3	; select bank6/7
 17741  0CB1  0087               	movwf	7
 17742  0CB2  0838               	movf	??_sprintf^(0+128),w
 17743  0CB3  0081               	movwf	1
 17744  0CB4  3001               	movlw	1
 17745  0CB5  00B8               	movwf	??_sprintf^(0+128)
 17746  0CB6  0838               	movf	??_sprintf^(0+128),w
 17747  0CB7  07CD               	addwf	sprintf@sp^(0+128),f
 17748  0CB8                     l5502:	
 17749  0CB8  30FF               	movlw	255
 17750  0CB9  07CA               	addwf	sprintf@width^(0+128),f
 17751  0CBA  30FF               	movlw	255
 17752  0CBB  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 17753  0CBC  0A4A               	incf	sprintf@width^(0+128),w
 17754  0CBD  1D03               	skipz
 17755  0CBE  2CAC               	goto	l5498
 17756  0CBF  0A4B               	incf	(sprintf@width+1)^(0+128),w
 17757  0CC0  1903               	btfsc	3,2
 17758  0CC1  2CD6               	goto	l5510
 17759  0CC2  2CAC               	goto	l5498
 17760  0CC3                     l5504:	
 17761                           ;doprnt.c: 767: while(len--)
 17762                           
 17763                           
 17764                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 17765  0CC3  0843               	movf	sprintf@cp^(0+128),w
 17766  0CC4  0086               	movwf	6
 17767  0CC5  0187               	clrf	7
 17768  0CC6  0801               	movf	1,w
 17769  0CC7  00B8               	movwf	??_sprintf^(0+128)
 17770  0CC8  084D               	movf	sprintf@sp^(0+128),w
 17771  0CC9  0086               	movwf	6
 17772  0CCA  3003               	movlw	3	; select bank6/7
 17773  0CCB  0087               	movwf	7
 17774  0CCC  0838               	movf	??_sprintf^(0+128),w
 17775  0CCD  0081               	movwf	1
 17776  0CCE  3001               	movlw	1
 17777  0CCF  00B8               	movwf	??_sprintf^(0+128)
 17778  0CD0  0838               	movf	??_sprintf^(0+128),w
 17779  0CD1  07C3               	addwf	sprintf@cp^(0+128),f
 17780  0CD2  3001               	movlw	1
 17781  0CD3  00B8               	movwf	??_sprintf^(0+128)
 17782  0CD4  0838               	movf	??_sprintf^(0+128),w
 17783  0CD5  07CD               	addwf	sprintf@sp^(0+128),f
 17784  0CD6                     l5510:	
 17785  0CD6  3001               	movlw	1
 17786  0CD7  02C4               	subwf	sprintf@len^(0+128),f
 17787  0CD8  3000               	movlw	0
 17788  0CD9  3BC5               	subwfb	(sprintf@len+1)^(0+128),f
 17789  0CDA  0A44               	incf	sprintf@len^(0+128),w
 17790  0CDB  1D03               	skipz
 17791  0CDC  2CC3               	goto	l5504
 17792  0CDD  0A45               	incf	(sprintf@len+1)^(0+128),w
 17793  0CDE  1D03               	btfss	3,2
 17794  0CDF  2CC3               	goto	l5504
 17795                           
 17796                           ;doprnt.c: 770: if(flag & 0x08)
 17797  0CE0  19CE               	btfsc	sprintf@flag^(0+128),3
 17798  0CE1  2CEF               	goto	l5518
 17799  0CE2  2B92               	goto	l5742
 17800  0CE3                     l5514:	
 17801                           ;doprnt.c: 771: while(width--)
 17802                           
 17803                           
 17804                           ;doprnt.c: 772: ((*sp++ = (' ')));
 17805  0CE3  3020               	movlw	32
 17806  0CE4  00B8               	movwf	??_sprintf^(0+128)
 17807  0CE5  084D               	movf	sprintf@sp^(0+128),w
 17808  0CE6  0086               	movwf	6
 17809  0CE7  3003               	movlw	3	; select bank6/7
 17810  0CE8  0087               	movwf	7
 17811  0CE9  0838               	movf	??_sprintf^(0+128),w
 17812  0CEA  0081               	movwf	1
 17813  0CEB  3001               	movlw	1
 17814  0CEC  00B8               	movwf	??_sprintf^(0+128)
 17815  0CED  0838               	movf	??_sprintf^(0+128),w
 17816  0CEE  07CD               	addwf	sprintf@sp^(0+128),f
 17817  0CEF                     l5518:	
 17818  0CEF  30FF               	movlw	255
 17819  0CF0  07CA               	addwf	sprintf@width^(0+128),f
 17820  0CF1  30FF               	movlw	255
 17821  0CF2  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 17822  0CF3  0A4A               	incf	sprintf@width^(0+128),w
 17823  0CF4  1D03               	skipz
 17824  0CF5  2CE3               	goto	l5514
 17825  0CF6  0A4B               	incf	(sprintf@width+1)^(0+128),w
 17826  0CF7  1903               	btfsc	3,2
 17827  0CF8  2B92               	goto	l5742
 17828  0CF9  2CE3               	goto	l5514
 17829  0CFA                     l5520:	
 17830                           ;doprnt.c: 784: case 'c':
 17831                           
 17832                           ;doprnt.c: 774: continue;
 17833                           
 17834                           
 17835                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 17836  0CFA  0846               	movf	sprintf@ap^(0+128),w
 17837  0CFB  0086               	movwf	6
 17838  0CFC  0187               	clrf	7
 17839  0CFD  0801               	movf	1,w
 17840  0CFE  00B8               	movwf	??_sprintf^(0+128)
 17841  0CFF  0838               	movf	??_sprintf^(0+128),w
 17842  0D00  00CC               	movwf	sprintf@c^(0+128)
 17843  0D01  3002               	movlw	2
 17844  0D02  00B8               	movwf	??_sprintf^(0+128)
 17845  0D03  0838               	movf	??_sprintf^(0+128),w
 17846  0D04  07C6               	addwf	sprintf@ap^(0+128),f
 17847  0D05                     l5524:	
 17848                           ;doprnt.c: 802: default:
 17849                           
 17850                           
 17851                           ;doprnt.c: 805: cp = (char *)&c;
 17852  0D05  30CC               	movlw	(low (sprintf@c| 0))& (0+255)
 17853  0D06  00B8               	movwf	??_sprintf^(0+128)
 17854  0D07  0838               	movf	??_sprintf^(0+128),w
 17855  0D08  00C3               	movwf	sprintf@cp^(0+128)
 17856                           
 17857                           ;doprnt.c: 806: len = 1;
 17858  0D09  3001               	movlw	1
 17859  0D0A  00C4               	movwf	sprintf@len^(0+128)
 17860  0D0B  3000               	movlw	0
 17861  0D0C  00C5               	movwf	(sprintf@len^(0+128)+1)
 17862                           
 17863                           ;doprnt.c: 807: goto dostring;
 17864  0D0D  2C85               	goto	l5482
 17865  0D0E                     l5528:	
 17866                           ;doprnt.c: 817: case 'u':
 17867                           
 17868                           
 17869                           ;doprnt.c: 818: flag |= 0xC0;
 17870  0D0E  30C0               	movlw	192
 17871  0D0F  04CE               	iorwf	sprintf@flag^(0+128),f
 17872  0D10  3000               	movlw	0
 17873  0D11  04CF               	iorwf	(sprintf@flag+1)^(0+128),f
 17874                           
 17875                           ;doprnt.c: 822: }
 17876                           
 17877                           ;doprnt.c: 819: break;
 17878  0D12  2D3A               	goto	l5534
 17879  0D13                     l5532:	
 17880  0D13  0021               	movlb	1	; select bank1
 17881  0D14  082F               	movf	(sprintf@f+1)^(0+128),w
 17882  0D15  00B9               	movwf	(??_sprintf^(0+128)+1)
 17883  0D16  082E               	movf	sprintf@f^(0+128),w
 17884  0D17  00B8               	movwf	??_sprintf^(0+128)
 17885  0D18  0AAE               	incf	sprintf@f^(0+128),f
 17886  0D19  1903               	skipnz
 17887  0D1A  0AAF               	incf	(sprintf@f+1)^(0+128),f
 17888  0D1B  0838               	movf	??_sprintf^(0+128),w
 17889  0D1C  0084               	movwf	4
 17890  0D1D  0839               	movf	(??_sprintf+1)^(0+128),w
 17891  0D1E  0085               	movwf	5
 17892  0D1F  0800               	movf	0,w	;code access
 17893  0D20  00CC               	movwf	sprintf@c^(0+128)
 17894                           
 17895                           ; Switch size 1, requested type "space"
 17896                           ; Number of cases is 8, Range of values is 0 to 120
 17897                           ; switch strategies available:
 17898                           ; Name         Instructions Cycles
 17899                           ; simple_byte           25    13 (average)
 17900                           ; direct_byte          248     6 (fixed)
 17901                           ; jumptable            260     6 (fixed)
 17902                           ;	Chosen strategy is simple_byte
 17903  0D21  3A00               	xorlw	0	; case 0
 17904  0D22  1903               	skipnz
 17905  0D23  2FFA               	goto	l5744
 17906  0D24  3A58               	xorlw	88	; case 88
 17907  0D25  1903               	skipnz
 17908  0D26  2C82               	goto	l1089
 17909  0D27  3A3B               	xorlw	59	; case 99
 17910  0D28  1903               	skipnz
 17911  0D29  2CFA               	goto	l5520
 17912  0D2A  3A07               	xorlw	7	; case 100
 17913  0D2B  1903               	skipnz
 17914  0D2C  2D3A               	goto	l5534
 17915  0D2D  3A0D               	xorlw	13	; case 105
 17916  0D2E  1903               	skipnz
 17917  0D2F  2D3A               	goto	l5534
 17918  0D30  3A06               	xorlw	6	; case 111
 17919  0D31  1903               	skipnz
 17920  0D32  2C80               	goto	l1085
 17921  0D33  3A1A               	xorlw	26	; case 117
 17922  0D34  1903               	skipnz
 17923  0D35  2D0E               	goto	l5528
 17924  0D36  3A0D               	xorlw	13	; case 120
 17925  0D37  1903               	skipnz
 17926  0D38  2C83               	goto	l1090
 17927  0D39  2D05               	goto	l5524
 17928  0D3A                     l5534:	
 17929                           
 17930                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 17931  0D3A  30C0               	movlw	192
 17932  0D3B  054E               	andwf	sprintf@flag^(0+128),w
 17933  0D3C  00B8               	movwf	??_sprintf^(0+128)
 17934  0D3D  3000               	movlw	0
 17935  0D3E  054F               	andwf	(sprintf@flag+1)^(0+128),w
 17936  0D3F  00B9               	movwf	(??_sprintf+1)^(0+128)
 17937  0D40  0838               	movf	??_sprintf^(0+128),w
 17938  0D41  0439               	iorwf	(??_sprintf^(0+128)+1),w
 17939  0D42  1D03               	btfss	3,2
 17940  0D43  2D5B               	goto	l5546
 17941                           
 17942                           ;doprnt.c: 1253: {
 17943                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 17944  0D44  0846               	movf	sprintf@ap^(0+128),w
 17945  0D45  0086               	movwf	6
 17946  0D46  0187               	clrf	7
 17947  0D47  3F40               	moviw [0]fsr1
 17948  0D48  00C7               	movwf	sprintf@val^(0+128)
 17949  0D49  3F41               	moviw [1]fsr1
 17950  0D4A  00C8               	movwf	(sprintf@val+1)^(0+128)
 17951  0D4B  3002               	movlw	2
 17952  0D4C  00B8               	movwf	??_sprintf^(0+128)
 17953  0D4D  0838               	movf	??_sprintf^(0+128),w
 17954  0D4E  07C6               	addwf	sprintf@ap^(0+128),f
 17955                           
 17956                           ;doprnt.c: 1261: if((int)val < 0) {
 17957  0D4F  1FC8               	btfss	(sprintf@val+1)^(0+128),7
 17958  0D50  2D66               	goto	l5550
 17959                           
 17960                           ;doprnt.c: 1262: flag |= 0x03;
 17961  0D51  3003               	movlw	3
 17962  0D52  04CE               	iorwf	sprintf@flag^(0+128),f
 17963  0D53  3000               	movlw	0
 17964  0D54  04CF               	iorwf	(sprintf@flag+1)^(0+128),f
 17965                           
 17966                           ;doprnt.c: 1263: val = -val;
 17967  0D55  09C7               	comf	sprintf@val^(0+128),f
 17968  0D56  09C8               	comf	(sprintf@val+1)^(0+128),f
 17969  0D57  0AC7               	incf	sprintf@val^(0+128),f
 17970  0D58  1903               	skipnz
 17971  0D59  0AC8               	incf	(sprintf@val+1)^(0+128),f
 17972                           
 17973                           ;doprnt.c: 1264: }
 17974                           ;doprnt.c: 1266: }
 17975  0D5A  2D66               	goto	l5550
 17976  0D5B                     l5546:	
 17977                           
 17978                           ;doprnt.c: 1268: else
 17979                           ;doprnt.c: 1273: {
 17980                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17981  0D5B  0846               	movf	sprintf@ap^(0+128),w
 17982  0D5C  0086               	movwf	6
 17983  0D5D  0187               	clrf	7
 17984  0D5E  3F40               	moviw [0]fsr1
 17985  0D5F  00C7               	movwf	sprintf@val^(0+128)
 17986  0D60  3F41               	moviw [1]fsr1
 17987  0D61  00C8               	movwf	(sprintf@val+1)^(0+128)
 17988  0D62  3002               	movlw	2
 17989  0D63  00B8               	movwf	??_sprintf^(0+128)
 17990  0D64  0838               	movf	??_sprintf^(0+128),w
 17991  0D65  07C6               	addwf	sprintf@ap^(0+128),f
 17992  0D66                     l5550:	
 17993                           
 17994                           ;doprnt.c: 1287: }
 17995                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 17996  0D66  0849               	movf	sprintf@prec^(0+128),w
 17997  0D67  1D03               	btfss	3,2
 17998  0D68  2DD8               	goto	l5588
 17999  0D69  0847               	movf	sprintf@val^(0+128),w
 18000  0D6A  0448               	iorwf	(sprintf@val+1)^(0+128),w
 18001  0D6B  1D03               	btfss	3,2
 18002  0D6C  2DD8               	goto	l5588
 18003                           
 18004                           ;doprnt.c: 1291: prec++;
 18005  0D6D  3001               	movlw	1
 18006  0D6E  00B8               	movwf	??_sprintf^(0+128)
 18007  0D6F  0838               	movf	??_sprintf^(0+128),w
 18008  0D70  07C9               	addwf	sprintf@prec^(0+128),f
 18009                           
 18010                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 18011  0D71  2DD8               	goto	l5588
 18012  0D72                     l1115:	
 18013                           ;doprnt.c: 1299: case 0x00:
 18014                           
 18015                           
 18016                           ;doprnt.c: 1302: case 0xC0:
 18017                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18018  0D72  01CC               	clrf	sprintf@c^(0+128)
 18019  0D73  0ACC               	incf	sprintf@c^(0+128),f
 18020  0D74                     L12:	
 18021  0D74  3005               	movlw	5
 18022  0D75  064C               	xorwf	sprintf@c^(0+128),w
 18023  0D76  1903               	btfsc	3,2
 18024  0D77  2DE7               	goto	l5590
 18025                           
 18026                           ;doprnt.c: 1306: if(val < dpowers[c])
 18027  0D78  084C               	movf	sprintf@c^(0+128),w
 18028  0D79  00B8               	movwf	??_sprintf^(0+128)
 18029  0D7A  01B9               	clrf	(??_sprintf^(0+128)+1)
 18030  0D7B  35B8               	lslf	??_sprintf^(0+128),f
 18031  0D7C  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18032  0D7D  305A               	movlw	low (_dpowers| (0+32768))
 18033  0D7E  0738               	addwf	??_sprintf^(0+128),w
 18034  0D7F  0084               	movwf	4
 18035  0D80  3085               	movlw	high (_dpowers| (0+32768))
 18036  0D81  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18037  0D82  0085               	movwf	5
 18038  0D83  3F00               	moviw [0]fsr0
 18039  0D84  00BA               	movwf	(??_sprintf+2)^(0+128)
 18040  0D85  3F01               	moviw [1]fsr0
 18041  0D86  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 18042  0D87  083B               	movf	(??_sprintf+3)^(0+128),w
 18043  0D88  0248               	subwf	(sprintf@val+1)^(0+128),w
 18044  0D89  1D03               	skipz
 18045  0D8A  2D8D               	goto	u5045
 18046  0D8B  083A               	movf	(??_sprintf+2)^(0+128),w
 18047  0D8C  0247               	subwf	sprintf@val^(0+128),w
 18048  0D8D                     u5045:	
 18049  0D8D  1C03               	btfss	3,0
 18050  0D8E  2DE7               	goto	l5590
 18051                           
 18052                           ;doprnt.c: 1307: break;
 18053  0D8F  3001               	movlw	1
 18054  0D90  00B8               	movwf	??_sprintf^(0+128)
 18055  0D91  0838               	movf	??_sprintf^(0+128),w
 18056  0D92  07CC               	addwf	sprintf@c^(0+128),f
 18057  0D93  2D74               	goto	L12
 18058  0D94                     l1120:	
 18059                           ;doprnt.c: 1314: case 0x80:
 18060                           
 18061                           ;doprnt.c: 1309: break;
 18062                           
 18063                           
 18064                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18065  0D94  01CC               	clrf	sprintf@c^(0+128)
 18066  0D95  0ACC               	incf	sprintf@c^(0+128),f
 18067  0D96                     L13:	
 18068  0D96  3004               	movlw	4
 18069  0D97  064C               	xorwf	sprintf@c^(0+128),w
 18070  0D98  1903               	btfsc	3,2
 18071  0D99  2DE7               	goto	l5590
 18072                           
 18073                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18074  0D9A  084C               	movf	sprintf@c^(0+128),w
 18075  0D9B  00B8               	movwf	??_sprintf^(0+128)
 18076  0D9C  01B9               	clrf	(??_sprintf^(0+128)+1)
 18077  0D9D  35B8               	lslf	??_sprintf^(0+128),f
 18078  0D9E  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18079  0D9F  3064               	movlw	low (_hexpowers| (0+32768))
 18080  0DA0  0738               	addwf	??_sprintf^(0+128),w
 18081  0DA1  0084               	movwf	4
 18082  0DA2  3085               	movlw	high (_hexpowers| (0+32768))
 18083  0DA3  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18084  0DA4  0085               	movwf	5
 18085  0DA5  3F00               	moviw [0]fsr0
 18086  0DA6  00BA               	movwf	(??_sprintf+2)^(0+128)
 18087  0DA7  3F01               	moviw [1]fsr0
 18088  0DA8  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 18089  0DA9  083B               	movf	(??_sprintf+3)^(0+128),w
 18090  0DAA  0248               	subwf	(sprintf@val+1)^(0+128),w
 18091  0DAB  1D03               	skipz
 18092  0DAC  2DAF               	goto	u5075
 18093  0DAD  083A               	movf	(??_sprintf+2)^(0+128),w
 18094  0DAE  0247               	subwf	sprintf@val^(0+128),w
 18095  0DAF                     u5075:	
 18096  0DAF  1C03               	btfss	3,0
 18097  0DB0  2DE7               	goto	l5590
 18098                           
 18099                           ;doprnt.c: 1318: break;
 18100  0DB1  3001               	movlw	1
 18101  0DB2  00B8               	movwf	??_sprintf^(0+128)
 18102  0DB3  0838               	movf	??_sprintf^(0+128),w
 18103  0DB4  07CC               	addwf	sprintf@c^(0+128),f
 18104  0DB5  2D96               	goto	L13
 18105  0DB6                     l1124:	
 18106                           ;doprnt.c: 1326: case 0x40:
 18107                           
 18108                           ;doprnt.c: 1320: break;
 18109                           
 18110                           
 18111                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 18112  0DB6  01CC               	clrf	sprintf@c^(0+128)
 18113  0DB7  0ACC               	incf	sprintf@c^(0+128),f
 18114  0DB8                     L14:	
 18115  0DB8  3006               	movlw	6
 18116  0DB9  064C               	xorwf	sprintf@c^(0+128),w
 18117  0DBA  1903               	btfsc	3,2
 18118  0DBB  2DE7               	goto	l5590
 18119                           
 18120                           ;doprnt.c: 1329: if(val < octpowers[c])
 18121  0DBC  084C               	movf	sprintf@c^(0+128),w
 18122  0DBD  00B8               	movwf	??_sprintf^(0+128)
 18123  0DBE  01B9               	clrf	(??_sprintf^(0+128)+1)
 18124  0DBF  35B8               	lslf	??_sprintf^(0+128),f
 18125  0DC0  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18126  0DC1  304E               	movlw	low (_octpowers| (0+32768))
 18127  0DC2  0738               	addwf	??_sprintf^(0+128),w
 18128  0DC3  0084               	movwf	4
 18129  0DC4  3085               	movlw	high (_octpowers| (0+32768))
 18130  0DC5  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18131  0DC6  0085               	movwf	5
 18132  0DC7  3F00               	moviw [0]fsr0
 18133  0DC8  00BA               	movwf	(??_sprintf+2)^(0+128)
 18134  0DC9  3F01               	moviw [1]fsr0
 18135  0DCA  00BB               	movwf	((??_sprintf+2)^(0+128)+1)
 18136  0DCB  083B               	movf	(??_sprintf+3)^(0+128),w
 18137  0DCC  0248               	subwf	(sprintf@val+1)^(0+128),w
 18138  0DCD  1D03               	skipz
 18139  0DCE  2DD1               	goto	u5105
 18140  0DCF  083A               	movf	(??_sprintf+2)^(0+128),w
 18141  0DD0  0247               	subwf	sprintf@val^(0+128),w
 18142  0DD1                     u5105:	
 18143  0DD1  1C03               	btfss	3,0
 18144  0DD2  2DE7               	goto	l5590
 18145                           
 18146                           ;doprnt.c: 1330: break;
 18147  0DD3  3001               	movlw	1
 18148  0DD4  00B8               	movwf	??_sprintf^(0+128)
 18149  0DD5  0838               	movf	??_sprintf^(0+128),w
 18150  0DD6  07CC               	addwf	sprintf@c^(0+128),f
 18151  0DD7  2DB8               	goto	L14
 18152  0DD8                     l5588:	
 18153                           ;doprnt.c: 1336: }
 18154                           
 18155                           ;doprnt.c: 1332: break;
 18156                           
 18157  0DD8  084E               	movf	sprintf@flag^(0+128),w
 18158  0DD9  39C0               	andlw	192
 18159                           
 18160                           ; Switch size 1, requested type "space"
 18161                           ; Number of cases is 4, Range of values is 0 to 192
 18162                           ; switch strategies available:
 18163                           ; Name         Instructions Cycles
 18164                           ; simple_byte           13     7 (average)
 18165                           ; jumptable            260     6 (fixed)
 18166                           ;	Chosen strategy is simple_byte
 18167  0DDA  3A00               	xorlw	0	; case 0
 18168  0DDB  1903               	skipnz
 18169  0DDC  2D72               	goto	l1115
 18170  0DDD  3A40               	xorlw	64	; case 64
 18171  0DDE  1903               	skipnz
 18172  0DDF  2DB6               	goto	l1124
 18173  0DE0  3AC0               	xorlw	192	; case 128
 18174  0DE1  1903               	skipnz
 18175  0DE2  2D94               	goto	l1120
 18176  0DE3  3A40               	xorlw	64	; case 192
 18177  0DE4  1903               	skipnz
 18178  0DE5  2D72               	goto	l1115
 18179  0DE6  2DE7               	goto	l5590
 18180  0DE7                     l5590:	
 18181                           
 18182                           ;doprnt.c: 1339: if(c < prec)
 18183  0DE7  084C               	movf	sprintf@c^(0+128),w
 18184  0DE8  3A80               	xorlw	128
 18185  0DE9  00B8               	movwf	??_sprintf^(0+128)
 18186  0DEA  0849               	movf	sprintf@prec^(0+128),w
 18187  0DEB  3A80               	xorlw	128
 18188  0DEC  02B8               	subwf	??_sprintf^(0+128),f
 18189  0DED  1803               	skipnc
 18190  0DEE  2DF4               	goto	l5594
 18191                           
 18192                           ;doprnt.c: 1340: c = prec;
 18193  0DEF  0849               	movf	sprintf@prec^(0+128),w
 18194  0DF0  00B8               	movwf	??_sprintf^(0+128)
 18195  0DF1  0838               	movf	??_sprintf^(0+128),w
 18196  0DF2  00CC               	movwf	sprintf@c^(0+128)
 18197  0DF3  2E00               	goto	l5598
 18198  0DF4                     l5594:	
 18199                           
 18200                           ;doprnt.c: 1341: else if(prec < c)
 18201  0DF4  0849               	movf	sprintf@prec^(0+128),w
 18202  0DF5  3A80               	xorlw	128
 18203  0DF6  00B8               	movwf	??_sprintf^(0+128)
 18204  0DF7  084C               	movf	sprintf@c^(0+128),w
 18205  0DF8  3A80               	xorlw	128
 18206  0DF9  02B8               	subwf	??_sprintf^(0+128),f
 18207  0DFA  1803               	skipnc
 18208  0DFB  2E00               	goto	l5598
 18209                           
 18210                           ;doprnt.c: 1342: prec = c;
 18211  0DFC  084C               	movf	sprintf@c^(0+128),w
 18212  0DFD  00B8               	movwf	??_sprintf^(0+128)
 18213  0DFE  0838               	movf	??_sprintf^(0+128),w
 18214  0DFF  00C9               	movwf	sprintf@prec^(0+128)
 18215  0E00                     l5598:	
 18216                           
 18217                           ;doprnt.c: 1345: if(width && flag & 0x03)
 18218  0E00  084A               	movf	sprintf@width^(0+128),w
 18219  0E01  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18220  0E02  1903               	btfsc	3,2
 18221  0E03  2E12               	goto	l5604
 18222  0E04  3003               	movlw	3
 18223  0E05  054E               	andwf	sprintf@flag^(0+128),w
 18224  0E06  00B8               	movwf	??_sprintf^(0+128)
 18225  0E07  3000               	movlw	0
 18226  0E08  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18227  0E09  00B9               	movwf	(??_sprintf+1)^(0+128)
 18228  0E0A  0838               	movf	??_sprintf^(0+128),w
 18229  0E0B  0439               	iorwf	(??_sprintf^(0+128)+1),w
 18230  0E0C  1903               	btfsc	3,2
 18231  0E0D  2E12               	goto	l5604
 18232                           
 18233                           ;doprnt.c: 1346: width--;
 18234  0E0E  30FF               	movlw	255
 18235  0E0F  07CA               	addwf	sprintf@width^(0+128),f
 18236  0E10  30FF               	movlw	255
 18237  0E11  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 18238  0E12                     l5604:	
 18239                           
 18240                           ;doprnt.c: 1348: if(flag & 0x4000) {
 18241  0E12  1F4F               	btfss	(sprintf@flag+1)^(0+128),6
 18242  0E13  2E33               	goto	l5612
 18243                           
 18244                           ;doprnt.c: 1349: if(width > prec)
 18245  0E14  0849               	movf	sprintf@prec^(0+128),w
 18246  0E15  00B8               	movwf	??_sprintf^(0+128)
 18247  0E16  01B9               	clrf	(??_sprintf^(0+128)+1)
 18248  0E17  1BB8               	btfsc	??_sprintf^(0+128),7
 18249  0E18  03B9               	decf	(??_sprintf^(0+128)+1),f
 18250  0E19  0839               	movf	(??_sprintf+1)^(0+128),w
 18251  0E1A  3A80               	xorlw	128
 18252  0E1B  00BA               	movwf	(??_sprintf+2)^(0+128)
 18253  0E1C  084B               	movf	(sprintf@width+1)^(0+128),w
 18254  0E1D  3A80               	xorlw	128
 18255  0E1E  023A               	subwf	(??_sprintf+2)^(0+128),w
 18256  0E1F  1D03               	skipz
 18257  0E20  2E23               	goto	u5175
 18258  0E21  084A               	movf	sprintf@width^(0+128),w
 18259  0E22  0238               	subwf	??_sprintf^(0+128),w
 18260  0E23                     u5175:	
 18261  0E23  1803               	skipnc
 18262  0E24  2E30               	goto	l5610
 18263                           
 18264                           ;doprnt.c: 1350: width -= prec;
 18265  0E25  0021               	movlb	1	; select bank1
 18266  0E26  0849               	movf	sprintf@prec^(0+128),w
 18267  0E27  00B8               	movwf	??_sprintf^(0+128)
 18268  0E28  01B9               	clrf	(??_sprintf^(0+128)+1)
 18269  0E29  1BB8               	btfsc	??_sprintf^(0+128),7
 18270  0E2A  03B9               	decf	(??_sprintf^(0+128)+1),f
 18271  0E2B  0838               	movf	??_sprintf^(0+128),w
 18272  0E2C  02CA               	subwf	sprintf@width^(0+128),f
 18273  0E2D  0839               	movf	(??_sprintf+1)^(0+128),w
 18274  0E2E  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 18275  0E2F  2E33               	goto	l5612
 18276  0E30                     l5610:	
 18277                           
 18278                           ;doprnt.c: 1351: else
 18279                           ;doprnt.c: 1352: width = 0;
 18280  0E30  0021               	movlb	1	; select bank1
 18281  0E31  01CA               	clrf	sprintf@width^(0+128)
 18282  0E32  01CB               	clrf	(sprintf@width+1)^(0+128)
 18283  0E33                     l5612:	
 18284                           
 18285                           ;doprnt.c: 1353: }
 18286                           ;doprnt.c: 1357: if((flag & (
 18287                           ;doprnt.c: 1359: 0x04|
 18288                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 18289  0E33  30C4               	movlw	196
 18290  0E34  054E               	andwf	sprintf@flag^(0+128),w
 18291  0E35  00B8               	movwf	??_sprintf^(0+128)
 18292  0E36  3008               	movlw	8
 18293  0E37  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18294  0E38  00B9               	movwf	(??_sprintf+1)^(0+128)
 18295  0E39  3040               	movlw	64
 18296  0E3A  0638               	xorwf	??_sprintf^(0+128),w
 18297  0E3B  3008               	movlw	8
 18298  0E3C  1903               	skipnz
 18299  0E3D  0639               	xorwf	(??_sprintf^(0+128)+1),w
 18300  0E3E  1D03               	btfss	3,2
 18301  0E3F  2E46               	goto	l5618
 18302                           
 18303                           ;doprnt.c: 1362: if(width)
 18304  0E40  084A               	movf	sprintf@width^(0+128),w
 18305  0E41  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18306  0E42  1903               	btfsc	3,2
 18307  0E43  2E67               	goto	l5626
 18308                           
 18309                           ;doprnt.c: 1363: width--;
 18310  0E44  30FF               	movlw	255
 18311  0E45  2E60               	goto	L6
 18312  0E46                     l5618:	
 18313                           ;doprnt.c: 1364: } else
 18314                           
 18315                           
 18316                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18317  0E46  30C0               	movlw	192
 18318  0E47  054E               	andwf	sprintf@flag^(0+128),w
 18319  0E48  00B8               	movwf	??_sprintf^(0+128)
 18320  0E49  3008               	movlw	8
 18321  0E4A  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18322  0E4B  00B9               	movwf	(??_sprintf+1)^(0+128)
 18323  0E4C  3080               	movlw	128
 18324  0E4D  0638               	xorwf	??_sprintf^(0+128),w
 18325  0E4E  3008               	movlw	8
 18326  0E4F  1903               	skipnz
 18327  0E50  0639               	xorwf	(??_sprintf^(0+128)+1),w
 18328  0E51  1D03               	btfss	3,2
 18329  0E52  2E67               	goto	l5626
 18330                           
 18331                           ;doprnt.c: 1372: if(width > 2)
 18332  0E53  084B               	movf	(sprintf@width+1)^(0+128),w
 18333  0E54  3A80               	xorlw	128
 18334  0E55  00B8               	movwf	??_sprintf^(0+128)
 18335  0E56  3080               	movlw	128
 18336  0E57  0238               	subwf	??_sprintf^(0+128),w
 18337  0E58  1D03               	skipz
 18338  0E59  2E5C               	goto	u5215
 18339  0E5A  3003               	movlw	3
 18340  0E5B  024A               	subwf	sprintf@width^(0+128),w
 18341  0E5C                     u5215:	
 18342  0E5C  1C03               	skipc
 18343  0E5D  2E64               	goto	l5624
 18344                           
 18345                           ;doprnt.c: 1373: width -= 2;
 18346  0E5E  30FE               	movlw	254
 18347  0E5F  0021               	movlb	1	; select bank1
 18348  0E60                     L6:	
 18349  0E60  07CA               	addwf	sprintf@width^(0+128),f
 18350  0E61  30FF               	movlw	255
 18351  0E62  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 18352  0E63  2E67               	goto	l5626
 18353  0E64                     l5624:	
 18354                           
 18355                           ;doprnt.c: 1374: else
 18356                           ;doprnt.c: 1375: width = 0;
 18357  0E64  0021               	movlb	1	; select bank1
 18358  0E65  01CA               	clrf	sprintf@width^(0+128)
 18359  0E66  01CB               	clrf	(sprintf@width+1)^(0+128)
 18360  0E67                     l5626:	
 18361                           
 18362                           ;doprnt.c: 1376: }
 18363                           ;doprnt.c: 1381: if(width > c)
 18364  0E67  084C               	movf	sprintf@c^(0+128),w
 18365  0E68  00B8               	movwf	??_sprintf^(0+128)
 18366  0E69  01B9               	clrf	(??_sprintf^(0+128)+1)
 18367  0E6A  1BB8               	btfsc	??_sprintf^(0+128),7
 18368  0E6B  03B9               	decf	(??_sprintf^(0+128)+1),f
 18369  0E6C  0839               	movf	(??_sprintf+1)^(0+128),w
 18370  0E6D  3A80               	xorlw	128
 18371  0E6E  00BA               	movwf	(??_sprintf+2)^(0+128)
 18372  0E6F  084B               	movf	(sprintf@width+1)^(0+128),w
 18373  0E70  3A80               	xorlw	128
 18374  0E71  023A               	subwf	(??_sprintf+2)^(0+128),w
 18375  0E72  1D03               	skipz
 18376  0E73  2E76               	goto	u5225
 18377  0E74  084A               	movf	sprintf@width^(0+128),w
 18378  0E75  0238               	subwf	??_sprintf^(0+128),w
 18379  0E76                     u5225:	
 18380  0E76  1803               	skipnc
 18381  0E77  2E83               	goto	l5630
 18382                           
 18383                           ;doprnt.c: 1382: width -= c;
 18384  0E78  0021               	movlb	1	; select bank1
 18385  0E79  084C               	movf	sprintf@c^(0+128),w
 18386  0E7A  00B8               	movwf	??_sprintf^(0+128)
 18387  0E7B  01B9               	clrf	(??_sprintf^(0+128)+1)
 18388  0E7C  1BB8               	btfsc	??_sprintf^(0+128),7
 18389  0E7D  03B9               	decf	(??_sprintf^(0+128)+1),f
 18390  0E7E  0838               	movf	??_sprintf^(0+128),w
 18391  0E7F  02CA               	subwf	sprintf@width^(0+128),f
 18392  0E80  0839               	movf	(??_sprintf+1)^(0+128),w
 18393  0E81  3BCB               	subwfb	(sprintf@width+1)^(0+128),f
 18394  0E82  2E86               	goto	l5632
 18395  0E83                     l5630:	
 18396                           
 18397                           ;doprnt.c: 1383: else
 18398                           ;doprnt.c: 1384: width = 0;
 18399  0E83  0021               	movlb	1	; select bank1
 18400  0E84  01CA               	clrf	sprintf@width^(0+128)
 18401  0E85  01CB               	clrf	(sprintf@width+1)^(0+128)
 18402  0E86                     l5632:	
 18403                           
 18404                           ;doprnt.c: 1387: if(flag & 0x04) {
 18405  0E86  1D4E               	btfss	sprintf@flag^(0+128),2
 18406  0E87  2EDA               	goto	l5668
 18407                           
 18408                           ;doprnt.c: 1392: if(flag & 0x03)
 18409  0E88  3003               	movlw	3
 18410  0E89  054E               	andwf	sprintf@flag^(0+128),w
 18411  0E8A  00B8               	movwf	??_sprintf^(0+128)
 18412  0E8B  3000               	movlw	0
 18413  0E8C  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18414  0E8D  00B9               	movwf	(??_sprintf+1)^(0+128)
 18415  0E8E  0838               	movf	??_sprintf^(0+128),w
 18416  0E8F  0439               	iorwf	(??_sprintf^(0+128)+1),w
 18417  0E90  1903               	btfsc	3,2
 18418  0E91  2E94               	goto	l1144
 18419                           
 18420                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 18421  0E92  302D               	movlw	45
 18422  0E93  2EBA               	goto	L15
 18423  0E94                     l1144:	
 18424                           
 18425                           ;doprnt.c: 1396: else
 18426                           ;doprnt.c: 1399: if(flag & 0x01)
 18427  0E94  1C4E               	btfss	sprintf@flag^(0+128),0
 18428  0E95  2E98               	goto	l5644
 18429                           
 18430                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 18431  0E96  3020               	movlw	32
 18432  0E97  2EBA               	goto	L15
 18433  0E98                     l5644:	
 18434                           
 18435                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18436  0E98  30C0               	movlw	192
 18437  0E99  054E               	andwf	sprintf@flag^(0+128),w
 18438  0E9A  00B8               	movwf	??_sprintf^(0+128)
 18439  0E9B  3008               	movlw	8
 18440  0E9C  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18441  0E9D  00B9               	movwf	(??_sprintf+1)^(0+128)
 18442  0E9E  3080               	movlw	128
 18443  0E9F  0638               	xorwf	??_sprintf^(0+128),w
 18444  0EA0  3008               	movlw	8
 18445  0EA1  1903               	skipnz
 18446  0EA2  0639               	xorwf	(??_sprintf^(0+128)+1),w
 18447  0EA3  1D03               	btfss	3,2
 18448  0EA4  2EC5               	goto	l5660
 18449                           
 18450                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 18451  0EA5  3030               	movlw	48
 18452  0EA6  00B8               	movwf	??_sprintf^(0+128)
 18453  0EA7  084D               	movf	sprintf@sp^(0+128),w
 18454  0EA8  0086               	movwf	6
 18455  0EA9  3003               	movlw	3	; select bank6/7
 18456  0EAA  0087               	movwf	7
 18457  0EAB  0838               	movf	??_sprintf^(0+128),w
 18458  0EAC  0081               	movwf	1
 18459  0EAD  3001               	movlw	1
 18460  0EAE  00B8               	movwf	??_sprintf^(0+128)
 18461  0EAF  0838               	movf	??_sprintf^(0+128),w
 18462  0EB0  07CD               	addwf	sprintf@sp^(0+128),f
 18463                           
 18464                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 18465  0EB1  1ACE               	btfsc	sprintf@flag^(0+128),5
 18466  0EB2  2EB5               	goto	l5654
 18467  0EB3  3078               	movlw	120
 18468  0EB4  2EB6               	goto	L7
 18469  0EB5                     l5654:	
 18470  0EB5  3058               	movlw	88
 18471  0EB6                     L7:	
 18472  0EB6  00BC               	movwf	_sprintf$2384^(0+128)
 18473  0EB7  3000               	movlw	0
 18474  0EB8  00BD               	movwf	(_sprintf$2384^(0+128)+1)
 18475  0EB9  083C               	movf	_sprintf$2384^(0+128),w
 18476  0EBA                     L15:	
 18477  0EBA  00B8               	movwf	??_sprintf^(0+128)
 18478  0EBB  084D               	movf	sprintf@sp^(0+128),w
 18479  0EBC  0086               	movwf	6
 18480  0EBD  3003               	movlw	3	; select bank6/7
 18481  0EBE  0087               	movwf	7
 18482  0EBF  0838               	movf	??_sprintf^(0+128),w
 18483  0EC0  0081               	movwf	1
 18484  0EC1  3001               	movlw	1
 18485  0EC2  00B8               	movwf	??_sprintf^(0+128)
 18486  0EC3  0838               	movf	??_sprintf^(0+128),w
 18487  0EC4  07CD               	addwf	sprintf@sp^(0+128),f
 18488  0EC5                     l5660:	
 18489                           
 18490                           ;doprnt.c: 1412: }
 18491                           ;doprnt.c: 1415: if(width)
 18492  0EC5  084A               	movf	sprintf@width^(0+128),w
 18493  0EC6  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18494  0EC7  1903               	btfsc	3,2
 18495  0EC8  2FC0               	goto	l5732
 18496                           
 18497                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 18498                           
 18499                           ;doprnt.c: 1416: do
 18500  0EC9  3030               	movlw	48
 18501  0ECA  00B8               	movwf	??_sprintf^(0+128)
 18502  0ECB  084D               	movf	sprintf@sp^(0+128),w
 18503  0ECC  0086               	movwf	6
 18504  0ECD  3003               	movlw	3	; select bank6/7
 18505  0ECE  0087               	movwf	7
 18506  0ECF  0838               	movf	??_sprintf^(0+128),w
 18507  0ED0  0081               	movwf	1
 18508  0ED1  3001               	movlw	1
 18509  0ED2  00B8               	movwf	??_sprintf^(0+128)
 18510  0ED3  0838               	movf	??_sprintf^(0+128),w
 18511  0ED4  07CD               	addwf	sprintf@sp^(0+128),f
 18512                           
 18513                           ;doprnt.c: 1418: while(--width);
 18514  0ED5  30FF               	movlw	255
 18515  0ED6  07CA               	addwf	sprintf@width^(0+128),f
 18516  0ED7  30FF               	movlw	255
 18517  0ED8  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 18518  0ED9  2EC5               	goto	l5660
 18519  0EDA                     l5668:	
 18520                           ;doprnt.c: 1420: } else
 18521                           
 18522                           
 18523                           ;doprnt.c: 1422: {
 18524                           ;doprnt.c: 1424: if(width
 18525                           ;doprnt.c: 1426: && !(flag & 0x08)
 18526                           ;doprnt.c: 1428: )
 18527  0EDA  084A               	movf	sprintf@width^(0+128),w
 18528  0EDB  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18529  0EDC  1D03               	btfss	3,2
 18530  0EDD  19CE               	btfsc	sprintf@flag^(0+128),3
 18531  0EDE  2EF3               	goto	l5678
 18532  0EDF                     l5672:	
 18533                           ;doprnt.c: 1429: do
 18534                           
 18535                           
 18536                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 18537  0EDF  3020               	movlw	32
 18538  0EE0  00B8               	movwf	??_sprintf^(0+128)
 18539  0EE1  084D               	movf	sprintf@sp^(0+128),w
 18540  0EE2  0086               	movwf	6
 18541  0EE3  3003               	movlw	3	; select bank6/7
 18542  0EE4  0087               	movwf	7
 18543  0EE5  0838               	movf	??_sprintf^(0+128),w
 18544  0EE6  0081               	movwf	1
 18545  0EE7  3001               	movlw	1
 18546  0EE8  00B8               	movwf	??_sprintf^(0+128)
 18547  0EE9  0838               	movf	??_sprintf^(0+128),w
 18548  0EEA  07CD               	addwf	sprintf@sp^(0+128),f
 18549                           
 18550                           ;doprnt.c: 1431: while(--width);
 18551  0EEB  30FF               	movlw	255
 18552  0EEC  07CA               	addwf	sprintf@width^(0+128),f
 18553  0EED  30FF               	movlw	255
 18554  0EEE  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 18555  0EEF  084A               	movf	sprintf@width^(0+128),w
 18556  0EF0  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18557  0EF1  1D03               	btfss	3,2
 18558  0EF2  2EDF               	goto	l5672
 18559  0EF3                     l5678:	
 18560                           
 18561                           ;doprnt.c: 1438: if(flag & 0x03)
 18562  0EF3  3003               	movlw	3
 18563  0EF4  054E               	andwf	sprintf@flag^(0+128),w
 18564  0EF5  00B8               	movwf	??_sprintf^(0+128)
 18565  0EF6  3000               	movlw	0
 18566  0EF7  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18567  0EF8  00B9               	movwf	(??_sprintf+1)^(0+128)
 18568  0EF9  0838               	movf	??_sprintf^(0+128),w
 18569  0EFA  0439               	iorwf	(??_sprintf^(0+128)+1),w
 18570  0EFB  1903               	btfsc	3,2
 18571  0EFC  2EFF               	goto	l1160
 18572                           
 18573                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 18574  0EFD  302D               	movlw	45
 18575  0EFE  2F02               	goto	L16
 18576  0EFF                     l1160:	
 18577                           
 18578                           ;doprnt.c: 1443: else if(flag & 0x01)
 18579  0EFF  1C4E               	btfss	sprintf@flag^(0+128),0
 18580  0F00  2F0D               	goto	l5688
 18581                           
 18582                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 18583  0F01  3020               	movlw	32
 18584  0F02                     L16:	
 18585  0F02  00B8               	movwf	??_sprintf^(0+128)
 18586  0F03  084D               	movf	sprintf@sp^(0+128),w
 18587  0F04  0086               	movwf	6
 18588  0F05  3003               	movlw	3	; select bank6/7
 18589  0F06  0087               	movwf	7
 18590  0F07  0838               	movf	??_sprintf^(0+128),w
 18591  0F08  0081               	movwf	1
 18592  0F09  3001               	movlw	1
 18593  0F0A  00B8               	movwf	??_sprintf^(0+128)
 18594  0F0B  0838               	movf	??_sprintf^(0+128),w
 18595  0F0C  07CD               	addwf	sprintf@sp^(0+128),f
 18596  0F0D                     l5688:	
 18597                           
 18598                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 18599  0F0D  30C0               	movlw	192
 18600  0F0E  054E               	andwf	sprintf@flag^(0+128),w
 18601  0F0F  00B8               	movwf	??_sprintf^(0+128)
 18602  0F10  3008               	movlw	8
 18603  0F11  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18604  0F12  00B9               	movwf	(??_sprintf+1)^(0+128)
 18605  0F13  3040               	movlw	64
 18606  0F14  0638               	xorwf	??_sprintf^(0+128),w
 18607  0F15  3008               	movlw	8
 18608  0F16  1903               	skipnz
 18609  0F17  0639               	xorwf	(??_sprintf^(0+128)+1),w
 18610  0F18  1D03               	btfss	3,2
 18611  0F19  2F1C               	goto	l5694
 18612                           
 18613                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 18614  0F1A  3030               	movlw	48
 18615  0F1B  2FB5               	goto	L17
 18616  0F1C                     l5694:	
 18617                           
 18618                           ;doprnt.c: 1450: else
 18619                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18620  0F1C  30C0               	movlw	192
 18621  0F1D  054E               	andwf	sprintf@flag^(0+128),w
 18622  0F1E  00B8               	movwf	??_sprintf^(0+128)
 18623  0F1F  3008               	movlw	8
 18624  0F20  054F               	andwf	(sprintf@flag+1)^(0+128),w
 18625  0F21  00B9               	movwf	(??_sprintf+1)^(0+128)
 18626  0F22  3080               	movlw	128
 18627  0F23  0638               	xorwf	??_sprintf^(0+128),w
 18628  0F24  3008               	movlw	8
 18629  0F25  1903               	skipnz
 18630  0F26  0639               	xorwf	(??_sprintf^(0+128)+1),w
 18631  0F27  1D03               	btfss	3,2
 18632  0F28  2FC0               	goto	l5732
 18633                           
 18634                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 18635  0F29  3030               	movlw	48
 18636  0F2A  00B8               	movwf	??_sprintf^(0+128)
 18637  0F2B  084D               	movf	sprintf@sp^(0+128),w
 18638  0F2C  0086               	movwf	6
 18639  0F2D  3003               	movlw	3	; select bank6/7
 18640  0F2E  0087               	movwf	7
 18641  0F2F  0838               	movf	??_sprintf^(0+128),w
 18642  0F30  0081               	movwf	1
 18643  0F31  3001               	movlw	1
 18644  0F32  00B8               	movwf	??_sprintf^(0+128)
 18645  0F33  0838               	movf	??_sprintf^(0+128),w
 18646  0F34  07CD               	addwf	sprintf@sp^(0+128),f
 18647                           
 18648                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 18649  0F35  1ACE               	btfsc	sprintf@flag^(0+128),5
 18650  0F36  2F39               	goto	l5704
 18651  0F37  3078               	movlw	120
 18652  0F38  2F3A               	goto	L8
 18653  0F39                     l5704:	
 18654  0F39  3058               	movlw	88
 18655  0F3A                     L8:	
 18656  0F3A  00BE               	movwf	_sprintf$2385^(0+128)
 18657  0F3B  3000               	movlw	0
 18658  0F3C  00BF               	movwf	(_sprintf$2385^(0+128)+1)
 18659  0F3D  083E               	movf	_sprintf$2385^(0+128),w
 18660  0F3E  2FB5               	goto	L17
 18661  0F3F                     l5710:	
 18662                           ;doprnt.c: 1478: {
 18663                           ;doprnt.c: 1483: case 0x00:
 18664                           
 18665                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 18666                           
 18667                           ;doprnt.c: 1466: }
 18668                           ;doprnt.c: 1469: }
 18669                           ;doprnt.c: 1474: while(prec--) {
 18670                           
 18671                           
 18672                           ;doprnt.c: 1486: case 0xC0:
 18673                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18674  0F3F  300A               	movlw	10
 18675  0F40  00A8               	movwf	___lwmod@divisor^(0+128)
 18676  0F41  3000               	movlw	0
 18677  0F42  00A9               	movwf	(___lwmod@divisor^(0+128)+1)
 18678  0F43  0849               	movf	sprintf@prec^(0+128),w
 18679  0F44  00B8               	movwf	??_sprintf^(0+128)
 18680  0F45  01B9               	clrf	(??_sprintf^(0+128)+1)
 18681  0F46  35B8               	lslf	??_sprintf^(0+128),f
 18682  0F47  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18683  0F48  305A               	movlw	low (_dpowers| (0+32768))
 18684  0F49  0738               	addwf	??_sprintf^(0+128),w
 18685  0F4A  0084               	movwf	4
 18686  0F4B  3085               	movlw	high (_dpowers| (0+32768))
 18687  0F4C  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18688  0F4D  0085               	movwf	5
 18689  0F4E  3F00               	moviw [0]fsr0
 18690  0F4F  00A0               	movwf	___lwdiv@divisor^(0+128)
 18691  0F50  3F01               	moviw [1]fsr0
 18692  0F51  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 18693  0F52  0848               	movf	(sprintf@val+1)^(0+128),w
 18694  0F53  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 18695  0F54  0847               	movf	sprintf@val^(0+128),w
 18696  0F55  00A2               	movwf	___lwdiv@dividend^(0+128)
 18697  0F56  31A3  2332  318B   	fcall	___lwdiv
 18698  0F59  0021               	movlb	1	; select bank1
 18699  0F5A  0821               	movf	(?___lwdiv+1)^(0+128),w
 18700  0F5B  00AB               	movwf	(___lwmod@dividend+1)^(0+128)
 18701  0F5C  0820               	movf	?___lwdiv^(0+128),w
 18702  0F5D  00AA               	movwf	___lwmod@dividend^(0+128)
 18703  0F5E  31A2  2242  318B   	fcall	___lwmod
 18704  0F61  0021               	movlb	1	; select bank1
 18705  0F62  0828               	movf	?___lwmod^(0+128),w
 18706  0F63  2FB0               	goto	L18
 18707  0F64                     l5712:	
 18708                           ;doprnt.c: 1497: case 0x80:
 18709                           
 18710                           ;doprnt.c: 1491: break;
 18711                           
 18712                           
 18713                           ;doprnt.c: 1499: {
 18714                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 18715  0F64  0849               	movf	sprintf@prec^(0+128),w
 18716  0F65  00B8               	movwf	??_sprintf^(0+128)
 18717  0F66  01B9               	clrf	(??_sprintf^(0+128)+1)
 18718  0F67  35B8               	lslf	??_sprintf^(0+128),f
 18719  0F68  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18720  0F69  3064               	movlw	low (_hexpowers| (0+32768))
 18721  0F6A  0738               	addwf	??_sprintf^(0+128),w
 18722  0F6B  0084               	movwf	4
 18723  0F6C  3085               	movlw	high (_hexpowers| (0+32768))
 18724  0F6D  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18725  0F6E  0085               	movwf	5
 18726  0F6F  3F00               	moviw [0]fsr0
 18727  0F70  00A0               	movwf	___lwdiv@divisor^(0+128)
 18728  0F71  3F01               	moviw [1]fsr0
 18729  0F72  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 18730  0F73  0848               	movf	(sprintf@val+1)^(0+128),w
 18731  0F74  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 18732  0F75  0847               	movf	sprintf@val^(0+128),w
 18733  0F76  00A2               	movwf	___lwdiv@dividend^(0+128)
 18734  0F77  31A3  2332  318B   	fcall	___lwdiv
 18735  0F7A  0021               	movlb	1	; select bank1
 18736  0F7B  0820               	movf	?___lwdiv^(0+128),w
 18737  0F7C  390F               	andlw	15
 18738  0F7D  00BA               	movwf	(??_sprintf+2)^(0+128)
 18739  0F7E  083A               	movf	(??_sprintf+2)^(0+128),w
 18740  0F7F  00C2               	movwf	sprintf@idx^(0+128)
 18741                           
 18742                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 18743  0F80  1ACE               	btfsc	sprintf@flag^(0+128),5
 18744  0F81  2F86               	goto	l5718
 18745  0F82  30C4               	movlw	low (STR_45| (0+32768))
 18746  0F83  00C0               	movwf	_sprintf$2391^(0+128)
 18747  0F84  3088               	movlw	high (STR_45| (0+32768))
 18748  0F85  2F89               	goto	L10
 18749  0F86                     l5718:	
 18750  0F86  30B3               	movlw	low (STR_44| (0+32768))
 18751  0F87  00C0               	movwf	_sprintf$2391^(0+128)
 18752  0F88  3088               	movlw	high (STR_44| (0+32768))
 18753  0F89                     L10:	
 18754  0F89  00C1               	movwf	(_sprintf$2391^(0+128)+1)
 18755  0F8A  0841               	movf	(_sprintf$2391+1)^(0+128),w
 18756  0F8B  00B9               	movwf	(??_sprintf^(0+128)+1)
 18757  0F8C  0840               	movf	_sprintf$2391^(0+128),w
 18758  0F8D  00B8               	movwf	??_sprintf^(0+128)
 18759  0F8E  0842               	movf	sprintf@idx^(0+128),w
 18760  0F8F  0738               	addwf	??_sprintf^(0+128),w
 18761  0F90  0084               	movwf	4
 18762  0F91  0839               	movf	(??_sprintf^(0+128)+1),w
 18763  0F92  1803               	skipnc
 18764  0F93  0A39               	incf	(??_sprintf^(0+128)+1),w
 18765  0F94  0085               	movwf	5
 18766  0F95  0800               	movf	0,w	;code access
 18767  0F96  2FB1               	goto	L11
 18768  0F97                     l5722:	
 18769                           ;doprnt.c: 1516: case 0x40:
 18770                           
 18771                           ;doprnt.c: 1508: }
 18772                           ;doprnt.c: 1510: break;
 18773                           
 18774                           
 18775                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 18776  0F97  0849               	movf	sprintf@prec^(0+128),w
 18777  0F98  00B8               	movwf	??_sprintf^(0+128)
 18778  0F99  01B9               	clrf	(??_sprintf^(0+128)+1)
 18779  0F9A  35B8               	lslf	??_sprintf^(0+128),f
 18780  0F9B  0DB9               	rlf	(??_sprintf^(0+128)+1),f
 18781  0F9C  304E               	movlw	low (_octpowers| (0+32768))
 18782  0F9D  0738               	addwf	??_sprintf^(0+128),w
 18783  0F9E  0084               	movwf	4
 18784  0F9F  3085               	movlw	high (_octpowers| (0+32768))
 18785  0FA0  3D39               	addwfc	(??_sprintf+1)^(0+128),w
 18786  0FA1  0085               	movwf	5
 18787  0FA2  3F00               	moviw [0]fsr0
 18788  0FA3  00A0               	movwf	___lwdiv@divisor^(0+128)
 18789  0FA4  3F01               	moviw [1]fsr0
 18790  0FA5  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
 18791  0FA6  0848               	movf	(sprintf@val+1)^(0+128),w
 18792  0FA7  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 18793  0FA8  0847               	movf	sprintf@val^(0+128),w
 18794  0FA9  00A2               	movwf	___lwdiv@dividend^(0+128)
 18795  0FAA  31A3  2332  318B   	fcall	___lwdiv
 18796  0FAD  0021               	movlb	1	; select bank1
 18797  0FAE  0820               	movf	?___lwdiv^(0+128),w
 18798  0FAF  3907               	andlw	7
 18799  0FB0                     L18:	
 18800  0FB0  3E30               	addlw	48
 18801  0FB1                     L11:	
 18802  0FB1  00BA               	movwf	(??_sprintf+2)^(0+128)
 18803  0FB2  083A               	movf	(??_sprintf+2)^(0+128),w
 18804  0FB3  00CC               	movwf	sprintf@c^(0+128)
 18805  0FB4                     l5728:	
 18806                           ;doprnt.c: 1523: }
 18807                           
 18808                           ;doprnt.c: 1520: break;
 18809                           
 18810                           
 18811                           ;doprnt.c: 1524: ((*sp++ = (c)));
 18812  0FB4  084C               	movf	sprintf@c^(0+128),w
 18813  0FB5                     L17:	
 18814  0FB5  00B8               	movwf	??_sprintf^(0+128)
 18815  0FB6  084D               	movf	sprintf@sp^(0+128),w
 18816  0FB7  0086               	movwf	6
 18817  0FB8  3003               	movlw	3	; select bank6/7
 18818  0FB9  0087               	movwf	7
 18819  0FBA  0838               	movf	??_sprintf^(0+128),w
 18820  0FBB  0081               	movwf	1
 18821  0FBC  3001               	movlw	1
 18822  0FBD  00B8               	movwf	??_sprintf^(0+128)
 18823  0FBE  0838               	movf	??_sprintf^(0+128),w
 18824  0FBF  07CD               	addwf	sprintf@sp^(0+128),f
 18825  0FC0                     l5732:	
 18826  0FC0  30FF               	movlw	255
 18827  0FC1  00B8               	movwf	??_sprintf^(0+128)
 18828  0FC2  0838               	movf	??_sprintf^(0+128),w
 18829  0FC3  07C9               	addwf	sprintf@prec^(0+128),f
 18830  0FC4  0A49               	incf	sprintf@prec^(0+128),w
 18831  0FC5  1903               	btfsc	3,2
 18832  0FC6  2FD7               	goto	l1182
 18833  0FC7  084E               	movf	sprintf@flag^(0+128),w
 18834  0FC8  39C0               	andlw	192
 18835                           
 18836                           ; Switch size 1, requested type "space"
 18837                           ; Number of cases is 4, Range of values is 0 to 192
 18838                           ; switch strategies available:
 18839                           ; Name         Instructions Cycles
 18840                           ; simple_byte           13     7 (average)
 18841                           ; jumptable            260     6 (fixed)
 18842                           ;	Chosen strategy is simple_byte
 18843  0FC9  3A00               	xorlw	0	; case 0
 18844  0FCA  1903               	skipnz
 18845  0FCB  2F3F               	goto	l5710
 18846  0FCC  3A40               	xorlw	64	; case 64
 18847  0FCD  1903               	skipnz
 18848  0FCE  2F97               	goto	l5722
 18849  0FCF  3AC0               	xorlw	192	; case 128
 18850  0FD0  1903               	skipnz
 18851  0FD1  2F64               	goto	l5712
 18852  0FD2  3A40               	xorlw	64	; case 192
 18853  0FD3  1903               	skipnz
 18854  0FD4  2F3F               	goto	l5710
 18855  0FD5  2FB4               	goto	l5728
 18856  0FD6  2FB4               	goto	l5728
 18857  0FD7                     l1182:	
 18858                           
 18859                           ;doprnt.c: 1525: }
 18860                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 18861  0FD7  1DCE               	btfss	sprintf@flag^(0+128),3
 18862  0FD8  2B92               	goto	l5742
 18863  0FD9  084B               	movf	(sprintf@width+1)^(0+128),w
 18864  0FDA  3A80               	xorlw	128
 18865  0FDB  00B8               	movwf	??_sprintf^(0+128)
 18866  0FDC  3080               	movlw	128
 18867  0FDD  0238               	subwf	??_sprintf^(0+128),w
 18868  0FDE  1D03               	skipz
 18869  0FDF  2FE2               	goto	u5415
 18870  0FE0  3001               	movlw	1
 18871  0FE1  024A               	subwf	sprintf@width^(0+128),w
 18872  0FE2                     u5415:	
 18873  0FE2  1C03               	skipc
 18874  0FE3  2B92               	goto	l5742
 18875  0FE4                     l5736:	
 18876                           ;doprnt.c: 1529: do
 18877                           
 18878                           
 18879                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 18880  0FE4  3020               	movlw	32
 18881  0FE5  0021               	movlb	1	; select bank1
 18882  0FE6  00B8               	movwf	??_sprintf^(0+128)
 18883  0FE7  084D               	movf	sprintf@sp^(0+128),w
 18884  0FE8  0086               	movwf	6
 18885  0FE9  3003               	movlw	3	; select bank6/7
 18886  0FEA  0087               	movwf	7
 18887  0FEB  0838               	movf	??_sprintf^(0+128),w
 18888  0FEC  0081               	movwf	1
 18889  0FED  3001               	movlw	1
 18890  0FEE  00B8               	movwf	??_sprintf^(0+128)
 18891  0FEF  0838               	movf	??_sprintf^(0+128),w
 18892  0FF0  07CD               	addwf	sprintf@sp^(0+128),f
 18893                           
 18894                           ;doprnt.c: 1531: while(--width);
 18895  0FF1  30FF               	movlw	255
 18896  0FF2  07CA               	addwf	sprintf@width^(0+128),f
 18897  0FF3  30FF               	movlw	255
 18898  0FF4  3DCB               	addwfc	(sprintf@width+1)^(0+128),f
 18899  0FF5  084A               	movf	sprintf@width^(0+128),w
 18900  0FF6  044B               	iorwf	(sprintf@width+1)^(0+128),w
 18901  0FF7  1903               	btfsc	3,2
 18902  0FF8  2B92               	goto	l5742
 18903  0FF9  2FE4               	goto	l5736
 18904  0FFA                     l5744:	
 18905                           ;doprnt.c: 1533: }
 18906                           ;doprnt.c: 1535: alldone:
 18907                           
 18908                           
 18909                           ;doprnt.c: 1538: *sp = 0;
 18910  0FFA  084D               	movf	sprintf@sp^(0+128),w
 18911  0FFB  0086               	movwf	6
 18912  0FFC  3003               	movlw	3	; select bank6/7
 18913  0FFD  0087               	movwf	7
 18914  0FFE  0181               	clrf	1
 18915  0FFF  0008               	return
 18916  1000                     __end_of_sprintf:	
 18917                           ;doprnt.c: 1540: return 0;
 18918                           ;	Return value of _sprintf is never used
 18919                           
 18920                           
 18921                           	psect	text62
 18922  2E02                     __ptext62:	
 18923 ;; *************** function _isdigit *****************
 18924 ;; Defined at:
 18925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;  c               1    wreg     unsigned char 
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;  c               1    1[BANK1 ] unsigned char 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;		None               void
 18932 ;; Registers used:
 18933 ;;		wreg, status,2, status,0
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;Total ram usage:        2 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:    5
 18946 ;; This function calls:
 18947 ;;		Nothing
 18948 ;; This function is called by:
 18949 ;;		_sprintf
 18950 ;; This function uses a non-reentrant model
 18951 ;;
 18952                           
 18953                           
 18954                           ;psect for function _isdigit
 18955  2E02                     _isdigit:	
 18956                           
 18957                           ;incstack = 0
 18958                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 18959                           ;isdigit@c stored from wreg
 18960  2E02  0021               	movlb	1	; select bank1
 18961  2E03  00A1               	movwf	isdigit@c^(0+128)
 18962  2E04  01A0               	clrf	_isdigit$2577^(0+128)
 18963  2E05  303A               	movlw	58
 18964  2E06  0221               	subwf	isdigit@c^(0+128),w
 18965  2E07  1803               	skipnc
 18966  2E08  2E0F               	goto	l5128
 18967  2E09  3030               	movlw	48
 18968  2E0A  0221               	subwf	isdigit@c^(0+128),w
 18969  2E0B  1C03               	skipc
 18970  2E0C  2E0F               	goto	l5128
 18971  2E0D  01A0               	clrf	_isdigit$2577^(0+128)
 18972  2E0E  0AA0               	incf	_isdigit$2577^(0+128),f
 18973  2E0F                     l5128:	
 18974  2E0F  0C20               	rrf	_isdigit$2577^(0+128),w
 18975  2E10  0008               	return
 18976  2E11                     __end_of_isdigit:	
 18977                           
 18978                           	psect	text63
 18979  2FAC                     __ptext63:	
 18980 ;; *************** function ___wmul *****************
 18981 ;; Defined at:
 18982 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;  multiplier      2    7[BANK1 ] unsigned int 
 18985 ;;  multiplicand    2    9[BANK1 ] unsigned int 
 18986 ;; Auto vars:     Size  Location     Type
 18987 ;;  product         2   11[BANK1 ] unsigned int 
 18988 ;; Return value:  Size  Location     Type
 18989 ;;                  2    7[BANK1 ] unsigned int 
 18990 ;; Registers used:
 18991 ;;		wreg, status,2, status,0
 18992 ;; Tracked objects:
 18993 ;;		On entry : 0/0
 18994 ;;		On exit  : 0/0
 18995 ;;		Unchanged: 0/0
 18996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18997 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18998 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19000 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19001 ;;Total ram usage:        6 bytes
 19002 ;; Hardware stack levels used:    1
 19003 ;; Hardware stack levels required when called:    5
 19004 ;; This function calls:
 19005 ;;		Nothing
 19006 ;; This function is called by:
 19007 ;;		_MiMAC_Init
 19008 ;;		_MiMAC_ReceivedPacket
 19009 ;;		_MiMAC_DiscardPacket
 19010 ;;		_P2PTasks
 19011 ;;		_run_p2p_demo
 19012 ;;		_sprintf
 19013 ;;		_getReceiverBW
 19014 ;;		_MiApp_RemoveConnection
 19015 ;; This function uses a non-reentrant model
 19016 ;;
 19017                           
 19018                           
 19019                           ;psect for function ___wmul
 19020  2FAC                     ___wmul:	
 19021                           
 19022                           ;incstack = 0
 19023                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 19024  2FAC  0021               	movlb	1	; select bank1
 19025  2FAD  01AB               	clrf	___wmul@product^(0+128)
 19026  2FAE  01AC               	clrf	(___wmul@product+1)^(0+128)
 19027  2FAF                     l5134:	
 19028  2FAF  1C27               	btfss	___wmul@multiplier^(0+128),0
 19029  2FB0  2FB5               	goto	l1271
 19030  2FB1  0829               	movf	___wmul@multiplicand^(0+128),w
 19031  2FB2  07AB               	addwf	___wmul@product^(0+128),f
 19032  2FB3  082A               	movf	(___wmul@multiplicand+1)^(0+128),w
 19033  2FB4  3DAC               	addwfc	(___wmul@product+1)^(0+128),f
 19034  2FB5                     l1271:	
 19035  2FB5  3001               	movlw	1
 19036  2FB6                     u4315:	
 19037  2FB6  35A9               	lslf	___wmul@multiplicand^(0+128),f
 19038  2FB7  0DAA               	rlf	(___wmul@multiplicand+1)^(0+128),f
 19039  2FB8  0B89               	decfsz	9,f
 19040  2FB9  2FB6               	goto	u4315
 19041  2FBA  3001               	movlw	1
 19042  2FBB                     u4325:	
 19043  2FBB  36A8               	lsrf	(___wmul@multiplier+1)^(0+128),f
 19044  2FBC  0CA7               	rrf	___wmul@multiplier^(0+128),f
 19045  2FBD  0B89               	decfsz	9,f
 19046  2FBE  2FBB               	goto	u4325
 19047  2FBF  0827               	movf	___wmul@multiplier^(0+128),w
 19048  2FC0  0428               	iorwf	(___wmul@multiplier+1)^(0+128),w
 19049  2FC1  1D03               	btfss	3,2
 19050  2FC2  2FAF               	goto	l5134
 19051  2FC3  082C               	movf	(___wmul@product+1)^(0+128),w
 19052  2FC4  00A8               	movwf	(?___wmul+1)^(0+128)
 19053  2FC5  082B               	movf	___wmul@product^(0+128),w
 19054  2FC6  00A7               	movwf	?___wmul^(0+128)
 19055  2FC7  0008               	return
 19056  2FC8                     __end_of___wmul:	
 19057                           
 19058                           	psect	text64
 19059  2242                     __ptext64:	
 19060 ;; *************** function ___lwmod *****************
 19061 ;; Defined at:
 19062 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 19063 ;; Parameters:    Size  Location     Type
 19064 ;;  divisor         2    8[BANK1 ] unsigned int 
 19065 ;;  dividend        2   10[BANK1 ] unsigned int 
 19066 ;; Auto vars:     Size  Location     Type
 19067 ;;  counter         1   13[BANK1 ] unsigned char 
 19068 ;; Return value:  Size  Location     Type
 19069 ;;                  2    8[BANK1 ] unsigned int 
 19070 ;; Registers used:
 19071 ;;		wreg, status,2, status,0
 19072 ;; Tracked objects:
 19073 ;;		On entry : 0/0
 19074 ;;		On exit  : 0/0
 19075 ;;		Unchanged: 0/0
 19076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19077 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19078 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19079 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19080 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19081 ;;Total ram usage:        6 bytes
 19082 ;; Hardware stack levels used:    1
 19083 ;; Hardware stack levels required when called:    5
 19084 ;; This function calls:
 19085 ;;		Nothing
 19086 ;; This function is called by:
 19087 ;;		_sprintf
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091                           
 19092                           ;psect for function ___lwmod
 19093  2242                     ___lwmod:	
 19094                           
 19095                           ;incstack = 0
 19096                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19097  2242  0021               	movlb	1	; select bank1
 19098  2243  0828               	movf	___lwmod@divisor^(0+128),w
 19099  2244  0429               	iorwf	(___lwmod@divisor+1)^(0+128),w
 19100  2245  1903               	btfsc	3,2
 19101  2246  2A6A               	goto	l5190
 19102  2247  01AD               	clrf	___lwmod@counter^(0+128)
 19103  2248  0AAD               	incf	___lwmod@counter^(0+128),f
 19104  2249                     l5180:	
 19105  2249  1BA9               	btfsc	(___lwmod@divisor+1)^(0+128),7
 19106  224A  2A55               	goto	l5182
 19107  224B  3001               	movlw	1
 19108  224C                     u4425:	
 19109  224C  35A8               	lslf	___lwmod@divisor^(0+128),f
 19110  224D  0DA9               	rlf	(___lwmod@divisor+1)^(0+128),f
 19111  224E  0B89               	decfsz	9,f
 19112  224F  2A4C               	goto	u4425
 19113  2250  3001               	movlw	1
 19114  2251  00AC               	movwf	??___lwmod^(0+128)
 19115  2252  082C               	movf	??___lwmod^(0+128),w
 19116  2253  07AD               	addwf	___lwmod@counter^(0+128),f
 19117  2254  2A49               	goto	l5180
 19118  2255                     l5182:	
 19119  2255  0829               	movf	(___lwmod@divisor+1)^(0+128),w
 19120  2256  022B               	subwf	(___lwmod@dividend+1)^(0+128),w
 19121  2257  1D03               	skipz
 19122  2258  2A5B               	goto	u4445
 19123  2259  0828               	movf	___lwmod@divisor^(0+128),w
 19124  225A  022A               	subwf	___lwmod@dividend^(0+128),w
 19125  225B                     u4445:	
 19126  225B  1C03               	skipc
 19127  225C  2A61               	goto	l5186
 19128  225D  0828               	movf	___lwmod@divisor^(0+128),w
 19129  225E  02AA               	subwf	___lwmod@dividend^(0+128),f
 19130  225F  0829               	movf	(___lwmod@divisor+1)^(0+128),w
 19131  2260  3BAB               	subwfb	(___lwmod@dividend+1)^(0+128),f
 19132  2261                     l5186:	
 19133  2261  3001               	movlw	1
 19134  2262                     u4455:	
 19135  2262  36A9               	lsrf	(___lwmod@divisor+1)^(0+128),f
 19136  2263  0CA8               	rrf	___lwmod@divisor^(0+128),f
 19137  2264  0B89               	decfsz	9,f
 19138  2265  2A62               	goto	u4455
 19139  2266  3001               	movlw	1
 19140  2267  02AD               	subwf	___lwmod@counter^(0+128),f
 19141  2268  1D03               	btfss	3,2
 19142  2269  2A55               	goto	l5182
 19143  226A                     l5190:	
 19144  226A  082B               	movf	(___lwmod@dividend+1)^(0+128),w
 19145  226B  00A9               	movwf	(?___lwmod+1)^(0+128)
 19146  226C  082A               	movf	___lwmod@dividend^(0+128),w
 19147  226D  00A8               	movwf	?___lwmod^(0+128)
 19148  226E  0008               	return
 19149  226F                     __end_of___lwmod:	
 19150                           
 19151                           	psect	text65
 19152  2332                     __ptext65:	
 19153 ;; *************** function ___lwdiv *****************
 19154 ;; Defined at:
 19155 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 19156 ;; Parameters:    Size  Location     Type
 19157 ;;  divisor         2    0[BANK1 ] unsigned int 
 19158 ;;  dividend        2    2[BANK1 ] unsigned int 
 19159 ;; Auto vars:     Size  Location     Type
 19160 ;;  quotient        2    5[BANK1 ] unsigned int 
 19161 ;;  counter         1    7[BANK1 ] unsigned char 
 19162 ;; Return value:  Size  Location     Type
 19163 ;;                  2    0[BANK1 ] unsigned int 
 19164 ;; Registers used:
 19165 ;;		wreg, status,2, status,0
 19166 ;; Tracked objects:
 19167 ;;		On entry : 0/0
 19168 ;;		On exit  : 0/0
 19169 ;;		Unchanged: 0/0
 19170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19171 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19172 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19173 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19174 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19175 ;;Total ram usage:        8 bytes
 19176 ;; Hardware stack levels used:    1
 19177 ;; Hardware stack levels required when called:    5
 19178 ;; This function calls:
 19179 ;;		Nothing
 19180 ;; This function is called by:
 19181 ;;		_sprintf
 19182 ;; This function uses a non-reentrant model
 19183 ;;
 19184                           
 19185                           
 19186                           ;psect for function ___lwdiv
 19187  2332                     ___lwdiv:	
 19188                           
 19189                           ;incstack = 0
 19190                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 19191  2332  0021               	movlb	1	; select bank1
 19192  2333  01A5               	clrf	___lwdiv@quotient^(0+128)
 19193  2334  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
 19194  2335  0820               	movf	___lwdiv@divisor^(0+128),w
 19195  2336  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 19196  2337  1903               	btfsc	3,2
 19197  2338  2B62               	goto	l5168
 19198  2339  01A7               	clrf	___lwdiv@counter^(0+128)
 19199  233A  0AA7               	incf	___lwdiv@counter^(0+128),f
 19200  233B                     l5156:	
 19201  233B  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
 19202  233C  2B47               	goto	l5158
 19203  233D  3001               	movlw	1
 19204  233E                     u4355:	
 19205  233E  35A0               	lslf	___lwdiv@divisor^(0+128),f
 19206  233F  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 19207  2340  0B89               	decfsz	9,f
 19208  2341  2B3E               	goto	u4355
 19209  2342  3001               	movlw	1
 19210  2343  00A4               	movwf	??___lwdiv^(0+128)
 19211  2344  0824               	movf	??___lwdiv^(0+128),w
 19212  2345  07A7               	addwf	___lwdiv@counter^(0+128),f
 19213  2346  2B3B               	goto	l5156
 19214  2347                     l5158:	
 19215  2347  3001               	movlw	1
 19216  2348                     u4375:	
 19217  2348  35A5               	lslf	___lwdiv@quotient^(0+128),f
 19218  2349  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
 19219  234A  0B89               	decfsz	9,f
 19220  234B  2B48               	goto	u4375
 19221  234C  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 19222  234D  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 19223  234E  1D03               	skipz
 19224  234F  2B52               	goto	u4385
 19225  2350  0820               	movf	___lwdiv@divisor^(0+128),w
 19226  2351  0222               	subwf	___lwdiv@dividend^(0+128),w
 19227  2352                     u4385:	
 19228  2352  1C03               	skipc
 19229  2353  2B59               	goto	l5164
 19230  2354  0820               	movf	___lwdiv@divisor^(0+128),w
 19231  2355  02A2               	subwf	___lwdiv@dividend^(0+128),f
 19232  2356  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 19233  2357  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 19234  2358  1425               	bsf	___lwdiv@quotient^(0+128),0
 19235  2359                     l5164:	
 19236  2359  3001               	movlw	1
 19237  235A                     u4395:	
 19238  235A  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 19239  235B  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 19240  235C  0B89               	decfsz	9,f
 19241  235D  2B5A               	goto	u4395
 19242  235E  3001               	movlw	1
 19243  235F  02A7               	subwf	___lwdiv@counter^(0+128),f
 19244  2360  1D03               	btfss	3,2
 19245  2361  2B47               	goto	l5158
 19246  2362                     l5168:	
 19247  2362  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
 19248  2363  00A1               	movwf	(?___lwdiv+1)^(0+128)
 19249  2364  0825               	movf	___lwdiv@quotient^(0+128),w
 19250  2365  00A0               	movwf	?___lwdiv^(0+128)
 19251  2366  0008               	return
 19252  2367                     __end_of___lwdiv:	
 19253                           
 19254                           	psect	text66
 19255  2E62                     __ptext66:	
 19256 ;; *************** function ___bmul *****************
 19257 ;; Defined at:
 19258 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;  multiplier      1    wreg     unsigned char 
 19261 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;  multiplier      1    3[BANK1 ] unsigned char 
 19264 ;;  product         1    2[BANK1 ] unsigned char 
 19265 ;; Return value:  Size  Location     Type
 19266 ;;                  1    wreg      unsigned char 
 19267 ;; Registers used:
 19268 ;;		wreg, status,2, status,0
 19269 ;; Tracked objects:
 19270 ;;		On entry : 0/0
 19271 ;;		On exit  : 0/0
 19272 ;;		Unchanged: 0/0
 19273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19274 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19275 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19276 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19277 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19278 ;;Total ram usage:        4 bytes
 19279 ;; Hardware stack levels used:    1
 19280 ;; Hardware stack levels required when called:    5
 19281 ;; This function calls:
 19282 ;;		Nothing
 19283 ;; This function is called by:
 19284 ;;		_MiMAC_ReceivedPacket
 19285 ;;		_high_isr
 19286 ;;		_Total_Connections
 19287 ;;		_P2PTasks
 19288 ;;		_MiApp_ProtocolInit
 19289 ;;		_MiApp_UnicastConnection
 19290 ;;		_DumpConnection
 19291 ;;		_AddConnection
 19292 ;;		_run_p2p_demo
 19293 ;;		_sprintf
 19294 ;;		_MiApp_RemoveConnection
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           
 19299                           ;psect for function ___bmul
 19300  2E62                     ___bmul:	
 19301                           
 19302                           ;incstack = 0
 19303                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 19304                           ;___bmul@multiplier stored from wreg
 19305  2E62  0021               	movlb	1	; select bank1
 19306  2E63  00A3               	movwf	___bmul@multiplier^(0+128)
 19307  2E64  01A2               	clrf	___bmul@product^(0+128)
 19308  2E65                     l4886:	
 19309  2E65  1C23               	btfss	___bmul@multiplier^(0+128),0
 19310  2E66  2E6B               	goto	l4890
 19311  2E67  0820               	movf	___bmul@multiplicand^(0+128),w
 19312  2E68  00A1               	movwf	??___bmul^(0+128)
 19313  2E69  0821               	movf	??___bmul^(0+128),w
 19314  2E6A  07A2               	addwf	___bmul@product^(0+128),f
 19315  2E6B                     l4890:	
 19316  2E6B  1003               	clrc
 19317  2E6C  0DA0               	rlf	___bmul@multiplicand^(0+128),f
 19318  2E6D  1003               	clrc
 19319  2E6E  0CA3               	rrf	___bmul@multiplier^(0+128),f
 19320  2E6F  0823               	movf	___bmul@multiplier^(0+128),w
 19321  2E70  1D03               	btfss	3,2
 19322  2E71  2E65               	goto	l4886
 19323  2E72  0822               	movf	___bmul@product^(0+128),w
 19324  2E73  0008               	return
 19325  2E74                     __end_of___bmul:	
 19326                           
 19327                           	psect	text67
 19328  260B                     __ptext67:	
 19329 ;; *************** function _LCD_Update *****************
 19330 ;; Defined at:
 19331 ;;		line 265 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19332 ;; Parameters:    Size  Location     Type
 19333 ;;		None
 19334 ;; Auto vars:     Size  Location     Type
 19335 ;;  i               1   20[BANK1 ] unsigned char 
 19336 ;; Return value:  Size  Location     Type
 19337 ;;                  1    wreg      void 
 19338 ;; Registers used:
 19339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19340 ;; Tracked objects:
 19341 ;;		On entry : 0/0
 19342 ;;		On exit  : 0/0
 19343 ;;		Unchanged: 0/0
 19344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19346 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19347 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19348 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19349 ;;Total ram usage:        2 bytes
 19350 ;; Hardware stack levels used:    1
 19351 ;; Hardware stack levels required when called:    8
 19352 ;; This function calls:
 19353 ;;		_LCD_d_write
 19354 ;;		_LCD_i_write
 19355 ;; This function is called by:
 19356 ;;		_LCDTRXCount
 19357 ;;		_LCDDisplay
 19358 ;;		_run_p2p_demo
 19359 ;; This function uses a non-reentrant model
 19360 ;;
 19361                           
 19362                           
 19363                           ;psect for function _LCD_Update
 19364  260B                     _LCD_Update:	
 19365                           
 19366                           ;lcd.c: 267: uint8_t i;
 19367                           ;lcd.c: 269: LCD_i_write(0x80);
 19368                           
 19369                           ;incstack = 0
 19370                           ; Regs used in _LCD_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19371  260B  3080               	movlw	128
 19372  260C  31A0  20E5  31A6   	fcall	_LCD_i_write
 19373                           
 19374                           ;lcd.c: 270: for(i = 0; i < 16; i++)
 19375  260F  0021               	movlb	1	; select bank1
 19376  2610  01B4               	clrf	LCD_Update@i^(0+128)
 19377  2611  3010               	movlw	16
 19378  2612  0234               	subwf	LCD_Update@i^(0+128),w
 19379  2613  1803               	btfsc	3,0
 19380  2614  2E32               	goto	l5392
 19381  2615                     l5382:	
 19382                           
 19383                           ;lcd.c: 271: {
 19384                           ;lcd.c: 272: if( LCDText[i] == 0 )
 19385  2615  0834               	movf	LCD_Update@i^(0+128),w
 19386  2616  3E20               	addlw	(low (_LCDText| (0+768)))& (0+255)
 19387  2617  0086               	movwf	6
 19388  2618  3003               	movlw	3	; select bank6/7
 19389  2619  0087               	movwf	7
 19390  261A  0801               	movf	1,w
 19391  261B  1D03               	btfss	3,2
 19392  261C  2E1F               	goto	l5386
 19393                           
 19394                           ;lcd.c: 273: {
 19395                           ;lcd.c: 274: LCD_d_write(' ');
 19396  261D  3020               	movlw	32
 19397  261E  2E26               	goto	L19
 19398  261F                     l5386:	
 19399                           ;lcd.c: 275: }
 19400                           
 19401                           
 19402                           ;lcd.c: 276: else
 19403                           ;lcd.c: 277: {
 19404                           ;lcd.c: 278: LCD_d_write(LCDText[i]);
 19405  261F  0021               	movlb	1	; select bank1
 19406  2620  0834               	movf	LCD_Update@i^(0+128),w
 19407  2621  3E20               	addlw	(low (_LCDText| (0+768)))& (0+255)
 19408  2622  0086               	movwf	6
 19409  2623  3003               	movlw	3	; select bank6/7
 19410  2624  0087               	movwf	7
 19411  2625  0801               	movf	1,w
 19412  2626                     L19:	
 19413  2626  3198  2000  31A6   	fcall	_LCD_d_write
 19414  2629  3001               	movlw	1
 19415  262A  0021               	movlb	1	; select bank1
 19416  262B  00B3               	movwf	??_LCD_Update^(0+128)
 19417  262C  0833               	movf	??_LCD_Update^(0+128),w
 19418  262D  07B4               	addwf	LCD_Update@i^(0+128),f
 19419  262E  3010               	movlw	16
 19420  262F  0234               	subwf	LCD_Update@i^(0+128),w
 19421  2630  1C03               	skipc
 19422  2631  2E15               	goto	l5382
 19423  2632                     l5392:	
 19424                           
 19425                           ;lcd.c: 279: }
 19426                           ;lcd.c: 280: }
 19427                           ;lcd.c: 281: LCD_i_write(0xC0);
 19428  2632  30C0               	movlw	192
 19429  2633  31A0  20E5  31A6   	fcall	_LCD_i_write
 19430                           
 19431                           ;lcd.c: 282: for(i = 16; i < 32; i++)
 19432  2636  3010               	movlw	16
 19433  2637  0021               	movlb	1	; select bank1
 19434  2638  00B3               	movwf	??_LCD_Update^(0+128)
 19435  2639  0833               	movf	??_LCD_Update^(0+128),w
 19436  263A  00B4               	movwf	LCD_Update@i^(0+128)
 19437  263B                     L21:	
 19438  263B  3020               	movlw	32
 19439  263C  0234               	subwf	LCD_Update@i^(0+128),w
 19440  263D  1803               	btfsc	3,0
 19441  263E  0008               	return
 19442                           
 19443                           ;lcd.c: 283: {
 19444                           ;lcd.c: 284: if( LCDText[i] == 0 )
 19445  263F  0834               	movf	LCD_Update@i^(0+128),w
 19446  2640  3E20               	addlw	(low (_LCDText| (0+768)))& (0+255)
 19447  2641  0086               	movwf	6
 19448  2642  3003               	movlw	3	; select bank6/7
 19449  2643  0087               	movwf	7
 19450  2644  0801               	movf	1,w
 19451  2645  1D03               	btfss	3,2
 19452  2646  2E49               	goto	l5404
 19453                           
 19454                           ;lcd.c: 285: {
 19455                           ;lcd.c: 286: LCD_d_write(' ');
 19456  2647  3020               	movlw	32
 19457  2648  2E50               	goto	L20
 19458  2649                     l5404:	
 19459                           ;lcd.c: 287: }
 19460                           
 19461                           
 19462                           ;lcd.c: 288: else
 19463                           ;lcd.c: 289: {
 19464                           ;lcd.c: 290: LCD_d_write(LCDText[i]);
 19465  2649  0021               	movlb	1	; select bank1
 19466  264A  0834               	movf	LCD_Update@i^(0+128),w
 19467  264B  3E20               	addlw	(low (_LCDText| (0+768)))& (0+255)
 19468  264C  0086               	movwf	6
 19469  264D  3003               	movlw	3	; select bank6/7
 19470  264E  0087               	movwf	7
 19471  264F  0801               	movf	1,w
 19472  2650                     L20:	
 19473  2650  3198  2000  31A6   	fcall	_LCD_d_write
 19474  2653  3001               	movlw	1
 19475  2654  0021               	movlb	1	; select bank1
 19476  2655  00B3               	movwf	??_LCD_Update^(0+128)
 19477  2656  0833               	movf	??_LCD_Update^(0+128),w
 19478  2657  07B4               	addwf	LCD_Update@i^(0+128),f
 19479  2658  2E3B               	goto	L21
 19480  2659                     __end_of_LCD_Update:	
 19481                           
 19482                           	psect	text68
 19483  20E5                     __ptext68:	
 19484 ;; *************** function _LCD_i_write *****************
 19485 ;; Defined at:
 19486 ;;		line 129 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19487 ;; Parameters:    Size  Location     Type
 19488 ;;  v               1    wreg     unsigned char 
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;  v               1   18[BANK1 ] unsigned char 
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  1    wreg      void 
 19493 ;; Registers used:
 19494 ;;		wreg, status,2, status,0, pclath, cstack
 19495 ;; Tracked objects:
 19496 ;;		On entry : 0/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19501 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19503 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19504 ;;Total ram usage:        1 bytes
 19505 ;; Hardware stack levels used:    1
 19506 ;; Hardware stack levels required when called:    7
 19507 ;; This function calls:
 19508 ;;		_DELAY_ms
 19509 ;;		_LCDWritePortA
 19510 ;;		_LCDWritePortB
 19511 ;; This function is called by:
 19512 ;;		_LCD_Update
 19513 ;; This function uses a non-reentrant model
 19514 ;;
 19515                           
 19516                           
 19517                           ;psect for function _LCD_i_write
 19518  20E5                     _LCD_i_write:	
 19519                           
 19520                           ;incstack = 0
 19521                           ; Regs used in _LCD_i_write: [wreg+status,2+status,0+pclath+cstack]
 19522                           ;LCD_i_write@v stored from wreg
 19523  20E5  0021               	movlb	1	; select bank1
 19524  20E6  00B2               	movwf	LCD_i_write@v^(0+128)
 19525                           
 19526                           ;lcd.c: 131: LCDWritePortA(0);
 19527  20E7  3000               	movlw	0
 19528  20E8  31A0  2008  31A0   	fcall	_LCDWritePortA
 19529                           
 19530                           ;lcd.c: 132: DELAY_ms(1);
 19531  20EB  3001               	movlw	1
 19532  20EC  0021               	movlb	1	; select bank1
 19533  20ED  00AC               	movwf	DELAY_ms@ms^(0+128)
 19534  20EE  3000               	movlw	0
 19535  20EF  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 19536  20F0  31A5  2572  31A0   	fcall	_DELAY_ms
 19537                           
 19538                           ;lcd.c: 133: LCDWritePortB(v);
 19539  20F3  0021               	movlb	1	; select bank1
 19540  20F4  0832               	movf	LCD_i_write@v^(0+128),w
 19541  20F5  31A0  2026  31A0   	fcall	_LCDWritePortB
 19542                           
 19543                           ;lcd.c: 138: __nop();
 19544  20F8  0000               	nop
 19545                           
 19546                           ;lcd.c: 139: __nop();
 19547  20F9  0000               	nop
 19548                           
 19549                           ;lcd.c: 140: __nop();
 19550  20FA  0000               	nop
 19551                           
 19552                           ;lcd.c: 141: __nop();
 19553  20FB  0000               	nop
 19554                           
 19555                           ;lcd.c: 142: LCDWritePortA(0x40);
 19556  20FC  3040               	movlw	64
 19557  20FD  31A0  2008  31A0   	fcall	_LCDWritePortA
 19558                           
 19559                           ;lcd.c: 149: __nop();
 19560  2100  0000               	nop
 19561                           
 19562                           ;lcd.c: 150: __nop();
 19563  2101  0000               	nop
 19564                           
 19565                           ;lcd.c: 151: __nop();
 19566  2102  0000               	nop
 19567                           
 19568                           ;lcd.c: 152: __nop();
 19569  2103  0000               	nop
 19570                           
 19571                           ;lcd.c: 153: __nop();
 19572  2104  0000               	nop
 19573                           
 19574                           ;lcd.c: 154: __nop();
 19575  2105  0000               	nop
 19576                           
 19577                           ;lcd.c: 155: LCDWritePortA(0x00);
 19578  2106  3000               	movlw	0
 19579  2107  31A0  2008         	fcall	_LCDWritePortA
 19580  2109  0008               	return
 19581  210A                     __end_of_LCD_i_write:	
 19582                           ;lcd.c: 156: return;
 19583                           
 19584                           
 19585                           	psect	text69
 19586  1800                     __ptext69:	
 19587 ;; *************** function _LCD_d_write *****************
 19588 ;; Defined at:
 19589 ;;		line 159 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19590 ;; Parameters:    Size  Location     Type
 19591 ;;  v               1    wreg     unsigned char 
 19592 ;; Auto vars:     Size  Location     Type
 19593 ;;  v               1   18[BANK1 ] unsigned char 
 19594 ;; Return value:  Size  Location     Type
 19595 ;;                  1    wreg      void 
 19596 ;; Registers used:
 19597 ;;		wreg, status,2, status,0, pclath, cstack
 19598 ;; Tracked objects:
 19599 ;;		On entry : 0/0
 19600 ;;		On exit  : 0/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19604 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19606 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19607 ;;Total ram usage:        1 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:    7
 19610 ;; This function calls:
 19611 ;;		_DELAY_ms
 19612 ;;		_LCDWritePortA
 19613 ;;		_LCDWritePortB
 19614 ;; This function is called by:
 19615 ;;		_LCD_Update
 19616 ;; This function uses a non-reentrant model
 19617 ;;
 19618                           
 19619                           
 19620                           ;psect for function _LCD_d_write
 19621  1800                     _LCD_d_write:	
 19622                           
 19623                           ;incstack = 0
 19624                           ; Regs used in _LCD_d_write: [wreg+status,2+status,0+pclath+cstack]
 19625                           ;LCD_d_write@v stored from wreg
 19626  1800  0021               	movlb	1	; select bank1
 19627  1801  00B2               	movwf	LCD_d_write@v^(0+128)
 19628                           
 19629                           ;lcd.c: 161: DELAY_ms(1);
 19630  1802  3001               	movlw	1
 19631  1803  00AC               	movwf	DELAY_ms@ms^(0+128)
 19632  1804  3000               	movlw	0
 19633  1805  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 19634  1806  31A5  2572  3198   	fcall	_DELAY_ms
 19635                           
 19636                           ;lcd.c: 162: LCDWritePortA(0x80);
 19637  1809  3080               	movlw	128
 19638  180A  31A0  2008  3198   	fcall	_LCDWritePortA
 19639                           
 19640                           ;lcd.c: 163: LCDWritePortB(v);
 19641  180D  0021               	movlb	1	; select bank1
 19642  180E  0832               	movf	LCD_d_write@v^(0+128),w
 19643  180F  31A0  2026  3198   	fcall	_LCDWritePortB
 19644                           
 19645                           ;lcd.c: 168: __nop();
 19646  1812  0000               	nop
 19647                           
 19648                           ;lcd.c: 169: __nop();
 19649  1813  0000               	nop
 19650                           
 19651                           ;lcd.c: 170: __nop();
 19652  1814  0000               	nop
 19653                           
 19654                           ;lcd.c: 171: __nop();
 19655  1815  0000               	nop
 19656                           
 19657                           ;lcd.c: 172: LCDWritePortA(0xC0);
 19658  1816  30C0               	movlw	192
 19659  1817  31A0  2008  3198   	fcall	_LCDWritePortA
 19660                           
 19661                           ;lcd.c: 179: __nop();
 19662  181A  0000               	nop
 19663                           
 19664                           ;lcd.c: 180: __nop();
 19665  181B  0000               	nop
 19666                           
 19667                           ;lcd.c: 181: __nop();
 19668  181C  0000               	nop
 19669                           
 19670                           ;lcd.c: 182: __nop();
 19671  181D  0000               	nop
 19672                           
 19673                           ;lcd.c: 183: __nop();
 19674  181E  0000               	nop
 19675                           
 19676                           ;lcd.c: 184: __nop();
 19677  181F  0000               	nop
 19678                           
 19679                           ;lcd.c: 186: LCDWritePortA(0);
 19680  1820  3000               	movlw	0
 19681  1821  31A0  2008         	fcall	_LCDWritePortA
 19682  1823  0008               	return
 19683  1824                     __end_of_LCD_d_write:	
 19684                           
 19685                           	psect	text70
 19686  2F0C                     __ptext70:	
 19687 ;; *************** function _LCD_Erase *****************
 19688 ;; Defined at:
 19689 ;;		line 311 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19690 ;; Parameters:    Size  Location     Type
 19691 ;;		None
 19692 ;; Auto vars:     Size  Location     Type
 19693 ;;		None
 19694 ;; Return value:  Size  Location     Type
 19695 ;;                  1    wreg      void 
 19696 ;; Registers used:
 19697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19698 ;; Tracked objects:
 19699 ;;		On entry : 0/0
 19700 ;;		On exit  : 0/0
 19701 ;;		Unchanged: 0/0
 19702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19707 ;;Total ram usage:        0 bytes
 19708 ;; Hardware stack levels used:    1
 19709 ;; Hardware stack levels required when called:    8
 19710 ;; This function calls:
 19711 ;;		_DELAY_ms
 19712 ;;		_LCDInitWrite
 19713 ;;		_memset
 19714 ;; This function is called by:
 19715 ;;		_LCDTRXCount
 19716 ;;		_LCDDisplay
 19717 ;;		_run_p2p_demo
 19718 ;; This function uses a non-reentrant model
 19719 ;;
 19720                           
 19721                           
 19722                           ;psect for function _LCD_Erase
 19723  2F0C                     _LCD_Erase:	
 19724                           
 19725                           ;lcd.c: 314: LCDInitWrite(0x01);
 19726                           
 19727                           ;incstack = 0
 19728                           ; Regs used in _LCD_Erase: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19729  2F0C  3001               	movlw	1
 19730  2F0D  31A0  2044  31AF   	fcall	_LCDInitWrite
 19731                           
 19732                           ;lcd.c: 315: DELAY_ms(2);
 19733  2F10  3002               	movlw	2
 19734  2F11  0021               	movlb	1	; select bank1
 19735  2F12  00AC               	movwf	DELAY_ms@ms^(0+128)
 19736  2F13  3000               	movlw	0
 19737  2F14  00AD               	movwf	(DELAY_ms@ms^(0+128)+1)
 19738  2F15  31A5  2572  31AF   	fcall	_DELAY_ms
 19739                           
 19740                           ;lcd.c: 318: memset(LCDText, ' ', 32);
 19741  2F18  3020               	movlw	32
 19742  2F19  0021               	movlb	1	; select bank1
 19743  2F1A  00A0               	movwf	memset@c^(0+128)
 19744  2F1B  3000               	movlw	0
 19745  2F1C  00A1               	movwf	(memset@c^(0+128)+1)
 19746  2F1D  3020               	movlw	32
 19747  2F1E  00A2               	movwf	memset@n^(0+128)
 19748  2F1F  3000               	movlw	0
 19749  2F20  00A3               	movwf	(memset@n^(0+128)+1)
 19750  2F21  3020               	movlw	(low (_LCDText| (0+768)))& (0+255)
 19751  2F22  31AF  2790         	fcall	_memset
 19752  2F24  0008               	return
 19753  2F25                     __end_of_LCD_Erase:	
 19754                           
 19755                           	psect	text71
 19756  2F90                     __ptext71:	
 19757 ;; *************** function _memset *****************
 19758 ;; Defined at:
 19759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 19760 ;; Parameters:    Size  Location     Type
 19761 ;;  p1              1    wreg     PTR void 
 19762 ;;		 -> LCDText(33), 
 19763 ;;  c               2    0[BANK1 ] int 
 19764 ;;  n               2    2[BANK1 ] unsigned int 
 19765 ;; Auto vars:     Size  Location     Type
 19766 ;;  p1              1    5[BANK1 ] PTR void 
 19767 ;;		 -> LCDText(33), 
 19768 ;;  p               1    6[BANK1 ] PTR unsigned char 
 19769 ;;		 -> LCDText(33), 
 19770 ;; Return value:  Size  Location     Type
 19771 ;;                  1    wreg      PTR void 
 19772 ;; Registers used:
 19773 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19774 ;; Tracked objects:
 19775 ;;		On entry : 0/0
 19776 ;;		On exit  : 0/0
 19777 ;;		Unchanged: 0/0
 19778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19779 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19780 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19781 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19782 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 19783 ;;Total ram usage:        7 bytes
 19784 ;; Hardware stack levels used:    1
 19785 ;; Hardware stack levels required when called:    5
 19786 ;; This function calls:
 19787 ;;		Nothing
 19788 ;; This function is called by:
 19789 ;;		_LCD_Erase
 19790 ;; This function uses a non-reentrant model
 19791 ;;
 19792                           
 19793                           
 19794                           ;psect for function _memset
 19795  2F90                     _memset:	
 19796                           
 19797                           ;incstack = 0
 19798                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 19799                           ;memset@p1 stored from wreg
 19800  2F90  0021               	movlb	1	; select bank1
 19801  2F91  00A5               	movwf	memset@p1^(0+128)
 19802  2F92  0825               	movf	memset@p1^(0+128),w
 19803  2F93  00A4               	movwf	??_memset^(0+128)
 19804  2F94  0824               	movf	??_memset^(0+128),w
 19805  2F95  00A6               	movwf	memset@p^(0+128)
 19806  2F96                     l5118:	
 19807  2F96  3001               	movlw	1
 19808  2F97  02A2               	subwf	memset@n^(0+128),f
 19809  2F98  3000               	movlw	0
 19810  2F99  3BA3               	subwfb	(memset@n+1)^(0+128),f
 19811  2F9A  0A22               	incf	memset@n^(0+128),w
 19812  2F9B  1903               	btfsc	3,2
 19813  2F9C  0A23               	incf	(memset@n+1)^(0+128),w
 19814  2F9D  1903               	btfsc	3,2
 19815  2F9E  0008               	return
 19816  2F9F  0820               	movf	memset@c^(0+128),w
 19817  2FA0  00A4               	movwf	??_memset^(0+128)
 19818  2FA1  0826               	movf	memset@p^(0+128),w
 19819  2FA2  0086               	movwf	6
 19820  2FA3  3003               	movlw	3	; select bank6/7
 19821  2FA4  0087               	movwf	7
 19822  2FA5  0824               	movf	??_memset^(0+128),w
 19823  2FA6  0081               	movwf	1
 19824  2FA7  3001               	movlw	1
 19825  2FA8  00A4               	movwf	??_memset^(0+128)
 19826  2FA9  0824               	movf	??_memset^(0+128),w
 19827  2FAA  07A6               	addwf	memset@p^(0+128),f
 19828  2FAB  2F96               	goto	l5118
 19829  2FAC                     __end_of_memset:	
 19830                           ;	Return value of _memset is never used
 19831                           
 19832                           
 19833                           	psect	text72
 19834  2044                     __ptext72:	
 19835 ;; *************** function _LCDInitWrite *****************
 19836 ;; Defined at:
 19837 ;;		line 96 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;  v               1    wreg     unsigned char 
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;  v               1    5[BANK1 ] unsigned char 
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  1    wreg      void 
 19844 ;; Registers used:
 19845 ;;		wreg, status,2, status,0, pclath, cstack
 19846 ;; Tracked objects:
 19847 ;;		On entry : 0/0
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19852 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19854 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19855 ;;Total ram usage:        1 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:    7
 19858 ;; This function calls:
 19859 ;;		_LCDWritePortA
 19860 ;;		_LCDWritePortB
 19861 ;; This function is called by:
 19862 ;;		_LCD_Initialize
 19863 ;;		_LCD_Erase
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           
 19868                           ;psect for function _LCDInitWrite
 19869  2044                     _LCDInitWrite:	
 19870                           
 19871                           ;incstack = 0
 19872                           ; Regs used in _LCDInitWrite: [wreg+status,2+status,0+pclath+cstack]
 19873                           ;LCDInitWrite@v stored from wreg
 19874  2044  0021               	movlb	1	; select bank1
 19875  2045  00A5               	movwf	LCDInitWrite@v^(0+128)
 19876                           
 19877                           ;lcd.c: 98: LCDWritePortA(0);
 19878  2046  3000               	movlw	0
 19879  2047  31A0  2008  31A0   	fcall	_LCDWritePortA
 19880                           
 19881                           ;lcd.c: 99: LCDWritePortB(v);
 19882  204A  0021               	movlb	1	; select bank1
 19883  204B  0825               	movf	LCDInitWrite@v^(0+128),w
 19884  204C  31A0  2026  31A0   	fcall	_LCDWritePortB
 19885                           
 19886                           ;lcd.c: 103: __nop();
 19887  204F  0000               	nop
 19888                           
 19889                           ;lcd.c: 104: __nop();
 19890  2050  0000               	nop
 19891                           
 19892                           ;lcd.c: 105: __nop();
 19893  2051  0000               	nop
 19894                           
 19895                           ;lcd.c: 108: LCDWritePortA(0x40);
 19896  2052  3040               	movlw	64
 19897  2053  31A0  2008  31A0   	fcall	_LCDWritePortA
 19898                           
 19899                           ;lcd.c: 118: __nop();
 19900  2056  0000               	nop
 19901                           
 19902                           ;lcd.c: 119: __nop();
 19903  2057  0000               	nop
 19904                           
 19905                           ;lcd.c: 120: __nop();
 19906  2058  0000               	nop
 19907                           
 19908                           ;lcd.c: 121: __nop();
 19909  2059  0000               	nop
 19910                           
 19911                           ;lcd.c: 122: __nop();
 19912  205A  0000               	nop
 19913                           
 19914                           ;lcd.c: 123: __nop();
 19915  205B  0000               	nop
 19916                           
 19917                           ;lcd.c: 124: __nop();
 19918  205C  0000               	nop
 19919                           
 19920                           ;lcd.c: 125: __nop();
 19921  205D  0000               	nop
 19922                           
 19923                           ;lcd.c: 126: LCDWritePortA(0);
 19924  205E  3000               	movlw	0
 19925  205F  31A0  2008         	fcall	_LCDWritePortA
 19926  2061  0008               	return
 19927  2062                     __end_of_LCDInitWrite:	
 19928                           
 19929                           	psect	text73
 19930  2026                     __ptext73:	
 19931 ;; *************** function _LCDWritePortB *****************
 19932 ;; Defined at:
 19933 ;;		line 84 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 19934 ;; Parameters:    Size  Location     Type
 19935 ;;  v               1    wreg     unsigned char 
 19936 ;; Auto vars:     Size  Location     Type
 19937 ;;  v               1    3[BANK1 ] unsigned char 
 19938 ;;  preRFIE         1    4[BANK1 ] unsigned char 
 19939 ;; Return value:  Size  Location     Type
 19940 ;;                  1    wreg      void 
 19941 ;; Registers used:
 19942 ;;		wreg, status,2, status,0, pclath, cstack
 19943 ;; Tracked objects:
 19944 ;;		On entry : 0/0
 19945 ;;		On exit  : 0/0
 19946 ;;		Unchanged: 0/0
 19947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19949 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19951 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 19952 ;;Total ram usage:        2 bytes
 19953 ;; Hardware stack levels used:    1
 19954 ;; Hardware stack levels required when called:    6
 19955 ;; This function calls:
 19956 ;;		_SPIPut
 19957 ;; This function is called by:
 19958 ;;		_LCDInitWrite
 19959 ;;		_LCD_i_write
 19960 ;;		_LCD_d_write
 19961 ;; This function uses a non-reentrant model
 19962 ;;
 19963                           
 19964                           
 19965                           ;psect for function _LCDWritePortB
 19966  2026                     _LCDWritePortB:	
 19967                           
 19968                           ;incstack = 0
 19969                           ; Regs used in _LCDWritePortB: [wreg+status,2+status,0+pclath+cstack]
 19970                           ;LCDWritePortB@v stored from wreg
 19971  2026  0021               	movlb	1	; select bank1
 19972  2027  00A3               	movwf	LCDWritePortB@v^(0+128)
 19973                           
 19974                           ;lcd.c: 86: uint8_t preRFIE = INTCONbits.IOCIE;
 19975  2028  3000               	movlw	0
 19976  2029  198B               	btfsc	11,3	;volatile
 19977  202A  3001               	movlw	1
 19978  202B  00A4               	movwf	LCDWritePortB@preRFIE^(0+128)
 19979                           
 19980                           ;lcd.c: 87: INTCONbits.IOCIE = 0;
 19981  202C  118B               	bcf	11,3	;volatile
 19982                           
 19983                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
 19984  202D  0022               	movlb	2	; select bank2
 19985  202E  110C               	bcf	12,2	;volatile
 19986                           
 19987                           ;lcd.c: 89: SPIPut(0x40);
 19988  202F  3040               	movlw	64
 19989  2030  31AE  26DC  31A0   	fcall	_SPIPut
 19990                           
 19991                           ;lcd.c: 90: SPIPut(0x13);
 19992  2033  3013               	movlw	19
 19993  2034  31AE  26DC  31A0   	fcall	_SPIPut
 19994                           
 19995                           ;lcd.c: 91: SPIPut(v);
 19996  2037  0021               	movlb	1	; select bank1
 19997  2038  0823               	movf	LCDWritePortB@v^(0+128),w
 19998  2039  31AE  26DC         	fcall	_SPIPut
 19999                           
 20000                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
 20001  203B  0022               	movlb	2	; select bank2
 20002  203C  150C               	bsf	12,2	;volatile
 20003                           
 20004                           ;lcd.c: 93: INTCONbits.IOCIE = preRFIE;
 20005  203D  0021               	movlb	1	; select bank1
 20006  203E  0C24               	rrf	LCDWritePortB@preRFIE^(0+128),w
 20007  203F  1C03               	skipc
 20008  2040  118B               	bcf	11,3	;volatile
 20009  2041  1803               	skipnc
 20010  2042  158B               	bsf	11,3	;volatile
 20011  2043  0008               	return
 20012  2044                     __end_of_LCDWritePortB:	
 20013                           
 20014                           	psect	text74
 20015  2008                     __ptext74:	
 20016 ;; *************** function _LCDWritePortA *****************
 20017 ;; Defined at:
 20018 ;;		line 72 in file "../src/system_config/pic18exp_pic16f1947_89xa/lcd.c"
 20019 ;; Parameters:    Size  Location     Type
 20020 ;;  v               1    wreg     unsigned char 
 20021 ;; Auto vars:     Size  Location     Type
 20022 ;;  v               1    3[BANK1 ] unsigned char 
 20023 ;;  preRFIE         1    4[BANK1 ] unsigned char 
 20024 ;; Return value:  Size  Location     Type
 20025 ;;                  1    wreg      void 
 20026 ;; Registers used:
 20027 ;;		wreg, status,2, status,0, pclath, cstack
 20028 ;; Tracked objects:
 20029 ;;		On entry : 0/0
 20030 ;;		On exit  : 0/0
 20031 ;;		Unchanged: 0/0
 20032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20034 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20036 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20037 ;;Total ram usage:        2 bytes
 20038 ;; Hardware stack levels used:    1
 20039 ;; Hardware stack levels required when called:    6
 20040 ;; This function calls:
 20041 ;;		_SPIPut
 20042 ;; This function is called by:
 20043 ;;		_LCDInitWrite
 20044 ;;		_LCD_i_write
 20045 ;;		_LCD_d_write
 20046 ;;		_LCD_Initialize
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           
 20051                           ;psect for function _LCDWritePortA
 20052  2008                     _LCDWritePortA:	
 20053                           
 20054                           ;incstack = 0
 20055                           ; Regs used in _LCDWritePortA: [wreg+status,2+status,0+pclath+cstack]
 20056                           ;LCDWritePortA@v stored from wreg
 20057  2008  0021               	movlb	1	; select bank1
 20058  2009  00A3               	movwf	LCDWritePortA@v^(0+128)
 20059                           
 20060                           ;lcd.c: 74: uint8_t preRFIE = INTCONbits.IOCIE;
 20061  200A  3000               	movlw	0
 20062  200B  198B               	btfsc	11,3	;volatile
 20063  200C  3001               	movlw	1
 20064  200D  00A4               	movwf	LCDWritePortA@preRFIE^(0+128)
 20065                           
 20066                           ;lcd.c: 75: INTCONbits.IOCIE = 0;
 20067  200E  118B               	bcf	11,3	;volatile
 20068                           
 20069                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
 20070  200F  0022               	movlb	2	; select bank2
 20071  2010  110C               	bcf	12,2	;volatile
 20072                           
 20073                           ;lcd.c: 77: SPIPut(0x40);
 20074  2011  3040               	movlw	64
 20075  2012  31AE  26DC  31A0   	fcall	_SPIPut
 20076                           
 20077                           ;lcd.c: 78: SPIPut(0x12);
 20078  2015  3012               	movlw	18
 20079  2016  31AE  26DC  31A0   	fcall	_SPIPut
 20080                           
 20081                           ;lcd.c: 79: SPIPut(v);
 20082  2019  0021               	movlb	1	; select bank1
 20083  201A  0823               	movf	LCDWritePortA@v^(0+128),w
 20084  201B  31AE  26DC         	fcall	_SPIPut
 20085                           
 20086                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
 20087  201D  0022               	movlb	2	; select bank2
 20088  201E  150C               	bsf	12,2	;volatile
 20089                           
 20090                           ;lcd.c: 81: INTCONbits.IOCIE = preRFIE;
 20091  201F  0021               	movlb	1	; select bank1
 20092  2020  0C24               	rrf	LCDWritePortA@preRFIE^(0+128),w
 20093  2021  1C03               	skipc
 20094  2022  118B               	bcf	11,3	;volatile
 20095  2023  1803               	skipnc
 20096  2024  158B               	bsf	11,3	;volatile
 20097  2025  0008               	return
 20098  2026                     __end_of_LCDWritePortA:	
 20099                           
 20100                           	psect	text75
 20101  2EDC                     __ptext75:	
 20102 ;; *************** function _SPIPut *****************
 20103 ;; Defined at:
 20104 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;  v               1    wreg     unsigned char 
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;  v               1    2[BANK1 ] unsigned char 
 20109 ;;  i               1    1[BANK1 ] unsigned char 
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1    wreg      void 
 20112 ;; Registers used:
 20113 ;;		wreg
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/0
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20120 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20121 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20122 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20123 ;;Total ram usage:        3 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:    5
 20126 ;; This function calls:
 20127 ;;		Nothing
 20128 ;; This function is called by:
 20129 ;;		_RegisterSet
 20130 ;;		_RegisterRead
 20131 ;;		_WriteFIFO
 20132 ;;		_NVMRead
 20133 ;;		_NVMWrite
 20134 ;;		_EEPROM_Read
 20135 ;;		_LCDInitPortA
 20136 ;;		_LCDInitPortB
 20137 ;;		_LCDWritePortA
 20138 ;;		_LCDWritePortB
 20139 ;;		_SPIGet
 20140 ;; This function uses a non-reentrant model
 20141 ;;
 20142                           
 20143                           
 20144                           ;psect for function _SPIPut
 20145  2EDC                     _SPIPut:	
 20146                           
 20147                           ;incstack = 0
 20148                           ; Regs used in _SPIPut: [wreg]
 20149                           ;SPIPut@v stored from wreg
 20150  2EDC  0021               	movlb	1	; select bank1
 20151  2EDD  00A2               	movwf	SPIPut@v^(0+128)
 20152                           
 20153                           ;spi.c: 47: uint8_t i;
 20154                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 20155  2EDE  0020               	movlb	0	; select bank0
 20156  2EDF  1191               	bcf	17,3	;volatile
 20157                           
 20158                           ;spi.c: 64: i = SSP1BUF;
 20159  2EE0  0024               	movlb	4	; select bank4
 20160  2EE1  0811               	movf	17,w	;volatile
 20161  2EE2  0021               	movlb	1	; select bank1
 20162  2EE3  00A0               	movwf	??_SPIPut^(0+128)
 20163  2EE4  0820               	movf	??_SPIPut^(0+128),w
 20164  2EE5  00A1               	movwf	SPIPut@i^(0+128)
 20165  2EE6                     l4626:	
 20166                           ;spi.c: 66: do
 20167                           
 20168                           
 20169                           ;spi.c: 67: {
 20170                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 20171  2EE6  0024               	movlb	4	; select bank4
 20172  2EE7  1395               	bcf	21,7	;volatile
 20173                           
 20174                           ;spi.c: 69: SSP1BUF = v;
 20175  2EE8  0021               	movlb	1	; select bank1
 20176  2EE9  0822               	movf	SPIPut@v^(0+128),w
 20177  2EEA  0024               	movlb	4	; select bank4
 20178  2EEB  0091               	movwf	17	;volatile
 20179                           
 20180                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 20181  2EEC  1B95               	btfsc	21,7	;volatile
 20182  2EED  2EE6               	goto	l4626
 20183  2EEE                     l720:	
 20184                           ;spi.c: 72: while( PIR1bits.SSP1IF == 0 );
 20185                           
 20186  2EEE  0020               	movlb	0	; select bank0
 20187  2EEF  1D91               	btfss	17,3	;volatile
 20188  2EF0  2EEE               	goto	l720
 20189                           
 20190                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 20191  2EF1  1191               	bcf	17,3	;volatile
 20192  2EF2  0008               	return
 20193  2EF3                     __end_of_SPIPut:	
 20194                           
 20195                           	psect	text76
 20196  2572                     __ptext76:	
 20197 ;; *************** function _DELAY_ms *****************
 20198 ;; Defined at:
 20199 ;;		line 108 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;  ms              2   12[BANK1 ] unsigned int 
 20202 ;; Auto vars:     Size  Location     Type
 20203 ;;  cyclesRequir    4   14[BANK1 ] long 
 20204 ;; Return value:  Size  Location     Type
 20205 ;;                  1    wreg      void 
 20206 ;; Registers used:
 20207 ;;		wreg, status,2, status,0, pclath, cstack
 20208 ;; Tracked objects:
 20209 ;;		On entry : 0/0
 20210 ;;		On exit  : 0/0
 20211 ;;		Unchanged: 0/0
 20212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20213 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20214 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20216 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20217 ;;Total ram usage:        6 bytes
 20218 ;; Hardware stack levels used:    1
 20219 ;; Hardware stack levels required when called:    6
 20220 ;; This function calls:
 20221 ;;		___lmul
 20222 ;; This function is called by:
 20223 ;;		_MiMAC_Init
 20224 ;;		_LCD_i_write
 20225 ;;		_LCD_d_write
 20226 ;;		_LCD_Initialize
 20227 ;;		_LCD_Erase
 20228 ;;		_LCDTRXCount
 20229 ;;		_LCDDisplay
 20230 ;;		_Process_RxMessage
 20231 ;;		_run_p2p_demo
 20232 ;;		_freezer_feature
 20233 ;; This function uses a non-reentrant model
 20234 ;;
 20235                           
 20236                           
 20237                           ;psect for function _DELAY_ms
 20238  2572                     _DELAY_ms:	
 20239                           
 20240                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay;
 20241                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
 20242                           
 20243                           ;incstack = 0
 20244                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
 20245  2572  0021               	movlb	1	; select bank1
 20246  2573  082C               	movf	DELAY_ms@ms^(0+128),w
 20247  2574  00A0               	movwf	___lmul@multiplier^(0+128)
 20248  2575  082D               	movf	(DELAY_ms@ms+1)^(0+128),w
 20249  2576  00A1               	movwf	(___lmul@multiplier^(0+128)+1)
 20250  2577  01A2               	clrf	(___lmul@multiplier^(0+128)+2)
 20251  2578  01A3               	clrf	(___lmul@multiplier^(0+128)+3)
 20252  2579  3000               	movlw	0
 20253  257A  00A7               	movwf	(___lmul@multiplicand+3)^(0+128)
 20254  257B  3000               	movlw	0
 20255  257C  00A6               	movwf	(___lmul@multiplicand+2)^(0+128)
 20256  257D  3009               	movlw	9
 20257  257E  00A5               	movwf	(___lmul@multiplicand+1)^(0+128)
 20258  257F  30C4               	movlw	196
 20259  2580  00A4               	movwf	___lmul@multiplicand^(0+128)
 20260  2581  31A2  229E  31A5   	fcall	___lmul
 20261  2584  0021               	movlb	1	; select bank1
 20262  2585  0823               	movf	(?___lmul+3)^(0+128),w
 20263  2586  00B1               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128)
 20264  2587  0822               	movf	(?___lmul+2)^(0+128),w
 20265  2588  00B0               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128)
 20266  2589  0821               	movf	(?___lmul+1)^(0+128),w
 20267  258A  00AF               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128)
 20268  258B  0820               	movf	?___lmul^(0+128),w
 20269  258C  00AE               	movwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128)
 20270                           
 20271                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 20272  258D  3056               	movlw	86
 20273  258E  07AE               	addwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),f
 20274  258F  30FF               	movlw	255
 20275  2590  3DAF               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),f
 20276  2591  30FF               	movlw	255
 20277  2592  3DB0               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),f
 20278  2593  30FF               	movlw	255
 20279  2594  3DB1               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),f
 20280                           
 20281                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 20282  2595  1BB1               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),7
 20283  2596  0008               	return
 20284  2597  0831               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),w
 20285  2598  1D03               	btfss	3,2
 20286  2599  2DA4               	goto	l4848
 20287  259A  0830               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),w
 20288  259B  1D03               	btfss	3,2
 20289  259C  2DA4               	goto	l4848
 20290  259D  082F               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),w
 20291  259E  1D03               	btfss	3,2
 20292  259F  2DA4               	goto	l4848
 20293  25A0  30C4               	movlw	196
 20294  25A1  022E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),w
 20295  25A2  1C03               	btfss	3,0
 20296  25A3  0008               	return
 20297  25A4                     l4848:	
 20298  25A4  1BB1               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),7
 20299  25A5  0008               	return
 20300  25A6  0831               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),w
 20301  25A7  1D03               	btfss	3,2
 20302  25A8  2DB3               	goto	l620
 20303  25A9  0830               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),w
 20304  25AA  1D03               	btfss	3,2
 20305  25AB  2DB3               	goto	l620
 20306  25AC  082F               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),w
 20307  25AD  1D03               	btfss	3,2
 20308  25AE  2DB3               	goto	l620
 20309  25AF  3001               	movlw	1
 20310  25B0  022E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),w
 20311  25B1  1C03               	btfss	3,0
 20312  25B2  0008               	return
 20313  25B3                     l620:	
 20314                           ;delay.c: 125: else
 20315                           ;delay.c: 126: {
 20316                           ;delay.c: 127: while (cyclesRequiredForEntireDelay > 0)
 20317                           
 20318                           ;delay.c: 124: }
 20319                           
 20320                           ;delay.c: 122: {
 20321                           ;delay.c: 123: return;
 20322                           
 20323                           
 20324                           ;delay.c: 128: {
 20325                           ;delay.c: 129: __nop();
 20326  25B3  0000               	nop
 20327                           
 20328                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 20329  25B4  30D9               	movlw	217
 20330  25B5  0021               	movlb	1	; select bank1
 20331  25B6  07AE               	addwf	DELAY_ms@cyclesRequiredForEntireDelay^(0+128),f
 20332  25B7  30FF               	movlw	255
 20333  25B8  3DAF               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)^(0+128),f
 20334  25B9  30FF               	movlw	255
 20335  25BA  3DB0               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)^(0+128),f
 20336  25BB  30FF               	movlw	255
 20337  25BC  3DB1               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)^(0+128),f
 20338  25BD  2DA4               	goto	l4848
 20339  25BE                     __end_of_DELAY_ms:	
 20340                           
 20341                           	psect	text77
 20342  229E                     __ptext77:	
 20343 ;; *************** function ___lmul *****************
 20344 ;; Defined at:
 20345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 20346 ;; Parameters:    Size  Location     Type
 20347 ;;  multiplier      4    0[BANK1 ] unsigned long 
 20348 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;  product         4    8[BANK1 ] unsigned long 
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  4    0[BANK1 ] unsigned long 
 20353 ;; Registers used:
 20354 ;;		wreg, status,2, status,0
 20355 ;; Tracked objects:
 20356 ;;		On entry : 0/0
 20357 ;;		On exit  : 0/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20360 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 20361 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20363 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 20364 ;;Total ram usage:       12 bytes
 20365 ;; Hardware stack levels used:    1
 20366 ;; Hardware stack levels required when called:    5
 20367 ;; This function calls:
 20368 ;;		Nothing
 20369 ;; This function is called by:
 20370 ;;		_DELAY_10us
 20371 ;;		_DELAY_ms
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           
 20376                           ;psect for function ___lmul
 20377  229E                     ___lmul:	
 20378                           
 20379                           ;incstack = 0
 20380                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 20381  229E  3000               	movlw	0
 20382  229F  0021               	movlb	1	; select bank1
 20383  22A0  00AB               	movwf	(___lmul@product+3)^(0+128)
 20384  22A1  3000               	movlw	0
 20385  22A2  00AA               	movwf	(___lmul@product+2)^(0+128)
 20386  22A3  3000               	movlw	0
 20387  22A4  00A9               	movwf	(___lmul@product+1)^(0+128)
 20388  22A5  3000               	movlw	0
 20389  22A6  00A8               	movwf	___lmul@product^(0+128)
 20390  22A7                     l4652:	
 20391  22A7  1C20               	btfss	___lmul@multiplier^(0+128),0
 20392  22A8  2AB1               	goto	l4656
 20393  22A9  0824               	movf	___lmul@multiplicand^(0+128),w
 20394  22AA  07A8               	addwf	___lmul@product^(0+128),f
 20395  22AB  0825               	movf	(___lmul@multiplicand+1)^(0+128),w
 20396  22AC  3DA9               	addwfc	(___lmul@product+1)^(0+128),f
 20397  22AD  0826               	movf	(___lmul@multiplicand+2)^(0+128),w
 20398  22AE  3DAA               	addwfc	(___lmul@product+2)^(0+128),f
 20399  22AF  0827               	movf	(___lmul@multiplicand+3)^(0+128),w
 20400  22B0  3DAB               	addwfc	(___lmul@product+3)^(0+128),f
 20401  22B1                     l4656:	
 20402  22B1  3001               	movlw	1
 20403  22B2                     u3865:	
 20404  22B2  35A4               	lslf	___lmul@multiplicand^(0+128),f
 20405  22B3  0DA5               	rlf	(___lmul@multiplicand+1)^(0+128),f
 20406  22B4  0DA6               	rlf	(___lmul@multiplicand+2)^(0+128),f
 20407  22B5  0DA7               	rlf	(___lmul@multiplicand+3)^(0+128),f
 20408  22B6  0B89               	decfsz	9,f
 20409  22B7  2AB2               	goto	u3865
 20410  22B8  3001               	movlw	1
 20411  22B9                     u3875:	
 20412  22B9  36A3               	lsrf	(___lmul@multiplier+3)^(0+128),f
 20413  22BA  0CA2               	rrf	(___lmul@multiplier+2)^(0+128),f
 20414  22BB  0CA1               	rrf	(___lmul@multiplier+1)^(0+128),f
 20415  22BC  0CA0               	rrf	___lmul@multiplier^(0+128),f
 20416  22BD  0B89               	decfsz	9,f
 20417  22BE  2AB9               	goto	u3875
 20418  22BF  0823               	movf	(___lmul@multiplier+3)^(0+128),w
 20419  22C0  0422               	iorwf	(___lmul@multiplier+2)^(0+128),w
 20420  22C1  0421               	iorwf	(___lmul@multiplier+1)^(0+128),w
 20421  22C2  0420               	iorwf	___lmul@multiplier^(0+128),w
 20422  22C3  1D03               	skipz
 20423  22C4  2AA7               	goto	l4652
 20424  22C5  082B               	movf	(___lmul@product+3)^(0+128),w
 20425  22C6  00A3               	movwf	(?___lmul+3)^(0+128)
 20426  22C7  082A               	movf	(___lmul@product+2)^(0+128),w
 20427  22C8  00A2               	movwf	(?___lmul+2)^(0+128)
 20428  22C9  0829               	movf	(___lmul@product+1)^(0+128),w
 20429  22CA  00A1               	movwf	(?___lmul+1)^(0+128)
 20430  22CB  0828               	movf	___lmul@product^(0+128),w
 20431  22CC  00A0               	movwf	?___lmul^(0+128)
 20432  22CD  0008               	return
 20433  22CE                     __end_of___lmul:	
 20434                           
 20435                           	psect	text78
 20436  2EF3                     __ptext78:	
 20437 ;; *************** function _CONSOLE_PutString *****************
 20438 ;; Defined at:
 20439 ;;		line 99 in file "../src/system_config/pic18exp_pic16f1947_89xa/console.c"
 20440 ;; Parameters:    Size  Location     Type
 20441 ;;  str             2    1[BANK1 ] PTR unsigned char 
 20442 ;;		 -> STR_39(19), STR_38(46), STR_37(24), STR_36(3), 
 20443 ;;		 -> STR_35(7), STR_34(26), STR_33(28), STR_32(9), 
 20444 ;;		 -> STR_31(3), STR_30(29), STR_28(3), STR_27(30), 
 20445 ;;		 -> STR_25(5), STR_24(60), STR_23(66), STR_22(66), 
 20446 ;;		 -> STR_21(62), STR_20(64), STR_19(23), STR_18(31), 
 20447 ;;		 -> STR_17(60), STR_13(3), STR_12(5), STR_11(3), 
 20448 ;;		 -> STR_10(14), STR_9(50), STR_8(3), STR_7(5), 
 20449 ;;		 -> STR_6(3), STR_5(14), STR_4(48), STR_3(12), 
 20450 ;;		 -> STR_2(19), STR_1(10), 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;  c               1    6[BANK1 ] unsigned char 
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  1    wreg      void 
 20455 ;; Registers used:
 20456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20462 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20463 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20464 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20465 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20466 ;;Total ram usage:        6 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    6
 20469 ;; This function calls:
 20470 ;;		_CONSOLE_Put
 20471 ;; This function is called by:
 20472 ;;		_MiApp_ProtocolInit
 20473 ;;		_DumpConnection
 20474 ;;		_DemoOutput_Greeting
 20475 ;;		_DemoOutput_Channel
 20476 ;;		_DemoOutput_HandleMessage
 20477 ;;		_DemoOutput_ChannelError
 20478 ;;		_DemoOutput_UnicastFail
 20479 ;; This function uses a non-reentrant model
 20480 ;;
 20481                           
 20482                           
 20483                           ;psect for function _CONSOLE_PutString
 20484  2EF3                     _CONSOLE_PutString:	
 20485  2EF3                     l5978:	
 20486                           ;console.c: 101: uint8_t c;
 20487                           ;console.c: 103: while( c = *str++ )
 20488                           
 20489                           ;incstack = 0
 20490                           ; Regs used in _CONSOLE_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20491                           
 20492  2EF3  0021               	movlb	1	; select bank1
 20493  2EF4  0822               	movf	(CONSOLE_PutString@str+1)^(0+128),w
 20494  2EF5  00A4               	movwf	(??_CONSOLE_PutString^(0+128)+1)
 20495  2EF6  0821               	movf	CONSOLE_PutString@str^(0+128),w
 20496  2EF7  00A3               	movwf	??_CONSOLE_PutString^(0+128)
 20497  2EF8  0AA1               	incf	CONSOLE_PutString@str^(0+128),f
 20498  2EF9  1903               	skipnz
 20499  2EFA  0AA2               	incf	(CONSOLE_PutString@str+1)^(0+128),f
 20500  2EFB  0823               	movf	??_CONSOLE_PutString^(0+128),w
 20501  2EFC  0084               	movwf	4
 20502  2EFD  0824               	movf	(??_CONSOLE_PutString+1)^(0+128),w
 20503  2EFE  0085               	movwf	5
 20504  2EFF  0800               	movf	0,w	;code access
 20505  2F00  00A5               	movwf	(??_CONSOLE_PutString+2)^(0+128)
 20506  2F01  0825               	movf	(??_CONSOLE_PutString+2)^(0+128),w
 20507  2F02  00A6               	movwf	CONSOLE_PutString@c^(0+128)
 20508  2F03  0826               	movf	CONSOLE_PutString@c^(0+128),w
 20509  2F04  1903               	btfsc	3,2
 20510  2F05  0008               	return
 20511                           
 20512                           ;console.c: 104: CONSOLE_Put(c);
 20513  2F06  0021               	movlb	1	; select bank1
 20514  2F07  0826               	movf	CONSOLE_PutString@c^(0+128),w
 20515  2F08  31AD  25C0  31AE   	fcall	_CONSOLE_Put
 20516  2F0B  2EF3               	goto	l5978
 20517  2F0C                     __end_of_CONSOLE_PutString:	
 20518                           
 20519                           	psect	text79
 20520  2DC0                     __ptext79:	
 20521 ;; *************** function _CONSOLE_Put *****************
 20522 ;; Defined at:
 20523 ;;		line 124 in file "../src/system_config/pic18exp_pic16f1947_89xa/console.c"
 20524 ;; Parameters:    Size  Location     Type
 20525 ;;  c               1    wreg     unsigned char 
 20526 ;; Auto vars:     Size  Location     Type
 20527 ;;  c               1    0[BANK1 ] unsigned char 
 20528 ;; Return value:  Size  Location     Type
 20529 ;;                  1    wreg      void 
 20530 ;; Registers used:
 20531 ;;		wreg
 20532 ;; Tracked objects:
 20533 ;;		On entry : 0/0
 20534 ;;		On exit  : 0/0
 20535 ;;		Unchanged: 0/0
 20536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20538 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20540 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20541 ;;Total ram usage:        1 bytes
 20542 ;; Hardware stack levels used:    1
 20543 ;; Hardware stack levels required when called:    5
 20544 ;; This function calls:
 20545 ;;		Nothing
 20546 ;; This function is called by:
 20547 ;;		_CONSOLE_PutString
 20548 ;;		_CONSOLE_PrintHex
 20549 ;;		_CONSOLE_PrintDec
 20550 ;;		_DemoOutput_HandleMessage
 20551 ;; This function uses a non-reentrant model
 20552 ;;
 20553                           
 20554                           
 20555                           ;psect for function _CONSOLE_Put
 20556  2DC0                     _CONSOLE_Put:	
 20557                           
 20558                           ;incstack = 0
 20559                           ; Regs used in _CONSOLE_Put: [wreg]
 20560                           ;CONSOLE_Put@c stored from wreg
 20561  2DC0  0021               	movlb	1	; select bank1
 20562  2DC1  00A0               	movwf	CONSOLE_Put@c^(0+128)
 20563  2DC2                     l586:	
 20564                           ;console.c: 126: while( !(TXSTAbits.TRMT) );
 20565                           
 20566  2DC2  0023               	movlb	3	; select bank3
 20567  2DC3  1C9E               	btfss	30,1	;volatile
 20568  2DC4  2DC2               	goto	l586
 20569                           
 20570                           ;console.c: 128: TXREG = c;
 20571  2DC5  0021               	movlb	1	; select bank1
 20572  2DC6  0820               	movf	CONSOLE_Put@c^(0+128),w
 20573  2DC7  0023               	movlb	3	; select bank3
 20574  2DC8  009A               	movwf	26	;volatile
 20575  2DC9  0008               	return
 20576  2DCA                     __end_of_CONSOLE_Put:	
 20577                           
 20578                           	psect	text80
 20579  2DD4                     __ptext80:	
 20580 ;; *************** function _CONSOLE_Initialize *****************
 20581 ;; Defined at:
 20582 ;;		line 67 in file "../src/system_config/pic18exp_pic16f1947_89xa/console.c"
 20583 ;; Parameters:    Size  Location     Type
 20584 ;;		None
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;		None
 20587 ;; Return value:  Size  Location     Type
 20588 ;;                  1    wreg      void 
 20589 ;; Registers used:
 20590 ;;		wreg
 20591 ;; Tracked objects:
 20592 ;;		On entry : 0/0
 20593 ;;		On exit  : 0/0
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20600 ;;Total ram usage:        0 bytes
 20601 ;; Hardware stack levels used:    1
 20602 ;; Hardware stack levels required when called:    5
 20603 ;; This function calls:
 20604 ;;		Nothing
 20605 ;; This function is called by:
 20606 ;;		_main
 20607 ;; This function uses a non-reentrant model
 20608 ;;
 20609                           
 20610                           
 20611                           ;psect for function _CONSOLE_Initialize
 20612  2DD4                     _CONSOLE_Initialize:	
 20613                           
 20614                           ;console.c: 70: TRISCbits.TRISC7 = 1;
 20615                           
 20616                           ;incstack = 0
 20617                           ; Regs used in _CONSOLE_Initialize: [wreg]
 20618  2DD4  0021               	movlb	1	; select bank1
 20619  2DD5  178E               	bsf	14,7	;volatile
 20620                           
 20621                           ;console.c: 71: TRISCbits.TRISC6 = 0;
 20622  2DD6  130E               	bcf	14,6	;volatile
 20623                           
 20624                           ;console.c: 73: TXSTA = 0x24;
 20625  2DD7  3024               	movlw	36
 20626  2DD8  0023               	movlb	3	; select bank3
 20627  2DD9  009E               	movwf	30	;volatile
 20628                           
 20629                           ;console.c: 77: RCSTA = 0x90;
 20630  2DDA  3090               	movlw	144
 20631  2DDB  009D               	movwf	29	;volatile
 20632                           
 20633                           ;console.c: 78: SPBRG = ( (((10000000)/19200)/16) - 1);
 20634  2DDC  301F               	movlw	31
 20635  2DDD  009B               	movwf	27	;volatile
 20636  2DDE  0008               	return
 20637  2DDF                     __end_of_CONSOLE_Initialize:	
 20638                           
 20639                           	psect	intentry
 20640  0004                     __pintentry:	
 20641 ;; *************** function _high_isr *****************
 20642 ;; Defined at:
 20643 ;;		line 1242 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20644 ;; Parameters:    Size  Location     Type
 20645 ;;		None
 20646 ;; Auto vars:     Size  Location     Type
 20647 ;;  ackInfoIndex    1   52[BANK0 ] unsigned char 
 20648 ;;  i               1   55[BANK0 ] unsigned char 
 20649 ;;  fifo_stat       1   45[BANK0 ] unsigned char 
 20650 ;;  ackPacket       4   46[BANK0 ] unsigned char [4]
 20651 ;;  counter         2   43[BANK0 ] unsigned int 
 20652 ;;  BankIndex       1   54[BANK0 ] unsigned char 
 20653 ;;  PacketLen       1   53[BANK0 ] unsigned char 
 20654 ;;  RxPacketPtr     1   51[BANK0 ] unsigned char 
 20655 ;;  bAck            1   50[BANK0 ] unsigned char 
 20656 ;; Return value:  Size  Location     Type
 20657 ;;                  1    wreg      void 
 20658 ;; Registers used:
 20659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20660 ;; Tracked objects:
 20661 ;;		On entry : 0/0
 20662 ;;		On exit  : 0/0
 20663 ;;		Unchanged: 0/0
 20664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20666 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20667 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20668 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20669 ;;Total ram usage:       25 bytes
 20670 ;; Hardware stack levels used:    1
 20671 ;; Hardware stack levels required when called:    4
 20672 ;; This function calls:
 20673 ;;		_UserInterruptHandler
 20674 ;;		i1_MiWi_TickGet
 20675 ;;		i1_RegisterRead
 20676 ;;		i1_SPIGet
 20677 ;;		i1_TxPacket
 20678 ;;		i1___bmul
 20679 ;;		i1___wmul
 20680 ;; This function is called by:
 20681 ;;		Interrupt level 1
 20682 ;; This function uses a non-reentrant model
 20683 ;;
 20684                           
 20685  0004                     _high_isr:	
 20686                           
 20687                           ;incstack = 0
 20688  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20689                           
 20690                           ; Regs used in _high_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20691  0005  3180               	pagesel	$
 20692  0006  0020               	movlb	0	; select bank0
 20693  0007  087F               	movf	127,w
 20694  0008  00CA               	movwf	??_high_isr+11
 20695                           
 20696                           ;drv_mrf_miwi_89xa.c: 1257: LATDbits.LATD6 = 1;
 20697  0009  0022               	movlb	2	; select bank2
 20698  000A  170F               	bsf	15,6	;volatile
 20699                           
 20700                           ;drv_mrf_miwi_89xa.c: 1258: LATDbits.LATD6 = 0;
 20701  000B  130F               	bcf	15,6	;volatile
 20702                           
 20703                           ;drv_mrf_miwi_89xa.c: 1260: if( IOCBFbits.IOCBF3 && INTCONbits.IOCIE )
 20704  000C  0027               	movlb	7	; select bank7
 20705  000D  1996               	btfsc	22,3	;volatile
 20706  000E  1D8B               	btfss	11,3	;volatile
 20707  000F  2B77               	goto	i1l7482
 20708                           
 20709                           ;drv_mrf_miwi_89xa.c: 1261: {
 20710                           ;drv_mrf_miwi_89xa.c: 1264: if(RF_Mode == 0x60)
 20711  0010  3060               	movlw	96
 20712  0011  0020               	movlb	0	; select bank0
 20713  0012  0660               	xorwf	_RF_Mode,w
 20714  0013  1D03               	btfss	3,2
 20715  0014  2B70               	goto	i1l7476
 20716                           
 20717                           ;drv_mrf_miwi_89xa.c: 1265: {
 20718                           ;drv_mrf_miwi_89xa.c: 1268: uint8_t RxPacketPtr;
 20719                           ;drv_mrf_miwi_89xa.c: 1269: uint8_t PacketLen;
 20720                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t BankIndex;
 20721                           ;drv_mrf_miwi_89xa.c: 1271: uint16_t counter;
 20722                           ;drv_mrf_miwi_89xa.c: 1272: bool bAck;
 20723                           ;drv_mrf_miwi_89xa.c: 1273: uint8_t ackPacket[4];
 20724                           ;drv_mrf_miwi_89xa.c: 1276: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 20725  0015  3028               	movlw	40
 20726  0016  31A0  2080  3180   	fcall	i1_RegisterRead
 20727  0019  3689               	lsrf	9,f
 20728  001A  0020               	movlb	0	; select bank0
 20729  001B  00BF               	movwf	??_high_isr
 20730  001C  083F               	movf	??_high_isr,w
 20731  001D  00E2               	movwf	_RSSIVal
 20732                           
 20733                           ;drv_mrf_miwi_89xa.c: 1279: RSSILock = RSSIVal;
 20734  001E  0862               	movf	_RSSIVal,w
 20735  001F  00BF               	movwf	??_high_isr
 20736  0020  083F               	movf	??_high_isr,w
 20737  0021  00E1               	movwf	_RSSILock
 20738                           
 20739                           ;drv_mrf_miwi_89xa.c: 1281: LATCbits.LATC2 = 0;
 20740  0022  0022               	movlb	2	; select bank2
 20741  0023  110E               	bcf	14,2	;volatile
 20742                           
 20743                           ;drv_mrf_miwi_89xa.c: 1282: PacketLen = SPIGet();
 20744  0024  31AD  25AE  3180   	fcall	i1_SPIGet
 20745  0027  0020               	movlb	0	; select bank0
 20746  0028  00BF               	movwf	??_high_isr
 20747  0029  083F               	movf	??_high_isr,w
 20748  002A  00D5               	movwf	high_isr@PacketLen
 20749                           
 20750                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC2 = 1;
 20751  002B  0022               	movlb	2	; select bank2
 20752  002C  150E               	bsf	14,2	;volatile
 20753                           
 20754                           ;drv_mrf_miwi_89xa.c: 1286: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 20755  002D  0020               	movlb	0	; select bank0
 20756  002E  01D6               	clrf	high_isr@BankIndex
 20757  002F  3002               	movlw	2
 20758  0030  0256               	subwf	high_isr@BankIndex,w
 20759  0031  1803               	btfsc	3,0
 20760  0032  2856               	goto	i1l7334
 20761  0033                     i1l7326:	
 20762                           
 20763                           ;drv_mrf_miwi_89xa.c: 1287: {
 20764                           ;drv_mrf_miwi_89xa.c: 1288: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 20765  0033  0856               	movf	high_isr@BankIndex,w
 20766  0034  00BF               	movwf	??_high_isr
 20767  0035  01C0               	clrf	??_high_isr+1
 20768  0036  083F               	movf	??_high_isr,w
 20769  0037  00F0               	movwf	i1___wmul@multiplier
 20770  0038  0840               	movf	??_high_isr+1,w
 20771  0039  00F1               	movwf	i1___wmul@multiplier+1
 20772  003A  3034               	movlw	52
 20773  003B  00F2               	movwf	i1___wmul@multiplicand
 20774  003C  3000               	movlw	0
 20775  003D  00F3               	movwf	i1___wmul@multiplicand+1
 20776  003E  31AF  275A  3180   	fcall	i1___wmul
 20777  0041  3088               	movlw	136
 20778  0042  0020               	movlb	0	; select bank0
 20779  0043  00C1               	movwf	??_high_isr+2
 20780  0044  3023               	movlw	35
 20781  0045  00C2               	movwf	??_high_isr+3
 20782  0046  0870               	movf	?i1___wmul,w
 20783  0047  0741               	addwf	??_high_isr+2,w
 20784  0048  0086               	movwf	6
 20785  0049  0871               	movf	?i1___wmul+1,w
 20786  004A  3D42               	addwfc	??_high_isr+3,w
 20787  004B  0087               	movwf	7
 20788  004C  1C01               	btfss	1,0
 20789  004D  2856               	goto	i1l7334
 20790                           
 20791                           ;drv_mrf_miwi_89xa.c: 1289: {
 20792                           ;drv_mrf_miwi_89xa.c: 1290: break;
 20793  004E  3001               	movlw	1
 20794  004F  00BF               	movwf	??_high_isr
 20795  0050  083F               	movf	??_high_isr,w
 20796  0051  07D6               	addwf	high_isr@BankIndex,f
 20797  0052  3002               	movlw	2
 20798  0053  0256               	subwf	high_isr@BankIndex,w
 20799  0054  1C03               	skipc
 20800  0055  2833               	goto	i1l7326
 20801  0056                     i1l7334:	
 20802                           
 20803                           ;drv_mrf_miwi_89xa.c: 1291: }
 20804                           ;drv_mrf_miwi_89xa.c: 1292: }
 20805                           ;drv_mrf_miwi_89xa.c: 1295: if( PacketLen == 2 )
 20806  0056  3002               	movlw	2
 20807  0057  0655               	xorwf	high_isr@PacketLen,w
 20808  0058  1D03               	btfss	3,2
 20809  0059  285D               	goto	i1l7338
 20810                           
 20811                           ;drv_mrf_miwi_89xa.c: 1296: {
 20812                           ;drv_mrf_miwi_89xa.c: 1297: bAck = 1;
 20813  005A  01D2               	clrf	high_isr@bAck
 20814  005B  0AD2               	incf	high_isr@bAck,f
 20815                           
 20816                           ;drv_mrf_miwi_89xa.c: 1298: }
 20817  005C  285E               	goto	i1l7340
 20818  005D                     i1l7338:	
 20819                           
 20820                           ;drv_mrf_miwi_89xa.c: 1299: else
 20821                           ;drv_mrf_miwi_89xa.c: 1300: {
 20822                           ;drv_mrf_miwi_89xa.c: 1301: bAck = 0;
 20823  005D  01D2               	clrf	high_isr@bAck
 20824  005E                     i1l7340:	
 20825                           
 20826                           ;drv_mrf_miwi_89xa.c: 1302: }
 20827                           ;drv_mrf_miwi_89xa.c: 1305: if( PacketLen >= (30+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 20828  005E  3032               	movlw	50
 20829  005F  0255               	subwf	high_isr@PacketLen,w
 20830  0060  1803               	skipnc
 20831  0061  286C               	goto	i1l7348
 20832  0062  0855               	movf	high_isr@PacketLen,w
 20833  0063  1903               	btfsc	3,2
 20834  0064  286C               	goto	i1l7348
 20835  0065  3002               	movlw	2
 20836  0066  0256               	subwf	high_isr@BankIndex,w
 20837  0067  1C03               	skipc
 20838  0068  287E               	goto	i1l7356
 20839  0069  0852               	movf	high_isr@bAck,w
 20840  006A  1D03               	btfss	3,2
 20841  006B  287E               	goto	i1l7356
 20842  006C                     i1l7348:	
 20843                           ;drv_mrf_miwi_89xa.c: 1306: {
 20844                           ;drv_mrf_miwi_89xa.c: 1307: IGNORE_HERE:
 20845                           
 20846                           
 20847                           ;drv_mrf_miwi_89xa.c: 1308: {
 20848                           ;drv_mrf_miwi_89xa.c: 1309: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 20849  006C  301A               	movlw	26
 20850  006D  31A0  2080  3180   	fcall	i1_RegisterRead
 20851  0070  0020               	movlb	0	; select bank0
 20852  0071  00BF               	movwf	??_high_isr
 20853  0072  083F               	movf	??_high_isr,w
 20854  0073  00CD               	movwf	high_isr@fifo_stat
 20855  0074  1CCD               	btfss	high_isr@fifo_stat,1
 20856  0075  2B74               	goto	i1l7478
 20857                           
 20858                           ;drv_mrf_miwi_89xa.c: 1311: {
 20859                           ;drv_mrf_miwi_89xa.c: 1312: LATCbits.LATC2 = 0;
 20860                           
 20861                           ;drv_mrf_miwi_89xa.c: 1310: while(fifo_stat & 0x02)
 20862  0076  0022               	movlb	2	; select bank2
 20863  0077  110E               	bcf	14,2	;volatile
 20864                           
 20865                           ;drv_mrf_miwi_89xa.c: 1313: SPIGet();
 20866  0078  31AD  25AE  3180   	fcall	i1_SPIGet
 20867                           
 20868                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC2 = 1;
 20869  007B  0022               	movlb	2	; select bank2
 20870  007C  150E               	bsf	14,2	;volatile
 20871  007D  286C               	goto	i1l7348
 20872  007E                     i1l7356:	
 20873                           ;drv_mrf_miwi_89xa.c: 1316: }
 20874                           ;drv_mrf_miwi_89xa.c: 1317: }
 20875                           ;drv_mrf_miwi_89xa.c: 1318: goto RETURN_HERE;
 20876                           
 20877                           ;drv_mrf_miwi_89xa.c: 1315: fifo_stat = RegisterRead(0x1A00>>8);
 20878                           
 20879                           
 20880                           ;drv_mrf_miwi_89xa.c: 1319: }
 20881                           ;drv_mrf_miwi_89xa.c: 1321: RxPacketPtr = 0;
 20882  007E  01D3               	clrf	high_isr@RxPacketPtr
 20883                           
 20884                           ;drv_mrf_miwi_89xa.c: 1322: counter = PacketLen;
 20885  007F  0855               	movf	high_isr@PacketLen,w
 20886  0080  00BF               	movwf	??_high_isr
 20887  0081  01C0               	clrf	??_high_isr+1
 20888  0082  083F               	movf	??_high_isr,w
 20889  0083  00CB               	movwf	high_isr@counter
 20890  0084  0840               	movf	??_high_isr+1,w
 20891  0085  00CC               	movwf	high_isr@counter+1
 20892  0086                     i1l7474:	
 20893                           ;drv_mrf_miwi_89xa.c: 1324: while(counter >= 1)
 20894                           
 20895  0086  084B               	movf	high_isr@counter,w
 20896  0087  044C               	iorwf	high_isr@counter+1,w
 20897  0088  1903               	btfsc	3,2
 20898  0089  2B74               	goto	i1l7478
 20899                           
 20900                           ;drv_mrf_miwi_89xa.c: 1327: if(1)
 20901  008A  3001               	movlw	1
 20902  008B  02CB               	subwf	high_isr@counter,f
 20903  008C  3000               	movlw	0
 20904  008D  3BCC               	subwfb	high_isr@counter+1,f
 20905                           
 20906                           ;drv_mrf_miwi_89xa.c: 1328: {
 20907                           ;drv_mrf_miwi_89xa.c: 1330: if( bAck )
 20908  008E  0852               	movf	high_isr@bAck,w
 20909  008F  1903               	btfsc	3,2
 20910  0090  289D               	goto	i1l193
 20911                           
 20912                           ;drv_mrf_miwi_89xa.c: 1331: {
 20913                           ;drv_mrf_miwi_89xa.c: 1332: LATCbits.LATC2 = 0;
 20914  0091  0022               	movlb	2	; select bank2
 20915  0092  110E               	bcf	14,2	;volatile
 20916                           
 20917                           ;drv_mrf_miwi_89xa.c: 1333: ackPacket[RxPacketPtr++] = SPIGet();
 20918  0093  31AD  25AE  3180   	fcall	i1_SPIGet
 20919  0096  0020               	movlb	0	; select bank0
 20920  0097  00BF               	movwf	??_high_isr
 20921  0098  0853               	movf	high_isr@RxPacketPtr,w
 20922  0099  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 20923  009A  0086               	movwf	6
 20924  009B  0187               	clrf	7
 20925  009C  28CE               	goto	L23
 20926  009D                     i1l193:	
 20927                           ;drv_mrf_miwi_89xa.c: 1335: }
 20928                           
 20929                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC2 = 1;
 20930                           
 20931                           
 20932                           ;drv_mrf_miwi_89xa.c: 1337: else
 20933                           ;drv_mrf_miwi_89xa.c: 1338: {
 20934                           ;drv_mrf_miwi_89xa.c: 1339: LATCbits.LATC2 = 0;
 20935  009D  0022               	movlb	2	; select bank2
 20936  009E  110E               	bcf	14,2	;volatile
 20937                           
 20938                           ;drv_mrf_miwi_89xa.c: 1340: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 20939  009F  31AD  25AE  3180   	fcall	i1_SPIGet
 20940  00A2  0020               	movlb	0	; select bank0
 20941  00A3  00BF               	movwf	??_high_isr
 20942  00A4  0856               	movf	high_isr@BankIndex,w
 20943  00A5  00C0               	movwf	??_high_isr+1
 20944  00A6  01C1               	clrf	??_high_isr+2
 20945  00A7  0840               	movf	??_high_isr+1,w
 20946  00A8  00F0               	movwf	i1___wmul@multiplier
 20947  00A9  0841               	movf	??_high_isr+2,w
 20948  00AA  00F1               	movwf	i1___wmul@multiplier+1
 20949  00AB  3034               	movlw	52
 20950  00AC  00F2               	movwf	i1___wmul@multiplicand
 20951  00AD  3000               	movlw	0
 20952  00AE  00F3               	movwf	i1___wmul@multiplicand+1
 20953  00AF  31AF  275A  3180   	fcall	i1___wmul
 20954  00B2  0020               	movlb	0	; select bank0
 20955  00B3  0853               	movf	high_isr@RxPacketPtr,w
 20956  00B4  3E01               	addlw	1
 20957  00B5  00C2               	movwf	??_high_isr+3
 20958  00B6  3000               	movlw	0
 20959  00B7  1803               	skipnc
 20960  00B8  3001               	movlw	1
 20961  00B9  00C3               	movwf	??_high_isr+4
 20962  00BA  3088               	movlw	136
 20963  00BB  00C4               	movwf	??_high_isr+5
 20964  00BC  3023               	movlw	35
 20965  00BD  00C5               	movwf	??_high_isr+6
 20966  00BE  0842               	movf	??_high_isr+3,w
 20967  00BF  0744               	addwf	??_high_isr+5,w
 20968  00C0  00C6               	movwf	??_high_isr+7
 20969  00C1  0843               	movf	??_high_isr+4,w
 20970  00C2  3D45               	addwfc	??_high_isr+6,w
 20971  00C3  00C7               	movwf	??_high_isr+8
 20972  00C4  0870               	movf	?i1___wmul,w
 20973  00C5  0746               	addwf	??_high_isr+7,w
 20974  00C6  00C8               	movwf	??_high_isr+9
 20975  00C7  0871               	movf	?i1___wmul+1,w
 20976  00C8  3D47               	addwfc	??_high_isr+8,w
 20977  00C9  00C9               	movwf	??_high_isr+10
 20978  00CA  0848               	movf	??_high_isr+9,w
 20979  00CB  0086               	movwf	6
 20980  00CC  0849               	movf	??_high_isr+10,w
 20981  00CD  0087               	movwf	7
 20982  00CE                     L23:	
 20983  00CE  083F               	movf	??_high_isr,w
 20984  00CF  0081               	movwf	1
 20985  00D0  3001               	movlw	1
 20986  00D1  00BF               	movwf	??_high_isr
 20987  00D2  083F               	movf	??_high_isr,w
 20988  00D3  07D3               	addwf	high_isr@RxPacketPtr,f
 20989                           
 20990                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC2 = 1;
 20991  00D4  0022               	movlb	2	; select bank2
 20992  00D5  150E               	bsf	14,2	;volatile
 20993                           
 20994                           ;drv_mrf_miwi_89xa.c: 1342: }
 20995                           ;drv_mrf_miwi_89xa.c: 1345: if( RxPacketPtr >= PacketLen )
 20996  00D6  0020               	movlb	0	; select bank0
 20997  00D7  0855               	movf	high_isr@PacketLen,w
 20998  00D8  0253               	subwf	high_isr@RxPacketPtr,w
 20999  00D9  1C03               	skipc
 21000  00DA  2886               	goto	i1l7474
 21001                           
 21002                           ;drv_mrf_miwi_89xa.c: 1346: {
 21003                           ;drv_mrf_miwi_89xa.c: 1347: uint8_t i;
 21004                           ;drv_mrf_miwi_89xa.c: 1349: if( bAck )
 21005  00DB  0852               	movf	high_isr@bAck,w
 21006  00DC  1903               	btfsc	3,2
 21007  00DD  2941               	goto	i1l196
 21008                           
 21009                           ;drv_mrf_miwi_89xa.c: 1350: {
 21010                           ;drv_mrf_miwi_89xa.c: 1352: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 21011  00DE  3003               	movlw	3
 21012  00DF  054E               	andwf	high_isr@ackPacket,w
 21013  00E0  00BF               	movwf	??_high_isr
 21014  00E1  3002               	movlw	2
 21015  00E2  063F               	xorwf	??_high_isr,w
 21016  00E3  1D03               	btfss	3,2
 21017  00E4  28EF               	goto	i1l7392
 21018                           
 21019                           ;drv_mrf_miwi_89xa.c: 1353: {
 21020                           ;drv_mrf_miwi_89xa.c: 1354: if( ackPacket[1] == TxMACSeq )
 21021  00E5  084F               	movf	high_isr@ackPacket+1,w
 21022  00E6  0664               	xorwf	_TxMACSeq,w
 21023  00E7  1D03               	skipz
 21024  00E8  28ED               	goto	i1l7388
 21025                           
 21026                           ;drv_mrf_miwi_89xa.c: 1355: {
 21027                           ;drv_mrf_miwi_89xa.c: 1356: hasAck = 1;
 21028  00E9  3001               	movlw	1
 21029  00EA  00BF               	movwf	??_high_isr
 21030  00EB  083F               	movf	??_high_isr,w
 21031  00EC  00E5               	movwf	_hasAck	;volatile
 21032  00ED                     i1l7388:	
 21033                           
 21034                           ;drv_mrf_miwi_89xa.c: 1357: }
 21035                           ;drv_mrf_miwi_89xa.c: 1358: RxPacketPtr = 0;
 21036  00ED  01D3               	clrf	high_isr@RxPacketPtr
 21037                           
 21038                           ;drv_mrf_miwi_89xa.c: 1359: goto RETURN_HERE;
 21039  00EE  2B74               	goto	i1l7478
 21040  00EF                     i1l7392:	
 21041                           ;drv_mrf_miwi_89xa.c: 1360: }
 21042                           
 21043                           
 21044                           ;drv_mrf_miwi_89xa.c: 1361: else
 21045                           ;drv_mrf_miwi_89xa.c: 1363: if( BankIndex >= 2 )
 21046  00EF  3002               	movlw	2
 21047  00F0  0256               	subwf	high_isr@BankIndex,w
 21048  00F1  1C03               	skipc
 21049  00F2  28F5               	goto	i1l7396
 21050                           
 21051                           ;drv_mrf_miwi_89xa.c: 1364: {
 21052                           ;drv_mrf_miwi_89xa.c: 1365: RxPacketPtr = 0;
 21053  00F3  01D3               	clrf	high_isr@RxPacketPtr
 21054                           
 21055                           ;drv_mrf_miwi_89xa.c: 1366: goto IGNORE_HERE;
 21056  00F4  286C               	goto	i1l7348
 21057  00F5                     i1l7396:	
 21058                           
 21059                           ;drv_mrf_miwi_89xa.c: 1367: }
 21060                           ;drv_mrf_miwi_89xa.c: 1368: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 21061  00F5  0856               	movf	high_isr@BankIndex,w
 21062  00F6  00BF               	movwf	??_high_isr
 21063  00F7  01C0               	clrf	??_high_isr+1
 21064  00F8  083F               	movf	??_high_isr,w
 21065  00F9  00F0               	movwf	i1___wmul@multiplier
 21066  00FA  0840               	movf	??_high_isr+1,w
 21067  00FB  00F1               	movwf	i1___wmul@multiplier+1
 21068  00FC  3034               	movlw	52
 21069  00FD  00F2               	movwf	i1___wmul@multiplicand
 21070  00FE  3000               	movlw	0
 21071  00FF  00F3               	movwf	i1___wmul@multiplicand+1
 21072  0100  31AF  275A  3180   	fcall	i1___wmul
 21073  0103  0870               	movf	?i1___wmul,w
 21074  0104  3E01               	addlw	1
 21075  0105  0020               	movlb	0	; select bank0
 21076  0106  00C1               	movwf	??_high_isr+2
 21077  0107  3000               	movlw	0
 21078  0108  3D71               	addwfc	?i1___wmul+1,w
 21079  0109  00C2               	movwf	??_high_isr+3
 21080  010A  3088               	movlw	136
 21081  010B  00C3               	movwf	??_high_isr+4
 21082  010C  3023               	movlw	35
 21083  010D  00C4               	movwf	??_high_isr+5
 21084  010E  0841               	movf	??_high_isr+2,w
 21085  010F  0743               	addwf	??_high_isr+4,w
 21086  0110  00C5               	movwf	??_high_isr+6
 21087  0111  0842               	movf	??_high_isr+3,w
 21088  0112  3D44               	addwfc	??_high_isr+5,w
 21089  0113  00C6               	movwf	??_high_isr+7
 21090  0114  0845               	movf	??_high_isr+6,w
 21091  0115  0086               	movwf	6
 21092  0116  0846               	movf	??_high_isr+7,w
 21093  0117  0087               	movwf	7
 21094  0118  084E               	movf	high_isr@ackPacket,w
 21095  0119  0081               	movwf	1
 21096                           
 21097                           ;drv_mrf_miwi_89xa.c: 1369: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 21098  011A  084F               	movf	high_isr@ackPacket+1,w
 21099  011B  00BF               	movwf	??_high_isr
 21100  011C  0856               	movf	high_isr@BankIndex,w
 21101  011D  00C0               	movwf	??_high_isr+1
 21102  011E  01C1               	clrf	??_high_isr+2
 21103  011F  0840               	movf	??_high_isr+1,w
 21104  0120  00F0               	movwf	i1___wmul@multiplier
 21105  0121  0841               	movf	??_high_isr+2,w
 21106  0122  00F1               	movwf	i1___wmul@multiplier+1
 21107  0123  3034               	movlw	52
 21108  0124  00F2               	movwf	i1___wmul@multiplicand
 21109  0125  3000               	movlw	0
 21110  0126  00F3               	movwf	i1___wmul@multiplicand+1
 21111  0127  31AF  275A  3180   	fcall	i1___wmul
 21112  012A  0870               	movf	?i1___wmul,w
 21113  012B  3E02               	addlw	2
 21114  012C  0020               	movlb	0	; select bank0
 21115  012D  00C2               	movwf	??_high_isr+3
 21116  012E  3000               	movlw	0
 21117  012F  3D71               	addwfc	?i1___wmul+1,w
 21118  0130  00C3               	movwf	??_high_isr+4
 21119  0131  3088               	movlw	136
 21120  0132  00C4               	movwf	??_high_isr+5
 21121  0133  3023               	movlw	35
 21122  0134  00C5               	movwf	??_high_isr+6
 21123  0135  0842               	movf	??_high_isr+3,w
 21124  0136  0744               	addwf	??_high_isr+5,w
 21125  0137  00C6               	movwf	??_high_isr+7
 21126  0138  0843               	movf	??_high_isr+4,w
 21127  0139  3D45               	addwfc	??_high_isr+6,w
 21128  013A  00C7               	movwf	??_high_isr+8
 21129  013B  0846               	movf	??_high_isr+7,w
 21130  013C  0086               	movwf	6
 21131  013D  0847               	movf	??_high_isr+8,w
 21132  013E  0087               	movwf	7
 21133  013F  083F               	movf	??_high_isr,w
 21134  0140  0081               	movwf	1
 21135  0141                     i1l196:	
 21136                           
 21137                           ;drv_mrf_miwi_89xa.c: 1371: }
 21138                           ;drv_mrf_miwi_89xa.c: 1373: RxPacket[BankIndex].PayloadLen = PacketLen;
 21139  0141  0856               	movf	high_isr@BankIndex,w
 21140  0142  00BF               	movwf	??_high_isr
 21141  0143  01C0               	clrf	??_high_isr+1
 21142  0144  083F               	movf	??_high_isr,w
 21143  0145  00F0               	movwf	i1___wmul@multiplier
 21144  0146  0840               	movf	??_high_isr+1,w
 21145  0147  00F1               	movwf	i1___wmul@multiplier+1
 21146  0148  3034               	movlw	52
 21147  0149  00F2               	movwf	i1___wmul@multiplicand
 21148  014A  3000               	movlw	0
 21149  014B  00F3               	movwf	i1___wmul@multiplicand+1
 21150  014C  31AF  275A  3180   	fcall	i1___wmul
 21151  014F  0870               	movf	?i1___wmul,w
 21152  0150  3E33               	addlw	51
 21153  0151  0020               	movlb	0	; select bank0
 21154  0152  00C1               	movwf	??_high_isr+2
 21155  0153  3000               	movlw	0
 21156  0154  3D71               	addwfc	?i1___wmul+1,w
 21157  0155  00C2               	movwf	??_high_isr+3
 21158  0156  3088               	movlw	136
 21159  0157  00C3               	movwf	??_high_isr+4
 21160  0158  3023               	movlw	35
 21161  0159  00C4               	movwf	??_high_isr+5
 21162  015A  0841               	movf	??_high_isr+2,w
 21163  015B  0743               	addwf	??_high_isr+4,w
 21164  015C  00C5               	movwf	??_high_isr+6
 21165  015D  0842               	movf	??_high_isr+3,w
 21166  015E  3D44               	addwfc	??_high_isr+5,w
 21167  015F  00C6               	movwf	??_high_isr+7
 21168  0160  0845               	movf	??_high_isr+6,w
 21169  0161  0086               	movwf	6
 21170  0162  0846               	movf	??_high_isr+7,w
 21171  0163  0087               	movwf	7
 21172  0164  0855               	movf	high_isr@PacketLen,w
 21173  0165  0081               	movwf	1
 21174                           
 21175                           ;drv_mrf_miwi_89xa.c: 1390: {
 21176                           ;drv_mrf_miwi_89xa.c: 1391: uint8_t ackInfoIndex = 0xFF;
 21177  0166  30FF               	movlw	255
 21178  0167  00BF               	movwf	??_high_isr
 21179  0168  083F               	movf	??_high_isr,w
 21180  0169  00D4               	movwf	high_isr@ackInfoIndex
 21181                           
 21182                           ;drv_mrf_miwi_89xa.c: 1393: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 21183  016A  0856               	movf	high_isr@BankIndex,w
 21184  016B  00BF               	movwf	??_high_isr
 21185  016C  01C0               	clrf	??_high_isr+1
 21186  016D  083F               	movf	??_high_isr,w
 21187  016E  00F0               	movwf	i1___wmul@multiplier
 21188  016F  0840               	movf	??_high_isr+1,w
 21189  0170  00F1               	movwf	i1___wmul@multiplier+1
 21190  0171  3034               	movlw	52
 21191  0172  00F2               	movwf	i1___wmul@multiplicand
 21192  0173  3000               	movlw	0
 21193  0174  00F3               	movwf	i1___wmul@multiplicand+1
 21194  0175  31AF  275A  3180   	fcall	i1___wmul
 21195  0178  0870               	movf	?i1___wmul,w
 21196  0179  3E01               	addlw	1
 21197  017A  0020               	movlb	0	; select bank0
 21198  017B  00C1               	movwf	??_high_isr+2
 21199  017C  3000               	movlw	0
 21200  017D  3D71               	addwfc	?i1___wmul+1,w
 21201  017E  00C2               	movwf	??_high_isr+3
 21202  017F  3088               	movlw	136
 21203  0180  00C3               	movwf	??_high_isr+4
 21204  0181  3023               	movlw	35
 21205  0182  00C4               	movwf	??_high_isr+5
 21206  0183  0841               	movf	??_high_isr+2,w
 21207  0184  0743               	addwf	??_high_isr+4,w
 21208  0185  0086               	movwf	6
 21209  0186  0842               	movf	??_high_isr+3,w
 21210  0187  3D44               	addwfc	??_high_isr+5,w
 21211  0188  0087               	movwf	7
 21212  0189  1F01               	btfss	1,6
 21213  018A  29EC               	goto	i1l7412
 21214                           
 21215                           ;drv_mrf_miwi_89xa.c: 1394: {
 21216                           ;drv_mrf_miwi_89xa.c: 1395: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 21217  018B  01D7               	clrf	high_isr@i
 21218  018C                     i1l202:	
 21219  018C  0C58               	rrf	_MACInitParams,w
 21220  018D  00BF               	movwf	??_high_isr
 21221  018E  0CBF               	rrf	??_high_isr,f
 21222  018F  0C3F               	rrf	??_high_isr,w
 21223  0190  390F               	andlw	15
 21224  0191  0257               	subwf	high_isr@i,w
 21225  0192  1803               	btfsc	3,0
 21226  0193  29EC               	goto	i1l7412
 21227                           
 21228                           ;drv_mrf_miwi_89xa.c: 1396: {
 21229                           ;drv_mrf_miwi_89xa.c: 1397: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 21230  0194  0857               	movf	high_isr@i,w
 21231  0195  0759               	addwf	low ((_MACInitParams| 0+1)),w
 21232  0196  00BF               	movwf	??_high_isr
 21233  0197  083F               	movf	??_high_isr,w
 21234  0198  0086               	movwf	6
 21235  0199  3001               	movlw	1	; select bank2/3
 21236  019A  0087               	movwf	7
 21237  019B  0856               	movf	high_isr@BankIndex,w
 21238  019C  00C0               	movwf	??_high_isr+1
 21239  019D  01C1               	clrf	??_high_isr+2
 21240  019E  0840               	movf	??_high_isr+1,w
 21241  019F  00F0               	movwf	i1___wmul@multiplier
 21242  01A0  0841               	movf	??_high_isr+2,w
 21243  01A1  00F1               	movwf	i1___wmul@multiplier+1
 21244  01A2  3034               	movlw	52
 21245  01A3  00F2               	movwf	i1___wmul@multiplicand
 21246  01A4  3000               	movlw	0
 21247  01A5  00F3               	movwf	i1___wmul@multiplicand+1
 21248  01A6  31AF  275A  3180   	fcall	i1___wmul
 21249  01A9  0020               	movlb	0	; select bank0
 21250  01AA  0857               	movf	high_isr@i,w
 21251  01AB  3E03               	addlw	3
 21252  01AC  00C2               	movwf	??_high_isr+3
 21253  01AD  3000               	movlw	0
 21254  01AE  1803               	skipnc
 21255  01AF  3001               	movlw	1
 21256  01B0  00C3               	movwf	??_high_isr+4
 21257  01B1  3088               	movlw	136
 21258  01B2  00C4               	movwf	??_high_isr+5
 21259  01B3  3023               	movlw	35
 21260  01B4  00C5               	movwf	??_high_isr+6
 21261  01B5  0842               	movf	??_high_isr+3,w
 21262  01B6  0744               	addwf	??_high_isr+5,w
 21263  01B7  00C6               	movwf	??_high_isr+7
 21264  01B8  0843               	movf	??_high_isr+4,w
 21265  01B9  3D45               	addwfc	??_high_isr+6,w
 21266  01BA  00C7               	movwf	??_high_isr+8
 21267  01BB  0870               	movf	?i1___wmul,w
 21268  01BC  0746               	addwf	??_high_isr+7,w
 21269  01BD  0084               	movwf	4
 21270  01BE  0871               	movf	?i1___wmul+1,w
 21271  01BF  3D47               	addwfc	??_high_isr+8,w
 21272  01C0  0085               	movwf	5
 21273  01C1  0800               	movf	0,w
 21274  01C2  0601               	xorwf	1,w
 21275  01C3  1903               	skipnz
 21276  01C4  29E7               	goto	i1l7410
 21277                           
 21278                           ;drv_mrf_miwi_89xa.c: 1398: {
 21279                           ;drv_mrf_miwi_89xa.c: 1399: RxPacketPtr = 0;
 21280  01C5  01D3               	clrf	high_isr@RxPacketPtr
 21281                           
 21282                           ;drv_mrf_miwi_89xa.c: 1400: RxPacket[BankIndex].PayloadLen = 0;
 21283  01C6  0856               	movf	high_isr@BankIndex,w
 21284  01C7  00BF               	movwf	??_high_isr
 21285  01C8  01C0               	clrf	??_high_isr+1
 21286  01C9  083F               	movf	??_high_isr,w
 21287  01CA  00F0               	movwf	i1___wmul@multiplier
 21288  01CB  0840               	movf	??_high_isr+1,w
 21289  01CC  00F1               	movwf	i1___wmul@multiplier+1
 21290  01CD  3034               	movlw	52
 21291  01CE  00F2               	movwf	i1___wmul@multiplicand
 21292  01CF  3000               	movlw	0
 21293  01D0  00F3               	movwf	i1___wmul@multiplicand+1
 21294  01D1  31AF  275A  3180   	fcall	i1___wmul
 21295  01D4  0870               	movf	?i1___wmul,w
 21296  01D5  3E33               	addlw	51
 21297  01D6  0020               	movlb	0	; select bank0
 21298  01D7  00C1               	movwf	??_high_isr+2
 21299  01D8  3000               	movlw	0
 21300  01D9  3D71               	addwfc	?i1___wmul+1,w
 21301  01DA  00C2               	movwf	??_high_isr+3
 21302  01DB  3088               	movlw	136
 21303  01DC  00C3               	movwf	??_high_isr+4
 21304  01DD  3023               	movlw	35
 21305  01DE  00C4               	movwf	??_high_isr+5
 21306  01DF  0841               	movf	??_high_isr+2,w
 21307  01E0  0743               	addwf	??_high_isr+4,w
 21308  01E1  0086               	movwf	6
 21309  01E2  0842               	movf	??_high_isr+3,w
 21310  01E3  3D44               	addwfc	??_high_isr+5,w
 21311  01E4  0087               	movwf	7
 21312  01E5  0181               	clrf	1
 21313                           
 21314                           ;drv_mrf_miwi_89xa.c: 1401: goto IGNORE_HERE;
 21315  01E6  286C               	goto	i1l7348
 21316  01E7                     i1l7410:	
 21317  01E7  3001               	movlw	1
 21318  01E8  00BF               	movwf	??_high_isr
 21319  01E9  083F               	movf	??_high_isr,w
 21320  01EA  07D7               	addwf	high_isr@i,f
 21321  01EB  298C               	goto	i1l202
 21322  01EC                     i1l7412:	
 21323                           
 21324                           ;drv_mrf_miwi_89xa.c: 1402: }
 21325                           ;drv_mrf_miwi_89xa.c: 1403: }
 21326                           ;drv_mrf_miwi_89xa.c: 1404: }
 21327                           ;drv_mrf_miwi_89xa.c: 1407: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 21328  01EC  0856               	movf	high_isr@BankIndex,w
 21329  01ED  00BF               	movwf	??_high_isr
 21330  01EE  01C0               	clrf	??_high_isr+1
 21331  01EF  083F               	movf	??_high_isr,w
 21332  01F0  00F0               	movwf	i1___wmul@multiplier
 21333  01F1  0840               	movf	??_high_isr+1,w
 21334  01F2  00F1               	movwf	i1___wmul@multiplier+1
 21335  01F3  3034               	movlw	52
 21336  01F4  00F2               	movwf	i1___wmul@multiplicand
 21337  01F5  3000               	movlw	0
 21338  01F6  00F3               	movwf	i1___wmul@multiplicand+1
 21339  01F7  31AF  275A  3180   	fcall	i1___wmul
 21340  01FA  0870               	movf	?i1___wmul,w
 21341  01FB  3E01               	addlw	1
 21342  01FC  0020               	movlb	0	; select bank0
 21343  01FD  00C1               	movwf	??_high_isr+2
 21344  01FE  3000               	movlw	0
 21345  01FF  3D71               	addwfc	?i1___wmul+1,w
 21346  0200  00C2               	movwf	??_high_isr+3
 21347  0201  3088               	movlw	136
 21348  0202  00C3               	movwf	??_high_isr+4
 21349  0203  3023               	movlw	35
 21350  0204  00C4               	movwf	??_high_isr+5
 21351  0205  0841               	movf	??_high_isr+2,w
 21352  0206  0743               	addwf	??_high_isr+4,w
 21353  0207  0086               	movwf	6
 21354  0208  0842               	movf	??_high_isr+3,w
 21355  0209  3D44               	addwfc	??_high_isr+5,w
 21356  020A  0087               	movwf	7
 21357  020B  1E81               	btfss	1,5
 21358  020C  2A73               	goto	i1l7446
 21359                           
 21360                           ;drv_mrf_miwi_89xa.c: 1408: {
 21361                           ;drv_mrf_miwi_89xa.c: 1410: for(i = 0; i < 2; i++)
 21362  020D  01D7               	clrf	high_isr@i
 21363  020E  3002               	movlw	2
 21364  020F  0257               	subwf	high_isr@i,w
 21365  0210  1803               	btfsc	3,0
 21366  0211  2A27               	goto	i1l7426
 21367  0212                     i1l7420:	
 21368                           
 21369                           ;drv_mrf_miwi_89xa.c: 1411: {
 21370                           ;drv_mrf_miwi_89xa.c: 1412: ackPacket[i] = MACTxBuffer[i];
 21371  0212  0857               	movf	high_isr@i,w
 21372  0213  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 21373  0214  0086               	movwf	6
 21374  0215  3002               	movlw	2	; select bank5/6
 21375  0216  0087               	movwf	7
 21376  0217  0801               	movf	1,w
 21377  0218  00BF               	movwf	??_high_isr
 21378  0219  0857               	movf	high_isr@i,w
 21379  021A  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 21380  021B  0086               	movwf	6
 21381  021C  0187               	clrf	7
 21382  021D  083F               	movf	??_high_isr,w
 21383  021E  0081               	movwf	1
 21384  021F  3001               	movlw	1
 21385  0220  00BF               	movwf	??_high_isr
 21386  0221  083F               	movf	??_high_isr,w
 21387  0222  07D7               	addwf	high_isr@i,f
 21388  0223  3002               	movlw	2
 21389  0224  0257               	subwf	high_isr@i,w
 21390  0225  1C03               	skipc
 21391  0226  2A12               	goto	i1l7420
 21392  0227                     i1l7426:	
 21393                           
 21394                           ;drv_mrf_miwi_89xa.c: 1413: }
 21395                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[0] = 0x02 | 0x04;
 21396  0227  3006               	movlw	6
 21397  0228  00BF               	movwf	??_high_isr
 21398  0229  083F               	movf	??_high_isr,w
 21399  022A  0025               	movlb	5	; select bank5
 21400  022B  00A0               	movwf	_MACTxBuffer^(0+640)	;volatile
 21401                           
 21402                           ;drv_mrf_miwi_89xa.c: 1415: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 21403  022C  0020               	movlb	0	; select bank0
 21404  022D  0856               	movf	high_isr@BankIndex,w
 21405  022E  00BF               	movwf	??_high_isr
 21406  022F  01C0               	clrf	??_high_isr+1
 21407  0230  083F               	movf	??_high_isr,w
 21408  0231  00F0               	movwf	i1___wmul@multiplier
 21409  0232  0840               	movf	??_high_isr+1,w
 21410  0233  00F1               	movwf	i1___wmul@multiplier+1
 21411  0234  3034               	movlw	52
 21412  0235  00F2               	movwf	i1___wmul@multiplicand
 21413  0236  3000               	movlw	0
 21414  0237  00F3               	movwf	i1___wmul@multiplicand+1
 21415  0238  31AF  275A  3180   	fcall	i1___wmul
 21416  023B  0870               	movf	?i1___wmul,w
 21417  023C  3E02               	addlw	2
 21418  023D  0020               	movlb	0	; select bank0
 21419  023E  00C1               	movwf	??_high_isr+2
 21420  023F  3000               	movlw	0
 21421  0240  3D71               	addwfc	?i1___wmul+1,w
 21422  0241  00C2               	movwf	??_high_isr+3
 21423  0242  3088               	movlw	136
 21424  0243  00C3               	movwf	??_high_isr+4
 21425  0244  3023               	movlw	35
 21426  0245  00C4               	movwf	??_high_isr+5
 21427  0246  0841               	movf	??_high_isr+2,w
 21428  0247  0743               	addwf	??_high_isr+4,w
 21429  0248  0086               	movwf	6
 21430  0249  0842               	movf	??_high_isr+3,w
 21431  024A  3D44               	addwfc	??_high_isr+5,w
 21432  024B  0087               	movwf	7
 21433  024C  0801               	movf	1,w
 21434  024D  00C5               	movwf	??_high_isr+6
 21435  024E  0845               	movf	??_high_isr+6,w
 21436  024F  0025               	movlb	5	; select bank5
 21437  0250  00A1               	movwf	(_MACTxBuffer^(0+640)+1)	;volatile
 21438                           
 21439                           ;drv_mrf_miwi_89xa.c: 1416: IOCBFbits.IOCBF3 = 0;
 21440  0251  0027               	movlb	7	; select bank7
 21441  0252  1196               	bcf	22,3	;volatile
 21442                           
 21443                           ;drv_mrf_miwi_89xa.c: 1417: TxPacket(2, 0);
 21444  0253  01FC               	clrf	i1TxPacket@CCA
 21445  0254  3002               	movlw	2
 21446  0255  319B  23FB  3180   	fcall	i1_TxPacket
 21447                           
 21448                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 2; i++)
 21449  0258  0020               	movlb	0	; select bank0
 21450  0259  01D7               	clrf	high_isr@i
 21451  025A  3002               	movlw	2
 21452  025B  0257               	subwf	high_isr@i,w
 21453  025C  1803               	btfsc	3,0
 21454  025D  2A73               	goto	i1l7446
 21455  025E                     i1l7440:	
 21456                           
 21457                           ;drv_mrf_miwi_89xa.c: 1421: {
 21458                           ;drv_mrf_miwi_89xa.c: 1422: MACTxBuffer[i] = ackPacket[i];
 21459  025E  0857               	movf	high_isr@i,w
 21460  025F  3E4E               	addlw	(low (high_isr@ackPacket| 0))& (0+255)
 21461  0260  0086               	movwf	6
 21462  0261  0187               	clrf	7
 21463  0262  0801               	movf	1,w
 21464  0263  00BF               	movwf	??_high_isr
 21465  0264  0857               	movf	high_isr@i,w
 21466  0265  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 21467  0266  0086               	movwf	6
 21468  0267  3002               	movlw	2	; select bank5/6
 21469  0268  0087               	movwf	7
 21470  0269  083F               	movf	??_high_isr,w
 21471  026A  0081               	movwf	1
 21472  026B  3001               	movlw	1
 21473  026C  00BF               	movwf	??_high_isr
 21474  026D  083F               	movf	??_high_isr,w
 21475  026E  07D7               	addwf	high_isr@i,f
 21476  026F  3002               	movlw	2
 21477  0270  0257               	subwf	high_isr@i,w
 21478  0271  1C03               	skipc
 21479  0272  2A5E               	goto	i1l7440
 21480  0273                     i1l7446:	
 21481                           
 21482                           ;drv_mrf_miwi_89xa.c: 1423: }
 21483                           ;drv_mrf_miwi_89xa.c: 1424: }
 21484                           ;drv_mrf_miwi_89xa.c: 1428: for(i = 0; i < 5; i++)
 21485  0273  01D7               	clrf	high_isr@i
 21486  0274  3005               	movlw	5
 21487  0275  0257               	subwf	high_isr@i,w
 21488  0276  1803               	btfsc	3,0
 21489  0277  2AF3               	goto	i1l7468
 21490  0278                     i1l7452:	
 21491                           
 21492                           ;drv_mrf_miwi_89xa.c: 1429: {
 21493                           ;drv_mrf_miwi_89xa.c: 1430: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 21494  0278  3006               	movlw	6
 21495  0279  00BF               	movwf	??_high_isr
 21496  027A  083F               	movf	??_high_isr,w
 21497  027B  00F0               	movwf	i1___bmul@multiplicand
 21498  027C  0857               	movf	high_isr@i,w
 21499  027D  31AE  263F  3180   	fcall	i1___bmul
 21500  0280  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21501  0281  0086               	movwf	6
 21502  0282  3002               	movlw	2	; select bank4/5
 21503  0283  0087               	movwf	7
 21504  0284  0801               	movf	1,w
 21505  0285  1903               	btfsc	3,2
 21506  0286  2AD2               	goto	i1l7458
 21507  0287  0020               	movlb	0	; select bank0
 21508  0288  0856               	movf	high_isr@BankIndex,w
 21509  0289  00BF               	movwf	??_high_isr
 21510  028A  01C0               	clrf	??_high_isr+1
 21511  028B  083F               	movf	??_high_isr,w
 21512  028C  00F0               	movwf	i1___wmul@multiplier
 21513  028D  0840               	movf	??_high_isr+1,w
 21514  028E  00F1               	movwf	i1___wmul@multiplier+1
 21515  028F  3034               	movlw	52
 21516  0290  00F2               	movwf	i1___wmul@multiplicand
 21517  0291  3000               	movlw	0
 21518  0292  00F3               	movwf	i1___wmul@multiplicand+1
 21519  0293  31AF  275A  3180   	fcall	i1___wmul
 21520  0296  0870               	movf	?i1___wmul,w
 21521  0297  3E02               	addlw	2
 21522  0298  0020               	movlb	0	; select bank0
 21523  0299  00C1               	movwf	??_high_isr+2
 21524  029A  3000               	movlw	0
 21525  029B  3D71               	addwfc	?i1___wmul+1,w
 21526  029C  00C2               	movwf	??_high_isr+3
 21527  029D  3088               	movlw	136
 21528  029E  00C3               	movwf	??_high_isr+4
 21529  029F  3023               	movlw	35
 21530  02A0  00C4               	movwf	??_high_isr+5
 21531  02A1  0841               	movf	??_high_isr+2,w
 21532  02A2  0743               	addwf	??_high_isr+4,w
 21533  02A3  0086               	movwf	6
 21534  02A4  0842               	movf	??_high_isr+3,w
 21535  02A5  3D44               	addwfc	??_high_isr+5,w
 21536  02A6  0087               	movwf	7
 21537  02A7  3006               	movlw	6
 21538  02A8  00C5               	movwf	??_high_isr+6
 21539  02A9  0845               	movf	??_high_isr+6,w
 21540  02AA  00F0               	movwf	i1___bmul@multiplicand
 21541  02AB  0857               	movf	high_isr@i,w
 21542  02AC  31AE  263F  3180   	fcall	i1___bmul
 21543  02AF  3E01               	addlw	1
 21544  02B0  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21545  02B1  0084               	movwf	4
 21546  02B2  3002               	movlw	2	; select bank4/5
 21547  02B3  0085               	movwf	5
 21548  02B4  0800               	movf	0,w
 21549  02B5  0601               	xorwf	1,w
 21550  02B6  1D03               	skipz
 21551  02B7  2AD2               	goto	i1l7458
 21552                           
 21553                           ;drv_mrf_miwi_89xa.c: 1431: {
 21554                           ;drv_mrf_miwi_89xa.c: 1432: AckInfo[i].startTick = MiWi_TickGet();
 21555  02B8  3006               	movlw	6
 21556  02B9  0020               	movlb	0	; select bank0
 21557  02BA  00BF               	movwf	??_high_isr
 21558  02BB  083F               	movf	??_high_isr,w
 21559  02BC  00F0               	movwf	i1___bmul@multiplicand
 21560  02BD  0857               	movf	high_isr@i,w
 21561  02BE  31AE  263F  3180   	fcall	i1___bmul
 21562  02C1  3E02               	addlw	2
 21563  02C2  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21564  02C3  0086               	movwf	6
 21565  02C4  3002               	movlw	2	; select bank4/5
 21566  02C5  0087               	movwf	7
 21567  02C6  31A3  23D6  3180   	fcall	i1_MiWi_TickGet
 21568  02C9  0870               	movf	?i1_MiWi_TickGet,w
 21569  02CA  3FC0               	movwi [0]fsr1
 21570  02CB  0871               	movf	?i1_MiWi_TickGet+1,w
 21571  02CC  3FC1               	movwi [1]fsr1
 21572  02CD  0872               	movf	?i1_MiWi_TickGet+2,w
 21573  02CE  3FC2               	movwi [2]fsr1
 21574  02CF  0873               	movf	?i1_MiWi_TickGet+3,w
 21575  02D0  3FC3               	movwi [3]fsr1
 21576                           
 21577                           ;drv_mrf_miwi_89xa.c: 1433: break;
 21578  02D1  2AF3               	goto	i1l7468
 21579  02D2                     i1l7458:	
 21580                           
 21581                           ;drv_mrf_miwi_89xa.c: 1434: }
 21582                           ;drv_mrf_miwi_89xa.c: 1435: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 21583  02D2  0020               	movlb	0	; select bank0
 21584  02D3  0A54               	incf	high_isr@ackInfoIndex,w
 21585  02D4  1D03               	btfss	3,2
 21586  02D5  2AEA               	goto	i1l7464
 21587  02D6  3006               	movlw	6
 21588  02D7  00BF               	movwf	??_high_isr
 21589  02D8  083F               	movf	??_high_isr,w
 21590  02D9  00F0               	movwf	i1___bmul@multiplicand
 21591  02DA  0857               	movf	high_isr@i,w
 21592  02DB  31AE  263F  3180   	fcall	i1___bmul
 21593  02DE  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21594  02DF  0086               	movwf	6
 21595  02E0  3002               	movlw	2	; select bank4/5
 21596  02E1  0087               	movwf	7
 21597  02E2  0801               	movf	1,w
 21598  02E3  1D03               	btfss	3,2
 21599  02E4  2AEA               	goto	i1l7464
 21600                           
 21601                           ;drv_mrf_miwi_89xa.c: 1436: {
 21602                           ;drv_mrf_miwi_89xa.c: 1437: ackInfoIndex = i;
 21603  02E5  0020               	movlb	0	; select bank0
 21604  02E6  0857               	movf	high_isr@i,w
 21605  02E7  00BF               	movwf	??_high_isr
 21606  02E8  083F               	movf	??_high_isr,w
 21607  02E9  00D4               	movwf	high_isr@ackInfoIndex
 21608  02EA                     i1l7464:	
 21609  02EA  3001               	movlw	1
 21610  02EB  0020               	movlb	0	; select bank0
 21611  02EC  00BF               	movwf	??_high_isr
 21612  02ED  083F               	movf	??_high_isr,w
 21613  02EE  07D7               	addwf	high_isr@i,f
 21614  02EF  3005               	movlw	5
 21615  02F0  0257               	subwf	high_isr@i,w
 21616  02F1  1C03               	skipc
 21617  02F2  2A78               	goto	i1l7452
 21618  02F3                     i1l7468:	
 21619                           
 21620                           ;drv_mrf_miwi_89xa.c: 1438: }
 21621                           ;drv_mrf_miwi_89xa.c: 1439: }
 21622                           ;drv_mrf_miwi_89xa.c: 1441: if( i >= 5 )
 21623  02F3  3005               	movlw	5
 21624  02F4  0020               	movlb	0	; select bank0
 21625  02F5  0257               	subwf	high_isr@i,w
 21626  02F6  1C03               	skipc
 21627  02F7  2B74               	goto	i1l7478
 21628                           
 21629                           ;drv_mrf_miwi_89xa.c: 1442: {
 21630                           ;drv_mrf_miwi_89xa.c: 1443: if( ackInfoIndex < 5 )
 21631  02F8  3005               	movlw	5
 21632  02F9  0254               	subwf	high_isr@ackInfoIndex,w
 21633  02FA  1803               	skipnc
 21634  02FB  2B54               	goto	i1l216
 21635                           
 21636                           ;drv_mrf_miwi_89xa.c: 1444: {
 21637                           ;drv_mrf_miwi_89xa.c: 1445: AckInfo[ackInfoIndex].Valid = 1;
 21638  02FC  3006               	movlw	6
 21639  02FD  00BF               	movwf	??_high_isr
 21640  02FE  083F               	movf	??_high_isr,w
 21641  02FF  00F0               	movwf	i1___bmul@multiplicand
 21642  0300  0854               	movf	high_isr@ackInfoIndex,w
 21643  0301  31AE  263F  3180   	fcall	i1___bmul
 21644  0304  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21645  0305  0086               	movwf	6
 21646  0306  3002               	movlw	2	; select bank4/5
 21647  0307  0087               	movwf	7
 21648  0308  0181               	clrf	1
 21649  0309  0A81               	incf	1,f
 21650                           
 21651                           ;drv_mrf_miwi_89xa.c: 1446: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 21652  030A  0020               	movlb	0	; select bank0
 21653  030B  0856               	movf	high_isr@BankIndex,w
 21654  030C  00BF               	movwf	??_high_isr
 21655  030D  01C0               	clrf	??_high_isr+1
 21656  030E  083F               	movf	??_high_isr,w
 21657  030F  00F0               	movwf	i1___wmul@multiplier
 21658  0310  0840               	movf	??_high_isr+1,w
 21659  0311  00F1               	movwf	i1___wmul@multiplier+1
 21660  0312  3034               	movlw	52
 21661  0313  00F2               	movwf	i1___wmul@multiplicand
 21662  0314  3000               	movlw	0
 21663  0315  00F3               	movwf	i1___wmul@multiplicand+1
 21664  0316  31AF  275A  3180   	fcall	i1___wmul
 21665  0319  0870               	movf	?i1___wmul,w
 21666  031A  3E02               	addlw	2
 21667  031B  0020               	movlb	0	; select bank0
 21668  031C  00C1               	movwf	??_high_isr+2
 21669  031D  3000               	movlw	0
 21670  031E  3D71               	addwfc	?i1___wmul+1,w
 21671  031F  00C2               	movwf	??_high_isr+3
 21672  0320  3088               	movlw	136
 21673  0321  00C3               	movwf	??_high_isr+4
 21674  0322  3023               	movlw	35
 21675  0323  00C4               	movwf	??_high_isr+5
 21676  0324  0841               	movf	??_high_isr+2,w
 21677  0325  0743               	addwf	??_high_isr+4,w
 21678  0326  0086               	movwf	6
 21679  0327  0842               	movf	??_high_isr+3,w
 21680  0328  3D44               	addwfc	??_high_isr+5,w
 21681  0329  0087               	movwf	7
 21682  032A  0801               	movf	1,w
 21683  032B  00C5               	movwf	??_high_isr+6
 21684  032C  3006               	movlw	6
 21685  032D  00C6               	movwf	??_high_isr+7
 21686  032E  0846               	movf	??_high_isr+7,w
 21687  032F  00F0               	movwf	i1___bmul@multiplicand
 21688  0330  0854               	movf	high_isr@ackInfoIndex,w
 21689  0331  31AE  263F  3180   	fcall	i1___bmul
 21690  0334  3E01               	addlw	1
 21691  0335  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21692  0336  0086               	movwf	6
 21693  0337  3002               	movlw	2	; select bank4/5
 21694  0338  0087               	movwf	7
 21695  0339  0020               	movlb	0	; select bank0
 21696  033A  0845               	movf	??_high_isr+6,w
 21697  033B  0081               	movwf	1
 21698                           
 21699                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 21700  033C  3006               	movlw	6
 21701  033D  00BF               	movwf	??_high_isr
 21702  033E  083F               	movf	??_high_isr,w
 21703  033F  00F0               	movwf	i1___bmul@multiplicand
 21704  0340  0854               	movf	high_isr@ackInfoIndex,w
 21705  0341  31AE  263F  3180   	fcall	i1___bmul
 21706  0344  3E02               	addlw	2
 21707  0345  3E20               	addlw	(low (_AckInfo| (0+512)))& (0+255)
 21708  0346  0086               	movwf	6
 21709  0347  3002               	movlw	2	; select bank4/5
 21710  0348  0087               	movwf	7
 21711  0349  31A3  23D6  3180   	fcall	i1_MiWi_TickGet
 21712  034C  0870               	movf	?i1_MiWi_TickGet,w
 21713  034D  3FC0               	movwi [0]fsr1
 21714  034E  0871               	movf	?i1_MiWi_TickGet+1,w
 21715  034F  3FC1               	movwi [1]fsr1
 21716  0350  0872               	movf	?i1_MiWi_TickGet+2,w
 21717  0351  3FC2               	movwi [2]fsr1
 21718  0352  0873               	movf	?i1_MiWi_TickGet+3,w
 21719  0353  3FC3               	movwi [3]fsr1
 21720  0354                     i1l216:	
 21721                           
 21722                           ;drv_mrf_miwi_89xa.c: 1448: }
 21723                           ;drv_mrf_miwi_89xa.c: 1451: RxPacket[BankIndex].flags.bits.Valid = 1;
 21724  0354  0020               	movlb	0	; select bank0
 21725  0355  0856               	movf	high_isr@BankIndex,w
 21726  0356  00BF               	movwf	??_high_isr
 21727  0357  01C0               	clrf	??_high_isr+1
 21728  0358  083F               	movf	??_high_isr,w
 21729  0359  00F0               	movwf	i1___wmul@multiplier
 21730  035A  0840               	movf	??_high_isr+1,w
 21731  035B  00F1               	movwf	i1___wmul@multiplier+1
 21732  035C  3034               	movlw	52
 21733  035D  00F2               	movwf	i1___wmul@multiplicand
 21734  035E  3000               	movlw	0
 21735  035F  00F3               	movwf	i1___wmul@multiplicand+1
 21736  0360  31AF  275A  3180   	fcall	i1___wmul
 21737  0363  3088               	movlw	136
 21738  0364  0020               	movlb	0	; select bank0
 21739  0365  00C1               	movwf	??_high_isr+2
 21740  0366  3023               	movlw	35
 21741  0367  00C2               	movwf	??_high_isr+3
 21742  0368  0870               	movf	?i1___wmul,w
 21743  0369  0741               	addwf	??_high_isr+2,w
 21744  036A  0086               	movwf	6
 21745  036B  0871               	movf	?i1___wmul+1,w
 21746  036C  3D42               	addwfc	??_high_isr+3,w
 21747  036D  0087               	movwf	7
 21748  036E  1401               	bsf	1,0
 21749                           
 21750                           ;drv_mrf_miwi_89xa.c: 1452: }
 21751                           ;drv_mrf_miwi_89xa.c: 1459: }
 21752                           ;drv_mrf_miwi_89xa.c: 1460: goto RETURN_HERE;
 21753  036F  2B74               	goto	i1l7478
 21754  0370                     i1l7476:	
 21755                           ;drv_mrf_miwi_89xa.c: 1461: }
 21756                           ;drv_mrf_miwi_89xa.c: 1463: }
 21757                           ;drv_mrf_miwi_89xa.c: 1464: }
 21758                           ;drv_mrf_miwi_89xa.c: 1465: }
 21759                           
 21760                           
 21761                           ;drv_mrf_miwi_89xa.c: 1466: else
 21762                           ;drv_mrf_miwi_89xa.c: 1467: {
 21763                           ;drv_mrf_miwi_89xa.c: 1469: IRQ1_Received = 1;
 21764  0370  3001               	movlw	1
 21765  0371  00BF               	movwf	??_high_isr
 21766  0372  083F               	movf	??_high_isr,w
 21767  0373  00DC               	movwf	_IRQ1_Received	;volatile
 21768  0374                     i1l7478:	
 21769                           ;drv_mrf_miwi_89xa.c: 1470: }
 21770                           ;drv_mrf_miwi_89xa.c: 1472: RETURN_HERE:
 21771                           
 21772                           
 21773                           ;drv_mrf_miwi_89xa.c: 1473: IOCBFbits.IOCBF3 = 0;
 21774  0374  0027               	movlb	7	; select bank7
 21775  0375  1196               	bcf	22,3	;volatile
 21776                           
 21777                           ;drv_mrf_miwi_89xa.c: 1475: __nop();
 21778  0376  0000               	nop
 21779  0377                     i1l7482:	
 21780                           
 21781                           ;drv_mrf_miwi_89xa.c: 1476: }
 21782                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 21783  0377  0020               	movlb	0	; select bank0
 21784  0378  1C11               	btfss	17,0	;volatile
 21785  0379  2B8A               	goto	i1l7492
 21786                           
 21787                           ;drv_mrf_miwi_89xa.c: 1497: {
 21788                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 21789  037A  0021               	movlb	1	; select bank1
 21790  037B  1C11               	btfss	17,0	;volatile
 21791  037C  2B8A               	goto	i1l7492
 21792                           
 21793                           ;drv_mrf_miwi_89xa.c: 1499: {
 21794                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 21795  037D  0020               	movlb	0	; select bank0
 21796  037E  1011               	bcf	17,0	;volatile
 21797                           
 21798                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 21799  037F  3001               	movlw	1
 21800  0380  00BF               	movwf	??_high_isr
 21801  0381  083F               	movf	??_high_isr,w
 21802  0382  07E8               	addwf	_timerExtension1,f	;volatile
 21803                           
 21804                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 21805  0383  0868               	movf	_timerExtension1,w	;volatile
 21806  0384  1D03               	btfss	3,2
 21807  0385  2B8A               	goto	i1l7492
 21808                           
 21809                           ;drv_mrf_miwi_89xa.c: 1504: {
 21810                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 21811  0386  3001               	movlw	1
 21812  0387  00BF               	movwf	??_high_isr
 21813  0388  083F               	movf	??_high_isr,w
 21814  0389  07FD               	addwf	_timerExtension2,f	;volatile
 21815  038A                     i1l7492:	
 21816                           
 21817                           ;drv_mrf_miwi_89xa.c: 1506: }
 21818                           ;drv_mrf_miwi_89xa.c: 1507: }
 21819                           ;drv_mrf_miwi_89xa.c: 1508: }
 21820                           ;drv_mrf_miwi_89xa.c: 1510: UserInterruptHandler();
 21821  038A  31AD  25A1         	fcall	_UserInterruptHandler
 21822                           
 21823                           ;drv_mrf_miwi_89xa.c: 1512: return;
 21824  038C  0020               	movlb	0	; select bank0
 21825  038D  084A               	movf	??_high_isr+11,w
 21826  038E  00FF               	movwf	127
 21827  038F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21828  0390  0009               	retfie
 21829  0391                     __end_of_high_isr:	
 21830                           
 21831                           	psect	text82
 21832  2F5A                     __ptext82:	
 21833 ;; *************** function i1___wmul *****************
 21834 ;; Defined at:
 21835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 21836 ;; Parameters:    Size  Location     Type
 21837 ;;  multiplier      2    0[COMMON] unsigned int 
 21838 ;;  multiplicand    2    2[COMMON] unsigned int 
 21839 ;; Auto vars:     Size  Location     Type
 21840 ;;  __wmul          2    4[COMMON] unsigned int 
 21841 ;; Return value:  Size  Location     Type
 21842 ;;                  2    0[COMMON] unsigned int 
 21843 ;; Registers used:
 21844 ;;		wreg, status,2, status,0
 21845 ;; Tracked objects:
 21846 ;;		On entry : 0/0
 21847 ;;		On exit  : 0/0
 21848 ;;		Unchanged: 0/0
 21849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21854 ;;Total ram usage:        6 bytes
 21855 ;; Hardware stack levels used:    1
 21856 ;; This function calls:
 21857 ;;		Nothing
 21858 ;; This function is called by:
 21859 ;;		_high_isr
 21860 ;; This function uses a non-reentrant model
 21861 ;;
 21862                           
 21863                           
 21864                           ;psect for function i1___wmul
 21865  2F5A                     i1___wmul:	
 21866                           
 21867                           ;incstack = 0
 21868                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 21869  2F5A  01F4               	clrf	i1___wmul@product
 21870  2F5B  01F5               	clrf	i1___wmul@product+1
 21871  2F5C                     i1l7266:	
 21872  2F5C  1C70               	btfss	i1___wmul@multiplier,0
 21873  2F5D  2F62               	goto	i1l1271
 21874  2F5E  0872               	movf	i1___wmul@multiplicand,w
 21875  2F5F  07F4               	addwf	i1___wmul@product,f
 21876  2F60  0873               	movf	i1___wmul@multiplicand+1,w
 21877  2F61  3DF5               	addwfc	i1___wmul@product+1,f
 21878  2F62                     i1l1271:	
 21879  2F62  3001               	movlw	1
 21880  2F63                     u711_25:	
 21881  2F63  35F2               	lslf	i1___wmul@multiplicand,f
 21882  2F64  0DF3               	rlf	i1___wmul@multiplicand+1,f
 21883  2F65  0B89               	decfsz	9,f
 21884  2F66  2F63               	goto	u711_25
 21885  2F67  3001               	movlw	1
 21886  2F68                     u712_25:	
 21887  2F68  36F1               	lsrf	i1___wmul@multiplier+1,f
 21888  2F69  0CF0               	rrf	i1___wmul@multiplier,f
 21889  2F6A  0B89               	decfsz	9,f
 21890  2F6B  2F68               	goto	u712_25
 21891  2F6C  0870               	movf	i1___wmul@multiplier,w
 21892  2F6D  0471               	iorwf	i1___wmul@multiplier+1,w
 21893  2F6E  1D03               	btfss	3,2
 21894  2F6F  2F5C               	goto	i1l7266
 21895  2F70  0875               	movf	i1___wmul@product+1,w
 21896  2F71  00F1               	movwf	?i1___wmul+1
 21897  2F72  0874               	movf	i1___wmul@product,w
 21898  2F73  00F0               	movwf	?i1___wmul
 21899  2F74  0008               	return
 21900  2F75                     __end_ofi1___wmul:	
 21901                           
 21902                           	psect	text83
 21903  2E3F                     __ptext83:	
 21904 ;; *************** function i1___bmul *****************
 21905 ;; Defined at:
 21906 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 21907 ;; Parameters:    Size  Location     Type
 21908 ;;  multiplier      1    wreg     unsigned char 
 21909 ;;  multiplicand    1    0[COMMON] unsigned char 
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;  multiplier      1    2[COMMON] unsigned char 
 21912 ;;  __bmul          1    3[COMMON] unsigned char 
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      unsigned char 
 21915 ;; Registers used:
 21916 ;;		wreg, status,2, status,0
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21922 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21926 ;;Total ram usage:        4 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; This function calls:
 21929 ;;		Nothing
 21930 ;; This function is called by:
 21931 ;;		_high_isr
 21932 ;; This function uses a non-reentrant model
 21933 ;;
 21934                           
 21935                           
 21936                           ;psect for function i1___bmul
 21937  2E3F                     i1___bmul:	
 21938                           
 21939                           ;incstack = 0
 21940                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 21941                           ;i1___bmul@multiplier stored from wreg
 21942  2E3F  00F2               	movwf	i1___bmul@multiplier
 21943  2E40  01F3               	clrf	i1___bmul@product
 21944  2E41                     i1l7280:	
 21945  2E41  1C72               	btfss	i1___bmul@multiplier,0
 21946  2E42  2E47               	goto	i1l7284
 21947  2E43  0870               	movf	i1___bmul@multiplicand,w
 21948  2E44  00F1               	movwf	??i1___bmul
 21949  2E45  0871               	movf	??i1___bmul,w
 21950  2E46  07F3               	addwf	i1___bmul@product,f
 21951  2E47                     i1l7284:	
 21952  2E47  1003               	clrc
 21953  2E48  0DF0               	rlf	i1___bmul@multiplicand,f
 21954  2E49  1003               	clrc
 21955  2E4A  0CF2               	rrf	i1___bmul@multiplier,f
 21956  2E4B  0872               	movf	i1___bmul@multiplier,w
 21957  2E4C  1D03               	btfss	3,2
 21958  2E4D  2E41               	goto	i1l7280
 21959  2E4E  0873               	movf	i1___bmul@product,w
 21960  2E4F  0008               	return
 21961  2E50                     __end_ofi1___bmul:	
 21962                           
 21963                           	psect	text84
 21964  1BFB                     __ptext84:	
 21965 ;; *************** function i1_TxPacket *****************
 21966 ;; Defined at:
 21967 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 21968 ;; Parameters:    Size  Location     Type
 21969 ;;  TxPacketLen     1    wreg     unsigned char 
 21970 ;;  CCA             1   12[COMMON] unsigned char 
 21971 ;; Auto vars:     Size  Location     Type
 21972 ;;  TxPacketLen     1   16[BANK0 ] unsigned char 
 21973 ;;  TxPacket        4   22[BANK0 ] struct _MIWI_TICK
 21974 ;;  TxPacket        4   18[BANK0 ] struct _MIWI_TICK
 21975 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 21976 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 21977 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 21978 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 21979 ;;  TxPacket        1   26[BANK0 ] unsigned char 
 21980 ;;  TxPacket        1   17[BANK0 ] unsigned char 
 21981 ;; Return value:  Size  Location     Type
 21982 ;;                  1    wreg      unsigned char 
 21983 ;; Registers used:
 21984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21985 ;; Tracked objects:
 21986 ;;		On entry : 0/0
 21987 ;;		On exit  : 0/0
 21988 ;;		Unchanged: 0/0
 21989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21991 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21992 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21993 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21994 ;;Total ram usage:       24 bytes
 21995 ;; Hardware stack levels used:    1
 21996 ;; Hardware stack levels required when called:    3
 21997 ;; This function calls:
 21998 ;;		i1_DELAY_10us
 21999 ;;		i1_MiWi_TickGet
 22000 ;;		i1_RegisterRead
 22001 ;;		i1_RegisterSet
 22002 ;;		i1_SetRFMode
 22003 ;;		i1_WriteFIFO
 22004 ;; This function is called by:
 22005 ;;		_high_isr
 22006 ;; This function uses a non-reentrant model
 22007 ;;
 22008                           
 22009                           
 22010                           ;psect for function i1_TxPacket
 22011  1BFB                     i1_TxPacket:	
 22012                           
 22013                           ;incstack = 0
 22014                           ; Regs used in i1_TxPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22015                           ;i1TxPacket@TxPacketLen stored from wreg
 22016  1BFB  0020               	movlb	0	; select bank0
 22017  1BFC  00B0               	movwf	i1TxPacket@TxPacketLen
 22018                           
 22019                           ;drv_mrf_miwi_89xa.c: 290: __nop();
 22020  1BFD  0000               	nop
 22021                           
 22022                           ;drv_mrf_miwi_89xa.c: 291: bool status;
 22023                           ;drv_mrf_miwi_89xa.c: 292: uint8_t i;
 22024                           ;drv_mrf_miwi_89xa.c: 293: MIWI_TICK t1, t2;
 22025                           ;drv_mrf_miwi_89xa.c: 295: uint8_t CCARetries;
 22026                           ;drv_mrf_miwi_89xa.c: 296: uint8_t rssival;
 22027                           ;drv_mrf_miwi_89xa.c: 300: uint8_t reTry = 3;
 22028  1BFE  3003               	movlw	3
 22029  1BFF  0020               	movlb	0	; select bank0
 22030  1C00  00A8               	movwf	??i1_TxPacket
 22031  1C01  0828               	movf	??i1_TxPacket,w
 22032  1C02  00BB               	movwf	i1TxPacket@reTry
 22033  1C03                     i1l7258:	
 22034                           ;drv_mrf_miwi_89xa.c: 304: while( reTry-- )
 22035                           
 22036  1C03  3001               	movlw	1
 22037  1C04  02BB               	subwf	i1TxPacket@reTry,f
 22038  1C05  0A3B               	incf	i1TxPacket@reTry,w
 22039  1C06  1903               	btfsc	3,2
 22040  1C07  2CCA               	goto	i1l7260
 22041                           
 22042                           ;drv_mrf_miwi_89xa.c: 306: {
 22043                           ;drv_mrf_miwi_89xa.c: 307: uint8_t allowedTxFailure;
 22044                           ;drv_mrf_miwi_89xa.c: 308: allowedTxFailure = 0;
 22045  1C08  01BC               	clrf	i1TxPacket@allowedTxFailure
 22046  1C09                     i1l87:	
 22047                           ;drv_mrf_miwi_89xa.c: 310: Start_Transmitting:
 22048                           
 22049                           
 22050                           ;drv_mrf_miwi_89xa.c: 313: hasAck = 0;
 22051  1C09  01E5               	clrf	_hasAck	;volatile
 22052                           
 22053                           ;drv_mrf_miwi_89xa.c: 317: CCARetries = 0;
 22054  1C0A  01BA               	clrf	i1TxPacket@CCARetries
 22055                           
 22056                           ;drv_mrf_miwi_89xa.c: 319: if( CCA )
 22057  1C0B  087C               	movf	i1TxPacket@CCA,w
 22058  1C0C  1D03               	btfss	3,2
 22059  1C0D  2C21               	goto	i1l7198
 22060  1C0E  2C31               	goto	i1l88
 22061  1C0F                     i1l7204:	
 22062                           
 22063                           ;drv_mrf_miwi_89xa.c: 327: {
 22064                           ;drv_mrf_miwi_89xa.c: 328: if(CCARetries++ > 4 )
 22065  1C0F  083A               	movf	i1TxPacket@CCARetries,w
 22066  1C10  0ABA               	incf	i1TxPacket@CCARetries,f
 22067  1C11  00A8               	movwf	??i1_TxPacket
 22068  1C12  3005               	movlw	5
 22069  1C13  0228               	subwf	??i1_TxPacket,w
 22070  1C14  1803               	btfsc	3,0
 22071  1C15  0008               	return
 22072                           
 22073                           ;drv_mrf_miwi_89xa.c: 332: }
 22074                           ;drv_mrf_miwi_89xa.c: 333: DELAY_10us(1);
 22075                           
 22076                           ;drv_mrf_miwi_89xa.c: 329: {
 22077                           ;drv_mrf_miwi_89xa.c: 330: return 0;
 22078                           ;	Return value of i1_TxPacket is never used
 22079  1C16  3000               	movlw	0
 22080  1C17  00A3               	movwf	i1DELAY_10us@tenMicroSecondCounter+3
 22081  1C18  3000               	movlw	0
 22082  1C19  00A2               	movwf	i1DELAY_10us@tenMicroSecondCounter+2
 22083  1C1A  3000               	movlw	0
 22084  1C1B  00A1               	movwf	i1DELAY_10us@tenMicroSecondCounter+1
 22085  1C1C  3001               	movlw	1
 22086  1C1D  00A0               	movwf	i1DELAY_10us@tenMicroSecondCounter
 22087  1C1E  31AF  273F  319B   	fcall	i1_DELAY_10us
 22088  1C21                     i1l7198:	
 22089                           ;drv_mrf_miwi_89xa.c: 320: {
 22090                           ;drv_mrf_miwi_89xa.c: 322: Start_CCA:
 22091                           
 22092                           ;drv_mrf_miwi_89xa.c: 334: goto Start_CCA;
 22093                           
 22094                           
 22095                           ;drv_mrf_miwi_89xa.c: 323: rssival = RegisterRead(0x2800>>8);
 22096  1C21  3028               	movlw	40
 22097  1C22  31A0  2080  319B   	fcall	i1_RegisterRead
 22098  1C25  0020               	movlb	0	; select bank0
 22099  1C26  00A8               	movwf	??i1_TxPacket
 22100  1C27  0828               	movf	??i1_TxPacket,w
 22101  1C28  00BE               	movwf	i1TxPacket@rssival
 22102                           
 22103                           ;drv_mrf_miwi_89xa.c: 324: rssival = (rssival>>1);
 22104  1C29  363E               	lsrf	i1TxPacket@rssival,w
 22105  1C2A  00A8               	movwf	??i1_TxPacket
 22106  1C2B  0828               	movf	??i1_TxPacket,w
 22107  1C2C  00BE               	movwf	i1TxPacket@rssival
 22108                           
 22109                           ;drv_mrf_miwi_89xa.c: 326: if( rssival > 65 )
 22110  1C2D  3042               	movlw	66
 22111  1C2E  023E               	subwf	i1TxPacket@rssival,w
 22112  1C2F  1803               	btfsc	3,0
 22113  1C30  2C0F               	goto	i1l7204
 22114  1C31                     i1l88:	
 22115                           
 22116                           ;drv_mrf_miwi_89xa.c: 335: }
 22117                           ;drv_mrf_miwi_89xa.c: 336: }
 22118                           ;drv_mrf_miwi_89xa.c: 343: INTCONbits.IOCIE = 0;
 22119  1C31  118B               	bcf	11,3	;volatile
 22120                           
 22121                           ;drv_mrf_miwi_89xa.c: 344: SetRFMode(0x20);
 22122  1C32  3020               	movlw	32
 22123  1C33  31A5  25BE  319B   	fcall	i1_SetRFMode
 22124                           
 22125                           ;drv_mrf_miwi_89xa.c: 345: RegisterSet(0x1A00 | (0xC8) | 0x01);
 22126  1C36  30C9               	movlw	201
 22127  1C37  00F3               	movwf	i1RegisterSet@setting
 22128  1C38  301A               	movlw	26
 22129  1C39  00F4               	movwf	i1RegisterSet@setting+1
 22130  1C3A  31AE  269A  319B   	fcall	i1_RegisterSet
 22131                           
 22132                           ;drv_mrf_miwi_89xa.c: 346: WriteFIFO(TxPacketLen);
 22133  1C3D  0020               	movlb	0	; select bank0
 22134  1C3E  0830               	movf	i1TxPacket@TxPacketLen,w
 22135  1C3F  31AE  2674  319B   	fcall	i1_WriteFIFO
 22136                           
 22137                           ;drv_mrf_miwi_89xa.c: 347: for(i=0; i< TxPacketLen; i++)
 22138  1C42  0020               	movlb	0	; select bank0
 22139  1C43  01BD               	clrf	i1TxPacket@i
 22140  1C44                     i1l7222:	
 22141  1C44  0830               	movf	i1TxPacket@TxPacketLen,w
 22142  1C45  023D               	subwf	i1TxPacket@i,w
 22143  1C46  1803               	btfsc	3,0
 22144  1C47  2C57               	goto	i1l7224
 22145                           
 22146                           ;drv_mrf_miwi_89xa.c: 348: {
 22147                           ;drv_mrf_miwi_89xa.c: 349: WriteFIFO(MACTxBuffer[i]);
 22148  1C48  083D               	movf	i1TxPacket@i,w
 22149  1C49  3EA0               	addlw	(low (_MACTxBuffer| (0+512)))& (0+255)
 22150  1C4A  0086               	movwf	6
 22151  1C4B  3002               	movlw	2	; select bank5/6
 22152  1C4C  0087               	movwf	7
 22153  1C4D  0801               	movf	1,w
 22154  1C4E  31AE  2674  319B   	fcall	i1_WriteFIFO
 22155  1C51  3001               	movlw	1
 22156  1C52  0020               	movlb	0	; select bank0
 22157  1C53  00A8               	movwf	??i1_TxPacket
 22158  1C54  0828               	movf	??i1_TxPacket,w
 22159  1C55  07BD               	addwf	i1TxPacket@i,f
 22160  1C56  2C44               	goto	i1l7222
 22161  1C57                     i1l7224:	
 22162                           
 22163                           ;drv_mrf_miwi_89xa.c: 350: }
 22164                           ;drv_mrf_miwi_89xa.c: 351: SetRFMode(0x80);
 22165  1C57  3080               	movlw	128
 22166  1C58  31A5  25BE  319B   	fcall	i1_SetRFMode
 22167                           
 22168                           ;drv_mrf_miwi_89xa.c: 355: INTCONbits.IOCIE = 1;
 22169  1C5B  158B               	bsf	11,3	;volatile
 22170  1C5C                     i1l7228:	
 22171                           ;drv_mrf_miwi_89xa.c: 357: {
 22172                           
 22173                           ;drv_mrf_miwi_89xa.c: 356: while((IRQ1_Received == 0) && (IOCBFbits.IOCBF3 == 0) )
 22174                           
 22175  1C5C  0020               	movlb	0	; select bank0
 22176  1C5D  085C               	movf	_IRQ1_Received,w	;volatile
 22177  1C5E  1D03               	btfss	3,2
 22178  1C5F  2C63               	goto	i1l7232
 22179  1C60  0027               	movlb	7	; select bank7
 22180  1C61  1D96               	btfss	22,3	;volatile
 22181  1C62  2C5C               	goto	i1l7228
 22182  1C63                     i1l7232:	
 22183                           
 22184                           ;drv_mrf_miwi_89xa.c: 359: };
 22185                           ;drv_mrf_miwi_89xa.c: 363: IRQ1_Received = 0;
 22186  1C63  0020               	movlb	0	; select bank0
 22187  1C64  01DC               	clrf	_IRQ1_Received	;volatile
 22188                           
 22189                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x20);
 22190  1C65  3020               	movlw	32
 22191  1C66  31A5  25BE  319B   	fcall	i1_SetRFMode
 22192                           
 22193                           ;drv_mrf_miwi_89xa.c: 365: SetRFMode(0x60);
 22194  1C69  3060               	movlw	96
 22195  1C6A  31A5  25BE  319B   	fcall	i1_SetRFMode
 22196                           
 22197                           ;drv_mrf_miwi_89xa.c: 368: if( (MACTxBuffer[0] & 0x20) > 0 )
 22198  1C6D  0025               	movlb	5	; select bank5
 22199  1C6E  1EA0               	btfss	_MACTxBuffer^(0+640),5	;volatile
 22200  1C6F  2CC6               	goto	i1l101
 22201                           
 22202                           ;drv_mrf_miwi_89xa.c: 369: {
 22203                           ;drv_mrf_miwi_89xa.c: 370: TxMACSeq = MACTxBuffer[1];
 22204  1C70  0821               	movf	(_MACTxBuffer^(0+640)+1),w	;volatile
 22205  1C71  0020               	movlb	0	; select bank0
 22206  1C72  00A8               	movwf	??i1_TxPacket
 22207  1C73  0828               	movf	??i1_TxPacket,w
 22208  1C74  00E4               	movwf	_TxMACSeq
 22209                           
 22210                           ;drv_mrf_miwi_89xa.c: 371: t1 = MiWi_TickGet();
 22211  1C75  31A3  23D6  319B   	fcall	i1_MiWi_TickGet
 22212  1C78  0873               	movf	?i1_MiWi_TickGet+3,w
 22213  1C79  0020               	movlb	0	; select bank0
 22214  1C7A  00B5               	movwf	i1TxPacket@t1+3
 22215  1C7B  0872               	movf	?i1_MiWi_TickGet+2,w
 22216  1C7C  00B4               	movwf	i1TxPacket@t1+2
 22217  1C7D  0871               	movf	?i1_MiWi_TickGet+1,w
 22218  1C7E  00B3               	movwf	i1TxPacket@t1+1
 22219  1C7F  0870               	movf	?i1_MiWi_TickGet,w
 22220  1C80  00B2               	movwf	i1TxPacket@t1
 22221  1C81                     i1l7244:	
 22222                           ;drv_mrf_miwi_89xa.c: 372: while(1)
 22223                           
 22224                           
 22225                           ;drv_mrf_miwi_89xa.c: 373: {
 22226                           ;drv_mrf_miwi_89xa.c: 374: if( hasAck )
 22227  1C81  0865               	movf	_hasAck,w	;volatile
 22228  1C82  1903               	btfsc	3,2
 22229  1C83  2C87               	goto	i1l7248
 22230                           
 22231                           ;drv_mrf_miwi_89xa.c: 375: {
 22232                           ;drv_mrf_miwi_89xa.c: 376: status = 1;
 22233  1C84  01B1               	clrf	i1TxPacket@status
 22234  1C85  0AB1               	incf	i1TxPacket@status,f
 22235                           
 22236                           ;drv_mrf_miwi_89xa.c: 377: goto TX_END_HERE;
 22237  1C86  0008               	return
 22238  1C87                     i1l7248:	
 22239                           
 22240                           ;drv_mrf_miwi_89xa.c: 378: }
 22241                           ;drv_mrf_miwi_89xa.c: 379: t2 = MiWi_TickGet();
 22242  1C87  31A3  23D6  319B   	fcall	i1_MiWi_TickGet
 22243  1C8A  0873               	movf	?i1_MiWi_TickGet+3,w
 22244  1C8B  0020               	movlb	0	; select bank0
 22245  1C8C  00B9               	movwf	i1TxPacket@t2+3
 22246  1C8D  0872               	movf	?i1_MiWi_TickGet+2,w
 22247  1C8E  00B8               	movwf	i1TxPacket@t2+2
 22248  1C8F  0871               	movf	?i1_MiWi_TickGet+1,w
 22249  1C90  00B7               	movwf	i1TxPacket@t2+1
 22250  1C91  0870               	movf	?i1_MiWi_TickGet,w
 22251  1C92  00B6               	movwf	i1TxPacket@t2
 22252                           
 22253                           ;drv_mrf_miwi_89xa.c: 380: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 22254  1C93  0836               	movf	i1TxPacket@t2,w
 22255  1C94  00A8               	movwf	??i1_TxPacket
 22256  1C95  0837               	movf	i1TxPacket@t2+1,w
 22257  1C96  00A9               	movwf	??i1_TxPacket+1
 22258  1C97  0838               	movf	i1TxPacket@t2+2,w
 22259  1C98  00AA               	movwf	??i1_TxPacket+2
 22260  1C99  0839               	movf	i1TxPacket@t2+3,w
 22261  1C9A  00AB               	movwf	??i1_TxPacket+3
 22262  1C9B  0932               	comf	i1TxPacket@t1,w
 22263  1C9C  00AC               	movwf	??i1_TxPacket+4
 22264  1C9D  0933               	comf	i1TxPacket@t1+1,w
 22265  1C9E  00AD               	movwf	??i1_TxPacket+5
 22266  1C9F  0934               	comf	i1TxPacket@t1+2,w
 22267  1CA0  00AE               	movwf	??i1_TxPacket+6
 22268  1CA1  0935               	comf	i1TxPacket@t1+3,w
 22269  1CA2  00AF               	movwf	??i1_TxPacket+7
 22270  1CA3  0AAC               	incf	??i1_TxPacket+4,f
 22271  1CA4  1903               	skipnz
 22272  1CA5  0AAD               	incf	??i1_TxPacket+5,f
 22273  1CA6  1903               	skipnz
 22274  1CA7  0AAE               	incf	??i1_TxPacket+6,f
 22275  1CA8  1903               	skipnz
 22276  1CA9  0AAF               	incf	??i1_TxPacket+7,f
 22277  1CAA  082C               	movf	??i1_TxPacket+4,w
 22278  1CAB  07A8               	addwf	??i1_TxPacket,f
 22279  1CAC  082D               	movf	??i1_TxPacket+5,w
 22280  1CAD  3DA9               	addwfc	??i1_TxPacket+1,f
 22281  1CAE  082E               	movf	??i1_TxPacket+6,w
 22282  1CAF  3DAA               	addwfc	??i1_TxPacket+2,f
 22283  1CB0  082F               	movf	??i1_TxPacket+7,w
 22284  1CB1  3DAB               	addwfc	??i1_TxPacket+3,f
 22285  1CB2  082B               	movf	??i1_TxPacket+3,w
 22286  1CB3  1D03               	btfss	3,2
 22287  1CB4  2CBE               	goto	i1l7254
 22288  1CB5  082A               	movf	??i1_TxPacket+2,w
 22289  1CB6  1D03               	btfss	3,2
 22290  1CB7  2CBE               	goto	i1l7254
 22291  1CB8  300A               	movlw	10
 22292  1CB9  0228               	subwf	??i1_TxPacket,w
 22293  1CBA  303D               	movlw	61
 22294  1CBB  3B29               	subwfb	??i1_TxPacket+1,w
 22295  1CBC  1C03               	btfss	3,0
 22296  1CBD  2C81               	goto	i1l7244
 22297  1CBE                     i1l7254:	
 22298                           ;drv_mrf_miwi_89xa.c: 381: {
 22299                           ;drv_mrf_miwi_89xa.c: 382: break;
 22300                           
 22301                           
 22302                           ;drv_mrf_miwi_89xa.c: 383: }
 22303                           ;drv_mrf_miwi_89xa.c: 384: }
 22304                           ;drv_mrf_miwi_89xa.c: 386: if(allowedTxFailure++ <= 3)
 22305  1CBE  083C               	movf	i1TxPacket@allowedTxFailure,w
 22306  1CBF  0ABC               	incf	i1TxPacket@allowedTxFailure,f
 22307  1CC0  00A8               	movwf	??i1_TxPacket
 22308  1CC1  3004               	movlw	4
 22309  1CC2  0228               	subwf	??i1_TxPacket,w
 22310  1CC3  1C03               	btfss	3,0
 22311  1CC4  2C09               	goto	i1l87
 22312  1CC5  2C03               	goto	i1l7258
 22313  1CC6                     i1l101:	
 22314                           ;drv_mrf_miwi_89xa.c: 389: }
 22315                           
 22316                           ;drv_mrf_miwi_89xa.c: 387: goto Start_Transmitting;
 22317                           
 22318                           
 22319                           ;drv_mrf_miwi_89xa.c: 390: else
 22320                           ;drv_mrf_miwi_89xa.c: 392: {
 22321                           ;drv_mrf_miwi_89xa.c: 393: status = 1;
 22322  1CC6  0020               	movlb	0	; select bank0
 22323  1CC7  01B1               	clrf	i1TxPacket@status
 22324  1CC8  0AB1               	incf	i1TxPacket@status,f
 22325                           
 22326                           ;drv_mrf_miwi_89xa.c: 394: goto TX_END_HERE;
 22327  1CC9  0008               	return
 22328  1CCA                     i1l7260:	
 22329                           
 22330                           ;drv_mrf_miwi_89xa.c: 395: }
 22331                           ;drv_mrf_miwi_89xa.c: 396: }
 22332                           ;drv_mrf_miwi_89xa.c: 398: status = 0;
 22333  1CCA  01B1               	clrf	i1TxPacket@status
 22334                           
 22335                           ;drv_mrf_miwi_89xa.c: 399: TX_END_HERE:
 22336  1CCB  0008               	return
 22337  1CCC                     __end_ofi1_TxPacket:	
 22338                           ;drv_mrf_miwi_89xa.c: 400: return status;
 22339                           ;	Return value of i1_TxPacket is never used
 22340                           
 22341                           
 22342                           	psect	text85
 22343  2E74                     __ptext85:	
 22344 ;; *************** function i1_WriteFIFO *****************
 22345 ;; Defined at:
 22346 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 22347 ;; Parameters:    Size  Location     Type
 22348 ;;  Data            1    wreg     unsigned char 
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  Data            1    3[COMMON] unsigned char 
 22351 ;;  WriteFIFO       1    4[COMMON] unsigned char 
 22352 ;; Return value:  Size  Location     Type
 22353 ;;                  1    wreg      void 
 22354 ;; Registers used:
 22355 ;;		wreg, status,2, status,0, pclath, cstack
 22356 ;; Tracked objects:
 22357 ;;		On entry : 0/0
 22358 ;;		On exit  : 0/0
 22359 ;;		Unchanged: 0/0
 22360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22365 ;;Total ram usage:        2 bytes
 22366 ;; Hardware stack levels used:    1
 22367 ;; Hardware stack levels required when called:    1
 22368 ;; This function calls:
 22369 ;;		i1_SPIPut
 22370 ;; This function is called by:
 22371 ;;		i1_TxPacket
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           
 22376                           ;psect for function i1_WriteFIFO
 22377  2E74                     i1_WriteFIFO:	
 22378                           
 22379                           ;incstack = 0
 22380                           ; Regs used in i1_WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
 22381                           ;i1WriteFIFO@Data stored from wreg
 22382  2E74  00F3               	movwf	i1WriteFIFO@Data
 22383                           
 22384                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCONbits.IOCIE;
 22385  2E75  3000               	movlw	0
 22386  2E76  198B               	btfsc	11,3	;volatile
 22387  2E77  3001               	movlw	1
 22388  2E78  00F4               	movwf	i1WriteFIFO@IRQ1select
 22389                           
 22390                           ;drv_mrf_miwi_89xa.c: 253: INTCONbits.IOCIE = 0;
 22391  2E79  118B               	bcf	11,3	;volatile
 22392                           
 22393                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 22394  2E7A  0022               	movlb	2	; select bank2
 22395  2E7B  110E               	bcf	14,2	;volatile
 22396                           
 22397                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 22398  2E7C  0873               	movf	i1WriteFIFO@Data,w
 22399  2E7D  31AE  2650         	fcall	i1_SPIPut
 22400                           
 22401                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 22402  2E7F  0022               	movlb	2	; select bank2
 22403  2E80  150E               	bsf	14,2	;volatile
 22404                           
 22405                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.IOCIE = IRQ1select;
 22406  2E81  0C74               	rrf	i1WriteFIFO@IRQ1select,w
 22407  2E82  1C03               	skipc
 22408  2E83  118B               	bcf	11,3	;volatile
 22409  2E84  1803               	skipnc
 22410  2E85  158B               	bsf	11,3	;volatile
 22411  2E86  0008               	return
 22412  2E87                     __end_ofi1_WriteFIFO:	
 22413                           
 22414                           	psect	text86
 22415  25BE                     __ptext86:	
 22416 ;; *************** function i1_SetRFMode *****************
 22417 ;; Defined at:
 22418 ;;		line 669 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 22419 ;; Parameters:    Size  Location     Type
 22420 ;;  mode            1    wreg     unsigned char 
 22421 ;; Auto vars:     Size  Location     Type
 22422 ;;  mode            1    7[COMMON] unsigned char 
 22423 ;; Return value:  Size  Location     Type
 22424 ;;                  1    wreg      void 
 22425 ;; Registers used:
 22426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22427 ;; Tracked objects:
 22428 ;;		On entry : 0/0
 22429 ;;		On exit  : 0/0
 22430 ;;		Unchanged: 0/0
 22431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22436 ;;Total ram usage:        2 bytes
 22437 ;; Hardware stack levels used:    1
 22438 ;; Hardware stack levels required when called:    2
 22439 ;; This function calls:
 22440 ;;		i1_RegisterSet
 22441 ;; This function is called by:
 22442 ;;		i1_TxPacket
 22443 ;; This function uses a non-reentrant model
 22444 ;;
 22445                           
 22446                           
 22447                           ;psect for function i1_SetRFMode
 22448  25BE                     i1_SetRFMode:	
 22449                           
 22450                           ;incstack = 0
 22451                           ; Regs used in i1_SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22452                           ;i1SetRFMode@mode stored from wreg
 22453  25BE  00F7               	movwf	i1SetRFMode@mode
 22454                           
 22455                           ;drv_mrf_miwi_89xa.c: 671: switch (mode) {
 22456  25BF  2DF9               	goto	i1l7002
 22457  25C0                     i1l6980:	
 22458                           ;drv_mrf_miwi_89xa.c: 672: case 0x80:
 22459                           
 22460                           
 22461                           ;drv_mrf_miwi_89xa.c: 673: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 22462  25C0  308E               	movlw	142
 22463  25C1  00F3               	movwf	i1RegisterSet@setting
 22464  25C2  3000               	movlw	0
 22465  25C3  00F4               	movwf	i1RegisterSet@setting+1
 22466  25C4  31AE  269A         	fcall	i1_RegisterSet
 22467                           
 22468                           ;drv_mrf_miwi_89xa.c: 674: RF_Mode = 0x80;
 22469  25C6  3080               	movlw	128
 22470  25C7  00F6               	movwf	??i1_SetRFMode
 22471  25C8  0876               	movf	??i1_SetRFMode,w
 22472  25C9  0020               	movlb	0	; select bank0
 22473  25CA  00E0               	movwf	_RF_Mode
 22474                           
 22475                           ;drv_mrf_miwi_89xa.c: 675: break;
 22476  25CB  0008               	return
 22477  25CC                     i1l6984:	
 22478                           ;drv_mrf_miwi_89xa.c: 676: case 0x60:
 22479                           
 22480                           
 22481                           ;drv_mrf_miwi_89xa.c: 677: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 22482  25CC  306E               	movlw	110
 22483  25CD  00F3               	movwf	i1RegisterSet@setting
 22484  25CE  3000               	movlw	0
 22485  25CF  00F4               	movwf	i1RegisterSet@setting+1
 22486  25D0  31AE  269A         	fcall	i1_RegisterSet
 22487                           
 22488                           ;drv_mrf_miwi_89xa.c: 678: RF_Mode = 0x60;
 22489  25D2  3060               	movlw	96
 22490  25D3  00F6               	movwf	??i1_SetRFMode
 22491  25D4  0876               	movf	??i1_SetRFMode,w
 22492  25D5  0020               	movlb	0	; select bank0
 22493  25D6  00E0               	movwf	_RF_Mode
 22494                           
 22495                           ;drv_mrf_miwi_89xa.c: 679: break;
 22496  25D7  0008               	return
 22497  25D8                     i1l6988:	
 22498                           ;drv_mrf_miwi_89xa.c: 680: case 0x40:
 22499                           
 22500                           
 22501                           ;drv_mrf_miwi_89xa.c: 681: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 22502  25D8  304E               	movlw	78
 22503  25D9  00F3               	movwf	i1RegisterSet@setting
 22504  25DA  3000               	movlw	0
 22505  25DB  00F4               	movwf	i1RegisterSet@setting+1
 22506  25DC  31AE  269A         	fcall	i1_RegisterSet
 22507                           
 22508                           ;drv_mrf_miwi_89xa.c: 682: RF_Mode = 0x40;
 22509  25DE  3040               	movlw	64
 22510  25DF  00F6               	movwf	??i1_SetRFMode
 22511  25E0  0876               	movf	??i1_SetRFMode,w
 22512  25E1  0020               	movlb	0	; select bank0
 22513  25E2  00E0               	movwf	_RF_Mode
 22514                           
 22515                           ;drv_mrf_miwi_89xa.c: 683: break;
 22516  25E3  0008               	return
 22517  25E4                     i1l6992:	
 22518                           ;drv_mrf_miwi_89xa.c: 684: case 0x20:
 22519                           
 22520                           
 22521                           ;drv_mrf_miwi_89xa.c: 685: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 22522  25E4  302E               	movlw	46
 22523  25E5  00F3               	movwf	i1RegisterSet@setting
 22524  25E6  3000               	movlw	0
 22525  25E7  00F4               	movwf	i1RegisterSet@setting+1
 22526  25E8  31AE  269A         	fcall	i1_RegisterSet
 22527                           
 22528                           ;drv_mrf_miwi_89xa.c: 686: RF_Mode = 0x20;
 22529  25EA  3020               	movlw	32
 22530  25EB  00F6               	movwf	??i1_SetRFMode
 22531  25EC  0876               	movf	??i1_SetRFMode,w
 22532  25ED  0020               	movlb	0	; select bank0
 22533  25EE  00E0               	movwf	_RF_Mode
 22534                           
 22535                           ;drv_mrf_miwi_89xa.c: 687: break;
 22536  25EF  0008               	return
 22537  25F0                     i1l6996:	
 22538                           ;drv_mrf_miwi_89xa.c: 688: case 0x00:
 22539                           
 22540                           
 22541                           ;drv_mrf_miwi_89xa.c: 689: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 22542  25F0  300E               	movlw	14
 22543  25F1  00F3               	movwf	i1RegisterSet@setting
 22544  25F2  3000               	movlw	0
 22545  25F3  00F4               	movwf	i1RegisterSet@setting+1
 22546  25F4  31AE  269A         	fcall	i1_RegisterSet
 22547                           
 22548                           ;drv_mrf_miwi_89xa.c: 690: RF_Mode = 0x00;
 22549  25F6  0020               	movlb	0	; select bank0
 22550  25F7  01E0               	clrf	_RF_Mode
 22551                           
 22552                           ;drv_mrf_miwi_89xa.c: 692: }
 22553                           
 22554                           ;drv_mrf_miwi_89xa.c: 691: break;
 22555  25F8  0008               	return
 22556  25F9                     i1l7002:	
 22557  25F9  0877               	movf	i1SetRFMode@mode,w
 22558                           
 22559                           ; Switch size 1, requested type "space"
 22560                           ; Number of cases is 5, Range of values is 0 to 128
 22561                           ; switch strategies available:
 22562                           ; Name         Instructions Cycles
 22563                           ; simple_byte           16     9 (average)
 22564                           ; jumptable            260     6 (fixed)
 22565                           ;	Chosen strategy is simple_byte
 22566  25FA  3A00               	xorlw	0	; case 0
 22567  25FB  1903               	skipnz
 22568  25FC  2DF0               	goto	i1l6996
 22569  25FD  3A20               	xorlw	32	; case 32
 22570  25FE  1903               	skipnz
 22571  25FF  2DE4               	goto	i1l6992
 22572  2600  3A60               	xorlw	96	; case 64
 22573  2601  1903               	skipnz
 22574  2602  2DD8               	goto	i1l6988
 22575  2603  3A20               	xorlw	32	; case 96
 22576  2604  1903               	skipnz
 22577  2605  2DCC               	goto	i1l6984
 22578  2606  3AE0               	xorlw	224	; case 128
 22579  2607  1903               	skipnz
 22580  2608  2DC0               	goto	i1l6980
 22581  2609  2E0A               	goto	i1l138
 22582  260A                     i1l138:	
 22583  260A  0008               	return
 22584  260B                     __end_ofi1_SetRFMode:	
 22585                           
 22586                           	psect	text87
 22587  2E9A                     __ptext87:	
 22588 ;; *************** function i1_RegisterSet *****************
 22589 ;; Defined at:
 22590 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 22591 ;; Parameters:    Size  Location     Type
 22592 ;;  setting         2    3[COMMON] unsigned int 
 22593 ;; Auto vars:     Size  Location     Type
 22594 ;;  RegisterSet     1    5[COMMON] unsigned char 
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  1    wreg      void 
 22597 ;; Registers used:
 22598 ;;		wreg, status,2, status,0, pclath, cstack
 22599 ;; Tracked objects:
 22600 ;;		On entry : 0/0
 22601 ;;		On exit  : 0/0
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22608 ;;Total ram usage:        3 bytes
 22609 ;; Hardware stack levels used:    1
 22610 ;; Hardware stack levels required when called:    1
 22611 ;; This function calls:
 22612 ;;		i1_SPIPut
 22613 ;; This function is called by:
 22614 ;;		i1_TxPacket
 22615 ;;		i1_SetRFMode
 22616 ;; This function uses a non-reentrant model
 22617 ;;
 22618                           
 22619                           
 22620                           ;psect for function i1_RegisterSet
 22621  2E9A                     i1_RegisterSet:	
 22622                           
 22623                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCONbits.IOCIE;
 22624                           
 22625                           ;incstack = 0
 22626                           ; Regs used in i1_RegisterSet: [wreg+status,2+status,0+pclath+cstack]
 22627  2E9A  3000               	movlw	0
 22628  2E9B  198B               	btfsc	11,3	;volatile
 22629  2E9C  3001               	movlw	1
 22630  2E9D  00F5               	movwf	i1RegisterSet@IRQ1select
 22631                           
 22632                           ;drv_mrf_miwi_89xa.c: 172: INTCONbits.IOCIE = 0;
 22633  2E9E  118B               	bcf	11,3	;volatile
 22634                           
 22635                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 22636  2E9F  0022               	movlb	2	; select bank2
 22637  2EA0  1190               	bcf	16,3	;volatile
 22638                           
 22639                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 22640  2EA1  0874               	movf	i1RegisterSet@setting+1,w
 22641  2EA2  31AE  2650  31AE   	fcall	i1_SPIPut
 22642                           
 22643                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 22644  2EA5  0873               	movf	i1RegisterSet@setting,w
 22645  2EA6  31AE  2650         	fcall	i1_SPIPut
 22646                           
 22647                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 22648  2EA8  0022               	movlb	2	; select bank2
 22649  2EA9  1590               	bsf	16,3	;volatile
 22650                           
 22651                           ;drv_mrf_miwi_89xa.c: 177: INTCONbits.IOCIE = IRQ1select;
 22652  2EAA  0C75               	rrf	i1RegisterSet@IRQ1select,w
 22653  2EAB  1C03               	skipc
 22654  2EAC  118B               	bcf	11,3	;volatile
 22655  2EAD  1803               	skipnc
 22656  2EAE  158B               	bsf	11,3	;volatile
 22657  2EAF  0008               	return
 22658  2EB0                     __end_ofi1_RegisterSet:	
 22659                           
 22660                           	psect	text88
 22661  2080                     __ptext88:	
 22662 ;; *************** function i1_RegisterRead *****************
 22663 ;; Defined at:
 22664 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 22665 ;; Parameters:    Size  Location     Type
 22666 ;;  address         1    wreg     unsigned char 
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;  address         1    4[COMMON] unsigned char 
 22669 ;;  RegisterRead    1    6[COMMON] unsigned char 
 22670 ;;  RegisterRead    1    5[COMMON] unsigned char 
 22671 ;; Return value:  Size  Location     Type
 22672 ;;                  1    wreg      unsigned char 
 22673 ;; Registers used:
 22674 ;;		wreg, status,2, status,0, pclath, cstack
 22675 ;; Tracked objects:
 22676 ;;		On entry : 0/0
 22677 ;;		On exit  : 0/0
 22678 ;;		Unchanged: 0/0
 22679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22684 ;;Total ram usage:        4 bytes
 22685 ;; Hardware stack levels used:    1
 22686 ;; Hardware stack levels required when called:    2
 22687 ;; This function calls:
 22688 ;;		i1_SPIGet
 22689 ;;		i1_SPIPut
 22690 ;; This function is called by:
 22691 ;;		_high_isr
 22692 ;;		i1_TxPacket
 22693 ;; This function uses a non-reentrant model
 22694 ;;
 22695                           
 22696                           
 22697                           ;psect for function i1_RegisterRead
 22698  2080                     i1_RegisterRead:	
 22699                           
 22700                           ;incstack = 0
 22701                           ; Regs used in i1_RegisterRead: [wreg+status,2+status,0+pclath+cstack]
 22702                           ;i1RegisterRead@address stored from wreg
 22703  2080  00F4               	movwf	i1RegisterRead@address
 22704                           
 22705                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 22706                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCONbits.IOCIE;
 22707  2081  3000               	movlw	0
 22708  2082  198B               	btfsc	11,3	;volatile
 22709  2083  3001               	movlw	1
 22710  2084  00F6               	movwf	i1RegisterRead@IRQ1select
 22711                           
 22712                           ;drv_mrf_miwi_89xa.c: 210: INTCONbits.IOCIE = 0;
 22713  2085  118B               	bcf	11,3	;volatile
 22714                           
 22715                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 22716  2086  0022               	movlb	2	; select bank2
 22717  2087  1190               	bcf	16,3	;volatile
 22718                           
 22719                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 22720  2088  0874               	movf	i1RegisterRead@address,w
 22721  2089  3840               	iorlw	64
 22722  208A  00F3               	movwf	??i1_RegisterRead
 22723  208B  0873               	movf	??i1_RegisterRead,w
 22724  208C  00F4               	movwf	i1RegisterRead@address
 22725                           
 22726                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 22727  208D  0874               	movf	i1RegisterRead@address,w
 22728  208E  31AE  2650  31A0   	fcall	i1_SPIPut
 22729                           
 22730                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 22731  2091  31AD  25AE         	fcall	i1_SPIGet
 22732  2093  00F3               	movwf	??i1_RegisterRead
 22733  2094  0873               	movf	??i1_RegisterRead,w
 22734  2095  00F5               	movwf	i1RegisterRead@value
 22735                           
 22736                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 22737  2096  0022               	movlb	2	; select bank2
 22738  2097  1590               	bsf	16,3	;volatile
 22739                           
 22740                           ;drv_mrf_miwi_89xa.c: 216: INTCONbits.IOCIE = IRQ1select;
 22741  2098  0C76               	rrf	i1RegisterRead@IRQ1select,w
 22742  2099  1C03               	skipc
 22743  209A  118B               	bcf	11,3	;volatile
 22744  209B  1803               	skipnc
 22745  209C  158B               	bsf	11,3	;volatile
 22746                           
 22747                           ;drv_mrf_miwi_89xa.c: 222: return value;
 22748  209D  0875               	movf	i1RegisterRead@value,w
 22749  209E  0008               	return
 22750  209F                     __end_ofi1_RegisterRead:	
 22751                           
 22752                           	psect	text89
 22753  2DAE                     __ptext89:	
 22754 ;; *************** function i1_SPIGet *****************
 22755 ;; Defined at:
 22756 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 22757 ;; Parameters:    Size  Location     Type
 22758 ;;		None
 22759 ;; Auto vars:     Size  Location     Type
 22760 ;;		None
 22761 ;; Return value:  Size  Location     Type
 22762 ;;                  1    wreg      unsigned char 
 22763 ;; Registers used:
 22764 ;;		wreg, status,2, status,0, pclath, cstack
 22765 ;; Tracked objects:
 22766 ;;		On entry : 0/0
 22767 ;;		On exit  : 0/0
 22768 ;;		Unchanged: 0/0
 22769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22774 ;;Total ram usage:        0 bytes
 22775 ;; Hardware stack levels used:    1
 22776 ;; Hardware stack levels required when called:    1
 22777 ;; This function calls:
 22778 ;;		i1_SPIPut
 22779 ;; This function is called by:
 22780 ;;		_high_isr
 22781 ;;		i1_RegisterRead
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785                           
 22786                           ;psect for function i1_SPIGet
 22787  2DAE                     i1_SPIGet:	
 22788                           
 22789                           ;spi.c: 115: SPIPut(0x00);
 22790                           
 22791                           ;incstack = 0
 22792                           ; Regs used in i1_SPIGet: [wreg+status,2+status,0+pclath+cstack]
 22793  2DAE  3000               	movlw	0
 22794  2DAF  31AE  2650         	fcall	i1_SPIPut
 22795                           
 22796                           ;spi.c: 116: return SSP1BUF;
 22797  2DB1  0024               	movlb	4	; select bank4
 22798  2DB2  0811               	movf	17,w	;volatile
 22799  2DB3  0008               	return
 22800  2DB4                     __end_ofi1_SPIGet:	
 22801                           
 22802                           	psect	text90
 22803  2E50                     __ptext90:	
 22804 ;; *************** function i1_SPIPut *****************
 22805 ;; Defined at:
 22806 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_89xa/spi.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;  v               1    wreg     unsigned char 
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;  v               1    2[COMMON] unsigned char 
 22811 ;;  SPIPut          1    1[COMMON] unsigned char 
 22812 ;; Return value:  Size  Location     Type
 22813 ;;                  1    wreg      void 
 22814 ;; Registers used:
 22815 ;;		wreg
 22816 ;; Tracked objects:
 22817 ;;		On entry : 0/0
 22818 ;;		On exit  : 0/0
 22819 ;;		Unchanged: 0/0
 22820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22825 ;;Total ram usage:        3 bytes
 22826 ;; Hardware stack levels used:    1
 22827 ;; This function calls:
 22828 ;;		Nothing
 22829 ;; This function is called by:
 22830 ;;		i1_RegisterSet
 22831 ;;		i1_RegisterRead
 22832 ;;		i1_WriteFIFO
 22833 ;;		i1_SPIGet
 22834 ;; This function uses a non-reentrant model
 22835 ;;
 22836                           
 22837                           
 22838                           ;psect for function i1_SPIPut
 22839  2E50                     i1_SPIPut:	
 22840                           
 22841                           ;incstack = 0
 22842                           ; Regs used in i1_SPIPut: [wreg]
 22843                           ;i1SPIPut@v stored from wreg
 22844  2E50  00F2               	movwf	i1SPIPut@v
 22845                           
 22846                           ;spi.c: 47: uint8_t i;
 22847                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 22848  2E51  0020               	movlb	0	; select bank0
 22849  2E52  1191               	bcf	17,3	;volatile
 22850                           
 22851                           ;spi.c: 64: i = SSP1BUF;
 22852  2E53  0024               	movlb	4	; select bank4
 22853  2E54  0811               	movf	17,w	;volatile
 22854  2E55  00F0               	movwf	??i1_SPIPut
 22855  2E56  0870               	movf	??i1_SPIPut,w
 22856  2E57  00F1               	movwf	i1SPIPut@i
 22857  2E58                     i1l6208:	
 22858                           ;spi.c: 66: do
 22859                           
 22860                           
 22861                           ;spi.c: 67: {
 22862                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 22863  2E58  1395               	bcf	21,7	;volatile
 22864                           
 22865                           ;spi.c: 69: SSP1BUF = v;
 22866  2E59  0872               	movf	i1SPIPut@v,w
 22867  2E5A  0091               	movwf	17	;volatile
 22868                           
 22869                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 22870  2E5B  1B95               	btfsc	21,7	;volatile
 22871  2E5C  2E58               	goto	i1l6208
 22872  2E5D                     i1l720:	
 22873                           ;spi.c: 72: while( PIR1bits.SSP1IF == 0 );
 22874                           
 22875  2E5D  0020               	movlb	0	; select bank0
 22876  2E5E  1D91               	btfss	17,3	;volatile
 22877  2E5F  2E5D               	goto	i1l720
 22878                           
 22879                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 22880  2E60  1191               	bcf	17,3	;volatile
 22881  2E61  0008               	return
 22882  2E62                     __end_ofi1_SPIPut:	
 22883                           
 22884                           	psect	text91
 22885  23D6                     __ptext91:	
 22886 ;; *************** function i1_MiWi_TickGet *****************
 22887 ;; Defined at:
 22888 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_89xa/symbol.c"
 22889 ;; Parameters:    Size  Location     Type
 22890 ;;		None
 22891 ;; Auto vars:     Size  Location     Type
 22892 ;;  MiWi_TickGet    4    7[COMMON] struct _MIWI_TICK
 22893 ;;  MiWi_TickGet    1    6[COMMON] unsigned char 
 22894 ;;  MiWi_TickGet    1    5[COMMON] unsigned char 
 22895 ;; Return value:  Size  Location     Type
 22896 ;;                  4    0[COMMON] struct _MIWI_TICK
 22897 ;; Registers used:
 22898 ;;		wreg, status,2, status,0
 22899 ;; Tracked objects:
 22900 ;;		On entry : 0/0
 22901 ;;		On exit  : 0/0
 22902 ;;		Unchanged: 0/0
 22903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22905 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22907 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22908 ;;Total ram usage:       11 bytes
 22909 ;; Hardware stack levels used:    1
 22910 ;; This function calls:
 22911 ;;		Nothing
 22912 ;; This function is called by:
 22913 ;;		_high_isr
 22914 ;;		i1_TxPacket
 22915 ;; This function uses a non-reentrant model
 22916 ;;
 22917                           
 22918                           
 22919                           ;psect for function i1_MiWi_TickGet
 22920  23D6                     i1_MiWi_TickGet:	
 22921                           
 22922                           ;symbol.c: 108: MIWI_TICK currentTime;
 22923                           ;symbol.c: 109: uint8_t IntFlag1;
 22924                           ;symbol.c: 110: uint8_t IntFlag2;
 22925                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 22926                           
 22927                           ;incstack = 0
 22928                           ; Regs used in i1_MiWi_TickGet: [wreg+status,2+status,0]
 22929  23D6  01F9               	clrf	i1MiWi_TickGet@currentTime+2
 22930                           
 22931                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 22932  23D7  01FA               	clrf	i1MiWi_TickGet@currentTime+3
 22933                           
 22934                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 22935  23D8  0021               	movlb	1	; select bank1
 22936  23D9  1011               	bcf	17,0	;volatile
 22937  23DA                     i1l7022:	
 22938                           ;symbol.c: 119: do
 22939                           
 22940                           
 22941                           ;symbol.c: 120: {
 22942                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 22943  23DA  3000               	movlw	0
 22944  23DB  0020               	movlb	0	; select bank0
 22945  23DC  1811               	btfsc	17,0	;volatile
 22946  23DD  3001               	movlw	1
 22947  23DE  00F6               	movwf	i1MiWi_TickGet@IntFlag1
 22948                           
 22949                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 22950  23DF  0816               	movf	22,w	;volatile
 22951  23E0  00F4               	movwf	??i1_MiWi_TickGet
 22952  23E1  0874               	movf	??i1_MiWi_TickGet,w
 22953  23E2  00F7               	movwf	i1MiWi_TickGet@currentTime
 22954                           
 22955                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 22956  23E3  0817               	movf	23,w	;volatile
 22957  23E4  00F4               	movwf	??i1_MiWi_TickGet
 22958  23E5  0874               	movf	??i1_MiWi_TickGet,w
 22959  23E6  00F8               	movwf	i1MiWi_TickGet@currentTime+1
 22960                           
 22961                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 22962  23E7  3000               	movlw	0
 22963  23E8  1811               	btfsc	17,0	;volatile
 22964  23E9  3001               	movlw	1
 22965  23EA  00F5               	movwf	i1MiWi_TickGet@IntFlag2
 22966                           
 22967                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 22968  23EB  0876               	movf	i1MiWi_TickGet@IntFlag1,w
 22969  23EC  0675               	xorwf	i1MiWi_TickGet@IntFlag2,w
 22970  23ED  1D03               	skipz
 22971  23EE  2BDA               	goto	i1l7022
 22972                           
 22973                           ;symbol.c: 127: if( IntFlag1 > 0 )
 22974  23EF  0876               	movf	i1MiWi_TickGet@IntFlag1,w
 22975  23F0  1903               	btfsc	3,2
 22976  23F1  2BFE               	goto	i1l750
 22977                           
 22978                           ;symbol.c: 128: {
 22979                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 22980  23F2  1011               	bcf	17,0	;volatile
 22981                           
 22982                           ;symbol.c: 130: timerExtension1++;
 22983  23F3  3001               	movlw	1
 22984  23F4  00F4               	movwf	??i1_MiWi_TickGet
 22985  23F5  0874               	movf	??i1_MiWi_TickGet,w
 22986  23F6  07E8               	addwf	_timerExtension1,f	;volatile
 22987                           
 22988                           ;symbol.c: 131: if(timerExtension1 == 0)
 22989  23F7  0868               	movf	_timerExtension1,w	;volatile
 22990  23F8  1D03               	btfss	3,2
 22991  23F9  2BFE               	goto	i1l750
 22992                           
 22993                           ;symbol.c: 132: {
 22994                           ;symbol.c: 133: timerExtension2++;
 22995  23FA  3001               	movlw	1
 22996  23FB  00F4               	movwf	??i1_MiWi_TickGet
 22997  23FC  0874               	movf	??i1_MiWi_TickGet,w
 22998  23FD  07FD               	addwf	_timerExtension2,f	;volatile
 22999  23FE                     i1l750:	
 23000                           
 23001                           ;symbol.c: 134: }
 23002                           ;symbol.c: 135: }
 23003                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 23004  23FE  0868               	movf	_timerExtension1,w	;volatile
 23005  23FF  00F4               	movwf	??i1_MiWi_TickGet
 23006  2400  0874               	movf	??i1_MiWi_TickGet,w
 23007  2401  07F9               	addwf	i1MiWi_TickGet@currentTime+2,f
 23008                           
 23009                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 23010  2402  087D               	movf	_timerExtension2,w	;volatile
 23011  2403  00F4               	movwf	??i1_MiWi_TickGet
 23012  2404  0874               	movf	??i1_MiWi_TickGet,w
 23013  2405  07FA               	addwf	i1MiWi_TickGet@currentTime+3,f
 23014                           
 23015                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 23016  2406  0021               	movlb	1	; select bank1
 23017  2407  1411               	bsf	17,0	;volatile
 23018                           
 23019                           ;symbol.c: 143: return currentTime;
 23020  2408  087A               	movf	i1MiWi_TickGet@currentTime+3,w
 23021  2409  00F3               	movwf	?i1_MiWi_TickGet+3
 23022  240A  0879               	movf	i1MiWi_TickGet@currentTime+2,w
 23023  240B  00F2               	movwf	?i1_MiWi_TickGet+2
 23024  240C  0878               	movf	i1MiWi_TickGet@currentTime+1,w
 23025  240D  00F1               	movwf	?i1_MiWi_TickGet+1
 23026  240E  0877               	movf	i1MiWi_TickGet@currentTime,w
 23027  240F  00F0               	movwf	?i1_MiWi_TickGet
 23028  2410  0008               	return
 23029  2411                     __end_ofi1_MiWi_TickGet:	
 23030                           
 23031                           	psect	text92
 23032  2F3F                     __ptext92:	
 23033 ;; *************** function i1_DELAY_10us *****************
 23034 ;; Defined at:
 23035 ;;		line 46 in file "../src/system_config/pic18exp_pic16f1947_89xa/delay.c"
 23036 ;; Parameters:    Size  Location     Type
 23037 ;;  tenMicroSeco    4    0[BANK0 ] unsigned long 
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;  DELAY_10us      4    4[BANK0 ] volatile long 
 23040 ;; Return value:  Size  Location     Type
 23041 ;;                  1    wreg      void 
 23042 ;; Registers used:
 23043 ;;		wreg, status,2, status,0, pclath, cstack
 23044 ;; Tracked objects:
 23045 ;;		On entry : 0/0
 23046 ;;		On exit  : 0/0
 23047 ;;		Unchanged: 0/0
 23048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23050 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23052 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23053 ;;Total ram usage:        8 bytes
 23054 ;; Hardware stack levels used:    1
 23055 ;; Hardware stack levels required when called:    1
 23056 ;; This function calls:
 23057 ;;		i1___lmul
 23058 ;; This function is called by:
 23059 ;;		i1_TxPacket
 23060 ;; This function uses a non-reentrant model
 23061 ;;
 23062                           
 23063                           
 23064                           ;psect for function i1_DELAY_10us
 23065  2F3F                     i1_DELAY_10us:	
 23066                           
 23067                           ;delay.c: 52: {
 23068                           ;delay.c: 58: }
 23069                           
 23070                           ;incstack = 0
 23071                           ; Regs used in i1_DELAY_10us: [wreg+status,2+status,0+pclath+cstack]
 23072  2F3F  0008               	return
 23073  2F40                     i1l611:	
 23074                           ;delay.c: 74: else
 23075                           ;delay.c: 75: {
 23076                           ;delay.c: 78: while (cyclesRequiredForEntireDelay>0)
 23077                           
 23078                           ;delay.c: 71: {
 23079                           ;delay.c: 73: }
 23080                           
 23081                           ;delay.c: 70: if (cyclesRequiredForEntireDelay <= 45)
 23082                           
 23083                           ;delay.c: 68: cyclesRequiredForEntireDelay -= (153 + 22);
 23084                           
 23085                           ;delay.c: 59: else
 23086                           ;delay.c: 60: {
 23087                           ;delay.c: 64: cyclesRequiredForEntireDelay = (uint32_t)(((10000000)/4)/100000) * tenMicr
      +                          oSecondCounter;
 23088                           
 23089                           
 23090                           ;delay.c: 79: {
 23091                           ;delay.c: 80: __nop();
 23092  2F40  0000               	nop
 23093                           
 23094                           ;delay.c: 81: cyclesRequiredForEntireDelay -= 42;
 23095  2F41  30D6               	movlw	214
 23096  2F42  0020               	movlb	0	; select bank0
 23097  2F43  07A4               	addwf	i1DELAY_10us@cyclesRequiredForEntireDelay,f	;volatile
 23098  2F44  30FF               	movlw	255
 23099  2F45  3DA5               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+1,f	;volatile
 23100  2F46  30FF               	movlw	255
 23101  2F47  3DA6               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+2,f	;volatile
 23102  2F48  30FF               	movlw	255
 23103  2F49  3DA7               	addwfc	i1DELAY_10us@cyclesRequiredForEntireDelay+3,f	;volatile
 23104  2F4A  1BA7               	btfsc	i1DELAY_10us@cyclesRequiredForEntireDelay+3,7	;volatile
 23105  2F4B  0008               	return
 23106  2F4C  0827               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+3,w	;volatile
 23107  2F4D  1D03               	btfss	3,2
 23108  2F4E  2F40               	goto	i1l611
 23109  2F4F  0826               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+2,w	;volatile
 23110  2F50  1D03               	btfss	3,2
 23111  2F51  2F40               	goto	i1l611
 23112  2F52  0825               	movf	i1DELAY_10us@cyclesRequiredForEntireDelay+1,w	;volatile
 23113  2F53  1D03               	btfss	3,2
 23114  2F54  2F40               	goto	i1l611
 23115  2F55  3001               	movlw	1
 23116  2F56  0224               	subwf	i1DELAY_10us@cyclesRequiredForEntireDelay,w	;volatile
 23117  2F57  1C03               	btfss	3,0
 23118  2F58  0008               	return
 23119  2F59  2F40               	goto	i1l611
 23120  2F5A                     __end_ofi1_DELAY_10us:	
 23121                           
 23122                           	psect	text93
 23123  226F                     __ptext93:	
 23124 ;; *************** function i1___lmul *****************
 23125 ;; Defined at:
 23126 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 23127 ;; Parameters:    Size  Location     Type
 23128 ;;  multiplier      4    0[COMMON] unsigned long 
 23129 ;;  multiplicand    4    4[COMMON] unsigned long 
 23130 ;; Auto vars:     Size  Location     Type
 23131 ;;  __lmul          4    8[COMMON] unsigned long 
 23132 ;; Return value:  Size  Location     Type
 23133 ;;                  4    0[COMMON] unsigned long 
 23134 ;; Registers used:
 23135 ;;		wreg, status,2, status,0
 23136 ;; Tracked objects:
 23137 ;;		On entry : 0/0
 23138 ;;		On exit  : 0/0
 23139 ;;		Unchanged: 0/0
 23140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23141 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23142 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23144 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23145 ;;Total ram usage:       12 bytes
 23146 ;; Hardware stack levels used:    1
 23147 ;; This function calls:
 23148 ;;		Nothing
 23149 ;; This function is called by:
 23150 ;;		i1_DELAY_10us
 23151 ;; This function uses a non-reentrant model
 23152 ;;
 23153                           
 23154                           
 23155                           ;psect for function i1___lmul
 23156  226F                     i1___lmul:	
 23157                           
 23158                           ;incstack = 0
 23159                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
 23160  226F  3000               	movlw	0
 23161  2270  00FB               	movwf	i1___lmul@product+3
 23162  2271  3000               	movlw	0
 23163  2272  00FA               	movwf	i1___lmul@product+2
 23164  2273  3000               	movlw	0
 23165  2274  00F9               	movwf	i1___lmul@product+1
 23166  2275  3000               	movlw	0
 23167  2276  00F8               	movwf	i1___lmul@product
 23168  2277                     i1l6468:	
 23169  2277  1C70               	btfss	i1___lmul@multiplier,0
 23170  2278  2A81               	goto	i1l6472
 23171  2279  0874               	movf	i1___lmul@multiplicand,w
 23172  227A  07F8               	addwf	i1___lmul@product,f
 23173  227B  0875               	movf	i1___lmul@multiplicand+1,w
 23174  227C  3DF9               	addwfc	i1___lmul@product+1,f
 23175  227D  0876               	movf	i1___lmul@multiplicand+2,w
 23176  227E  3DFA               	addwfc	i1___lmul@product+2,f
 23177  227F  0877               	movf	i1___lmul@multiplicand+3,w
 23178  2280  3DFB               	addwfc	i1___lmul@product+3,f
 23179  2281                     i1l6472:	
 23180  2281  3001               	movlw	1
 23181  2282                     u634_25:	
 23182  2282  35F4               	lslf	i1___lmul@multiplicand,f
 23183  2283  0DF5               	rlf	i1___lmul@multiplicand+1,f
 23184  2284  0DF6               	rlf	i1___lmul@multiplicand+2,f
 23185  2285  0DF7               	rlf	i1___lmul@multiplicand+3,f
 23186  2286  0B89               	decfsz	9,f
 23187  2287  2A82               	goto	u634_25
 23188  2288  3001               	movlw	1
 23189  2289                     u635_25:	
 23190  2289  36F3               	lsrf	i1___lmul@multiplier+3,f
 23191  228A  0CF2               	rrf	i1___lmul@multiplier+2,f
 23192  228B  0CF1               	rrf	i1___lmul@multiplier+1,f
 23193  228C  0CF0               	rrf	i1___lmul@multiplier,f
 23194  228D  0B89               	decfsz	9,f
 23195  228E  2A89               	goto	u635_25
 23196  228F  0873               	movf	i1___lmul@multiplier+3,w
 23197  2290  0472               	iorwf	i1___lmul@multiplier+2,w
 23198  2291  0471               	iorwf	i1___lmul@multiplier+1,w
 23199  2292  0470               	iorwf	i1___lmul@multiplier,w
 23200  2293  1D03               	skipz
 23201  2294  2A77               	goto	i1l6468
 23202  2295  087B               	movf	i1___lmul@product+3,w
 23203  2296  00F3               	movwf	?i1___lmul+3
 23204  2297  087A               	movf	i1___lmul@product+2,w
 23205  2298  00F2               	movwf	?i1___lmul+2
 23206  2299  0879               	movf	i1___lmul@product+1,w
 23207  229A  00F1               	movwf	?i1___lmul+1
 23208  229B  0878               	movf	i1___lmul@product,w
 23209  229C  00F0               	movwf	?i1___lmul
 23210  229D  0008               	return
 23211  229E                     __end_ofi1___lmul:	
 23212                           
 23213                           	psect	text94
 23214  2DA1                     __ptext94:	
 23215 ;; *************** function _UserInterruptHandler *****************
 23216 ;; Defined at:
 23217 ;;		line 179 in file "../src/system_config/pic18exp_pic16f1947_89xa/system.c"
 23218 ;; Parameters:    Size  Location     Type
 23219 ;;		None
 23220 ;; Auto vars:     Size  Location     Type
 23221 ;;		None
 23222 ;; Return value:  Size  Location     Type
 23223 ;;                  1    wreg      void 
 23224 ;; Registers used:
 23225 ;;		None
 23226 ;; Tracked objects:
 23227 ;;		On entry : 0/0
 23228 ;;		On exit  : 0/0
 23229 ;;		Unchanged: 0/0
 23230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23235 ;;Total ram usage:        0 bytes
 23236 ;; Hardware stack levels used:    1
 23237 ;; This function calls:
 23238 ;;		Nothing
 23239 ;; This function is called by:
 23240 ;;		_high_isr
 23241 ;; This function uses a non-reentrant model
 23242 ;;
 23243                           
 23244                           
 23245                           ;psect for function _UserInterruptHandler
 23246  2DA1                     _UserInterruptHandler:	
 23247                           
 23248                           ;incstack = 0
 23249                           ; Regs used in _UserInterruptHandler: []
 23250  2DA1  0008               	return
 23251  2DA2                     __end_of_UserInterruptHandler:	
 23252  007E                     btemp	set	126	;btemp
 23253  007E                     int$flags	set	126
 23254  007E                     wtemp	set	126
 23255  007E                     wtemp0	set	126
 23256  0080                     wtemp1	set	128
 23257  0082                     wtemp2	set	130
 23258  0084                     wtemp3	set	132
 23259  0086                     wtemp4	set	134
 23260  0088                     wtemp5	set	136
 23261  007F                     wtemp6	set	127
 23262  007E                     ttemp	set	126
 23263  007E                     ttemp0	set	126
 23264  0081                     ttemp1	set	129
 23265  0084                     ttemp2	set	132
 23266  0087                     ttemp3	set	135
 23267  007F                     ttemp4	set	127
 23268  007E                     ltemp	set	126
 23269  007E                     ltemp0	set	126
 23270  0082                     ltemp1	set	130
 23271  0086                     ltemp2	set	134
 23272  0080                     ltemp3	set	128


Data Sizes:
    Strings     996
    Constant    350
    Data        28
    BSS         270
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      79
    BANK1            80     80      80
    BANK2            80     28      77
    BANK3            80      0      66
    BANK4            80      0      76
    BANK5            80      0      50
    BANK6            80      0      33
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           24      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK6[33]), 

    memset@p	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK6[33]), 

    sprintf$2391	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_45(CODE[17]), STR_44(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_43(CODE[21]), STR_42(CODE[16]), STR_41(CODE[22]), STR_40(CODE[16]), 
		 -> STR_29(CODE[30]), STR_26(CODE[32]), STR_16(CODE[31]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK6[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_43(CODE[21]), STR_40(CODE[16]), STR_29(CODE[30]), STR_26(CODE[32]), 
		 -> STR_16(CODE[31]), 

    sp__memset	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK6[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    CONSOLE_PutString@str	PTR unsigned char  size(2) Largest target is 66
		 -> STR_39(CODE[19]), STR_38(CODE[46]), STR_37(CODE[24]), STR_36(CODE[3]), 
		 -> STR_35(CODE[7]), STR_34(CODE[26]), STR_33(CODE[28]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[29]), STR_28(CODE[3]), STR_27(CODE[30]), 
		 -> STR_25(CODE[5]), STR_24(CODE[60]), STR_23(CODE[66]), STR_22(CODE[66]), 
		 -> STR_21(CODE[62]), STR_20(CODE[64]), STR_19(CODE[23]), STR_18(CODE[31]), 
		 -> STR_17(CODE[60]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), 
		 -> STR_10(CODE[14]), STR_9(CODE[50]), STR_8(CODE[3]), STR_7(CODE[5]), 
		 -> STR_6(CODE[3]), STR_5(CODE[14]), STR_4(CODE[48]), STR_3(CODE[12]), 
		 -> STR_2(CODE[19]), STR_1(CODE[10]), 

    isSameAddress@Address2	PTR unsigned char  size(1) Largest target is 50
		 -> ConnectionTable(BANK3[50]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(1) Largest target is 50
		 -> ConnectionTable(BANK3[50]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK3[50]), NULL(NULL[0]), RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK3[50]), NULL(NULL[0]), RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S704$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BIGRAM[104]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    S704$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BIGRAM[104]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK2[2]), nvmConnectionTable(BANK2[2]), nvmConnMode(BANK0[2]), 
		 -> nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK2[2]), 

    NVMWrite@source	PTR unsigned char  size(1) Largest target is 50
		 -> conn_size(BANK2[1]), ConnMode(BANK2[1]), currentChannel(BANK2[1]), ConnectionTable(BANK3[50]), 

    NVMRead@dest	PTR unsigned char  size(1) Largest target is 50
		 -> conn_size(BANK2[1]), ConnMode(BANK2[1]), currentChannel(BANK2[1]), ConnectionTable(BANK3[50]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(1) Largest target is 30
		 -> TxBuffer(BANK4[30]), 

    S205$DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK3[50]), NULL(NULL[0]), RxPacket(BIGRAM[104]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK3[50]), NULL(NULL[0]), RxPacket(BIGRAM[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S36$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK3[8]), 

    S219$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BIGRAM[104]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 

    S219$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BIGRAM[104]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BIGRAM[50]), RxPacket(BIGRAM[104]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _high_isr in COMMON

    _high_isr->i1_TxPacket
    i1_WriteFIFO->i1_SPIPut
    i1_SetRFMode->i1_RegisterSet
    i1_RegisterSet->i1_SPIPut
    i1_RegisterRead->i1_SPIPut
    i1_SPIGet->i1_SPIPut
    i1_DELAY_10us->i1___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->i1_TxPacket
    i1_TxPacket->i1_DELAY_10us

Critical Paths under _main in BANK1

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _run_p2p_demo->_Process_RxMessage
    _Process_RxMessage->_MiApp_MessageAvailable
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _DemoOutput_HandleMessage->_CONSOLE_PutString
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _MiApp_BroadcastPacket->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiApp_SetChannel
    _NVMRead->_SPIPut
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _MiApp_SetChannel->_NVMWrite
    _MiMAC_SetChannel->_SetRFMode
    _EEPROM_Read->_SPIPut
    _MiApp_EstablishConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_DELAY_10us
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _DELAY_10us->___lmul
    _MiMAC_ReceivedPacket->___wmul
    _AddConnection->_NVMWrite
    _isSameAddress->___bmul
    _Total_Connections->___bmul
    _MiApp_DiscardMessage->_MiMAC_DiscardPacket
    _MiMAC_DiscardPacket->___wmul
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->___wmul
    _SPIGet->_SPIPut
    _DumpConnection->_CONSOLE_PrintDec
    _CONSOLE_PrintHex->_CONSOLE_Put
    _DemoOutput_ChannelError->_CONSOLE_PrintDec
    _DemoOutput_Channel->_LCDDisplay
    _CONSOLE_PrintDec->___awdiv
    ___awdiv->___awmod
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___wmul->___awmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut
    _DELAY_ms->___lmul
    _CONSOLE_PutString->_CONSOLE_Put

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Run_Demo->_run_p2p_demo
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_MessageAvailable->_P2PTasks

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  434968
                                             79 BANK1      1     1      0
                                             27 BANK2      1     1      0
                 _CONSOLE_Initialize
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     17    17      0   29999
                                             55 BANK1     17    17      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2348
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2348
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      46
                                              3 BANK1      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      46
                                              3 BANK1      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  211380
                       _run_p2p_demo
 ---------------------------------------------------------------------------------
 (2) _run_p2p_demo                                        17    17      0  211380
                                              7 BANK2     17    17      0
                      _ButtonPressed
                           _DELAY_ms
             _DemoOutput_Instruction
             _DemoOutput_UnicastFail
              _DemoOutput_UpdateTxRx
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
            _MiApp_UnicastConnection
                  _Process_RxMessage
                            ___awmod
                             ___bmul
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    2     2      0   97883
                                             75 BANK1      2     2      0
                           _DELAY_ms
           _DemoOutput_HandleMessage
             _DemoOutput_Instruction
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                3     2      1   26409
                                             52 BANK1      3     2      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          4     3      1   26098
                                             48 BANK1      4     3      1
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_HandleMessage                             5     5      0    3364
                                              7 BANK1      5     5      0
                   _CONSOLE_PrintHex
                        _CONSOLE_Put
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastConnection                              4     3      1    9206
                                             70 BANK1      4     3      1
               _MiApp_UnicastAddress
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_UnicastAddress                                 4     2      2    7677
                                             66 BANK1      4     2      2
                         _SendPacket
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                2     2      0    7441
                                             66 BANK1      2     2      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UnicastFail                               0     0      0   30505
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                       16    16      0     267
                                             11 BANK1     16    16      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      3     3      0  160712
                                             76 BANK1      3     3      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                     _DumpConnection
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     421
                                             11 BANK1      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   6     6      0   32904
                                             26 BANK1      6     6      0
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
                            _NVMRead
                           _NVMWrite
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     3      4    1015
                                              3 BANK1      7     3      4
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              2     2      0    1147
                                              6 BANK1      2     2      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1134
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           7     5      2   16153
                                             18 BANK1      7     5      2
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     2     2      0    5891
                                             24 BANK1      2     2      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3027
                                              8 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     2      2     756
                                              3 BANK1      4     2      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (2) _MiApp_EstablishConnection                           22    21      1   74039
                                             75 BANK1      1     0      1
                                              7 BANK2     20    20      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               1     1      0   55076
                                             74 BANK1      1     1      0
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            24    24      0   55076
                                             66 BANK1      8     8      0
                                              0 BANK2      7     7      0
                      _AddConnection
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                           _NVMWrite
                         _SendPacket
                             ___bmul
                             ___wmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          12     8      4    7419
                                             54 BANK1     12     8      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    10     5      5    5075
                                             44 BANK1     10     5      5
                           _TxPacket
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            24    23      1    4354
                                             20 BANK1     24    23      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            2     2      0    1447
                                              6 BANK1      2     2      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         3     1      2    1425
                                              3 BANK1      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         4     4      0     137
                                              3 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _DELAY_10us                                           8     4      4     606
                                             12 BANK1      8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                17    17      0   13025
                                             13 BANK1     16    16      0
                       _MiWi_TickGet
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        11     7      4     221
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                       10    10      0    6867
                                             24 BANK1     10    10      0
                           _NVMWrite
                  _Total_Connections
                             ___bmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     4      3     668
                                              4 BANK1      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    3     3      0    1466
                                              4 BANK1      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0   11004
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  4     4      0   11004
                                             13 BANK1      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 3     3      0    2864
                                             24 BANK1      3     3      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                            11     7      4    2820
                                             13 BANK1     11     7      4
                           _MacroNop
                             _SPIGet
                             _SPIPut
                             ___bmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DumpConnection                                       7     7      0    7048
                                             19 BANK1      7     7      0
                   _CONSOLE_PrintDec
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PrintHex                                     4     4      0     135
                                              1 BANK1      4     4      0
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_Instruction                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0    4911
                                             19 BANK1      1     1      0
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   3     2      1   32589
                                             55 BANK1      3     2      1
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _CONSOLE_PrintDec                                     3     3      0    1796
                                             16 BANK1      3     3      0
                        _CONSOLE_Put
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1008
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     656
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   30505
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           7     3      4   27412
                                             48 BANK1      7     3      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             38    28     10   16881
                                             14 BANK1     34    24     10
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   11004
                                              7 BANK1      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     337
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     696
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1    1374
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           2     2      0    4556
                                             19 BANK1      2     2      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    2188
                                             18 BANK1      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    2188
                                             18 BANK1      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2498
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     310
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     158
                                              5 BANK1      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0      68
                                              3 BANK1      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               3     3      0      23
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                             6     4      2    2030
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     448
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PutString                                    6     4      2    3093
                                              1 BANK1      6     4      2
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (6) _CONSOLE_Put                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONSOLE_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           25    25      0    4193
                                             31 BANK0     25    25      0
               _UserInterruptHandler
                     i1_MiWi_TickGet
                     i1_RegisterRead
                           i1_SPIGet
                         i1_TxPacket
                           i1___bmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     768
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            4     3      1     201
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1_TxPacket                                         24    23      1    1467
                                             12 COMMON     1     0      1
                                              8 BANK0     23    23      0
                       i1_DELAY_10us
                     i1_MiWi_TickGet
                     i1_RegisterRead
                      i1_RegisterSet
                        i1_SetRFMode
                        i1_WriteFIFO
 ---------------------------------------------------------------------------------
 (14) i1_WriteFIFO                                         2     2      0      68
                                              3 COMMON     2     2      0
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_SetRFMode                                         2     2      0     268
                                              6 COMMON     2     2      0
                      i1_RegisterSet
 ---------------------------------------------------------------------------------
 (15) i1_RegisterSet                                       3     1      2     246
                                              3 COMMON     3     1      2
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_RegisterRead                                      4     4      0     137
                                              3 COMMON     4     4      0
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (15) i1_SPIGet                                            0     0      0      23
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (15) i1_SPIPut                                            3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) i1_MiWi_TickGet                                     11     7      4     201
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (14) i1_DELAY_10us                                        8     4      4     239
                                              0 BANK0      8     4      4
                           i1___lmul
 ---------------------------------------------------------------------------------
 (15) i1___lmul                                           12     4      8     144
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (13) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONSOLE_Initialize
   _DemoOutput_Greeting
     _CONSOLE_PutString
       _CONSOLE_Put
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___awdiv
           ___awmod (ARG)
         ___awmod
       _CONSOLE_PutString
         _CONSOLE_Put
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awmod (ARG)
           _isdigit
     _DemoOutput_ChannelError
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___awdiv
           ___awmod (ARG)
         ___awmod
       _CONSOLE_PutString
         _CONSOLE_Put
     _DemoOutput_Instruction
     _DumpConnection
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___awdiv
           ___awmod (ARG)
         ___awmod
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
       ___bmul
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___bmul (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
           ___wmul
             ___awmod (ARG)
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___bmul (ARG)
               ___wmul (ARG)
                 ___awmod (ARG)
             _Total_Connections
               ___bmul
             ___bmul
             _isSameAddress
               ___bmul (ARG)
           _MiMAC_DiscardPacket
             ___wmul
               ___awmod (ARG)
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
             ___bmul
             ___wmul
               ___awmod (ARG)
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPIGet
               _SPIPut
             _SPIPut
             ___bmul (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                   ___lmul
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
           ___bmul
           ___wmul
             ___awmod (ARG)
           _isSameAddress
             ___bmul (ARG)
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
               ___lmul
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_ProtocolInit
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
         _NVMWrite
           _MacroNop
           _SPIGet
             _SPIPut
           _SPIPut
           ___bmul (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
       _MiMAC_Init
         _DELAY_ms
           ___lmul
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         ___wmul
           ___awmod (ARG)
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPIGet
           _SPIPut
         _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___bmul (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
       ___bmul
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
         ___bmul (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
     _MiApp_StartConnection
       _MiWi_TickGet
   _Run_Demo
     _run_p2p_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
         ___lmul
       _DemoOutput_Instruction
       _DemoOutput_UnicastFail
         _CONSOLE_PutString
           _CONSOLE_Put
         _LCDDisplay
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
                 ___lmul
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                   ___lmul
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
           ___bmul (ARG)
         ___bmul
       _Process_RxMessage
         _DELAY_ms
           ___lmul
         _DemoOutput_HandleMessage
           _CONSOLE_PrintHex
             _CONSOLE_Put
           _CONSOLE_Put
           _CONSOLE_PutString
             _CONSOLE_Put
         _DemoOutput_Instruction
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _DELAY_ms
               ___lmul
             _LCD_Erase
               _DELAY_ms
                 ___lmul
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___bmul
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awmod (ARG)
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___awmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___awmod (ARG)
               _Total_Connections
                 ___bmul
               ___bmul
               _isSameAddress
                 ___bmul (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___awmod (ARG)
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
               ___bmul
               ___wmul
                 ___awmod (ARG)
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
               ___bmul (ARG)
               ___wmul (ARG)
                 ___awmod (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                     ___lmul
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             ___bmul
             ___wmul
               ___awmod (ARG)
             _isSameAddress
               ___bmul (ARG)
       ___awmod
       ___bmul
       ___wmul
         ___awmod (ARG)
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
       ___lmul
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i1_MiWi_TickGet
   i1_RegisterRead
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_SPIGet
     i1_SPIPut
   i1_TxPacket
     i1_DELAY_10us
       i1___lmul
     i1_MiWi_TickGet
     i1_RegisterRead
       i1_SPIGet
         i1_SPIPut
       i1_SPIPut
     i1_RegisterSet
       i1_SPIPut
     i1_SetRFMode
       i1_RegisterSet
         i1_SPIPut
     i1_WriteFIFO
       i1_SPIPut
   i1___bmul
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1C      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      32      15       62.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      21      17       41.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1DB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              18      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1DB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Oct 13 15:24:21 2016

                     _PUSH_BUTTON_press_time 0132                                            _i 0143  
                               _run_p2p_demo 09BB                               _LCD_Initialize 27A9  
                          _Process_RxMessage 1001                         ?_MiMAC_DiscardPacket 0070  
                             ___bmul@product 00A2                               ?_isSameAddress 00A4  
                                __CFG_CP$OFF 0000                                ?_LCDInitPortA 0070  
                              ?_LCDInitPortB 0070                                           _DE 048C  
                                         l87 1CDA                                           l88 1D06  
                               ___awdiv@sign 00AD                                ?_LCDInitWrite 0070  
                                ?_LCD_Update 0070                          ___wmul@multiplicand 00A9  
                        MiApp_ProtocolInit@i 00BF                             i1___wmul@product 0074  
                         ?_Process_RxMessage 0070                                  i1_WriteFIFO 2E74  
                               NVMRead@count 00A5                                   _MiMAC_Init 1A37  
                            _P2PCapacityInfo 013C                                          l101 1D9B  
                                        l138 27A8                                          l148 1BAB  
                                        l423 17DA                                          l415 174E  
                                        l600 18C5                                          l249 23CD  
                                        l259 19AE                                          l611 2F76  
                                        l427 17FC                                          l620 25B3  
                                        l348 214A                                          l380 14E9  
                                        l381 17F4                                          l470 239C  
                                        l720 2EEE                                          l632 219E  
                                        l481 1E92                                          l750 24CB  
                                        l586 2DC2                                          l874 19D3  
                                        l971 0A39                                          l988 0B8B  
                               __CFG_CPD$OFF 0000                                 ___awmod@sign 00A6  
                            ??_AddConnection 00B8                                  LCDDisplay@i 00D6  
                                        wreg 0009                                 __CFG_FOSC$HS 0000  
                        ??_Process_RxMessage 00EB                          __size_of_DELAY_10us 001B  
                      i1WriteFIFO@IRQ1select 0074                                NVMInit@result 00A7  
          __end_of_MiApp_EstablishConnection 1EA2               __size_of_MiApp_StartConnection 0036  
              __end_of_MiApp_StartConnection 239D                                 ?_LCD_d_write 0070  
                          _Total_Connections 212F                                         l1120 0D94  
                                       l1034 1830                                         l1115 0D72  
                                       l1124 0DB6                                         l1062 0BBB  
                                       l1160 0EFF                                         l1144 0E94  
                                       l1064 0BBD                                         l1065 0BBF  
                                       l1090 0C83                                         l1066 0BC1  
                                       l1068 0BD8                                         l1085 0C80  
                                       l1182 0FD7                                         l1271 2FB5  
                                       l1089 0C82                                         l5002 1979  
                                       l5012 2136                                         l5200 12BB  
                                       l5018 2153                                         l5034 2171  
                                       l5210 1346                                         l5028 215B  
                                       l5220 1355                                         l5118 2F96  
                                       l5134 2FAF                                         l5038 2179  
                                       l5302 1090                                         l5214 134F  
                                       l6110 1B30                                         l5128 2E0F  
                                       l6200 2493                                         l5208 1339  
                                       l6008 2706                                         l6104 1B08  
                                       l6130 2664                                         l5330 10FB  
                                       l5322 10CC                                         l5242 140D  
                                       l5226 135B                                         l6034 21DB  
                                       l5404 2649                                         l5164 2359  
                                       l5156 233B                                         l5180 2249  
                                       l5316 10A3                                         l5308 1097  
                                       l5244 1410                                         l5236 13D1  
                                       l5260 145A                                         l5158 2347  
                                       l5182 2255                                         l5190 226A  
                                       l5502 0CB8                                         l5510 0CD6  
                                       l5430 0BC2                                         l5422 0BB6  
                                       l4710 2755                                         l6230 1A5D  
                                       l6118 1B3A                                         l5168 2362  
                                       l5520 0CFA                                         l5504 0CC3  
                                       l6136 266F                                         l5336 112C  
                                       l5256 1451                                         l5352 24F6  
                                       l6312 2188                                         l4626 2EE6  
                                       l5186 2261                                         l5610 0E30  
                                       l5514 0CE3                                         l5442 0BEB  
                                       l5450 0C1A                                         l5434 0BC6  
                                       l6162 26A6                                         l6154 2695  
                                       l6146 2677                                         l5290 1082  
                                       l4722 277E                                         l4714 2762  
                                       l4802 1D39                                         l6242 1A84  
                                       l6082 1AC9                                         l4652 22A7  
                                       l5612 0E33                                         l5604 0E12  
                                       l5524 0D05                                         l5532 0D13  
                                       l6148 2683                                         l4732 2796  
                                       l6236 1A7F                                         l5382 2615  
                                       l5710 0F3F                                         l5630 0E83  
                                       l5550 0D66                                         l5518 0CEF  
                                       l5534 0D3A                                         l5438 0BDE  
                                       l6158 269E                                         l6174 245D  
                                       l5286 107A                                         l5294 108B  
                                       l5278 1048                                         l4726 278C  
                                       l4718 2770                                         l4830 1D9F  
                                       l4814 1D58                                         l5358 2508  
                                       l6422 19EE                                         l6430 1A35  
                                       l6350 21C5                                         l6086 1AD4  
                                       l4656 22B1                                         l5392 2632  
                                       l5712 0F64                                         l5704 0F39  
                                       l5632 0E86                                         l5624 0E64  
                                       l5528 0D0E                                         l5472 0C58  
                                       l5480 0C7D                                         l6192 2482  
                                       l4824 1D93                                         l4832 1DA0  
                                       l6336 20E3                                         l6248 1A9F  
                                       l6280 23B4                                         l6512 1191  
                                       l5386 261F                                         l5722 0F97  
                                       l5626 0E67                                         l5618 0E46  
                                       l5546 0D5B                                         l5482 0C85  
                                       l5458 0C32                                         l6186 246A  
                                       l6178 2464                                         l4738 249C  
                                       l4906 1B66                                         l5810 1531  
                                       l6602 1DC5                                         l6530 11B8  
                                       l7170 1844                                         l6098 1B02  
                                       l5732 0FC0                                         l5644 0E98  
                                       l5660 0EC5                                         l5492 0CA7  
                                       l6188 2476                                         l6196 248B  
                                       l4772 1CE2                                         l4828 1CD4  
                                       l4940 1BD3                                         l7180 1864  
                                       l6428 1A33                                         l7156 09B9  
                                       l5718 0F86                                         l5654 0EB5  
                                       l5590 0DE7                                         l5494 0CA9  
                                       l5478 0C59                                         l5742 0B92  
                                       l6358 189C                                         l6702 1F06  
                                       l4766 1CF6                                         l4950 1BF1  
                                       l5902 1676                                         l6614 1E2A  
                                       l6518 11AA                                         l7182 1875  
                                       l4848 25A4                                         l5736 0FE4  
                                       l5728 0FB4                                         l5672 0EDF  
                                       l5488 0C9A                                         l5744 0FFA  
                                       l6720 1F40                                         l6712 1F34  
                                       l4960 1947                                         l4792 1D1A  
                                       l4928 1B86                                         l5912 16EC  
                                       l6536 11FB                                         l4890 2E6B  
                                       l5594 0DF4                                         l5498 0CAC  
                                       l6706 1F23                                         l4794 1D2D  
                                       l4778 1CEB                                         l4938 1BAE  
                                       l5754 14AB                                         l6554 1257  
                                       l5668 0EDA                                         l5588 0DD8  
                                       l6708 1F2B                                         l4948 1BD4  
                                       l5940 1751                                         l5924 170F  
                                       l5916 16F6                                         l5860 15F1  
                                       l5772 14DF                                         l6628 1E41  
                                       l6660 1DEA                                         l6556 1287  
                                       l6492 116C                                         l4886 2E65  
                                       l5694 0F1C                                         l5678 0EF3  
                                       l5598 0E00                                         l6726 1F61  
                                       l4798 1D32                                         l5950 1763  
                                       l5942 1755                                         l5926 1723  
                                       l5934 173C                                         l5854 15E4  
                                       l5838 157F                                         l5846 159E  
                                       l5782 1502                                         l5758 14BC  
                                       l6662 1E9C                                         l6486 1153  
                                       l6582 236A                                         l5688 0F0D  
                                       l6832 254F                                         l6752 1FB5  
                                       l6728 1F68                                         l5960 17D6  
                                       l5936 174A                                         l5864 15FF  
                                       l5856 15E8                                         l5792 1519  
                                       l6656 1E86                                         l6648 1E6D  
                                       l6920 0B44                                         l6754 1FBD  
                                       l6682 1ECB                                         l5890 165E  
                                       l6922 0B49                                         l6914 0B31  
                                       l6906 0AE9                                         l6930 0B60  
                                       l7562 207C                                         l6772 1FF3  
                                       l6748 1F98                                         l6676 1EB5  
                                       l5956 17CC                                         l5788 1510  
                                       l5964 17DB                                         l6588 2390  
                                       l6940 0ACB                                         l6852 09C9  
                                       l6766 1FD2                                         l6758 1FC6  
                                       l6774 1FFA                                         l6686 1ED7  
                                       l5886 1646                                         l5878 1627  
                                       l5966 17F5                                         l6942 0A3E  
                                       l6936 0B7A                                         l5978 2EF3  
                                       l6938 0B80                                         l6866 0A17  
                                       l6858 09CF                                         l6946 0B82  
                                       STR_1 0931                                         STR_2 08A0  
                                       STR_3 0925                                         STR_4 06E8  
                                       STR_5 0917                                         STR_6 0922  
                                       STR_7 0920                                         STR_8 094D  
                                       STR_9 06E6                                         _LATA 010C  
                                       _LATB 010D                                         _LATC 010E  
                                       _LATD 010F                                         u4100 1B64  
                     __size_of_ButtonPressed 0080                                         u5105 0DD1  
                                       u4315 2FB6                                         u4325 2FBB  
                                       u5045 0D8D                                         u5215 0E5C  
                                       u6015 2684                                         u4425 224C  
                                       u5225 0E76                                         u6025 268E  
                                       u4355 233E                                         u5075 0DAF  
                                       u6035 2696                                         u6115 247C  
                                       u4700 24E7                                         u4445 225B  
                                       u6125 2483                                         u4710 24E8  
                                       u4375 2348                                         u4455 2262  
                                       u5415 0FE2                                         u5175 0E23  
                                       u4720 24F4                                         u4385 2352  
                                       u4395 235A                                         u4740 2506  
                                       u6095 246D                                         u4495 12FB  
                                       u3865 22B2                                         u5490 14DD  
                  DemoOutput_Channel@channel 00D9                                         u3875 22B9  
                                       u4925 0C93                                         i1l87 1C09  
                                       u4935 0CA0                                         i1l88 1C31  
                                       u5835 21F7                                         u6485 12AA  
                                       u6765 2226                                         u6865 0B75  
                                       u5995 267A                                 ?_LCD_i_write 0070  
                  CONSOLE_PrintHex@PRINT_VAR 00A3                    freezer_feature@switch_val 00E7  
                                       _MiWi 040E                           ?_Total_Connections 0070  
                  MiApp_StartConnection@Mode 00B0                   MiMAC_SetChannel@offsetFreq 00A8  
                                       _main 2062                              __end_of_NVMInit 193F  
                            __end_of_NVMRead 23D6                         i1RegisterSet@setting 0073  
                                       fsr0h 0005                                         fsr1h 0007  
                                       fsr0l 0004                                         indf0 0000  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                           __size_of_LCD_Erase 0019  
                                       ltemp 007E                                         start 0391  
                                       ttemp 007E                                         wtemp 007E  
                              __CFG_IESO$OFF 0000                             __end_of_DELAY_ms 25BE  
                               _sprintf$2391 00C0                                 _sprintf$2384 00BC  
                               _sprintf$2385 00BE                          ??_Total_Connections 00A4  
                     __end_of_LCD_Initialize 2800                            ___bmul@multiplier 00A3  
                  __end_of_Process_RxMessage 103D                                __CFG_MCLRE$ON 0000  
                             _InitConfigRegs 04CE                                 high_isr@bAck 0052  
                            ?_DumpConnection 0070                        ??_MiMAC_DiscardPacket 00AD  
                             NVMRead@oldRFIE 00A8                               ??_LCDInitPortA 00A3  
                             ??_LCDInitPortB 00A3                               ??_LCDInitWrite 00A5  
                           __end_of_P2PTasks 1800                 __end_of_MiApp_DiscardMessage 2DAE  
                            ??i1_RegisterSet 0075                                        ?_main 0070  
                            __end_of___awdiv 26AB                                        STR_10 0917  
                                      STR_11 0922                                        STR_12 0920  
                                      STR_20 05F0                MiApp_EstablishConnection@Mode 00EB  
                                      STR_13 094D                                        STR_21 0630  
                                      STR_14 08E6                                        STR_30 07E0  
                                      STR_22 05AE                                        STR_31 094D  
                                      STR_15 08D5                                        STR_23 056C  
                                      STR_32 093B                                        STR_40 0907  
                                      STR_16 0766                                        STR_24 066E  
                                      STR_25 094B                                        STR_41 0862  
                                      STR_33 07FD                                        STR_17 06AA  
                              __CFG_WDTE$OFF 0000                                        STR_42 08F7  
                                      STR_34 0819                                        STR_18 0785  
                                      STR_26 0746                                        STR_35 0944  
                                      STR_43 0878                                        STR_19 084B  
                                      STR_27 07A4                                        STR_28 094D  
                                      STR_36 092E                                        STR_44 08B3  
                            __end_of___awmod 2498                                        STR_45 08C4  
                                      STR_37 0833                                        STR_29 07C2  
                                      STR_38 0718                                        STR_39 088D  
                            ___awdiv@divisor 00A7                                        _T1CON 0018  
                                LCD_Update@i 00B4                      ?_DemoOutput_Instruction 0070  
                            __end_of___lwdiv 2367                                        i1l101 1CC6  
                                      i1l202 018C                                        i1l216 0354  
                                      i1l138 260A                                        i1l193 009D  
                            __end_of___lwmod 226F                                        i1l611 2F40  
                                      i1l196 0141                                        i1l720 2E5D  
                                      i1l750 23FE                              ___awdiv@counter 00AC  
                                      _RCREG 0199                                        _RCSTA 019D  
                   __size_of_InitSymbolTimer 000B                                        _TMR1H 0017  
                                      _TMR1L 0016                                        _SPBRG 019B  
                                      _TRISA 008C                                        _TRISB 008D  
                                      _TRISC 008E                                        _TRISD 008F  
                              ?i1_DELAY_10us 0020                                        _TXREG 019A  
                                      _TXSTA 019E                             __end_ofi1_SPIGet 2DB4  
                           SendPacket@tParam 00DF                             __end_ofi1_SPIPut 2E62  
                        ___lmul@multiplicand 00A4                                _LCDWritePortA 2008  
                              _LCDWritePortB 2026                       ?_DemoOutput_UpdateTxRx 00D4  
                          high_isr@BankIndex 0056                               __CFG_FCMEN$OFF 0000  
                  __end_of_Total_Connections 2155                                        _RxNum 013E  
                                      _TxNum 0140                          __size_of_LCDDisplay 0034  
              __size_of_MiApp_ConnectionMode 002B                         freezer_feature@tick1 00DF  
                       freezer_feature@tick2 00E3                              __end_of_dpowers 0564  
                        __size_of_LCDInitSPI 0006                             SendPacket@status 00DD  
              __size_of_MiApp_UnicastAddress 000F                              __end_of_isdigit 2E11  
                                      _tick1 01A0                                        _tick4 01A4  
                           __end_of_NVMWrite 19B7                             __end_ofi1___bmul 2E50  
                           __end_ofi1___lmul 229E                             __end_of_NVMalloc 21EE  
                           __end_ofi1___wmul 2F75                                        ltemp0 007E  
                                      ltemp1 0082                                        ltemp2 0086  
                                      ltemp3 0080                               ButtonPressed@t 00B7  
                        __size_of_LCD_Update 004E                                        ttemp0 007E  
                                      ttemp1 0081                                        ttemp2 0084  
                                      ttemp3 0087                                        ttemp4 007F  
                                      status 0003                          i1___wmul@multiplier 0070  
                                      wtemp0 007E                                        wtemp1 0080  
                                      wtemp2 0082                                        wtemp3 0084  
                                      wtemp4 0086                                        wtemp5 0088  
                                      wtemp6 007F                              __end_of_sprintf 1000  
                     __end_of_InitConfigRegs 050E                                  ?i1_TxPacket 007C  
                  __size_of_MiMAC_SetChannel 0054                         __size_of_EEPROM_Read 0026  
                __end_of_DemoOutput_Greeting 26FE            __size_of_DemoOutput_HandleMessage 0098  
                            ?_LCD_Initialize 0070                                 __end_of_MiWi 048C  
                            __initialization 0393                    ?_DemoOutput_HandleMessage 0070  
                            ??_isSameAddress 00A7                    __size_of_MiMAC_SendPacket 00A5  
                           __end_of_MacroNop 0004                                 __end_of_main 2080  
                           _CONSOLE_PrintDec 187E                             _CONSOLE_PrintHex 21EE  
                        i1___lmul@multiplier 0070                               TxPacket@status 00C8  
                              _ButtonPressed 19B7       MiApp_UnicastConnection@ConnectionIndex 00E9  
             __end_of_DemoOutput_Instruction 1001                     i1RegisterRead@IRQ1select 0076  
                              ??_RegisterSet 00A5                            high_isr@PacketLen 0055  
                                     ??_main 00EF                                  ?_MiMAC_Init 00B2  
                    _DemoOutput_ChannelError 2EB0                                 NVMWrite@addr 00AD  
                          __end_of_LCD_Erase 2F25                               ??i1_DELAY_10us 007C  
                       __end_of_MiWi_TickGet 24DF                                _IRQ1_Received 005C  
                           ??i1_RegisterRead 0073                               ?_LCDWritePortA 0070  
                             ?_LCDWritePortB 0070                      MiApp_SetChannel@channel 00B9  
                           __end_of_TxPacket 1DA2                             __end_of_Run_Demo 2DA5  
          MiApp_ProtocolInit@bNetworkFreezer 00BC                         __size_of_CONSOLE_Put 000A  
                       _MiMAC_ReceivedPacket 12B5                                   _SendPacket 24DF  
                                  ??_NVMInit 00A6                                    ??_NVMRead 00A7  
                           ___awdiv@dividend 00A9                                       _ANSELA 018C  
                   ?_MiApp_UnicastConnection 00E6                                       i1l1271 2F62  
                                     _MACSeq 005D                                       i1l7002 25F9  
                                     i1l7022 23DA                                       i1l6208 2E58  
                                     i1l7204 1C0F                                       i1l7222 1C44  
                                     i1l7232 1C63                                       i1l7224 1C57  
                                     i1l7410 01E7                                       i1l7260 1CCA  
                                     i1l7244 1C81                                       i1l7228 1C5C  
                                     i1l7420 0212                                       i1l7412 01EC  
                                     i1l7340 005E                                       i1l7254 1CBE  
                                     i1l7334 0056                                       i1l7326 0033  
                                     i1l6472 2281                                       i1l7248 1C87  
                                     i1l7280 2E41                                       i1l7440 025E  
                                     i1l7258 1C03                                       i1l7266 2F5C  
                                     i1l7426 0227                                       i1l7338 005D  
                                     i1l6468 2277                                       i1l7284 2E47  
                                     i1l7452 0278                                       i1l7356 007E  
                                     i1l7348 006C                                       i1l7198 1C21  
                                     i1l7446 0273                                       i1l7464 02EA  
                                     i1l7392 00EF                                       i1l7458 02D2  
                                     i1l7474 0086                                       i1l7482 0377  
                                     i1l7492 038A                                       i1l7468 02F3  
                                     i1l7396 00F5                                       i1l7388 00ED  
                                     i1l7476 0370                                       i1l7478 0374  
                                     i1l6980 25C0                                       i1l6992 25E4  
                                     i1l6984 25CC                                       i1l6996 25F0  
                                     i1l6988 25D8                                       u711_25 2F63  
                                     u712_25 2F68                                       _OSCCON 0099  
                                     u634_25 2282                                       u635_25 2289  
                                     _PVALUE 050E                                       _SVALUE 052E  
                                     _SPIGet 2DB4                                       _SPIPut 2EDC  
                          _run_p2p_demo$2971 015B                            _run_p2p_demo$2972 015D  
                          _run_p2p_demo$2973 015F              MiApp_StartConnection@ChannelMap 00AC  
                       __size_of_LCDTRXCount 0030                __size_of_UserInterruptHandler 0001  
                               ??_DELAY_10us 00B0                      ?_DemoOutput_UnicastFail 0070  
                             __CFG_PWRTE$OFF 0000                                LCDInitWrite@v 00A5  
                                 TxPacket@t1 00BD                                   TxPacket@t2 00C1  
                         __size_of_SetRFMode 0057                               P2PTasks@status 0152  
                                     _TxData 013F                   __size_of_Process_RxMessage 003C  
                 __end_of_CONSOLE_Initialize 2DDF                             __end_of_high_isr 0391  
                                     ___bmul 2E62                                       ___lmul 229E  
                       CONSOLE_PutString@str 00A1                                       ___wmul 2FAC  
                    ??_MiApp_BroadcastPacket 00E2                                    ??___awdiv 00AB  
                             ?_ButtonPressed 0070                                    ??___awmod 00A4  
                                     _hasAck 0065                     __size_of_freezer_feature 0061  
                  __size_of_MiApp_SetChannel 0023                                    ??___lwdiv 00A4  
                                  ??___lwmod 00AC                                       _memset 2F90  
                           ___awdiv@quotient 00AE                                       _nvmEdc 006D  
                            ___awmod@divisor 00A0                              ___awmod@counter 00A5  
                               NVMalloc@size 00A0                            high_isr@ackPacket 004E  
                                  ??_isdigit 00A0                                 ?i1_SetRFMode 0070  
                             LCDDisplay@text 00D0                          __size_ofi1_TxPacket 00D1  
                      ?_MiMAC_ReceivedPacket 0070                  __size_of_DemoOutput_Channel 004A  
                 __size_of_Total_Connections 0026                  ??_MiApp_EstablishConnection 0154  
                                  ?_DELAY_ms 00AC                                 LCD_d_write@v 00B2  
                         __end_of_DELAY_10us 2F90                                   _TxSynCount 0141  
                        __end_of_RegisterSet 2F3F                                ?_RegisterRead 0070  
                                  ??_sprintf 00B8                            _ReceivedBankIndex 0063  
                          ??_InitSymbolTimer 00A0                         __end_of_LCDInitPortA 2FE4  
                       __end_of_LCDInitPortB 3000                         __end_of_LCDInitWrite 2062  
                          _SYSTEM_Initialize 2411                                    ?_P2PTasks 0070  
                       _MiApp_DiscardMessage 2DA9                          _PUSH_BUTTON_pressed 005F  
                       __size_of_LCD_d_write 0024                           __size_of_WriteFIFO 0016  
                    __end_of__initialization 040A               __end_of_DemoOutput_UnicastFail 2E9A  
                                  P2PTasks@i 0153                         __size_of_LCD_i_write 0025  
                               LCD_i_write@v 00B2              MiMAC_ReceivedPacket@currentTick 00B7  
                         ?_SYSTEM_Initialize 0070                          __size_of_MiMAC_Init 0087  
                             _chk_sel_status 016A                             _LatestConnection 013A  
                        ___bmul@multiplicand 00A0                                 ??_LCDDisplay 00D4  
                            NVMWrite@oldRFIE 00B5                                 ??_LCDInitSPI 00A0  
                 _myConnectionIndex_in_PanCo 0067                                    ?i1_SPIGet 0070  
                          high_isr@fifo_stat 004D                               __pcstackCOMMON 0070  
                                  ?i1_SPIPut 0070                      CONSOLE_PrintDec@toPrint 00B2  
                    __size_ofi1_MiWi_TickGet 003B                                 __pidataBANK2 2DA5  
                               __pidataBANK3 2000                                 __pidataBANK4 2E2F  
                        ??_SYSTEM_Initialize 00B2                     __size_of_Initialize_Demo 005A  
                  ??_DemoOutput_ChannelError 00B3                                 ??_LCD_Update 00B3  
                               ?i1_WriteFIFO 0070                                   __end_of_DE 04CE  
                                  ?_NVMWrite 00AD                                    ?i1___bmul 0070  
                                  ?i1___lmul 0070                                    ?_NVMalloc 00A0  
                            ??_LCDWritePortA 00A3                              ??_LCDWritePortB 00A3  
                                  ?i1___wmul 0070                              TxPacket@rssival 00CB  
                          _CONSOLE_PutString 2EF3                              _ConnectionTable 01A8  
            __end_of_MiApp_UnicastConnection 21C7                           ?_CONSOLE_PutString 00A1  
                          __end_of_SetRFMode 27A9                                   ??_DELAY_ms 00AE  
                             ??_RegisterRead 00A3                         i1TxPacket@CCARetries 003A  
                                ?_SendPacket 00D6                             i1___bmul@product 0073  
                         __end_of_LCDDisplay 2332                    __end_of_SYSTEM_Initialize 2452  
                               sprintf@width 00CA                           __end_of_LCDInitSPI 2DC0  
                      isSameAddress@Address1 00A4                        isSameAddress@Address2 00A6  
                                  ?_MacroNop 0070                                   __pbssBANK0 0058  
                                 __pbssBANK2 0120                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                                 __pbssBANK6 0320                        ?_MiApp_DiscardMessage 0070  
                        ??_CONSOLE_PutString 00A3                                   ??_P2PTasks 00E2  
                __size_of_MiApp_ProtocolInit 0169                                NVMWrite@count 00AF  
                           ??_DumpConnection 00B3                                      ?_SPIGet 0070  
                                    ?_SPIPut 0070                           RegisterSet@setting 00A3  
                         __end_of_LCD_Update 2659                    SendPacket@SecurityEnabled 00D9  
                             isSameAddress@i 00AA                   MiApp_BroadcastPacket@SecEn 00E3  
                            P2PTasks@FW_Stat 014D                         __end_ofi1_DELAY_10us 2F5A  
                           _MiMAC_SetChannel 26FE                    _MiApp_EstablishConnection 1DA2  
                            ??_ButtonPressed 00AB                                   __pmaintext 2062  
                                 ??i1_SPIGet 0073                                    ?_TxPacket 00B4  
                                 ??i1_SPIPut 0070                             _MiMAC_SendPacket 1B56  
                                    ?___bmul 00A0                                      ?___lmul 00A0  
                                  ?_Run_Demo 0070                                      ?___wmul 00A7  
                                 __pintentry 0004                        __size_of_MiWi_TickGet 0047  
                                    ?_memset 00A0                               ___lmul@product 00A8  
                  __end_of_CONSOLE_PutString 2F0C                                      SPIPut@i 00A1  
                                    SPIPut@v 00A2                                   ??_NVMWrite 00B1  
                                 ??i1___bmul 0071                                   ??i1___lmul 0078  
                                 ??_NVMalloc 00A4                            __end_of_WriteFIFO 2EDC  
                    ??_DemoOutput_UpdateTxRx 00D5                                   ??i1___wmul 0074  
                                _RegisterSet 2F25                            ??_freezer_feature 00D7  
                     ??_MiMAC_ReceivedPacket 00AD                                      _LCDText 0320  
                      __end_of_AddConnection 114C                                      _SSP1BUF 0211  
                                    _NVMInit 18DE                                      _NVMRead 239D  
                   __end_of_CONSOLE_PrintDec 18DE                                      _RF_Mode 0060  
           __end_of_DemoOutput_HandleMessage 1B56                                      _AckInfo 0220  
                   __end_of_CONSOLE_PrintHex 2217                                    ?_high_isr 0070  
                                    _RSSIVal 0062                                   ??_MacroNop 00A0  
                      _MiApp_StartConnection 2367                             ??_LCD_Initialize 00B2  
                AddConnection@connectionSlot 00C0                              _timerExtension1 0068  
                            _timerExtension2 007D                                  TxPacket@CCA 00B4  
                   MiApp_ConnectionMode@Mode 00BA                              __size_of_SPIGet 0006  
                           _AdditionalNodeID 0169                              __size_of_SPIPut 0017  
                __end_of_MiMAC_DiscardPacket 212F                              P2PTasks@tmpTick 014E  
                               ??i1_TxPacket 0028                                   DELAY_ms@ms 00AC  
                               _MiWi_TickGet 2498                 __end_of_MiApp_ConnectionMode 2242  
                                 ??_TxPacket 00B5                 __end_of_MiApp_UnicastAddress 2E2F  
                                 ??_Run_Demo 00ED                              __size_of___bmul 0012  
                                    ___awdiv 2659                              __size_of___lmul 0030  
                                    ___awmod 2452                              __size_of___wmul 001C  
                           _MiApp_SetChannel 20C2                          __size_of_SendPacket 0049  
                                    ___lwdiv 2332                                      ___lwmod 2242  
                            __size_of_memset 001C               DemoOutput_ChannelError@channel 00B3  
                                    __ptext1 095A                                 ??_MiMAC_Init 00B4  
                                    __ptext2 2411                                      __ptext3 27A9  
                                    __ptext4 2DBA                                      __ptext5 2FE4  
                                    __ptext6 2FC8                                      __ptext7 2DA2  
                                    __ptext8 09BB                                      __ptext9 1001  
                      __end_ofi1_RegisterSet 2EB0                            __end_of_hexpowers 056C  
                                  _T1CONbits 0018                                      _dpowers 055A  
              Initialize_Demo@freezer_enable 00ED                     ??_MiApp_MessageAvailable 00EA  
                                    _isdigit 2E02                      CONSOLE_PrintHex@toPrint 00A4  
                      i1TxPacket@TxPacketLen 0030                            ??_Initialize_Demo 00EC  
                              _myLongAddress 01DA                             ___awmod@dividend 00A2  
                      __size_of_LCDInitPortA 001C                        __size_of_LCDInitPortB 001C  
                     DemoOutput_Channel@Step 00D7                                    _IOCBFbits 0396  
                      __size_of_LCDInitWrite 001E                          i1___bmul@multiplier 0072  
                     i1MiWi_TickGet@IntFlag1 0076                       i1MiWi_TickGet@IntFlag2 0075  
                                  _IOCBNbits 0395                       RegisterRead@IRQ1select 00A5  
                       LCDWritePortA@preRFIE 00A4                           __end_ofi1_TxPacket 1CCC  
                                  _P2PStatus 013D                                    _LCD_Erase 2F0C  
                       __size_ofi1_SetRFMode 004D                      _NumOfActiveScanResponse 005E  
                                _MyindexinPC 013B                         LCDWritePortB@preRFIE 00A4  
                           i1TxPacket@status 0031                   __size_of_SYSTEM_Initialize 0041  
                                    _sprintf 0B8C                                      clrloop0 2DEB  
                     ??_MiApp_DiscardMessage 00B1                                   ??_high_isr 003F  
                       end_of_initialization 040A                                    i1SPIPut@i 0071  
                          __end_of_octpowers 055A                                    i1SPIPut@v 0072  
                              ??_EEPROM_Read 00A5                                      init_ram 2DF6  
                                    memset@c 00A0                                      memset@n 00A2  
                                    memset@p 00A6                MiMAC_SendPacket@MACPayloadLen 00D0  
                                    initloop 2DF7                              LCDDisplay@delay 00D3  
          i1DELAY_10us@tenMicroSecondCounter 0020              DELAY_10us@tenMicroSecondCounter 00AC  
                                 _nvmMyPANID 0147                              LCDDisplay@value 00D2  
                         __end_of_MiMAC_Init 1ABE                 MiApp_UnicastConnection@SecEn 00E6  
                             i1_MiWi_TickGet 23D6                                    _RCSTAbits 019D  
           __size_of_MiApp_UnicastConnection 0026                      MiMAC_SetChannel@channel 00AA  
                                _TxSynCount2 0142                         __end_of_RegisterRead 20C2  
                      __end_of_isSameAddress 217B                                 __pstringtext 040E  
       DELAY_ms@cyclesRequiredForEntireDelay 00AE                          RegisterRead@address 00A6  
                      i1___wmul@multiplicand 0072               __size_of_MiApp_BroadcastPacket 000F  
                               _LCDInitPortA 2FC8                                 _LCDInitPortB 2FE4  
                              WriteFIFO@Data 00A3                __end_of_MiApp_BroadcastPacket 2E20  
                               _LCDInitWrite 2044                   __size_of_CONSOLE_PutString 0019  
               __size_of_DemoOutput_Greeting 0053                                    _PORTAbits 000C  
                                  _PORTBbits 000D                              _InitSymbolTimer 2DDF  
                           NVMalloc@location 00A2                 __end_of_UserInterruptHandler 2DA2  
                              ??_CONSOLE_Put 00A0                         __size_ofi1_WriteFIFO 0013  
                         _CONSOLE_Initialize 2DD4                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISDbits 008F                                    _TRISEbits 0090  
                                  _TRISFbits 030C                                   ?_LCD_Erase 0070  
                       MiWi_TickGet@IntFlag1 00A6                         MiWi_TickGet@IntFlag2 00A5  
                    MiMAC_SendPacket@TxIndex 00D4                                  NVMRead@addr 00A3  
                                NVMRead@dest 00A9                          ?_CONSOLE_Initialize 0070  
                     ?_MiApp_StartConnection 00AB                            __size_of_DELAY_ms 004C  
                              ??_LCDTRXCount 00D1                        __size_ofi1_DELAY_10us 001B  
                 MiMAC_SendPacket@transParam 00CC                     _DemoOutput_HandleMessage 1ABE  
                  MiApp_UnicastAddress@SecEn 00E3                                    _TXSTAbits 019E  
                             __end_of_PVALUE 052E                            __size_of_P2PTasks 03A4  
                             __end_of_SVALUE 054E                               __end_of_SPIGet 2DBA  
                     __end_ofi1_MiWi_TickGet 2411                               __end_of_SPIPut 2EF3  
                        __end_of_EEPROM_Read 21A1                                ?_run_p2p_demo 0070  
                        DumpConnection@index 00B7                         ??_CONSOLE_Initialize 00A0  
                             __end_of___bmul 2E74                            __size_ofi1_SPIGet 0006  
                             __end_of___lmul 22CE                            __size_ofi1_SPIPut 0012  
                             __end_of___wmul 2FC8           __size_of_MiApp_EstablishConnection 0100  
                             __end_of_memset 2FAC                   __end_of_DemoOutput_Channel 2572  
                          __size_of_NVMWrite 0078                            __size_ofi1___bmul 0011  
            __size_of_MiApp_MessageAvailable 000A                        i1___lmul@multiplicand 0074  
           MiMAC_ReceivedPacket@PayloadIndex 00BB                            __size_ofi1___lmul 002F  
                   __end_of_MiMAC_SetChannel 2752                            __size_of_NVMalloc 0027  
                        start_initialization 0393                                 i1_DELAY_10us 2F3F  
                          __size_ofi1___wmul 001B                                TxPacket@reTry 00C6  
                        WriteFIFO@IRQ1select 00A4                     __end_of_MiMAC_SendPacket 1BFB  
                               ??_SendPacket 00DA                         _MiApp_ConnectionMode 2217  
                         TxPacket@CCARetries 00C5                              high_isr@counter 004B  
                              ??_LCD_d_write 00B2                         _MiApp_UnicastAddress 2E20  
                        __end_of_CONSOLE_Put 2DCA                                    _SetRFMode 2752  
                              ??_LCD_i_write 00B2                      __size_ofi1_RegisterRead 001F  
                          __size_of_MacroNop 0002                                     ??_SPIGet 00A3  
                                   ??_SPIPut 00A0                               _currentChannel 014C  
                            ?i1_MiWi_TickGet 0070                                    TxPacket@i 00CA  
                        __end_of_LCDTRXCount 22FE  MiApp_EstablishConnection@connectionInterval 0162  
                   ??_DemoOutput_Instruction 00A0                               ??_run_p2p_demo 0154  
                  run_p2p_demo@PressedButton 0161                              _freezer_feature 095A  
                                   ??___bmul 00A1                      __end_of_InitSymbolTimer 2DEA  
                                   ??___lmul 00A8                                     ??___wmul 00AB  
          MiApp_UnicastAddress@PermanentAddr 00E2                                  __pdataBANK2 0169  
                                __pdataBANK3 01DA                                  __pdataBANK4 025C  
                          __size_of_TxPacket 00D6                           __end_of_SendPacket 2528  
                                   ??_memset 00A4                            __size_of_Run_Demo 0003  
                               ?_RegisterSet 00A3                            RegisterRead@value 00A4  
             __size_of_DemoOutput_UpdateTxRx 000A                                  __pbssBIGRAM 2388  
                      __end_of_LCDWritePortA 2026                      MiWi_TickGet@currentTime 00A7  
                      __end_of_LCDWritePortB 2044                __end_of_DemoOutput_UpdateTxRx 095A  
                            i1WriteFIFO@Data 0073                                  __pbssCOMMON 007D  
                                  ___latbits 0003                                    _WriteFIFO 2EC6  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 014D                        ?_MiApp_ConnectionMode 0070  
                        SendPacket@Broadcast 00DE                                  ??_LCD_Erase 00B2  
     MiApp_UnicastAddress@DestinationAddress 00E5                        ?_MiApp_UnicastAddress 00E2  
                               _isdigit$2577 00A0                                     ?_NVMInit 0070  
                 __end_of_MiApp_ProtocolInit 12B5                                     ?_NVMRead 00A3  
                             NVMWrite@source 00B7                   MiApp_EstablishConnection@i 0167  
                   __end_of_MiApp_SetChannel 20E5                             i1___lmul@product 0078  
                          ?_CONSOLE_PrintDec 0070                                   ?_SetRFMode 0070  
                          ?_CONSOLE_PrintHex 0070                                  MiMAC_Init@i 00B8  
                  i1MiWi_TickGet@currentTime 0077                            __size_of_high_isr 038D  
                         ??_CONSOLE_PrintDec 00B0                                  sprintf@flag 00CE  
                         ??_CONSOLE_PrintHex 00A1                                  _EEPROM_Read 217B  
                                sprintf@prec 00C9                          __end_of_LCD_d_write 1824  
                      __size_of_RegisterRead 0023                       _MiApp_MessageAvailable 2DCA  
                       _UserInterruptHandler 2DA1                          __end_of_LCD_i_write 210A  
                          MiMAC_SendPacket@i 00D5                             ___lwdiv@dividend 00A2  
                    _MiApp_UnicastConnection 21A1                     ?_DemoOutput_ChannelError 0070  
                            _Initialize_Demo 1824                        __end_of_ButtonPressed 1A37  
                                   ?___awdiv 00A7                                     ?___awmod 00A0  
                                   ?___lwdiv 00A0                                     ?___lwmod 00A8  
                                  _conn_size 014B                                  _CONSOLE_Put 2DC0  
                                   ?_isdigit 0070                                   ?_WriteFIFO 0070  
              __size_of_MiMAC_ReceivedPacket 01A7                                    _myChannel 016B  
                                   _DELAY_ms 2572                          AddConnection@status 00BF  
                                  _hexpowers 0564                     ??_DemoOutput_UnicastFail 00D7  
                           ___lwdiv@quotient 00A5                                     ?_sprintf 00AE  
                        NVMWrite@PageCounter 00B6                                 _RegisterRead 209F  
                                _LCDTRXCount 22CE                                     _P2PTasks 145C  
                            i1TxPacket@reTry 003B                          _DemoOutput_Greeting 26AB  
                    __end_of_freezer_feature 09BB                               ___wmul@product 00AB  
                                   _LATAbits 010C                                     _LATCbits 010E  
                                   _LATDbits 010F                                     _LATEbits 0110  
                                   _LATFbits 038C                        ?_UserInterruptHandler 0070  
                                  clear_ram0 2DEA                                    _octpowers 054E  
                                   _PIE1bits 0091                   DemoOutput_UpdateTxRx@RxNum 00D4  
                      i1___bmul@multiplicand 0070                   DemoOutput_UpdateTxRx@TxNum 00D6  
                                   _PIR1bits 0011                                    _rxMessage 0120  
                         _nvmConnectionTable 0145                                     i1_SPIGet 2DAE  
                                   i1_SPIPut 2E50                          high_isr@RxPacketPtr 0053  
            __size_of_DemoOutput_Instruction 0001                             ?_InitSymbolTimer 0070  
                                   _SSP1CON1 0215                       __size_of_AddConnection 010F  
                                   _SSP1STAT 0214                 __size_of_MiMAC_DiscardPacket 0025  
                    __size_of_DumpConnection 015E     MiApp_EstablishConnection@ActiveScanIndex 0070  
          MiApp_StartConnection@ScanDuration 00AB                                  _MACRxPacket 012A  
                       ?_DemoOutput_Greeting 0070                                     _RSSILock 0061  
                                   _NVMWrite 193F                                  _MACTxBuffer 02A0  
                                   i1___bmul 2E3F                                SetRFMode@mode 00A7  
                                   i1___lmul 226F                                     _NVMalloc 21C7  
                          ___wmul@multiplier 00A7                                     i1___wmul 2F5A  
                             _CharacterArray 025C                                    high_isr@i 0057  
                              ??i1_SetRFMode 0076                       ??_MiApp_ConnectionMode 00B8  
                         main@freezer_enable 0168                       ??_MiApp_UnicastAddress 00E4  
                    ??_MiApp_StartConnection 00B0                          SendPacket@isCommand 00D8  
                       high_isr@ackInfoIndex 0054                   ??_DemoOutput_HandleMessage 00A7  
                       __end_of_run_p2p_demo 0B8C                               _nextEEPosition 005A  
   i1DELAY_10us@cyclesRequiredForEntireDelay 0024       DELAY_10us@cyclesRequiredForEntireDelay 00B0  
                                   _ConnMode 016C                            ___lmul@multiplier 00A0  
             MiApp_EstablishConnection@retry 015D                                  _LCD_d_write 1800  
                                ??_SetRFMode 00A6                                     _MacroNop 0002  
                           __size_of_NVMInit 0061                             __size_of_NVMRead 0039  
                                _LCD_i_write 20E5                               i1_RegisterRead 2080  
              __size_of_MiApp_DiscardMessage 0005                                     _TxMACSeq 0064  
            __end_of_DemoOutput_ChannelError 2EC6                    ??_MiApp_UnicastConnection 00E7  
                    __end_of_Initialize_Demo 187E                       __size_ofi1_RegisterSet 0016  
                                 _DELAY_10us 2F75                                     _RxPacket 2388  
                                   _TxBuffer 023E                                 _nvmDelayTick 0136  
                         CONSOLE_PutString@c 00A6                                     _TxPacket 1CCC  
                                   _Run_Demo 2DA2                           Total_Connections@i 00A6  
                    __size_of_LCD_Initialize 0057                        MiMAC_ReceivedPacket@i 00BC  
                           __size_of___awdiv 0052                             __size_of___awmod 0046  
                      ??_DemoOutput_Greeting 00D7                                ??i1_WriteFIFO 0073  
                           __size_of___lwdiv 0035                             __size_of___lwmod 002D  
                     run_p2p_demo@switch_val 0163                        _MiApp_BroadcastPacket 2E11  
                                 sprintf@idx 00C2                                   sprintf@len 00C4  
                                 sprintf@val 00C7                         __size_of_RegisterSet 001A  
                            _lost_connection 0066                                  ??_WriteFIFO 00A3  
                           __size_of_isdigit 000F                            ?_MiMAC_SetChannel 00A8  
                            ___lwdiv@divisor 00A0                       _DemoOutput_Instruction 1000  
                            ___lwdiv@counter 00A7                                     __ptext10 0950  
                                   __ptext11 22CE                                     __ptext20 114C  
                                   __ptext12 1ABE                                     __ptext21 239D  
                                   __ptext13 21A1                                     __ptext30 2DCA  
                                   __ptext22 18DE                                     __ptext14 2E20  
                                   __ptext31 145C                                     __ptext23 21C7  
                                   __ptext15 2E11                                     __ptext40 12B5  
                                   __ptext32 24DF                                     __ptext24 1A37  
                                   __ptext16 2E87                                     __ptext41 2498  
                                   __ptext33 1B56                                     __ptext25 20C2  
                                   __ptext17 19B7                                     __ptext50 0002  
                                   __ptext42 103D                                     __ptext34 1CCC  
                                   __ptext26 26FE                                     __ptext18 1824  
                                   __ptext51 1EA2                                     __ptext43 2155  
                                   __ptext35 2EC6                                     __ptext27 2DDF  
                                   __ptext19 2367                                     __ptext60 22FE  
                                   __ptext52 21EE                                     __ptext44 212F  
                                   __ptext36 2752                                     __ptext28 217B  
                                   __ptext61 0B8C                                     __ptext53 1000  
                                   __ptext45 2DA9                                     __ptext37 2F25  
                                   __ptext29 1DA2                                     __ptext70 2F0C  
                                   __ptext62 2E02                                     __ptext54 2EB0  
                                   __ptext46 210A                                     __ptext38 209F  
                                   __ptext71 2F90                                     __ptext63 2FAC  
                                   __ptext55 2528                                     __ptext47 2217  
                                   __ptext39 2F75                                     __ptext80 2DD4  
                                   __ptext72 2044                                     __ptext64 2242  
                                   __ptext56 187E                                     __ptext48 193F  
                                   __ptext73 2026                                     __ptext65 2332  
                                   __ptext57 2452                                     __ptext49 2DB4  
                                   __ptext90 2E50                                     __ptext82 2F5A  
                                   __ptext74 2008                                     __ptext66 2E62  
                                   __ptext58 2659                                     __ptext91 23D6  
                                   __ptext83 2E3F                                     __ptext75 2EDC  
                                   __ptext67 260B                                     __ptext59 26AB  
                                   __ptext92 2F3F                                     __ptext84 1BFB  
                                   __ptext76 2572                                     __ptext68 20E5  
                                   __ptext93 226F                                     __ptext85 2E74  
                                   __ptext77 229E                                     __ptext69 1800  
                                   __ptext94 2DA1                                     __ptext86 25BE  
                                   __ptext78 2EF3                                     __ptext87 2E9A  
                                   __ptext79 2DC0                                     __ptext88 2080  
                                   __ptext89 2DAE                                 _SSP1CON1bits 0215  
                              _AddConnection 103D                     TxPacket@allowedTxFailure 00C7  
                         ??_MiMAC_SetChannel 00A9                            ?_MiMAC_SendPacket 00CC  
            __size_of_DemoOutput_UnicastFail 0013                       __end_ofi1_RegisterRead 209F  
                                   _high_isr 0004                          __end_ofi1_SetRFMode 260B  
                           __size_of_sprintf 0474                              DumpConnection@i 00B9  
                            DumpConnection@j 00B8                             ??i1_MiWi_TickGet 0074  
                     __size_of_isSameAddress 0026                           ??_MiMAC_SendPacket 00D1  
                           Initialize_Demo@i 00EE                           _DemoOutput_Channel 2528  
                     ??_UserInterruptHandler 0070                                __size_of_main 001E  
                           ?_freezer_feature 0070                      i1RegisterSet@IRQ1select 0075  
                        ?_DemoOutput_Channel 00D7                                   _LCDDisplay 22FE  
                                   _temp_bit 0144                                   _LCDInitSPI 2DBA  
                      run_p2p_demo@select_ed 0164                                     int$flags 007E  
                         LCDTRXCount@rxCount 00D0                  MiApp_EstablishConnection@t1 015E  
                MiApp_EstablishConnection@t2 0163                           LCDTRXCount@txCount 00D3  
                __size_of_CONSOLE_Initialize 000B                            i1TxPacket@rssival 003E  
                                 _LCD_Update 260B                   MiMAC_SendPacket@MACPayload 00CF  
                 i1TxPacket@allowedTxFailure 003C                                i1_RegisterSet 2E9A  
                      run_p2p_demo@update_ed 0162                                   _INTCONbits 000B  
                             AddConnection@i 00C1                         ??_DemoOutput_Channel 00D8  
                        __end_ofi1_WriteFIFO 2E87                              i1SetRFMode@mode 0077  
                          __CFG_BOREN$SBODEN 0000                                 CONSOLE_Put@c 00A0  
                             ?_AddConnection 0070                  ButtonPressed@tickDifference 00B3  
                                   isdigit@c 00A1                                     memset@p1 00A5  
                        LCDInitPortA@preRFIE 00A3                              ?i1_RegisterRead 0070  
                                _nvmConnMode 0069                       Total_Connections@count 00A5  
                MiApp_ProtocolInit@initValue 00BD                          LCDInitPortB@preRFIE 00A3  
                                   intlevel1 0000                            ?_MiApp_SetChannel 0070  
                                  sprintf@ap 00C6                                    sprintf@cp 00C3  
                                  sprintf@sp 00CD                      ?_MiApp_MessageAvailable 0070  
                           ___lwmod@dividend 00AA                                 ?_EEPROM_Read 00A3  
                         ??_MiApp_SetChannel 00B8                            __CFG_CLKOUTEN$OFF 0000  
                           ?_Initialize_Demo 0070                                i1TxPacket@CCA 007C  
                              ?_MiWi_TickGet 00A0                    DemoOutput_HandleMessage@i 00AB  
                                ?_DELAY_10us 00AC                               LCDWritePortA@v 00A3  
                             LCDWritePortB@v 00A3                           _MiApp_ProtocolInit 114C  
               SendPacket@DestinationAddress 00D6                       _DemoOutput_UnicastFail 2E87  
                              _MACInitParams 0058                          MiMAC_Init@initValue 00B2  
                  __size_of_CONSOLE_PrintDec 0060                    __size_of_CONSOLE_PrintHex 0029  
                             _DumpConnection 1EA2                        i1RegisterRead@address 0074  
                              _isSameAddress 2155                          ?_MiApp_ProtocolInit 0070  
                     ?_MiApp_BroadcastPacket 0070                               ?i1_RegisterSet 0073  
                                   sprintf@c 00CC                                     sprintf@f 00AE  
                      __size_of_run_p2p_demo 01D1                                 ?_CONSOLE_Put 0070  
           __size_of_DemoOutput_ChannelError 0016                              ___lwmod@divisor 00A8  
                                i1_SetRFMode 25BE   MiApp_EstablishConnection@tmpConnectionMode 015C  
                            ___lwmod@counter 00AD                          TxPacket@TxPacketLen 00C9  
                               i1TxPacket@t1 0032                                 i1TxPacket@t2 0036  
                 ?_MiApp_EstablishConnection 00EB                        _DemoOutput_UpdateTxRx 0950  
             __end_of_MiApp_MessageAvailable 2DD4                          _MiMAC_DiscardPacket 210A  
                         _nvmOutFrameCounter 0149                            _nvmCurrentChannel 006B  
                       ??_MiApp_ProtocolInit 00BA                                 ?_LCDTRXCount 00D0  
                                i1TxPacket@i 003D                             EEPROM_Read@count 00A4  
                             ??_MiWi_TickGet 00A4                          i1RegisterRead@value 0075  
                            EEPROM_Read@addr 00A3                              EEPROM_Read@dest 00A6  
                                 i1_TxPacket 1BFB                        RegisterSet@IRQ1select 00A5  
               __end_of_MiMAC_ReceivedPacket 145C                                  ?_LCDDisplay 00D0  
                     __size_of_LCDWritePortA 001E                       __size_of_LCDWritePortB 001E  
                     __end_of_DumpConnection 2000                                  ?_LCDInitSPI 0070  
