

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 23:30:11 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text23,local,class=CODE,merge=1,delta=2
    31                           	psect	text25,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	text44,local,class=CODE,merge=1,delta=2
    34                           	psect	text61,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext2,local,class=CONST,delta=2
    36                           	psect	text64,local,class=CODE,merge=1,delta=2
    37                           	psect	text71,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text82,local,class=CODE,merge=1,delta=2
    40                           	psect	text84,local,class=CODE,merge=1,delta=2
    41                           	psect	text88,local,class=CODE,merge=1,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x620,48
    44                           	dabs	1,0x5A0,80
    45                           	dabs	1,0x566,10
    46                           	dabs	1,0x2366,0,_RxBuffer
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  0110                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011E                     	;# 
   118  011F                     	;# 
   119  018C                     	;# 
   120  0190                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  020D                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0219                     	;# 
   163  021A                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021D                     	;# 
   167  021E                     	;# 
   168  021F                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029F                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0314                     	;# 
   196  0315                     	;# 
   197  0315                     	;# 
   198  0316                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  031C                     	;# 
   204  031C                     	;# 
   205  031D                     	;# 
   206  031E                     	;# 
   207  038C                     	;# 
   208  038D                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  040C                     	;# 
   213  040D                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  041C                     	;# 
   218  041D                     	;# 
   219  041E                     	;# 
   220  048D                     	;# 
   221  0491                     	;# 
   222  0492                     	;# 
   223  0493                     	;# 
   224  0493                     	;# 
   225  0494                     	;# 
   226  0495                     	;# 
   227  0496                     	;# 
   228  0497                     	;# 
   229  0791                     	;# 
   230  0792                     	;# 
   231  0793                     	;# 
   232  0794                     	;# 
   233  0795                     	;# 
   234  0798                     	;# 
   235  0799                     	;# 
   236  079A                     	;# 
   237  079B                     	;# 
   238  079C                     	;# 
   239  079D                     	;# 
   240  07A0                     	;# 
   241  07A1                     	;# 
   242  07A2                     	;# 
   243  07A3                     	;# 
   244  07A4                     	;# 
   245  07A5                     	;# 
   246  07A6                     	;# 
   247  07A7                     	;# 
   248  07A8                     	;# 
   249  07A9                     	;# 
   250  07AA                     	;# 
   251  07AB                     	;# 
   252  07AC                     	;# 
   253  07AD                     	;# 
   254  07AE                     	;# 
   255  07AF                     	;# 
   256  07B0                     	;# 
   257  07B1                     	;# 
   258  07B2                     	;# 
   259  07B3                     	;# 
   260  07B4                     	;# 
   261  07B5                     	;# 
   262  07B6                     	;# 
   263  07B7                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001E                     	;# 
   306  001F                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  008F                     	;# 
   311  0090                     	;# 
   312  0091                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0094                     	;# 
   316  0095                     	;# 
   317  0096                     	;# 
   318  0097                     	;# 
   319  0098                     	;# 
   320  0099                     	;# 
   321  009A                     	;# 
   322  009B                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  0110                     	;# 
   332  0111                     	;# 
   333  0112                     	;# 
   334  0113                     	;# 
   335  0114                     	;# 
   336  0115                     	;# 
   337  0116                     	;# 
   338  0117                     	;# 
   339  0118                     	;# 
   340  0119                     	;# 
   341  011A                     	;# 
   342  011B                     	;# 
   343  011D                     	;# 
   344  011E                     	;# 
   345  011F                     	;# 
   346  018C                     	;# 
   347  0190                     	;# 
   348  0191                     	;# 
   349  0191                     	;# 
   350  0192                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019A                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019C                     	;# 
   366  019C                     	;# 
   367  019D                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  019F                     	;# 
   373  020D                     	;# 
   374  0211                     	;# 
   375  0211                     	;# 
   376  0212                     	;# 
   377  0212                     	;# 
   378  0213                     	;# 
   379  0213                     	;# 
   380  0214                     	;# 
   381  0214                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0215                     	;# 
   385  0216                     	;# 
   386  0216                     	;# 
   387  0217                     	;# 
   388  0217                     	;# 
   389  0219                     	;# 
   390  021A                     	;# 
   391  021B                     	;# 
   392  021C                     	;# 
   393  021D                     	;# 
   394  021E                     	;# 
   395  021F                     	;# 
   396  028C                     	;# 
   397  028D                     	;# 
   398  0291                     	;# 
   399  0291                     	;# 
   400  0292                     	;# 
   401  0293                     	;# 
   402  0294                     	;# 
   403  0295                     	;# 
   404  0295                     	;# 
   405  0296                     	;# 
   406  0298                     	;# 
   407  0298                     	;# 
   408  0299                     	;# 
   409  029A                     	;# 
   410  029B                     	;# 
   411  029C                     	;# 
   412  029C                     	;# 
   413  029D                     	;# 
   414  029E                     	;# 
   415  029F                     	;# 
   416  030C                     	;# 
   417  030D                     	;# 
   418  0311                     	;# 
   419  0311                     	;# 
   420  0312                     	;# 
   421  0313                     	;# 
   422  0314                     	;# 
   423  0315                     	;# 
   424  0315                     	;# 
   425  0316                     	;# 
   426  0318                     	;# 
   427  0318                     	;# 
   428  0319                     	;# 
   429  031A                     	;# 
   430  031C                     	;# 
   431  031C                     	;# 
   432  031D                     	;# 
   433  031E                     	;# 
   434  038C                     	;# 
   435  038D                     	;# 
   436  0394                     	;# 
   437  0395                     	;# 
   438  0396                     	;# 
   439  040C                     	;# 
   440  040D                     	;# 
   441  0415                     	;# 
   442  0416                     	;# 
   443  0417                     	;# 
   444  041C                     	;# 
   445  041D                     	;# 
   446  041E                     	;# 
   447  048D                     	;# 
   448  0491                     	;# 
   449  0492                     	;# 
   450  0493                     	;# 
   451  0493                     	;# 
   452  0494                     	;# 
   453  0495                     	;# 
   454  0496                     	;# 
   455  0497                     	;# 
   456  0791                     	;# 
   457  0792                     	;# 
   458  0793                     	;# 
   459  0794                     	;# 
   460  0795                     	;# 
   461  0798                     	;# 
   462  0799                     	;# 
   463  079A                     	;# 
   464  079B                     	;# 
   465  079C                     	;# 
   466  079D                     	;# 
   467  07A0                     	;# 
   468  07A1                     	;# 
   469  07A2                     	;# 
   470  07A3                     	;# 
   471  07A4                     	;# 
   472  07A5                     	;# 
   473  07A6                     	;# 
   474  07A7                     	;# 
   475  07A8                     	;# 
   476  07A9                     	;# 
   477  07AA                     	;# 
   478  07AB                     	;# 
   479  07AC                     	;# 
   480  07AD                     	;# 
   481  07AE                     	;# 
   482  07AF                     	;# 
   483  07B0                     	;# 
   484  07B1                     	;# 
   485  07B2                     	;# 
   486  07B3                     	;# 
   487  07B4                     	;# 
   488  07B5                     	;# 
   489  07B6                     	;# 
   490  07B7                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  000F                     	;# 
   518  0010                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  001E                     	;# 
   533  001F                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0094                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  010C                     	;# 
   555  010D                     	;# 
   556  010E                     	;# 
   557  010F                     	;# 
   558  0110                     	;# 
   559  0111                     	;# 
   560  0112                     	;# 
   561  0113                     	;# 
   562  0114                     	;# 
   563  0115                     	;# 
   564  0116                     	;# 
   565  0117                     	;# 
   566  0118                     	;# 
   567  0119                     	;# 
   568  011A                     	;# 
   569  011B                     	;# 
   570  011D                     	;# 
   571  011E                     	;# 
   572  011F                     	;# 
   573  018C                     	;# 
   574  0190                     	;# 
   575  0191                     	;# 
   576  0191                     	;# 
   577  0192                     	;# 
   578  0193                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0211                     	;# 
   602  0211                     	;# 
   603  0212                     	;# 
   604  0212                     	;# 
   605  0213                     	;# 
   606  0213                     	;# 
   607  0214                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0216                     	;# 
   613  0216                     	;# 
   614  0217                     	;# 
   615  0217                     	;# 
   616  0219                     	;# 
   617  021A                     	;# 
   618  021B                     	;# 
   619  021C                     	;# 
   620  021D                     	;# 
   621  021E                     	;# 
   622  021F                     	;# 
   623  028C                     	;# 
   624  028D                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0298                     	;# 
   634  0298                     	;# 
   635  0299                     	;# 
   636  029A                     	;# 
   637  029B                     	;# 
   638  029C                     	;# 
   639  029C                     	;# 
   640  029D                     	;# 
   641  029E                     	;# 
   642  029F                     	;# 
   643  030C                     	;# 
   644  030D                     	;# 
   645  0311                     	;# 
   646  0311                     	;# 
   647  0312                     	;# 
   648  0313                     	;# 
   649  0314                     	;# 
   650  0315                     	;# 
   651  0315                     	;# 
   652  0316                     	;# 
   653  0318                     	;# 
   654  0318                     	;# 
   655  0319                     	;# 
   656  031A                     	;# 
   657  031C                     	;# 
   658  031C                     	;# 
   659  031D                     	;# 
   660  031E                     	;# 
   661  038C                     	;# 
   662  038D                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  040C                     	;# 
   667  040D                     	;# 
   668  0415                     	;# 
   669  0416                     	;# 
   670  0417                     	;# 
   671  041C                     	;# 
   672  041D                     	;# 
   673  041E                     	;# 
   674  048D                     	;# 
   675  0491                     	;# 
   676  0492                     	;# 
   677  0493                     	;# 
   678  0493                     	;# 
   679  0494                     	;# 
   680  0495                     	;# 
   681  0496                     	;# 
   682  0497                     	;# 
   683  0791                     	;# 
   684  0792                     	;# 
   685  0793                     	;# 
   686  0794                     	;# 
   687  0795                     	;# 
   688  0798                     	;# 
   689  0799                     	;# 
   690  079A                     	;# 
   691  079B                     	;# 
   692  079C                     	;# 
   693  079D                     	;# 
   694  07A0                     	;# 
   695  07A1                     	;# 
   696  07A2                     	;# 
   697  07A3                     	;# 
   698  07A4                     	;# 
   699  07A5                     	;# 
   700  07A6                     	;# 
   701  07A7                     	;# 
   702  07A8                     	;# 
   703  07A9                     	;# 
   704  07AA                     	;# 
   705  07AB                     	;# 
   706  07AC                     	;# 
   707  07AD                     	;# 
   708  07AE                     	;# 
   709  07AF                     	;# 
   710  07B0                     	;# 
   711  07B1                     	;# 
   712  07B2                     	;# 
   713  07B3                     	;# 
   714  07B4                     	;# 
   715  07B5                     	;# 
   716  07B6                     	;# 
   717  07B7                     	;# 
   718  0FE4                     	;# 
   719  0FE5                     	;# 
   720  0FE6                     	;# 
   721  0FE7                     	;# 
   722  0FE8                     	;# 
   723  0FE9                     	;# 
   724  0FEA                     	;# 
   725  0FEB                     	;# 
   726  0FED                     	;# 
   727  0FEE                     	;# 
   728  0FEF                     	;# 
   729  0000                     	;# 
   730  0001                     	;# 
   731  0002                     	;# 
   732  0003                     	;# 
   733  0004                     	;# 
   734  0005                     	;# 
   735  0006                     	;# 
   736  0007                     	;# 
   737  0008                     	;# 
   738  0009                     	;# 
   739  000A                     	;# 
   740  000B                     	;# 
   741  000C                     	;# 
   742  000D                     	;# 
   743  000E                     	;# 
   744  000F                     	;# 
   745  0010                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0016                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001C                     	;# 
   759  001E                     	;# 
   760  001F                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  008E                     	;# 
   764  008F                     	;# 
   765  0090                     	;# 
   766  0091                     	;# 
   767  0092                     	;# 
   768  0093                     	;# 
   769  0094                     	;# 
   770  0095                     	;# 
   771  0096                     	;# 
   772  0097                     	;# 
   773  0098                     	;# 
   774  0099                     	;# 
   775  009A                     	;# 
   776  009B                     	;# 
   777  009B                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009E                     	;# 
   781  010C                     	;# 
   782  010D                     	;# 
   783  010E                     	;# 
   784  010F                     	;# 
   785  0110                     	;# 
   786  0111                     	;# 
   787  0112                     	;# 
   788  0113                     	;# 
   789  0114                     	;# 
   790  0115                     	;# 
   791  0116                     	;# 
   792  0117                     	;# 
   793  0118                     	;# 
   794  0119                     	;# 
   795  011A                     	;# 
   796  011B                     	;# 
   797  011D                     	;# 
   798  011E                     	;# 
   799  011F                     	;# 
   800  018C                     	;# 
   801  0190                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0194                     	;# 
   809  0195                     	;# 
   810  0196                     	;# 
   811  0199                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019A                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019C                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019D                     	;# 
   823  019E                     	;# 
   824  019E                     	;# 
   825  019F                     	;# 
   826  019F                     	;# 
   827  020D                     	;# 
   828  0211                     	;# 
   829  0211                     	;# 
   830  0212                     	;# 
   831  0212                     	;# 
   832  0213                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0214                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0216                     	;# 
   840  0216                     	;# 
   841  0217                     	;# 
   842  0217                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021C                     	;# 
   847  021D                     	;# 
   848  021E                     	;# 
   849  021F                     	;# 
   850  028C                     	;# 
   851  028D                     	;# 
   852  0291                     	;# 
   853  0291                     	;# 
   854  0292                     	;# 
   855  0293                     	;# 
   856  0294                     	;# 
   857  0295                     	;# 
   858  0295                     	;# 
   859  0296                     	;# 
   860  0298                     	;# 
   861  0298                     	;# 
   862  0299                     	;# 
   863  029A                     	;# 
   864  029B                     	;# 
   865  029C                     	;# 
   866  029C                     	;# 
   867  029D                     	;# 
   868  029E                     	;# 
   869  029F                     	;# 
   870  030C                     	;# 
   871  030D                     	;# 
   872  0311                     	;# 
   873  0311                     	;# 
   874  0312                     	;# 
   875  0313                     	;# 
   876  0314                     	;# 
   877  0315                     	;# 
   878  0315                     	;# 
   879  0316                     	;# 
   880  0318                     	;# 
   881  0318                     	;# 
   882  0319                     	;# 
   883  031A                     	;# 
   884  031C                     	;# 
   885  031C                     	;# 
   886  031D                     	;# 
   887  031E                     	;# 
   888  038C                     	;# 
   889  038D                     	;# 
   890  0394                     	;# 
   891  0395                     	;# 
   892  0396                     	;# 
   893  040C                     	;# 
   894  040D                     	;# 
   895  0415                     	;# 
   896  0416                     	;# 
   897  0417                     	;# 
   898  041C                     	;# 
   899  041D                     	;# 
   900  041E                     	;# 
   901  048D                     	;# 
   902  0491                     	;# 
   903  0492                     	;# 
   904  0493                     	;# 
   905  0493                     	;# 
   906  0494                     	;# 
   907  0495                     	;# 
   908  0496                     	;# 
   909  0497                     	;# 
   910  0791                     	;# 
   911  0792                     	;# 
   912  0793                     	;# 
   913  0794                     	;# 
   914  0795                     	;# 
   915  0798                     	;# 
   916  0799                     	;# 
   917  079A                     	;# 
   918  079B                     	;# 
   919  079C                     	;# 
   920  079D                     	;# 
   921  07A0                     	;# 
   922  07A1                     	;# 
   923  07A2                     	;# 
   924  07A3                     	;# 
   925  07A4                     	;# 
   926  07A5                     	;# 
   927  07A6                     	;# 
   928  07A7                     	;# 
   929  07A8                     	;# 
   930  07A9                     	;# 
   931  07AA                     	;# 
   932  07AB                     	;# 
   933  07AC                     	;# 
   934  07AD                     	;# 
   935  07AE                     	;# 
   936  07AF                     	;# 
   937  07B0                     	;# 
   938  07B1                     	;# 
   939  07B2                     	;# 
   940  07B3                     	;# 
   941  07B4                     	;# 
   942  07B5                     	;# 
   943  07B6                     	;# 
   944  07B7                     	;# 
   945  0FE4                     	;# 
   946  0FE5                     	;# 
   947  0FE6                     	;# 
   948  0FE7                     	;# 
   949  0FE8                     	;# 
   950  0FE9                     	;# 
   951  0FEA                     	;# 
   952  0FEB                     	;# 
   953  0FED                     	;# 
   954  0FEE                     	;# 
   955  0FEF                     	;# 
   956  0000                     	;# 
   957  0001                     	;# 
   958  0002                     	;# 
   959  0003                     	;# 
   960  0004                     	;# 
   961  0005                     	;# 
   962  0006                     	;# 
   963  0007                     	;# 
   964  0008                     	;# 
   965  0009                     	;# 
   966  000A                     	;# 
   967  000B                     	;# 
   968  000C                     	;# 
   969  000D                     	;# 
   970  000E                     	;# 
   971  000F                     	;# 
   972  0010                     	;# 
   973  0011                     	;# 
   974  0012                     	;# 
   975  0013                     	;# 
   976  0014                     	;# 
   977  0015                     	;# 
   978  0016                     	;# 
   979  0016                     	;# 
   980  0017                     	;# 
   981  0018                     	;# 
   982  0019                     	;# 
   983  001A                     	;# 
   984  001B                     	;# 
   985  001C                     	;# 
   986  001E                     	;# 
   987  001F                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008F                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009B                     	;# 
  1005  009C                     	;# 
  1006  009D                     	;# 
  1007  009E                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  010F                     	;# 
  1012  0110                     	;# 
  1013  0111                     	;# 
  1014  0112                     	;# 
  1015  0113                     	;# 
  1016  0114                     	;# 
  1017  0115                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  0118                     	;# 
  1021  0119                     	;# 
  1022  011A                     	;# 
  1023  011B                     	;# 
  1024  011D                     	;# 
  1025  011E                     	;# 
  1026  011F                     	;# 
  1027  018C                     	;# 
  1028  0190                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0194                     	;# 
  1036  0195                     	;# 
  1037  0196                     	;# 
  1038  0199                     	;# 
  1039  0199                     	;# 
  1040  019A                     	;# 
  1041  019A                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019C                     	;# 
  1047  019C                     	;# 
  1048  019D                     	;# 
  1049  019D                     	;# 
  1050  019E                     	;# 
  1051  019E                     	;# 
  1052  019F                     	;# 
  1053  019F                     	;# 
  1054  020D                     	;# 
  1055  0211                     	;# 
  1056  0211                     	;# 
  1057  0212                     	;# 
  1058  0212                     	;# 
  1059  0213                     	;# 
  1060  0213                     	;# 
  1061  0214                     	;# 
  1062  0214                     	;# 
  1063  0215                     	;# 
  1064  0215                     	;# 
  1065  0215                     	;# 
  1066  0216                     	;# 
  1067  0216                     	;# 
  1068  0217                     	;# 
  1069  0217                     	;# 
  1070  0219                     	;# 
  1071  021A                     	;# 
  1072  021B                     	;# 
  1073  021C                     	;# 
  1074  021D                     	;# 
  1075  021E                     	;# 
  1076  021F                     	;# 
  1077  028C                     	;# 
  1078  028D                     	;# 
  1079  0291                     	;# 
  1080  0291                     	;# 
  1081  0292                     	;# 
  1082  0293                     	;# 
  1083  0294                     	;# 
  1084  0295                     	;# 
  1085  0295                     	;# 
  1086  0296                     	;# 
  1087  0298                     	;# 
  1088  0298                     	;# 
  1089  0299                     	;# 
  1090  029A                     	;# 
  1091  029B                     	;# 
  1092  029C                     	;# 
  1093  029C                     	;# 
  1094  029D                     	;# 
  1095  029E                     	;# 
  1096  029F                     	;# 
  1097  030C                     	;# 
  1098  030D                     	;# 
  1099  0311                     	;# 
  1100  0311                     	;# 
  1101  0312                     	;# 
  1102  0313                     	;# 
  1103  0314                     	;# 
  1104  0315                     	;# 
  1105  0315                     	;# 
  1106  0316                     	;# 
  1107  0318                     	;# 
  1108  0318                     	;# 
  1109  0319                     	;# 
  1110  031A                     	;# 
  1111  031C                     	;# 
  1112  031C                     	;# 
  1113  031D                     	;# 
  1114  031E                     	;# 
  1115  038C                     	;# 
  1116  038D                     	;# 
  1117  0394                     	;# 
  1118  0395                     	;# 
  1119  0396                     	;# 
  1120  040C                     	;# 
  1121  040D                     	;# 
  1122  0415                     	;# 
  1123  0416                     	;# 
  1124  0417                     	;# 
  1125  041C                     	;# 
  1126  041D                     	;# 
  1127  041E                     	;# 
  1128  048D                     	;# 
  1129  0491                     	;# 
  1130  0492                     	;# 
  1131  0493                     	;# 
  1132  0493                     	;# 
  1133  0494                     	;# 
  1134  0495                     	;# 
  1135  0496                     	;# 
  1136  0497                     	;# 
  1137  0791                     	;# 
  1138  0792                     	;# 
  1139  0793                     	;# 
  1140  0794                     	;# 
  1141  0795                     	;# 
  1142  0798                     	;# 
  1143  0799                     	;# 
  1144  079A                     	;# 
  1145  079B                     	;# 
  1146  079C                     	;# 
  1147  079D                     	;# 
  1148  07A0                     	;# 
  1149  07A1                     	;# 
  1150  07A2                     	;# 
  1151  07A3                     	;# 
  1152  07A4                     	;# 
  1153  07A5                     	;# 
  1154  07A6                     	;# 
  1155  07A7                     	;# 
  1156  07A8                     	;# 
  1157  07A9                     	;# 
  1158  07AA                     	;# 
  1159  07AB                     	;# 
  1160  07AC                     	;# 
  1161  07AD                     	;# 
  1162  07AE                     	;# 
  1163  07AF                     	;# 
  1164  07B0                     	;# 
  1165  07B1                     	;# 
  1166  07B2                     	;# 
  1167  07B3                     	;# 
  1168  07B4                     	;# 
  1169  07B5                     	;# 
  1170  07B6                     	;# 
  1171  07B7                     	;# 
  1172  0FE4                     	;# 
  1173  0FE5                     	;# 
  1174  0FE6                     	;# 
  1175  0FE7                     	;# 
  1176  0FE8                     	;# 
  1177  0FE9                     	;# 
  1178  0FEA                     	;# 
  1179  0FEB                     	;# 
  1180  0FED                     	;# 
  1181  0FEE                     	;# 
  1182  0FEF                     	;# 
  1183  0000                     	;# 
  1184  0001                     	;# 
  1185  0002                     	;# 
  1186  0003                     	;# 
  1187  0004                     	;# 
  1188  0005                     	;# 
  1189  0006                     	;# 
  1190  0007                     	;# 
  1191  0008                     	;# 
  1192  0009                     	;# 
  1193  000A                     	;# 
  1194  000B                     	;# 
  1195  000C                     	;# 
  1196  000D                     	;# 
  1197  000E                     	;# 
  1198  000F                     	;# 
  1199  0010                     	;# 
  1200  0011                     	;# 
  1201  0012                     	;# 
  1202  0013                     	;# 
  1203  0014                     	;# 
  1204  0015                     	;# 
  1205  0016                     	;# 
  1206  0016                     	;# 
  1207  0017                     	;# 
  1208  0018                     	;# 
  1209  0019                     	;# 
  1210  001A                     	;# 
  1211  001B                     	;# 
  1212  001C                     	;# 
  1213  001E                     	;# 
  1214  001F                     	;# 
  1215  008C                     	;# 
  1216  008D                     	;# 
  1217  008E                     	;# 
  1218  008F                     	;# 
  1219  0090                     	;# 
  1220  0091                     	;# 
  1221  0092                     	;# 
  1222  0093                     	;# 
  1223  0094                     	;# 
  1224  0095                     	;# 
  1225  0096                     	;# 
  1226  0097                     	;# 
  1227  0098                     	;# 
  1228  0099                     	;# 
  1229  009A                     	;# 
  1230  009B                     	;# 
  1231  009B                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009E                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  010E                     	;# 
  1238  010F                     	;# 
  1239  0110                     	;# 
  1240  0111                     	;# 
  1241  0112                     	;# 
  1242  0113                     	;# 
  1243  0114                     	;# 
  1244  0115                     	;# 
  1245  0116                     	;# 
  1246  0117                     	;# 
  1247  0118                     	;# 
  1248  0119                     	;# 
  1249  011A                     	;# 
  1250  011B                     	;# 
  1251  011D                     	;# 
  1252  011E                     	;# 
  1253  011F                     	;# 
  1254  018C                     	;# 
  1255  0190                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0199                     	;# 
  1266  0199                     	;# 
  1267  019A                     	;# 
  1268  019A                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019D                     	;# 
  1276  019D                     	;# 
  1277  019E                     	;# 
  1278  019E                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  020D                     	;# 
  1282  0211                     	;# 
  1283  0211                     	;# 
  1284  0212                     	;# 
  1285  0212                     	;# 
  1286  0213                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0216                     	;# 
  1294  0216                     	;# 
  1295  0217                     	;# 
  1296  0217                     	;# 
  1297  0219                     	;# 
  1298  021A                     	;# 
  1299  021B                     	;# 
  1300  021C                     	;# 
  1301  021D                     	;# 
  1302  021E                     	;# 
  1303  021F                     	;# 
  1304  028C                     	;# 
  1305  028D                     	;# 
  1306  0291                     	;# 
  1307  0291                     	;# 
  1308  0292                     	;# 
  1309  0293                     	;# 
  1310  0294                     	;# 
  1311  0295                     	;# 
  1312  0295                     	;# 
  1313  0296                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  029B                     	;# 
  1319  029C                     	;# 
  1320  029C                     	;# 
  1321  029D                     	;# 
  1322  029E                     	;# 
  1323  029F                     	;# 
  1324  030C                     	;# 
  1325  030D                     	;# 
  1326  0311                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  0314                     	;# 
  1331  0315                     	;# 
  1332  0315                     	;# 
  1333  0316                     	;# 
  1334  0318                     	;# 
  1335  0318                     	;# 
  1336  0319                     	;# 
  1337  031A                     	;# 
  1338  031C                     	;# 
  1339  031C                     	;# 
  1340  031D                     	;# 
  1341  031E                     	;# 
  1342  038C                     	;# 
  1343  038D                     	;# 
  1344  0394                     	;# 
  1345  0395                     	;# 
  1346  0396                     	;# 
  1347  040C                     	;# 
  1348  040D                     	;# 
  1349  0415                     	;# 
  1350  0416                     	;# 
  1351  0417                     	;# 
  1352  041C                     	;# 
  1353  041D                     	;# 
  1354  041E                     	;# 
  1355  048D                     	;# 
  1356  0491                     	;# 
  1357  0492                     	;# 
  1358  0493                     	;# 
  1359  0493                     	;# 
  1360  0494                     	;# 
  1361  0495                     	;# 
  1362  0496                     	;# 
  1363  0497                     	;# 
  1364  0791                     	;# 
  1365  0792                     	;# 
  1366  0793                     	;# 
  1367  0794                     	;# 
  1368  0795                     	;# 
  1369  0798                     	;# 
  1370  0799                     	;# 
  1371  079A                     	;# 
  1372  079B                     	;# 
  1373  079C                     	;# 
  1374  079D                     	;# 
  1375  07A0                     	;# 
  1376  07A1                     	;# 
  1377  07A2                     	;# 
  1378  07A3                     	;# 
  1379  07A4                     	;# 
  1380  07A5                     	;# 
  1381  07A6                     	;# 
  1382  07A7                     	;# 
  1383  07A8                     	;# 
  1384  07A9                     	;# 
  1385  07AA                     	;# 
  1386  07AB                     	;# 
  1387  07AC                     	;# 
  1388  07AD                     	;# 
  1389  07AE                     	;# 
  1390  07AF                     	;# 
  1391  07B0                     	;# 
  1392  07B1                     	;# 
  1393  07B2                     	;# 
  1394  07B3                     	;# 
  1395  07B4                     	;# 
  1396  07B5                     	;# 
  1397  07B6                     	;# 
  1398  07B7                     	;# 
  1399  0FE4                     	;# 
  1400  0FE5                     	;# 
  1401  0FE6                     	;# 
  1402  0FE7                     	;# 
  1403  0FE8                     	;# 
  1404  0FE9                     	;# 
  1405  0FEA                     	;# 
  1406  0FEB                     	;# 
  1407  0FED                     	;# 
  1408  0FEE                     	;# 
  1409  0FEF                     	;# 
  1410  0000                     	;# 
  1411  0001                     	;# 
  1412  0002                     	;# 
  1413  0003                     	;# 
  1414  0004                     	;# 
  1415  0005                     	;# 
  1416  0006                     	;# 
  1417  0007                     	;# 
  1418  0008                     	;# 
  1419  0009                     	;# 
  1420  000A                     	;# 
  1421  000B                     	;# 
  1422  000C                     	;# 
  1423  000D                     	;# 
  1424  000E                     	;# 
  1425  000F                     	;# 
  1426  0010                     	;# 
  1427  0011                     	;# 
  1428  0012                     	;# 
  1429  0013                     	;# 
  1430  0014                     	;# 
  1431  0015                     	;# 
  1432  0016                     	;# 
  1433  0016                     	;# 
  1434  0017                     	;# 
  1435  0018                     	;# 
  1436  0019                     	;# 
  1437  001A                     	;# 
  1438  001B                     	;# 
  1439  001C                     	;# 
  1440  001E                     	;# 
  1441  001F                     	;# 
  1442  008C                     	;# 
  1443  008D                     	;# 
  1444  008E                     	;# 
  1445  008F                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0093                     	;# 
  1450  0094                     	;# 
  1451  0095                     	;# 
  1452  0096                     	;# 
  1453  0097                     	;# 
  1454  0098                     	;# 
  1455  0099                     	;# 
  1456  009A                     	;# 
  1457  009B                     	;# 
  1458  009B                     	;# 
  1459  009C                     	;# 
  1460  009D                     	;# 
  1461  009E                     	;# 
  1462  010C                     	;# 
  1463  010D                     	;# 
  1464  010E                     	;# 
  1465  010F                     	;# 
  1466  0110                     	;# 
  1467  0111                     	;# 
  1468  0112                     	;# 
  1469  0113                     	;# 
  1470  0114                     	;# 
  1471  0115                     	;# 
  1472  0116                     	;# 
  1473  0117                     	;# 
  1474  0118                     	;# 
  1475  0119                     	;# 
  1476  011A                     	;# 
  1477  011B                     	;# 
  1478  011D                     	;# 
  1479  011E                     	;# 
  1480  011F                     	;# 
  1481  018C                     	;# 
  1482  0190                     	;# 
  1483  0191                     	;# 
  1484  0191                     	;# 
  1485  0192                     	;# 
  1486  0193                     	;# 
  1487  0193                     	;# 
  1488  0193                     	;# 
  1489  0194                     	;# 
  1490  0195                     	;# 
  1491  0196                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019C                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019D                     	;# 
  1504  019E                     	;# 
  1505  019E                     	;# 
  1506  019F                     	;# 
  1507  019F                     	;# 
  1508  020D                     	;# 
  1509  0211                     	;# 
  1510  0211                     	;# 
  1511  0212                     	;# 
  1512  0212                     	;# 
  1513  0213                     	;# 
  1514  0213                     	;# 
  1515  0214                     	;# 
  1516  0214                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0216                     	;# 
  1521  0216                     	;# 
  1522  0217                     	;# 
  1523  0217                     	;# 
  1524  0219                     	;# 
  1525  021A                     	;# 
  1526  021B                     	;# 
  1527  021C                     	;# 
  1528  021D                     	;# 
  1529  021E                     	;# 
  1530  021F                     	;# 
  1531  028C                     	;# 
  1532  028D                     	;# 
  1533  0291                     	;# 
  1534  0291                     	;# 
  1535  0292                     	;# 
  1536  0293                     	;# 
  1537  0294                     	;# 
  1538  0295                     	;# 
  1539  0295                     	;# 
  1540  0296                     	;# 
  1541  0298                     	;# 
  1542  0298                     	;# 
  1543  0299                     	;# 
  1544  029A                     	;# 
  1545  029B                     	;# 
  1546  029C                     	;# 
  1547  029C                     	;# 
  1548  029D                     	;# 
  1549  029E                     	;# 
  1550  029F                     	;# 
  1551  030C                     	;# 
  1552  030D                     	;# 
  1553  0311                     	;# 
  1554  0311                     	;# 
  1555  0312                     	;# 
  1556  0313                     	;# 
  1557  0314                     	;# 
  1558  0315                     	;# 
  1559  0315                     	;# 
  1560  0316                     	;# 
  1561  0318                     	;# 
  1562  0318                     	;# 
  1563  0319                     	;# 
  1564  031A                     	;# 
  1565  031C                     	;# 
  1566  031C                     	;# 
  1567  031D                     	;# 
  1568  031E                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  0394                     	;# 
  1572  0395                     	;# 
  1573  0396                     	;# 
  1574  040C                     	;# 
  1575  040D                     	;# 
  1576  0415                     	;# 
  1577  0416                     	;# 
  1578  0417                     	;# 
  1579  041C                     	;# 
  1580  041D                     	;# 
  1581  041E                     	;# 
  1582  048D                     	;# 
  1583  0491                     	;# 
  1584  0492                     	;# 
  1585  0493                     	;# 
  1586  0493                     	;# 
  1587  0494                     	;# 
  1588  0495                     	;# 
  1589  0496                     	;# 
  1590  0497                     	;# 
  1591  0791                     	;# 
  1592  0792                     	;# 
  1593  0793                     	;# 
  1594  0794                     	;# 
  1595  0795                     	;# 
  1596  0798                     	;# 
  1597  0799                     	;# 
  1598  079A                     	;# 
  1599  079B                     	;# 
  1600  079C                     	;# 
  1601  079D                     	;# 
  1602  07A0                     	;# 
  1603  07A1                     	;# 
  1604  07A2                     	;# 
  1605  07A3                     	;# 
  1606  07A4                     	;# 
  1607  07A5                     	;# 
  1608  07A6                     	;# 
  1609  07A7                     	;# 
  1610  07A8                     	;# 
  1611  07A9                     	;# 
  1612  07AA                     	;# 
  1613  07AB                     	;# 
  1614  07AC                     	;# 
  1615  07AD                     	;# 
  1616  07AE                     	;# 
  1617  07AF                     	;# 
  1618  07B0                     	;# 
  1619  07B1                     	;# 
  1620  07B2                     	;# 
  1621  07B3                     	;# 
  1622  07B4                     	;# 
  1623  07B5                     	;# 
  1624  07B6                     	;# 
  1625  07B7                     	;# 
  1626  0FE4                     	;# 
  1627  0FE5                     	;# 
  1628  0FE6                     	;# 
  1629  0FE7                     	;# 
  1630  0FE8                     	;# 
  1631  0FE9                     	;# 
  1632  0FEA                     	;# 
  1633  0FEB                     	;# 
  1634  0FED                     	;# 
  1635  0FEE                     	;# 
  1636  0FEF                     	;# 
  1637  0000                     	;# 
  1638  0001                     	;# 
  1639  0002                     	;# 
  1640  0003                     	;# 
  1641  0004                     	;# 
  1642  0005                     	;# 
  1643  0006                     	;# 
  1644  0007                     	;# 
  1645  0008                     	;# 
  1646  0009                     	;# 
  1647  000A                     	;# 
  1648  000B                     	;# 
  1649  000C                     	;# 
  1650  000D                     	;# 
  1651  000E                     	;# 
  1652  000F                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0013                     	;# 
  1657  0014                     	;# 
  1658  0015                     	;# 
  1659  0016                     	;# 
  1660  0016                     	;# 
  1661  0017                     	;# 
  1662  0018                     	;# 
  1663  0019                     	;# 
  1664  001A                     	;# 
  1665  001B                     	;# 
  1666  001C                     	;# 
  1667  001E                     	;# 
  1668  001F                     	;# 
  1669  008C                     	;# 
  1670  008D                     	;# 
  1671  008E                     	;# 
  1672  008F                     	;# 
  1673  0090                     	;# 
  1674  0091                     	;# 
  1675  0092                     	;# 
  1676  0093                     	;# 
  1677  0094                     	;# 
  1678  0095                     	;# 
  1679  0096                     	;# 
  1680  0097                     	;# 
  1681  0098                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  010F                     	;# 
  1693  0110                     	;# 
  1694  0111                     	;# 
  1695  0112                     	;# 
  1696  0113                     	;# 
  1697  0114                     	;# 
  1698  0115                     	;# 
  1699  0116                     	;# 
  1700  0117                     	;# 
  1701  0118                     	;# 
  1702  0119                     	;# 
  1703  011A                     	;# 
  1704  011B                     	;# 
  1705  011D                     	;# 
  1706  011E                     	;# 
  1707  011F                     	;# 
  1708  018C                     	;# 
  1709  0190                     	;# 
  1710  0191                     	;# 
  1711  0191                     	;# 
  1712  0192                     	;# 
  1713  0193                     	;# 
  1714  0193                     	;# 
  1715  0193                     	;# 
  1716  0194                     	;# 
  1717  0195                     	;# 
  1718  0196                     	;# 
  1719  0199                     	;# 
  1720  0199                     	;# 
  1721  019A                     	;# 
  1722  019A                     	;# 
  1723  019B                     	;# 
  1724  019B                     	;# 
  1725  019B                     	;# 
  1726  019B                     	;# 
  1727  019C                     	;# 
  1728  019C                     	;# 
  1729  019D                     	;# 
  1730  019D                     	;# 
  1731  019E                     	;# 
  1732  019E                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  020D                     	;# 
  1736  0211                     	;# 
  1737  0211                     	;# 
  1738  0212                     	;# 
  1739  0212                     	;# 
  1740  0213                     	;# 
  1741  0213                     	;# 
  1742  0214                     	;# 
  1743  0214                     	;# 
  1744  0215                     	;# 
  1745  0215                     	;# 
  1746  0215                     	;# 
  1747  0216                     	;# 
  1748  0216                     	;# 
  1749  0217                     	;# 
  1750  0217                     	;# 
  1751  0219                     	;# 
  1752  021A                     	;# 
  1753  021B                     	;# 
  1754  021C                     	;# 
  1755  021D                     	;# 
  1756  021E                     	;# 
  1757  021F                     	;# 
  1758  028C                     	;# 
  1759  028D                     	;# 
  1760  0291                     	;# 
  1761  0291                     	;# 
  1762  0292                     	;# 
  1763  0293                     	;# 
  1764  0294                     	;# 
  1765  0295                     	;# 
  1766  0295                     	;# 
  1767  0296                     	;# 
  1768  0298                     	;# 
  1769  0298                     	;# 
  1770  0299                     	;# 
  1771  029A                     	;# 
  1772  029B                     	;# 
  1773  029C                     	;# 
  1774  029C                     	;# 
  1775  029D                     	;# 
  1776  029E                     	;# 
  1777  029F                     	;# 
  1778  030C                     	;# 
  1779  030D                     	;# 
  1780  0311                     	;# 
  1781  0311                     	;# 
  1782  0312                     	;# 
  1783  0313                     	;# 
  1784  0314                     	;# 
  1785  0315                     	;# 
  1786  0315                     	;# 
  1787  0316                     	;# 
  1788  0318                     	;# 
  1789  0318                     	;# 
  1790  0319                     	;# 
  1791  031A                     	;# 
  1792  031C                     	;# 
  1793  031C                     	;# 
  1794  031D                     	;# 
  1795  031E                     	;# 
  1796  038C                     	;# 
  1797  038D                     	;# 
  1798  0394                     	;# 
  1799  0395                     	;# 
  1800  0396                     	;# 
  1801  040C                     	;# 
  1802  040D                     	;# 
  1803  0415                     	;# 
  1804  0416                     	;# 
  1805  0417                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  048D                     	;# 
  1810  0491                     	;# 
  1811  0492                     	;# 
  1812  0493                     	;# 
  1813  0493                     	;# 
  1814  0494                     	;# 
  1815  0495                     	;# 
  1816  0496                     	;# 
  1817  0497                     	;# 
  1818  0791                     	;# 
  1819  0792                     	;# 
  1820  0793                     	;# 
  1821  0794                     	;# 
  1822  0795                     	;# 
  1823  0798                     	;# 
  1824  0799                     	;# 
  1825  079A                     	;# 
  1826  079B                     	;# 
  1827  079C                     	;# 
  1828  079D                     	;# 
  1829  07A0                     	;# 
  1830  07A1                     	;# 
  1831  07A2                     	;# 
  1832  07A3                     	;# 
  1833  07A4                     	;# 
  1834  07A5                     	;# 
  1835  07A6                     	;# 
  1836  07A7                     	;# 
  1837  07A8                     	;# 
  1838  07A9                     	;# 
  1839  07AA                     	;# 
  1840  07AB                     	;# 
  1841  07AC                     	;# 
  1842  07AD                     	;# 
  1843  07AE                     	;# 
  1844  07AF                     	;# 
  1845  07B0                     	;# 
  1846  07B1                     	;# 
  1847  07B2                     	;# 
  1848  07B3                     	;# 
  1849  07B4                     	;# 
  1850  07B5                     	;# 
  1851  07B6                     	;# 
  1852  07B7                     	;# 
  1853  0FE4                     	;# 
  1854  0FE5                     	;# 
  1855  0FE6                     	;# 
  1856  0FE7                     	;# 
  1857  0FE8                     	;# 
  1858  0FE9                     	;# 
  1859  0FEA                     	;# 
  1860  0FEB                     	;# 
  1861  0FED                     	;# 
  1862  0FEE                     	;# 
  1863  0FEF                     	;# 
  1864  0000                     	;# 
  1865  0001                     	;# 
  1866  0002                     	;# 
  1867  0003                     	;# 
  1868  0004                     	;# 
  1869  0005                     	;# 
  1870  0006                     	;# 
  1871  0007                     	;# 
  1872  0008                     	;# 
  1873  0009                     	;# 
  1874  000A                     	;# 
  1875  000B                     	;# 
  1876  000C                     	;# 
  1877  000D                     	;# 
  1878  000E                     	;# 
  1879  000F                     	;# 
  1880  0010                     	;# 
  1881  0011                     	;# 
  1882  0012                     	;# 
  1883  0013                     	;# 
  1884  0014                     	;# 
  1885  0015                     	;# 
  1886  0016                     	;# 
  1887  0016                     	;# 
  1888  0017                     	;# 
  1889  0018                     	;# 
  1890  0019                     	;# 
  1891  001A                     	;# 
  1892  001B                     	;# 
  1893  001C                     	;# 
  1894  001E                     	;# 
  1895  001F                     	;# 
  1896  008C                     	;# 
  1897  008D                     	;# 
  1898  008E                     	;# 
  1899  008F                     	;# 
  1900  0090                     	;# 
  1901  0091                     	;# 
  1902  0092                     	;# 
  1903  0093                     	;# 
  1904  0094                     	;# 
  1905  0095                     	;# 
  1906  0096                     	;# 
  1907  0097                     	;# 
  1908  0098                     	;# 
  1909  0099                     	;# 
  1910  009A                     	;# 
  1911  009B                     	;# 
  1912  009B                     	;# 
  1913  009C                     	;# 
  1914  009D                     	;# 
  1915  009E                     	;# 
  1916  010C                     	;# 
  1917  010D                     	;# 
  1918  010E                     	;# 
  1919  010F                     	;# 
  1920  0110                     	;# 
  1921  0111                     	;# 
  1922  0112                     	;# 
  1923  0113                     	;# 
  1924  0114                     	;# 
  1925  0115                     	;# 
  1926  0116                     	;# 
  1927  0117                     	;# 
  1928  0118                     	;# 
  1929  0119                     	;# 
  1930  011A                     	;# 
  1931  011B                     	;# 
  1932  011D                     	;# 
  1933  011E                     	;# 
  1934  011F                     	;# 
  1935  018C                     	;# 
  1936  0190                     	;# 
  1937  0191                     	;# 
  1938  0191                     	;# 
  1939  0192                     	;# 
  1940  0193                     	;# 
  1941  0193                     	;# 
  1942  0193                     	;# 
  1943  0194                     	;# 
  1944  0195                     	;# 
  1945  0196                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019A                     	;# 
  1950  019B                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019C                     	;# 
  1955  019C                     	;# 
  1956  019D                     	;# 
  1957  019D                     	;# 
  1958  019E                     	;# 
  1959  019E                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  020D                     	;# 
  1963  0211                     	;# 
  1964  0211                     	;# 
  1965  0212                     	;# 
  1966  0212                     	;# 
  1967  0213                     	;# 
  1968  0213                     	;# 
  1969  0214                     	;# 
  1970  0214                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0215                     	;# 
  1974  0216                     	;# 
  1975  0216                     	;# 
  1976  0217                     	;# 
  1977  0217                     	;# 
  1978  0219                     	;# 
  1979  021A                     	;# 
  1980  021B                     	;# 
  1981  021C                     	;# 
  1982  021D                     	;# 
  1983  021E                     	;# 
  1984  021F                     	;# 
  1985  028C                     	;# 
  1986  028D                     	;# 
  1987  0291                     	;# 
  1988  0291                     	;# 
  1989  0292                     	;# 
  1990  0293                     	;# 
  1991  0294                     	;# 
  1992  0295                     	;# 
  1993  0295                     	;# 
  1994  0296                     	;# 
  1995  0298                     	;# 
  1996  0298                     	;# 
  1997  0299                     	;# 
  1998  029A                     	;# 
  1999  029B                     	;# 
  2000  029C                     	;# 
  2001  029C                     	;# 
  2002  029D                     	;# 
  2003  029E                     	;# 
  2004  029F                     	;# 
  2005  030C                     	;# 
  2006  030D                     	;# 
  2007  0311                     	;# 
  2008  0311                     	;# 
  2009  0312                     	;# 
  2010  0313                     	;# 
  2011  0314                     	;# 
  2012  0315                     	;# 
  2013  0315                     	;# 
  2014  0316                     	;# 
  2015  0318                     	;# 
  2016  0318                     	;# 
  2017  0319                     	;# 
  2018  031A                     	;# 
  2019  031C                     	;# 
  2020  031C                     	;# 
  2021  031D                     	;# 
  2022  031E                     	;# 
  2023  038C                     	;# 
  2024  038D                     	;# 
  2025  0394                     	;# 
  2026  0395                     	;# 
  2027  0396                     	;# 
  2028  040C                     	;# 
  2029  040D                     	;# 
  2030  0415                     	;# 
  2031  0416                     	;# 
  2032  0417                     	;# 
  2033  041C                     	;# 
  2034  041D                     	;# 
  2035  041E                     	;# 
  2036  048D                     	;# 
  2037  0491                     	;# 
  2038  0492                     	;# 
  2039  0493                     	;# 
  2040  0493                     	;# 
  2041  0494                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0497                     	;# 
  2045  0791                     	;# 
  2046  0792                     	;# 
  2047  0793                     	;# 
  2048  0794                     	;# 
  2049  0795                     	;# 
  2050  0798                     	;# 
  2051  0799                     	;# 
  2052  079A                     	;# 
  2053  079B                     	;# 
  2054  079C                     	;# 
  2055  079D                     	;# 
  2056  07A0                     	;# 
  2057  07A1                     	;# 
  2058  07A2                     	;# 
  2059  07A3                     	;# 
  2060  07A4                     	;# 
  2061  07A5                     	;# 
  2062  07A6                     	;# 
  2063  07A7                     	;# 
  2064  07A8                     	;# 
  2065  07A9                     	;# 
  2066  07AA                     	;# 
  2067  07AB                     	;# 
  2068  07AC                     	;# 
  2069  07AD                     	;# 
  2070  07AE                     	;# 
  2071  07AF                     	;# 
  2072  07B0                     	;# 
  2073  07B1                     	;# 
  2074  07B2                     	;# 
  2075  07B3                     	;# 
  2076  07B4                     	;# 
  2077  07B5                     	;# 
  2078  07B6                     	;# 
  2079  07B7                     	;# 
  2080  0FE4                     	;# 
  2081  0FE5                     	;# 
  2082  0FE6                     	;# 
  2083  0FE7                     	;# 
  2084  0FE8                     	;# 
  2085  0FE9                     	;# 
  2086  0FEA                     	;# 
  2087  0FEB                     	;# 
  2088  0FED                     	;# 
  2089  0FEE                     	;# 
  2090  0FEF                     	;# 
  2091  0000                     	;# 
  2092  0001                     	;# 
  2093  0002                     	;# 
  2094  0003                     	;# 
  2095  0004                     	;# 
  2096  0005                     	;# 
  2097  0006                     	;# 
  2098  0007                     	;# 
  2099  0008                     	;# 
  2100  0009                     	;# 
  2101  000A                     	;# 
  2102  000B                     	;# 
  2103  000C                     	;# 
  2104  000D                     	;# 
  2105  000E                     	;# 
  2106  000F                     	;# 
  2107  0010                     	;# 
  2108  0011                     	;# 
  2109  0012                     	;# 
  2110  0013                     	;# 
  2111  0014                     	;# 
  2112  0015                     	;# 
  2113  0016                     	;# 
  2114  0016                     	;# 
  2115  0017                     	;# 
  2116  0018                     	;# 
  2117  0019                     	;# 
  2118  001A                     	;# 
  2119  001B                     	;# 
  2120  001C                     	;# 
  2121  001E                     	;# 
  2122  001F                     	;# 
  2123  008C                     	;# 
  2124  008D                     	;# 
  2125  008E                     	;# 
  2126  008F                     	;# 
  2127  0090                     	;# 
  2128  0091                     	;# 
  2129  0092                     	;# 
  2130  0093                     	;# 
  2131  0094                     	;# 
  2132  0095                     	;# 
  2133  0096                     	;# 
  2134  0097                     	;# 
  2135  0098                     	;# 
  2136  0099                     	;# 
  2137  009A                     	;# 
  2138  009B                     	;# 
  2139  009B                     	;# 
  2140  009C                     	;# 
  2141  009D                     	;# 
  2142  009E                     	;# 
  2143  010C                     	;# 
  2144  010D                     	;# 
  2145  010E                     	;# 
  2146  010F                     	;# 
  2147  0110                     	;# 
  2148  0111                     	;# 
  2149  0112                     	;# 
  2150  0113                     	;# 
  2151  0114                     	;# 
  2152  0115                     	;# 
  2153  0116                     	;# 
  2154  0117                     	;# 
  2155  0118                     	;# 
  2156  0119                     	;# 
  2157  011A                     	;# 
  2158  011B                     	;# 
  2159  011D                     	;# 
  2160  011E                     	;# 
  2161  011F                     	;# 
  2162  018C                     	;# 
  2163  0190                     	;# 
  2164  0191                     	;# 
  2165  0191                     	;# 
  2166  0192                     	;# 
  2167  0193                     	;# 
  2168  0193                     	;# 
  2169  0193                     	;# 
  2170  0194                     	;# 
  2171  0195                     	;# 
  2172  0196                     	;# 
  2173  0199                     	;# 
  2174  0199                     	;# 
  2175  019A                     	;# 
  2176  019A                     	;# 
  2177  019B                     	;# 
  2178  019B                     	;# 
  2179  019B                     	;# 
  2180  019B                     	;# 
  2181  019C                     	;# 
  2182  019C                     	;# 
  2183  019D                     	;# 
  2184  019D                     	;# 
  2185  019E                     	;# 
  2186  019E                     	;# 
  2187  019F                     	;# 
  2188  019F                     	;# 
  2189  020D                     	;# 
  2190  0211                     	;# 
  2191  0211                     	;# 
  2192  0212                     	;# 
  2193  0212                     	;# 
  2194  0213                     	;# 
  2195  0213                     	;# 
  2196  0214                     	;# 
  2197  0214                     	;# 
  2198  0215                     	;# 
  2199  0215                     	;# 
  2200  0215                     	;# 
  2201  0216                     	;# 
  2202  0216                     	;# 
  2203  0217                     	;# 
  2204  0217                     	;# 
  2205  0219                     	;# 
  2206  021A                     	;# 
  2207  021B                     	;# 
  2208  021C                     	;# 
  2209  021D                     	;# 
  2210  021E                     	;# 
  2211  021F                     	;# 
  2212  028C                     	;# 
  2213  028D                     	;# 
  2214  0291                     	;# 
  2215  0291                     	;# 
  2216  0292                     	;# 
  2217  0293                     	;# 
  2218  0294                     	;# 
  2219  0295                     	;# 
  2220  0295                     	;# 
  2221  0296                     	;# 
  2222  0298                     	;# 
  2223  0298                     	;# 
  2224  0299                     	;# 
  2225  029A                     	;# 
  2226  029B                     	;# 
  2227  029C                     	;# 
  2228  029C                     	;# 
  2229  029D                     	;# 
  2230  029E                     	;# 
  2231  029F                     	;# 
  2232  030C                     	;# 
  2233  030D                     	;# 
  2234  0311                     	;# 
  2235  0311                     	;# 
  2236  0312                     	;# 
  2237  0313                     	;# 
  2238  0314                     	;# 
  2239  0315                     	;# 
  2240  0315                     	;# 
  2241  0316                     	;# 
  2242  0318                     	;# 
  2243  0318                     	;# 
  2244  0319                     	;# 
  2245  031A                     	;# 
  2246  031C                     	;# 
  2247  031C                     	;# 
  2248  031D                     	;# 
  2249  031E                     	;# 
  2250  038C                     	;# 
  2251  038D                     	;# 
  2252  0394                     	;# 
  2253  0395                     	;# 
  2254  0396                     	;# 
  2255  040C                     	;# 
  2256  040D                     	;# 
  2257  0415                     	;# 
  2258  0416                     	;# 
  2259  0417                     	;# 
  2260  041C                     	;# 
  2261  041D                     	;# 
  2262  041E                     	;# 
  2263  048D                     	;# 
  2264  0491                     	;# 
  2265  0492                     	;# 
  2266  0493                     	;# 
  2267  0493                     	;# 
  2268  0494                     	;# 
  2269  0495                     	;# 
  2270  0496                     	;# 
  2271  0497                     	;# 
  2272  0791                     	;# 
  2273  0792                     	;# 
  2274  0793                     	;# 
  2275  0794                     	;# 
  2276  0795                     	;# 
  2277  0798                     	;# 
  2278  0799                     	;# 
  2279  079A                     	;# 
  2280  079B                     	;# 
  2281  079C                     	;# 
  2282  079D                     	;# 
  2283  07A0                     	;# 
  2284  07A1                     	;# 
  2285  07A2                     	;# 
  2286  07A3                     	;# 
  2287  07A4                     	;# 
  2288  07A5                     	;# 
  2289  07A6                     	;# 
  2290  07A7                     	;# 
  2291  07A8                     	;# 
  2292  07A9                     	;# 
  2293  07AA                     	;# 
  2294  07AB                     	;# 
  2295  07AC                     	;# 
  2296  07AD                     	;# 
  2297  07AE                     	;# 
  2298  07AF                     	;# 
  2299  07B0                     	;# 
  2300  07B1                     	;# 
  2301  07B2                     	;# 
  2302  07B3                     	;# 
  2303  07B4                     	;# 
  2304  07B5                     	;# 
  2305  07B6                     	;# 
  2306  07B7                     	;# 
  2307  0FE4                     	;# 
  2308  0FE5                     	;# 
  2309  0FE6                     	;# 
  2310  0FE7                     	;# 
  2311  0FE8                     	;# 
  2312  0FE9                     	;# 
  2313  0FEA                     	;# 
  2314  0FEB                     	;# 
  2315  0FED                     	;# 
  2316  0FEE                     	;# 
  2317  0FEF                     	;# 
  2318  0000                     	;# 
  2319  0001                     	;# 
  2320  0002                     	;# 
  2321  0003                     	;# 
  2322  0004                     	;# 
  2323  0005                     	;# 
  2324  0006                     	;# 
  2325  0007                     	;# 
  2326  0008                     	;# 
  2327  0009                     	;# 
  2328  000A                     	;# 
  2329  000B                     	;# 
  2330  000C                     	;# 
  2331  000D                     	;# 
  2332  000E                     	;# 
  2333  000F                     	;# 
  2334  0010                     	;# 
  2335  0011                     	;# 
  2336  0012                     	;# 
  2337  0013                     	;# 
  2338  0014                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001B                     	;# 
  2347  001C                     	;# 
  2348  001E                     	;# 
  2349  001F                     	;# 
  2350  008C                     	;# 
  2351  008D                     	;# 
  2352  008E                     	;# 
  2353  008F                     	;# 
  2354  0090                     	;# 
  2355  0091                     	;# 
  2356  0092                     	;# 
  2357  0093                     	;# 
  2358  0094                     	;# 
  2359  0095                     	;# 
  2360  0096                     	;# 
  2361  0097                     	;# 
  2362  0098                     	;# 
  2363  0099                     	;# 
  2364  009A                     	;# 
  2365  009B                     	;# 
  2366  009B                     	;# 
  2367  009C                     	;# 
  2368  009D                     	;# 
  2369  009E                     	;# 
  2370  010C                     	;# 
  2371  010D                     	;# 
  2372  010E                     	;# 
  2373  010F                     	;# 
  2374  0110                     	;# 
  2375  0111                     	;# 
  2376  0112                     	;# 
  2377  0113                     	;# 
  2378  0114                     	;# 
  2379  0115                     	;# 
  2380  0116                     	;# 
  2381  0117                     	;# 
  2382  0118                     	;# 
  2383  0119                     	;# 
  2384  011A                     	;# 
  2385  011B                     	;# 
  2386  011D                     	;# 
  2387  011E                     	;# 
  2388  011F                     	;# 
  2389  018C                     	;# 
  2390  0190                     	;# 
  2391  0191                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  0193                     	;# 
  2395  0193                     	;# 
  2396  0193                     	;# 
  2397  0194                     	;# 
  2398  0195                     	;# 
  2399  0196                     	;# 
  2400  0199                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019C                     	;# 
  2409  019C                     	;# 
  2410  019D                     	;# 
  2411  019D                     	;# 
  2412  019E                     	;# 
  2413  019E                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  020D                     	;# 
  2417  0211                     	;# 
  2418  0211                     	;# 
  2419  0212                     	;# 
  2420  0212                     	;# 
  2421  0213                     	;# 
  2422  0213                     	;# 
  2423  0214                     	;# 
  2424  0214                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  0219                     	;# 
  2433  021A                     	;# 
  2434  021B                     	;# 
  2435  021C                     	;# 
  2436  021D                     	;# 
  2437  021E                     	;# 
  2438  021F                     	;# 
  2439  028C                     	;# 
  2440  028D                     	;# 
  2441  0291                     	;# 
  2442  0291                     	;# 
  2443  0292                     	;# 
  2444  0293                     	;# 
  2445  0294                     	;# 
  2446  0295                     	;# 
  2447  0295                     	;# 
  2448  0296                     	;# 
  2449  0298                     	;# 
  2450  0298                     	;# 
  2451  0299                     	;# 
  2452  029A                     	;# 
  2453  029B                     	;# 
  2454  029C                     	;# 
  2455  029C                     	;# 
  2456  029D                     	;# 
  2457  029E                     	;# 
  2458  029F                     	;# 
  2459  030C                     	;# 
  2460  030D                     	;# 
  2461  0311                     	;# 
  2462  0311                     	;# 
  2463  0312                     	;# 
  2464  0313                     	;# 
  2465  0314                     	;# 
  2466  0315                     	;# 
  2467  0315                     	;# 
  2468  0316                     	;# 
  2469  0318                     	;# 
  2470  0318                     	;# 
  2471  0319                     	;# 
  2472  031A                     	;# 
  2473  031C                     	;# 
  2474  031C                     	;# 
  2475  031D                     	;# 
  2476  031E                     	;# 
  2477  038C                     	;# 
  2478  038D                     	;# 
  2479  0394                     	;# 
  2480  0395                     	;# 
  2481  0396                     	;# 
  2482  040C                     	;# 
  2483  040D                     	;# 
  2484  0415                     	;# 
  2485  0416                     	;# 
  2486  0417                     	;# 
  2487  041C                     	;# 
  2488  041D                     	;# 
  2489  041E                     	;# 
  2490  048D                     	;# 
  2491  0491                     	;# 
  2492  0492                     	;# 
  2493  0493                     	;# 
  2494  0493                     	;# 
  2495  0494                     	;# 
  2496  0495                     	;# 
  2497  0496                     	;# 
  2498  0497                     	;# 
  2499  0791                     	;# 
  2500  0792                     	;# 
  2501  0793                     	;# 
  2502  0794                     	;# 
  2503  0795                     	;# 
  2504  0798                     	;# 
  2505  0799                     	;# 
  2506  079A                     	;# 
  2507  079B                     	;# 
  2508  079C                     	;# 
  2509  079D                     	;# 
  2510  07A0                     	;# 
  2511  07A1                     	;# 
  2512  07A2                     	;# 
  2513  07A3                     	;# 
  2514  07A4                     	;# 
  2515  07A5                     	;# 
  2516  07A6                     	;# 
  2517  07A7                     	;# 
  2518  07A8                     	;# 
  2519  07A9                     	;# 
  2520  07AA                     	;# 
  2521  07AB                     	;# 
  2522  07AC                     	;# 
  2523  07AD                     	;# 
  2524  07AE                     	;# 
  2525  07AF                     	;# 
  2526  07B0                     	;# 
  2527  07B1                     	;# 
  2528  07B2                     	;# 
  2529  07B3                     	;# 
  2530  07B4                     	;# 
  2531  07B5                     	;# 
  2532  07B6                     	;# 
  2533  07B7                     	;# 
  2534  0FE4                     	;# 
  2535  0FE5                     	;# 
  2536  0FE6                     	;# 
  2537  0FE7                     	;# 
  2538  0FE8                     	;# 
  2539  0FE9                     	;# 
  2540  0FEA                     	;# 
  2541  0FEB                     	;# 
  2542  0FED                     	;# 
  2543  0FEE                     	;# 
  2544  0FEF                     	;# 
  2545  0000                     	;# 
  2546  0001                     	;# 
  2547  0002                     	;# 
  2548  0003                     	;# 
  2549  0004                     	;# 
  2550  0005                     	;# 
  2551  0006                     	;# 
  2552  0007                     	;# 
  2553  0008                     	;# 
  2554  0009                     	;# 
  2555  000A                     	;# 
  2556  000B                     	;# 
  2557  000C                     	;# 
  2558  000D                     	;# 
  2559  000E                     	;# 
  2560  000F                     	;# 
  2561  0010                     	;# 
  2562  0011                     	;# 
  2563  0012                     	;# 
  2564  0013                     	;# 
  2565  0014                     	;# 
  2566  0015                     	;# 
  2567  0016                     	;# 
  2568  0016                     	;# 
  2569  0017                     	;# 
  2570  0018                     	;# 
  2571  0019                     	;# 
  2572  001A                     	;# 
  2573  001B                     	;# 
  2574  001C                     	;# 
  2575  001E                     	;# 
  2576  001F                     	;# 
  2577  008C                     	;# 
  2578  008D                     	;# 
  2579  008E                     	;# 
  2580  008F                     	;# 
  2581  0090                     	;# 
  2582  0091                     	;# 
  2583  0092                     	;# 
  2584  0093                     	;# 
  2585  0094                     	;# 
  2586  0095                     	;# 
  2587  0096                     	;# 
  2588  0097                     	;# 
  2589  0098                     	;# 
  2590  0099                     	;# 
  2591  009A                     	;# 
  2592  009B                     	;# 
  2593  009B                     	;# 
  2594  009C                     	;# 
  2595  009D                     	;# 
  2596  009E                     	;# 
  2597  010C                     	;# 
  2598  010D                     	;# 
  2599  010E                     	;# 
  2600  010F                     	;# 
  2601  0110                     	;# 
  2602  0111                     	;# 
  2603  0112                     	;# 
  2604  0113                     	;# 
  2605  0114                     	;# 
  2606  0115                     	;# 
  2607  0116                     	;# 
  2608  0117                     	;# 
  2609  0118                     	;# 
  2610  0119                     	;# 
  2611  011A                     	;# 
  2612  011B                     	;# 
  2613  011D                     	;# 
  2614  011E                     	;# 
  2615  011F                     	;# 
  2616  018C                     	;# 
  2617  0190                     	;# 
  2618  0191                     	;# 
  2619  0191                     	;# 
  2620  0192                     	;# 
  2621  0193                     	;# 
  2622  0193                     	;# 
  2623  0193                     	;# 
  2624  0194                     	;# 
  2625  0195                     	;# 
  2626  0196                     	;# 
  2627  0199                     	;# 
  2628  0199                     	;# 
  2629  019A                     	;# 
  2630  019A                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019C                     	;# 
  2636  019C                     	;# 
  2637  019D                     	;# 
  2638  019D                     	;# 
  2639  019E                     	;# 
  2640  019E                     	;# 
  2641  019F                     	;# 
  2642  019F                     	;# 
  2643  020D                     	;# 
  2644  0211                     	;# 
  2645  0211                     	;# 
  2646  0212                     	;# 
  2647  0212                     	;# 
  2648  0213                     	;# 
  2649  0213                     	;# 
  2650  0214                     	;# 
  2651  0214                     	;# 
  2652  0215                     	;# 
  2653  0215                     	;# 
  2654  0215                     	;# 
  2655  0216                     	;# 
  2656  0216                     	;# 
  2657  0217                     	;# 
  2658  0217                     	;# 
  2659  0219                     	;# 
  2660  021A                     	;# 
  2661  021B                     	;# 
  2662  021C                     	;# 
  2663  021D                     	;# 
  2664  021E                     	;# 
  2665  021F                     	;# 
  2666  028C                     	;# 
  2667  028D                     	;# 
  2668  0291                     	;# 
  2669  0291                     	;# 
  2670  0292                     	;# 
  2671  0293                     	;# 
  2672  0294                     	;# 
  2673  0295                     	;# 
  2674  0295                     	;# 
  2675  0296                     	;# 
  2676  0298                     	;# 
  2677  0298                     	;# 
  2678  0299                     	;# 
  2679  029A                     	;# 
  2680  029B                     	;# 
  2681  029C                     	;# 
  2682  029C                     	;# 
  2683  029D                     	;# 
  2684  029E                     	;# 
  2685  029F                     	;# 
  2686  030C                     	;# 
  2687  030D                     	;# 
  2688  0311                     	;# 
  2689  0311                     	;# 
  2690  0312                     	;# 
  2691  0313                     	;# 
  2692  0314                     	;# 
  2693  0315                     	;# 
  2694  0315                     	;# 
  2695  0316                     	;# 
  2696  0318                     	;# 
  2697  0318                     	;# 
  2698  0319                     	;# 
  2699  031A                     	;# 
  2700  031C                     	;# 
  2701  031C                     	;# 
  2702  031D                     	;# 
  2703  031E                     	;# 
  2704  038C                     	;# 
  2705  038D                     	;# 
  2706  0394                     	;# 
  2707  0395                     	;# 
  2708  0396                     	;# 
  2709  040C                     	;# 
  2710  040D                     	;# 
  2711  0415                     	;# 
  2712  0416                     	;# 
  2713  0417                     	;# 
  2714  041C                     	;# 
  2715  041D                     	;# 
  2716  041E                     	;# 
  2717  048D                     	;# 
  2718  0491                     	;# 
  2719  0492                     	;# 
  2720  0493                     	;# 
  2721  0493                     	;# 
  2722  0494                     	;# 
  2723  0495                     	;# 
  2724  0496                     	;# 
  2725  0497                     	;# 
  2726  0791                     	;# 
  2727  0792                     	;# 
  2728  0793                     	;# 
  2729  0794                     	;# 
  2730  0795                     	;# 
  2731  0798                     	;# 
  2732  0799                     	;# 
  2733  079A                     	;# 
  2734  079B                     	;# 
  2735  079C                     	;# 
  2736  079D                     	;# 
  2737  07A0                     	;# 
  2738  07A1                     	;# 
  2739  07A2                     	;# 
  2740  07A3                     	;# 
  2741  07A4                     	;# 
  2742  07A5                     	;# 
  2743  07A6                     	;# 
  2744  07A7                     	;# 
  2745  07A8                     	;# 
  2746  07A9                     	;# 
  2747  07AA                     	;# 
  2748  07AB                     	;# 
  2749  07AC                     	;# 
  2750  07AD                     	;# 
  2751  07AE                     	;# 
  2752  07AF                     	;# 
  2753  07B0                     	;# 
  2754  07B1                     	;# 
  2755  07B2                     	;# 
  2756  07B3                     	;# 
  2757  07B4                     	;# 
  2758  07B5                     	;# 
  2759  07B6                     	;# 
  2760  07B7                     	;# 
  2761  0FE4                     	;# 
  2762  0FE5                     	;# 
  2763  0FE6                     	;# 
  2764  0FE7                     	;# 
  2765  0FE8                     	;# 
  2766  0FE9                     	;# 
  2767  0FEA                     	;# 
  2768  0FEB                     	;# 
  2769  0FED                     	;# 
  2770  0FEE                     	;# 
  2771  0FEF                     	;# 
  2772  0000                     	;# 
  2773  0001                     	;# 
  2774  0002                     	;# 
  2775  0003                     	;# 
  2776  0004                     	;# 
  2777  0005                     	;# 
  2778  0006                     	;# 
  2779  0007                     	;# 
  2780  0008                     	;# 
  2781  0009                     	;# 
  2782  000A                     	;# 
  2783  000B                     	;# 
  2784  000C                     	;# 
  2785  000D                     	;# 
  2786  000E                     	;# 
  2787  000F                     	;# 
  2788  0010                     	;# 
  2789  0011                     	;# 
  2790  0012                     	;# 
  2791  0013                     	;# 
  2792  0014                     	;# 
  2793  0015                     	;# 
  2794  0016                     	;# 
  2795  0016                     	;# 
  2796  0017                     	;# 
  2797  0018                     	;# 
  2798  0019                     	;# 
  2799  001A                     	;# 
  2800  001B                     	;# 
  2801  001C                     	;# 
  2802  001E                     	;# 
  2803  001F                     	;# 
  2804  008C                     	;# 
  2805  008D                     	;# 
  2806  008E                     	;# 
  2807  008F                     	;# 
  2808  0090                     	;# 
  2809  0091                     	;# 
  2810  0092                     	;# 
  2811  0093                     	;# 
  2812  0094                     	;# 
  2813  0095                     	;# 
  2814  0096                     	;# 
  2815  0097                     	;# 
  2816  0098                     	;# 
  2817  0099                     	;# 
  2818  009A                     	;# 
  2819  009B                     	;# 
  2820  009B                     	;# 
  2821  009C                     	;# 
  2822  009D                     	;# 
  2823  009E                     	;# 
  2824  010C                     	;# 
  2825  010D                     	;# 
  2826  010E                     	;# 
  2827  010F                     	;# 
  2828  0110                     	;# 
  2829  0111                     	;# 
  2830  0112                     	;# 
  2831  0113                     	;# 
  2832  0114                     	;# 
  2833  0115                     	;# 
  2834  0116                     	;# 
  2835  0117                     	;# 
  2836  0118                     	;# 
  2837  0119                     	;# 
  2838  011A                     	;# 
  2839  011B                     	;# 
  2840  011D                     	;# 
  2841  011E                     	;# 
  2842  011F                     	;# 
  2843  018C                     	;# 
  2844  0190                     	;# 
  2845  0191                     	;# 
  2846  0191                     	;# 
  2847  0192                     	;# 
  2848  0193                     	;# 
  2849  0193                     	;# 
  2850  0193                     	;# 
  2851  0194                     	;# 
  2852  0195                     	;# 
  2853  0196                     	;# 
  2854  0199                     	;# 
  2855  0199                     	;# 
  2856  019A                     	;# 
  2857  019A                     	;# 
  2858  019B                     	;# 
  2859  019B                     	;# 
  2860  019B                     	;# 
  2861  019B                     	;# 
  2862  019C                     	;# 
  2863  019C                     	;# 
  2864  019D                     	;# 
  2865  019D                     	;# 
  2866  019E                     	;# 
  2867  019E                     	;# 
  2868  019F                     	;# 
  2869  019F                     	;# 
  2870  020D                     	;# 
  2871  0211                     	;# 
  2872  0211                     	;# 
  2873  0212                     	;# 
  2874  0212                     	;# 
  2875  0213                     	;# 
  2876  0213                     	;# 
  2877  0214                     	;# 
  2878  0214                     	;# 
  2879  0215                     	;# 
  2880  0215                     	;# 
  2881  0215                     	;# 
  2882  0216                     	;# 
  2883  0216                     	;# 
  2884  0217                     	;# 
  2885  0217                     	;# 
  2886  0219                     	;# 
  2887  021A                     	;# 
  2888  021B                     	;# 
  2889  021C                     	;# 
  2890  021D                     	;# 
  2891  021E                     	;# 
  2892  021F                     	;# 
  2893  028C                     	;# 
  2894  028D                     	;# 
  2895  0291                     	;# 
  2896  0291                     	;# 
  2897  0292                     	;# 
  2898  0293                     	;# 
  2899  0294                     	;# 
  2900  0295                     	;# 
  2901  0295                     	;# 
  2902  0296                     	;# 
  2903  0298                     	;# 
  2904  0298                     	;# 
  2905  0299                     	;# 
  2906  029A                     	;# 
  2907  029B                     	;# 
  2908  029C                     	;# 
  2909  029C                     	;# 
  2910  029D                     	;# 
  2911  029E                     	;# 
  2912  029F                     	;# 
  2913  030C                     	;# 
  2914  030D                     	;# 
  2915  0311                     	;# 
  2916  0311                     	;# 
  2917  0312                     	;# 
  2918  0313                     	;# 
  2919  0314                     	;# 
  2920  0315                     	;# 
  2921  0315                     	;# 
  2922  0316                     	;# 
  2923  0318                     	;# 
  2924  0318                     	;# 
  2925  0319                     	;# 
  2926  031A                     	;# 
  2927  031C                     	;# 
  2928  031C                     	;# 
  2929  031D                     	;# 
  2930  031E                     	;# 
  2931  038C                     	;# 
  2932  038D                     	;# 
  2933  0394                     	;# 
  2934  0395                     	;# 
  2935  0396                     	;# 
  2936  040C                     	;# 
  2937  040D                     	;# 
  2938  0415                     	;# 
  2939  0416                     	;# 
  2940  0417                     	;# 
  2941  041C                     	;# 
  2942  041D                     	;# 
  2943  041E                     	;# 
  2944  048D                     	;# 
  2945  0491                     	;# 
  2946  0492                     	;# 
  2947  0493                     	;# 
  2948  0493                     	;# 
  2949  0494                     	;# 
  2950  0495                     	;# 
  2951  0496                     	;# 
  2952  0497                     	;# 
  2953  0791                     	;# 
  2954  0792                     	;# 
  2955  0793                     	;# 
  2956  0794                     	;# 
  2957  0795                     	;# 
  2958  0798                     	;# 
  2959  0799                     	;# 
  2960  079A                     	;# 
  2961  079B                     	;# 
  2962  079C                     	;# 
  2963  079D                     	;# 
  2964  07A0                     	;# 
  2965  07A1                     	;# 
  2966  07A2                     	;# 
  2967  07A3                     	;# 
  2968  07A4                     	;# 
  2969  07A5                     	;# 
  2970  07A6                     	;# 
  2971  07A7                     	;# 
  2972  07A8                     	;# 
  2973  07A9                     	;# 
  2974  07AA                     	;# 
  2975  07AB                     	;# 
  2976  07AC                     	;# 
  2977  07AD                     	;# 
  2978  07AE                     	;# 
  2979  07AF                     	;# 
  2980  07B0                     	;# 
  2981  07B1                     	;# 
  2982  07B2                     	;# 
  2983  07B3                     	;# 
  2984  07B4                     	;# 
  2985  07B5                     	;# 
  2986  07B6                     	;# 
  2987  07B7                     	;# 
  2988  0FE4                     	;# 
  2989  0FE5                     	;# 
  2990  0FE6                     	;# 
  2991  0FE7                     	;# 
  2992  0FE8                     	;# 
  2993  0FE9                     	;# 
  2994  0FEA                     	;# 
  2995  0FEB                     	;# 
  2996  0FED                     	;# 
  2997  0FEE                     	;# 
  2998  0FEF                     	;# 
  2999  0000                     	;# 
  3000  0001                     	;# 
  3001  0002                     	;# 
  3002  0003                     	;# 
  3003  0004                     	;# 
  3004  0005                     	;# 
  3005  0006                     	;# 
  3006  0007                     	;# 
  3007  0008                     	;# 
  3008  0009                     	;# 
  3009  000A                     	;# 
  3010  000B                     	;# 
  3011  000C                     	;# 
  3012  000D                     	;# 
  3013  000E                     	;# 
  3014  000F                     	;# 
  3015  0010                     	;# 
  3016  0011                     	;# 
  3017  0012                     	;# 
  3018  0013                     	;# 
  3019  0014                     	;# 
  3020  0015                     	;# 
  3021  0016                     	;# 
  3022  0016                     	;# 
  3023  0017                     	;# 
  3024  0018                     	;# 
  3025  0019                     	;# 
  3026  001A                     	;# 
  3027  001B                     	;# 
  3028  001C                     	;# 
  3029  001E                     	;# 
  3030  001F                     	;# 
  3031  008C                     	;# 
  3032  008D                     	;# 
  3033  008E                     	;# 
  3034  008F                     	;# 
  3035  0090                     	;# 
  3036  0091                     	;# 
  3037  0092                     	;# 
  3038  0093                     	;# 
  3039  0094                     	;# 
  3040  0095                     	;# 
  3041  0096                     	;# 
  3042  0097                     	;# 
  3043  0098                     	;# 
  3044  0099                     	;# 
  3045  009A                     	;# 
  3046  009B                     	;# 
  3047  009B                     	;# 
  3048  009C                     	;# 
  3049  009D                     	;# 
  3050  009E                     	;# 
  3051  010C                     	;# 
  3052  010D                     	;# 
  3053  010E                     	;# 
  3054  010F                     	;# 
  3055  0110                     	;# 
  3056  0111                     	;# 
  3057  0112                     	;# 
  3058  0113                     	;# 
  3059  0114                     	;# 
  3060  0115                     	;# 
  3061  0116                     	;# 
  3062  0117                     	;# 
  3063  0118                     	;# 
  3064  0119                     	;# 
  3065  011A                     	;# 
  3066  011B                     	;# 
  3067  011D                     	;# 
  3068  011E                     	;# 
  3069  011F                     	;# 
  3070  018C                     	;# 
  3071  0190                     	;# 
  3072  0191                     	;# 
  3073  0191                     	;# 
  3074  0192                     	;# 
  3075  0193                     	;# 
  3076  0193                     	;# 
  3077  0193                     	;# 
  3078  0194                     	;# 
  3079  0195                     	;# 
  3080  0196                     	;# 
  3081  0199                     	;# 
  3082  0199                     	;# 
  3083  019A                     	;# 
  3084  019A                     	;# 
  3085  019B                     	;# 
  3086  019B                     	;# 
  3087  019B                     	;# 
  3088  019B                     	;# 
  3089  019C                     	;# 
  3090  019C                     	;# 
  3091  019D                     	;# 
  3092  019D                     	;# 
  3093  019E                     	;# 
  3094  019E                     	;# 
  3095  019F                     	;# 
  3096  019F                     	;# 
  3097  020D                     	;# 
  3098  0211                     	;# 
  3099  0211                     	;# 
  3100  0212                     	;# 
  3101  0212                     	;# 
  3102  0213                     	;# 
  3103  0213                     	;# 
  3104  0214                     	;# 
  3105  0214                     	;# 
  3106  0215                     	;# 
  3107  0215                     	;# 
  3108  0215                     	;# 
  3109  0216                     	;# 
  3110  0216                     	;# 
  3111  0217                     	;# 
  3112  0217                     	;# 
  3113  0219                     	;# 
  3114  021A                     	;# 
  3115  021B                     	;# 
  3116  021C                     	;# 
  3117  021D                     	;# 
  3118  021E                     	;# 
  3119  021F                     	;# 
  3120  028C                     	;# 
  3121  028D                     	;# 
  3122  0291                     	;# 
  3123  0291                     	;# 
  3124  0292                     	;# 
  3125  0293                     	;# 
  3126  0294                     	;# 
  3127  0295                     	;# 
  3128  0295                     	;# 
  3129  0296                     	;# 
  3130  0298                     	;# 
  3131  0298                     	;# 
  3132  0299                     	;# 
  3133  029A                     	;# 
  3134  029B                     	;# 
  3135  029C                     	;# 
  3136  029C                     	;# 
  3137  029D                     	;# 
  3138  029E                     	;# 
  3139  029F                     	;# 
  3140  030C                     	;# 
  3141  030D                     	;# 
  3142  0311                     	;# 
  3143  0311                     	;# 
  3144  0312                     	;# 
  3145  0313                     	;# 
  3146  0314                     	;# 
  3147  0315                     	;# 
  3148  0315                     	;# 
  3149  0316                     	;# 
  3150  0318                     	;# 
  3151  0318                     	;# 
  3152  0319                     	;# 
  3153  031A                     	;# 
  3154  031C                     	;# 
  3155  031C                     	;# 
  3156  031D                     	;# 
  3157  031E                     	;# 
  3158  038C                     	;# 
  3159  038D                     	;# 
  3160  0394                     	;# 
  3161  0395                     	;# 
  3162  0396                     	;# 
  3163  040C                     	;# 
  3164  040D                     	;# 
  3165  0415                     	;# 
  3166  0416                     	;# 
  3167  0417                     	;# 
  3168  041C                     	;# 
  3169  041D                     	;# 
  3170  041E                     	;# 
  3171  048D                     	;# 
  3172  0491                     	;# 
  3173  0492                     	;# 
  3174  0493                     	;# 
  3175  0493                     	;# 
  3176  0494                     	;# 
  3177  0495                     	;# 
  3178  0496                     	;# 
  3179  0497                     	;# 
  3180  0791                     	;# 
  3181  0792                     	;# 
  3182  0793                     	;# 
  3183  0794                     	;# 
  3184  0795                     	;# 
  3185  0798                     	;# 
  3186  0799                     	;# 
  3187  079A                     	;# 
  3188  079B                     	;# 
  3189  079C                     	;# 
  3190  079D                     	;# 
  3191  07A0                     	;# 
  3192  07A1                     	;# 
  3193  07A2                     	;# 
  3194  07A3                     	;# 
  3195  07A4                     	;# 
  3196  07A5                     	;# 
  3197  07A6                     	;# 
  3198  07A7                     	;# 
  3199  07A8                     	;# 
  3200  07A9                     	;# 
  3201  07AA                     	;# 
  3202  07AB                     	;# 
  3203  07AC                     	;# 
  3204  07AD                     	;# 
  3205  07AE                     	;# 
  3206  07AF                     	;# 
  3207  07B0                     	;# 
  3208  07B1                     	;# 
  3209  07B2                     	;# 
  3210  07B3                     	;# 
  3211  07B4                     	;# 
  3212  07B5                     	;# 
  3213  07B6                     	;# 
  3214  07B7                     	;# 
  3215  0FE4                     	;# 
  3216  0FE5                     	;# 
  3217  0FE6                     	;# 
  3218  0FE7                     	;# 
  3219  0FE8                     	;# 
  3220  0FE9                     	;# 
  3221  0FEA                     	;# 
  3222  0FEB                     	;# 
  3223  0FED                     	;# 
  3224  0FEE                     	;# 
  3225  0FEF                     	;_RxBuffer
  3226                           
  3227                           	psect	idataBANK0
  3228  0000                     __pidataBANK0:	
  3229                           
  3230                           	psect	idataBANK1
  3231  0000                     __pidataBANK1:	
  3232                           
  3233                           	psect	idataBANK2
  3234  1802                     __pidataBANK2:	
  3235                           
  3236                           ;initializer for _CharacterArray
  3237  1802  3430               	retlw	48
  3238  1803  3431               	retlw	49
  3239  1804  3432               	retlw	50
  3240  1805  3433               	retlw	51
  3241  1806  3434               	retlw	52
  3242  1807  3435               	retlw	53
  3243  1808  3436               	retlw	54
  3244  1809  3437               	retlw	55
  3245  180A  3438               	retlw	56
  3246  180B  3439               	retlw	57
  3247  180C  3441               	retlw	65
  3248  180D  3442               	retlw	66
  3249  180E  3443               	retlw	67
  3250  180F  3444               	retlw	68
  3251  1810  3445               	retlw	69
  3252  1811  3446               	retlw	70
  3253                           
  3254                           ;initializer for _myLongAddress
  3255  1812  34FF               	retlw	255
  3256  1813  3411               	retlw	17
  3257  1814  3422               	retlw	34
  3258  1815  3433               	retlw	51
  3259  1816  3444               	retlw	68
  3260  1817  3455               	retlw	85
  3261  1818  3466               	retlw	102
  3262  1819  3411               	retlw	17
  3263                           
  3264                           	psect	stringtext
  3265  2000                     __pstringtext:	
  3266  2000                     _MiWi:	
  3267  2000  3420               	retlw	32
  3268  2001  34B2               	retlw	178
  3269  2002  3420               	retlw	32
  3270  2003  3420               	retlw	32
  3271  2004  3420               	retlw	32
  3272  2005  34B2               	retlw	178
  3273  2006  3420               	retlw	32
  3274  2007  3420               	retlw	32
  3275  2008  34B2               	retlw	178
  3276  2009  3420               	retlw	32
  3277  200A  34B2               	retlw	178
  3278  200B  3420               	retlw	32
  3279  200C  3420               	retlw	32
  3280  200D  3420               	retlw	32
  3281  200E  3420               	retlw	32
  3282  200F  3420               	retlw	32
  3283  2010  34B2               	retlw	178
  3284  2011  3420               	retlw	32
  3285  2012  34B2               	retlw	178
  3286  2013  340D               	retlw	13
  3287  2014  340A               	retlw	10
  3288  2015  34B2               	retlw	178
  3289  2016  3420               	retlw	32
  3290  2017  34B2               	retlw	178
  3291  2018  3420               	retlw	32
  3292  2019  34B2               	retlw	178
  3293  201A  3420               	retlw	32
  3294  201B  34B2               	retlw	178
  3295  201C  3420               	retlw	32
  3296  201D  3420               	retlw	32
  3297  201E  3420               	retlw	32
  3298  201F  34B2               	retlw	178
  3299  2020  3420               	retlw	32
  3300  2021  3420               	retlw	32
  3301  2022  34B2               	retlw	178
  3302  2023  3420               	retlw	32
  3303  2024  3420               	retlw	32
  3304  2025  34B2               	retlw	178
  3305  2026  3420               	retlw	32
  3306  2027  3420               	retlw	32
  3307  2028  340D               	retlw	13
  3308  2029  340A               	retlw	10
  3309  202A  34B2               	retlw	178
  3310  202B  3420               	retlw	32
  3311  202C  3420               	retlw	32
  3312  202D  34B2               	retlw	178
  3313  202E  3420               	retlw	32
  3314  202F  3420               	retlw	32
  3315  2030  34B2               	retlw	178
  3316  2031  3420               	retlw	32
  3317  2032  34B2               	retlw	178
  3318  2033  3420               	retlw	32
  3319  2034  34B2               	retlw	178
  3320  2035  3420               	retlw	32
  3321  2036  3420               	retlw	32
  3322  2037  34B2               	retlw	178
  3323  2038  3420               	retlw	32
  3324  2039  3420               	retlw	32
  3325  203A  34B2               	retlw	178
  3326  203B  3420               	retlw	32
  3327  203C  34B2               	retlw	178
  3328  203D  340D               	retlw	13
  3329  203E  340A               	retlw	10
  3330  203F  34B2               	retlw	178
  3331  2040  3420               	retlw	32
  3332  2041  3420               	retlw	32
  3333  2042  34B2               	retlw	178
  3334  2043  3420               	retlw	32
  3335  2044  3420               	retlw	32
  3336  2045  34B2               	retlw	178
  3337  2046  3420               	retlw	32
  3338  2047  34B2               	retlw	178
  3339  2048  3420               	retlw	32
  3340  2049  3420               	retlw	32
  3341  204A  34B2               	retlw	178
  3342  204B  3420               	retlw	32
  3343  204C  34B2               	retlw	178
  3344  204D  3420               	retlw	32
  3345  204E  34B2               	retlw	178
  3346  204F  3420               	retlw	32
  3347  2050  3420               	retlw	32
  3348  2051  34B2               	retlw	178
  3349  2052  340D               	retlw	13
  3350  2053  340A               	retlw	10
  3351  2054  34B2               	retlw	178
  3352  2055  3420               	retlw	32
  3353  2056  3420               	retlw	32
  3354  2057  34B2               	retlw	178
  3355  2058  3420               	retlw	32
  3356  2059  3420               	retlw	32
  3357  205A  34B2               	retlw	178
  3358  205B  3420               	retlw	32
  3359  205C  34B2               	retlw	178
  3360  205D  3420               	retlw	32
  3361  205E  3420               	retlw	32
  3362  205F  3420               	retlw	32
  3363  2060  34B2               	retlw	178
  3364  2061  3420               	retlw	32
  3365  2062  34B2               	retlw	178
  3366  2063  3420               	retlw	32
  3367  2064  3420               	retlw	32
  3368  2065  3420               	retlw	32
  3369  2066  34B2               	retlw	178
  3370  2067  340D               	retlw	13
  3371  2068  340A               	retlw	10
  3372  2069  3420               	retlw	32
  3373  206A  3420               	retlw	32
  3374  206B  3420               	retlw	32
  3375  206C  3420               	retlw	32
  3376  206D  3420               	retlw	32
  3377  206E  3420               	retlw	32
  3378  206F  3420               	retlw	32
  3379  2070  3420               	retlw	32
  3380  2071  3420               	retlw	32
  3381  2072  3420               	retlw	32
  3382  2073  3420               	retlw	32
  3383  2074  3420               	retlw	32
  3384  2075  3420               	retlw	32
  3385  2076  3420               	retlw	32
  3386  2077  3420               	retlw	32
  3387  2078  3420               	retlw	32
  3388  2079  3420               	retlw	32
  3389  207A  3420               	retlw	32
  3390  207B  3420               	retlw	32
  3391  207C  340D               	retlw	13
  3392  207D  340A               	retlw	10
  3393  207E                     __end_of_MiWi:	
  3394  207E                     _DE:	
  3395  207E  34B2               	retlw	178
  3396  207F  34B2               	retlw	178
  3397  2080  34B2               	retlw	178
  3398  2081  3420               	retlw	32
  3399  2082  3420               	retlw	32
  3400  2083  34B2               	retlw	178
  3401  2084  34B2               	retlw	178
  3402  2085  34B2               	retlw	178
  3403  2086  34B2               	retlw	178
  3404  2087  340D               	retlw	13
  3405  2088  340A               	retlw	10
  3406  2089  34B2               	retlw	178
  3407  208A  3420               	retlw	32
  3408  208B  3420               	retlw	32
  3409  208C  34B2               	retlw	178
  3410  208D  3420               	retlw	32
  3411  208E  34B2               	retlw	178
  3412  208F  3420               	retlw	32
  3413  2090  3420               	retlw	32
  3414  2091  3420               	retlw	32
  3415  2092  340D               	retlw	13
  3416  2093  340A               	retlw	10
  3417  2094  34B2               	retlw	178
  3418  2095  3420               	retlw	32
  3419  2096  3420               	retlw	32
  3420  2097  34B2               	retlw	178
  3421  2098  3420               	retlw	32
  3422  2099  34B2               	retlw	178
  3423  209A  34B2               	retlw	178
  3424  209B  34B2               	retlw	178
  3425  209C  34B2               	retlw	178
  3426  209D  340D               	retlw	13
  3427  209E  340A               	retlw	10
  3428  209F  34B2               	retlw	178
  3429  20A0  3420               	retlw	32
  3430  20A1  3420               	retlw	32
  3431  20A2  34B2               	retlw	178
  3432  20A3  3420               	retlw	32
  3433  20A4  34B2               	retlw	178
  3434  20A5  3420               	retlw	32
  3435  20A6  3420               	retlw	32
  3436  20A7  3420               	retlw	32
  3437  20A8  340D               	retlw	13
  3438  20A9  340A               	retlw	10
  3439  20AA  34B2               	retlw	178
  3440  20AB  34B2               	retlw	178
  3441  20AC  34B2               	retlw	178
  3442  20AD  3420               	retlw	32
  3443  20AE  3420               	retlw	32
  3444  20AF  34B2               	retlw	178
  3445  20B0  34B2               	retlw	178
  3446  20B1  34B2               	retlw	178
  3447  20B2  34B2               	retlw	178
  3448  20B3  340D               	retlw	13
  3449  20B4  340A               	retlw	10
  3450  20B5  3420               	retlw	32
  3451  20B6  3420               	retlw	32
  3452  20B7  3420               	retlw	32
  3453  20B8  3420               	retlw	32
  3454  20B9  3420               	retlw	32
  3455  20BA  3420               	retlw	32
  3456  20BB  3420               	retlw	32
  3457  20BC  3420               	retlw	32
  3458  20BD  3420               	retlw	32
  3459  20BE  340D               	retlw	13
  3460  20BF  340A               	retlw	10
  3461  20C0                     __end_of_DE:	
  3462  20C0                     _octpowers:	
  3463  20C0  3401               	retlw	1
  3464  20C1  3400               	retlw	0
  3465  20C2  3408               	retlw	8
  3466  20C3  3400               	retlw	0
  3467  20C4  3440               	retlw	64
  3468  20C5  3400               	retlw	0
  3469  20C6  3400               	retlw	0
  3470  20C7  3402               	retlw	2
  3471  20C8  3400               	retlw	0
  3472  20C9  3410               	retlw	16
  3473  20CA  3400               	retlw	0
  3474  20CB  3480               	retlw	128
  3475  20CC                     __end_of_octpowers:	
  3476  20CC                     _dpowers:	
  3477  20CC  3401               	retlw	1
  3478  20CD  3400               	retlw	0
  3479  20CE  340A               	retlw	10
  3480  20CF  3400               	retlw	0
  3481  20D0  3464               	retlw	100
  3482  20D1  3400               	retlw	0
  3483  20D2  34E8               	retlw	232
  3484  20D3  3403               	retlw	3
  3485  20D4  3410               	retlw	16
  3486  20D5  3427               	retlw	39
  3487  20D6                     __end_of_dpowers:	
  3488  20D6                     _hexpowers:	
  3489  20D6  3401               	retlw	1
  3490  20D7  3400               	retlw	0
  3491  20D8  3410               	retlw	16
  3492  20D9  3400               	retlw	0
  3493  20DA  3400               	retlw	0
  3494  20DB  3401               	retlw	1
  3495  20DC  3400               	retlw	0
  3496  20DD  3410               	retlw	16
  3497  20DE                     __end_of_hexpowers:	
  3498  000B                     _INTCONbits	set	11
  3499  0011                     _PIR1bits	set	17
  3500  000C                     _PORTAbits	set	12
  3501  000D                     _PORTBbits	set	13
  3502  0018                     _T1CON	set	24
  3503  0018                     _T1CONbits	set	24
  3504  0017                     _TMR1H	set	23
  3505  0016                     _TMR1L	set	22
  3506  0099                     _OSCCON	set	153
  3507  0091                     _PIE1bits	set	145
  3508  008C                     _TRISA	set	140
  3509  008C                     _TRISAbits	set	140
  3510  008D                     _TRISB	set	141
  3511  008D                     _TRISBbits	set	141
  3512  008E                     _TRISC	set	142
  3513  008E                     _TRISCbits	set	142
  3514  008F                     _TRISD	set	143
  3515  008F                     _TRISDbits	set	143
  3516  010C                     _LATA	set	268
  3517  010C                     _LATAbits	set	268
  3518  010D                     _LATB	set	269
  3519  010D                     _LATBbits	set	269
  3520  010E                     _LATC	set	270
  3521  010E                     _LATCbits	set	270
  3522  010F                     _LATD	set	271
  3523  010F                     _LATDbits	set	271
  3524  0191                     _EEADR	set	401
  3525  018C                     _ANSELA	set	396
  3526  0192                     _EEADRH	set	402
  3527  0195                     _EECON1bits	set	405
  3528  0196                     _EECON2	set	406
  3529  0193                     _EEDATA	set	403
  3530  019D                     _RCSTA	set	413
  3531  019B                     _SPBRG	set	411
  3532  019A                     _TXREG	set	410
  3533  019E                     _TXSTA	set	414
  3534  019E                     _TXSTAbits	set	414
  3535  0211                     _SSP1BUF	set	529
  3536  0215                     _SSP1CON1	set	533
  3537  0215                     _SSP1CON1bits	set	533
  3538  0214                     _SSP1STAT	set	532
  3539  030C                     _TRISFbits	set	780
  3540  0396                     _IOCBFbits	set	918
  3541  0395                     _IOCBN	set	917
  3542  0395                     _IOCBNbits	set	917
  3543  0394                     _IOCBP	set	916
  3544  038C                     _LATFbits	set	908
  3545  20DE                     STR_25:	
  3546  20DE  340D               	retlw	13
  3547  20DF  340A               	retlw	10
  3548  20E0  3420               	retlw	32	;' '
  3549  20E1  3420               	retlw	32	;' '
  3550  20E2  3420               	retlw	32	;' '
  3551  20E3  3420               	retlw	32	;' '
  3552  20E4  3420               	retlw	32	;' '
  3553  20E5  3420               	retlw	32	;' '
  3554  20E6  3420               	retlw	32	;' '
  3555  20E7  3420               	retlw	32	;' '
  3556  20E8  3420               	retlw	32	;' '
  3557  20E9  3420               	retlw	32	;' '
  3558  20EA  3420               	retlw	32	;' '
  3559  20EB  3420               	retlw	32	;' '
  3560  20EC  3420               	retlw	32	;' '
  3561  20ED  3420               	retlw	32	;' '
  3562  20EE  3420               	retlw	32	;' '
  3563  20EF  3420               	retlw	32	;' '
  3564  20F0  3420               	retlw	32	;' '
  3565  20F1  3420               	retlw	32	;' '
  3566  20F2  3420               	retlw	32	;' '
  3567  20F3  3420               	retlw	32	;' '
  3568  20F4  3420               	retlw	32	;' '
  3569  20F5  3432               	retlw	50	;'2'
  3570  20F6  3420               	retlw	32	;' '
  3571  20F7  3474               	retlw	116	;'t'
  3572  20F8  346F               	retlw	111	;'o'
  3573  20F9  3420               	retlw	32	;' '
  3574  20FA  3475               	retlw	117	;'u'
  3575  20FB  346E               	retlw	110	;'n'
  3576  20FC  3469               	retlw	105	;'i'
  3577  20FD  3463               	retlw	99	;'c'
  3578  20FE  3461               	retlw	97	;'a'
  3579  20FF  3473               	retlw	115	;'s'
  3580  2100  3474               	retlw	116	;'t'
  3581  2101  3420               	retlw	32	;' '
  3582  2102  3465               	retlw	101	;'e'
  3583  2103  346E               	retlw	110	;'n'
  3584  2104  3463               	retlw	99	;'c'
  3585  2105  3472               	retlw	114	;'r'
  3586  2106  3479               	retlw	121	;'y'
  3587  2107  3470               	retlw	112	;'p'
  3588  2108  3474               	retlw	116	;'t'
  3589  2109  3465               	retlw	101	;'e'
  3590  210A  3464               	retlw	100	;'d'
  3591  210B  3420               	retlw	32	;' '
  3592  210C  346D               	retlw	109	;'m'
  3593  210D  3465               	retlw	101	;'e'
  3594  210E  3473               	retlw	115	;'s'
  3595  210F  3473               	retlw	115	;'s'
  3596  2110  3461               	retlw	97	;'a'
  3597  2111  3467               	retlw	103	;'g'
  3598  2112  3465               	retlw	101	;'e'
  3599  2113  342E               	retlw	46	;'.'
  3600  2114  3420               	retlw	32	;' '
  3601  2115  344C               	retlw	76	;'L'
  3602  2116  3445               	retlw	69	;'E'
  3603  2117  3444               	retlw	68	;'D'
  3604  2118  3420               	retlw	32	;' '
  3605  2119  3432               	retlw	50	;'2'
  3606  211A  3420               	retlw	32	;' '
  3607  211B  3477               	retlw	119	;'w'
  3608  211C  3469               	retlw	105	;'i'
  3609  211D  346C               	retlw	108	;'l'
  3610  211E  346C               	retlw	108	;'l'
  3611  211F  3400               	retlw	0
  3612  2120                     STR_24:	
  3613  2120  340D               	retlw	13
  3614  2121  340A               	retlw	10
  3615  2122  3420               	retlw	32	;' '
  3616  2123  3420               	retlw	32	;' '
  3617  2124  3420               	retlw	32	;' '
  3618  2125  3420               	retlw	32	;' '
  3619  2126  3420               	retlw	32	;' '
  3620  2127  3420               	retlw	32	;' '
  3621  2128  3420               	retlw	32	;' '
  3622  2129  3420               	retlw	32	;' '
  3623  212A  3420               	retlw	32	;' '
  3624  212B  3420               	retlw	32	;' '
  3625  212C  3420               	retlw	32	;' '
  3626  212D  3420               	retlw	32	;' '
  3627  212E  3420               	retlw	32	;' '
  3628  212F  3420               	retlw	32	;' '
  3629  2130  3420               	retlw	32	;' '
  3630  2131  3420               	retlw	32	;' '
  3631  2132  3420               	retlw	32	;' '
  3632  2133  3420               	retlw	32	;' '
  3633  2134  3420               	retlw	32	;' '
  3634  2135  3420               	retlw	32	;' '
  3635  2136  3420               	retlw	32	;' '
  3636  2137  3442               	retlw	66	;'B'
  3637  2138  3475               	retlw	117	;'u'
  3638  2139  3474               	retlw	116	;'t'
  3639  213A  3474               	retlw	116	;'t'
  3640  213B  346F               	retlw	111	;'o'
  3641  213C  346E               	retlw	110	;'n'
  3642  213D  3420               	retlw	32	;' '
  3643  213E  3431               	retlw	49	;'1'
  3644  213F  3420               	retlw	32	;' '
  3645  2140  3474               	retlw	116	;'t'
  3646  2141  346F               	retlw	111	;'o'
  3647  2142  3420               	retlw	32	;' '
  3648  2143  3462               	retlw	98	;'b'
  3649  2144  3472               	retlw	114	;'r'
  3650  2145  346F               	retlw	111	;'o'
  3651  2146  3461               	retlw	97	;'a'
  3652  2147  3464               	retlw	100	;'d'
  3653  2148  3463               	retlw	99	;'c'
  3654  2149  3461               	retlw	97	;'a'
  3655  214A  3473               	retlw	115	;'s'
  3656  214B  3474               	retlw	116	;'t'
  3657  214C  3420               	retlw	32	;' '
  3658  214D  346D               	retlw	109	;'m'
  3659  214E  3465               	retlw	101	;'e'
  3660  214F  3473               	retlw	115	;'s'
  3661  2150  3473               	retlw	115	;'s'
  3662  2151  3461               	retlw	97	;'a'
  3663  2152  3467               	retlw	103	;'g'
  3664  2153  3465               	retlw	101	;'e'
  3665  2154  342E               	retlw	46	;'.'
  3666  2155  3420               	retlw	32	;' '
  3667  2156  3450               	retlw	80	;'P'
  3668  2157  3475               	retlw	117	;'u'
  3669  2158  3473               	retlw	115	;'s'
  3670  2159  3468               	retlw	104	;'h'
  3671  215A  3420               	retlw	32	;' '
  3672  215B  3442               	retlw	66	;'B'
  3673  215C  3475               	retlw	117	;'u'
  3674  215D  3474               	retlw	116	;'t'
  3675  215E  3474               	retlw	116	;'t'
  3676  215F  346F               	retlw	111	;'o'
  3677  2160  346E               	retlw	110	;'n'
  3678  2161  3400               	retlw	0
  3679  2162                     STR_22:	
  3680  2162  340D               	retlw	13
  3681  2163  340A               	retlw	10
  3682  2164  3420               	retlw	32	;' '
  3683  2165  3420               	retlw	32	;' '
  3684  2166  3420               	retlw	32	;' '
  3685  2167  3420               	retlw	32	;' '
  3686  2168  3420               	retlw	32	;' '
  3687  2169  3420               	retlw	32	;' '
  3688  216A  3420               	retlw	32	;' '
  3689  216B  3420               	retlw	32	;' '
  3690  216C  3420               	retlw	32	;' '
  3691  216D  3420               	retlw	32	;' '
  3692  216E  3420               	retlw	32	;' '
  3693  216F  3420               	retlw	32	;' '
  3694  2170  3420               	retlw	32	;' '
  3695  2171  3420               	retlw	32	;' '
  3696  2172  3420               	retlw	32	;' '
  3697  2173  3420               	retlw	32	;' '
  3698  2174  3420               	retlw	32	;' '
  3699  2175  3420               	retlw	32	;' '
  3700  2176  3420               	retlw	32	;' '
  3701  2177  3420               	retlw	32	;' '
  3702  2178  3420               	retlw	32	;' '
  3703  2179  3450               	retlw	80	;'P'
  3704  217A  346F               	retlw	111	;'o'
  3705  217B  3477               	retlw	119	;'w'
  3706  217C  3465               	retlw	101	;'e'
  3707  217D  3472               	retlw	114	;'r'
  3708  217E  3420               	retlw	32	;' '
  3709  217F  346F               	retlw	111	;'o'
  3710  2180  346E               	retlw	110	;'n'
  3711  2181  3420               	retlw	32	;' '
  3712  2182  3474               	retlw	116	;'t'
  3713  2183  3468               	retlw	104	;'h'
  3714  2184  3465               	retlw	101	;'e'
  3715  2185  3420               	retlw	32	;' '
  3716  2186  3462               	retlw	98	;'b'
  3717  2187  346F               	retlw	111	;'o'
  3718  2188  3461               	retlw	97	;'a'
  3719  2189  3472               	retlw	114	;'r'
  3720  218A  3464               	retlw	100	;'d'
  3721  218B  3420               	retlw	32	;' '
  3722  218C  3475               	retlw	117	;'u'
  3723  218D  346E               	retlw	110	;'n'
  3724  218E  3474               	retlw	116	;'t'
  3725  218F  3469               	retlw	105	;'i'
  3726  2190  346C               	retlw	108	;'l'
  3727  2191  3420               	retlw	32	;' '
  3728  2192  344C               	retlw	76	;'L'
  3729  2193  3445               	retlw	69	;'E'
  3730  2194  3444               	retlw	68	;'D'
  3731  2195  3420               	retlw	32	;' '
  3732  2196  3431               	retlw	49	;'1'
  3733  2197  3420               	retlw	32	;' '
  3734  2198  346C               	retlw	108	;'l'
  3735  2199  3469               	retlw	105	;'i'
  3736  219A  3467               	retlw	103	;'g'
  3737  219B  3468               	retlw	104	;'h'
  3738  219C  3474               	retlw	116	;'t'
  3739  219D  3473               	retlw	115	;'s'
  3740  219E  3420               	retlw	32	;' '
  3741  219F  3475               	retlw	117	;'u'
  3742  21A0  3470               	retlw	112	;'p'
  3743  21A1  3400               	retlw	0
  3744  21A2                     STR_23:	
  3745  21A2  340D               	retlw	13
  3746  21A3  340A               	retlw	10
  3747  21A4  3420               	retlw	32	;' '
  3748  21A5  3420               	retlw	32	;' '
  3749  21A6  3420               	retlw	32	;' '
  3750  21A7  3420               	retlw	32	;' '
  3751  21A8  3420               	retlw	32	;' '
  3752  21A9  3420               	retlw	32	;' '
  3753  21AA  3420               	retlw	32	;' '
  3754  21AB  3420               	retlw	32	;' '
  3755  21AC  3420               	retlw	32	;' '
  3756  21AD  3420               	retlw	32	;' '
  3757  21AE  3420               	retlw	32	;' '
  3758  21AF  3420               	retlw	32	;' '
  3759  21B0  3420               	retlw	32	;' '
  3760  21B1  3420               	retlw	32	;' '
  3761  21B2  3420               	retlw	32	;' '
  3762  21B3  3420               	retlw	32	;' '
  3763  21B4  3420               	retlw	32	;' '
  3764  21B5  3420               	retlw	32	;' '
  3765  21B6  3420               	retlw	32	;' '
  3766  21B7  3420               	retlw	32	;' '
  3767  21B8  3420               	retlw	32	;' '
  3768  21B9  3474               	retlw	116	;'t'
  3769  21BA  346F               	retlw	111	;'o'
  3770  21BB  3420               	retlw	32	;' '
  3771  21BC  3469               	retlw	105	;'i'
  3772  21BD  346E               	retlw	110	;'n'
  3773  21BE  3464               	retlw	100	;'d'
  3774  21BF  3469               	retlw	105	;'i'
  3775  21C0  3463               	retlw	99	;'c'
  3776  21C1  3461               	retlw	97	;'a'
  3777  21C2  3474               	retlw	116	;'t'
  3778  21C3  3465               	retlw	101	;'e'
  3779  21C4  3420               	retlw	32	;' '
  3780  21C5  3463               	retlw	99	;'c'
  3781  21C6  346F               	retlw	111	;'o'
  3782  21C7  346E               	retlw	110	;'n'
  3783  21C8  346E               	retlw	110	;'n'
  3784  21C9  3465               	retlw	101	;'e'
  3785  21CA  3463               	retlw	99	;'c'
  3786  21CB  3474               	retlw	116	;'t'
  3787  21CC  3469               	retlw	105	;'i'
  3788  21CD  346E               	retlw	110	;'n'
  3789  21CE  3467               	retlw	103	;'g'
  3790  21CF  3420               	retlw	32	;' '
  3791  21D0  3477               	retlw	119	;'w'
  3792  21D1  3469               	retlw	105	;'i'
  3793  21D2  3474               	retlw	116	;'t'
  3794  21D3  3468               	retlw	104	;'h'
  3795  21D4  3420               	retlw	32	;' '
  3796  21D5  3470               	retlw	112	;'p'
  3797  21D6  3465               	retlw	101	;'e'
  3798  21D7  3465               	retlw	101	;'e'
  3799  21D8  3472               	retlw	114	;'r'
  3800  21D9  342E               	retlw	46	;'.'
  3801  21DA  3420               	retlw	32	;' '
  3802  21DB  3450               	retlw	80	;'P'
  3803  21DC  3475               	retlw	117	;'u'
  3804  21DD  3473               	retlw	115	;'s'
  3805  21DE  3468               	retlw	104	;'h'
  3806  21DF  3400               	retlw	0
  3807  21E0                     STR_26:	
  3808  21E0  340D               	retlw	13
  3809  21E1  340A               	retlw	10
  3810  21E2  3420               	retlw	32	;' '
  3811  21E3  3420               	retlw	32	;' '
  3812  21E4  3420               	retlw	32	;' '
  3813  21E5  3420               	retlw	32	;' '
  3814  21E6  3420               	retlw	32	;' '
  3815  21E7  3420               	retlw	32	;' '
  3816  21E8  3420               	retlw	32	;' '
  3817  21E9  3420               	retlw	32	;' '
  3818  21EA  3420               	retlw	32	;' '
  3819  21EB  3420               	retlw	32	;' '
  3820  21EC  3420               	retlw	32	;' '
  3821  21ED  3420               	retlw	32	;' '
  3822  21EE  3420               	retlw	32	;' '
  3823  21EF  3420               	retlw	32	;' '
  3824  21F0  3420               	retlw	32	;' '
  3825  21F1  3420               	retlw	32	;' '
  3826  21F2  3420               	retlw	32	;' '
  3827  21F3  3420               	retlw	32	;' '
  3828  21F4  3420               	retlw	32	;' '
  3829  21F5  3420               	retlw	32	;' '
  3830  21F6  3420               	retlw	32	;' '
  3831  21F7  3462               	retlw	98	;'b'
  3832  21F8  3465               	retlw	101	;'e'
  3833  21F9  3420               	retlw	32	;' '
  3834  21FA  3474               	retlw	116	;'t'
  3835  21FB  346F               	retlw	111	;'o'
  3836  21FC  3467               	retlw	103	;'g'
  3837  21FD  3467               	retlw	103	;'g'
  3838  21FE  346C               	retlw	108	;'l'
  3839  21FF  3465               	retlw	101	;'e'
  3840  2200  3464               	retlw	100	;'d'
  3841  2201  3420               	retlw	32	;' '
  3842  2202  3475               	retlw	117	;'u'
  3843  2203  3470               	retlw	112	;'p'
  3844  2204  346F               	retlw	111	;'o'
  3845  2205  346E               	retlw	110	;'n'
  3846  2206  3420               	retlw	32	;' '
  3847  2207  3472               	retlw	114	;'r'
  3848  2208  3465               	retlw	101	;'e'
  3849  2209  3463               	retlw	99	;'c'
  3850  220A  3465               	retlw	101	;'e'
  3851  220B  3469               	retlw	105	;'i'
  3852  220C  3476               	retlw	118	;'v'
  3853  220D  3469               	retlw	105	;'i'
  3854  220E  346E               	retlw	110	;'n'
  3855  220F  3467               	retlw	103	;'g'
  3856  2210  3420               	retlw	32	;' '
  3857  2211  346D               	retlw	109	;'m'
  3858  2212  3465               	retlw	101	;'e'
  3859  2213  3473               	retlw	115	;'s'
  3860  2214  3473               	retlw	115	;'s'
  3861  2215  3461               	retlw	97	;'a'
  3862  2216  3467               	retlw	103	;'g'
  3863  2217  3465               	retlw	101	;'e'
  3864  2218  3473               	retlw	115	;'s'
  3865  2219  342E               	retlw	46	;'.'
  3866  221A  3420               	retlw	32	;' '
  3867  221B  3400               	retlw	0
  3868  221C                     STR_19:	
  3869  221C  340D               	retlw	13
  3870  221D  340A               	retlw	10
  3871  221E  3453               	retlw	83	;'S'
  3872  221F  3474               	retlw	116	;'t'
  3873  2220  3461               	retlw	97	;'a'
  3874  2221  3472               	retlw	114	;'r'
  3875  2222  3474               	retlw	116	;'t'
  3876  2223  3469               	retlw	105	;'i'
  3877  2224  346E               	retlw	110	;'n'
  3878  2225  3467               	retlw	103	;'g'
  3879  2226  3420               	retlw	32	;' '
  3880  2227  344E               	retlw	78	;'N'
  3881  2228  346F               	retlw	111	;'o'
  3882  2229  3464               	retlw	100	;'d'
  3883  222A  3465               	retlw	101	;'e'
  3884  222B  3420               	retlw	32	;' '
  3885  222C  3431               	retlw	49	;'1'
  3886  222D  3420               	retlw	32	;' '
  3887  222E  346F               	retlw	111	;'o'
  3888  222F  3466               	retlw	102	;'f'
  3889  2230  3420               	retlw	32	;' '
  3890  2231  3453               	retlw	83	;'S'
  3891  2232  3469               	retlw	105	;'i'
  3892  2233  346D               	retlw	109	;'m'
  3893  2234  3470               	retlw	112	;'p'
  3894  2235  346C               	retlw	108	;'l'
  3895  2236  3465               	retlw	101	;'e'
  3896  2237  3420               	retlw	32	;' '
  3897  2238  3444               	retlw	68	;'D'
  3898  2239  3465               	retlw	101	;'e'
  3899  223A  346D               	retlw	109	;'m'
  3900  223B  346F               	retlw	111	;'o'
  3901  223C  3420               	retlw	32	;' '
  3902  223D  3466               	retlw	102	;'f'
  3903  223E  346F               	retlw	111	;'o'
  3904  223F  3472               	retlw	114	;'r'
  3905  2240  3420               	retlw	32	;' '
  3906  2241  344D               	retlw	77	;'M'
  3907  2242  3469               	retlw	105	;'i'
  3908  2243  3457               	retlw	87	;'W'
  3909  2244  3469               	retlw	105	;'i'
  3910  2245  3428               	retlw	40	;'('
  3911  2246  3454               	retlw	84	;'T'
  3912  2247  344D               	retlw	77	;'M'
  3913  2248  3429               	retlw	41	;')'
  3914  2249  3420               	retlw	32	;' '
  3915  224A  3450               	retlw	80	;'P'
  3916  224B  3432               	retlw	50	;'2'
  3917  224C  3450               	retlw	80	;'P'
  3918  224D  3420               	retlw	32	;' '
  3919  224E  3453               	retlw	83	;'S'
  3920  224F  3474               	retlw	116	;'t'
  3921  2250  3461               	retlw	97	;'a'
  3922  2251  3463               	retlw	99	;'c'
  3923  2252  346B               	retlw	107	;'k'
  3924  2253  3420               	retlw	32	;' '
  3925  2254  342E               	retlw	46	;'.'
  3926  2255  342E               	retlw	46	;'.'
  3927  2256  342E               	retlw	46	;'.'
  3928  2257  3400               	retlw	0
  3929  2258                     STR_11:	
  3930  2258  340D               	retlw	13
  3931  2259  340A               	retlw	10
  3932  225A  340D               	retlw	13
  3933  225B  340A               	retlw	10
  3934  225C  3443               	retlw	67	;'C'
  3935  225D  346F               	retlw	111	;'o'
  3936  225E  346E               	retlw	110	;'n'
  3937  225F  346E               	retlw	110	;'n'
  3938  2260  3465               	retlw	101	;'e'
  3939  2261  3463               	retlw	99	;'c'
  3940  2262  3474               	retlw	116	;'t'
  3941  2263  3469               	retlw	105	;'i'
  3942  2264  346F               	retlw	111	;'o'
  3943  2265  346E               	retlw	110	;'n'
  3944  2266  3420               	retlw	32	;' '
  3945  2267  3420               	retlw	32	;' '
  3946  2268  3420               	retlw	32	;' '
  3947  2269  3420               	retlw	32	;' '
  3948  226A  3420               	retlw	32	;' '
  3949  226B  3450               	retlw	80	;'P'
  3950  226C  3465               	retlw	101	;'e'
  3951  226D  3465               	retlw	101	;'e'
  3952  226E  3472               	retlw	114	;'r'
  3953  226F  344C               	retlw	76	;'L'
  3954  2270  346F               	retlw	111	;'o'
  3955  2271  346E               	retlw	110	;'n'
  3956  2272  3467               	retlw	103	;'g'
  3957  2273  3441               	retlw	65	;'A'
  3958  2274  3464               	retlw	100	;'d'
  3959  2275  3464               	retlw	100	;'d'
  3960  2276  3472               	retlw	114	;'r'
  3961  2277  3465               	retlw	101	;'e'
  3962  2278  3473               	retlw	115	;'s'
  3963  2279  3473               	retlw	115	;'s'
  3964  227A  3420               	retlw	32	;' '
  3965  227B  3420               	retlw	32	;' '
  3966  227C  3420               	retlw	32	;' '
  3967  227D  3420               	retlw	32	;' '
  3968  227E  3420               	retlw	32	;' '
  3969  227F  3450               	retlw	80	;'P'
  3970  2280  3465               	retlw	101	;'e'
  3971  2281  3465               	retlw	101	;'e'
  3972  2282  3472               	retlw	114	;'r'
  3973  2283  3449               	retlw	73	;'I'
  3974  2284  346E               	retlw	110	;'n'
  3975  2285  3466               	retlw	102	;'f'
  3976  2286  346F               	retlw	111	;'o'
  3977  2287  340D               	retlw	13
  3978  2288  340A               	retlw	10
  3979  2289  3400               	retlw	0
  3980  228A                     STR_40:	
  3981  228A  3420               	retlw	32	;' '
  3982  228B  3469               	retlw	105	;'i'
  3983  228C  3473               	retlw	115	;'s'
  3984  228D  3420               	retlw	32	;' '
  3985  228E  346E               	retlw	110	;'n'
  3986  228F  346F               	retlw	111	;'o'
  3987  2290  3474               	retlw	116	;'t'
  3988  2291  3420               	retlw	32	;' '
  3989  2292  3473               	retlw	115	;'s'
  3990  2293  3475               	retlw	117	;'u'
  3991  2294  3470               	retlw	112	;'p'
  3992  2295  3470               	retlw	112	;'p'
  3993  2296  346F               	retlw	111	;'o'
  3994  2297  3472               	retlw	114	;'r'
  3995  2298  3474               	retlw	116	;'t'
  3996  2299  3465               	retlw	101	;'e'
  3997  229A  3464               	retlw	100	;'d'
  3998  229B  3420               	retlw	32	;' '
  3999  229C  3469               	retlw	105	;'i'
  4000  229D  346E               	retlw	110	;'n'
  4001  229E  3420               	retlw	32	;' '
  4002  229F  3463               	retlw	99	;'c'
  4003  22A0  3475               	retlw	117	;'u'
  4004  22A1  3472               	retlw	114	;'r'
  4005  22A2  3472               	retlw	114	;'r'
  4006  22A3  3465               	retlw	101	;'e'
  4007  22A4  346E               	retlw	110	;'n'
  4008  22A5  3474               	retlw	116	;'t'
  4009  22A6  3420               	retlw	32	;' '
  4010  22A7  3463               	retlw	99	;'c'
  4011  22A8  346F               	retlw	111	;'o'
  4012  22A9  346E               	retlw	110	;'n'
  4013  22AA  3466               	retlw	102	;'f'
  4014  22AB  3469               	retlw	105	;'i'
  4015  22AC  3467               	retlw	103	;'g'
  4016  22AD  3475               	retlw	117	;'u'
  4017  22AE  3472               	retlw	114	;'r'
  4018  22AF  3461               	retlw	97	;'a'
  4019  22B0  3474               	retlw	116	;'t'
  4020  22B1  3469               	retlw	105	;'i'
  4021  22B2  346F               	retlw	111	;'o'
  4022  22B3  346E               	retlw	110	;'n'
  4023  22B4  342E               	retlw	46	;'.'
  4024  22B5  340D               	retlw	13
  4025  22B6  340A               	retlw	10
  4026  22B7  3400               	retlw	0
  4027  22B8                     STR_28:	
  4028  22B8  3443               	retlw	67	;'C'
  4029  22B9  346F               	retlw	111	;'o'
  4030  22BA  346E               	retlw	110	;'n'
  4031  22BB  346E               	retlw	110	;'n'
  4032  22BC  3465               	retlw	101	;'e'
  4033  22BD  3463               	retlw	99	;'c'
  4034  22BE  3474               	retlw	116	;'t'
  4035  22BF  3469               	retlw	105	;'i'
  4036  22C0  346E               	retlw	110	;'n'
  4037  22C1  3467               	retlw	103	;'g'
  4038  22C2  3420               	retlw	32	;' '
  4039  22C3  3450               	retlw	80	;'P'
  4040  22C4  3465               	retlw	101	;'e'
  4041  22C5  3465               	retlw	101	;'e'
  4042  22C6  3472               	retlw	114	;'r'
  4043  22C7  3420               	retlw	32	;' '
  4044  22C8  3420               	retlw	32	;' '
  4045  22C9  346F               	retlw	111	;'o'
  4046  22CA  346E               	retlw	110	;'n'
  4047  22CB  3420               	retlw	32	;' '
  4048  22CC  3443               	retlw	67	;'C'
  4049  22CD  3468               	retlw	104	;'h'
  4050  22CE  3461               	retlw	97	;'a'
  4051  22CF  346E               	retlw	110	;'n'
  4052  22D0  346E               	retlw	110	;'n'
  4053  22D1  3465               	retlw	101	;'e'
  4054  22D2  346C               	retlw	108	;'l'
  4055  22D3  3420               	retlw	32	;' '
  4056  22D4  3425               	retlw	37	;'%'
  4057  22D5  3464               	retlw	100	;'d'
  4058  22D6  3420               	retlw	32	;' '
  4059  22D7  3400               	retlw	0
  4060  22D8                     STR_20:	
  4061  22D8  340D               	retlw	13
  4062  22D9  340A               	retlw	10
  4063  22DA  3420               	retlw	32	;' '
  4064  22DB  3420               	retlw	32	;' '
  4065  22DC  3420               	retlw	32	;' '
  4066  22DD  3420               	retlw	32	;' '
  4067  22DE  3420               	retlw	32	;' '
  4068  22DF  3452               	retlw	82	;'R'
  4069  22E0  3446               	retlw	70	;'F'
  4070  22E1  3420               	retlw	32	;' '
  4071  22E2  3454               	retlw	84	;'T'
  4072  22E3  3472               	retlw	114	;'r'
  4073  22E4  3461               	retlw	97	;'a'
  4074  22E5  346E               	retlw	110	;'n'
  4075  22E6  3473               	retlw	115	;'s'
  4076  22E7  3463               	retlw	99	;'c'
  4077  22E8  3465               	retlw	101	;'e'
  4078  22E9  3469               	retlw	105	;'i'
  4079  22EA  3476               	retlw	118	;'v'
  4080  22EB  3465               	retlw	101	;'e'
  4081  22EC  3472               	retlw	114	;'r'
  4082  22ED  343A               	retlw	58	;':'
  4083  22EE  3420               	retlw	32	;' '
  4084  22EF  344D               	retlw	77	;'M'
  4085  22F0  3452               	retlw	82	;'R'
  4086  22F1  3446               	retlw	70	;'F'
  4087  22F2  3432               	retlw	50	;'2'
  4088  22F3  3434               	retlw	52	;'4'
  4089  22F4  344A               	retlw	74	;'J'
  4090  22F5  3434               	retlw	52	;'4'
  4091  22F6  3430               	retlw	48	;'0'
  4092  22F7  3400               	retlw	0
  4093  22F8                     STR_18:	
  4094  22F8  3453               	retlw	83	;'S'
  4095  22F9  3469               	retlw	105	;'i'
  4096  22FA  346D               	retlw	109	;'m'
  4097  22FB  3470               	retlw	112	;'p'
  4098  22FC  346C               	retlw	108	;'l'
  4099  22FD  3465               	retlw	101	;'e'
  4100  22FE  3420               	retlw	32	;' '
  4101  22FF  3450               	retlw	80	;'P'
  4102  2300  3432               	retlw	50	;'2'
  4103  2301  3450               	retlw	80	;'P'
  4104  2302  3420               	retlw	32	;' '
  4105  2303  3444               	retlw	68	;'D'
  4106  2304  3465               	retlw	101	;'e'
  4107  2305  346D               	retlw	109	;'m'
  4108  2306  346F               	retlw	111	;'o'
  4109  2307  3420               	retlw	32	;' '
  4110  2308  344D               	retlw	77	;'M'
  4111  2309  3452               	retlw	82	;'R'
  4112  230A  3446               	retlw	70	;'F'
  4113  230B  3432               	retlw	50	;'2'
  4114  230C  3434               	retlw	52	;'4'
  4115  230D  344A               	retlw	74	;'J'
  4116  230E  3434               	retlw	52	;'4'
  4117  230F  3430               	retlw	48	;'0'
  4118  2310  3420               	retlw	32	;' '
  4119  2311  344E               	retlw	78	;'N'
  4120  2312  346F               	retlw	111	;'o'
  4121  2313  3464               	retlw	100	;'d'
  4122  2314  3465               	retlw	101	;'e'
  4123  2315  3420               	retlw	32	;' '
  4124  2316  3400               	retlw	0
  4125  2317                     STR_29:	
  4126  2317  340D               	retlw	13
  4127  2318  340A               	retlw	10
  4128  2319  3443               	retlw	67	;'C'
  4129  231A  346F               	retlw	111	;'o'
  4130  231B  346E               	retlw	110	;'n'
  4131  231C  346E               	retlw	110	;'n'
  4132  231D  3465               	retlw	101	;'e'
  4133  231E  3463               	retlw	99	;'c'
  4134  231F  3474               	retlw	116	;'t'
  4135  2320  3469               	retlw	105	;'i'
  4136  2321  346E               	retlw	110	;'n'
  4137  2322  3467               	retlw	103	;'g'
  4138  2323  3420               	retlw	32	;' '
  4139  2324  3450               	retlw	80	;'P'
  4140  2325  3465               	retlw	101	;'e'
  4141  2326  3465               	retlw	101	;'e'
  4142  2327  3472               	retlw	114	;'r'
  4143  2328  3420               	retlw	32	;' '
  4144  2329  346F               	retlw	111	;'o'
  4145  232A  346E               	retlw	110	;'n'
  4146  232B  3420               	retlw	32	;' '
  4147  232C  3443               	retlw	67	;'C'
  4148  232D  3468               	retlw	104	;'h'
  4149  232E  3461               	retlw	97	;'a'
  4150  232F  346E               	retlw	110	;'n'
  4151  2330  346E               	retlw	110	;'n'
  4152  2331  3465               	retlw	101	;'e'
  4153  2332  346C               	retlw	108	;'l'
  4154  2333  3420               	retlw	32	;' '
  4155  2334  3400               	retlw	0
  4156  2335                     STR_31:	
  4157  2335  3443               	retlw	67	;'C'
  4158  2336  346F               	retlw	111	;'o'
  4159  2337  346E               	retlw	110	;'n'
  4160  2338  346E               	retlw	110	;'n'
  4161  2339  3465               	retlw	101	;'e'
  4162  233A  3463               	retlw	99	;'c'
  4163  233B  3474               	retlw	116	;'t'
  4164  233C  3465               	retlw	101	;'e'
  4165  233D  3464               	retlw	100	;'d'
  4166  233E  3420               	retlw	32	;' '
  4167  233F  3450               	retlw	80	;'P'
  4168  2340  3465               	retlw	101	;'e'
  4169  2341  3465               	retlw	101	;'e'
  4170  2342  3472               	retlw	114	;'r'
  4171  2343  3420               	retlw	32	;' '
  4172  2344  3420               	retlw	32	;' '
  4173  2345  346F               	retlw	111	;'o'
  4174  2346  346E               	retlw	110	;'n'
  4175  2347  3420               	retlw	32	;' '
  4176  2348  3443               	retlw	67	;'C'
  4177  2349  3468               	retlw	104	;'h'
  4178  234A  3461               	retlw	97	;'a'
  4179  234B  346E               	retlw	110	;'n'
  4180  234C  346E               	retlw	110	;'n'
  4181  234D  3465               	retlw	101	;'e'
  4182  234E  346C               	retlw	108	;'l'
  4183  234F  3420               	retlw	32	;' '
  4184  2350  3425               	retlw	37	;'%'
  4185  2351  3464               	retlw	100	;'d'
  4186  2352  3400               	retlw	0
  4187  2353                     STR_32:	
  4188  2353  340D               	retlw	13
  4189  2354  340A               	retlw	10
  4190  2355  3443               	retlw	67	;'C'
  4191  2356  346F               	retlw	111	;'o'
  4192  2357  346E               	retlw	110	;'n'
  4193  2358  346E               	retlw	110	;'n'
  4194  2359  3465               	retlw	101	;'e'
  4195  235A  3463               	retlw	99	;'c'
  4196  235B  3474               	retlw	116	;'t'
  4197  235C  3465               	retlw	101	;'e'
  4198  235D  3464               	retlw	100	;'d'
  4199  235E  3420               	retlw	32	;' '
  4200  235F  3450               	retlw	80	;'P'
  4201  2360  3465               	retlw	101	;'e'
  4202  2361  3465               	retlw	101	;'e'
  4203  2362  3472               	retlw	114	;'r'
  4204  2363  3420               	retlw	32	;' '
  4205  2364  346F               	retlw	111	;'o'
  4206  2365  346E               	retlw	110	;'n'
  4207  2366  3420               	retlw	32	;' '
  4208  2367  3443               	retlw	67	;'C'
  4209  2368  3468               	retlw	104	;'h'
  4210  2369  3461               	retlw	97	;'a'
  4211  236A  346E               	retlw	110	;'n'
  4212  236B  346E               	retlw	110	;'n'
  4213  236C  3465               	retlw	101	;'e'
  4214  236D  346C               	retlw	108	;'l'
  4215  236E  3420               	retlw	32	;' '
  4216  236F  3400               	retlw	0
  4217  2370                     STR_35:	
  4218  2370  3442               	retlw	66	;'B'
  4219  2371  3472               	retlw	114	;'r'
  4220  2372  346F               	retlw	111	;'o'
  4221  2373  3461               	retlw	97	;'a'
  4222  2374  3464               	retlw	100	;'d'
  4223  2375  3463               	retlw	99	;'c'
  4224  2376  3461               	retlw	97	;'a'
  4225  2377  3473               	retlw	115	;'s'
  4226  2378  3474               	retlw	116	;'t'
  4227  2379  3420               	retlw	32	;' '
  4228  237A  3450               	retlw	80	;'P'
  4229  237B  3461               	retlw	97	;'a'
  4230  237C  3463               	retlw	99	;'c'
  4231  237D  346B               	retlw	107	;'k'
  4232  237E  3465               	retlw	101	;'e'
  4233  237F  3474               	retlw	116	;'t'
  4234  2380  3420               	retlw	32	;' '
  4235  2381  3477               	retlw	119	;'w'
  4236  2382  3469               	retlw	105	;'i'
  4237  2383  3474               	retlw	116	;'t'
  4238  2384  3468               	retlw	104	;'h'
  4239  2385  3420               	retlw	32	;' '
  4240  2386  3452               	retlw	82	;'R'
  4241  2387  3453               	retlw	83	;'S'
  4242  2388  3453               	retlw	83	;'S'
  4243  2389  3449               	retlw	73	;'I'
  4244  238A  3420               	retlw	32	;' '
  4245  238B  3400               	retlw	0
  4246  238C                     STR_36:	
  4247  238C  3455               	retlw	85	;'U'
  4248  238D  346E               	retlw	110	;'n'
  4249  238E  3469               	retlw	105	;'i'
  4250  238F  3463               	retlw	99	;'c'
  4251  2390  3461               	retlw	97	;'a'
  4252  2391  3473               	retlw	115	;'s'
  4253  2392  3474               	retlw	116	;'t'
  4254  2393  3420               	retlw	32	;' '
  4255  2394  3450               	retlw	80	;'P'
  4256  2395  3461               	retlw	97	;'a'
  4257  2396  3463               	retlw	99	;'c'
  4258  2397  346B               	retlw	107	;'k'
  4259  2398  3465               	retlw	101	;'e'
  4260  2399  3474               	retlw	116	;'t'
  4261  239A  3420               	retlw	32	;' '
  4262  239B  3477               	retlw	119	;'w'
  4263  239C  3469               	retlw	105	;'i'
  4264  239D  3474               	retlw	116	;'t'
  4265  239E  3468               	retlw	104	;'h'
  4266  239F  3420               	retlw	32	;' '
  4267  23A0  3452               	retlw	82	;'R'
  4268  23A1  3453               	retlw	83	;'S'
  4269  23A2  3453               	retlw	83	;'S'
  4270  23A3  3449               	retlw	73	;'I'
  4271  23A4  3420               	retlw	32	;' '
  4272  23A5  3400               	retlw	0
  4273  23A6                     STR_39:	
  4274  23A6  340D               	retlw	13
  4275  23A7  340A               	retlw	10
  4276  23A8  3453               	retlw	83	;'S'
  4277  23A9  3465               	retlw	101	;'e'
  4278  23AA  346C               	retlw	108	;'l'
  4279  23AB  3465               	retlw	101	;'e'
  4280  23AC  3463               	retlw	99	;'c'
  4281  23AD  3474               	retlw	116	;'t'
  4282  23AE  3469               	retlw	105	;'i'
  4283  23AF  346F               	retlw	111	;'o'
  4284  23B0  346E               	retlw	110	;'n'
  4285  23B1  3420               	retlw	32	;' '
  4286  23B2  346F               	retlw	111	;'o'
  4287  23B3  3466               	retlw	102	;'f'
  4288  23B4  3420               	retlw	32	;' '
  4289  23B5  3463               	retlw	99	;'c'
  4290  23B6  3468               	retlw	104	;'h'
  4291  23B7  3461               	retlw	97	;'a'
  4292  23B8  346E               	retlw	110	;'n'
  4293  23B9  346E               	retlw	110	;'n'
  4294  23BA  3465               	retlw	101	;'e'
  4295  23BB  346C               	retlw	108	;'l'
  4296  23BC  3420               	retlw	32	;' '
  4297  23BD  3400               	retlw	0
  4298  23BE                     STR_21:	
  4299  23BE  340D               	retlw	13
  4300  23BF  340A               	retlw	10
  4301  23C0  3420               	retlw	32	;' '
  4302  23C1  3420               	retlw	32	;' '
  4303  23C2  3420               	retlw	32	;' '
  4304  23C3  3444               	retlw	68	;'D'
  4305  23C4  3465               	retlw	101	;'e'
  4306  23C5  346D               	retlw	109	;'m'
  4307  23C6  346F               	retlw	111	;'o'
  4308  23C7  3420               	retlw	32	;' '
  4309  23C8  3449               	retlw	73	;'I'
  4310  23C9  346E               	retlw	110	;'n'
  4311  23CA  3473               	retlw	115	;'s'
  4312  23CB  3474               	retlw	116	;'t'
  4313  23CC  3472               	retlw	114	;'r'
  4314  23CD  3475               	retlw	117	;'u'
  4315  23CE  3463               	retlw	99	;'c'
  4316  23CF  3474               	retlw	116	;'t'
  4317  23D0  3469               	retlw	105	;'i'
  4318  23D1  346F               	retlw	111	;'o'
  4319  23D2  346E               	retlw	110	;'n'
  4320  23D3  343A               	retlw	58	;':'
  4321  23D4  3400               	retlw	0
  4322  23D5                     STR_43:	
  4323  23D5  3452               	retlw	82	;'R'
  4324  23D6  3442               	retlw	66	;'B'
  4325  23D7  3430               	retlw	48	;'0'
  4326  23D8  343A               	retlw	58	;':'
  4327  23D9  3425               	retlw	37	;'%'
  4328  23DA  3430               	retlw	48	;'0'
  4329  23DB  3432               	retlw	50	;'2'
  4330  23DC  3464               	retlw	100	;'d'
  4331  23DD  342D               	retlw	45	;'-'
  4332  23DE  3425               	retlw	37	;'%'
  4333  23DF  3430               	retlw	48	;'0'
  4334  23E0  3432               	retlw	50	;'2'
  4335  23E1  3478               	retlw	120	;'x'
  4336  23E2  3425               	retlw	37	;'%'
  4337  23E3  3430               	retlw	48	;'0'
  4338  23E4  3432               	retlw	50	;'2'
  4339  23E5  3478               	retlw	120	;'x'
  4340  23E6  3425               	retlw	37	;'%'
  4341  23E7  3430               	retlw	48	;'0'
  4342  23E8  3432               	retlw	50	;'2'
  4343  23E9  3478               	retlw	120	;'x'
  4344  23EA  3400               	retlw	0
  4345  23EB                     STR_45:	
  4346  23EB  3452               	retlw	82	;'R'
  4347  23EC  3465               	retlw	101	;'e'
  4348  23ED  3473               	retlw	115	;'s'
  4349  23EE  3474               	retlw	116	;'t'
  4350  23EF  346F               	retlw	111	;'o'
  4351  23F0  3472               	retlw	114	;'r'
  4352  23F1  3469               	retlw	105	;'i'
  4353  23F2  346E               	retlw	110	;'n'
  4354  23F3  3467               	retlw	103	;'g'
  4355  23F4  3420               	retlw	32	;' '
  4356  23F5  344E               	retlw	78	;'N'
  4357  23F6  3465               	retlw	101	;'e'
  4358  23F7  3474               	retlw	116	;'t'
  4359  23F8  3477               	retlw	119	;'w'
  4360  23F9  346F               	retlw	111	;'o'
  4361  23FA  3472               	retlw	114	;'r'
  4362  23FB  346B               	retlw	107	;'k'
  4363  23FC  3420               	retlw	32	;' '
  4364  23FD  3421               	retlw	33	;'!'
  4365  23FE  3421               	retlw	33	;'!'
  4366  23FF  3400               	retlw	0
  4367  2400                     STR_41:	
  4368  2400  340D               	retlw	13
  4369  2401  340A               	retlw	10
  4370  2402  3455               	retlw	85	;'U'
  4371  2403  346E               	retlw	110	;'n'
  4372  2404  3469               	retlw	105	;'i'
  4373  2405  3463               	retlw	99	;'c'
  4374  2406  3461               	retlw	97	;'a'
  4375  2407  3473               	retlw	115	;'s'
  4376  2408  3474               	retlw	116	;'t'
  4377  2409  3420               	retlw	32	;' '
  4378  240A  3446               	retlw	70	;'F'
  4379  240B  3461               	retlw	97	;'a'
  4380  240C  3469               	retlw	105	;'i'
  4381  240D  346C               	retlw	108	;'l'
  4382  240E  3465               	retlw	101	;'e'
  4383  240F  3464               	retlw	100	;'d'
  4384  2410  340D               	retlw	13
  4385  2411  340A               	retlw	10
  4386  2412  3400               	retlw	0
  4387  2413                     STR_3:	
  4388  2413  340D               	retlw	13
  4389  2414  340A               	retlw	10
  4390  2415  340D               	retlw	13
  4391  2416  340A               	retlw	10
  4392  2417  344D               	retlw	77	;'M'
  4393  2418  3479               	retlw	121	;'y'
  4394  2419  3420               	retlw	32	;' '
  4395  241A  3441               	retlw	65	;'A'
  4396  241B  3464               	retlw	100	;'d'
  4397  241C  3464               	retlw	100	;'d'
  4398  241D  3472               	retlw	114	;'r'
  4399  241E  3465               	retlw	101	;'e'
  4400  241F  3473               	retlw	115	;'s'
  4401  2420  3473               	retlw	115	;'s'
  4402  2421  343A               	retlw	58	;':'
  4403  2422  3420               	retlw	32	;' '
  4404  2423  3430               	retlw	48	;'0'
  4405  2424  3478               	retlw	120	;'x'
  4406  2425  3400               	retlw	0
  4407  2426                     STR_46:	
  4408  2426  3430               	retlw	48	;'0'
  4409  2427  3431               	retlw	49	;'1'
  4410  2428  3432               	retlw	50	;'2'
  4411  2429  3433               	retlw	51	;'3'
  4412  242A  3434               	retlw	52	;'4'
  4413  242B  3435               	retlw	53	;'5'
  4414  242C  3436               	retlw	54	;'6'
  4415  242D  3437               	retlw	55	;'7'
  4416  242E  3438               	retlw	56	;'8'
  4417  242F  3439               	retlw	57	;'9'
  4418  2430  3441               	retlw	65	;'A'
  4419  2431  3442               	retlw	66	;'B'
  4420  2432  3443               	retlw	67	;'C'
  4421  2433  3444               	retlw	68	;'D'
  4422  2434  3445               	retlw	69	;'E'
  4423  2435  3446               	retlw	70	;'F'
  4424  2436  3400               	retlw	0
  4425  2437                     STR_47:	
  4426  2437  3430               	retlw	48	;'0'
  4427  2438  3431               	retlw	49	;'1'
  4428  2439  3432               	retlw	50	;'2'
  4429  243A  3433               	retlw	51	;'3'
  4430  243B  3434               	retlw	52	;'4'
  4431  243C  3435               	retlw	53	;'5'
  4432  243D  3436               	retlw	54	;'6'
  4433  243E  3437               	retlw	55	;'7'
  4434  243F  3438               	retlw	56	;'8'
  4435  2440  3439               	retlw	57	;'9'
  4436  2441  3461               	retlw	97	;'a'
  4437  2442  3462               	retlw	98	;'b'
  4438  2443  3463               	retlw	99	;'c'
  4439  2444  3464               	retlw	100	;'d'
  4440  2445  3465               	retlw	101	;'e'
  4441  2446  3466               	retlw	102	;'f'
  4442  2447  3400               	retlw	0
  4443  2448                     STR_17:	
  4444  2448  3452               	retlw	82	;'R'
  4445  2449  3458               	retlw	88	;'X'
  4446  244A  3420               	retlw	32	;' '
  4447  244B  344D               	retlw	77	;'M'
  4448  244C  3465               	retlw	101	;'e'
  4449  244D  3473               	retlw	115	;'s'
  4450  244E  3473               	retlw	115	;'s'
  4451  244F  3461               	retlw	97	;'a'
  4452  2450  3467               	retlw	103	;'g'
  4453  2451  3465               	retlw	101	;'e'
  4454  2452  3473               	retlw	115	;'s'
  4455  2453  343A               	retlw	58	;':'
  4456  2454  3420               	retlw	32	;' '
  4457  2455  3425               	retlw	37	;'%'
  4458  2456  3433               	retlw	51	;'3'
  4459  2457  3464               	retlw	100	;'d'
  4460  2458  3400               	retlw	0
  4461  2459                     STR_16:	
  4462  2459  3454               	retlw	84	;'T'
  4463  245A  3458               	retlw	88	;'X'
  4464  245B  3420               	retlw	32	;' '
  4465  245C  344D               	retlw	77	;'M'
  4466  245D  3465               	retlw	101	;'e'
  4467  245E  3473               	retlw	115	;'s'
  4468  245F  3473               	retlw	115	;'s'
  4469  2460  3461               	retlw	97	;'a'
  4470  2461  3467               	retlw	103	;'g'
  4471  2462  3465               	retlw	101	;'e'
  4472  2463  3473               	retlw	115	;'s'
  4473  2464  343A               	retlw	58	;':'
  4474  2465  3420               	retlw	32	;' '
  4475  2466  3425               	retlw	37	;'%'
  4476  2467  3433               	retlw	51	;'3'
  4477  2468  3464               	retlw	100	;'d'
  4478  2469  3400               	retlw	0
  4479  246A                     STR_44:	
  4480  246A  3452               	retlw	82	;'R'
  4481  246B  3442               	retlw	66	;'B'
  4482  246C  3432               	retlw	50	;'2'
  4483  246D  343A               	retlw	58	;':'
  4484  246E  3420               	retlw	32	;' '
  4485  246F  3443               	retlw	67	;'C'
  4486  2470  3468               	retlw	104	;'h'
  4487  2471  346E               	retlw	110	;'n'
  4488  2472  3467               	retlw	103	;'g'
  4489  2473  3465               	retlw	101	;'e'
  4490  2474  3420               	retlw	32	;' '
  4491  2475  346E               	retlw	110	;'n'
  4492  2476  346F               	retlw	111	;'o'
  4493  2477  3464               	retlw	100	;'d'
  4494  2478  3465               	retlw	101	;'e'
  4495  2479  3400               	retlw	0
  4496  247A                     STR_42:	
  4497  247A  3420               	retlw	32	;' '
  4498  247B  3455               	retlw	85	;'U'
  4499  247C  346E               	retlw	110	;'n'
  4500  247D  3469               	retlw	105	;'i'
  4501  247E  3463               	retlw	99	;'c'
  4502  247F  3461               	retlw	97	;'a'
  4503  2480  3473               	retlw	115	;'s'
  4504  2481  3474               	retlw	116	;'t'
  4505  2482  3420               	retlw	32	;' '
  4506  2483  3446               	retlw	70	;'F'
  4507  2484  3461               	retlw	97	;'a'
  4508  2485  3469               	retlw	105	;'i'
  4509  2486  346C               	retlw	108	;'l'
  4510  2487  3465               	retlw	101	;'e'
  4511  2488  3464               	retlw	100	;'d'
  4512  2489  3400               	retlw	0
  4513  248A                     STR_7:	
  4514  248A  3420               	retlw	32	;' '
  4515  248B  3420               	retlw	32	;' '
  4516  248C  3420               	retlw	32	;' '
  4517  248D  3420               	retlw	32	;' '
  4518  248E  3420               	retlw	32	;' '
  4519  248F  3420               	retlw	32	;' '
  4520  2490  3420               	retlw	32	;' '
  4521  2491  3420               	retlw	32	;' '
  4522  2492  3420               	retlw	32	;' '
  4523  2493  3420               	retlw	32	;' '
  4524  2494  3420               	retlw	32	;' '
  4525  2495  3420               	retlw	32	;' '
  4526  2496  3420               	retlw	32	;' '
  4527  2497  3400               	retlw	0
  4528  2498                     STR_5:	
  4529  2498  3420               	retlw	32	;' '
  4530  2499  3420               	retlw	32	;' '
  4531  249A  3443               	retlw	67	;'C'
  4532  249B  3468               	retlw	104	;'h'
  4533  249C  3461               	retlw	97	;'a'
  4534  249D  346E               	retlw	110	;'n'
  4535  249E  346E               	retlw	110	;'n'
  4536  249F  3465               	retlw	101	;'e'
  4537  24A0  346C               	retlw	108	;'l'
  4538  24A1  343A               	retlw	58	;':'
  4539  24A2  3420               	retlw	32	;' '
  4540  24A3  3400               	retlw	0
  4541  24A4                     STR_4:	
  4542  24A4  3420               	retlw	32	;' '
  4543  24A5  3420               	retlw	32	;' '
  4544  24A6  3450               	retlw	80	;'P'
  4545  24A7  3441               	retlw	65	;'A'
  4546  24A8  344E               	retlw	78	;'N'
  4547  24A9  3449               	retlw	73	;'I'
  4548  24AA  3444               	retlw	68	;'D'
  4549  24AB  343A               	retlw	58	;':'
  4550  24AC  3420               	retlw	32	;' '
  4551  24AD  3430               	retlw	48	;'0'
  4552  24AE  3478               	retlw	120	;'x'
  4553  24AF  3400               	retlw	0
  4554  24B0                     STR_2:	
  4555  24B0  3420               	retlw	32	;' '
  4556  24B1  3443               	retlw	67	;'C'
  4557  24B2  3468               	retlw	104	;'h'
  4558  24B3  3461               	retlw	97	;'a'
  4559  24B4  346E               	retlw	110	;'n'
  4560  24B5  346E               	retlw	110	;'n'
  4561  24B6  3465               	retlw	101	;'e'
  4562  24B7  346C               	retlw	108	;'l'
  4563  24B8  343A               	retlw	58	;':'
  4564  24B9  3400               	retlw	0
  4565  24BA                     STR_34:	
  4566  24BA  3453               	retlw	83	;'S'
  4567  24BB  3465               	retlw	101	;'e'
  4568  24BC  3463               	retlw	99	;'c'
  4569  24BD  3475               	retlw	117	;'u'
  4570  24BE  3472               	retlw	114	;'r'
  4571  24BF  3465               	retlw	101	;'e'
  4572  24C0  3464               	retlw	100	;'d'
  4573  24C1  3420               	retlw	32	;' '
  4574  24C2  3400               	retlw	0
  4575  24C3                     STR_1:	
  4576  24C3  340D               	retlw	13
  4577  24C4  340A               	retlw	10
  4578  24C5  3450               	retlw	80	;'P'
  4579  24C6  3441               	retlw	65	;'A'
  4580  24C7  344E               	retlw	78	;'N'
  4581  24C8  3449               	retlw	73	;'I'
  4582  24C9  3444               	retlw	68	;'D'
  4583  24CA  343A               	retlw	58	;':'
  4584  24CB  3400               	retlw	0
  4585  24CC                     STR_37:	
  4586  24CC  3420               	retlw	32	;' '
  4587  24CD  3466               	retlw	102	;'f'
  4588  24CE  3472               	retlw	114	;'r'
  4589  24CF  346F               	retlw	111	;'o'
  4590  24D0  346D               	retlw	109	;'m'
  4591  24D1  3420               	retlw	32	;' '
  4592  24D2  3400               	retlw	0
  4593  24D3                     STR_27:	
  4594  24D3  340D               	retlw	13
  4595  24D4  340A               	retlw	10
  4596  24D5  340D               	retlw	13
  4597  24D6  340A               	retlw	10
  4598  24D7  3400               	retlw	0
  4599  24D5                     
  4600                           ; #config settings
  4601  0000                     
  4602                           	psect	bssCOMMON
  4603  007C                     __pbssCOMMON:	
  4604  007C                     _timerExtension1:	
  4605  007C                     	ds	1
  4606  007D                     _timerExtension2:	
  4607  007D                     	ds	1
  4608                           
  4609                           	psect	bssBANK0
  4610  005E                     __pbssBANK0:	
  4611  005E                     _MRF24J40Status:	
  4612  005E                     	ds	1
  4613  005F                     _MAC_PANID:	
  4614  005F                     	ds	2
  4615  0061                     _myNetworkAddress:	
  4616  0061                     	ds	2
  4617  0063                     _nvmConnectionTable:	
  4618  0063                     	ds	2
  4619  0065                     _conn_size:	
  4620  0065                     	ds	1
  4621                           
  4622                           	psect	dataBANK0
  4623  0066                     __pdataBANK0:	
  4624  0066                     _BankIndex:	
  4625  0066                     	ds	1
  4626                           
  4627                           	psect	bssBANK1
  4628  00C7                     __pbssBANK1:	
  4629  00C7                     _MACRxPacket:	
  4630  00C7                     	ds	11
  4631  00D2                     _IEEESeqNum:	
  4632  00D2                     	ds	1
  4633  00D3                     _LatestConnection:	
  4634  00D3                     	ds	1
  4635  00D4                     _MACCurrentChannel:	
  4636  00D4                     	ds	1
  4637  00D5                     _MyindexinPC:	
  4638  00D5                     	ds	1
  4639  00D6                     _P2PCapacityInfo:	
  4640  00D6                     	ds	1
  4641  00D7                     _P2PStatus:	
  4642  00D7                     	ds	1
  4643  00D8                     _PUSH_BUTTON_pressed:	
  4644  00D8                     	ds	1
  4645  00D9                     _RxNum:	
  4646  00D9                     	ds	1
  4647  00DA                     _TxData:	
  4648  00DA                     	ds	1
  4649  00DB                     _TxNum:	
  4650  00DB                     	ds	1
  4651  00DC                     _TxSynCount:	
  4652  00DC                     	ds	1
  4653  00DD                     _TxSynCount2:	
  4654  00DD                     	ds	1
  4655  00DE                     _i:	
  4656  00DE                     	ds	1
  4657  00DF                     _temp_bit:	
  4658  00DF                     	ds	1
  4659  00E0                     _myPANID:	
  4660  00E0                     	ds	2
  4661  00E2                     _nvmConnMode:	
  4662  00E2                     	ds	2
  4663  00E4                     _nvmCurrentChannel:	
  4664  00E4                     	ds	2
  4665  00E6                     _nvmMyPANID:	
  4666  00E6                     	ds	2
  4667  00E8                     _currentChannel:	
  4668  00E8                     	ds	1
  4669                           
  4670                           	psect	dataBANK1
  4671  00E9                     __pdataBANK1:	
  4672  00E9                     _AdditionalNodeID:	
  4673  00E9                     	ds	1
  4674  00EA                     _chk_sel_status:	
  4675  00EA                     	ds	1
  4676  00EB                     _ConnMode:	
  4677  00EB                     	ds	1
  4678                           
  4679                           	psect	bssBANK2
  4680  0120                     __pbssBANK2:	
  4681  0120                     _rxMessage:	
  4682  0120                     	ds	10
  4683  012A                     _PUSH_BUTTON_press_time:	
  4684  012A                     	ds	4
  4685  012E                     _nvmDelayTick:	
  4686  012E                     	ds	4
  4687  0132                     _MACInitParams:	
  4688  0132                     	ds	2
  4689  0134                     _failureCounter:	
  4690  0134                     	ds	2
  4691  0136                     _nextEEPosition:	
  4692  0136                     	ds	2
  4693  0138                     _nvmEdc:	
  4694  0138                     	ds	2
  4695  013A                     _nvmOutFrameCounter:	
  4696  013A                     	ds	2
  4697                           
  4698                           	psect	dataBANK2
  4699  013C                     __pdataBANK2:	
  4700  013C                     _CharacterArray:	
  4701  013C                     	ds	16
  4702  014C                     _myLongAddress:	
  4703  014C                     	ds	8
  4704                           
  4705                           	psect	bssBANK3
  4706  01A0                     __pbssBANK3:	
  4707  01A0                     _ConnectionTable:	
  4708  01A0                     	ds	50
  4709                           
  4710                           	psect	bssBANK4
  4711  0220                     __pbssBANK4:	
  4712  0220                     _TxBuffer:	
  4713  0220                     	ds	40
  4714  0248                     _LCDText:	
  4715  0248                     	ds	33
  4716                           
  4717                           	psect	inittext
  4718  2745                     init_ram:	
  4719  2745  00FE               	movwf	126
  4720  2746                     initloop:	
  4721  2746  0012               	moviw fsr0++
  4722  2747  001E               	movwi fsr1++
  4723  2748  3001               	movlw	1
  4724  2749  02FE               	subwf	126,f
  4725  274A  3000               	movlw	0
  4726  274B  3BFF               	subwfb	127,f
  4727  274C  087F               	movf	127,w
  4728  274D  047E               	iorwf	126,w
  4729  274E  1903               	btfsc	3,2
  4730  274F  3400               	retlw	0
  4731  2750  2F46               	goto	initloop
  4732                           
  4733                           	psect	clrtext
  4734  2739                     clear_ram0:	
  4735                           ;	Called with FSR0 containing the base address, and
  4736                           ;	btemp/btemp+1 has the size to clear
  4737                           
  4738  2739  0064               	clrwdt	;clear the watchdog before getting into this loop
  4739  273A                     clrloop0:	
  4740  273A  3001               	movlw	1
  4741  273B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4742  273C  3101               	addfsr 0,1
  4743  273D  02FE               	subwf	126,f
  4744  273E  3000               	movlw	0
  4745  273F  3BFF               	subwfb	127,f
  4746  2740  087F               	movf	127,w
  4747  2741  047E               	iorwf	126,w
  4748  2742  1903               	btfsc	3,2
  4749  2743  3400               	retlw	0	;all done for this memory range, return
  4750  2744  2F3A               	goto	clrloop0	;have we reached the end yet?
  4751                           
  4752                           	psect	cstackBANK2
  4753  0154                     __pcstackBANK2:	
  4754  0154                     MiApp_EstablishConnection@tmpConnectionMode:	
  4755  0154                     _run_p2p_demo$2996:	
  4756                           ; 1 bytes @ 0x0
  4757                           
  4758                           
  4759                           ; 2 bytes @ 0x0
  4760  0154                     	ds	1
  4761  0155                     MiApp_EstablishConnection@retry:	
  4762                           
  4763                           ; 1 bytes @ 0x1
  4764  0155                     	ds	1
  4765  0156                     _run_p2p_demo$2997:	
  4766  0156                     MiApp_EstablishConnection@t1:	
  4767                           ; 2 bytes @ 0x2
  4768                           
  4769                           
  4770                           ; 4 bytes @ 0x2
  4771  0156                     	ds	2
  4772  0158                     _run_p2p_demo$2998:	
  4773                           
  4774                           ; 2 bytes @ 0x4
  4775  0158                     	ds	2
  4776  015A                     MiApp_EstablishConnection@connectionInterval:	
  4777  015A                     run_p2p_demo@PressedButton:	
  4778                           ; 1 bytes @ 0x6
  4779                           
  4780                           
  4781                           ; 1 bytes @ 0x6
  4782  015A                     	ds	1
  4783  015B                     run_p2p_demo@update_ed:	
  4784  015B                     MiApp_EstablishConnection@t2:	
  4785                           ; 1 bytes @ 0x7
  4786                           
  4787                           
  4788                           ; 4 bytes @ 0x7
  4789  015B                     	ds	1
  4790  015C                     run_p2p_demo@switch_val:	
  4791                           
  4792                           ; 1 bytes @ 0x8
  4793  015C                     	ds	1
  4794  015D                     run_p2p_demo@select_ed:	
  4795                           
  4796                           ; 1 bytes @ 0x9
  4797  015D                     	ds	2
  4798  015F                     MiApp_EstablishConnection@i:	
  4799                           
  4800                           ; 1 bytes @ 0xB
  4801  015F                     	ds	1
  4802                           
  4803                           	psect	cstackBANK1
  4804  00A0                     __pcstackBANK1:	
  4805  00A0                     ??_freezer_feature:	
  4806  00A0                     MiMAC_SendPacket@t1:	
  4807                           ; 1 bytes @ 0x0
  4808                           
  4809                           
  4810                           ; 4 bytes @ 0x0
  4811  00A0                     	ds	4
  4812  00A4                     MiMAC_SendPacket@t2:	
  4813  00A4                     freezer_feature@tick1:	
  4814                           ; 4 bytes @ 0x4
  4815                           
  4816                           
  4817                           ; 4 bytes @ 0x4
  4818  00A4                     	ds	4
  4819  00A8                     MiMAC_SendPacket@IntraPAN:	
  4820  00A8                     freezer_feature@tick2:	
  4821                           ; 1 bytes @ 0x8
  4822                           
  4823                           
  4824                           ; 4 bytes @ 0x8
  4825  00A8                     	ds	1
  4826  00A9                     MiMAC_SendPacket@frameControl:	
  4827                           
  4828                           ; 1 bytes @ 0x9
  4829  00A9                     	ds	1
  4830  00AA                     MiMAC_SendPacket@headerLength:	
  4831                           
  4832                           ; 1 bytes @ 0xA
  4833  00AA                     	ds	1
  4834  00AB                     MiMAC_SendPacket@i:	
  4835                           
  4836                           ; 1 bytes @ 0xB
  4837  00AB                     	ds	1
  4838  00AC                     MiMAC_SendPacket@loc:	
  4839  00AC                     freezer_feature@switch_val:	
  4840                           ; 1 bytes @ 0xC
  4841                           
  4842                           
  4843                           ; 1 bytes @ 0xC
  4844  00AC                     	ds	1
  4845  00AD                     SendPacket@status:	
  4846                           
  4847                           ; 1 bytes @ 0xD
  4848  00AD                     	ds	1
  4849  00AE                     SendPacket@Broadcast:	
  4850                           
  4851                           ; 1 bytes @ 0xE
  4852  00AE                     	ds	1
  4853  00AF                     SendPacket@tParam:	
  4854                           
  4855                           ; 7 bytes @ 0xF
  4856  00AF                     	ds	7
  4857  00B6                     ?_MiApp_UnicastAddress:	
  4858  00B6                     MiApp_UnicastAddress@PermanentAddr:	
  4859                           ; 1 bytes @ 0x16
  4860                           
  4861  00B6                     P2PTasks@tmpTick:	
  4862                           ; 1 bytes @ 0x16
  4863                           
  4864                           
  4865                           ; 4 bytes @ 0x16
  4866  00B6                     	ds	1
  4867  00B7                     MiApp_UnicastAddress@SecEn:	
  4868                           
  4869                           ; 1 bytes @ 0x17
  4870  00B7                     	ds	1
  4871  00B8                     ?_MiApp_UnicastConnection:	
  4872  00B8                     MiApp_UnicastConnection@SecEn:	
  4873                           ; 1 bytes @ 0x18
  4874                           
  4875                           
  4876                           ; 1 bytes @ 0x18
  4877  00B8                     	ds	2
  4878  00BA                     P2PTasks@tmp:	
  4879                           
  4880                           ; 2 bytes @ 0x1A
  4881  00BA                     	ds	2
  4882  00BC                     P2PTasks@status:	
  4883                           
  4884                           ; 1 bytes @ 0x1C
  4885  00BC                     	ds	1
  4886  00BD                     P2PTasks@i:	
  4887                           
  4888                           ; 1 bytes @ 0x1D
  4889  00BD                     	ds	1
  4890  00BE                     ??_MiApp_MessageAvailable:	
  4891                           
  4892                           ; 1 bytes @ 0x1E
  4893  00BE                     	ds	1
  4894  00BF                     ?_MiApp_EstablishConnection:	
  4895  00BF                     ??_run_p2p_demo:	
  4896                           ; 1 bytes @ 0x1F
  4897                           
  4898  00BF                     MiApp_EstablishConnection@Mode:	
  4899                           ; 1 bytes @ 0x1F
  4900                           
  4901                           
  4902                           ; 1 bytes @ 0x1F
  4903  00BF                     	ds	1
  4904  00C0                     ??_MiApp_EstablishConnection:	
  4905                           
  4906                           ; 1 bytes @ 0x20
  4907  00C0                     	ds	4
  4908  00C4                     Initialize_Demo@freezer_enable:	
  4909                           
  4910                           ; 1 bytes @ 0x24
  4911  00C4                     	ds	1
  4912  00C5                     Initialize_Demo@i:	
  4913                           
  4914                           ; 1 bytes @ 0x25
  4915  00C5                     	ds	1
  4916  00C6                     main@freezer_enable:	
  4917                           
  4918                           ; 1 bytes @ 0x26
  4919  00C6                     	ds	1
  4920                           
  4921                           	psect	cstackCOMMON
  4922  0070                     __pcstackCOMMON:	
  4923  0070                     ?_isdigit:	
  4924  0070                     ?_SPIPut:	
  4925                           ; 1 bit 
  4926                           
  4927  0070                     ?_SPIGet:	
  4928                           ; 1 bytes @ 0x0
  4929                           
  4930  0070                     ?_MiMAC_DiscardPacket:	
  4931                           ; 1 bytes @ 0x0
  4932                           
  4933  0070                     ?_UserInterruptHandler:	
  4934                           ; 1 bytes @ 0x0
  4935                           
  4936  0070                     ??_UserInterruptHandler:	
  4937                           ; 1 bytes @ 0x0
  4938                           
  4939  0070                     ?_MacroNop:	
  4940                           ; 1 bytes @ 0x0
  4941                           
  4942  0070                     ?_AddConnection:	
  4943                           ; 1 bytes @ 0x0
  4944                           
  4945  0070                     ?_InitSymbolTimer:	
  4946                           ; 1 bytes @ 0x0
  4947                           
  4948  0070                     ?_CONSOLE_PrintHex:	
  4949                           ; 1 bytes @ 0x0
  4950                           
  4951  0070                     ?_MiApp_SetChannel:	
  4952                           ; 1 bytes @ 0x0
  4953                           
  4954  0070                     ?_MiApp_MessageAvailable:	
  4955                           ; 1 bytes @ 0x0
  4956                           
  4957  0070                     ?_MiApp_DiscardMessage:	
  4958                           ; 1 bytes @ 0x0
  4959                           
  4960  0070                     ?_CONSOLE_PrintDec:	
  4961                           ; 1 bytes @ 0x0
  4962                           
  4963  0070                     ?_CONSOLE_Put:	
  4964                           ; 1 bytes @ 0x0
  4965                           
  4966  0070                     ?_freezer_feature:	
  4967                           ; 1 bytes @ 0x0
  4968                           
  4969  0070                     ?_Initialize_Demo:	
  4970                           ; 1 bytes @ 0x0
  4971                           
  4972  0070                     ?_Run_Demo:	
  4973                           ; 1 bytes @ 0x0
  4974                           
  4975  0070                     ?_PHYGetShortRAMAddr:	
  4976                           ; 1 bytes @ 0x0
  4977                           
  4978  0070                     ?_InitMRF24J40:	
  4979                           ; 1 bytes @ 0x0
  4980                           
  4981  0070                     ?_MiMAC_ReceivedPacket:	
  4982                           ; 1 bytes @ 0x0
  4983                           
  4984  0070                     ?_high_isr:	
  4985                           ; 1 bytes @ 0x0
  4986                           
  4987  0070                     ?_NVMInit:	
  4988                           ; 1 bytes @ 0x0
  4989                           
  4990  0070                     ?_Total_Connections:	
  4991                           ; 1 bytes @ 0x0
  4992                           
  4993  0070                     ?_P2PTasks:	
  4994                           ; 1 bytes @ 0x0
  4995                           
  4996  0070                     ?_MiApp_ProtocolInit:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0070                     ?_MiApp_BroadcastPacket:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0070                     ?_DumpConnection:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0070                     ?_MiApp_ConnectionMode:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0070                     ?_CONSOLE_Initialize:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0070                     ?_LCDInitSPI:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0070                     ?_LCDInitPortA:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0070                     ?_LCDInitPortB:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0070                     ?_LCDWritePortA:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0070                     ?_LCDWritePortB:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0070                     ?_LCDInitWrite:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0070                     ?_LCD_i_write:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0070                     ?_LCD_d_write:	
  5033                           ; 1 bytes @ 0x0
  5034                           
  5035  0070                     ?_LCD_Initialize:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0070                     ?_LCD_Update:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0070                     ?_LCD_Erase:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0070                     ?_SYSTEM_Initialize:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0070                     ?_DemoOutput_Greeting:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0070                     ?_DemoOutput_Instruction:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0070                     ?_DemoOutput_HandleMessage:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0070                     ?_DemoOutput_ChannelError:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0070                     ?_DemoOutput_UnicastFail:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0070                     ?_ButtonPressed:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0070                     ?_main:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ?_Process_RxMessage:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ?_run_p2p_demo:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ?i1_PHYGetShortRAMAddr:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ?i1_SPIPut:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ??i1_SPIPut:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ?i1_SPIGet:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ?i1___wmul:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0070                     MiApp_EstablishConnection@ActiveScanIndex:	
  5090                           ; 2 bytes @ 0x0
  5091                           
  5092  0070                     i1SPIPut@v:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     i1___wmul@multiplier:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098                           
  5099                           ; 2 bytes @ 0x0
  5100  0070                     	ds	1
  5101  0071                     ?i1_PHYSetShortRAMAddr:	
  5102  0071                     ??i1_PHYGetShortRAMAddr:	
  5103                           ; 1 bytes @ 0x1
  5104                           
  5105  0071                     ?i1_PHYGetLongRAMAddr:	
  5106                           ; 1 bytes @ 0x1
  5107                           
  5108  0071                     ??i1_SPIGet:	
  5109                           ; 1 bytes @ 0x1
  5110                           
  5111  0071                     i1PHYSetShortRAMAddr@value:	
  5112                           ; 1 bytes @ 0x1
  5113                           
  5114  0071                     i1PHYGetShortRAMAddr@address:	
  5115                           ; 1 bytes @ 0x1
  5116                           
  5117  0071                     i1PHYGetLongRAMAddr@address:	
  5118                           ; 1 bytes @ 0x1
  5119                           
  5120                           
  5121                           ; 2 bytes @ 0x1
  5122  0071                     	ds	1
  5123  0072                     ??i1_PHYSetShortRAMAddr:	
  5124  0072                     i1PHYSetShortRAMAddr@address:	
  5125                           ; 1 bytes @ 0x2
  5126                           
  5127  0072                     i1PHYGetShortRAMAddr@toReturn:	
  5128                           ; 1 bytes @ 0x2
  5129                           
  5130  0072                     i1___wmul@multiplicand:	
  5131                           ; 1 bytes @ 0x2
  5132                           
  5133                           
  5134                           ; 2 bytes @ 0x2
  5135  0072                     	ds	1
  5136  0073                     ??i1_PHYGetLongRAMAddr:	
  5137  0073                     i1PHYSetShortRAMAddr@tmpRFIE:	
  5138                           ; 1 bytes @ 0x3
  5139                           
  5140  0073                     i1PHYGetShortRAMAddr@tmpRFIE:	
  5141                           ; 1 bytes @ 0x3
  5142                           
  5143                           
  5144                           ; 1 bytes @ 0x3
  5145  0073                     	ds	1
  5146  0074                     ??i1___wmul:	
  5147  0074                     i1___wmul@product:	
  5148                           ; 1 bytes @ 0x4
  5149                           
  5150                           
  5151                           ; 2 bytes @ 0x4
  5152  0074                     	ds	1
  5153  0075                     i1PHYGetLongRAMAddr@toReturn:	
  5154                           
  5155                           ; 1 bytes @ 0x5
  5156  0075                     	ds	1
  5157  0076                     i1PHYGetLongRAMAddr@tmpRFIE:	
  5158                           
  5159                           ; 1 bytes @ 0x6
  5160  0076                     	ds	1
  5161  0077                     high_isr@results:	
  5162                           
  5163                           ; 1 bytes @ 0x7
  5164  0077                     	ds	1
  5165  0078                     high_isr@flags:	
  5166                           
  5167                           ; 2 bytes @ 0x8
  5168  0078                     	ds	2
  5169  007A                     high_isr@RxBank:	
  5170                           
  5171                           ; 1 bytes @ 0xA
  5172  007A                     	ds	1
  5173  007B                     high_isr@i:	
  5174                           
  5175                           ; 1 bytes @ 0xB
  5176  007B                     	ds	1
  5177                           
  5178                           	psect	cstackBANK0
  5179  0020                     __pcstackBANK0:	
  5180  0020                     ??_high_isr:	
  5181                           
  5182                           ; 1 bytes @ 0x0
  5183  0020                     	ds	9
  5184  0029                     ??_SPIPut:	
  5185  0029                     ??_MacroNop:	
  5186                           ; 1 bytes @ 0x9
  5187                           
  5188  0029                     ??_InitSymbolTimer:	
  5189                           ; 1 bytes @ 0x9
  5190                           
  5191  0029                     ??_CONSOLE_Put:	
  5192                           ; 1 bytes @ 0x9
  5193                           
  5194  0029                     ?_memset:	
  5195                           ; 1 bytes @ 0x9
  5196                           
  5197  0029                     ??_isdigit:	
  5198                           ; 1 bytes @ 0x9
  5199                           
  5200  0029                     ?_NVMRead:	
  5201                           ; 1 bytes @ 0x9
  5202                           
  5203  0029                     ?_NVMalloc:	
  5204                           ; 1 bytes @ 0x9
  5205                           
  5206  0029                     ??_CONSOLE_Initialize:	
  5207                           ; 1 bytes @ 0x9
  5208                           
  5209  0029                     ??_LCDInitSPI:	
  5210                           ; 1 bytes @ 0x9
  5211                           
  5212  0029                     ??_DemoOutput_Instruction:	
  5213                           ; 1 bytes @ 0x9
  5214                           
  5215  0029                     ?___bmul:	
  5216                           ; 1 bytes @ 0x9
  5217                           
  5218  0029                     ?___lbmod:	
  5219                           ; 1 bytes @ 0x9
  5220                           
  5221  0029                     ?___lwdiv:	
  5222                           ; 1 bytes @ 0x9
  5223                           
  5224  0029                     ?_MiWi_TickGet:	
  5225                           ; 2 bytes @ 0x9
  5226                           
  5227  0029                     ?___lmul:	
  5228                           ; 4 bytes @ 0x9
  5229                           
  5230  0029                     CONSOLE_Put@c:	
  5231                           ; 4 bytes @ 0x9
  5232                           
  5233  0029                     SPIPut@v:	
  5234                           ; 1 bytes @ 0x9
  5235                           
  5236  0029                     ___bmul@multiplicand:	
  5237                           ; 1 bytes @ 0x9
  5238                           
  5239  0029                     _isdigit$2640:	
  5240                           ; 1 bytes @ 0x9
  5241                           
  5242  0029                     ___lbmod@divisor:	
  5243                           ; 1 bytes @ 0x9
  5244                           
  5245  0029                     NVMRead@dest:	
  5246                           ; 1 bytes @ 0x9
  5247                           
  5248  0029                     NVMalloc@size:	
  5249                           ; 2 bytes @ 0x9
  5250                           
  5251  0029                     ___lwdiv@divisor:	
  5252                           ; 2 bytes @ 0x9
  5253                           
  5254  0029                     memset@c:	
  5255                           ; 2 bytes @ 0x9
  5256                           
  5257  0029                     ___lmul@multiplier:	
  5258                           ; 2 bytes @ 0x9
  5259                           
  5260                           
  5261                           ; 4 bytes @ 0x9
  5262  0029                     	ds	1
  5263  002A                     ??_SPIGet:	
  5264  002A                     ?_EEPROM_Read:	
  5265                           ; 1 bytes @ 0xA
  5266                           
  5267  002A                     ?_CONSOLE_PutString:	
  5268                           ; 1 bytes @ 0xA
  5269                           
  5270  002A                     ??_CONSOLE_PrintHex:	
  5271                           ; 1 bytes @ 0xA
  5272                           
  5273  002A                     ?_PHYSetLongRAMAddr:	
  5274                           ; 1 bytes @ 0xA
  5275                           
  5276  002A                     ?_PHYSetShortRAMAddr:	
  5277                           ; 1 bytes @ 0xA
  5278                           
  5279  002A                     ??_PHYGetShortRAMAddr:	
  5280                           ; 1 bytes @ 0xA
  5281                           
  5282  002A                     ?_PHYGetLongRAMAddr:	
  5283                           ; 1 bytes @ 0xA
  5284                           
  5285  002A                     ??_LCDInitPortA:	
  5286                           ; 1 bytes @ 0xA
  5287                           
  5288  002A                     ??_LCDInitPortB:	
  5289                           ; 1 bytes @ 0xA
  5290                           
  5291  002A                     ??_LCDWritePortA:	
  5292                           ; 1 bytes @ 0xA
  5293                           
  5294  002A                     ??_LCDWritePortB:	
  5295                           ; 1 bytes @ 0xA
  5296                           
  5297  002A                     ??___bmul:	
  5298                           ; 1 bytes @ 0xA
  5299                           
  5300  002A                     ??___lbmod:	
  5301                           ; 1 bytes @ 0xA
  5302                           
  5303  002A                     PHYSetShortRAMAddr@value:	
  5304                           ; 1 bytes @ 0xA
  5305                           
  5306  002A                     PHYGetShortRAMAddr@address:	
  5307                           ; 1 bytes @ 0xA
  5308                           
  5309  002A                     CONSOLE_PrintHex@PRINT_VAR:	
  5310                           ; 1 bytes @ 0xA
  5311                           
  5312  002A                     EEPROM_Read@addr:	
  5313                           ; 1 bytes @ 0xA
  5314                           
  5315  002A                     LCDInitPortA@preRFIE:	
  5316                           ; 1 bytes @ 0xA
  5317                           
  5318  002A                     LCDInitPortB@preRFIE:	
  5319                           ; 1 bytes @ 0xA
  5320                           
  5321  002A                     LCDWritePortA@v:	
  5322                           ; 1 bytes @ 0xA
  5323                           
  5324  002A                     LCDWritePortB@v:	
  5325                           ; 1 bytes @ 0xA
  5326                           
  5327  002A                     ___bmul@product:	
  5328                           ; 1 bytes @ 0xA
  5329                           
  5330  002A                     isdigit@c:	
  5331                           ; 1 bytes @ 0xA
  5332                           
  5333  002A                     PHYSetLongRAMAddr@address:	
  5334                           ; 1 bytes @ 0xA
  5335                           
  5336  002A                     PHYGetLongRAMAddr@address:	
  5337                           ; 2 bytes @ 0xA
  5338                           
  5339  002A                     CONSOLE_PutString@str:	
  5340                           ; 2 bytes @ 0xA
  5341                           
  5342                           
  5343                           ; 2 bytes @ 0xA
  5344  002A                     	ds	1
  5345  002B                     ??_PHYSetShortRAMAddr:	
  5346  002B                     PHYSetShortRAMAddr@address:	
  5347                           ; 1 bytes @ 0xB
  5348                           
  5349  002B                     PHYGetShortRAMAddr@toReturn:	
  5350                           ; 1 bytes @ 0xB
  5351                           
  5352  002B                     CONSOLE_PrintHex@toPrint:	
  5353                           ; 1 bytes @ 0xB
  5354                           
  5355  002B                     EEPROM_Read@count:	
  5356                           ; 1 bytes @ 0xB
  5357                           
  5358  002B                     LCDWritePortA@preRFIE:	
  5359                           ; 1 bytes @ 0xB
  5360                           
  5361  002B                     LCDWritePortB@preRFIE:	
  5362                           ; 1 bytes @ 0xB
  5363                           
  5364  002B                     ___bmul@multiplier:	
  5365                           ; 1 bytes @ 0xB
  5366                           
  5367  002B                     ___lbmod@dividend:	
  5368                           ; 1 bytes @ 0xB
  5369                           
  5370  002B                     NVMRead@addr:	
  5371                           ; 1 bytes @ 0xB
  5372                           
  5373  002B                     NVMalloc@location:	
  5374                           ; 2 bytes @ 0xB
  5375                           
  5376  002B                     ___lwdiv@dividend:	
  5377                           ; 2 bytes @ 0xB
  5378                           
  5379  002B                     memset@n:	
  5380                           ; 2 bytes @ 0xB
  5381                           
  5382                           
  5383                           ; 2 bytes @ 0xB
  5384  002B                     	ds	1
  5385  002C                     ?_isSameAddress:	
  5386  002C                     ??_EEPROM_Read:	
  5387                           ; 1 bytes @ 0xC
  5388                           
  5389  002C                     ??_CONSOLE_PutString:	
  5390                           ; 1 bytes @ 0xC
  5391                           
  5392  002C                     ??_PHYGetLongRAMAddr:	
  5393                           ; 1 bytes @ 0xC
  5394                           
  5395  002C                     ??_Total_Connections:	
  5396                           ; 1 bytes @ 0xC
  5397                           
  5398  002C                     ??_LCDInitWrite:	
  5399                           ; 1 bytes @ 0xC
  5400                           
  5401  002C                     PHYSetLongRAMAddr@value:	
  5402                           ; 1 bytes @ 0xC
  5403                           
  5404  002C                     PHYSetShortRAMAddr@tmpRFIE:	
  5405                           ; 1 bytes @ 0xC
  5406                           
  5407  002C                     PHYGetShortRAMAddr@tmpRFIE:	
  5408                           ; 1 bytes @ 0xC
  5409                           
  5410  002C                     Total_Connections@count:	
  5411                           ; 1 bytes @ 0xC
  5412                           
  5413  002C                     EEPROM_Read@dest:	
  5414                           ; 1 bytes @ 0xC
  5415                           
  5416  002C                     LCDInitWrite@v:	
  5417                           ; 1 bytes @ 0xC
  5418                           
  5419  002C                     ___lbmod@counter:	
  5420                           ; 1 bytes @ 0xC
  5421                           
  5422  002C                     isSameAddress@Address1:	
  5423                           ; 1 bytes @ 0xC
  5424                           
  5425                           
  5426                           ; 2 bytes @ 0xC
  5427  002C                     	ds	1
  5428  002D                     ??_MiWi_TickGet:	
  5429  002D                     ?_MiMAC_SetAltAddress:	
  5430                           ; 1 bytes @ 0xD
  5431                           
  5432  002D                     ??_memset:	
  5433                           ; 1 bytes @ 0xD
  5434                           
  5435  002D                     ??_PHYSetLongRAMAddr:	
  5436                           ; 1 bytes @ 0xD
  5437                           
  5438  002D                     ??_NVMalloc:	
  5439                           ; 1 bytes @ 0xD
  5440                           
  5441  002D                     ??___lwdiv:	
  5442                           ; 1 bytes @ 0xD
  5443                           
  5444  002D                     MiMAC_SetAltAddress@PANID:	
  5445                           ; 1 bytes @ 0xD
  5446                           
  5447  002D                     Total_Connections@i:	
  5448                           ; 1 bytes @ 0xD
  5449                           
  5450  002D                     MiWi_TickGet@IntFlag2:	
  5451                           ; 1 bytes @ 0xD
  5452                           
  5453  002D                     ___lbmod@rem:	
  5454                           ; 1 bytes @ 0xD
  5455                           
  5456  002D                     ___lwdiv@counter:	
  5457                           ; 1 bytes @ 0xD
  5458                           
  5459  002D                     memset@p1:	
  5460                           ; 1 bytes @ 0xD
  5461                           
  5462  002D                     NVMRead@count:	
  5463                           ; 1 bytes @ 0xD
  5464                           
  5465  002D                     ___lmul@multiplicand:	
  5466                           ; 2 bytes @ 0xD
  5467                           
  5468                           
  5469                           ; 4 bytes @ 0xD
  5470  002D                     	ds	1
  5471  002E                     ??_MiMAC_SetAltAddress:	
  5472  002E                     ?___lbdiv:	
  5473                           ; 1 bytes @ 0xE
  5474                           
  5475  002E                     ?___wmul:	
  5476                           ; 1 bytes @ 0xE
  5477                           
  5478  002E                     PHYGetLongRAMAddr@toReturn:	
  5479                           ; 2 bytes @ 0xE
  5480                           
  5481  002E                     MiMAC_SetAltAddress@Address:	
  5482                           ; 1 bytes @ 0xE
  5483                           
  5484  002E                     isSameAddress@Address2:	
  5485                           ; 1 bytes @ 0xE
  5486                           
  5487  002E                     CONSOLE_PutString@c:	
  5488                           ; 1 bytes @ 0xE
  5489                           
  5490  002E                     MiWi_TickGet@IntFlag1:	
  5491                           ; 1 bytes @ 0xE
  5492                           
  5493  002E                     ___lbdiv@divisor:	
  5494                           ; 1 bytes @ 0xE
  5495                           
  5496  002E                     memset@p:	
  5497                           ; 1 bytes @ 0xE
  5498                           
  5499  002E                     ___wmul@multiplier:	
  5500                           ; 1 bytes @ 0xE
  5501                           
  5502  002E                     ___lwdiv@quotient:	
  5503                           ; 2 bytes @ 0xE
  5504                           
  5505                           
  5506                           ; 2 bytes @ 0xE
  5507  002E                     	ds	1
  5508  002F                     ??_isSameAddress:	
  5509  002F                     ??_NVMRead:	
  5510                           ; 1 bytes @ 0xF
  5511                           
  5512  002F                     ??_NVMInit:	
  5513                           ; 1 bytes @ 0xF
  5514                           
  5515  002F                     ??_DemoOutput_HandleMessage:	
  5516                           ; 1 bytes @ 0xF
  5517                           
  5518  002F                     ??___lbdiv:	
  5519                           ; 1 bytes @ 0xF
  5520                           
  5521  002F                     PHYSetLongRAMAddr@tmpRFIE:	
  5522                           ; 1 bytes @ 0xF
  5523                           
  5524  002F                     PHYGetLongRAMAddr@tmpRFIE:	
  5525                           ; 1 bytes @ 0xF
  5526                           
  5527  002F                     NVMInit@result:	
  5528                           ; 1 bytes @ 0xF
  5529                           
  5530  002F                     ___lbdiv@dividend:	
  5531                           ; 1 bytes @ 0xF
  5532                           
  5533  002F                     MiWi_TickGet@currentTime:	
  5534                           ; 1 bytes @ 0xF
  5535                           
  5536                           
  5537                           ; 4 bytes @ 0xF
  5538  002F                     	ds	1
  5539  0030                     ?_MiMAC_SetChannel:	
  5540  0030                     ?___lwmod:	
  5541                           ; 1 bytes @ 0x10
  5542                           
  5543  0030                     MiMAC_SetChannel@offsetFreq:	
  5544                           ; 2 bytes @ 0x10
  5545                           
  5546  0030                     ___lbdiv@counter:	
  5547                           ; 1 bytes @ 0x10
  5548                           
  5549  0030                     ___wmul@multiplicand:	
  5550                           ; 1 bytes @ 0x10
  5551                           
  5552  0030                     ___lwmod@divisor:	
  5553                           ; 2 bytes @ 0x10
  5554                           
  5555                           
  5556                           ; 2 bytes @ 0x10
  5557  0030                     	ds	1
  5558  0031                     ??_MiMAC_SetChannel:	
  5559  0031                     ??___lmul:	
  5560                           ; 1 bytes @ 0x11
  5561                           
  5562  0031                     MiMAC_SetChannel@channel:	
  5563                           ; 1 bytes @ 0x11
  5564                           
  5565  0031                     DemoOutput_HandleMessage@i:	
  5566                           ; 1 bytes @ 0x11
  5567                           
  5568  0031                     ___lbdiv@quotient:	
  5569                           ; 1 bytes @ 0x11
  5570                           
  5571  0031                     ___lmul@product:	
  5572                           ; 1 bytes @ 0x11
  5573                           
  5574                           
  5575                           ; 4 bytes @ 0x11
  5576  0031                     	ds	1
  5577  0032                     ??_CONSOLE_PrintDec:	
  5578  0032                     ??_InitMRF24J40:	
  5579                           ; 1 bytes @ 0x12
  5580                           
  5581  0032                     ??___wmul:	
  5582                           ; 1 bytes @ 0x12
  5583                           
  5584  0032                     isSameAddress@i:	
  5585                           ; 1 bytes @ 0x12
  5586                           
  5587  0032                     CONSOLE_PrintDec@toPrint:	
  5588                           ; 1 bytes @ 0x12
  5589                           
  5590  0032                     ___wmul@product:	
  5591                           ; 1 bytes @ 0x12
  5592                           
  5593  0032                     ___lwmod@dividend:	
  5594                           ; 2 bytes @ 0x12
  5595                           
  5596                           
  5597                           ; 2 bytes @ 0x12
  5598  0032                     	ds	1
  5599  0033                     ?_MiApp_StartConnection:	
  5600  0033                     ??_DumpConnection:	
  5601                           ; 1 bytes @ 0x13
  5602                           
  5603  0033                     ??_DemoOutput_ChannelError:	
  5604                           ; 1 bytes @ 0x13
  5605                           
  5606  0033                     ??_ButtonPressed:	
  5607                           ; 1 bytes @ 0x13
  5608                           
  5609  0033                     MiApp_StartConnection@ScanDuration:	
  5610                           ; 1 bytes @ 0x13
  5611                           
  5612  0033                     DemoOutput_ChannelError@channel:	
  5613                           ; 1 bytes @ 0x13
  5614                           
  5615  0033                     InitMRF24J40@_dcnt:	
  5616                           ; 1 bytes @ 0x13
  5617                           
  5618  0033                     ButtonPressed@t:	
  5619                           ; 4 bytes @ 0x13
  5620                           
  5621                           
  5622                           ; 4 bytes @ 0x13
  5623  0033                     	ds	1
  5624  0034                     ??_MiMAC_DiscardPacket:	
  5625  0034                     ?_NVMWrite:	
  5626                           ; 1 bytes @ 0x14
  5627                           
  5628  0034                     ??___lwmod:	
  5629                           ; 1 bytes @ 0x14
  5630                           
  5631  0034                     DumpConnection@index:	
  5632                           ; 1 bytes @ 0x14
  5633                           
  5634  0034                     ___lwmod@counter:	
  5635                           ; 1 bytes @ 0x14
  5636                           
  5637  0034                     NVMWrite@source:	
  5638                           ; 1 bytes @ 0x14
  5639                           
  5640  0034                     MiApp_StartConnection@ChannelMap:	
  5641                           ; 2 bytes @ 0x14
  5642                           
  5643                           
  5644                           ; 4 bytes @ 0x14
  5645  0034                     	ds	1
  5646  0035                     ?_DELAY_ms:	
  5647  0035                     ?_sprintf:	
  5648                           ; 1 bytes @ 0x15
  5649                           
  5650  0035                     DumpConnection@j:	
  5651                           ; 2 bytes @ 0x15
  5652                           
  5653  0035                     DELAY_ms@ms:	
  5654                           ; 1 bytes @ 0x15
  5655                           
  5656  0035                     sprintf@f:	
  5657                           ; 2 bytes @ 0x15
  5658                           
  5659                           
  5660                           ; 2 bytes @ 0x15
  5661  0035                     	ds	1
  5662  0036                     ??_MiApp_DiscardMessage:	
  5663  0036                     ??_MiMAC_ReceivedPacket:	
  5664                           ; 1 bytes @ 0x16
  5665                           
  5666  0036                     DumpConnection@i:	
  5667                           ; 1 bytes @ 0x16
  5668                           
  5669  0036                     NVMWrite@addr:	
  5670                           ; 1 bytes @ 0x16
  5671                           
  5672                           
  5673                           ; 2 bytes @ 0x16
  5674  0036                     	ds	1
  5675  0037                     ??_DELAY_ms:	
  5676  0037                     InitMRF24J40@_dcnt_438:	
  5677                           ; 1 bytes @ 0x17
  5678                           
  5679  0037                     DELAY_ms@cyclesRequiredForEntireDelay:	
  5680                           ; 4 bytes @ 0x17
  5681                           
  5682  0037                     ButtonPressed@tickDifference:	
  5683                           ; 4 bytes @ 0x17
  5684                           
  5685                           
  5686                           ; 4 bytes @ 0x17
  5687  0037                     	ds	1
  5688  0038                     ??_MiApp_StartConnection:	
  5689  0038                     MiApp_StartConnection@Mode:	
  5690                           ; 1 bytes @ 0x18
  5691                           
  5692  0038                     NVMWrite@count:	
  5693                           ; 1 bytes @ 0x18
  5694                           
  5695                           
  5696                           ; 2 bytes @ 0x18
  5697  0038                     	ds	1
  5698  0039                     MiApp_StartConnection@tmp:	
  5699                           
  5700                           ; 2 bytes @ 0x19
  5701  0039                     	ds	1
  5702  003A                     ??_NVMWrite:	
  5703  003A                     NVMWrite@oldGIEH:	
  5704                           ; 1 bytes @ 0x1A
  5705                           
  5706                           
  5707                           ; 1 bytes @ 0x1A
  5708  003A                     	ds	1
  5709  003B                     ??_AddConnection:	
  5710  003B                     ??_MiApp_SetChannel:	
  5711                           ; 1 bytes @ 0x1B
  5712                           
  5713  003B                     ??_MiApp_ConnectionMode:	
  5714                           ; 1 bytes @ 0x1B
  5715                           
  5716  003B                     ??_LCD_i_write:	
  5717                           ; 1 bytes @ 0x1B
  5718                           
  5719  003B                     ??_LCD_d_write:	
  5720                           ; 1 bytes @ 0x1B
  5721                           
  5722  003B                     ??_LCD_Initialize:	
  5723                           ; 1 bytes @ 0x1B
  5724                           
  5725  003B                     ??_LCD_Erase:	
  5726                           ; 1 bytes @ 0x1B
  5727                           
  5728  003B                     ??_SYSTEM_Initialize:	
  5729                           ; 1 bytes @ 0x1B
  5730                           
  5731  003B                     MiApp_SetChannel@channel:	
  5732                           ; 1 bytes @ 0x1B
  5733                           
  5734  003B                     LCD_i_write@v:	
  5735                           ; 1 bytes @ 0x1B
  5736                           
  5737  003B                     LCD_d_write@v:	
  5738                           ; 1 bytes @ 0x1B
  5739                           
  5740  003B                     InitMRF24J40@_ms:	
  5741                           ; 1 bytes @ 0x1B
  5742                           
  5743                           
  5744                           ; 4 bytes @ 0x1B
  5745  003B                     	ds	1
  5746  003C                     ??_LCD_Update:	
  5747  003C                     MiApp_ConnectionMode@Mode:	
  5748                           ; 1 bytes @ 0x1C
  5749                           
  5750  003C                     LCD_Update@i:	
  5751                           ; 1 bytes @ 0x1C
  5752                           
  5753                           
  5754                           ; 1 bytes @ 0x1C
  5755  003C                     	ds	2
  5756  003E                     MiMAC_ReceivedPacket@addrMode:	
  5757                           
  5758                           ; 1 bytes @ 0x1E
  5759  003E                     	ds	1
  5760  003F                     ??_sprintf:	
  5761  003F                     MiMAC_ReceivedPacket@i:	
  5762                           ; 1 bytes @ 0x1F
  5763                           
  5764  003F                     InitMRF24J40@_ms_439:	
  5765                           ; 1 bytes @ 0x1F
  5766                           
  5767                           
  5768                           ; 4 bytes @ 0x1F
  5769  003F                     	ds	1
  5770  0040                     MiMAC_ReceivedPacket@bIntraPAN:	
  5771  0040                     AddConnection@status:	
  5772                           ; 1 bytes @ 0x20
  5773                           
  5774                           
  5775                           ; 1 bytes @ 0x20
  5776  0040                     	ds	1
  5777  0041                     AddConnection@connectionSlot:	
  5778                           
  5779                           ; 1 bytes @ 0x21
  5780  0041                     	ds	1
  5781  0042                     AddConnection@i:	
  5782                           
  5783                           ; 1 bytes @ 0x22
  5784  0042                     	ds	1
  5785  0043                     InitMRF24J40@j:	
  5786  0043                     _sprintf$2447:	
  5787                           ; 2 bytes @ 0x23
  5788                           
  5789                           
  5790                           ; 2 bytes @ 0x23
  5791  0043                     	ds	2
  5792  0045                     InitMRF24J40@i:	
  5793  0045                     _sprintf$2448:	
  5794                           ; 1 bytes @ 0x25
  5795                           
  5796                           
  5797                           ; 2 bytes @ 0x25
  5798  0045                     	ds	1
  5799  0046                     ?_MiMAC_SendPacket:	
  5800  0046                     ?_MiMAC_Init:	
  5801                           ; 1 bytes @ 0x26
  5802                           
  5803  0046                     MiMAC_Init@initValue:	
  5804                           ; 1 bytes @ 0x26
  5805                           
  5806  0046                     MiMAC_SendPacket@transParam:	
  5807                           ; 2 bytes @ 0x26
  5808                           
  5809                           
  5810                           ; 7 bytes @ 0x26
  5811  0046                     	ds	1
  5812  0047                     _sprintf$2454:	
  5813                           
  5814                           ; 2 bytes @ 0x27
  5815  0047                     	ds	1
  5816  0048                     ??_MiMAC_Init:	
  5817                           
  5818                           ; 1 bytes @ 0x28
  5819  0048                     	ds	1
  5820  0049                     sprintf@cp:	
  5821                           
  5822                           ; 1 bytes @ 0x29
  5823  0049                     	ds	1
  5824  004A                     MiMAC_Init@i:	
  5825  004A                     sprintf@idx:	
  5826                           ; 1 bytes @ 0x2A
  5827                           
  5828                           
  5829                           ; 1 bytes @ 0x2A
  5830  004A                     	ds	1
  5831  004B                     ??_MiApp_ProtocolInit:	
  5832  004B                     sprintf@len:	
  5833                           ; 1 bytes @ 0x2B
  5834                           
  5835                           
  5836                           ; 2 bytes @ 0x2B
  5837  004B                     	ds	1
  5838  004C                     MiApp_ProtocolInit@tmp:	
  5839                           
  5840                           ; 2 bytes @ 0x2C
  5841  004C                     	ds	1
  5842  004D                     MiMAC_SendPacket@MACPayload:	
  5843  004D                     sprintf@ap:	
  5844                           ; 1 bytes @ 0x2D
  5845                           
  5846                           
  5847                           ; 1 bytes @ 0x2D
  5848  004D                     	ds	1
  5849  004E                     MiMAC_SendPacket@MACPayloadLen:	
  5850  004E                     MiApp_ProtocolInit@bNetworkFreezer:	
  5851                           ; 1 bytes @ 0x2E
  5852                           
  5853  004E                     sprintf@val:	
  5854                           ; 1 bytes @ 0x2E
  5855                           
  5856                           
  5857                           ; 2 bytes @ 0x2E
  5858  004E                     	ds	1
  5859  004F                     ??_MiMAC_SendPacket:	
  5860  004F                     MiApp_ProtocolInit@initValue:	
  5861                           ; 1 bytes @ 0x2F
  5862                           
  5863                           
  5864                           ; 2 bytes @ 0x2F
  5865  004F                     	ds	1
  5866  0050                     sprintf@prec:	
  5867                           
  5868                           ; 1 bytes @ 0x30
  5869  0050                     	ds	1
  5870  0051                     MiApp_ProtocolInit@i:	
  5871  0051                     sprintf@width:	
  5872                           ; 1 bytes @ 0x31
  5873                           
  5874                           
  5875                           ; 2 bytes @ 0x31
  5876  0051                     	ds	2
  5877  0053                     ?_SendPacket:	
  5878  0053                     sprintf@c:	
  5879                           ; 1 bytes @ 0x33
  5880                           
  5881  0053                     SendPacket@DestinationPANID:	
  5882                           ; 1 bytes @ 0x33
  5883                           
  5884                           
  5885                           ; 2 bytes @ 0x33
  5886  0053                     	ds	1
  5887  0054                     sprintf@sp:	
  5888                           
  5889                           ; 1 bytes @ 0x34
  5890  0054                     	ds	1
  5891  0055                     SendPacket@DestinationAddress:	
  5892  0055                     sprintf@flag:	
  5893                           ; 2 bytes @ 0x35
  5894                           
  5895                           
  5896                           ; 2 bytes @ 0x35
  5897  0055                     	ds	2
  5898  0057                     ?_LCDTRXCount:	
  5899  0057                     ?_LCDDisplay:	
  5900                           ; 1 bytes @ 0x37
  5901                           
  5902  0057                     SendPacket@isCommand:	
  5903                           ; 1 bytes @ 0x37
  5904                           
  5905  0057                     LCDTRXCount@rxCount:	
  5906                           ; 1 bytes @ 0x37
  5907                           
  5908  0057                     LCDDisplay@text:	
  5909                           ; 1 bytes @ 0x37
  5910                           
  5911                           
  5912                           ; 2 bytes @ 0x37
  5913  0057                     	ds	1
  5914  0058                     ??_LCDTRXCount:	
  5915  0058                     SendPacket@SecurityEnabled:	
  5916                           ; 1 bytes @ 0x38
  5917                           
  5918  0058                     LCDTRXCount@txCount:	
  5919                           ; 1 bytes @ 0x38
  5920                           
  5921                           
  5922                           ; 1 bytes @ 0x38
  5923  0058                     	ds	1
  5924  0059                     ??_SendPacket:	
  5925  0059                     ?_DemoOutput_UpdateTxRx:	
  5926                           ; 1 bytes @ 0x39
  5927                           
  5928  0059                     LCDDisplay@value:	
  5929                           ; 1 bytes @ 0x39
  5930                           
  5931  0059                     DemoOutput_UpdateTxRx@RxNum:	
  5932                           ; 1 bytes @ 0x39
  5933                           
  5934                           
  5935                           ; 1 bytes @ 0x39
  5936  0059                     	ds	1
  5937  005A                     ??_MiApp_UnicastAddress:	
  5938  005A                     ??_P2PTasks:	
  5939                           ; 1 bytes @ 0x3A
  5940                           
  5941  005A                     ??_MiApp_BroadcastPacket:	
  5942                           ; 1 bytes @ 0x3A
  5943                           
  5944  005A                     ??_DemoOutput_UpdateTxRx:	
  5945                           ; 1 bytes @ 0x3A
  5946                           
  5947  005A                     MiApp_BroadcastPacket@SecEn:	
  5948                           ; 1 bytes @ 0x3A
  5949                           
  5950  005A                     MiApp_UnicastAddress@DestinationAddress:	
  5951                           ; 1 bytes @ 0x3A
  5952                           
  5953  005A                     LCDDisplay@delay:	
  5954                           ; 1 bytes @ 0x3A
  5955                           
  5956  005A                     DemoOutput_UpdateTxRx@TxNum:	
  5957                           ; 1 bytes @ 0x3A
  5958                           
  5959                           
  5960                           ; 1 bytes @ 0x3A
  5961  005A                     	ds	1
  5962  005B                     ??_MiApp_UnicastConnection:	
  5963  005B                     ??_LCDDisplay:	
  5964                           ; 1 bytes @ 0x3B
  5965                           
  5966  005B                     MiApp_UnicastConnection@ConnectionIndex:	
  5967                           ; 1 bytes @ 0x3B
  5968                           
  5969  005B                     LCDDisplay@i:	
  5970                           ; 1 bytes @ 0x3B
  5971                           
  5972                           
  5973                           ; 1 bytes @ 0x3B
  5974  005B                     	ds	1
  5975  005C                     ??_DemoOutput_Greeting:	
  5976  005C                     ?_DemoOutput_Channel:	
  5977                           ; 1 bytes @ 0x3C
  5978                           
  5979  005C                     ??_DemoOutput_UnicastFail:	
  5980                           ; 1 bytes @ 0x3C
  5981                           
  5982  005C                     DemoOutput_Channel@Step:	
  5983                           ; 1 bytes @ 0x3C
  5984                           
  5985                           
  5986                           ; 1 bytes @ 0x3C
  5987  005C                     	ds	1
  5988  005D                     ??_DemoOutput_Channel:	
  5989  005D                     DemoOutput_Channel@channel:	
  5990                           ; 1 bytes @ 0x3D
  5991                           
  5992                           
  5993                           ; 1 bytes @ 0x3D
  5994  005D                     	ds	1
  5995  005E                     ??_Initialize_Demo:	
  5996  005E                     ??_Run_Demo:	
  5997                           ; 1 bytes @ 0x3E
  5998                           
  5999  005E                     ??_main:	
  6000                           ; 1 bytes @ 0x3E
  6001                           
  6002  005E                     ??_Process_RxMessage:	
  6003                           ; 1 bytes @ 0x3E
  6004                           
  6005                           
  6006                           	psect	text5
  6007  27A4                     __ptext5:	
  6008 ;; *************** function _LCDInitPortB *****************
  6009 ;; Defined at:
  6010 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  preRFIE         1   10[BANK0 ] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0, pclath, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 1F/0
  6021 ;;		On exit  : 1F/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;Total ram usage:        1 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    5
  6031 ;; This function calls:
  6032 ;;		_SPIPut
  6033 ;; This function is called by:
  6034 ;;		_LCD_Initialize
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _LCDInitPortB
  6040  27A4                     _LCDInitPortB:	
  6041                           
  6042                           ;lcd.c: 62: uint8_t preRFIE = INTCONbits.IOCIE;
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _LCDInitPortB: [wreg+status,2+status,0+pclath+cstack]
  6046  27A4  3000               	movlw	0
  6047  27A5  198B               	btfsc	11,3	;volatile
  6048  27A6  3001               	movlw	1
  6049  27A7  00AA               	movwf	LCDInitPortB@preRFIE
  6050                           
  6051                           ;lcd.c: 63: INTCONbits.IOCIE = 0;
  6052  27A8  118B               	bcf	11,3	;volatile
  6053                           
  6054                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  6055  27A9  0022               	movlb	2	; select bank2
  6056  27AA  110C               	bcf	12,2	;volatile
  6057                           
  6058                           ;lcd.c: 65: SPIPut(0x40);
  6059  27AB  3040               	movlw	64
  6060  27AC  3189  21C9  31A7   	fcall	_SPIPut
  6061                           
  6062                           ;lcd.c: 66: SPIPut(0x01);
  6063  27AF  3001               	movlw	1
  6064  27B0  3189  21C9  31A7   	fcall	_SPIPut
  6065                           
  6066                           ;lcd.c: 67: SPIPut(0x00);
  6067  27B3  3000               	movlw	0
  6068  27B4  3189  21C9         	fcall	_SPIPut
  6069                           
  6070                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  6071  27B6  0022               	movlb	2	; select bank2
  6072  27B7  150C               	bsf	12,2	;volatile
  6073                           
  6074                           ;lcd.c: 69: INTCONbits.IOCIE = preRFIE;
  6075  27B8  0020               	movlb	0	; select bank0
  6076  27B9  0C2A               	rrf	LCDInitPortB@preRFIE,w
  6077  27BA  1C03               	skipc
  6078  27BB  118B               	bcf	11,3	;volatile
  6079  27BC  1803               	skipnc
  6080  27BD  158B               	bsf	11,3	;volatile
  6081  27BE  0008               	return
  6082  27BF                     __end_of_LCDInitPortB:	
  6083                           
  6084                           	psect	text6
  6085  2789                     __ptext6:	
  6086 ;; *************** function _LCDInitPortA *****************
  6087 ;; Defined at:
  6088 ;;		line 48 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  preRFIE         1   10[BANK0 ] unsigned char 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 1F/0
  6099 ;;		On exit  : 1F/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;Total ram usage:        1 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    5
  6109 ;; This function calls:
  6110 ;;		_SPIPut
  6111 ;; This function is called by:
  6112 ;;		_LCD_Initialize
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _LCDInitPortA
  6118  2789                     _LCDInitPortA:	
  6119                           
  6120                           ;lcd.c: 50: uint8_t preRFIE = INTCONbits.IOCIE;
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in _LCDInitPortA: [wreg+status,2+status,0+pclath+cstack]
  6124  2789  3000               	movlw	0
  6125  278A  198B               	btfsc	11,3	;volatile
  6126  278B  3001               	movlw	1
  6127  278C  00AA               	movwf	LCDInitPortA@preRFIE
  6128                           
  6129                           ;lcd.c: 51: INTCONbits.IOCIE = 0;
  6130  278D  118B               	bcf	11,3	;volatile
  6131                           
  6132                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  6133  278E  0022               	movlb	2	; select bank2
  6134  278F  110C               	bcf	12,2	;volatile
  6135                           
  6136                           ;lcd.c: 53: SPIPut(0x40);
  6137  2790  3040               	movlw	64
  6138  2791  3189  21C9  31A7   	fcall	_SPIPut
  6139                           
  6140                           ;lcd.c: 54: SPIPut(0x00);
  6141  2794  3000               	movlw	0
  6142  2795  3189  21C9  31A7   	fcall	_SPIPut
  6143                           
  6144                           ;lcd.c: 55: SPIPut(0x00);
  6145  2798  3000               	movlw	0
  6146  2799  3189  21C9         	fcall	_SPIPut
  6147                           
  6148                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  6149  279B  0022               	movlb	2	; select bank2
  6150  279C  150C               	bsf	12,2	;volatile
  6151                           
  6152                           ;lcd.c: 57: INTCONbits.IOCIE = preRFIE;
  6153  279D  0020               	movlb	0	; select bank0
  6154  279E  0C2A               	rrf	LCDInitPortA@preRFIE,w
  6155  279F  1C03               	skipc
  6156  27A0  118B               	bcf	11,3	;volatile
  6157  27A1  1803               	skipnc
  6158  27A2  158B               	bsf	11,3	;volatile
  6159  27A3  0008               	return
  6160  27A4                     __end_of_LCDInitPortA:	
  6161                           
  6162                           	psect	text8
  6163  0803                     __ptext8:	
  6164 ;; *************** function _run_p2p_demo *****************
  6165 ;; Defined at:
  6166 ;;		line 72 in file "../src/p2p_demo.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  switch_val      1    8[BANK2 ] unsigned char 
  6171 ;;  select_ed       1    9[BANK2 ] unsigned char 
  6172 ;;  update_ed       1    7[BANK2 ] unsigned char 
  6173 ;;  PressedButto    1    6[BANK2 ] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 1C/1
  6180 ;;		On exit  : 1C/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Totals:         0       0       4      10       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;Total ram usage:       14 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:   13
  6190 ;; This function calls:
  6191 ;;		_ButtonPressed
  6192 ;;		_DELAY_ms
  6193 ;;		_DemoOutput_Instruction
  6194 ;;		_DemoOutput_UnicastFail
  6195 ;;		_DemoOutput_UpdateTxRx
  6196 ;;		_LCD_Erase
  6197 ;;		_LCD_Update
  6198 ;;		_MiApp_BroadcastPacket
  6199 ;;		_MiApp_UnicastConnection
  6200 ;;		_Process_RxMessage
  6201 ;;		___bmul
  6202 ;;		___lbmod
  6203 ;;		___wmul
  6204 ;;		_sprintf
  6205 ;; This function is called by:
  6206 ;;		_Run_Demo
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _run_p2p_demo
  6212  0803                     _run_p2p_demo:	
  6213  0803                     l9857:	
  6214                           ;incstack = 0
  6215                           ; Regs used in _run_p2p_demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6216                           
  6217                           
  6218                           ;p2p_demo.c: 75: if (Process_RxMessage())
  6219  0803  27DC  3188         	fcall	_Process_RxMessage
  6220  0805  3A00               	xorlw	0
  6221  0806  1D03               	btfss	3,2
  6222  0807  0008               	return
  6223                           
  6224                           ;p2p_demo.c: 79: else
  6225                           ;p2p_demo.c: 80: {
  6226                           ;p2p_demo.c: 87: uint8_t PressedButton = ButtonPressed();
  6227  0808  2770  3188         	fcall	_ButtonPressed
  6228  080A  0022               	movlb	2	; select bank2
  6229  080B  00DA               	movwf	run_p2p_demo@PressedButton^(0+256)
  6230                           
  6231                           ;p2p_demo.c: 88: switch( PressedButton )
  6232  080C  2952               	goto	l9957
  6233  080D                     l9863:	
  6234                           
  6235                           ;p2p_demo.c: 97: {TxData = 0;};
  6236  080D  0021               	movlb	1	; select bank1
  6237  080E  01DA               	clrf	_TxData^(0+128)
  6238                           
  6239                           ;p2p_demo.c: 98: for(i = 0; i < 21; i++)
  6240  080F  01DE               	clrf	_i^(0+128)
  6241  0810                     l9869:	
  6242                           
  6243                           ;p2p_demo.c: 99: {
  6244                           ;p2p_demo.c: 101: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  6245  0810  085A               	movf	_TxData^(0+128),w
  6246  0811  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  6247  0812  0086               	movwf	6
  6248  0813  3002               	movlw	2	; select bank4/5
  6249  0814  0087               	movwf	7
  6250  0815  3006               	movlw	6
  6251  0816  0020               	movlb	0	; select bank0
  6252  0817  00A9               	movwf	___lbmod@divisor
  6253  0818  0021               	movlb	1	; select bank1
  6254  0819  085C               	movf	_TxSynCount^(0+128),w
  6255  081A  220E  3188         	fcall	___lbmod
  6256  081C  00AE               	movwf	___wmul@multiplier
  6257  081D  3015               	movlw	21
  6258  081E  01AF               	clrf	___wmul@multiplier+1
  6259  081F  00B0               	movwf	___wmul@multiplicand
  6260  0820  01B1               	clrf	___wmul@multiplicand+1
  6261  0821  275B  3188         	fcall	___wmul
  6262  0823  3000               	movlw	low (_MiWi| (0+32768))
  6263  0824  0021               	movlb	1	; select bank1
  6264  0825  00BF               	movwf	??_run_p2p_demo^(0+128)
  6265  0826  30A0               	movlw	high (_MiWi| (0+32768))
  6266  0827  00C0               	movwf	(??_run_p2p_demo^(0+128)+1)
  6267  0828  0020               	movlb	0	; select bank0
  6268  0829  082E               	movf	?___wmul,w
  6269  082A  0021               	movlb	1	; select bank1
  6270  082B  073F               	addwf	??_run_p2p_demo^(0+128),w
  6271  082C  00C1               	movwf	(??_run_p2p_demo+2)^(0+128)
  6272  082D  0020               	movlb	0	; select bank0
  6273  082E  082F               	movf	?___wmul+1,w
  6274  082F  0021               	movlb	1	; select bank1
  6275  0830  3D40               	addwfc	(??_run_p2p_demo+1)^(0+128),w
  6276  0831  00C2               	movwf	(??_run_p2p_demo+3)^(0+128)
  6277  0832  085E               	movf	_i^(0+128),w
  6278  0833  0741               	addwf	(??_run_p2p_demo+2)^(0+128),w
  6279  0834  0084               	movwf	4
  6280  0835  0842               	movf	((??_run_p2p_demo+2)^(0+128)+1),w
  6281  0836  1803               	skipnc
  6282  0837  0A42               	incf	((??_run_p2p_demo+2)^(0+128)+1),w
  6283  0838  0085               	movwf	5
  6284  0839  0800               	movf	0,w	;code access
  6285  083A  0081               	movwf	1
  6286  083B  3015               	movlw	21
  6287  083C  0ADA               	incf	_TxData^(0+128),f
  6288  083D  0ADE               	incf	_i^(0+128),f
  6289  083E  025E               	subwf	_i^(0+128),w
  6290  083F  1C03               	skipc
  6291  0840  2810               	goto	l9869
  6292  0841  3000               	movlw	0
  6293                           
  6294                           ;p2p_demo.c: 102: }
  6295                           ;p2p_demo.c: 103: TxSynCount++;
  6296  0842  0ADC               	incf	_TxSynCount^(0+128),f
  6297                           
  6298                           ;p2p_demo.c: 112: MiApp_BroadcastPacket(0);
  6299  0843  3198  201A  3188   	fcall	_MiApp_BroadcastPacket
  6300                           
  6301                           ;p2p_demo.c: 121: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  6302  0846  0859               	movf	_RxNum^(0+128),w
  6303  0847  0020               	movlb	0	; select bank0
  6304  0848  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
  6305  0849  0021               	movlb	1	; select bank1
  6306  084A  0ADB               	incf	_TxNum^(0+128),f
  6307  084B  085B               	movf	_TxNum^(0+128),w
  6308  084C  27D5               	fcall	_DemoOutput_UpdateTxRx
  6309                           
  6310                           ;p2p_demo.c: 122: DELAY_ms(1000);
  6311  084D  30E8               	movlw	232
  6312  084E  00B5               	movwf	DELAY_ms@ms
  6313  084F  3003               	movlw	3
  6314  0850  00B6               	movwf	DELAY_ms@ms+1
  6315  0851  3193  239D  3188   	fcall	_DELAY_ms
  6316                           
  6317                           ;p2p_demo.c: 123: DemoOutput_Instruction();
  6318  0854  2FFB               	ljmp	l868
  6319  0855                     l991:	
  6320                           ;p2p_demo.c: 126: case 2:
  6321                           
  6322                           ;p2p_demo.c: 124: break;
  6323                           
  6324                           
  6325                           ;p2p_demo.c: 127: chk_sel_status = 1;
  6326  0855  0021               	movlb	1	; select bank1
  6327  0856  01EA               	clrf	_chk_sel_status^(0+128)
  6328  0857  0AEA               	incf	_chk_sel_status^(0+128),f
  6329                           
  6330                           ;p2p_demo.c: 128: uint8_t select_ed =0;
  6331  0858  0022               	movlb	2	; select bank2
  6332  0859  01DD               	clrf	run_p2p_demo@select_ed^(0+256)
  6333                           
  6334                           ;p2p_demo.c: 129: bool update_ed = 1;
  6335  085A  01DB               	clrf	run_p2p_demo@update_ed^(0+256)
  6336  085B  0ADB               	incf	run_p2p_demo@update_ed^(0+256),f
  6337  085C                     l9953:	
  6338                           ;p2p_demo.c: 130: while(update_ed == 1)
  6339                           
  6340  085C  0022               	movlb	2	; select bank2
  6341  085D  035B               	decf	run_p2p_demo@update_ed^(0+256),w
  6342  085E  1D03               	btfss	3,2
  6343  085F  0008               	return
  6344                           
  6345                           ;p2p_demo.c: 131: {
  6346                           ;p2p_demo.c: 134: LCD_Erase();
  6347  0860  3194  2405  3188   	fcall	_LCD_Erase
  6348                           
  6349                           ;p2p_demo.c: 135: LCD_Erase();
  6350  0863  3194  2405  3188   	fcall	_LCD_Erase
  6351                           
  6352                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  6353                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  6354  0866  300A               	movlw	10
  6355  0867  00A9               	movwf	___bmul@multiplicand
  6356  0868  0022               	movlb	2	; select bank2
  6357  0869  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6358  086A  3197  2731  3188   	fcall	___bmul
  6359  086D  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  6360  086E  0086               	movwf	6
  6361  086F  3001               	movlw	1	; select bank3/4
  6362  0870  0087               	movwf	7
  6363  0871  0801               	movf	1,w
  6364  0872  0022               	movlb	2	; select bank2
  6365  0873  00D4               	movwf	_run_p2p_demo$2996^(0+256)
  6366  0874  300A               	movlw	10
  6367  0875  01D5               	clrf	(_run_p2p_demo$2996+1)^(0+256)
  6368                           
  6369                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  6370                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  6371  0876  0020               	movlb	0	; select bank0
  6372  0877  00A9               	movwf	___bmul@multiplicand
  6373  0878  0022               	movlb	2	; select bank2
  6374  0879  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6375  087A  3197  2731  3188   	fcall	___bmul
  6376  087D  3EA1               	addlw	(low ((_ConnectionTable| (0+256)+1)))& (0+255)
  6377  087E  0086               	movwf	6
  6378  087F  3001               	movlw	1	; select bank3/4
  6379  0880  0087               	movwf	7
  6380  0881  0801               	movf	1,w
  6381  0882  0022               	movlb	2	; select bank2
  6382  0883  00D6               	movwf	_run_p2p_demo$2997^(0+256)
  6383  0884  300A               	movlw	10
  6384  0885  01D7               	clrf	(_run_p2p_demo$2997+1)^(0+256)
  6385                           
  6386                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  6387                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  6388  0886  0020               	movlb	0	; select bank0
  6389  0887  00A9               	movwf	___bmul@multiplicand
  6390  0888  0022               	movlb	2	; select bank2
  6391  0889  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6392  088A  3197  2731  3188   	fcall	___bmul
  6393  088D  3EA2               	addlw	(low ((_ConnectionTable| (0+256)+2)))& (0+255)
  6394  088E  0086               	movwf	6
  6395  088F  3001               	movlw	1	; select bank3/4
  6396  0890  0087               	movwf	7
  6397  0891  0801               	movf	1,w
  6398  0892  0022               	movlb	2	; select bank2
  6399  0893  00D8               	movwf	_run_p2p_demo$2998^(0+256)
  6400  0894  30D5               	movlw	low (STR_43| (0+32768))
  6401  0895  01D9               	clrf	(_run_p2p_demo$2998+1)^(0+256)
  6402                           
  6403                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  6404                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  6405  0896  0020               	movlb	0	; select bank0
  6406  0897  00B5               	movwf	sprintf@f
  6407  0898  30A3               	movlw	high (STR_43| (0+32768))
  6408  0899  00B6               	movwf	sprintf@f+1
  6409  089A  0022               	movlb	2	; select bank2
  6410  089B  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6411  089C  0020               	movlb	0	; select bank0
  6412  089D  00B7               	movwf	?_sprintf+2
  6413  089E  01B8               	clrf	?_sprintf+3
  6414  089F  0022               	movlb	2	; select bank2
  6415  08A0  0855               	movf	(_run_p2p_demo$2996+1)^(0+256),w
  6416  08A1  0020               	movlb	0	; select bank0
  6417  08A2  00BA               	movwf	?_sprintf+5
  6418  08A3  0022               	movlb	2	; select bank2
  6419  08A4  0854               	movf	_run_p2p_demo$2996^(0+256),w
  6420  08A5  0020               	movlb	0	; select bank0
  6421  08A6  00B9               	movwf	?_sprintf+4
  6422  08A7  0022               	movlb	2	; select bank2
  6423  08A8  0857               	movf	(_run_p2p_demo$2997+1)^(0+256),w
  6424  08A9  0020               	movlb	0	; select bank0
  6425  08AA  00BC               	movwf	?_sprintf+7
  6426  08AB  0022               	movlb	2	; select bank2
  6427  08AC  0856               	movf	_run_p2p_demo$2997^(0+256),w
  6428  08AD  0020               	movlb	0	; select bank0
  6429  08AE  00BB               	movwf	?_sprintf+6
  6430  08AF  0022               	movlb	2	; select bank2
  6431  08B0  0859               	movf	(_run_p2p_demo$2998+1)^(0+256),w
  6432  08B1  0020               	movlb	0	; select bank0
  6433  08B2  00BE               	movwf	?_sprintf+9
  6434  08B3  0022               	movlb	2	; select bank2
  6435  08B4  0858               	movf	_run_p2p_demo$2998^(0+256),w
  6436  08B5  0020               	movlb	0	; select bank0
  6437  08B6  00BD               	movwf	?_sprintf+8
  6438  08B7  3048               	movlw	(low (_LCDText| (0+512)))& (0+255)
  6439  08B8  3181  2111  3188   	fcall	_sprintf
  6440                           
  6441                           ;p2p_demo.c: 138: sprintf((char *)&(LCDText[16]), (char*)"RB2: Chnge node");
  6442  08BB  306A               	movlw	low (STR_44| (0+32768))
  6443  08BC  00B5               	movwf	sprintf@f
  6444  08BD  30A4               	movlw	high (STR_44| (0+32768))
  6445  08BE  00B6               	movwf	sprintf@f+1
  6446  08BF  3058               	movlw	(low ((_LCDText| (0+512)+16)))& (0+255)
  6447  08C0  3181  2111  3188   	fcall	_sprintf
  6448                           
  6449                           ;p2p_demo.c: 139: LCD_Update();
  6450  08C3  215B  3188         	fcall	_LCD_Update
  6451                           
  6452                           ;p2p_demo.c: 140: LCD_Update();
  6453  08C5  215B  3188         	fcall	_LCD_Update
  6454                           
  6455                           ;p2p_demo.c: 142: chk_sel_status = 1;
  6456  08C7  0021               	movlb	1	; select bank1
  6457  08C8  01EA               	clrf	_chk_sel_status^(0+128)
  6458  08C9  0AEA               	incf	_chk_sel_status^(0+128),f
  6459  08CA                     l9951:	
  6460                           ;p2p_demo.c: 144: while(chk_sel_status)
  6461                           
  6462  08CA  0021               	movlb	1	; select bank1
  6463  08CB  086A               	movf	_chk_sel_status^(0+128),w
  6464  08CC  1903               	btfsc	3,2
  6465  08CD  285C               	goto	l9953
  6466                           
  6467                           ;p2p_demo.c: 145: {
  6468                           ;p2p_demo.c: 146: uint8_t switch_val = ButtonPressed();
  6469  08CE  2770  3188         	fcall	_ButtonPressed
  6470  08D0  0022               	movlb	2	; select bank2
  6471  08D1  00DC               	movwf	run_p2p_demo@switch_val^(0+256)
  6472                           
  6473                           ;p2p_demo.c: 148: Process_RxMessage();
  6474  08D2  27DC  3188         	fcall	_Process_RxMessage
  6475                           
  6476                           ;p2p_demo.c: 149: if(switch_val == 1)
  6477  08D4  0022               	movlb	2	; select bank2
  6478  08D5  0B5C               	decfsz	run_p2p_demo@switch_val^(0+256),w
  6479  08D6  2930               	goto	l9941
  6480                           
  6481                           ;p2p_demo.c: 150: {
  6482                           ;p2p_demo.c: 151: update_ed = 0;
  6483  08D7  01DB               	clrf	run_p2p_demo@update_ed^(0+256)
  6484                           
  6485                           ;p2p_demo.c: 152: chk_sel_status = 0;
  6486  08D8  0021               	movlb	1	; select bank1
  6487  08D9  01EA               	clrf	_chk_sel_status^(0+128)
  6488                           
  6489                           ;p2p_demo.c: 154: TxSynCount2++;
  6490  08DA  0ADD               	incf	_TxSynCount2^(0+128),f
  6491                           
  6492                           ;p2p_demo.c: 155: {TxData = 0;};
  6493  08DB  01DA               	clrf	_TxData^(0+128)
  6494                           
  6495                           ;p2p_demo.c: 156: for(i = 0; i < 11; i++)
  6496  08DC  01DE               	clrf	_i^(0+128)
  6497  08DD                     l9917:	
  6498                           
  6499                           ;p2p_demo.c: 157: {
  6500                           ;p2p_demo.c: 159: TxBuffer[TxData++] = DE[(TxSynCount2%6)][i];
  6501  08DD  085A               	movf	_TxData^(0+128),w
  6502  08DE  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
  6503  08DF  0086               	movwf	6
  6504  08E0  3002               	movlw	2	; select bank4/5
  6505  08E1  0087               	movwf	7
  6506  08E2  3006               	movlw	6
  6507  08E3  0020               	movlb	0	; select bank0
  6508  08E4  00A9               	movwf	___lbmod@divisor
  6509  08E5  0021               	movlb	1	; select bank1
  6510  08E6  085D               	movf	_TxSynCount2^(0+128),w
  6511  08E7  220E  3188         	fcall	___lbmod
  6512  08E9  00AE               	movwf	___wmul@multiplier
  6513  08EA  300B               	movlw	11
  6514  08EB  01AF               	clrf	___wmul@multiplier+1
  6515  08EC  00B0               	movwf	___wmul@multiplicand
  6516  08ED  01B1               	clrf	___wmul@multiplicand+1
  6517  08EE  275B  3188         	fcall	___wmul
  6518  08F0  307E               	movlw	low (_DE| (0+32768))
  6519  08F1  0021               	movlb	1	; select bank1
  6520  08F2  00BF               	movwf	??_run_p2p_demo^(0+128)
  6521  08F3  30A0               	movlw	high (_DE| (0+32768))
  6522  08F4  00C0               	movwf	(??_run_p2p_demo^(0+128)+1)
  6523  08F5  0020               	movlb	0	; select bank0
  6524  08F6  082E               	movf	?___wmul,w
  6525  08F7  0021               	movlb	1	; select bank1
  6526  08F8  073F               	addwf	??_run_p2p_demo^(0+128),w
  6527  08F9  00C1               	movwf	(??_run_p2p_demo+2)^(0+128)
  6528  08FA  0020               	movlb	0	; select bank0
  6529  08FB  082F               	movf	?___wmul+1,w
  6530  08FC  0021               	movlb	1	; select bank1
  6531  08FD  3D40               	addwfc	(??_run_p2p_demo+1)^(0+128),w
  6532  08FE  00C2               	movwf	(??_run_p2p_demo+3)^(0+128)
  6533  08FF  085E               	movf	_i^(0+128),w
  6534  0900  0741               	addwf	(??_run_p2p_demo+2)^(0+128),w
  6535  0901  0084               	movwf	4
  6536  0902  0842               	movf	((??_run_p2p_demo+2)^(0+128)+1),w
  6537  0903  1803               	skipnc
  6538  0904  0A42               	incf	((??_run_p2p_demo+2)^(0+128)+1),w
  6539  0905  0085               	movwf	5
  6540  0906  0800               	movf	0,w	;code access
  6541  0907  0081               	movwf	1
  6542  0908  300B               	movlw	11
  6543  0909  0ADA               	incf	_TxData^(0+128),f
  6544  090A  0ADE               	incf	_i^(0+128),f
  6545  090B  025E               	subwf	_i^(0+128),w
  6546  090C  1C03               	skipc
  6547  090D  28DD               	goto	l9917
  6548                           
  6549                           ;p2p_demo.c: 160: }
  6550                           ;p2p_demo.c: 161: TxSynCount2++;
  6551  090E  0ADD               	incf	_TxSynCount2^(0+128),f
  6552                           
  6553                           ;p2p_demo.c: 162: if( MiApp_UnicastConnection(select_ed, 1) == 0 )
  6554  090F  01B8               	clrf	MiApp_UnicastConnection@SecEn^(0+128)
  6555  0910  0AB8               	incf	MiApp_UnicastConnection@SecEn^(0+128),f
  6556  0911  0022               	movlb	2	; select bank2
  6557  0912  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6558  0913  3198  202B  3188   	fcall	_MiApp_UnicastConnection
  6559  0916  3A00               	xorlw	0
  6560  0917  1D03               	skipz
  6561  0918  291D               	goto	l9931
  6562                           
  6563                           ;p2p_demo.c: 163: {
  6564                           ;p2p_demo.c: 164: DemoOutput_UnicastFail();
  6565  0919  31A7  2751  3188   	fcall	_DemoOutput_UnicastFail
  6566                           
  6567                           ;p2p_demo.c: 165: }
  6568  091C  291F               	goto	l9933
  6569  091D                     l9931:	
  6570                           
  6571                           ;p2p_demo.c: 166: else
  6572                           ;p2p_demo.c: 167: {
  6573                           ;p2p_demo.c: 169: TxNum++;
  6574  091D  0021               	movlb	1	; select bank1
  6575  091E  0ADB               	incf	_TxNum^(0+128),f
  6576  091F                     l9933:	
  6577                           
  6578                           ;p2p_demo.c: 170: }
  6579                           ;p2p_demo.c: 172: DemoOutput_UpdateTxRx(TxNum, RxNum);
  6580  091F  0021               	movlb	1	; select bank1
  6581  0920  0859               	movf	_RxNum^(0+128),w
  6582  0921  0020               	movlb	0	; select bank0
  6583  0922  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
  6584  0923  0021               	movlb	1	; select bank1
  6585  0924  085B               	movf	_TxNum^(0+128),w
  6586  0925  27D5               	fcall	_DemoOutput_UpdateTxRx
  6587                           
  6588                           ;p2p_demo.c: 173: DELAY_ms(1000);
  6589  0926  30E8               	movlw	232
  6590  0927  00B5               	movwf	DELAY_ms@ms
  6591  0928  3003               	movlw	3
  6592  0929  00B6               	movwf	DELAY_ms@ms+1
  6593  092A  3193  239D  3188   	fcall	_DELAY_ms
  6594                           
  6595                           ;p2p_demo.c: 174: DemoOutput_Instruction();
  6596  092D  27FB  3188         	fcall	_DemoOutput_Instruction
  6597                           
  6598                           ;p2p_demo.c: 176: break;
  6599  092F  285C               	goto	l9953
  6600  0930                     l9941:	
  6601                           
  6602                           ;p2p_demo.c: 179: else if(switch_val == 2)
  6603  0930  3002               	movlw	2
  6604  0931  065C               	xorwf	run_p2p_demo@switch_val^(0+256),w
  6605  0932  1D03               	btfss	3,2
  6606  0933  28CA               	goto	l9951
  6607                           
  6608                           ;p2p_demo.c: 180: {
  6609                           ;p2p_demo.c: 181: if (select_ed > conn_size-2)
  6610  0934  0020               	movlb	0	; select bank0
  6611  0935  0865               	movf	_conn_size,w
  6612  0936  3EFE               	addlw	254
  6613  0937  0021               	movlb	1	; select bank1
  6614  0938  00BF               	movwf	??_run_p2p_demo^(0+128)
  6615  0939  30FF               	movlw	255
  6616  093A  1803               	skipnc
  6617  093B  3000               	movlw	0
  6618  093C  00C0               	movwf	(??_run_p2p_demo^(0+128)+1)
  6619  093D  0840               	movf	(??_run_p2p_demo+1)^(0+128),w
  6620  093E  3A80               	xorlw	128
  6621  093F  00C1               	movwf	(??_run_p2p_demo+2)^(0+128)
  6622  0940  3080               	movlw	128
  6623  0941  0241               	subwf	(??_run_p2p_demo+2)^(0+128),w
  6624  0942  1D03               	skipz
  6625  0943  2948               	goto	u8905
  6626  0944  0022               	movlb	2	; select bank2
  6627  0945  085D               	movf	run_p2p_demo@select_ed^(0+256),w
  6628  0946  0021               	movlb	1	; select bank1
  6629  0947  023F               	subwf	??_run_p2p_demo^(0+128),w
  6630  0948                     u8905:	
  6631  0948  1803               	skipnc
  6632  0949  294D               	goto	l9947
  6633                           
  6634                           ;p2p_demo.c: 182: {
  6635                           ;p2p_demo.c: 184: select_ed = 0;
  6636  094A  0022               	movlb	2	; select bank2
  6637  094B  01DD               	clrf	run_p2p_demo@select_ed^(0+256)
  6638                           
  6639                           ;p2p_demo.c: 185: }
  6640  094C  294F               	goto	l9949
  6641  094D                     l9947:	
  6642                           
  6643                           ;p2p_demo.c: 186: else
  6644                           ;p2p_demo.c: 187: {
  6645                           ;p2p_demo.c: 189: select_ed = select_ed+1;
  6646  094D  0022               	movlb	2	; select bank2
  6647  094E  0ADD               	incf	run_p2p_demo@select_ed^(0+256),f
  6648  094F                     l9949:	
  6649                           
  6650                           ;p2p_demo.c: 190: }
  6651                           ;p2p_demo.c: 191: chk_sel_status = 0;
  6652  094F  0021               	movlb	1	; select bank1
  6653  0950  01EA               	clrf	_chk_sel_status^(0+128)
  6654  0951  28CA               	goto	l9951
  6655  0952                     l9957:	
  6656  0952  085A               	movf	run_p2p_demo@PressedButton^(0+256),w
  6657                           
  6658                           ; Switch size 1, requested type "speed"
  6659                           ; Number of cases is 2, Range of values is 1 to 2
  6660                           ; switch strategies available:
  6661                           ; Name         Instructions Cycles
  6662                           ; simple_byte            7     4 (average)
  6663                           ; direct_byte           13     9 (fixed)
  6664                           ; jumptable            263     9 (fixed)
  6665                           ;	Chosen strategy is simple_byte
  6666  0953  3A01               	xorlw	1	; case 1
  6667  0954  1903               	skipnz
  6668  0955  280D               	goto	l9863
  6669  0956  3A03               	xorlw	3	; case 2
  6670  0957  1903               	skipnz
  6671  0958  2855               	goto	l991
  6672  0959  295A               	goto	l1008
  6673  095A                     l1008:	
  6674  095A  0008               	return
  6675  095B                     __end_of_run_p2p_demo:	
  6676  095B                     __ptext67:	
  6677 ;; *************** function _LCD_Update *****************
  6678 ;; Defined at:
  6679 ;;		line 236 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;		None
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  i               1   28[BANK0 ] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 1F/0
  6690 ;;		On exit  : 1F/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;Total ram usage:        1 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    7
  6700 ;; This function calls:
  6701 ;;		_LCD_d_write
  6702 ;;		_LCD_i_write
  6703 ;; This function is called by:
  6704 ;;		_LCDTRXCount
  6705 ;;		_LCDDisplay
  6706 ;;		_run_p2p_demo
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function _LCD_Update
  6712  095B                     _LCD_Update:	
  6713  095B                     l8559:	
  6714                           ;incstack = 0
  6715                           ; Regs used in _LCD_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6716                           
  6717                           
  6718                           ;lcd.c: 238: uint8_t i;
  6719                           ;lcd.c: 240: LCD_i_write(0x80);
  6720  095B  3080               	movlw	128
  6721  095C  21DA  3188         	fcall	_LCD_i_write
  6722                           
  6723                           ;lcd.c: 242: for(i = 0; i < 16; i++)
  6724  095E  01BC               	clrf	LCD_Update@i
  6725  095F                     l8567:	
  6726                           
  6727                           ;lcd.c: 243: {
  6728                           ;lcd.c: 244: if( LCDText[i] == 0 )
  6729  095F  083C               	movf	LCD_Update@i,w
  6730  0960  3E48               	addlw	(low (_LCDText| (0+512)))& (0+255)
  6731  0961  0086               	movwf	6
  6732  0962  3002               	movlw	2	; select bank4/5
  6733  0963  0087               	movwf	7
  6734  0964  0801               	movf	1,w
  6735  0965  1D03               	btfss	3,2
  6736  0966  2969               	goto	l8571
  6737                           
  6738                           ;lcd.c: 245: {
  6739                           ;lcd.c: 246: LCD_d_write(' ');
  6740  0967  3020               	movlw	32
  6741  0968  296F               	goto	L40
  6742  0969                     l8571:	
  6743                           ;lcd.c: 247: }
  6744                           
  6745                           
  6746                           ;lcd.c: 248: else
  6747                           ;lcd.c: 249: {
  6748                           ;lcd.c: 250: LCD_d_write(LCDText[i]);
  6749  0969  083C               	movf	LCD_Update@i,w
  6750  096A  3E48               	addlw	(low (_LCDText| (0+512)))& (0+255)
  6751  096B  0086               	movwf	6
  6752  096C  3002               	movlw	2	; select bank4/5
  6753  096D  0087               	movwf	7
  6754  096E  0801               	movf	1,w
  6755  096F                     L40:	
  6756  096F  2193  3188         	fcall	_LCD_d_write
  6757  0971  3010               	movlw	16
  6758  0972  0ABC               	incf	LCD_Update@i,f
  6759  0973  023C               	subwf	LCD_Update@i,w
  6760  0974  1C03               	skipc
  6761  0975  295F               	goto	l8567
  6762                           
  6763                           ;lcd.c: 251: }
  6764                           ;lcd.c: 252: }
  6765                           ;lcd.c: 253: LCD_i_write(0xC0);
  6766  0976  30C0               	movlw	192
  6767  0977  21DA  3188         	fcall	_LCD_i_write
  6768                           
  6769                           ;lcd.c: 254: for(i = 16; i < 32; i++)
  6770  0979  3010               	movlw	16
  6771  097A  00BC               	movwf	LCD_Update@i
  6772  097B                     l8585:	
  6773                           
  6774                           ;lcd.c: 255: {
  6775                           ;lcd.c: 256: if( LCDText[i] == 0 )
  6776  097B  083C               	movf	LCD_Update@i,w
  6777  097C  3E48               	addlw	(low (_LCDText| (0+512)))& (0+255)
  6778  097D  0086               	movwf	6
  6779  097E  3002               	movlw	2	; select bank4/5
  6780  097F  0087               	movwf	7
  6781  0980  0801               	movf	1,w
  6782  0981  1D03               	btfss	3,2
  6783  0982  2985               	goto	l8589
  6784                           
  6785                           ;lcd.c: 257: {
  6786                           ;lcd.c: 258: LCD_d_write(' ');
  6787  0983  3020               	movlw	32
  6788  0984  298B               	goto	L41
  6789  0985                     l8589:	
  6790                           ;lcd.c: 259: }
  6791                           
  6792                           
  6793                           ;lcd.c: 260: else
  6794                           ;lcd.c: 261: {
  6795                           ;lcd.c: 262: LCD_d_write(LCDText[i]);
  6796  0985  083C               	movf	LCD_Update@i,w
  6797  0986  3E48               	addlw	(low (_LCDText| (0+512)))& (0+255)
  6798  0987  0086               	movwf	6
  6799  0988  3002               	movlw	2	; select bank4/5
  6800  0989  0087               	movwf	7
  6801  098A  0801               	movf	1,w
  6802  098B                     L41:	
  6803  098B  2193  3188         	fcall	_LCD_d_write
  6804  098D  3020               	movlw	32
  6805  098E  0ABC               	incf	LCD_Update@i,f
  6806  098F  023C               	subwf	LCD_Update@i,w
  6807  0990  1803               	btfsc	3,0
  6808  0991  0008               	return
  6809  0992  297B               	goto	l8585
  6810  0993                     __end_of_LCD_Update:	
  6811  0993                     __ptext69:	
  6812 ;; *************** function _LCD_d_write *****************
  6813 ;; Defined at:
  6814 ;;		line 140 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  v               1    wreg     unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  v               1   27[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0, pclath, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 1F/0
  6825 ;;		On exit  : 1F/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;Total ram usage:        1 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    6
  6835 ;; This function calls:
  6836 ;;		_DELAY_ms
  6837 ;;		_LCDWritePortA
  6838 ;;		_LCDWritePortB
  6839 ;; This function is called by:
  6840 ;;		_LCD_Update
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function _LCD_d_write
  6846  0993                     _LCD_d_write:	
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in _LCD_d_write: [wreg+status,2+status,0+pclath+cstack]
  6850                           ;LCD_d_write@v stored from wreg
  6851  0993  00BB               	movwf	LCD_d_write@v
  6852                           
  6853                           ;lcd.c: 142: DELAY_ms(1);
  6854  0994  01B5               	clrf	DELAY_ms@ms
  6855  0995  0AB5               	incf	DELAY_ms@ms,f
  6856  0996  01B6               	clrf	DELAY_ms@ms+1
  6857  0997  3193  239D  3188   	fcall	_DELAY_ms
  6858                           
  6859                           ;lcd.c: 143: LCDWritePortA(0x80);
  6860  099A  3080               	movlw	128
  6861  099B  21AF  3188         	fcall	_LCDWritePortA
  6862                           
  6863                           ;lcd.c: 144: LCDWritePortB(v);
  6864  099D  083B               	movf	LCD_d_write@v,w
  6865  099E  21F5  3188         	fcall	_LCDWritePortB
  6866                           
  6867                           ;lcd.c: 145: __nop();
  6868  09A0  0000               	nop
  6869                           
  6870                           ;lcd.c: 146: __nop();
  6871  09A1  0000               	nop
  6872                           
  6873                           ;lcd.c: 147: __nop();
  6874  09A2  0000               	nop
  6875                           
  6876                           ;lcd.c: 148: __nop();
  6877  09A3  0000               	nop
  6878                           
  6879                           ;lcd.c: 150: LCDWritePortA(0xC0);
  6880  09A4  30C0               	movlw	192
  6881  09A5  21AF  3188         	fcall	_LCDWritePortA
  6882                           
  6883                           ;lcd.c: 151: __nop();
  6884  09A7  0000               	nop
  6885                           
  6886                           ;lcd.c: 152: __nop();
  6887  09A8  0000               	nop
  6888                           
  6889                           ;lcd.c: 153: __nop();
  6890  09A9  0000               	nop
  6891                           
  6892                           ;lcd.c: 154: __nop();
  6893  09AA  0000               	nop
  6894                           
  6895                           ;lcd.c: 155: __nop();
  6896  09AB  0000               	nop
  6897                           
  6898                           ;lcd.c: 156: __nop();
  6899  09AC  0000               	nop
  6900                           
  6901                           ;lcd.c: 157: LCDWritePortA(0);
  6902  09AD  3000               	movlw	0
  6903  09AE  29AF               	ljmp	_LCDWritePortA
  6904  09AF                     __end_of_LCD_d_write:	
  6905  09AF                     __ptext74:	
  6906 ;; *************** function _LCDWritePortA *****************
  6907 ;; Defined at:
  6908 ;;		line 72 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  v               1    wreg     unsigned char 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  v               1   10[BANK0 ] unsigned char 
  6913 ;;  preRFIE         1   11[BANK0 ] unsigned char 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0, pclath, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 1F/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;Total ram usage:        2 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    5
  6930 ;; This function calls:
  6931 ;;		_SPIPut
  6932 ;; This function is called by:
  6933 ;;		_LCDInitWrite
  6934 ;;		_LCD_i_write
  6935 ;;		_LCD_d_write
  6936 ;;		_LCD_Initialize
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           
  6941                           ;psect for function _LCDWritePortA
  6942  09AF                     _LCDWritePortA:	
  6943                           
  6944                           ;incstack = 0
  6945                           ; Regs used in _LCDWritePortA: [wreg+status,2+status,0+pclath+cstack]
  6946                           ;LCDWritePortA@v stored from wreg
  6947  09AF  0020               	movlb	0	; select bank0
  6948  09B0  00AA               	movwf	LCDWritePortA@v
  6949                           
  6950                           ;lcd.c: 74: uint8_t preRFIE = INTCONbits.IOCIE;
  6951  09B1  3000               	movlw	0
  6952  09B2  198B               	btfsc	11,3	;volatile
  6953  09B3  3001               	movlw	1
  6954  09B4  00AB               	movwf	LCDWritePortA@preRFIE
  6955                           
  6956                           ;lcd.c: 75: INTCONbits.IOCIE = 0;
  6957  09B5  118B               	bcf	11,3	;volatile
  6958                           
  6959                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
  6960  09B6  0022               	movlb	2	; select bank2
  6961  09B7  110C               	bcf	12,2	;volatile
  6962                           
  6963                           ;lcd.c: 77: SPIPut(0x40);
  6964  09B8  3040               	movlw	64
  6965  09B9  21C9  3188         	fcall	_SPIPut
  6966                           
  6967                           ;lcd.c: 78: SPIPut(0x12);
  6968  09BB  3012               	movlw	18
  6969  09BC  21C9  3188         	fcall	_SPIPut
  6970                           
  6971                           ;lcd.c: 79: SPIPut(v);
  6972  09BE  082A               	movf	LCDWritePortA@v,w
  6973  09BF  21C9               	fcall	_SPIPut
  6974                           
  6975                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
  6976  09C0  0022               	movlb	2	; select bank2
  6977  09C1  150C               	bsf	12,2	;volatile
  6978                           
  6979                           ;lcd.c: 81: INTCONbits.IOCIE = preRFIE;
  6980  09C2  0020               	movlb	0	; select bank0
  6981  09C3  0C2B               	rrf	LCDWritePortA@preRFIE,w
  6982  09C4  1C03               	skipc
  6983  09C5  118B               	bcf	11,3	;volatile
  6984  09C6  1803               	skipnc
  6985  09C7  158B               	bsf	11,3	;volatile
  6986  09C8  0008               	return
  6987  09C9                     __end_of_LCDWritePortA:	
  6988  09C9                     __ptext75:	
  6989 ;; *************** function _SPIPut *****************
  6990 ;; Defined at:
  6991 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  v               1    wreg     unsigned char 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  v               1    9[BANK0 ] unsigned char 
  6996 ;;  i               1    0        unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg
  7001 ;; Tracked objects:
  7002 ;;		On entry : 1D/2
  7003 ;;		On exit  : 1F/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;Total ram usage:        1 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    4
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_PHYSetLongRAMAddr
  7017 ;;		_PHYSetShortRAMAddr
  7018 ;;		_PHYGetShortRAMAddr
  7019 ;;		_PHYGetLongRAMAddr
  7020 ;;		_EEPROM_Read
  7021 ;;		_LCDInitPortA
  7022 ;;		_LCDInitPortB
  7023 ;;		_LCDWritePortA
  7024 ;;		_LCDWritePortB
  7025 ;;		_SPIGet
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _SPIPut
  7031  09C9                     _SPIPut:	
  7032                           
  7033                           ;incstack = 0
  7034                           ; Regs used in _SPIPut: [wreg]
  7035                           ;SPIPut@v stored from wreg
  7036  09C9  0020               	movlb	0	; select bank0
  7037  09CA  00A9               	movwf	SPIPut@v
  7038                           
  7039                           ;spi.c: 47: uint8_t i;
  7040                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
  7041  09CB  1191               	bcf	17,3	;volatile
  7042                           
  7043                           ;spi.c: 64: i = SSP1BUF;
  7044  09CC  0024               	movlb	4	; select bank4
  7045  09CD  0811               	movf	17,w	;volatile
  7046  09CE                     l7531:	
  7047                           
  7048                           ;spi.c: 67: {
  7049                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
  7050  09CE  1395               	bcf	21,7	;volatile
  7051                           
  7052                           ;spi.c: 69: SSP1BUF = v;
  7053  09CF  0020               	movlb	0	; select bank0
  7054  09D0  0829               	movf	SPIPut@v,w
  7055  09D1  0024               	movlb	4	; select bank4
  7056  09D2  0091               	movwf	17	;volatile
  7057                           
  7058                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
  7059  09D3  1B95               	btfsc	21,7	;volatile
  7060  09D4  29CE               	goto	l7531
  7061  09D5                     l738:	
  7062  09D5  0020               	movlb	0	; select bank0
  7063  09D6  1D91               	btfss	17,3	;volatile
  7064  09D7  29D5               	goto	l738
  7065                           
  7066                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
  7067  09D8  1191               	bcf	17,3	;volatile
  7068  09D9  0008               	return
  7069  09DA                     __end_of_SPIPut:	
  7070  09DA                     __ptext68:	
  7071 ;; *************** function _LCD_i_write *****************
  7072 ;; Defined at:
  7073 ;;		line 118 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  v               1    wreg     unsigned char 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  v               1   27[BANK0 ] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  1    wreg      void 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0, pclath, cstack
  7082 ;; Tracked objects:
  7083 ;;		On entry : 1F/0
  7084 ;;		On exit  : 1F/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;Total ram usage:        1 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    6
  7094 ;; This function calls:
  7095 ;;		_DELAY_ms
  7096 ;;		_LCDWritePortA
  7097 ;;		_LCDWritePortB
  7098 ;; This function is called by:
  7099 ;;		_LCD_Update
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function _LCD_i_write
  7105  09DA                     _LCD_i_write:	
  7106                           
  7107                           ;incstack = 0
  7108                           ; Regs used in _LCD_i_write: [wreg+status,2+status,0+pclath+cstack]
  7109                           ;LCD_i_write@v stored from wreg
  7110  09DA  00BB               	movwf	LCD_i_write@v
  7111                           
  7112                           ;lcd.c: 120: LCDWritePortA(0);
  7113  09DB  3000               	movlw	0
  7114  09DC  21AF               	fcall	_LCDWritePortA
  7115                           
  7116                           ;lcd.c: 121: DELAY_ms(1);
  7117  09DD  01B5               	clrf	DELAY_ms@ms
  7118  09DE  0AB5               	incf	DELAY_ms@ms,f
  7119  09DF  01B6               	clrf	DELAY_ms@ms+1
  7120  09E0  3193  239D  3188   	fcall	_DELAY_ms
  7121                           
  7122                           ;lcd.c: 122: LCDWritePortB(v);
  7123  09E3  083B               	movf	LCD_i_write@v,w
  7124  09E4  21F5  3188         	fcall	_LCDWritePortB
  7125                           
  7126                           ;lcd.c: 123: __nop();
  7127  09E6  0000               	nop
  7128                           
  7129                           ;lcd.c: 124: __nop();
  7130  09E7  0000               	nop
  7131                           
  7132                           ;lcd.c: 125: __nop();
  7133  09E8  0000               	nop
  7134                           
  7135                           ;lcd.c: 126: __nop();
  7136  09E9  0000               	nop
  7137                           
  7138                           ;lcd.c: 127: LCDWritePortA(0x40);
  7139  09EA  3040               	movlw	64
  7140  09EB  21AF  3188         	fcall	_LCDWritePortA
  7141                           
  7142                           ;lcd.c: 128: __nop();
  7143  09ED  0000               	nop
  7144                           
  7145                           ;lcd.c: 129: __nop();
  7146  09EE  0000               	nop
  7147                           
  7148                           ;lcd.c: 130: __nop();
  7149  09EF  0000               	nop
  7150                           
  7151                           ;lcd.c: 131: __nop();
  7152  09F0  0000               	nop
  7153                           
  7154                           ;lcd.c: 132: __nop();
  7155  09F1  0000               	nop
  7156                           
  7157                           ;lcd.c: 133: __nop();
  7158  09F2  0000               	nop
  7159                           
  7160                           ;lcd.c: 136: LCDWritePortA(0x00);
  7161  09F3  3000               	movlw	0
  7162  09F4  29AF               	ljmp	_LCDWritePortA
  7163  09F5                     __end_of_LCD_i_write:	
  7164  09F5                     __ptext73:	
  7165 ;; *************** function _LCDWritePortB *****************
  7166 ;; Defined at:
  7167 ;;		line 84 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  v               1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  v               1   10[BANK0 ] unsigned char 
  7172 ;;  preRFIE         1   11[BANK0 ] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0, pclath, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 1F/0
  7179 ;;		On exit  : 1F/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;Total ram usage:        2 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    5
  7189 ;; This function calls:
  7190 ;;		_SPIPut
  7191 ;; This function is called by:
  7192 ;;		_LCDInitWrite
  7193 ;;		_LCD_i_write
  7194 ;;		_LCD_d_write
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function _LCDWritePortB
  7200  09F5                     _LCDWritePortB:	
  7201                           
  7202                           ;incstack = 0
  7203                           ; Regs used in _LCDWritePortB: [wreg+status,2+status,0+pclath+cstack]
  7204                           ;LCDWritePortB@v stored from wreg
  7205  09F5  00AA               	movwf	LCDWritePortB@v
  7206                           
  7207                           ;lcd.c: 86: uint8_t preRFIE = INTCONbits.IOCIE;
  7208  09F6  3000               	movlw	0
  7209  09F7  198B               	btfsc	11,3	;volatile
  7210  09F8  3001               	movlw	1
  7211  09F9  00AB               	movwf	LCDWritePortB@preRFIE
  7212                           
  7213                           ;lcd.c: 87: INTCONbits.IOCIE = 0;
  7214  09FA  118B               	bcf	11,3	;volatile
  7215                           
  7216                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
  7217  09FB  0022               	movlb	2	; select bank2
  7218  09FC  110C               	bcf	12,2	;volatile
  7219                           
  7220                           ;lcd.c: 89: SPIPut(0x40);
  7221  09FD  3040               	movlw	64
  7222  09FE  21C9  3188         	fcall	_SPIPut
  7223                           
  7224                           ;lcd.c: 90: SPIPut(0x13);
  7225  0A00  3013               	movlw	19
  7226  0A01  21C9  3188         	fcall	_SPIPut
  7227                           
  7228                           ;lcd.c: 91: SPIPut(v);
  7229  0A03  082A               	movf	LCDWritePortB@v,w
  7230  0A04  21C9               	fcall	_SPIPut
  7231                           
  7232                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
  7233  0A05  0022               	movlb	2	; select bank2
  7234  0A06  150C               	bsf	12,2	;volatile
  7235                           
  7236                           ;lcd.c: 93: INTCONbits.IOCIE = preRFIE;
  7237  0A07  0020               	movlb	0	; select bank0
  7238  0A08  0C2B               	rrf	LCDWritePortB@preRFIE,w
  7239  0A09  1C03               	skipc
  7240  0A0A  118B               	bcf	11,3	;volatile
  7241  0A0B  1803               	skipnc
  7242  0A0C  158B               	bsf	11,3	;volatile
  7243  0A0D  0008               	return
  7244  0A0E                     __end_of_LCDWritePortB:	
  7245  0A0E                     __ptext57:	
  7246 ;; *************** function ___lbmod *****************
  7247 ;; Defined at:
  7248 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  dividend        1    wreg     unsigned char 
  7251 ;;  divisor         1    9[BANK0 ] unsigned char 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  dividend        1   11[BANK0 ] unsigned char 
  7254 ;;  rem             1   13[BANK0 ] unsigned char 
  7255 ;;  counter         1   12[BANK0 ] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      unsigned char 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 1E/1
  7262 ;;		On exit  : 1F/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7265 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;Total ram usage:        5 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    4
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_CONSOLE_PrintDec
  7276 ;;		_run_p2p_demo
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           
  7281                           ;psect for function ___lbmod
  7282  0A0E                     ___lbmod:	
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  7286                           ;___lbmod@dividend stored from wreg
  7287  0A0E  0020               	movlb	0	; select bank0
  7288  0A0F  00AB               	movwf	___lbmod@dividend
  7289  0A10  3008               	movlw	8
  7290  0A11  00AC               	movwf	___lbmod@counter
  7291  0A12  01AD               	clrf	___lbmod@rem
  7292  0A13                     l9305:	
  7293  0A13  082B               	movf	___lbmod@dividend,w
  7294  0A14  00AA               	movwf	??___lbmod
  7295  0A15  3007               	movlw	7
  7296  0A16                     u8425:	
  7297  0A16  36AA               	lsrf	??___lbmod,f
  7298  0A17  0B89               	decfsz	9,f
  7299  0A18  2A16               	goto	u8425
  7300  0A19  352D               	lslf	___lbmod@rem,w
  7301  0A1A  042A               	iorwf	??___lbmod,w
  7302  0A1B  00AD               	movwf	___lbmod@rem
  7303  0A1C  35AB               	lslf	___lbmod@dividend,f
  7304  0A1D  0829               	movf	___lbmod@divisor,w
  7305  0A1E  022D               	subwf	___lbmod@rem,w
  7306  0A1F  1C03               	skipc
  7307  0A20  2A23               	goto	l9313
  7308  0A21  0829               	movf	___lbmod@divisor,w
  7309  0A22  02AD               	subwf	___lbmod@rem,f
  7310  0A23                     l9313:	
  7311  0A23  0BAC               	decfsz	___lbmod@counter,f
  7312  0A24  2A13               	goto	l9305
  7313  0A25  082D               	movf	___lbmod@rem,w
  7314  0A26  0008               	return
  7315  0A27                     __end_of___lbmod:	
  7316  0A27                     __ptext43:	
  7317 ;; *************** function _MiMAC_ReceivedPacket *****************
  7318 ;; Defined at:
  7319 ;;		line 366 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  bIntraPAN       1   32[BANK0 ] unsigned char 
  7324 ;;  addrMode        1   30[BANK0 ] unsigned char 
  7325 ;;  i               1   31[BANK0 ] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      unsigned char 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 1F/1
  7332 ;;		On exit  : 1E/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;Total ram usage:       11 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    6
  7342 ;; This function calls:
  7343 ;;		_MiMAC_DiscardPacket
  7344 ;;		___wmul
  7345 ;; This function is called by:
  7346 ;;		_P2PTasks
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _MiMAC_ReceivedPacket
  7352  0A27                     _MiMAC_ReceivedPacket:	
  7353                           
  7354                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
  7355                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB1 == 0)
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _MiMAC_ReceivedPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7359  0A27  0020               	movlb	0	; select bank0
  7360  0A28  188D               	btfsc	13,1	;volatile
  7361  0A29  2A2C               	goto	l90
  7362                           
  7363                           ;drv_mrf_miwi_24j40.c: 372: {
  7364                           ;drv_mrf_miwi_24j40.c: 373: IOCBFbits.IOCBF1 = 1;
  7365  0A2A  0027               	movlb	7	; select bank7
  7366  0A2B  1496               	bsf	22,1	;volatile
  7367  0A2C                     l90:	
  7368                           
  7369                           ;drv_mrf_miwi_24j40.c: 374: }
  7370                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
  7371  0A2C  0020               	movlb	0	; select bank0
  7372  0A2D  1C5E               	btfss	_MRF24J40Status,0	;volatile
  7373  0A2E  2A3F               	goto	l8291
  7374                           
  7375                           ;drv_mrf_miwi_24j40.c: 380: {
  7376                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((10000000)/4)/1000
      +                          000)))
  7377  0A2F  3000               	movlw	0
  7378  0A30  0022               	movlb	2	; select bank2
  7379  0A31  0235               	subwf	(_failureCounter+1)^(0+256),w	;volatile
  7380  0A32  3040               	movlw	64
  7381  0A33  1903               	skipnz
  7382  0A34  0234               	subwf	_failureCounter^(0+256),w	;volatile
  7383  0A35  1C03               	skipc
  7384  0A36  2A3C               	goto	l8289
  7385                           
  7386                           ;drv_mrf_miwi_24j40.c: 382: {
  7387                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
  7388  0A37  01B4               	clrf	_failureCounter^(0+256)	;volatile
  7389  0A38  01B5               	clrf	(_failureCounter+1)^(0+256)	;volatile
  7390                           
  7391                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
  7392  0A39  0020               	movlb	0	; select bank0
  7393  0A3A  105E               	bcf	_MRF24J40Status,0	;volatile
  7394                           
  7395                           ;drv_mrf_miwi_24j40.c: 385: } else
  7396  0A3B  2A3F               	goto	l8291
  7397  0A3C                     l8289:	
  7398                           
  7399                           ;drv_mrf_miwi_24j40.c: 386: {
  7400                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
  7401  0A3C  0AB4               	incf	_failureCounter^(0+256),f	;volatile
  7402  0A3D  1903               	skipnz
  7403  0A3E  0AB5               	incf	(_failureCounter+1)^(0+256),f	;volatile
  7404  0A3F                     l8291:	
  7405                           
  7406                           ;drv_mrf_miwi_24j40.c: 388: }
  7407                           ;drv_mrf_miwi_24j40.c: 389: }
  7408                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
  7409  0A3F  30FF               	movlw	255
  7410  0A40  0020               	movlb	0	; select bank0
  7411  0A41  00E6               	movwf	_BankIndex
  7412                           
  7413                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
  7414  0A42  01BF               	clrf	MiMAC_ReceivedPacket@i
  7415  0A43                     l8299:	
  7416                           
  7417                           ;drv_mrf_miwi_24j40.c: 393: {
  7418                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
  7419  0A43  083F               	movf	MiMAC_ReceivedPacket@i,w
  7420  0A44  00AE               	movwf	___wmul@multiplier
  7421  0A45  3045               	movlw	69
  7422  0A46  01AF               	clrf	___wmul@multiplier+1
  7423  0A47  00B0               	movwf	___wmul@multiplicand
  7424  0A48  01B1               	clrf	___wmul@multiplicand+1
  7425  0A49  275B  3188         	fcall	___wmul
  7426  0A4B  3066               	movlw	102
  7427  0A4C  00B6               	movwf	??_MiMAC_ReceivedPacket
  7428  0A4D  3023               	movlw	35
  7429  0A4E  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7430  0A4F  082E               	movf	?___wmul,w
  7431  0A50  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7432  0A51  0086               	movwf	6
  7433  0A52  082F               	movf	?___wmul+1,w
  7434  0A53  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7435  0A54  0087               	movwf	7
  7436  0A55  0801               	movf	1,w
  7437  0A56  1903               	btfsc	3,2
  7438  0A57  2A5B               	goto	l8303
  7439                           
  7440                           ;drv_mrf_miwi_24j40.c: 395: {
  7441                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
  7442  0A58  083F               	movf	MiMAC_ReceivedPacket@i,w
  7443  0A59  00E6               	movwf	_BankIndex
  7444                           
  7445                           ;drv_mrf_miwi_24j40.c: 397: break;
  7446  0A5A  2A60               	goto	l8307
  7447  0A5B                     l8303:	
  7448  0A5B  3002               	movlw	2
  7449  0A5C  0ABF               	incf	MiMAC_ReceivedPacket@i,f
  7450  0A5D  023F               	subwf	MiMAC_ReceivedPacket@i,w
  7451  0A5E  1C03               	skipc
  7452  0A5F  2A43               	goto	l8299
  7453  0A60                     l8307:	
  7454                           
  7455                           ;drv_mrf_miwi_24j40.c: 398: }
  7456                           ;drv_mrf_miwi_24j40.c: 399: }
  7457                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
  7458  0A60  3002               	movlw	2
  7459  0A61  0266               	subwf	_BankIndex,w
  7460  0A62  1803               	skipnc
  7461  0A63  3400               	retlw	0
  7462                           
  7463                           ;drv_mrf_miwi_24j40.c: 403: {
  7464                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
  7465                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
  7466  0A64  01C0               	clrf	MiMAC_ReceivedPacket@bIntraPAN
  7467  0A65  0AC0               	incf	MiMAC_ReceivedPacket@bIntraPAN,f
  7468                           
  7469                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
  7470  0A66  0866               	movf	_BankIndex,w
  7471  0A67  00AE               	movwf	___wmul@multiplier
  7472  0A68  3045               	movlw	69
  7473  0A69  01AF               	clrf	___wmul@multiplier+1
  7474  0A6A  00B0               	movwf	___wmul@multiplicand
  7475  0A6B  01B1               	clrf	___wmul@multiplicand+1
  7476  0A6C  275B  3188         	fcall	___wmul
  7477  0A6E  3067               	movlw	103
  7478  0A6F  00B6               	movwf	??_MiMAC_ReceivedPacket
  7479  0A70  3023               	movlw	35
  7480  0A71  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7481  0A72  082E               	movf	?___wmul,w
  7482  0A73  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7483  0A74  0086               	movwf	6
  7484  0A75  082F               	movf	?___wmul+1,w
  7485  0A76  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7486  0A77  0087               	movwf	7
  7487  0A78  1F01               	btfss	1,6
  7488                           
  7489                           ;drv_mrf_miwi_24j40.c: 409: {
  7490                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
  7491  0A79  01C0               	clrf	MiMAC_ReceivedPacket@bIntraPAN
  7492                           
  7493                           ;drv_mrf_miwi_24j40.c: 411: }
  7494                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
  7495  0A7A  0021               	movlb	1	; select bank1
  7496  0A7B  3045               	movlw	69
  7497  0A7C  01C7               	clrf	_MACRxPacket^(0+128)
  7498                           
  7499                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
  7500  0A7D  01CF               	clrf	(_MACRxPacket^(0+128)+8)
  7501                           
  7502                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
  7503  0A7E  0020               	movlb	0	; select bank0
  7504  0A7F  00B0               	movwf	___wmul@multiplicand
  7505  0A80  01B1               	clrf	___wmul@multiplicand+1
  7506  0A81  0866               	movf	_BankIndex,w
  7507  0A82  00AE               	movwf	___wmul@multiplier
  7508  0A83  01AF               	clrf	___wmul@multiplier+1
  7509  0A84  275B  3188         	fcall	___wmul
  7510  0A86  3068               	movlw	104
  7511  0A87  00B6               	movwf	??_MiMAC_ReceivedPacket
  7512  0A88  3023               	movlw	35
  7513  0A89  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7514  0A8A  082E               	movf	?___wmul,w
  7515  0A8B  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7516  0A8C  0086               	movwf	6
  7517  0A8D  082F               	movf	?___wmul+1,w
  7518  0A8E  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7519  0A8F  0087               	movwf	7
  7520  0A90  0801               	movf	1,w
  7521  0A91  00BE               	movwf	MiMAC_ReceivedPacket@addrMode
  7522  0A92  30CC               	movlw	204
  7523  0A93  05BE               	andwf	MiMAC_ReceivedPacket@addrMode,f
  7524                           
  7525                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
  7526  0A94  2E9B               	goto	l8411
  7527  0A95                     l8319:	
  7528                           
  7529                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  7530  0A95  0866               	movf	_BankIndex,w
  7531  0A96  00AE               	movwf	___wmul@multiplier
  7532  0A97  3045               	movlw	69
  7533  0A98  01AF               	clrf	___wmul@multiplier+1
  7534  0A99  00B0               	movwf	___wmul@multiplicand
  7535  0A9A  01B1               	clrf	___wmul@multiplicand+1
  7536  0A9B  275B  3188         	fcall	___wmul
  7537  0A9D  306C               	movlw	108
  7538  0A9E  00B6               	movwf	??_MiMAC_ReceivedPacket
  7539  0A9F  3023               	movlw	35
  7540  0AA0  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7541  0AA1  082E               	movf	?___wmul,w
  7542  0AA2  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7543  0AA3  0086               	movwf	6
  7544  0AA4  082F               	movf	?___wmul+1,w
  7545  0AA5  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7546  0AA6  0087               	movwf	7
  7547  0AA7  0F01               	incfsz	1,w
  7548  0AA8  2ABF               	goto	l101
  7549  0AA9  0866               	movf	_BankIndex,w
  7550  0AAA  00AE               	movwf	___wmul@multiplier
  7551  0AAB  3045               	movlw	69
  7552  0AAC  01AF               	clrf	___wmul@multiplier+1
  7553  0AAD  00B0               	movwf	___wmul@multiplicand
  7554  0AAE  01B1               	clrf	___wmul@multiplicand+1
  7555  0AAF  275B  3188         	fcall	___wmul
  7556  0AB1  306D               	movlw	109
  7557  0AB2  00B6               	movwf	??_MiMAC_ReceivedPacket
  7558  0AB3  3023               	movlw	35
  7559  0AB4  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7560  0AB5  082E               	movf	?___wmul,w
  7561  0AB6  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7562  0AB7  0086               	movwf	6
  7563  0AB8  082F               	movf	?___wmul+1,w
  7564  0AB9  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7565  0ABA  0087               	movwf	7
  7566  0ABB  0F01               	incfsz	1,w
  7567  0ABC  2ABF               	goto	l101
  7568                           
  7569                           ;drv_mrf_miwi_24j40.c: 423: {
  7570                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
  7571  0ABD  0021               	movlb	1	; select bank1
  7572  0ABE  1547               	bsf	_MACRxPacket^(0+128),2
  7573  0ABF                     l101:	
  7574                           
  7575                           ;drv_mrf_miwi_24j40.c: 425: }
  7576                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
  7577  0ABF  0021               	movlb	1	; select bank1
  7578  0AC0  17C7               	bsf	_MACRxPacket^(0+128),7
  7579                           
  7580                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
  7581  0AC1  0020               	movlb	0	; select bank0
  7582  0AC2  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
  7583  0AC3  1903               	btfsc	3,2
  7584  0AC4  2B2C               	goto	l8333
  7585                           
  7586                           ;drv_mrf_miwi_24j40.c: 431: {
  7587                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  7588  0AC5  0866               	movf	_BankIndex,w
  7589  0AC6  00AE               	movwf	___wmul@multiplier
  7590  0AC7  3045               	movlw	69
  7591  0AC8  01AF               	clrf	___wmul@multiplier+1
  7592  0AC9  00B0               	movwf	___wmul@multiplicand
  7593  0ACA  01B1               	clrf	___wmul@multiplicand+1
  7594  0ACB  275B  3188         	fcall	___wmul
  7595  0ACD  306A               	movlw	106
  7596  0ACE  00B6               	movwf	??_MiMAC_ReceivedPacket
  7597  0ACF  3023               	movlw	35
  7598  0AD0  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7599  0AD1  082E               	movf	?___wmul,w
  7600  0AD2  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7601  0AD3  0086               	movwf	6
  7602  0AD4  082F               	movf	?___wmul+1,w
  7603  0AD5  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7604  0AD6  0087               	movwf	7
  7605  0AD7  0801               	movf	1,w
  7606  0AD8  0021               	movlb	1	; select bank1
  7607  0AD9  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  7608                           
  7609                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  7610  0ADA  0020               	movlb	0	; select bank0
  7611  0ADB  0866               	movf	_BankIndex,w
  7612  0ADC  00AE               	movwf	___wmul@multiplier
  7613  0ADD  3045               	movlw	69
  7614  0ADE  01AF               	clrf	___wmul@multiplier+1
  7615  0ADF  00B0               	movwf	___wmul@multiplicand
  7616  0AE0  01B1               	clrf	___wmul@multiplicand+1
  7617  0AE1  275B  3188         	fcall	___wmul
  7618  0AE3  306B               	movlw	107
  7619  0AE4  00B6               	movwf	??_MiMAC_ReceivedPacket
  7620  0AE5  3023               	movlw	35
  7621  0AE6  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7622  0AE7  082E               	movf	?___wmul,w
  7623  0AE8  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7624  0AE9  0086               	movwf	6
  7625  0AEA  082F               	movf	?___wmul+1,w
  7626  0AEB  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7627  0AEC  0087               	movwf	7
  7628  0AED  0801               	movf	1,w
  7629  0AEE  0021               	movlb	1	; select bank1
  7630  0AEF  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  7631                           
  7632                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  7633  0AF0  0020               	movlb	0	; select bank0
  7634  0AF1  0866               	movf	_BankIndex,w
  7635  0AF2  00AE               	movwf	___wmul@multiplier
  7636  0AF3  3045               	movlw	69
  7637  0AF4  01AF               	clrf	___wmul@multiplier+1
  7638  0AF5  00B0               	movwf	___wmul@multiplicand
  7639  0AF6  01B1               	clrf	___wmul@multiplicand+1
  7640  0AF7  275B  3188         	fcall	___wmul
  7641  0AF9  306E               	movlw	110
  7642  0AFA                     L17:	
  7643  0AFA  00B6               	movwf	??_MiMAC_ReceivedPacket
  7644  0AFB  3023               	movlw	35
  7645  0AFC  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7646  0AFD  082E               	movf	?___wmul,w
  7647  0AFE  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7648  0AFF  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  7649  0B00  082F               	movf	?___wmul+1,w
  7650  0B01  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7651  0B02  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  7652  0B03  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  7653  0B04  0021               	movlb	1	; select bank1
  7654  0B05  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  7655  0B06  0020               	movlb	0	; select bank0
  7656  0B07  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  7657  0B08  0021               	movlb	1	; select bank1
  7658  0B09  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  7659                           
  7660                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
  7661  0B0A  0020               	movlb	0	; select bank0
  7662  0B0B  0866               	movf	_BankIndex,w
  7663  0B0C  00AE               	movwf	___wmul@multiplier
  7664  0B0D  3045               	movlw	69
  7665  0B0E  01AF               	clrf	___wmul@multiplier+1
  7666  0B0F  00B0               	movwf	___wmul@multiplicand
  7667  0B10  01B1               	clrf	___wmul@multiplicand+1
  7668  0B11  275B  3188         	fcall	___wmul
  7669  0B13  3066               	movlw	102
  7670  0B14  00B6               	movwf	??_MiMAC_ReceivedPacket
  7671  0B15  3023               	movlw	35
  7672  0B16  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7673  0B17  082E               	movf	?___wmul,w
  7674  0B18  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7675  0B19  0086               	movwf	6
  7676  0B1A  082F               	movf	?___wmul+1,w
  7677  0B1B  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7678  0B1C  0087               	movwf	7
  7679  0B1D  0801               	movf	1,w
  7680  0B1E  3EED               	addlw	237
  7681  0B1F  0021               	movlb	1	; select bank1
  7682  0B20  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  7683                           
  7684                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
  7685  0B21  0020               	movlb	0	; select bank0
  7686  0B22  0866               	movf	_BankIndex,w
  7687  0B23  00AE               	movwf	___wmul@multiplier
  7688  0B24  3045               	movlw	69
  7689  0B25  01AF               	clrf	___wmul@multiplier+1
  7690  0B26  00B0               	movwf	___wmul@multiplicand
  7691  0B27  01B1               	clrf	___wmul@multiplicand+1
  7692  0B28  275B  3188         	fcall	___wmul
  7693  0B2A  3076               	movlw	118
  7694  0B2B  2E87               	goto	L16
  7695  0B2C                     l8333:	
  7696                           ;drv_mrf_miwi_24j40.c: 440: }
  7697                           
  7698                           
  7699                           ;drv_mrf_miwi_24j40.c: 442: else
  7700                           ;drv_mrf_miwi_24j40.c: 443: {
  7701                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  7702  0B2C  0866               	movf	_BankIndex,w
  7703  0B2D  00AE               	movwf	___wmul@multiplier
  7704  0B2E  3045               	movlw	69
  7705  0B2F  01AF               	clrf	___wmul@multiplier+1
  7706  0B30  00B0               	movwf	___wmul@multiplicand
  7707  0B31  01B1               	clrf	___wmul@multiplicand+1
  7708  0B32  275B  3188         	fcall	___wmul
  7709  0B34  306E               	movlw	110
  7710  0B35  00B6               	movwf	??_MiMAC_ReceivedPacket
  7711  0B36  3023               	movlw	35
  7712  0B37  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7713  0B38  082E               	movf	?___wmul,w
  7714  0B39  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7715  0B3A  0086               	movwf	6
  7716  0B3B  082F               	movf	?___wmul+1,w
  7717  0B3C  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7718  0B3D  0087               	movwf	7
  7719  0B3E  0801               	movf	1,w
  7720  0B3F  0021               	movlb	1	; select bank1
  7721  0B40  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  7722                           
  7723                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  7724  0B41  0020               	movlb	0	; select bank0
  7725  0B42  0866               	movf	_BankIndex,w
  7726  0B43  00AE               	movwf	___wmul@multiplier
  7727  0B44  3045               	movlw	69
  7728  0B45  01AF               	clrf	___wmul@multiplier+1
  7729  0B46  00B0               	movwf	___wmul@multiplicand
  7730  0B47  01B1               	clrf	___wmul@multiplicand+1
  7731  0B48  275B  3188         	fcall	___wmul
  7732  0B4A  306F               	movlw	111
  7733  0B4B  00B6               	movwf	??_MiMAC_ReceivedPacket
  7734  0B4C  3023               	movlw	35
  7735  0B4D  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7736  0B4E  082E               	movf	?___wmul,w
  7737  0B4F  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7738  0B50  0086               	movwf	6
  7739  0B51  082F               	movf	?___wmul+1,w
  7740  0B52  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7741  0B53  0087               	movwf	7
  7742  0B54  0801               	movf	1,w
  7743  0B55  0021               	movlb	1	; select bank1
  7744  0B56  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  7745                           
  7746                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  7747  0B57  0020               	movlb	0	; select bank0
  7748  0B58  0866               	movf	_BankIndex,w
  7749  0B59  00AE               	movwf	___wmul@multiplier
  7750  0B5A  3045               	movlw	69
  7751  0B5B  01AF               	clrf	___wmul@multiplier+1
  7752  0B5C  00B0               	movwf	___wmul@multiplicand
  7753  0B5D  01B1               	clrf	___wmul@multiplicand+1
  7754  0B5E  275B  3188         	fcall	___wmul
  7755  0B60  3070               	movlw	112
  7756  0B61                     L18:	
  7757  0B61  00B6               	movwf	??_MiMAC_ReceivedPacket
  7758  0B62  3023               	movlw	35
  7759  0B63  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7760  0B64  082E               	movf	?___wmul,w
  7761  0B65  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7762  0B66  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  7763  0B67  082F               	movf	?___wmul+1,w
  7764  0B68  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7765  0B69  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  7766  0B6A  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  7767  0B6B  0021               	movlb	1	; select bank1
  7768  0B6C  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  7769  0B6D  0020               	movlb	0	; select bank0
  7770  0B6E  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  7771  0B6F  0021               	movlb	1	; select bank1
  7772  0B70  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  7773                           
  7774                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
  7775  0B71  0020               	movlb	0	; select bank0
  7776  0B72  0866               	movf	_BankIndex,w
  7777  0B73  00AE               	movwf	___wmul@multiplier
  7778  0B74  3045               	movlw	69
  7779  0B75  01AF               	clrf	___wmul@multiplier+1
  7780  0B76  00B0               	movwf	___wmul@multiplicand
  7781  0B77  01B1               	clrf	___wmul@multiplicand+1
  7782  0B78  275B  3188         	fcall	___wmul
  7783  0B7A  3066               	movlw	102
  7784  0B7B  00B6               	movwf	??_MiMAC_ReceivedPacket
  7785  0B7C  3023               	movlw	35
  7786  0B7D  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7787  0B7E  082E               	movf	?___wmul,w
  7788  0B7F  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7789  0B80  0086               	movwf	6
  7790  0B81  082F               	movf	?___wmul+1,w
  7791  0B82  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7792  0B83  0087               	movwf	7
  7793  0B84  0801               	movf	1,w
  7794  0B85  3EEB               	addlw	235
  7795  0B86  0021               	movlb	1	; select bank1
  7796  0B87  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  7797                           
  7798                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
  7799  0B88  0020               	movlb	0	; select bank0
  7800  0B89  0866               	movf	_BankIndex,w
  7801  0B8A  00AE               	movwf	___wmul@multiplier
  7802  0B8B  3045               	movlw	69
  7803  0B8C  01AF               	clrf	___wmul@multiplier+1
  7804  0B8D  00B0               	movwf	___wmul@multiplicand
  7805  0B8E  01B1               	clrf	___wmul@multiplicand+1
  7806  0B8F  275B  3188         	fcall	___wmul
  7807  0B91  3078               	movlw	120
  7808  0B92  2E87               	goto	L16
  7809  0B93                     l105:	
  7810                           ;drv_mrf_miwi_24j40.c: 454: case 0xCC:
  7811                           
  7812                           
  7813                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
  7814  0B93  0021               	movlb	1	; select bank1
  7815  0B94  17C7               	bsf	_MACRxPacket^(0+128),7
  7816                           
  7817                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
  7818  0B95  0020               	movlb	0	; select bank0
  7819  0B96  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
  7820  0B97  1903               	btfsc	3,2
  7821  0B98  2C00               	goto	l8347
  7822                           
  7823                           ;drv_mrf_miwi_24j40.c: 459: {
  7824                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  7825  0B99  0866               	movf	_BankIndex,w
  7826  0B9A  00AE               	movwf	___wmul@multiplier
  7827  0B9B  3045               	movlw	69
  7828  0B9C  01AF               	clrf	___wmul@multiplier+1
  7829  0B9D  00B0               	movwf	___wmul@multiplicand
  7830  0B9E  01B1               	clrf	___wmul@multiplicand+1
  7831  0B9F  275B  3188         	fcall	___wmul
  7832  0BA1  306A               	movlw	106
  7833  0BA2  00B6               	movwf	??_MiMAC_ReceivedPacket
  7834  0BA3  3023               	movlw	35
  7835  0BA4  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7836  0BA5  082E               	movf	?___wmul,w
  7837  0BA6  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7838  0BA7  0086               	movwf	6
  7839  0BA8  082F               	movf	?___wmul+1,w
  7840  0BA9  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7841  0BAA  0087               	movwf	7
  7842  0BAB  0801               	movf	1,w
  7843  0BAC  0021               	movlb	1	; select bank1
  7844  0BAD  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  7845                           
  7846                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  7847  0BAE  0020               	movlb	0	; select bank0
  7848  0BAF  0866               	movf	_BankIndex,w
  7849  0BB0  00AE               	movwf	___wmul@multiplier
  7850  0BB1  3045               	movlw	69
  7851  0BB2  01AF               	clrf	___wmul@multiplier+1
  7852  0BB3  00B0               	movwf	___wmul@multiplicand
  7853  0BB4  01B1               	clrf	___wmul@multiplicand+1
  7854  0BB5  275B  3188         	fcall	___wmul
  7855  0BB7  306B               	movlw	107
  7856  0BB8  00B6               	movwf	??_MiMAC_ReceivedPacket
  7857  0BB9  3023               	movlw	35
  7858  0BBA  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7859  0BBB  082E               	movf	?___wmul,w
  7860  0BBC  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7861  0BBD  0086               	movwf	6
  7862  0BBE  082F               	movf	?___wmul+1,w
  7863  0BBF  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7864  0BC0  0087               	movwf	7
  7865  0BC1  0801               	movf	1,w
  7866  0BC2  0021               	movlb	1	; select bank1
  7867  0BC3  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  7868                           
  7869                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
  7870  0BC4  0020               	movlb	0	; select bank0
  7871  0BC5  0866               	movf	_BankIndex,w
  7872  0BC6  00AE               	movwf	___wmul@multiplier
  7873  0BC7  3045               	movlw	69
  7874  0BC8  01AF               	clrf	___wmul@multiplier+1
  7875  0BC9  00B0               	movwf	___wmul@multiplicand
  7876  0BCA  01B1               	clrf	___wmul@multiplicand+1
  7877  0BCB  275B  3188         	fcall	___wmul
  7878  0BCD  3074               	movlw	116
  7879  0BCE  00B6               	movwf	??_MiMAC_ReceivedPacket
  7880  0BCF  3023               	movlw	35
  7881  0BD0  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7882  0BD1  082E               	movf	?___wmul,w
  7883  0BD2  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7884  0BD3  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  7885  0BD4  082F               	movf	?___wmul+1,w
  7886  0BD5  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7887  0BD6  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  7888  0BD7  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  7889  0BD8  0021               	movlb	1	; select bank1
  7890  0BD9  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  7891  0BDA  0020               	movlb	0	; select bank0
  7892  0BDB  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  7893  0BDC  0021               	movlb	1	; select bank1
  7894  0BDD  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  7895                           
  7896                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
  7897  0BDE  0020               	movlb	0	; select bank0
  7898  0BDF  0866               	movf	_BankIndex,w
  7899  0BE0  00AE               	movwf	___wmul@multiplier
  7900  0BE1  3045               	movlw	69
  7901  0BE2  01AF               	clrf	___wmul@multiplier+1
  7902  0BE3  00B0               	movwf	___wmul@multiplicand
  7903  0BE4  01B1               	clrf	___wmul@multiplicand+1
  7904  0BE5  275B  3188         	fcall	___wmul
  7905  0BE7  3066               	movlw	102
  7906  0BE8  00B6               	movwf	??_MiMAC_ReceivedPacket
  7907  0BE9  3023               	movlw	35
  7908  0BEA  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7909  0BEB  082E               	movf	?___wmul,w
  7910  0BEC  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7911  0BED  0086               	movwf	6
  7912  0BEE  082F               	movf	?___wmul+1,w
  7913  0BEF  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7914  0BF0  0087               	movwf	7
  7915  0BF1  0801               	movf	1,w
  7916  0BF2  3EE7               	addlw	231
  7917  0BF3  0021               	movlb	1	; select bank1
  7918  0BF4  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  7919                           
  7920                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
  7921  0BF5  0020               	movlb	0	; select bank0
  7922  0BF6  0866               	movf	_BankIndex,w
  7923  0BF7  00AE               	movwf	___wmul@multiplier
  7924  0BF8  3045               	movlw	69
  7925  0BF9  01AF               	clrf	___wmul@multiplier+1
  7926  0BFA  00B0               	movwf	___wmul@multiplicand
  7927  0BFB  01B1               	clrf	___wmul@multiplicand+1
  7928  0BFC  275B  3188         	fcall	___wmul
  7929  0BFE  307C               	movlw	124
  7930  0BFF  2E87               	goto	L16
  7931  0C00                     l8347:	
  7932                           ;drv_mrf_miwi_24j40.c: 468: }
  7933                           
  7934                           
  7935                           ;drv_mrf_miwi_24j40.c: 470: else
  7936                           ;drv_mrf_miwi_24j40.c: 471: {
  7937                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
  7938  0C00  0866               	movf	_BankIndex,w
  7939  0C01  00AE               	movwf	___wmul@multiplier
  7940  0C02  3045               	movlw	69
  7941  0C03  01AF               	clrf	___wmul@multiplier+1
  7942  0C04  00B0               	movwf	___wmul@multiplicand
  7943  0C05  01B1               	clrf	___wmul@multiplicand+1
  7944  0C06  275B  3188         	fcall	___wmul
  7945  0C08  3074               	movlw	116
  7946  0C09  00B6               	movwf	??_MiMAC_ReceivedPacket
  7947  0C0A  3023               	movlw	35
  7948  0C0B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7949  0C0C  082E               	movf	?___wmul,w
  7950  0C0D  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7951  0C0E  0086               	movwf	6
  7952  0C0F  082F               	movf	?___wmul+1,w
  7953  0C10  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7954  0C11  0087               	movwf	7
  7955  0C12  0801               	movf	1,w
  7956  0C13  0021               	movlb	1	; select bank1
  7957  0C14  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  7958                           
  7959                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
  7960  0C15  0020               	movlb	0	; select bank0
  7961  0C16  0866               	movf	_BankIndex,w
  7962  0C17  00AE               	movwf	___wmul@multiplier
  7963  0C18  3045               	movlw	69
  7964  0C19  01AF               	clrf	___wmul@multiplier+1
  7965  0C1A  00B0               	movwf	___wmul@multiplicand
  7966  0C1B  01B1               	clrf	___wmul@multiplicand+1
  7967  0C1C  275B  3188         	fcall	___wmul
  7968  0C1E  3075               	movlw	117
  7969  0C1F  00B6               	movwf	??_MiMAC_ReceivedPacket
  7970  0C20  3023               	movlw	35
  7971  0C21  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7972  0C22  082E               	movf	?___wmul,w
  7973  0C23  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7974  0C24  0086               	movwf	6
  7975  0C25  082F               	movf	?___wmul+1,w
  7976  0C26  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  7977  0C27  0087               	movwf	7
  7978  0C28  0801               	movf	1,w
  7979  0C29  0021               	movlb	1	; select bank1
  7980  0C2A  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  7981                           
  7982                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
  7983  0C2B  0020               	movlb	0	; select bank0
  7984  0C2C  0866               	movf	_BankIndex,w
  7985  0C2D  00AE               	movwf	___wmul@multiplier
  7986  0C2E  3045               	movlw	69
  7987  0C2F  01AF               	clrf	___wmul@multiplier+1
  7988  0C30  00B0               	movwf	___wmul@multiplicand
  7989  0C31  01B1               	clrf	___wmul@multiplicand+1
  7990  0C32  275B  3188         	fcall	___wmul
  7991  0C34  3076               	movlw	118
  7992  0C35  00B6               	movwf	??_MiMAC_ReceivedPacket
  7993  0C36  3023               	movlw	35
  7994  0C37  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  7995  0C38  082E               	movf	?___wmul,w
  7996  0C39  0736               	addwf	??_MiMAC_ReceivedPacket,w
  7997  0C3A  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  7998  0C3B  082F               	movf	?___wmul+1,w
  7999  0C3C  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8000  0C3D  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  8001  0C3E  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8002  0C3F  0021               	movlb	1	; select bank1
  8003  0C40  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  8004  0C41  0020               	movlb	0	; select bank0
  8005  0C42  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8006  0C43  0021               	movlb	1	; select bank1
  8007  0C44  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  8008                           
  8009                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
  8010  0C45  0020               	movlb	0	; select bank0
  8011  0C46  0866               	movf	_BankIndex,w
  8012  0C47  00AE               	movwf	___wmul@multiplier
  8013  0C48  3045               	movlw	69
  8014  0C49  01AF               	clrf	___wmul@multiplier+1
  8015  0C4A  00B0               	movwf	___wmul@multiplicand
  8016  0C4B  01B1               	clrf	___wmul@multiplicand+1
  8017  0C4C  275B  3188         	fcall	___wmul
  8018  0C4E  3066               	movlw	102
  8019  0C4F  00B6               	movwf	??_MiMAC_ReceivedPacket
  8020  0C50  3023               	movlw	35
  8021  0C51  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8022  0C52  082E               	movf	?___wmul,w
  8023  0C53  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8024  0C54  0086               	movwf	6
  8025  0C55  082F               	movf	?___wmul+1,w
  8026  0C56  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8027  0C57  0087               	movwf	7
  8028  0C58  0801               	movf	1,w
  8029  0C59  3EE5               	addlw	229
  8030  0C5A  0021               	movlb	1	; select bank1
  8031  0C5B  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  8032                           
  8033                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
  8034  0C5C  0020               	movlb	0	; select bank0
  8035  0C5D  0866               	movf	_BankIndex,w
  8036  0C5E  00AE               	movwf	___wmul@multiplier
  8037  0C5F  3045               	movlw	69
  8038  0C60  01AF               	clrf	___wmul@multiplier+1
  8039  0C61  00B0               	movwf	___wmul@multiplicand
  8040  0C62  01B1               	clrf	___wmul@multiplicand+1
  8041  0C63  275B  3188         	fcall	___wmul
  8042  0C65  307E               	movlw	126
  8043  0C66  2E87               	goto	L16
  8044  0C67                     l108:	
  8045                           ;drv_mrf_miwi_24j40.c: 481: case 0x80:
  8046                           
  8047                           
  8048                           ;drv_mrf_miwi_24j40.c: 482: {
  8049                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
  8050  0C67  0021               	movlb	1	; select bank1
  8051  0C68  1547               	bsf	_MACRxPacket^(0+128),2
  8052                           
  8053                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8054  0C69  17C7               	bsf	_MACRxPacket^(0+128),7
  8055                           
  8056                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
  8057  0C6A  01CF               	clrf	(_MACRxPacket^(0+128)+8)
  8058  0C6B  0ACF               	incf	(_MACRxPacket^(0+128)+8),f
  8059                           
  8060                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8061  0C6C  0020               	movlb	0	; select bank0
  8062  0C6D  0866               	movf	_BankIndex,w
  8063  0C6E  00AE               	movwf	___wmul@multiplier
  8064  0C6F  3045               	movlw	69
  8065  0C70  01AF               	clrf	___wmul@multiplier+1
  8066  0C71  00B0               	movwf	___wmul@multiplicand
  8067  0C72  01B1               	clrf	___wmul@multiplicand+1
  8068  0C73  275B  3188         	fcall	___wmul
  8069  0C75  306A               	movlw	106
  8070  0C76  00B6               	movwf	??_MiMAC_ReceivedPacket
  8071  0C77  3023               	movlw	35
  8072  0C78  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8073  0C79  082E               	movf	?___wmul,w
  8074  0C7A  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8075  0C7B  0086               	movwf	6
  8076  0C7C  082F               	movf	?___wmul+1,w
  8077  0C7D  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8078  0C7E  0087               	movwf	7
  8079  0C7F  0801               	movf	1,w
  8080  0C80  0021               	movlb	1	; select bank1
  8081  0C81  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  8082                           
  8083                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8084  0C82  0020               	movlb	0	; select bank0
  8085  0C83  0866               	movf	_BankIndex,w
  8086  0C84  00AE               	movwf	___wmul@multiplier
  8087  0C85  3045               	movlw	69
  8088  0C86  01AF               	clrf	___wmul@multiplier+1
  8089  0C87  00B0               	movwf	___wmul@multiplicand
  8090  0C88  01B1               	clrf	___wmul@multiplicand+1
  8091  0C89  275B  3188         	fcall	___wmul
  8092  0C8B  306B               	movlw	107
  8093  0C8C  00B6               	movwf	??_MiMAC_ReceivedPacket
  8094  0C8D  3023               	movlw	35
  8095  0C8E  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8096  0C8F  082E               	movf	?___wmul,w
  8097  0C90  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8098  0C91  0086               	movwf	6
  8099  0C92  082F               	movf	?___wmul+1,w
  8100  0C93  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8101  0C94  0087               	movwf	7
  8102  0C95  0801               	movf	1,w
  8103  0C96  0021               	movlb	1	; select bank1
  8104  0C97  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  8105                           
  8106                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
  8107  0C98  0020               	movlb	0	; select bank0
  8108  0C99  0866               	movf	_BankIndex,w
  8109  0C9A  00AE               	movwf	___wmul@multiplier
  8110  0C9B  3045               	movlw	69
  8111  0C9C  01AF               	clrf	___wmul@multiplier+1
  8112  0C9D  00B0               	movwf	___wmul@multiplicand
  8113  0C9E  01B1               	clrf	___wmul@multiplicand+1
  8114  0C9F  275B  3188         	fcall	___wmul
  8115  0CA1  306C               	movlw	108
  8116  0CA2  00B6               	movwf	??_MiMAC_ReceivedPacket
  8117  0CA3  3023               	movlw	35
  8118  0CA4  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8119  0CA5  082E               	movf	?___wmul,w
  8120  0CA6  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8121  0CA7  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8122  0CA8  082F               	movf	?___wmul+1,w
  8123  0CA9  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8124  0CAA  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  8125  0CAB  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8126  0CAC  0021               	movlb	1	; select bank1
  8127  0CAD  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  8128  0CAE  0020               	movlb	0	; select bank0
  8129  0CAF  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8130  0CB0  0021               	movlb	1	; select bank1
  8131  0CB1  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  8132                           
  8133                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
  8134  0CB2  0020               	movlb	0	; select bank0
  8135  0CB3  0866               	movf	_BankIndex,w
  8136  0CB4  00AE               	movwf	___wmul@multiplier
  8137  0CB5  3045               	movlw	69
  8138  0CB6  01AF               	clrf	___wmul@multiplier+1
  8139  0CB7  00B0               	movwf	___wmul@multiplicand
  8140  0CB8  01B1               	clrf	___wmul@multiplicand+1
  8141  0CB9  275B  3188         	fcall	___wmul
  8142  0CBB  3066               	movlw	102
  8143  0CBC  00B6               	movwf	??_MiMAC_ReceivedPacket
  8144  0CBD  3023               	movlw	35
  8145  0CBE  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8146  0CBF  082E               	movf	?___wmul,w
  8147  0CC0  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8148  0CC1  0086               	movwf	6
  8149  0CC2  082F               	movf	?___wmul+1,w
  8150  0CC3  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8151  0CC4  0087               	movwf	7
  8152  0CC5  0801               	movf	1,w
  8153  0CC6  3EF5               	addlw	245
  8154  0CC7  2E7B               	goto	L19
  8155  0CC8                     l8359:	
  8156                           ;drv_mrf_miwi_24j40.c: 491: }
  8157                           ;drv_mrf_miwi_24j40.c: 492: break;
  8158                           
  8159                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  8160                           
  8161                           
  8162                           ;drv_mrf_miwi_24j40.c: 495: {
  8163                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8164  0CC8  0866               	movf	_BankIndex,w
  8165  0CC9  00AE               	movwf	___wmul@multiplier
  8166  0CCA  3045               	movlw	69
  8167  0CCB  01AF               	clrf	___wmul@multiplier+1
  8168  0CCC  00B0               	movwf	___wmul@multiplicand
  8169  0CCD  01B1               	clrf	___wmul@multiplicand+1
  8170  0CCE  275B  3188         	fcall	___wmul
  8171  0CD0  306C               	movlw	108
  8172  0CD1  00B6               	movwf	??_MiMAC_ReceivedPacket
  8173  0CD2  3023               	movlw	35
  8174  0CD3  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8175  0CD4  082E               	movf	?___wmul,w
  8176  0CD5  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8177  0CD6  0086               	movwf	6
  8178  0CD7  082F               	movf	?___wmul+1,w
  8179  0CD8  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8180  0CD9  0087               	movwf	7
  8181  0CDA  0F01               	incfsz	1,w
  8182  0CDB  2CF2               	goto	l110
  8183  0CDC  0866               	movf	_BankIndex,w
  8184  0CDD  00AE               	movwf	___wmul@multiplier
  8185  0CDE  3045               	movlw	69
  8186  0CDF  01AF               	clrf	___wmul@multiplier+1
  8187  0CE0  00B0               	movwf	___wmul@multiplicand
  8188  0CE1  01B1               	clrf	___wmul@multiplicand+1
  8189  0CE2  275B  3188         	fcall	___wmul
  8190  0CE4  306D               	movlw	109
  8191  0CE5  00B6               	movwf	??_MiMAC_ReceivedPacket
  8192  0CE6  3023               	movlw	35
  8193  0CE7  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8194  0CE8  082E               	movf	?___wmul,w
  8195  0CE9  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8196  0CEA  0086               	movwf	6
  8197  0CEB  082F               	movf	?___wmul+1,w
  8198  0CEC  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8199  0CED  0087               	movwf	7
  8200  0CEE  0F01               	incfsz	1,w
  8201  0CEF  2CF2               	goto	l110
  8202                           
  8203                           ;drv_mrf_miwi_24j40.c: 497: {
  8204                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
  8205  0CF0  0021               	movlb	1	; select bank1
  8206  0CF1  1547               	bsf	_MACRxPacket^(0+128),2
  8207  0CF2                     l110:	
  8208                           
  8209                           ;drv_mrf_miwi_24j40.c: 499: }
  8210                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8211  0CF2  0021               	movlb	1	; select bank1
  8212  0CF3  17C7               	bsf	_MACRxPacket^(0+128),7
  8213                           
  8214                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
  8215  0CF4  01CF               	clrf	(_MACRxPacket^(0+128)+8)
  8216  0CF5  0ACF               	incf	(_MACRxPacket^(0+128)+8),f
  8217                           
  8218                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
  8219  0CF6  0020               	movlb	0	; select bank0
  8220  0CF7  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
  8221  0CF8  1D03               	btfss	3,2
  8222  0CF9  2D61               	goto	l8373
  8223                           
  8224                           ;drv_mrf_miwi_24j40.c: 504: {
  8225                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8226  0CFA  0866               	movf	_BankIndex,w
  8227  0CFB  00AE               	movwf	___wmul@multiplier
  8228  0CFC  3045               	movlw	69
  8229  0CFD  01AF               	clrf	___wmul@multiplier+1
  8230  0CFE  00B0               	movwf	___wmul@multiplicand
  8231  0CFF  01B1               	clrf	___wmul@multiplicand+1
  8232  0D00  275B  3188         	fcall	___wmul
  8233  0D02  306E               	movlw	110
  8234  0D03  00B6               	movwf	??_MiMAC_ReceivedPacket
  8235  0D04  3023               	movlw	35
  8236  0D05  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8237  0D06  082E               	movf	?___wmul,w
  8238  0D07  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8239  0D08  0086               	movwf	6
  8240  0D09  082F               	movf	?___wmul+1,w
  8241  0D0A  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8242  0D0B  0087               	movwf	7
  8243  0D0C  0801               	movf	1,w
  8244  0D0D  0021               	movlb	1	; select bank1
  8245  0D0E  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  8246                           
  8247                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8248  0D0F  0020               	movlb	0	; select bank0
  8249  0D10  0866               	movf	_BankIndex,w
  8250  0D11  00AE               	movwf	___wmul@multiplier
  8251  0D12  3045               	movlw	69
  8252  0D13  01AF               	clrf	___wmul@multiplier+1
  8253  0D14  00B0               	movwf	___wmul@multiplicand
  8254  0D15  01B1               	clrf	___wmul@multiplicand+1
  8255  0D16  275B  3188         	fcall	___wmul
  8256  0D18  306F               	movlw	111
  8257  0D19  00B6               	movwf	??_MiMAC_ReceivedPacket
  8258  0D1A  3023               	movlw	35
  8259  0D1B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8260  0D1C  082E               	movf	?___wmul,w
  8261  0D1D  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8262  0D1E  0086               	movwf	6
  8263  0D1F  082F               	movf	?___wmul+1,w
  8264  0D20  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8265  0D21  0087               	movwf	7
  8266  0D22  0801               	movf	1,w
  8267  0D23  0021               	movlb	1	; select bank1
  8268  0D24  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  8269                           
  8270                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  8271  0D25  0020               	movlb	0	; select bank0
  8272  0D26  0866               	movf	_BankIndex,w
  8273  0D27  00AE               	movwf	___wmul@multiplier
  8274  0D28  3045               	movlw	69
  8275  0D29  01AF               	clrf	___wmul@multiplier+1
  8276  0D2A  00B0               	movwf	___wmul@multiplicand
  8277  0D2B  01B1               	clrf	___wmul@multiplicand+1
  8278  0D2C  275B  3188         	fcall	___wmul
  8279  0D2E  3070               	movlw	112
  8280  0D2F  00B6               	movwf	??_MiMAC_ReceivedPacket
  8281  0D30  3023               	movlw	35
  8282  0D31  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8283  0D32  082E               	movf	?___wmul,w
  8284  0D33  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8285  0D34  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8286  0D35  082F               	movf	?___wmul+1,w
  8287  0D36  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8288  0D37  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  8289  0D38  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8290  0D39  0021               	movlb	1	; select bank1
  8291  0D3A  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  8292  0D3B  0020               	movlb	0	; select bank0
  8293  0D3C  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8294  0D3D  0021               	movlb	1	; select bank1
  8295  0D3E  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  8296                           
  8297                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
  8298  0D3F  0020               	movlb	0	; select bank0
  8299  0D40  0866               	movf	_BankIndex,w
  8300  0D41  00AE               	movwf	___wmul@multiplier
  8301  0D42  3045               	movlw	69
  8302  0D43  01AF               	clrf	___wmul@multiplier+1
  8303  0D44  00B0               	movwf	___wmul@multiplicand
  8304  0D45  01B1               	clrf	___wmul@multiplicand+1
  8305  0D46  275B  3188         	fcall	___wmul
  8306  0D48  3066               	movlw	102
  8307  0D49  00B6               	movwf	??_MiMAC_ReceivedPacket
  8308  0D4A  3023               	movlw	35
  8309  0D4B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8310  0D4C  082E               	movf	?___wmul,w
  8311  0D4D  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8312  0D4E  0086               	movwf	6
  8313  0D4F  082F               	movf	?___wmul+1,w
  8314  0D50  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8315  0D51  0087               	movwf	7
  8316  0D52  0801               	movf	1,w
  8317  0D53  3EF1               	addlw	241
  8318  0D54  0021               	movlb	1	; select bank1
  8319  0D55  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  8320                           
  8321                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
  8322  0D56  0020               	movlb	0	; select bank0
  8323  0D57  0866               	movf	_BankIndex,w
  8324  0D58  00AE               	movwf	___wmul@multiplier
  8325  0D59  3045               	movlw	69
  8326  0D5A  01AF               	clrf	___wmul@multiplier+1
  8327  0D5B  00B0               	movwf	___wmul@multiplicand
  8328  0D5C  01B1               	clrf	___wmul@multiplicand+1
  8329  0D5D  275B  3188         	fcall	___wmul
  8330  0D5F  3072               	movlw	114
  8331  0D60  2E87               	goto	L16
  8332  0D61                     l8373:	
  8333                           ;drv_mrf_miwi_24j40.c: 510: } else
  8334                           
  8335                           
  8336                           ;drv_mrf_miwi_24j40.c: 512: {
  8337                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8338  0D61  0866               	movf	_BankIndex,w
  8339  0D62  00AE               	movwf	___wmul@multiplier
  8340  0D63  3045               	movlw	69
  8341  0D64  01AF               	clrf	___wmul@multiplier+1
  8342  0D65  00B0               	movwf	___wmul@multiplicand
  8343  0D66  01B1               	clrf	___wmul@multiplicand+1
  8344  0D67  275B  3188         	fcall	___wmul
  8345  0D69  306A               	movlw	106
  8346  0D6A  00B6               	movwf	??_MiMAC_ReceivedPacket
  8347  0D6B  3023               	movlw	35
  8348  0D6C  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8349  0D6D  082E               	movf	?___wmul,w
  8350  0D6E  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8351  0D6F  0086               	movwf	6
  8352  0D70  082F               	movf	?___wmul+1,w
  8353  0D71  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8354  0D72  0087               	movwf	7
  8355  0D73  0801               	movf	1,w
  8356  0D74  0021               	movlb	1	; select bank1
  8357  0D75  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  8358                           
  8359                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8360  0D76  0020               	movlb	0	; select bank0
  8361  0D77  0866               	movf	_BankIndex,w
  8362  0D78  00AE               	movwf	___wmul@multiplier
  8363  0D79  3045               	movlw	69
  8364  0D7A  01AF               	clrf	___wmul@multiplier+1
  8365  0D7B  00B0               	movwf	___wmul@multiplicand
  8366  0D7C  01B1               	clrf	___wmul@multiplicand+1
  8367  0D7D  275B  3188         	fcall	___wmul
  8368  0D7F  306B               	movlw	107
  8369  0D80  00B6               	movwf	??_MiMAC_ReceivedPacket
  8370  0D81  3023               	movlw	35
  8371  0D82  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8372  0D83  082E               	movf	?___wmul,w
  8373  0D84  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8374  0D85  0086               	movwf	6
  8375  0D86  082F               	movf	?___wmul+1,w
  8376  0D87  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8377  0D88  0087               	movwf	7
  8378  0D89  0801               	movf	1,w
  8379  0D8A  0021               	movlb	1	; select bank1
  8380  0D8B  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  8381                           
  8382                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8383  0D8C  0020               	movlb	0	; select bank0
  8384  0D8D  0866               	movf	_BankIndex,w
  8385  0D8E  00AE               	movwf	___wmul@multiplier
  8386  0D8F  3045               	movlw	69
  8387  0D90  01AF               	clrf	___wmul@multiplier+1
  8388  0D91  00B0               	movwf	___wmul@multiplicand
  8389  0D92  01B1               	clrf	___wmul@multiplicand+1
  8390  0D93  275B  3188         	fcall	___wmul
  8391  0D95  306E               	movlw	110
  8392  0D96  00B6               	movwf	??_MiMAC_ReceivedPacket
  8393  0D97  3023               	movlw	35
  8394  0D98  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8395  0D99  082E               	movf	?___wmul,w
  8396  0D9A  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8397  0D9B  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8398  0D9C  082F               	movf	?___wmul+1,w
  8399  0D9D  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8400  0D9E  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  8401  0D9F  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8402  0DA0  0021               	movlb	1	; select bank1
  8403  0DA1  00C8               	movwf	(low ((_MACRxPacket| 0+1)))^(0+128)
  8404  0DA2  0020               	movlb	0	; select bank0
  8405  0DA3  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8406  0DA4  0021               	movlb	1	; select bank1
  8407  0DA5  00C9               	movwf	((low ((_MACRxPacket| 0+1))+1))^(0+128)
  8408                           
  8409                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
  8410  0DA6  0020               	movlb	0	; select bank0
  8411  0DA7  0866               	movf	_BankIndex,w
  8412  0DA8  00AE               	movwf	___wmul@multiplier
  8413  0DA9  3045               	movlw	69
  8414  0DAA  01AF               	clrf	___wmul@multiplier+1
  8415  0DAB  00B0               	movwf	___wmul@multiplicand
  8416  0DAC  01B1               	clrf	___wmul@multiplicand+1
  8417  0DAD  275B  3188         	fcall	___wmul
  8418  0DAF  3066               	movlw	102
  8419  0DB0  00B6               	movwf	??_MiMAC_ReceivedPacket
  8420  0DB1  3023               	movlw	35
  8421  0DB2  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8422  0DB3  082E               	movf	?___wmul,w
  8423  0DB4  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8424  0DB5  0086               	movwf	6
  8425  0DB6  082F               	movf	?___wmul+1,w
  8426  0DB7  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8427  0DB8  0087               	movwf	7
  8428  0DB9  0801               	movf	1,w
  8429  0DBA  3EF3               	addlw	243
  8430  0DBB  0021               	movlb	1	; select bank1
  8431  0DBC  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  8432                           
  8433                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
  8434  0DBD  0020               	movlb	0	; select bank0
  8435  0DBE  0866               	movf	_BankIndex,w
  8436  0DBF  00AE               	movwf	___wmul@multiplier
  8437  0DC0  3045               	movlw	69
  8438  0DC1  01AF               	clrf	___wmul@multiplier+1
  8439  0DC2  00B0               	movwf	___wmul@multiplicand
  8440  0DC3  01B1               	clrf	___wmul@multiplicand+1
  8441  0DC4  275B  3188         	fcall	___wmul
  8442  0DC6  3070               	movlw	112
  8443  0DC7  2E87               	goto	L16
  8444  0DC8                     l113:	
  8445                           ;drv_mrf_miwi_24j40.c: 522: case 0x8C:
  8446                           
  8447                           
  8448                           ;drv_mrf_miwi_24j40.c: 523: {
  8449                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8450  0DC8  0021               	movlb	1	; select bank1
  8451  0DC9  17C7               	bsf	_MACRxPacket^(0+128),7
  8452                           
  8453                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
  8454  0DCA  01CF               	clrf	(_MACRxPacket^(0+128)+8)
  8455  0DCB  0ACF               	incf	(_MACRxPacket^(0+128)+8),f
  8456                           
  8457                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
  8458  0DCC  0020               	movlb	0	; select bank0
  8459  0DCD  0840               	movf	MiMAC_ReceivedPacket@bIntraPAN,w
  8460  0DCE  1903               	btfsc	3,2
  8461  0DCF  2E06               	goto	l8387
  8462                           
  8463                           ;drv_mrf_miwi_24j40.c: 529: {
  8464                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8465  0DD0  0866               	movf	_BankIndex,w
  8466  0DD1  00AE               	movwf	___wmul@multiplier
  8467  0DD2  3045               	movlw	69
  8468  0DD3  01AF               	clrf	___wmul@multiplier+1
  8469  0DD4  00B0               	movwf	___wmul@multiplicand
  8470  0DD5  01B1               	clrf	___wmul@multiplicand+1
  8471  0DD6  275B  3188         	fcall	___wmul
  8472  0DD8  306A               	movlw	106
  8473  0DD9  00B6               	movwf	??_MiMAC_ReceivedPacket
  8474  0DDA  3023               	movlw	35
  8475  0DDB  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8476  0DDC  082E               	movf	?___wmul,w
  8477  0DDD  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8478  0DDE  0086               	movwf	6
  8479  0DDF  082F               	movf	?___wmul+1,w
  8480  0DE0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8481  0DE1  0087               	movwf	7
  8482  0DE2  0801               	movf	1,w
  8483  0DE3  0021               	movlb	1	; select bank1
  8484  0DE4  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  8485                           
  8486                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8487  0DE5  0020               	movlb	0	; select bank0
  8488  0DE6  0866               	movf	_BankIndex,w
  8489  0DE7  00AE               	movwf	___wmul@multiplier
  8490  0DE8  3045               	movlw	69
  8491  0DE9  01AF               	clrf	___wmul@multiplier+1
  8492  0DEA  00B0               	movwf	___wmul@multiplicand
  8493  0DEB  01B1               	clrf	___wmul@multiplicand+1
  8494  0DEC  275B  3188         	fcall	___wmul
  8495  0DEE  306B               	movlw	107
  8496  0DEF  00B6               	movwf	??_MiMAC_ReceivedPacket
  8497  0DF0  3023               	movlw	35
  8498  0DF1  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8499  0DF2  082E               	movf	?___wmul,w
  8500  0DF3  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8501  0DF4  0086               	movwf	6
  8502  0DF5  082F               	movf	?___wmul+1,w
  8503  0DF6  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8504  0DF7  0087               	movwf	7
  8505  0DF8  0801               	movf	1,w
  8506  0DF9  0021               	movlb	1	; select bank1
  8507  0DFA  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  8508                           
  8509                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
  8510  0DFB  0020               	movlb	0	; select bank0
  8511  0DFC  0866               	movf	_BankIndex,w
  8512  0DFD  00AE               	movwf	___wmul@multiplier
  8513  0DFE  3045               	movlw	69
  8514  0DFF  01AF               	clrf	___wmul@multiplier+1
  8515  0E00  00B0               	movwf	___wmul@multiplicand
  8516  0E01  01B1               	clrf	___wmul@multiplicand+1
  8517  0E02  275B  3188         	fcall	___wmul
  8518  0E04  3073               	movlw	115
  8519  0E05  2AFA               	goto	L17
  8520  0E06                     l8387:	
  8521                           
  8522                           ;drv_mrf_miwi_24j40.c: 540: else
  8523                           ;drv_mrf_miwi_24j40.c: 541: {
  8524                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
  8525  0E06  0866               	movf	_BankIndex,w
  8526  0E07  00AE               	movwf	___wmul@multiplier
  8527  0E08  3045               	movlw	69
  8528  0E09  01AF               	clrf	___wmul@multiplier+1
  8529  0E0A  00B0               	movwf	___wmul@multiplicand
  8530  0E0B  01B1               	clrf	___wmul@multiplicand+1
  8531  0E0C  275B  3188         	fcall	___wmul
  8532  0E0E  3073               	movlw	115
  8533  0E0F  00B6               	movwf	??_MiMAC_ReceivedPacket
  8534  0E10  3023               	movlw	35
  8535  0E11  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8536  0E12  082E               	movf	?___wmul,w
  8537  0E13  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8538  0E14  0086               	movwf	6
  8539  0E15  082F               	movf	?___wmul+1,w
  8540  0E16  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8541  0E17  0087               	movwf	7
  8542  0E18  0801               	movf	1,w
  8543  0E19  0021               	movlb	1	; select bank1
  8544  0E1A  00D0               	movwf	(_MACRxPacket^(0+128)+9)
  8545                           
  8546                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
  8547  0E1B  0020               	movlb	0	; select bank0
  8548  0E1C  0866               	movf	_BankIndex,w
  8549  0E1D  00AE               	movwf	___wmul@multiplier
  8550  0E1E  3045               	movlw	69
  8551  0E1F  01AF               	clrf	___wmul@multiplier+1
  8552  0E20  00B0               	movwf	___wmul@multiplicand
  8553  0E21  01B1               	clrf	___wmul@multiplicand+1
  8554  0E22  275B  3188         	fcall	___wmul
  8555  0E24  3074               	movlw	116
  8556  0E25  00B6               	movwf	??_MiMAC_ReceivedPacket
  8557  0E26  3023               	movlw	35
  8558  0E27  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8559  0E28  082E               	movf	?___wmul,w
  8560  0E29  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8561  0E2A  0086               	movwf	6
  8562  0E2B  082F               	movf	?___wmul+1,w
  8563  0E2C  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8564  0E2D  0087               	movwf	7
  8565  0E2E  0801               	movf	1,w
  8566  0E2F  0021               	movlb	1	; select bank1
  8567  0E30  00D1               	movwf	(_MACRxPacket^(0+128)+10)
  8568                           
  8569                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
  8570  0E31  0020               	movlb	0	; select bank0
  8571  0E32  0866               	movf	_BankIndex,w
  8572  0E33  00AE               	movwf	___wmul@multiplier
  8573  0E34  3045               	movlw	69
  8574  0E35  01AF               	clrf	___wmul@multiplier+1
  8575  0E36  00B0               	movwf	___wmul@multiplicand
  8576  0E37  01B1               	clrf	___wmul@multiplicand+1
  8577  0E38  275B  3188         	fcall	___wmul
  8578  0E3A  3075               	movlw	117
  8579  0E3B  2B61               	goto	L18
  8580  0E3C                     l8393:	
  8581                           
  8582                           ;drv_mrf_miwi_24j40.c: 554: {
  8583                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8584  0E3C  0866               	movf	_BankIndex,w
  8585  0E3D  00AE               	movwf	___wmul@multiplier
  8586  0E3E  3045               	movlw	69
  8587  0E3F  01AF               	clrf	___wmul@multiplier+1
  8588  0E40  00B0               	movwf	___wmul@multiplicand
  8589  0E41  01B1               	clrf	___wmul@multiplicand+1
  8590  0E42  275B  3188         	fcall	___wmul
  8591  0E44  306C               	movlw	108
  8592  0E45  00B6               	movwf	??_MiMAC_ReceivedPacket
  8593  0E46  3023               	movlw	35
  8594  0E47  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8595  0E48  082E               	movf	?___wmul,w
  8596  0E49  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8597  0E4A  0086               	movwf	6
  8598  0E4B  082F               	movf	?___wmul+1,w
  8599  0E4C  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8600  0E4D  0087               	movwf	7
  8601  0E4E  0F01               	incfsz	1,w
  8602  0E4F  2E66               	goto	l8399
  8603  0E50  0866               	movf	_BankIndex,w
  8604  0E51  00AE               	movwf	___wmul@multiplier
  8605  0E52  3045               	movlw	69
  8606  0E53  01AF               	clrf	___wmul@multiplier+1
  8607  0E54  00B0               	movwf	___wmul@multiplicand
  8608  0E55  01B1               	clrf	___wmul@multiplicand+1
  8609  0E56  275B  3188         	fcall	___wmul
  8610  0E58  306D               	movlw	109
  8611  0E59  00B6               	movwf	??_MiMAC_ReceivedPacket
  8612  0E5A  3023               	movlw	35
  8613  0E5B  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8614  0E5C  082E               	movf	?___wmul,w
  8615  0E5D  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8616  0E5E  0086               	movwf	6
  8617  0E5F  082F               	movf	?___wmul+1,w
  8618  0E60  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8619  0E61  0087               	movwf	7
  8620  0E62  0F01               	incfsz	1,w
  8621  0E63  2E66               	goto	l8399
  8622                           
  8623                           ;drv_mrf_miwi_24j40.c: 556: {
  8624                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
  8625  0E64  0021               	movlb	1	; select bank1
  8626  0E65  1547               	bsf	_MACRxPacket^(0+128),2
  8627  0E66                     l8399:	
  8628                           
  8629                           ;drv_mrf_miwi_24j40.c: 558: }
  8630                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
  8631  0E66  0020               	movlb	0	; select bank0
  8632  0E67  0866               	movf	_BankIndex,w
  8633  0E68  00AE               	movwf	___wmul@multiplier
  8634  0E69  3045               	movlw	69
  8635  0E6A  01AF               	clrf	___wmul@multiplier+1
  8636  0E6B  00B0               	movwf	___wmul@multiplicand
  8637  0E6C  01B1               	clrf	___wmul@multiplicand+1
  8638  0E6D  275B  3188         	fcall	___wmul
  8639  0E6F  3066               	movlw	102
  8640  0E70  00B6               	movwf	??_MiMAC_ReceivedPacket
  8641  0E71  3023               	movlw	35
  8642  0E72  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8643  0E73  082E               	movf	?___wmul,w
  8644  0E74  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8645  0E75  0086               	movwf	6
  8646  0E76  082F               	movf	?___wmul+1,w
  8647  0E77  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8648  0E78  0087               	movwf	7
  8649  0E79  0801               	movf	1,w
  8650  0E7A  3EF6               	addlw	246
  8651  0E7B                     L19:	
  8652  0E7B  0021               	movlb	1	; select bank1
  8653  0E7C  00CC               	movwf	(_MACRxPacket^(0+128)+5)
  8654                           
  8655                           ;drv_mrf_miwi_24j40.c: 560: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  8656  0E7D  0020               	movlb	0	; select bank0
  8657  0E7E  0866               	movf	_BankIndex,w
  8658  0E7F  00AE               	movwf	___wmul@multiplier
  8659  0E80  3045               	movlw	69
  8660  0E81  01AF               	clrf	___wmul@multiplier+1
  8661  0E82  00B0               	movwf	___wmul@multiplicand
  8662  0E83  01B1               	clrf	___wmul@multiplicand+1
  8663  0E84  275B  3188         	fcall	___wmul
  8664  0E86  306E               	movlw	110
  8665  0E87                     L16:	
  8666  0E87  00B6               	movwf	??_MiMAC_ReceivedPacket
  8667  0E88  3023               	movlw	35
  8668  0E89  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8669  0E8A  082E               	movf	?___wmul,w
  8670  0E8B  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8671  0E8C  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8672  0E8D  082F               	movf	?___wmul+1,w
  8673  0E8E  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8674  0E8F  00B9               	movwf	??_MiMAC_ReceivedPacket+3
  8675  0E90  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8676  0E91  0021               	movlb	1	; select bank1
  8677  0E92  00CA               	movwf	(low ((_MACRxPacket| 0+3)))^(0+128)
  8678  0E93  0020               	movlb	0	; select bank0
  8679  0E94  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8680  0E95  0021               	movlb	1	; select bank1
  8681  0E96  00CB               	movwf	((low ((_MACRxPacket| 0+3))+1))^(0+128)
  8682                           
  8683                           ;drv_mrf_miwi_24j40.c: 561: }
  8684                           ;drv_mrf_miwi_24j40.c: 562: break;
  8685  0E97  2EAF               	goto	l8413
  8686  0E98                     l8403:	
  8687                           
  8688                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
  8689  0E98  3197  27BB         	fcall	_MiMAC_DiscardPacket
  8690                           
  8691                           ;drv_mrf_miwi_24j40.c: 568: return 0;
  8692  0E9A  3400               	retlw	0
  8693  0E9B                     l8411:	
  8694  0E9B  083E               	movf	MiMAC_ReceivedPacket@addrMode,w
  8695                           
  8696                           ; Switch size 1, requested type "speed"
  8697                           ; Number of cases is 6, Range of values is 8 to 204
  8698                           ; switch strategies available:
  8699                           ; Name         Instructions Cycles
  8700                           ; simple_byte           19    10 (average)
  8701                           ; jumptable            263     9 (fixed)
  8702                           ;	Chosen strategy is simple_byte
  8703  0E9C  3A08               	xorlw	8	; case 8
  8704  0E9D  1903               	skipnz
  8705  0E9E  2E3C               	goto	l8393
  8706  0E9F  3A88               	xorlw	136	; case 128
  8707  0EA0  1903               	skipnz
  8708  0EA1  2C67               	goto	l108
  8709  0EA2  3A08               	xorlw	8	; case 136
  8710  0EA3  1903               	skipnz
  8711  0EA4  2CC8               	goto	l8359
  8712  0EA5  3A04               	xorlw	4	; case 140
  8713  0EA6  1903               	skipnz
  8714  0EA7  2DC8               	goto	l113
  8715  0EA8  3A44               	xorlw	68	; case 200
  8716  0EA9  1903               	skipnz
  8717  0EAA  2A95               	goto	l8319
  8718  0EAB  3A04               	xorlw	4	; case 204
  8719  0EAC  1903               	skipnz
  8720  0EAD  2B93               	goto	l105
  8721  0EAE  2E98               	goto	l8403
  8722  0EAF                     l8413:	
  8723                           
  8724                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
  8725  0EAF  0020               	movlb	0	; select bank0
  8726  0EB0  0866               	movf	_BankIndex,w
  8727  0EB1  00AE               	movwf	___wmul@multiplier
  8728  0EB2  3045               	movlw	69
  8729  0EB3  01AF               	clrf	___wmul@multiplier+1
  8730  0EB4  00B0               	movwf	___wmul@multiplicand
  8731  0EB5  01B1               	clrf	___wmul@multiplicand+1
  8732  0EB6  275B  3188         	fcall	___wmul
  8733  0EB8  3067               	movlw	103
  8734  0EB9  00B6               	movwf	??_MiMAC_ReceivedPacket
  8735  0EBA  3023               	movlw	35
  8736  0EBB  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8737  0EBC  082E               	movf	?___wmul,w
  8738  0EBD  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8739  0EBE  0086               	movwf	6
  8740  0EBF  082F               	movf	?___wmul+1,w
  8741  0EC0  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8742  0EC1  0087               	movwf	7
  8743  0EC2  1981               	btfsc	1,3
  8744  0EC3  2E98               	goto	l8403
  8745  0EC4  2ED3               	goto	l8435
  8746  0EC5                     l8421:	
  8747                           
  8748                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
  8749  0EC5  30FC               	movlw	-4
  8750  0EC6  0021               	movlb	1	; select bank1
  8751  0EC7  05C7               	andwf	_MACRxPacket^(0+128),f
  8752                           
  8753                           ;drv_mrf_miwi_24j40.c: 636: break;
  8754  0EC8  2EF9               	goto	l8437
  8755  0EC9                     l8423:	
  8756                           
  8757                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
  8758  0EC9  0021               	movlb	1	; select bank1
  8759  0ECA  0847               	movf	_MACRxPacket^(0+128),w
  8760  0ECB  39FC               	andlw	-4
  8761  0ECC  3801               	iorlw	1
  8762  0ECD  00C7               	movwf	_MACRxPacket^(0+128)
  8763                           
  8764                           ;drv_mrf_miwi_24j40.c: 639: break;
  8765  0ECE  2EF9               	goto	l8437
  8766  0ECF                     l8425:	
  8767                           
  8768                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
  8769  0ECF  3003               	movlw	3
  8770  0ED0  0021               	movlb	1	; select bank1
  8771  0ED1  04C7               	iorwf	_MACRxPacket^(0+128),f
  8772                           
  8773                           ;drv_mrf_miwi_24j40.c: 643: break;
  8774  0ED2  2EF9               	goto	l8437
  8775  0ED3                     l8435:	
  8776  0ED3  0866               	movf	_BankIndex,w
  8777  0ED4  00AE               	movwf	___wmul@multiplier
  8778  0ED5  3045               	movlw	69
  8779  0ED6  01AF               	clrf	___wmul@multiplier+1
  8780  0ED7  00B0               	movwf	___wmul@multiplicand
  8781  0ED8  01B1               	clrf	___wmul@multiplicand+1
  8782  0ED9  275B  3188         	fcall	___wmul
  8783  0EDB  3067               	movlw	103
  8784  0EDC  00B6               	movwf	??_MiMAC_ReceivedPacket
  8785  0EDD  3023               	movlw	35
  8786  0EDE  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8787  0EDF  082E               	movf	?___wmul,w
  8788  0EE0  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8789  0EE1  0086               	movwf	6
  8790  0EE2  082F               	movf	?___wmul+1,w
  8791  0EE3  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8792  0EE4  0087               	movwf	7
  8793  0EE5  0801               	movf	1,w
  8794  0EE6  3907               	andlw	7
  8795  0EE7  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8796  0EE8  01B9               	clrf	??_MiMAC_ReceivedPacket+3
  8797                           
  8798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8799                           ; Switch size 1, requested type "speed"
  8800                           ; Number of cases is 1, Range of values is 0 to 0
  8801                           ; switch strategies available:
  8802                           ; Name         Instructions Cycles
  8803                           ; simple_byte            4     3 (average)
  8804                           ; direct_byte            8     6 (fixed)
  8805                           ; jumptable            260     6 (fixed)
  8806                           ;	Chosen strategy is simple_byte
  8807  0EE9  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8808  0EEA  3A00               	xorlw	0	; case 0
  8809  0EEB  1903               	skipnz
  8810  0EEC  2EEE               	goto	l10183
  8811  0EED  2E98               	goto	l8403
  8812  0EEE                     l10183:	
  8813                           
  8814                           ; Switch size 1, requested type "speed"
  8815                           ; Number of cases is 3, Range of values is 0 to 3
  8816                           ; switch strategies available:
  8817                           ; Name         Instructions Cycles
  8818                           ; simple_byte           10     6 (average)
  8819                           ; direct_byte           14     6 (fixed)
  8820                           ; jumptable            260     6 (fixed)
  8821                           ;	Chosen strategy is simple_byte
  8822  0EEE  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8823  0EEF  3A00               	xorlw	0	; case 0
  8824  0EF0  1903               	skipnz
  8825  0EF1  2ECF               	goto	l8425
  8826  0EF2  3A01               	xorlw	1	; case 1
  8827  0EF3  1903               	skipnz
  8828  0EF4  2EC5               	goto	l8421
  8829  0EF5  3A02               	xorlw	2	; case 3
  8830  0EF6  1903               	skipnz
  8831  0EF7  2EC9               	goto	l8423
  8832  0EF8  2E98               	goto	l8403
  8833  0EF9                     l8437:	
  8834                           
  8835                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
  8836  0EF9  0020               	movlb	0	; select bank0
  8837  0EFA  0866               	movf	_BankIndex,w
  8838  0EFB  00AE               	movwf	___wmul@multiplier
  8839  0EFC  3045               	movlw	69
  8840  0EFD  01AF               	clrf	___wmul@multiplier+1
  8841  0EFE  00B0               	movwf	___wmul@multiplicand
  8842  0EFF  01B1               	clrf	___wmul@multiplicand+1
  8843  0F00  275B  3188         	fcall	___wmul
  8844  0F02  3066               	movlw	102
  8845  0F03  00B6               	movwf	??_MiMAC_ReceivedPacket
  8846  0F04  3023               	movlw	35
  8847  0F05  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8848  0F06  082E               	movf	?___wmul,w
  8849  0F07  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8850  0F08  0086               	movwf	6
  8851  0F09  082F               	movf	?___wmul+1,w
  8852  0F0A  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8853  0F0B  0087               	movwf	7
  8854  0F0C  0801               	movf	1,w
  8855  0F0D  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8856  0F0E  01B9               	clrf	??_MiMAC_ReceivedPacket+3
  8857  0F0F  0866               	movf	_BankIndex,w
  8858  0F10  00AE               	movwf	___wmul@multiplier
  8859  0F11  3045               	movlw	69
  8860  0F12  01AF               	clrf	___wmul@multiplier+1
  8861  0F13  00B0               	movwf	___wmul@multiplicand
  8862  0F14  01B1               	clrf	___wmul@multiplicand+1
  8863  0F15  275B  3188         	fcall	___wmul
  8864  0F17  3065               	movlw	101
  8865  0F18  00BA               	movwf	??_MiMAC_ReceivedPacket+4
  8866  0F19  3023               	movlw	35
  8867  0F1A  00BB               	movwf	??_MiMAC_ReceivedPacket+5
  8868  0F1B  082E               	movf	?___wmul,w
  8869  0F1C  073A               	addwf	??_MiMAC_ReceivedPacket+4,w
  8870  0F1D  00BC               	movwf	??_MiMAC_ReceivedPacket+6
  8871  0F1E  082F               	movf	?___wmul+1,w
  8872  0F1F  3D3B               	addwfc	??_MiMAC_ReceivedPacket+5,w
  8873  0F20  00BD               	movwf	??_MiMAC_ReceivedPacket+7
  8874  0F21  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8875  0F22  073C               	addwf	??_MiMAC_ReceivedPacket+6,w
  8876  0F23  0086               	movwf	6
  8877  0F24  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8878  0F25  3D3D               	addwfc	??_MiMAC_ReceivedPacket+7,w
  8879  0F26  0087               	movwf	7
  8880  0F27  0801               	movf	1,w
  8881  0F28  0021               	movlb	1	; select bank1
  8882  0F29  00CE               	movwf	(_MACRxPacket^(0+128)+7)
  8883                           
  8884                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
  8885  0F2A  0020               	movlb	0	; select bank0
  8886  0F2B  0866               	movf	_BankIndex,w
  8887  0F2C  00AE               	movwf	___wmul@multiplier
  8888  0F2D  3045               	movlw	69
  8889  0F2E  01AF               	clrf	___wmul@multiplier+1
  8890  0F2F  00B0               	movwf	___wmul@multiplicand
  8891  0F30  01B1               	clrf	___wmul@multiplicand+1
  8892  0F31  275B  3188         	fcall	___wmul
  8893  0F33  3066               	movlw	102
  8894  0F34  00B6               	movwf	??_MiMAC_ReceivedPacket
  8895  0F35  3023               	movlw	35
  8896  0F36  00B7               	movwf	??_MiMAC_ReceivedPacket+1
  8897  0F37  082E               	movf	?___wmul,w
  8898  0F38  0736               	addwf	??_MiMAC_ReceivedPacket,w
  8899  0F39  0086               	movwf	6
  8900  0F3A  082F               	movf	?___wmul+1,w
  8901  0F3B  3D37               	addwfc	??_MiMAC_ReceivedPacket+1,w
  8902  0F3C  0087               	movwf	7
  8903  0F3D  0801               	movf	1,w
  8904  0F3E  00B8               	movwf	??_MiMAC_ReceivedPacket+2
  8905  0F3F  01B9               	clrf	??_MiMAC_ReceivedPacket+3
  8906  0F40  0866               	movf	_BankIndex,w
  8907  0F41  00AE               	movwf	___wmul@multiplier
  8908  0F42  3045               	movlw	69
  8909  0F43  01AF               	clrf	___wmul@multiplier+1
  8910  0F44  00B0               	movwf	___wmul@multiplicand
  8911  0F45  01B1               	clrf	___wmul@multiplicand+1
  8912  0F46  275B               	fcall	___wmul
  8913  0F47  3066               	movlw	102
  8914  0F48  00BA               	movwf	??_MiMAC_ReceivedPacket+4
  8915  0F49  3023               	movlw	35
  8916  0F4A  00BB               	movwf	??_MiMAC_ReceivedPacket+5
  8917  0F4B  082E               	movf	?___wmul,w
  8918  0F4C  073A               	addwf	??_MiMAC_ReceivedPacket+4,w
  8919  0F4D  00BC               	movwf	??_MiMAC_ReceivedPacket+6
  8920  0F4E  082F               	movf	?___wmul+1,w
  8921  0F4F  3D3B               	addwfc	??_MiMAC_ReceivedPacket+5,w
  8922  0F50  00BD               	movwf	??_MiMAC_ReceivedPacket+7
  8923  0F51  0838               	movf	??_MiMAC_ReceivedPacket+2,w
  8924  0F52  073C               	addwf	??_MiMAC_ReceivedPacket+6,w
  8925  0F53  0086               	movwf	6
  8926  0F54  0839               	movf	??_MiMAC_ReceivedPacket+3,w
  8927  0F55  3D3D               	addwfc	??_MiMAC_ReceivedPacket+7,w
  8928  0F56  0087               	movwf	7
  8929  0F57  0801               	movf	1,w
  8930  0F58  0021               	movlb	1	; select bank1
  8931  0F59  00CD               	movwf	(_MACRxPacket^(0+128)+6)
  8932                           
  8933                           ;drv_mrf_miwi_24j40.c: 653: return 1;
  8934  0F5A  3401               	retlw	1
  8935  0F5B                     __end_of_MiMAC_ReceivedPacket:	
  8936  0F5B                     __ptext63:	
  8937 ;; *************** function ___wmul *****************
  8938 ;; Defined at:
  8939 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  multiplier      2   14[BANK0 ] unsigned int 
  8942 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  product         2   18[BANK0 ] unsigned int 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  2   14[BANK0 ] unsigned int 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 1F/0
  8951 ;;		On exit  : 1F/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;Total ram usage:        6 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    4
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_MiMAC_ReceivedPacket
  8965 ;;		_MiMAC_DiscardPacket
  8966 ;;		_MiMAC_Init
  8967 ;;		_P2PTasks
  8968 ;;		_run_p2p_demo
  8969 ;;		_sprintf
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           
  8974                           ;psect for function ___wmul
  8975  0F5B                     ___wmul:	
  8976                           
  8977                           ;incstack = 0
  8978                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8979  0F5B  01B2               	clrf	___wmul@product
  8980  0F5C  01B3               	clrf	___wmul@product+1
  8981  0F5D                     l7785:	
  8982  0F5D  1C2E               	btfss	___wmul@multiplier,0
  8983  0F5E  2F63               	goto	l7789
  8984  0F5F  0830               	movf	___wmul@multiplicand,w
  8985  0F60  07B2               	addwf	___wmul@product,f
  8986  0F61  0831               	movf	___wmul@multiplicand+1,w
  8987  0F62  3DB3               	addwfc	___wmul@product+1,f
  8988  0F63                     l7789:	
  8989  0F63  35B0               	lslf	___wmul@multiplicand,f
  8990  0F64  0DB1               	rlf	___wmul@multiplicand+1,f
  8991  0F65  36AF               	lsrf	___wmul@multiplier+1,f
  8992  0F66  0CAE               	rrf	___wmul@multiplier,f
  8993  0F67  082E               	movf	___wmul@multiplier,w
  8994  0F68  042F               	iorwf	___wmul@multiplier+1,w
  8995  0F69  1D03               	btfss	3,2
  8996  0F6A  2F5D               	goto	l7785
  8997  0F6B  0833               	movf	___wmul@product+1,w
  8998  0F6C  00AF               	movwf	?___wmul+1
  8999  0F6D  0832               	movf	___wmul@product,w
  9000  0F6E  00AE               	movwf	?___wmul
  9001  0F6F  0008               	return
  9002  0F70                     __end_of___wmul:	
  9003  0F70                     __ptext17:	
  9004 ;; *************** function _ButtonPressed *****************
  9005 ;; Defined at:
  9006 ;;		line 359 in file "../src/demo_ouput.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  t               4   19[BANK0 ] struct _MIWI_TICK
  9011 ;;  tickDifferen    4   23[BANK0 ] struct _MIWI_TICK
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      unsigned char 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, pclath, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 1C/1
  9018 ;;		On exit  : 1C/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;Total ram usage:        8 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    5
  9028 ;; This function calls:
  9029 ;;		_MiWi_TickGet
  9030 ;; This function is called by:
  9031 ;;		_run_p2p_demo
  9032 ;;		_freezer_feature
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _ButtonPressed
  9038  0F70                     _ButtonPressed:	
  9039                           
  9040                           ;demo_ouput.c: 361: MIWI_TICK tickDifference;
  9041                           ;demo_ouput.c: 363: if(PORTBbits.RB0 == 0)
  9042                           
  9043                           ;incstack = 0
  9044                           ; Regs used in _ButtonPressed: [wreg+status,2+status,0+pclath+cstack]
  9045  0F70  0020               	movlb	0	; select bank0
  9046  0F71  180D               	btfsc	13,0	;volatile
  9047  0F72  2F8B               	goto	l894
  9048                           
  9049                           ;demo_ouput.c: 364: {
  9050                           ;demo_ouput.c: 366: if(PUSH_BUTTON_pressed == 0)
  9051  0F73  0021               	movlb	1	; select bank1
  9052  0F74  0858               	movf	_PUSH_BUTTON_pressed^(0+128),w
  9053  0F75  1D03               	btfss	3,2
  9054  0F76  3400               	retlw	0
  9055                           
  9056                           ;demo_ouput.c: 367: {
  9057                           ;demo_ouput.c: 368: PUSH_BUTTON_pressed = 1;
  9058  0F77  01D8               	clrf	_PUSH_BUTTON_pressed^(0+128)
  9059  0F78  0AD8               	incf	_PUSH_BUTTON_pressed^(0+128),f
  9060                           
  9061                           ;demo_ouput.c: 369: PUSH_BUTTON_press_time = MiWi_TickGet();
  9062  0F79  319A  22A5         	fcall	_MiWi_TickGet
  9063  0F7B  082C               	movf	?_MiWi_TickGet+3,w
  9064  0F7C  0022               	movlb	2	; select bank2
  9065  0F7D  00AD               	movwf	(_PUSH_BUTTON_press_time+3)^(0+256)
  9066  0F7E  0020               	movlb	0	; select bank0
  9067  0F7F  082B               	movf	?_MiWi_TickGet+2,w
  9068  0F80  0022               	movlb	2	; select bank2
  9069  0F81  00AC               	movwf	(_PUSH_BUTTON_press_time+2)^(0+256)
  9070  0F82  0020               	movlb	0	; select bank0
  9071  0F83  082A               	movf	?_MiWi_TickGet+1,w
  9072  0F84  0022               	movlb	2	; select bank2
  9073  0F85  00AB               	movwf	(_PUSH_BUTTON_press_time+1)^(0+256)
  9074  0F86  0020               	movlb	0	; select bank0
  9075  0F87  0829               	movf	?_MiWi_TickGet,w
  9076  0F88  0022               	movlb	2	; select bank2
  9077  0F89  00AA               	movwf	_PUSH_BUTTON_press_time^(0+256)
  9078                           
  9079                           ;demo_ouput.c: 370: return 1;
  9080  0F8A  3401               	retlw	1
  9081  0F8B                     l894:	
  9082                           
  9083                           ;demo_ouput.c: 373: else if(PORTAbits.RA5 == 0)
  9084  0F8B  1A8C               	btfsc	12,5	;volatile
  9085  0F8C  2FA5               	goto	l9443
  9086                           
  9087                           ;demo_ouput.c: 374: {
  9088                           ;demo_ouput.c: 376: if(PUSH_BUTTON_pressed == 0)
  9089  0F8D  0021               	movlb	1	; select bank1
  9090  0F8E  0858               	movf	_PUSH_BUTTON_pressed^(0+128),w
  9091  0F8F  1D03               	btfss	3,2
  9092  0F90  3400               	retlw	0
  9093                           
  9094                           ;demo_ouput.c: 377: {
  9095                           ;demo_ouput.c: 378: PUSH_BUTTON_pressed = 1;
  9096  0F91  01D8               	clrf	_PUSH_BUTTON_pressed^(0+128)
  9097  0F92  0AD8               	incf	_PUSH_BUTTON_pressed^(0+128),f
  9098                           
  9099                           ;demo_ouput.c: 379: PUSH_BUTTON_press_time = MiWi_TickGet();
  9100  0F93  319A  22A5         	fcall	_MiWi_TickGet
  9101  0F95  082C               	movf	?_MiWi_TickGet+3,w
  9102  0F96  0022               	movlb	2	; select bank2
  9103  0F97  00AD               	movwf	(_PUSH_BUTTON_press_time+3)^(0+256)
  9104  0F98  0020               	movlb	0	; select bank0
  9105  0F99  082B               	movf	?_MiWi_TickGet+2,w
  9106  0F9A  0022               	movlb	2	; select bank2
  9107  0F9B  00AC               	movwf	(_PUSH_BUTTON_press_time+2)^(0+256)
  9108  0F9C  0020               	movlb	0	; select bank0
  9109  0F9D  082A               	movf	?_MiWi_TickGet+1,w
  9110  0F9E  0022               	movlb	2	; select bank2
  9111  0F9F  00AB               	movwf	(_PUSH_BUTTON_press_time+1)^(0+256)
  9112  0FA0  0020               	movlb	0	; select bank0
  9113  0FA1  0829               	movf	?_MiWi_TickGet,w
  9114  0FA2  0022               	movlb	2	; select bank2
  9115  0FA3  00AA               	movwf	_PUSH_BUTTON_press_time^(0+256)
  9116                           
  9117                           ;demo_ouput.c: 380: return 2;
  9118  0FA4  3402               	retlw	2
  9119  0FA5                     l9443:	
  9120                           
  9121                           ;demo_ouput.c: 383: else
  9122                           ;demo_ouput.c: 384: {
  9123                           ;demo_ouput.c: 386: MIWI_TICK t = MiWi_TickGet();
  9124  0FA5  319A  22A5  3188   	fcall	_MiWi_TickGet
  9125  0FA8  082C               	movf	?_MiWi_TickGet+3,w
  9126  0FA9  00B6               	movwf	ButtonPressed@t+3
  9127  0FAA  082B               	movf	?_MiWi_TickGet+2,w
  9128  0FAB  00B5               	movwf	ButtonPressed@t+2
  9129  0FAC  082A               	movf	?_MiWi_TickGet+1,w
  9130  0FAD  00B4               	movwf	ButtonPressed@t+1
  9131  0FAE  0829               	movf	?_MiWi_TickGet,w
  9132  0FAF  00B3               	movwf	ButtonPressed@t
  9133                           
  9134                           ;demo_ouput.c: 389: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  9135  0FB0  0836               	movf	ButtonPressed@t+3,w
  9136  0FB1  00BA               	movwf	ButtonPressed@tickDifference+3
  9137  0FB2  0835               	movf	ButtonPressed@t+2,w
  9138  0FB3  00B9               	movwf	ButtonPressed@tickDifference+2
  9139  0FB4  0834               	movf	ButtonPressed@t+1,w
  9140  0FB5  00B8               	movwf	ButtonPressed@tickDifference+1
  9141  0FB6  0833               	movf	ButtonPressed@t,w
  9142  0FB7  00B7               	movwf	ButtonPressed@tickDifference
  9143  0FB8  0022               	movlb	2	; select bank2
  9144  0FB9  082A               	movf	_PUSH_BUTTON_press_time^(0+256),w
  9145  0FBA  0020               	movlb	0	; select bank0
  9146  0FBB  02B7               	subwf	ButtonPressed@tickDifference,f
  9147  0FBC  0022               	movlb	2	; select bank2
  9148  0FBD  082B               	movf	(_PUSH_BUTTON_press_time+1)^(0+256),w
  9149  0FBE  0020               	movlb	0	; select bank0
  9150  0FBF  3BB8               	subwfb	ButtonPressed@tickDifference+1,f
  9151  0FC0  0022               	movlb	2	; select bank2
  9152  0FC1  082C               	movf	(_PUSH_BUTTON_press_time+2)^(0+256),w
  9153  0FC2  0020               	movlb	0	; select bank0
  9154  0FC3  3BB9               	subwfb	ButtonPressed@tickDifference+2,f
  9155  0FC4  0022               	movlb	2	; select bank2
  9156  0FC5  082D               	movf	(_PUSH_BUTTON_press_time+3)^(0+256),w
  9157  0FC6  0020               	movlb	0	; select bank0
  9158  0FC7  3BBA               	subwfb	ButtonPressed@tickDifference+3,f
  9159                           
  9160                           ;demo_ouput.c: 392: if(tickDifference.Val > 0x00003FFF)
  9161  0FC8  083A               	movf	ButtonPressed@tickDifference+3,w
  9162  0FC9  1D03               	btfss	3,2
  9163  0FCA  2FD2               	goto	l9451
  9164  0FCB  0839               	movf	ButtonPressed@tickDifference+2,w
  9165  0FCC  1D03               	btfss	3,2
  9166  0FCD  2FD2               	goto	l9451
  9167  0FCE  3040               	movlw	64
  9168  0FCF  0238               	subwf	ButtonPressed@tickDifference+1,w
  9169  0FD0  1C03               	btfss	3,0
  9170  0FD1  3400               	retlw	0
  9171  0FD2                     l9451:	
  9172                           
  9173                           ;demo_ouput.c: 393: {
  9174                           ;demo_ouput.c: 394: PUSH_BUTTON_pressed = 0;
  9175  0FD2  0021               	movlb	1	; select bank1
  9176  0FD3  01D8               	clrf	_PUSH_BUTTON_pressed^(0+128)
  9177                           
  9178                           ;demo_ouput.c: 395: }
  9179                           ;demo_ouput.c: 396: }
  9180                           ;demo_ouput.c: 398: return 0;
  9181  0FD4  3400               	retlw	0
  9182  0FD5                     __end_of_ButtonPressed:	
  9183  0FD5                     __ptext10:	
  9184 ;; *************** function _DemoOutput_UpdateTxRx *****************
  9185 ;; Defined at:
  9186 ;;		line 280 in file "../src/demo_ouput.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;  TxNum           1    wreg     unsigned char 
  9189 ;;  RxNum           1   57[BANK0 ] unsigned char 
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;  TxNum           1   58[BANK0 ] unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      void 
  9194 ;; Registers used:
  9195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9196 ;; Tracked objects:
  9197 ;;		On entry : 1F/1
  9198 ;;		On exit  : 1F/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9201 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;Total ram usage:        2 bytes
  9206 ;; Hardware stack levels used:    1
  9207 ;; Hardware stack levels required when called:    9
  9208 ;; This function calls:
  9209 ;;		_LCDTRXCount
  9210 ;; This function is called by:
  9211 ;;		_Process_RxMessage
  9212 ;;		_run_p2p_demo
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           
  9217                           ;psect for function _DemoOutput_UpdateTxRx
  9218  0FD5                     _DemoOutput_UpdateTxRx:	
  9219                           
  9220                           ;incstack = 0
  9221                           ; Regs used in _DemoOutput_UpdateTxRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9222                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  9223  0FD5  0020               	movlb	0	; select bank0
  9224  0FD6  00DA               	movwf	DemoOutput_UpdateTxRx@TxNum
  9225                           
  9226                           ;demo_ouput.c: 282: LCDTRXCount(TxNum, RxNum);
  9227  0FD7  0859               	movf	DemoOutput_UpdateTxRx@RxNum,w
  9228  0FD8  00D7               	movwf	LCDTRXCount@rxCount
  9229  0FD9  085A               	movf	DemoOutput_UpdateTxRx@TxNum,w
  9230  0FDA  31A7  2FDF         	ljmp	_LCDTRXCount
  9231  0FDC                     __end_of_DemoOutput_UpdateTxRx:	
  9232  0FDC                     __ptext9:	
  9233 ;; *************** function _Process_RxMessage *****************
  9234 ;; Defined at:
  9235 ;;		line 39 in file "../src/p2p_demo.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      unsigned char 
  9242 ;; Registers used:
  9243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 1C/1
  9246 ;;		On exit  : 1E/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:   12
  9256 ;; This function calls:
  9257 ;;		_DELAY_ms
  9258 ;;		_DemoOutput_HandleMessage
  9259 ;;		_DemoOutput_Instruction
  9260 ;;		_DemoOutput_UpdateTxRx
  9261 ;;		_MiApp_DiscardMessage
  9262 ;;		_MiApp_MessageAvailable
  9263 ;; This function is called by:
  9264 ;;		_run_p2p_demo
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _Process_RxMessage
  9270  0FDC                     _Process_RxMessage:	
  9271                           
  9272                           ;p2p_demo.c: 47: if( MiApp_MessageAvailable() )
  9273                           
  9274                           ;incstack = 0
  9275                           ; Regs used in _Process_RxMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9276  0FDC  319B  2333  3188   	fcall	_MiApp_MessageAvailable
  9277  0FDF  3A00               	xorlw	0
  9278  0FE0  1903               	skipnz
  9279  0FE1  0008               	return
  9280                           
  9281                           ;p2p_demo.c: 48: {
  9282                           ;p2p_demo.c: 55: DemoOutput_HandleMessage();
  9283  0FE2  3191  21D2  3188   	fcall	_DemoOutput_HandleMessage
  9284                           
  9285                           ;p2p_demo.c: 57: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  9286  0FE5  0021               	movlb	1	; select bank1
  9287  0FE6  0AD9               	incf	_RxNum^(0+128),f
  9288  0FE7  0859               	movf	_RxNum^(0+128),w
  9289  0FE8  0020               	movlb	0	; select bank0
  9290  0FE9  00D9               	movwf	DemoOutput_UpdateTxRx@RxNum
  9291  0FEA  0021               	movlb	1	; select bank1
  9292  0FEB  085B               	movf	_TxNum^(0+128),w
  9293  0FEC  27D5               	fcall	_DemoOutput_UpdateTxRx
  9294                           
  9295                           ;p2p_demo.c: 59: LATDbits.LATD6 ^= 1;
  9296  0FED  3040               	movlw	64
  9297  0FEE  0022               	movlb	2	; select bank2
  9298  0FEF  068F               	xorwf	15,f	;volatile
  9299                           
  9300                           ;p2p_demo.c: 60: DELAY_ms(2000);
  9301  0FF0  30D0               	movlw	208
  9302  0FF1  0020               	movlb	0	; select bank0
  9303  0FF2  00B5               	movwf	DELAY_ms@ms
  9304  0FF3  3007               	movlw	7
  9305  0FF4  00B6               	movwf	DELAY_ms@ms+1
  9306  0FF5  3193  239D  3188   	fcall	_DELAY_ms
  9307                           
  9308                           ;p2p_demo.c: 61: DemoOutput_Instruction();
  9309  0FF8  27FB  3188         	fcall	_DemoOutput_Instruction
  9310                           
  9311                           ;p2p_demo.c: 68: MiApp_DiscardMessage();
  9312  0FFA  2FFC               	ljmp	l9231
  9313  0FFB                     __end_of_Process_RxMessage:	
  9314  0FFB                     __ptext53:	
  9315 ;; *************** function _DemoOutput_Instruction *****************
  9316 ;; Defined at:
  9317 ;;		line 224 in file "../src/demo_ouput.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;		None
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;		None
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  1    wreg      void 
  9324 ;; Registers used:
  9325 ;;		None
  9326 ;; Tracked objects:
  9327 ;;		On entry : 1C/0
  9328 ;;		On exit  : 1C/0
  9329 ;;		Unchanged: 1C/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;Total ram usage:        0 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:    4
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_Process_RxMessage
  9342 ;;		_run_p2p_demo
  9343 ;;		_Initialize_Demo
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           
  9348                           ;psect for function _DemoOutput_Instruction
  9349  0FFB                     _DemoOutput_Instruction:	
  9350  0FFB                     l868:	
  9351                           ;incstack = 0
  9352                           ; Regs used in _DemoOutput_Instruction: []
  9353                           
  9354  0FFB  0008               	return
  9355  0FFC                     __end_of_DemoOutput_Instruction:	
  9356  0FFC                     __ptext47:	
  9357 ;; *************** function _MiApp_DiscardMessage *****************
  9358 ;; Defined at:
  9359 ;;		line 2384 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;		None
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      void 
  9366 ;; Registers used:
  9367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 1C/0
  9370 ;;		On exit  : 1F/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;Total ram usage:        0 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    6
  9380 ;; This function calls:
  9381 ;;		_MiMAC_DiscardPacket
  9382 ;; This function is called by:
  9383 ;;		_MiApp_EstablishConnection
  9384 ;;		_Process_RxMessage
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function _MiApp_DiscardMessage
  9390  0FFC                     _MiApp_DiscardMessage:	
  9391  0FFC                     l9231:	
  9392                           ;incstack = 0
  9393                           ; Regs used in _MiApp_DiscardMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9394                           
  9395                           
  9396                           ;miwi_p2p.c: 2386: P2PStatus.bits.RxHasUserData = 0;
  9397  0FFC  0021               	movlb	1	; select bank1
  9398  0FFD  11D7               	bcf	_P2PStatus^(0+128),3	;volatile
  9399                           
  9400                           ;miwi_p2p.c: 2387: MiMAC_DiscardPacket();
  9401  0FFE  3197  2FBB         	ljmp	l7851
  9402  1000                     __end_of_MiApp_DiscardMessage:	
  9403                           
  9404                           	psect	text11
  9405  27DF                     __ptext11:	
  9406 ;; *************** function _LCDTRXCount *****************
  9407 ;; Defined at:
  9408 ;;		line 312 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  txCount         1    wreg     unsigned char 
  9411 ;;  rxCount         1   55[BANK0 ] unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  txCount         1   56[BANK0 ] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 1F/0
  9420 ;;		On exit  : 1F/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9423 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;Total ram usage:        2 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    8
  9430 ;; This function calls:
  9431 ;;		_DELAY_ms
  9432 ;;		_LCD_Erase
  9433 ;;		_LCD_Update
  9434 ;;		_sprintf
  9435 ;; This function is called by:
  9436 ;;		_DemoOutput_UpdateTxRx
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _LCDTRXCount
  9442  27DF                     _LCDTRXCount:	
  9443                           
  9444                           ;incstack = 0
  9445                           ; Regs used in _LCDTRXCount: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9446                           ;LCDTRXCount@txCount stored from wreg
  9447  27DF  00D8               	movwf	LCDTRXCount@txCount
  9448                           
  9449                           ;lcd.c: 315: LCD_Erase();
  9450  27E0  3194  2405  31A7   	fcall	_LCD_Erase
  9451                           
  9452                           ;lcd.c: 316: DELAY_ms(5);
  9453  27E3  3005               	movlw	5
  9454  27E4  00B5               	movwf	DELAY_ms@ms
  9455  27E5  01B6               	clrf	DELAY_ms@ms+1
  9456  27E6  3193  239D  31A7   	fcall	_DELAY_ms
  9457                           
  9458                           ;lcd.c: 318: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  9459  27E9  3059               	movlw	low (STR_16| (0+32768))
  9460  27EA  00B5               	movwf	sprintf@f
  9461  27EB  30A4               	movlw	high (STR_16| (0+32768))
  9462  27EC  00B6               	movwf	sprintf@f+1
  9463  27ED  0858               	movf	LCDTRXCount@txCount,w
  9464  27EE  00B7               	movwf	?_sprintf+2
  9465  27EF  3048               	movlw	(low (_LCDText| (0+512)))& (0+255)
  9466  27F0  01B8               	clrf	?_sprintf+3
  9467  27F1  3181  2111  31A7   	fcall	_sprintf
  9468                           
  9469                           ;lcd.c: 319: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  9470  27F4  3048               	movlw	low (STR_17| (0+32768))
  9471  27F5  00B5               	movwf	sprintf@f
  9472  27F6  30A4               	movlw	high (STR_17| (0+32768))
  9473  27F7  00B6               	movwf	sprintf@f+1
  9474  27F8  0857               	movf	LCDTRXCount@rxCount,w
  9475  27F9  00B7               	movwf	?_sprintf+2
  9476  27FA  3058               	movlw	(low ((_LCDText| (0+512)+16)))& (0+255)
  9477  27FB  01B8               	clrf	?_sprintf+3
  9478  27FC  3181  2111         	fcall	_sprintf
  9479                           
  9480                           ;lcd.c: 320: LCD_Update();
  9481  27FE  3189  295B         	ljmp	l8559
  9482  2800                     __end_of_LCDTRXCount:	
  9483                           
  9484                           	psect	text15
  9485  181A                     __ptext15:	
  9486 ;; *************** function _MiApp_BroadcastPacket *****************
  9487 ;; Defined at:
  9488 ;;		line 1709 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  SecEn           1    wreg     unsigned char 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  SecEn           1   58[BANK0 ] unsigned char 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      unsigned char 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 1F/1
  9499 ;;		On exit  : 1F/1
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;Total ram usage:        1 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:   10
  9509 ;; This function calls:
  9510 ;;		_SendPacket
  9511 ;; This function is called by:
  9512 ;;		_run_p2p_demo
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           
  9517                           ;psect for function _MiApp_BroadcastPacket
  9518  181A                     _MiApp_BroadcastPacket:	
  9519                           
  9520                           ;incstack = 0
  9521                           ; Regs used in _MiApp_BroadcastPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9522                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  9523  181A  0020               	movlb	0	; select bank0
  9524  181B  00DA               	movwf	MiApp_BroadcastPacket@SecEn
  9525                           
  9526                           ;miwi_p2p.c: 1737: return SendPacket(1, myPANID, (0), 0, SecEn);
  9527                           ;	Return value of _MiApp_BroadcastPacket is never used
  9528  181C  0021               	movlb	1	; select bank1
  9529  181D  0861               	movf	(_myPANID+1)^(0+128),w
  9530  181E  0020               	movlb	0	; select bank0
  9531  181F  00D4               	movwf	SendPacket@DestinationPANID+1
  9532  1820  0021               	movlb	1	; select bank1
  9533  1821  0860               	movf	_myPANID^(0+128),w
  9534  1822  0020               	movlb	0	; select bank0
  9535  1823  00D3               	movwf	SendPacket@DestinationPANID
  9536  1824  01D5               	clrf	SendPacket@DestinationAddress
  9537  1825  01D6               	clrf	SendPacket@DestinationAddress+1
  9538  1826  01D7               	clrf	SendPacket@isCommand
  9539  1827  085A               	movf	MiApp_BroadcastPacket@SecEn,w
  9540  1828  00D8               	movwf	SendPacket@SecurityEnabled
  9541  1829  3001               	movlw	1
  9542  182A  2AD1               	ljmp	_SendPacket
  9543  182B                     __end_of_MiApp_BroadcastPacket:	
  9544  182B                     __ptext13:	
  9545 ;; *************** function _MiApp_UnicastConnection *****************
  9546 ;; Defined at:
  9547 ;;		line 1780 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  ConnectionIn    1    wreg     unsigned char 
  9550 ;;  SecEn           1   24[BANK1 ] unsigned char 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  ConnectionIn    1   59[BANK0 ] unsigned char 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      unsigned char 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 1F/2
  9559 ;;		On exit  : 1E/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        2 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:   11
  9569 ;; This function calls:
  9570 ;;		_MiApp_UnicastAddress
  9571 ;;		___bmul
  9572 ;; This function is called by:
  9573 ;;		_run_p2p_demo
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function _MiApp_UnicastConnection
  9579  182B                     _MiApp_UnicastConnection:	
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in _MiApp_UnicastConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9583                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  9584  182B  0020               	movlb	0	; select bank0
  9585  182C  00DB               	movwf	MiApp_UnicastConnection@ConnectionIndex
  9586                           
  9587                           ;miwi_p2p.c: 1783: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  9588  182D  300A               	movlw	10
  9589  182E  00A9               	movwf	___bmul@multiplicand
  9590  182F  085B               	movf	MiApp_UnicastConnection@ConnectionIndex,w
  9591  1830  3197  2731  3198   	fcall	___bmul
  9592  1833  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
  9593  1834  0086               	movwf	6
  9594  1835  3001               	movlw	1	; select bank3/4
  9595  1836  0087               	movwf	7
  9596  1837  1F81               	btfss	1,7
  9597  1838  3400               	retlw	0
  9598                           
  9599                           ;miwi_p2p.c: 1784: {
  9600                           ;miwi_p2p.c: 1817: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  9601  1839  0021               	movlb	1	; select bank1
  9602  183A  01B6               	clrf	MiApp_UnicastAddress@PermanentAddr^(0+128)
  9603  183B  0AB6               	incf	MiApp_UnicastAddress@PermanentAddr^(0+128),f
  9604  183C  0838               	movf	MiApp_UnicastConnection@SecEn^(0+128),w
  9605  183D  00B7               	movwf	MiApp_UnicastAddress@SecEn^(0+128)
  9606  183E  300A               	movlw	10
  9607  183F  0020               	movlb	0	; select bank0
  9608  1840  00A9               	movwf	___bmul@multiplicand
  9609  1841  085B               	movf	MiApp_UnicastConnection@ConnectionIndex,w
  9610  1842  3197  2731  3198   	fcall	___bmul
  9611  1845  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
  9612  1846  2847               	ljmp	_MiApp_UnicastAddress
  9613  1847                     __end_of_MiApp_UnicastConnection:	
  9614                           ;miwi_p2p.c: 1818: }
  9615                           ;miwi_p2p.c: 1819: return 0;
  9616                           
  9617  1847                     __ptext14:	
  9618 ;; *************** function _MiApp_UnicastAddress *****************
  9619 ;; Defined at:
  9620 ;;		line 1859 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  DestinationA    1    wreg     PTR unsigned char 
  9623 ;;		 -> ConnectionTable(50), 
  9624 ;;  PermanentAdd    1   22[BANK1 ] unsigned char 
  9625 ;;  SecEn           1   23[BANK1 ] unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  DestinationA    1   58[BANK0 ] PTR unsigned char 
  9628 ;;		 -> ConnectionTable(50), 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      unsigned char 
  9631 ;; Registers used:
  9632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9633 ;; Tracked objects:
  9634 ;;		On entry : 1F/0
  9635 ;;		On exit  : 1F/1
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9638 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;Total ram usage:        3 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; Hardware stack levels required when called:   10
  9645 ;; This function calls:
  9646 ;;		_SendPacket
  9647 ;; This function is called by:
  9648 ;;		_MiApp_UnicastConnection
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           
  9653                           ;psect for function _MiApp_UnicastAddress
  9654  1847                     _MiApp_UnicastAddress:	
  9655                           
  9656                           ;incstack = 0
  9657                           ; Regs used in _MiApp_UnicastAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9658                           ;MiApp_UnicastAddress@DestinationAddress stored from wreg
  9659  1847  00DA               	movwf	MiApp_UnicastAddress@DestinationAddress
  9660                           
  9661                           ;miwi_p2p.c: 1890: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
  9662  1848  0021               	movlb	1	; select bank1
  9663  1849  0861               	movf	(_myPANID+1)^(0+128),w
  9664  184A  0020               	movlb	0	; select bank0
  9665  184B  00D4               	movwf	SendPacket@DestinationPANID+1
  9666  184C  0021               	movlb	1	; select bank1
  9667  184D  0860               	movf	_myPANID^(0+128),w
  9668  184E  0020               	movlb	0	; select bank0
  9669  184F  00D3               	movwf	SendPacket@DestinationPANID
  9670  1850  085A               	movf	MiApp_UnicastAddress@DestinationAddress,w
  9671  1851  00D5               	movwf	SendPacket@DestinationAddress
  9672  1852  3001               	movlw	1
  9673  1853  00D6               	movwf	SendPacket@DestinationAddress+1
  9674  1854  01D7               	clrf	SendPacket@isCommand
  9675  1855  0021               	movlb	1	; select bank1
  9676  1856  0837               	movf	MiApp_UnicastAddress@SecEn^(0+128),w
  9677  1857  0020               	movlb	0	; select bank0
  9678  1858  00D8               	movwf	SendPacket@SecurityEnabled
  9679  1859  3000               	movlw	0
  9680  185A  2AD1               	ljmp	_SendPacket
  9681  185B                     __end_of_MiApp_UnicastAddress:	
  9682  185B                     __ptext28:	
  9683 ;; *************** function _EEPROM_Read *****************
  9684 ;; Defined at:
  9685 ;;		line 27 in file "../src/system_config/pic18exp_pic16f1947_24j40/eeprom.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  dest            1    wreg     PTR unsigned char 
  9688 ;;		 -> myLongAddress(8), 
  9689 ;;  addr            1   10[BANK0 ] unsigned char 
  9690 ;;  count           1   11[BANK0 ] unsigned char 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;  dest            1   12[BANK0 ] PTR unsigned char 
  9693 ;;		 -> myLongAddress(8), 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 1F/0
  9700 ;;		On exit  : 1F/2
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;Total ram usage:        3 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:    6
  9710 ;; This function calls:
  9711 ;;		_SPIGet
  9712 ;;		_SPIPut
  9713 ;; This function is called by:
  9714 ;;		_MiApp_ProtocolInit
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           
  9719                           ;psect for function _EEPROM_Read
  9720  185B                     _EEPROM_Read:	
  9721                           
  9722                           ;incstack = 0
  9723                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9724                           ;EEPROM_Read@dest stored from wreg
  9725  185B  00AC               	movwf	EEPROM_Read@dest
  9726                           
  9727                           ;eeprom.c: 35: LATCbits.LATC2 = 0;
  9728  185C  0022               	movlb	2	; select bank2
  9729  185D  110E               	bcf	14,2	;volatile
  9730                           
  9731                           ;eeprom.c: 36: SPIPut(0x03);
  9732  185E  3003               	movlw	3
  9733  185F  3189  21C9  3198   	fcall	_SPIPut
  9734                           
  9735                           ;eeprom.c: 37: SPIPut(addr);
  9736  1862  082A               	movf	EEPROM_Read@addr,w
  9737  1863  3189  21C9  3198   	fcall	_SPIPut
  9738  1866                     l9347:	
  9739                           ;eeprom.c: 38: while( count )
  9740                           
  9741  1866  082B               	movf	EEPROM_Read@count,w
  9742  1867  1903               	btfsc	3,2
  9743  1868  2874               	goto	l650
  9744                           
  9745                           ;eeprom.c: 39: {
  9746                           ;eeprom.c: 40: *dest++ = SPIGet();
  9747  1869  082C               	movf	EEPROM_Read@dest,w
  9748  186A  0086               	movwf	6
  9749  186B  3001               	movlw	1	; select bank2/3
  9750  186C  0087               	movwf	7
  9751  186D  2727  3198         	fcall	_SPIGet
  9752  186F  0081               	movwf	1
  9753  1870  0020               	movlb	0	; select bank0
  9754  1871  0AAC               	incf	EEPROM_Read@dest,f
  9755                           
  9756                           ;eeprom.c: 41: count--;
  9757  1872  03AB               	decf	EEPROM_Read@count,f
  9758  1873  2866               	goto	l9347
  9759  1874                     l650:	
  9760                           
  9761                           ;eeprom.c: 42: }
  9762                           ;eeprom.c: 43: LATCbits.LATC2 = 1;
  9763  1874  0022               	movlb	2	; select bank2
  9764  1875  150E               	bsf	14,2	;volatile
  9765  1876  0008               	return
  9766  1877                     __end_of_EEPROM_Read:	
  9767  1877                     start_initialization:	
  9768  1877                     __initialization:		;BIGRAM
  9769                           
  9770                           ;initializer for _BankIndex
  9771  1877  30FF               	movlw	255
  9772  1878  00E6               	movwf	__pdataBANK0& (0+127)
  9773                           
  9774                           ; Initialize objects allocated to BANK1
  9775  1879  0021               	movlb	1	; select bank1
  9776                           
  9777                           ;initializer for _AdditionalNodeID
  9778  187A  3001               	movlw	1
  9779  187B  00E9               	movwf	__pdataBANK1& (0+127)
  9780                           
  9781                           ;initializer for _chk_sel_status
  9782  187C  00EA               	movwf	(__pdataBANK1+1)& (0+127)
  9783                           
  9784                           ;initializer for _ConnMode
  9785  187D  3003               	movlw	3
  9786  187E  00EB               	movwf	(__pdataBANK1+2)& (0+127)
  9787                           
  9788                           ; Initialize objects allocated to BANK2
  9789  187F  3002               	movlw	low __pidataBANK2
  9790  1880  0084               	movwf	4
  9791  1881  3098               	movlw	(high __pidataBANK2)| (0+128)
  9792  1882  0085               	movwf	5
  9793  1883  303C               	movlw	low __pdataBANK2
  9794  1884  0086               	movwf	6
  9795  1885  3001               	movlw	high __pdataBANK2
  9796  1886  0087               	movwf	7
  9797  1887  3018               	movlw	24
  9798  1888  01FF               	clrf	127
  9799  1889  31A7  2745  3198   	fcall	init_ram
  9800                           
  9801                           ; Clear objects allocated to BIGRAM
  9802  188C  3066               	movlw	102
  9803  188D  0084               	movwf	4
  9804  188E  3023               	movlw	35
  9805  188F  0085               	movwf	5
  9806  1890  308A               	movlw	138
  9807  1891  00FE               	movwf	126
  9808  1892  01FF               	clrf	127
  9809  1893  31A7  2739  3198   	fcall	clear_ram0
  9810                           
  9811                           ; Clear objects allocated to COMMON
  9812  1896  01FC               	clrf	__pbssCOMMON& (0+127)
  9813  1897  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  9814                           
  9815                           ; Clear objects allocated to BANK0
  9816  1898  0020               	movlb	0	; select bank0
  9817  1899  30C7               	movlw	low __pbssBANK1
  9818  189A  01DE               	clrf	__pbssBANK0& (0+127)
  9819  189B  01DF               	clrf	(__pbssBANK0+1)& (0+127)
  9820  189C  01E0               	clrf	(__pbssBANK0+2)& (0+127)
  9821  189D  01E1               	clrf	(__pbssBANK0+3)& (0+127)
  9822  189E  01E2               	clrf	(__pbssBANK0+4)& (0+127)
  9823  189F  01E3               	clrf	(__pbssBANK0+5)& (0+127)
  9824  18A0  01E4               	clrf	(__pbssBANK0+6)& (0+127)
  9825  18A1  01E5               	clrf	(__pbssBANK0+7)& (0+127)
  9826                           
  9827                           ; Clear objects allocated to BANK1
  9828  18A2  0084               	movwf	4
  9829  18A3  3000               	movlw	high __pbssBANK1
  9830  18A4  0085               	movwf	5
  9831  18A5  3022               	movlw	34
  9832  18A6  00FE               	movwf	126
  9833  18A7  3000               	movlw	0
  9834  18A8  00FF               	movwf	127
  9835  18A9  31A7  2739  3198   	fcall	clear_ram0
  9836                           
  9837                           ; Clear objects allocated to BANK2
  9838  18AC  3020               	movlw	low __pbssBANK2
  9839  18AD  0084               	movwf	4
  9840  18AE  3001               	movlw	high __pbssBANK2
  9841  18AF  0085               	movwf	5
  9842  18B0  301C               	movlw	28
  9843  18B1  00FE               	movwf	126
  9844  18B2  3000               	movlw	0
  9845  18B3  00FF               	movwf	127
  9846  18B4  31A7  2739  3198   	fcall	clear_ram0
  9847                           
  9848                           ; Clear objects allocated to BANK3
  9849  18B7  30A0               	movlw	low __pbssBANK3
  9850  18B8  0084               	movwf	4
  9851  18B9  3001               	movlw	high __pbssBANK3
  9852  18BA  0085               	movwf	5
  9853  18BB  3032               	movlw	50
  9854  18BC  00FE               	movwf	126
  9855  18BD  3000               	movlw	0
  9856  18BE  00FF               	movwf	127
  9857  18BF  31A7  2739  3198   	fcall	clear_ram0
  9858                           
  9859                           ; Clear objects allocated to BANK4
  9860  18C2  3020               	movlw	low __pbssBANK4
  9861  18C3  0084               	movwf	4
  9862  18C4  3002               	movlw	high __pbssBANK4
  9863  18C5  0085               	movwf	5
  9864  18C6  3049               	movlw	73
  9865  18C7  00FE               	movwf	126
  9866  18C8  3000               	movlw	0
  9867  18C9  00FF               	movwf	127
  9868  18CA  31A7  2739  3198   	fcall	clear_ram0
  9869  18CD                     end_of_initialization:	
  9870                           ;End of C runtime variable initialization code
  9871                           
  9872  18CD                     __end_of__initialization:	
  9873  18CD  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9874  18CE  0020               	movlb	0
  9875  18CF  28D0               	ljmp	_main	;jump to C main() function
  9876  18D0                     __pmaintext:	
  9877                           ; 1 bytes @ 0x3E
  9878 ;;
  9879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9880 ;;
  9881 ;; *************** function _main *****************
  9882 ;; Defined at:
  9883 ;;		line 56 in file "../src/main.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  freezer_enab    1   38[BANK1 ] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : B1F/0
  9894 ;;		On exit  : 1C/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;Total ram usage:        1 bytes
  9902 ;; Hardware stack levels required when called:   15
  9903 ;; This function calls:
  9904 ;;		_CONSOLE_Initialize
  9905 ;;		_DemoOutput_Greeting
  9906 ;;		_InitSymbolTimer
  9907 ;;		_Initialize_Demo
  9908 ;;		_Run_Demo
  9909 ;;		_SYSTEM_Initialize
  9910 ;;		_freezer_feature
  9911 ;; This function is called by:
  9912 ;;		Startup code after reset
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           
  9917                           ;psect for function _main
  9918  18D0                     _main:	
  9919                           
  9920                           ;main.c: 60: SYSTEM_Initialize();
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9924  18D0  2770  3198         	fcall	_SYSTEM_Initialize
  9925                           
  9926                           ;main.c: 63: CONSOLE_Initialize();
  9927  18D2  20E3               	fcall	_CONSOLE_Initialize
  9928                           
  9929                           ;main.c: 66: InitSymbolTimer ();
  9930  18D3  3197  27ED  3198   	fcall	_InitSymbolTimer
  9931                           
  9932                           ;main.c: 68: DemoOutput_Greeting();
  9933  18D6  3191  2194  3198   	fcall	_DemoOutput_Greeting
  9934                           
  9935                           ;main.c: 72: freezer_enable = freezer_feature();
  9936  18D9  27AE  3198         	fcall	_freezer_feature
  9937  18DB  0021               	movlb	1	; select bank1
  9938  18DC  00C6               	movwf	main@freezer_enable^(0+128)
  9939                           
  9940                           ;main.c: 76: Initialize_Demo(freezer_enable);
  9941  18DD  0846               	movf	main@freezer_enable^(0+128),w
  9942  18DE  20EE  3198         	fcall	_Initialize_Demo
  9943  18E0                     l10109:	
  9944                           
  9945                           ;main.c: 78: {
  9946                           ;main.c: 80: Run_Demo();
  9947  18E0  276E  3198         	fcall	_Run_Demo
  9948  18E2  28E0               	goto	l10109
  9949  18E3                     __end_of_main:	
  9950  18E3                     __ptext80:	
  9951 ;; *************** function _CONSOLE_Initialize *****************
  9952 ;; Defined at:
  9953 ;;		line 67 in file "../src/system_config/pic18exp_pic16f1947_24j40/console.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;		None
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;		None
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		wreg
  9962 ;; Tracked objects:
  9963 ;;		On entry : 1F/0
  9964 ;;		On exit  : 1F/3
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;Total ram usage:        0 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    4
  9974 ;; This function calls:
  9975 ;;		Nothing
  9976 ;; This function is called by:
  9977 ;;		_main
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           
  9982                           ;psect for function _CONSOLE_Initialize
  9983  18E3                     _CONSOLE_Initialize:	
  9984                           
  9985                           ;console.c: 70: TRISCbits.TRISC7 = 1;
  9986                           
  9987                           ;incstack = 0
  9988                           ; Regs used in _CONSOLE_Initialize: [wreg]
  9989  18E3  0021               	movlb	1	; select bank1
  9990  18E4  178E               	bsf	14,7	;volatile
  9991                           
  9992                           ;console.c: 71: TRISCbits.TRISC6 = 0;
  9993  18E5  130E               	bcf	14,6	;volatile
  9994                           
  9995                           ;console.c: 73: TXSTA = 0x24;
  9996  18E6  3024               	movlw	36
  9997  18E7  0023               	movlb	3	; select bank3
  9998  18E8  009E               	movwf	30	;volatile
  9999                           
 10000                           ;console.c: 77: RCSTA = 0x90;
 10001  18E9  3090               	movlw	144
 10002  18EA  009D               	movwf	29	;volatile
 10003                           
 10004                           ;console.c: 78: SPBRG = ( (((10000000)/19200)/16) - 1);
 10005  18EB  301F               	movlw	31
 10006  18EC  009B               	movwf	27	;volatile
 10007  18ED  0008               	return
 10008  18EE                     __end_of_CONSOLE_Initialize:	
 10009  18EE                     __ptext18:	
 10010 ;; *************** function _Initialize_Demo *****************
 10011 ;; Defined at:
 10012 ;;		line 96 in file "../src/task.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  freezer_enab    1    wreg     unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  freezer_enab    1   36[BANK1 ] unsigned char 
 10017 ;;  i               1   37[BANK1 ] unsigned char 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      unsigned char 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 1F/1
 10024 ;;		On exit  : 1C/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;Total ram usage:        2 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:   13
 10034 ;; This function calls:
 10035 ;;		_DemoOutput_Channel
 10036 ;;		_DemoOutput_ChannelError
 10037 ;;		_DemoOutput_Instruction
 10038 ;;		_DumpConnection
 10039 ;;		_MiApp_ConnectionMode
 10040 ;;		_MiApp_EstablishConnection
 10041 ;;		_MiApp_ProtocolInit
 10042 ;;		_MiApp_SetChannel
 10043 ;;		_MiApp_StartConnection
 10044 ;; This function is called by:
 10045 ;;		_main
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           
 10050                           ;psect for function _Initialize_Demo
 10051  18EE                     _Initialize_Demo:	
 10052                           
 10053                           ;incstack = 0
 10054                           ; Regs used in _Initialize_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10055                           ;Initialize_Demo@freezer_enable stored from wreg
 10056  18EE  00C4               	movwf	Initialize_Demo@freezer_enable^(0+128)
 10057                           
 10058                           ;task.c: 98: uint8_t i;
 10059                           ;task.c: 100: if (freezer_enable)
 10060  18EF  0844               	movf	Initialize_Demo@freezer_enable^(0+128),w
 10061  18F0  1903               	btfsc	3,2
 10062  18F1  28F8               	goto	l1054
 10063                           
 10064                           ;task.c: 101: {
 10065                           ;task.c: 112: MiApp_ProtocolInit(1);
 10066  18F2  3001               	movlw	1
 10067  18F3  3190  2007  3198   	fcall	_MiApp_ProtocolInit
 10068  18F6                     l10069:	
 10069                           
 10070                           ;task.c: 114: DemoOutput_Instruction();
 10071  18F6  318F  2FFB         	ljmp	l868
 10072  18F8                     l1054:	
 10073                           ;task.c: 119: }
 10074                           
 10075                           
 10076                           ;task.c: 120: else
 10077                           ;task.c: 121: {
 10078                           ;task.c: 122: LATDbits.LATD7 = 0;
 10079  18F8  0022               	movlb	2	; select bank2
 10080  18F9  138F               	bcf	15,7	;volatile
 10081                           
 10082                           ;task.c: 123: LATDbits.LATD6 = 0;
 10083  18FA  130F               	bcf	15,6	;volatile
 10084                           
 10085                           ;task.c: 135: MiApp_ProtocolInit(0);
 10086  18FB  3000               	movlw	0
 10087  18FC  3190  2007  3198   	fcall	_MiApp_ProtocolInit
 10088                           
 10089                           ;task.c: 138: if( MiApp_SetChannel(myChannel) == 0 )
 10090  18FF  3019               	movlw	25
 10091  1900  233C  3198         	fcall	_MiApp_SetChannel
 10092  1902  3A00               	xorlw	0
 10093  1903  1D03               	skipz
 10094  1904  2908               	goto	l10077
 10095                           
 10096                           ;task.c: 139: {
 10097                           ;task.c: 140: DemoOutput_ChannelError(myChannel);
 10098  1905  3019               	movlw	25
 10099  1906  21B6  3198         	fcall	_DemoOutput_ChannelError
 10100  1908                     l10077:	
 10101                           
 10102                           ;task.c: 141: }
 10103                           ;task.c: 152: MiApp_ConnectionMode(0x00);
 10104  1908  3000               	movlw	0
 10105  1909  21C7  3198         	fcall	_MiApp_ConnectionMode
 10106  190B  3019               	movlw	25
 10107                           
 10108                           ;task.c: 153: DemoOutput_Channel(myChannel, 0);
 10109  190C  01DC               	clrf	DemoOutput_Channel@Step
 10110  190D  212F  3198         	fcall	_DemoOutput_Channel
 10111                           
 10112                           ;task.c: 167: i = MiApp_EstablishConnection(0xFF, 0x00);
 10113  190F  0021               	movlb	1	; select bank1
 10114  1910  30FF               	movlw	255
 10115  1911  01BF               	clrf	MiApp_EstablishConnection@Mode^(0+128)
 10116  1912  21ED  3198         	fcall	_MiApp_EstablishConnection
 10117  1914  00C5               	movwf	Initialize_Demo@i^(0+128)
 10118                           
 10119                           ;task.c: 172: if( i != 0xFF )
 10120  1915  0A45               	incf	Initialize_Demo@i^(0+128),w
 10121  1916  1903               	btfsc	3,2
 10122  1917  291F               	goto	l10087
 10123                           
 10124                           ;task.c: 173: {
 10125                           ;task.c: 174: DemoOutput_Channel(myChannel, 1);
 10126  1918  0020               	movlb	0	; select bank0
 10127  1919  3019               	movlw	25
 10128  191A  01DC               	clrf	DemoOutput_Channel@Step
 10129  191B  0ADC               	incf	DemoOutput_Channel@Step,f
 10130  191C  212F  3198         	fcall	_DemoOutput_Channel
 10131                           
 10132                           ;task.c: 178: }
 10133  191E  2928               	goto	l1058
 10134  191F                     l10087:	
 10135                           
 10136                           ;task.c: 179: else
 10137                           ;task.c: 180: {
 10138                           ;task.c: 211: MiApp_StartConnection(0x00, 10, 0);
 10139  191F  300A               	movlw	10
 10140  1920  0020               	movlb	0	; select bank0
 10141  1921  00B3               	movwf	MiApp_StartConnection@ScanDuration
 10142  1922  3000               	movlw	0
 10143  1923  01B4               	clrf	MiApp_StartConnection@ChannelMap
 10144  1924  01B5               	clrf	MiApp_StartConnection@ChannelMap+1
 10145  1925  01B6               	clrf	MiApp_StartConnection@ChannelMap+2
 10146  1926  01B7               	clrf	MiApp_StartConnection@ChannelMap+3
 10147  1927  272D               	fcall	_MiApp_StartConnection
 10148  1928                     l1058:	
 10149                           
 10150                           ;task.c: 215: }
 10151                           ;task.c: 229: DumpConnection(0xFF);
 10152  1928  30FF               	movlw	255
 10153  1929  3192  2248  3198   	fcall	_DumpConnection
 10154                           
 10155                           ;task.c: 234: LATDbits.LATD7 = 1;
 10156  192C  0022               	movlb	2	; select bank2
 10157  192D  178F               	bsf	15,7	;volatile
 10158  192E  28F6               	goto	l10069
 10159  192F                     __end_of_Initialize_Demo:	
 10160  192F                     __ptext55:	
 10161 ;; *************** function _DemoOutput_Channel *****************
 10162 ;; Defined at:
 10163 ;;		line 200 in file "../src/demo_ouput.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  channel         1    wreg     unsigned char 
 10166 ;;  Step            1   60[BANK0 ] unsigned char 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  channel         1   61[BANK0 ] unsigned char 
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 1F/0
 10175 ;;		On exit  : 1F/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10178 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;Total ram usage:        2 bytes
 10183 ;; Hardware stack levels used:    1
 10184 ;; Hardware stack levels required when called:    9
 10185 ;; This function calls:
 10186 ;;		_CONSOLE_PrintDec
 10187 ;;		_CONSOLE_PutString
 10188 ;;		_LCDDisplay
 10189 ;; This function is called by:
 10190 ;;		_Initialize_Demo
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           
 10195                           ;psect for function _DemoOutput_Channel
 10196  192F                     _DemoOutput_Channel:	
 10197                           
 10198                           ;incstack = 0
 10199                           ; Regs used in _DemoOutput_Channel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10200                           ;DemoOutput_Channel@channel stored from wreg
 10201  192F  00DD               	movwf	DemoOutput_Channel@channel
 10202                           
 10203                           ;demo_ouput.c: 202: if( Step == 0 )
 10204  1930  085C               	movf	DemoOutput_Channel@Step,w
 10205  1931  1D03               	btfss	3,2
 10206  1932  294E               	goto	l9843
 10207                           
 10208                           ;demo_ouput.c: 203: {
 10209                           ;demo_ouput.c: 205: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 10210  1933  30B8               	movlw	low (STR_28| (0+32768))
 10211  1934  00D7               	movwf	LCDDisplay@text
 10212  1935  30A2               	movlw	high (STR_28| (0+32768))
 10213  1936  00D8               	movwf	LCDDisplay@text+1
 10214  1937  085D               	movf	DemoOutput_Channel@channel,w
 10215  1938  00D9               	movwf	LCDDisplay@value
 10216  1939  01DA               	clrf	LCDDisplay@delay
 10217  193A  0ADA               	incf	LCDDisplay@delay,f
 10218  193B  3193  237A  3198   	fcall	_LCDDisplay
 10219                           
 10220                           ;demo_ouput.c: 207: CONSOLE_PutString((char*)"\r\nConnecting Peer on Channel ");
 10221  193E  3017               	movlw	low (STR_29| (0+32768))
 10222  193F  00AA               	movwf	CONSOLE_PutString@str
 10223  1940  30A3               	movlw	high (STR_29| (0+32768))
 10224  1941  00AB               	movwf	CONSOLE_PutString@str+1
 10225  1942  3193  2341  3198   	fcall	_CONSOLE_PutString
 10226                           
 10227                           ;demo_ouput.c: 208: CONSOLE_PrintDec(channel);
 10228  1945  085D               	movf	DemoOutput_Channel@channel,w
 10229  1946  2169               	fcall	_CONSOLE_PrintDec
 10230                           
 10231                           ;demo_ouput.c: 209: CONSOLE_PutString((char*)"\r\n");
 10232  1947  30D5               	movlw	low ((STR_27+2)| (0+32768))
 10233  1948  0020               	movlb	0	; select bank0
 10234  1949  00AA               	movwf	CONSOLE_PutString@str
 10235  194A  30A4               	movlw	high ((STR_27+2)| (0+32768))
 10236  194B  00AB               	movwf	CONSOLE_PutString@str+1
 10237  194C  3193  2B41         	ljmp	l9197
 10238  194E                     l9843:	
 10239                           ;demo_ouput.c: 211: }
 10240                           
 10241                           
 10242                           ;demo_ouput.c: 212: else
 10243                           ;demo_ouput.c: 213: {
 10244                           ;demo_ouput.c: 215: LCDDisplay((char *)"Connected Peer  on Channel %d", channel, 1);
 10245  194E  3035               	movlw	low (STR_31| (0+32768))
 10246  194F  00D7               	movwf	LCDDisplay@text
 10247  1950  30A3               	movlw	high (STR_31| (0+32768))
 10248  1951  00D8               	movwf	LCDDisplay@text+1
 10249  1952  085D               	movf	DemoOutput_Channel@channel,w
 10250  1953  00D9               	movwf	LCDDisplay@value
 10251  1954  01DA               	clrf	LCDDisplay@delay
 10252  1955  0ADA               	incf	LCDDisplay@delay,f
 10253  1956  3193  237A  3198   	fcall	_LCDDisplay
 10254                           
 10255                           ;demo_ouput.c: 217: CONSOLE_PutString((char*)"\r\nConnected Peer on Channel ");
 10256  1959  3053               	movlw	low (STR_32| (0+32768))
 10257  195A  00AA               	movwf	CONSOLE_PutString@str
 10258  195B  30A3               	movlw	high (STR_32| (0+32768))
 10259  195C  00AB               	movwf	CONSOLE_PutString@str+1
 10260  195D  3193  2341  3198   	fcall	_CONSOLE_PutString
 10261                           
 10262                           ;demo_ouput.c: 218: CONSOLE_PrintDec(channel);
 10263  1960  085D               	movf	DemoOutput_Channel@channel,w
 10264  1961  2169               	fcall	_CONSOLE_PrintDec
 10265                           
 10266                           ;demo_ouput.c: 219: CONSOLE_PutString((char*)"\r\n");
 10267  1962  30D5               	movlw	low ((STR_27+2)| (0+32768))
 10268  1963  0020               	movlb	0	; select bank0
 10269  1964  00AA               	movwf	CONSOLE_PutString@str
 10270  1965  30A4               	movlw	high ((STR_27+2)| (0+32768))
 10271  1966  00AB               	movwf	CONSOLE_PutString@str+1
 10272  1967  3193  2B41         	ljmp	l9197
 10273  1969                     __end_of_DemoOutput_Channel:	
 10274  1969                     __ptext56:	
 10275 ;; *************** function _CONSOLE_PrintDec *****************
 10276 ;; Defined at:
 10277 ;;		line 214 in file "../src/system_config/pic18exp_pic16f1947_24j40/console.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  toPrint         1    wreg     unsigned char 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  toPrint         1   18[BANK0 ] unsigned char 
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 1E/1
 10288 ;;		On exit  : 1F/3
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;Total ram usage:        1 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    5
 10298 ;; This function calls:
 10299 ;;		_CONSOLE_Put
 10300 ;;		___lbdiv
 10301 ;;		___lbmod
 10302 ;; This function is called by:
 10303 ;;		_DumpConnection
 10304 ;;		_DemoOutput_Channel
 10305 ;;		_DemoOutput_ChannelError
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function _CONSOLE_PrintDec
 10311  1969                     _CONSOLE_PrintDec:	
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _CONSOLE_PrintDec: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10315                           ;CONSOLE_PrintDec@toPrint stored from wreg
 10316  1969  0020               	movlb	0	; select bank0
 10317  196A  00B2               	movwf	CONSOLE_PrintDec@toPrint
 10318                           
 10319                           ;console.c: 216: if( toPrint >= 100 )
 10320  196B  3064               	movlw	100
 10321  196C  0232               	subwf	CONSOLE_PrintDec@toPrint,w
 10322  196D  1C03               	skipc
 10323  196E  297B               	goto	l9381
 10324                           
 10325                           ;console.c: 217: CONSOLE_Put(CharacterArray[toPrint/100]);
 10326  196F  3064               	movlw	100
 10327  1970  00AE               	movwf	___lbdiv@divisor
 10328  1971  0832               	movf	CONSOLE_PrintDec@toPrint,w
 10329  1972  219E               	fcall	___lbdiv
 10330  1973  3E3C               	addlw	(low (_CharacterArray| (0+256)))& (0+255)
 10331  1974  0086               	movwf	6
 10332  1975  3001               	movlw	1	; select bank2/3
 10333  1976  0087               	movwf	7
 10334  1977  0801               	movf	1,w
 10335  1978  3193  2370  3198   	fcall	_CONSOLE_Put
 10336  197B                     l9381:	
 10337                           
 10338                           ;console.c: 218: if( toPrint >= 10 )
 10339  197B  300A               	movlw	10
 10340  197C  0020               	movlb	0	; select bank0
 10341  197D  0232               	subwf	CONSOLE_PrintDec@toPrint,w
 10342                           
 10343                           ;console.c: 219: CONSOLE_Put(CharacterArray[(toPrint%100)/10]);
 10344  197E  300A               	movlw	10
 10345  197F  1C03               	skipc
 10346  1980  2992               	goto	L21
 10347  1981  00AE               	movwf	___lbdiv@divisor
 10348  1982  3064               	movlw	100
 10349  1983  00A9               	movwf	___lbmod@divisor
 10350  1984  0832               	movf	CONSOLE_PrintDec@toPrint,w
 10351  1985  318A  220E  3198   	fcall	___lbmod
 10352  1988  219E               	fcall	___lbdiv
 10353  1989  3E3C               	addlw	(low (_CharacterArray| (0+256)))& (0+255)
 10354  198A  0086               	movwf	6
 10355  198B  3001               	movlw	1	; select bank2/3
 10356  198C  0087               	movwf	7
 10357  198D  0801               	movf	1,w
 10358  198E  3193  2370  3198   	fcall	_CONSOLE_Put
 10359                           
 10360                           ;console.c: 220: CONSOLE_Put(CharacterArray[toPrint%10]);
 10361  1991  300A               	movlw	10
 10362  1992                     L21:	
 10363  1992  0020               	movlb	0	; select bank0
 10364  1993  00A9               	movwf	___lbmod@divisor
 10365  1994  0832               	movf	CONSOLE_PrintDec@toPrint,w
 10366  1995  318A  220E         	fcall	___lbmod
 10367  1997  3E3C               	addlw	(low (_CharacterArray| (0+256)))& (0+255)
 10368  1998  0086               	movwf	6
 10369  1999  3001               	movlw	1	; select bank2/3
 10370  199A  0087               	movwf	7
 10371  199B  0801               	movf	1,w
 10372  199C  3193  2B70         	ljmp	_CONSOLE_Put
 10373  199E                     __end_of_CONSOLE_PrintDec:	
 10374  199E                     __ptext58:	
 10375 ;; *************** function ___lbdiv *****************
 10376 ;; Defined at:
 10377 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  dividend        1    wreg     unsigned char 
 10380 ;;  divisor         1   14[BANK0 ] unsigned char 
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;  dividend        1   15[BANK0 ] unsigned char 
 10383 ;;  quotient        1   17[BANK0 ] unsigned char 
 10384 ;;  counter         1   16[BANK0 ] unsigned char 
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      unsigned char 
 10387 ;; Registers used:
 10388 ;;		wreg, status,2, status,0
 10389 ;; Tracked objects:
 10390 ;;		On entry : 1F/0
 10391 ;;		On exit  : 1F/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10394 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;Total ram usage:        4 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:    4
 10401 ;; This function calls:
 10402 ;;		Nothing
 10403 ;; This function is called by:
 10404 ;;		_CONSOLE_PrintDec
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           
 10409                           ;psect for function ___lbdiv
 10410  199E                     ___lbdiv:	
 10411                           
 10412                           ;incstack = 0
 10413                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 10414                           ;___lbdiv@dividend stored from wreg
 10415  199E  00AF               	movwf	___lbdiv@dividend
 10416  199F  01B1               	clrf	___lbdiv@quotient
 10417  19A0  082E               	movf	___lbdiv@divisor,w
 10418  19A1  1903               	btfsc	3,2
 10419  19A2  29B4               	goto	l6421
 10420  19A3  01B0               	clrf	___lbdiv@counter
 10421  19A4                     l6407:	
 10422  19A4  0AB0               	incf	___lbdiv@counter,f
 10423  19A5  1BAE               	btfsc	___lbdiv@divisor,7
 10424  19A6  29A9               	goto	l1563
 10425  19A7  35AE               	lslf	___lbdiv@divisor,f
 10426  19A8  29A4               	goto	l6407
 10427  19A9                     l1563:	
 10428  19A9  35B1               	lslf	___lbdiv@quotient,f
 10429  19AA  082E               	movf	___lbdiv@divisor,w
 10430  19AB  022F               	subwf	___lbdiv@dividend,w
 10431  19AC  1C03               	skipc
 10432  19AD  29B1               	goto	l6417
 10433  19AE  082E               	movf	___lbdiv@divisor,w
 10434  19AF  02AF               	subwf	___lbdiv@dividend,f
 10435  19B0  1431               	bsf	___lbdiv@quotient,0
 10436  19B1                     l6417:	
 10437  19B1  36AE               	lsrf	___lbdiv@divisor,f
 10438  19B2  0BB0               	decfsz	___lbdiv@counter,f
 10439  19B3  29A9               	goto	l1563
 10440  19B4                     l6421:	
 10441  19B4  0831               	movf	___lbdiv@quotient,w
 10442  19B5  0008               	return
 10443  19B6                     __end_of___lbdiv:	
 10444  19B6                     __ptext54:	
 10445 ;; *************** function _DemoOutput_ChannelError *****************
 10446 ;; Defined at:
 10447 ;;		line 285 in file "../src/demo_ouput.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  channel         1    wreg     unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  channel         1   19[BANK0 ] unsigned char 
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10456 ;; Tracked objects:
 10457 ;;		On entry : 1F/0
 10458 ;;		On exit  : 1F/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;Total ram usage:        1 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; Hardware stack levels required when called:    6
 10468 ;; This function calls:
 10469 ;;		_CONSOLE_PrintDec
 10470 ;;		_CONSOLE_PutString
 10471 ;; This function is called by:
 10472 ;;		_Initialize_Demo
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           
 10477                           ;psect for function _DemoOutput_ChannelError
 10478  19B6                     _DemoOutput_ChannelError:	
 10479                           
 10480                           ;incstack = 0
 10481                           ; Regs used in _DemoOutput_ChannelError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10482                           ;DemoOutput_ChannelError@channel stored from wreg
 10483  19B6  00B3               	movwf	DemoOutput_ChannelError@channel
 10484                           
 10485                           ;demo_ouput.c: 288: CONSOLE_PutString((char*)"\r\nSelection of channel ");
 10486  19B7  30A6               	movlw	low (STR_39| (0+32768))
 10487  19B8  00AA               	movwf	CONSOLE_PutString@str
 10488  19B9  30A3               	movlw	high (STR_39| (0+32768))
 10489  19BA  00AB               	movwf	CONSOLE_PutString@str+1
 10490  19BB  3193  2341  3198   	fcall	_CONSOLE_PutString
 10491                           
 10492                           ;demo_ouput.c: 289: CONSOLE_PrintDec(channel);
 10493  19BE  0833               	movf	DemoOutput_ChannelError@channel,w
 10494  19BF  2169               	fcall	_CONSOLE_PrintDec
 10495                           
 10496                           ;demo_ouput.c: 290: CONSOLE_PutString((char*)" is not supported in current configuration
      +                          .\r\n");
 10497  19C0  308A               	movlw	low (STR_40| (0+32768))
 10498  19C1  0020               	movlb	0	; select bank0
 10499  19C2  00AA               	movwf	CONSOLE_PutString@str
 10500  19C3  30A2               	movlw	high (STR_40| (0+32768))
 10501  19C4  00AB               	movwf	CONSOLE_PutString@str+1
 10502  19C5  3193  2B41         	ljmp	l9197
 10503  19C7                     __end_of_DemoOutput_ChannelError:	
 10504  19C7                     __ptext49:	
 10505 ;; *************** function _MiApp_ConnectionMode *****************
 10506 ;; Defined at:
 10507 ;;		line 3189 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  Mode            1    wreg     unsigned char 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  Mode            1   28[BANK0 ] unsigned char 
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      void 
 10514 ;; Registers used:
 10515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10516 ;; Tracked objects:
 10517 ;;		On entry : 1F/0
 10518 ;;		On exit  : 1F/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;Total ram usage:        2 bytes
 10526 ;; Hardware stack levels used:    1
 10527 ;; Hardware stack levels required when called:    5
 10528 ;; This function calls:
 10529 ;;		_NVMWrite
 10530 ;; This function is called by:
 10531 ;;		_Initialize_Demo
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           
 10536                           ;psect for function _MiApp_ConnectionMode
 10537  19C7                     _MiApp_ConnectionMode:	
 10538                           
 10539                           ;incstack = 0
 10540                           ; Regs used in _MiApp_ConnectionMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10541                           ;MiApp_ConnectionMode@Mode stored from wreg
 10542  19C7  00BC               	movwf	MiApp_ConnectionMode@Mode
 10543                           
 10544                           ;miwi_p2p.c: 3191: if( Mode > 3 )
 10545  19C8  3004               	movlw	4
 10546  19C9  023C               	subwf	MiApp_ConnectionMode@Mode,w
 10547  19CA  1803               	btfsc	3,0
 10548  19CB  0008               	return
 10549                           
 10550                           ;miwi_p2p.c: 3194: }
 10551                           ;miwi_p2p.c: 3195: ConnMode = Mode;
 10552  19CC  083C               	movf	MiApp_ConnectionMode@Mode,w
 10553  19CD  0021               	movlb	1	; select bank1
 10554  19CE  00EB               	movwf	_ConnMode^(0+128)
 10555                           
 10556                           ;miwi_p2p.c: 3196: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 10557  19CF  0020               	movlb	0	; select bank0
 10558  19D0  00BB               	movwf	??_MiApp_ConnectionMode
 10559  19D1  0E3B               	swapf	??_MiApp_ConnectionMode,w
 10560  19D2  39F0               	andlw	240
 10561  19D3  00BB               	movwf	??_MiApp_ConnectionMode
 10562  19D4  0021               	movlb	1	; select bank1
 10563  19D5  0856               	movf	_P2PCapacityInfo^(0+128),w
 10564  19D6  390F               	andlw	15
 10565  19D7  0020               	movlb	0	; select bank0
 10566  19D8  043B               	iorwf	??_MiApp_ConnectionMode,w
 10567  19D9  0021               	movlb	1	; select bank1
 10568  19DA  00D6               	movwf	_P2PCapacityInfo^(0+128)
 10569                           
 10570                           ;miwi_p2p.c: 3199: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 10571  19DB  30EB               	movlw	low _ConnMode
 10572  19DC  0020               	movlb	0	; select bank0
 10573  19DD  00B4               	movwf	NVMWrite@source
 10574  19DE  3000               	movlw	high _ConnMode
 10575  19DF  00B5               	movwf	NVMWrite@source+1
 10576  19E0  0021               	movlb	1	; select bank1
 10577  19E1  0863               	movf	(_nvmConnMode+1)^(0+128),w
 10578  19E2  0020               	movlb	0	; select bank0
 10579  19E3  00B7               	movwf	NVMWrite@addr+1
 10580  19E4  0021               	movlb	1	; select bank1
 10581  19E5  0862               	movf	_nvmConnMode^(0+128),w
 10582  19E6  0020               	movlb	0	; select bank0
 10583  19E7  00B6               	movwf	NVMWrite@addr
 10584  19E8  01B8               	clrf	NVMWrite@count
 10585  19E9  0AB8               	incf	NVMWrite@count,f
 10586  19EA  01B9               	clrf	NVMWrite@count+1
 10587  19EB  3197  2F55         	ljmp	l263
 10588  19ED                     __end_of_MiApp_ConnectionMode:	
 10589  19ED                     __ptext29:	
 10590 ;; *************** function _MiApp_EstablishConnection *****************
 10591 ;; Defined at:
 10592 ;;		line 2276 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  ActiveScanIn    1    wreg     unsigned char 
 10595 ;;  Mode            1   31[BANK1 ] unsigned char 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;  ActiveScanIn    1    0[COMMON] unsigned char 
 10598 ;;  i               1   11[BANK2 ] unsigned char 
 10599 ;;  t2              4    7[BANK2 ] struct _MIWI_TICK
 10600 ;;  t1              4    2[BANK2 ] struct _MIWI_TICK
 10601 ;;  connectionIn    1    6[BANK2 ] unsigned char 
 10602 ;;  retry           1    1[BANK2 ] unsigned char 
 10603 ;;  tmpConnectio    1    0[BANK2 ] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      unsigned char 
 10606 ;; Registers used:
 10607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10608 ;; Tracked objects:
 10609 ;;		On entry : 1F/1
 10610 ;;		On exit  : 1F/1
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10613 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Totals:         0       0       5      12       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;Total ram usage:       17 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:   12
 10620 ;; This function calls:
 10621 ;;		_MiApp_DiscardMessage
 10622 ;;		_MiApp_MessageAvailable
 10623 ;;		_MiWi_TickGet
 10624 ;;		_SendPacket
 10625 ;; This function is called by:
 10626 ;;		_Initialize_Demo
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           
 10631                           ;psect for function _MiApp_EstablishConnection
 10632  19ED                     _MiApp_EstablishConnection:	
 10633                           
 10634                           ;miwi_p2p.c: 2278: uint8_t tmpConnectionMode = ConnMode;
 10635                           
 10636                           ;incstack = 0
 10637                           ; Regs used in _MiApp_EstablishConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10638  19ED  086B               	movf	_ConnMode^(0+128),w
 10639  19EE  0022               	movlb	2	; select bank2
 10640  19EF  00D4               	movwf	MiApp_EstablishConnection@tmpConnectionMode^(0+256)
 10641                           
 10642                           ;miwi_p2p.c: 2279: uint8_t retry = 3;
 10643  19F0  3003               	movlw	3
 10644  19F1  00D5               	movwf	MiApp_EstablishConnection@retry^(0+256)
 10645                           
 10646                           ;miwi_p2p.c: 2280: uint8_t connectionInterval = 0;
 10647  19F2  01DA               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 10648                           
 10649                           ;miwi_p2p.c: 2281: MIWI_TICK t1, t2;
 10650                           ;miwi_p2p.c: 2282: tick1 = MiWi_TickGet();
 10651  19F3  22A5  3198         	fcall	_MiWi_TickGet
 10652                           
 10653                           ;miwi_p2p.c: 2283: if( Mode == 0x01 )
 10654  19F5  0021               	movlb	1	; select bank1
 10655  19F6  0B3F               	decfsz	MiApp_EstablishConnection@Mode^(0+128),w
 10656  19F7  29F9               	goto	l9609
 10657                           
 10658                           ;miwi_p2p.c: 2284: {
 10659                           ;miwi_p2p.c: 2285: return 0xFF;
 10660  19F8  34FF               	retlw	255
 10661  19F9                     l9609:	
 10662                           
 10663                           ;miwi_p2p.c: 2286: }
 10664                           ;miwi_p2p.c: 2288: t1 = MiWi_TickGet();
 10665  19F9  22A5  3198         	fcall	_MiWi_TickGet
 10666  19FB  082C               	movf	?_MiWi_TickGet+3,w
 10667  19FC  0022               	movlb	2	; select bank2
 10668  19FD  00D9               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 10669  19FE  0020               	movlb	0	; select bank0
 10670  19FF  082B               	movf	?_MiWi_TickGet+2,w
 10671  1A00  0022               	movlb	2	; select bank2
 10672  1A01  00D8               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 10673  1A02  0020               	movlb	0	; select bank0
 10674  1A03  082A               	movf	?_MiWi_TickGet+1,w
 10675  1A04  0022               	movlb	2	; select bank2
 10676  1A05  00D7               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 10677  1A06  0020               	movlb	0	; select bank0
 10678  1A07  0829               	movf	?_MiWi_TickGet,w
 10679  1A08  0022               	movlb	2	; select bank2
 10680  1A09  00D6               	movwf	MiApp_EstablishConnection@t1^(0+256)
 10681                           
 10682                           ;miwi_p2p.c: 2290: t1.Val -= (((uint32_t)(10000000)/32));
 10683  1A0A  30B4               	movlw	180
 10684  1A0B  02D6               	subwf	MiApp_EstablishConnection@t1^(0+256),f
 10685  1A0C  30C4               	movlw	196
 10686  1A0D  3BD7               	subwfb	(MiApp_EstablishConnection@t1+1)^(0+256),f
 10687  1A0E  3004               	movlw	4
 10688  1A0F  3BD8               	subwfb	(MiApp_EstablishConnection@t1+2)^(0+256),f
 10689  1A10  3000               	movlw	0
 10690  1A11  3BD9               	subwfb	(MiApp_EstablishConnection@t1+3)^(0+256),f
 10691                           
 10692                           ;miwi_p2p.c: 2291: ConnMode = 0x00;
 10693  1A12  0021               	movlb	1	; select bank1
 10694  1A13  01EB               	clrf	_ConnMode^(0+128)
 10695                           
 10696                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 1;
 10697  1A14  1657               	bsf	_P2PStatus^(0+128),4	;volatile
 10698  1A15                     l9667:	
 10699                           ;miwi_p2p.c: 2293: while( P2PStatus.bits.SearchConnection )
 10700                           
 10701  1A15  0021               	movlb	1	; select bank1
 10702  1A16  1E57               	btfss	_P2PStatus^(0+128),4	;volatile
 10703  1A17  2A9F               	goto	l9669
 10704                           
 10705                           ;miwi_p2p.c: 2294: {
 10706                           ;miwi_p2p.c: 2295: t2 = MiWi_TickGet();
 10707  1A18  22A5  3198         	fcall	_MiWi_TickGet
 10708  1A1A  082C               	movf	?_MiWi_TickGet+3,w
 10709  1A1B  0022               	movlb	2	; select bank2
 10710  1A1C  00DE               	movwf	(MiApp_EstablishConnection@t2+3)^(0+256)
 10711  1A1D  0020               	movlb	0	; select bank0
 10712  1A1E  082B               	movf	?_MiWi_TickGet+2,w
 10713  1A1F  0022               	movlb	2	; select bank2
 10714  1A20  00DD               	movwf	(MiApp_EstablishConnection@t2+2)^(0+256)
 10715  1A21  0020               	movlb	0	; select bank0
 10716  1A22  082A               	movf	?_MiWi_TickGet+1,w
 10717  1A23  0022               	movlb	2	; select bank2
 10718  1A24  00DC               	movwf	(MiApp_EstablishConnection@t2+1)^(0+256)
 10719  1A25  0020               	movlb	0	; select bank0
 10720  1A26  0829               	movf	?_MiWi_TickGet,w
 10721  1A27  0022               	movlb	2	; select bank2
 10722  1A28  00DB               	movwf	MiApp_EstablishConnection@t2^(0+256)
 10723                           
 10724                           ;miwi_p2p.c: 2296: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
 10725  1A29  0856               	movf	MiApp_EstablishConnection@t1^(0+256),w
 10726  1A2A  025B               	subwf	MiApp_EstablishConnection@t2^(0+256),w
 10727  1A2B  0021               	movlb	1	; select bank1
 10728  1A2C  00C0               	movwf	??_MiApp_EstablishConnection^(0+128)
 10729  1A2D  0022               	movlb	2	; select bank2
 10730  1A2E  0857               	movf	(MiApp_EstablishConnection@t1+1)^(0+256),w
 10731  1A2F  3B5C               	subwfb	(MiApp_EstablishConnection@t2+1)^(0+256),w
 10732  1A30  0021               	movlb	1	; select bank1
 10733  1A31  00C1               	movwf	(??_MiApp_EstablishConnection^(0+128)+1)
 10734  1A32  0022               	movlb	2	; select bank2
 10735  1A33  0858               	movf	(MiApp_EstablishConnection@t1+2)^(0+256),w
 10736  1A34  3B5D               	subwfb	(MiApp_EstablishConnection@t2+2)^(0+256),w
 10737  1A35  0021               	movlb	1	; select bank1
 10738  1A36  00C2               	movwf	(??_MiApp_EstablishConnection^(0+128)+2)
 10739  1A37  0022               	movlb	2	; select bank2
 10740  1A38  0859               	movf	(MiApp_EstablishConnection@t1+3)^(0+256),w
 10741  1A39  3B5E               	subwfb	(MiApp_EstablishConnection@t2+3)^(0+256),w
 10742  1A3A  0021               	movlb	1	; select bank1
 10743  1A3B  00C3               	movwf	(??_MiApp_EstablishConnection^(0+128)+3)
 10744  1A3C  0843               	movf	(??_MiApp_EstablishConnection^(0+128)+3),w
 10745  1A3D  1D03               	btfss	3,2
 10746  1A3E  2A47               	goto	l9621
 10747  1A3F  30B5               	movlw	181
 10748  1A40  0240               	subwf	??_MiApp_EstablishConnection^(0+128),w
 10749  1A41  30C4               	movlw	196
 10750  1A42  3B41               	subwfb	(??_MiApp_EstablishConnection^(0+128)+1),w
 10751  1A43  3004               	movlw	4
 10752  1A44  3B42               	subwfb	(??_MiApp_EstablishConnection^(0+128)+2),w
 10753  1A45  1C03               	btfss	3,0
 10754  1A46  2A96               	goto	l499
 10755  1A47                     l9621:	
 10756                           
 10757                           ;miwi_p2p.c: 2297: {
 10758                           ;miwi_p2p.c: 2298: t1.Val = t2.Val;
 10759  1A47  0022               	movlb	2	; select bank2
 10760  1A48  085E               	movf	(MiApp_EstablishConnection@t2+3)^(0+256),w
 10761  1A49  00D9               	movwf	(MiApp_EstablishConnection@t1+3)^(0+256)
 10762  1A4A  085D               	movf	(MiApp_EstablishConnection@t2+2)^(0+256),w
 10763  1A4B  00D8               	movwf	(MiApp_EstablishConnection@t1+2)^(0+256)
 10764  1A4C  085C               	movf	(MiApp_EstablishConnection@t2+1)^(0+256),w
 10765  1A4D  00D7               	movwf	(MiApp_EstablishConnection@t1+1)^(0+256)
 10766  1A4E  085B               	movf	MiApp_EstablishConnection@t2^(0+256),w
 10767  1A4F  00D6               	movwf	MiApp_EstablishConnection@t1^(0+256)
 10768                           
 10769                           ;miwi_p2p.c: 2300: if( connectionInterval-- > 0 )
 10770  1A50  03DA               	decf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 10771  1A51  0F5A               	incfsz	MiApp_EstablishConnection@connectionInterval^(0+256),w
 10772  1A52  2A15               	goto	l9667
 10773                           
 10774                           ;miwi_p2p.c: 2303: }
 10775                           ;miwi_p2p.c: 2304: connectionInterval = 2-1;
 10776  1A53  01DA               	clrf	MiApp_EstablishConnection@connectionInterval^(0+256)
 10777  1A54  0ADA               	incf	MiApp_EstablishConnection@connectionInterval^(0+256),f
 10778                           
 10779                           ;miwi_p2p.c: 2305: if( retry-- == 0 )
 10780  1A55  03D5               	decf	MiApp_EstablishConnection@retry^(0+256),f
 10781  1A56  0F55               	incfsz	MiApp_EstablishConnection@retry^(0+256),w
 10782  1A57  2A5B               	goto	l9635
 10783                           
 10784                           ;miwi_p2p.c: 2306: {
 10785                           ;miwi_p2p.c: 2308: P2PStatus.bits.SearchConnection = 0;
 10786  1A58  0021               	movlb	1	; select bank1
 10787  1A59  1257               	bcf	_P2PStatus^(0+128),4	;volatile
 10788  1A5A  34FF               	retlw	255
 10789  1A5B                     l9635:	
 10790                           
 10791                           ;miwi_p2p.c: 2310: }
 10792                           ;miwi_p2p.c: 2311: {TxData = 0;};
 10793  1A5B  0021               	movlb	1	; select bank1
 10794  1A5C  01DA               	clrf	_TxData^(0+128)
 10795                           
 10796                           ;miwi_p2p.c: 2312: TxBuffer[TxData++] = 0x81;
 10797  1A5D  085A               	movf	_TxData^(0+128),w
 10798  1A5E  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10799  1A5F  0086               	movwf	6
 10800  1A60  3002               	movlw	2	; select bank4/5
 10801  1A61  0087               	movwf	7
 10802  1A62  3081               	movlw	129
 10803  1A63  0081               	movwf	1
 10804  1A64  0ADA               	incf	_TxData^(0+128),f
 10805                           
 10806                           ;miwi_p2p.c: 2313: TxBuffer[TxData++] = currentChannel;
 10807  1A65  085A               	movf	_TxData^(0+128),w
 10808  1A66  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10809  1A67  0086               	movwf	6
 10810  1A68  0868               	movf	_currentChannel^(0+128),w
 10811  1A69  0081               	movwf	1
 10812  1A6A  0ADA               	incf	_TxData^(0+128),f
 10813                           
 10814                           ;miwi_p2p.c: 2314: TxBuffer[TxData++] = P2PCapacityInfo;
 10815  1A6B  085A               	movf	_TxData^(0+128),w
 10816  1A6C  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10817  1A6D  0086               	movwf	6
 10818  1A6E  0856               	movf	_P2PCapacityInfo^(0+128),w
 10819  1A6F  0081               	movwf	1
 10820  1A70  0ADA               	incf	_TxData^(0+128),f
 10821                           
 10822                           ;miwi_p2p.c: 2321: {
 10823                           ;miwi_p2p.c: 2322: uint8_t i;
 10824                           ;miwi_p2p.c: 2324: for(i = 0; i < 1; i++)
 10825  1A71  0022               	movlb	2	; select bank2
 10826  1A72  01DF               	clrf	MiApp_EstablishConnection@i^(0+256)
 10827  1A73                     l9655:	
 10828                           
 10829                           ;miwi_p2p.c: 2325: {
 10830                           ;miwi_p2p.c: 2326: TxBuffer[TxData++] = AdditionalNodeID[i];
 10831  1A73  0021               	movlb	1	; select bank1
 10832  1A74  085A               	movf	_TxData^(0+128),w
 10833  1A75  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 10834  1A76  0086               	movwf	6
 10835  1A77  3002               	movlw	2	; select bank4/5
 10836  1A78  0087               	movwf	7
 10837  1A79  0022               	movlb	2	; select bank2
 10838  1A7A  085F               	movf	MiApp_EstablishConnection@i^(0+256),w
 10839  1A7B  3EE9               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 10840  1A7C  0084               	movwf	4
 10841  1A7D  0185               	clrf	5
 10842  1A7E  0800               	movf	0,w
 10843  1A7F  0081               	movwf	1
 10844  1A80  0021               	movlb	1	; select bank1
 10845  1A81  0ADA               	incf	_TxData^(0+128),f
 10846  1A82  0022               	movlb	2	; select bank2
 10847  1A83  0ADF               	incf	MiApp_EstablishConnection@i^(0+256),f
 10848  1A84  1903               	btfsc	3,2
 10849  1A85  2A73               	goto	l9655
 10850                           
 10851                           ;miwi_p2p.c: 2327: }
 10852                           ;miwi_p2p.c: 2328: }
 10853                           ;miwi_p2p.c: 2343: SendPacket(1, myPANID, (0), 1, 0);
 10854  1A86  0021               	movlb	1	; select bank1
 10855  1A87  0861               	movf	(_myPANID+1)^(0+128),w
 10856  1A88  0020               	movlb	0	; select bank0
 10857  1A89  00D4               	movwf	SendPacket@DestinationPANID+1
 10858  1A8A  0021               	movlb	1	; select bank1
 10859  1A8B  0860               	movf	_myPANID^(0+128),w
 10860  1A8C  0020               	movlb	0	; select bank0
 10861  1A8D  00D3               	movwf	SendPacket@DestinationPANID
 10862  1A8E  3001               	movlw	1
 10863  1A8F  01D5               	clrf	SendPacket@DestinationAddress
 10864  1A90  01D6               	clrf	SendPacket@DestinationAddress+1
 10865  1A91  01D7               	clrf	SendPacket@isCommand
 10866  1A92  0AD7               	incf	SendPacket@isCommand,f
 10867  1A93  01D8               	clrf	SendPacket@SecurityEnabled
 10868  1A94  22D1  3198         	fcall	_SendPacket
 10869  1A96                     l499:	
 10870                           
 10871                           ;miwi_p2p.c: 2360: }
 10872                           ;miwi_p2p.c: 2362: if( MiApp_MessageAvailable())
 10873  1A96  2333  3198         	fcall	_MiApp_MessageAvailable
 10874  1A98  3A00               	xorlw	0
 10875  1A99  1903               	skipnz
 10876  1A9A  2A15               	goto	l9667
 10877                           
 10878                           ;miwi_p2p.c: 2363: {
 10879                           ;miwi_p2p.c: 2364: MiApp_DiscardMessage();
 10880  1A9B  318F  27FC  3198   	fcall	_MiApp_DiscardMessage
 10881  1A9E  2A15               	goto	l9667
 10882  1A9F                     l9669:	
 10883                           
 10884                           ;miwi_p2p.c: 2365: }
 10885                           ;miwi_p2p.c: 2367: }
 10886                           ;miwi_p2p.c: 2369: ConnMode = tmpConnectionMode;
 10887  1A9F  0022               	movlb	2	; select bank2
 10888  1AA0  0854               	movf	MiApp_EstablishConnection@tmpConnectionMode^(0+256),w
 10889  1AA1  0021               	movlb	1	; select bank1
 10890  1AA2  00EB               	movwf	_ConnMode^(0+128)
 10891                           
 10892                           ;miwi_p2p.c: 2374: return LatestConnection;
 10893  1AA3  0853               	movf	_LatestConnection^(0+128),w
 10894  1AA4  0008               	return
 10895  1AA5                     __end_of_MiApp_EstablishConnection:	
 10896  1AA5                     __ptext34:	
 10897 ;; *************** function _MiWi_TickGet *****************
 10898 ;; Defined at:
 10899 ;;		line 106 in file "../src/system_config/pic18exp_pic16f1947_24j40/symbol.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  currentTime     4   15[BANK0 ] struct _MIWI_TICK
 10904 ;;  IntFlag1        1   14[BANK0 ] unsigned char 
 10905 ;;  IntFlag2        1   13[BANK0 ] unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  4    9[BANK0 ] struct _MIWI_TICK
 10908 ;; Registers used:
 10909 ;;		wreg, status,2, status,0
 10910 ;; Tracked objects:
 10911 ;;		On entry : 1C/0
 10912 ;;		On exit  : 1F/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;Total ram usage:       10 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    4
 10922 ;; This function calls:
 10923 ;;		Nothing
 10924 ;; This function is called by:
 10925 ;;		_MiMAC_SendPacket
 10926 ;;		_P2PTasks
 10927 ;;		_MiApp_StartConnection
 10928 ;;		_MiApp_EstablishConnection
 10929 ;;		_ButtonPressed
 10930 ;;		_freezer_feature
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           
 10935                           ;psect for function _MiWi_TickGet
 10936  1AA5                     _MiWi_TickGet:	
 10937  1AA5                     l7697:	
 10938                           ;incstack = 0
 10939                           ; Regs used in _MiWi_TickGet: [wreg+status,2+status,0]
 10940                           
 10941                           
 10942                           ;symbol.c: 108: MIWI_TICK currentTime;
 10943                           ;symbol.c: 109: uint8_t IntFlag1;
 10944                           ;symbol.c: 110: uint8_t IntFlag2;
 10945                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 10946  1AA5  0020               	movlb	0	; select bank0
 10947  1AA6  01B1               	clrf	MiWi_TickGet@currentTime+2
 10948                           
 10949                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 10950  1AA7  01B2               	clrf	MiWi_TickGet@currentTime+3
 10951                           
 10952                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 10953  1AA8  0021               	movlb	1	; select bank1
 10954  1AA9  1011               	bcf	17,0	;volatile
 10955  1AAA                     l7701:	
 10956                           
 10957                           ;symbol.c: 120: {
 10958                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 10959  1AAA  3000               	movlw	0
 10960  1AAB  0020               	movlb	0	; select bank0
 10961  1AAC  1811               	btfsc	17,0	;volatile
 10962  1AAD  3001               	movlw	1
 10963  1AAE  00AE               	movwf	MiWi_TickGet@IntFlag1
 10964                           
 10965                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 10966  1AAF  0816               	movf	22,w	;volatile
 10967  1AB0  00AF               	movwf	MiWi_TickGet@currentTime
 10968                           
 10969                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 10970  1AB1  0817               	movf	23,w	;volatile
 10971  1AB2  00B0               	movwf	MiWi_TickGet@currentTime+1
 10972                           
 10973                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 10974  1AB3  3000               	movlw	0
 10975  1AB4  1811               	btfsc	17,0	;volatile
 10976  1AB5  3001               	movlw	1
 10977  1AB6  00AD               	movwf	MiWi_TickGet@IntFlag2
 10978                           
 10979                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 10980  1AB7  062E               	xorwf	MiWi_TickGet@IntFlag1,w
 10981  1AB8  1D03               	skipz
 10982  1AB9  2AAA               	goto	l7701
 10983                           
 10984                           ;symbol.c: 127: if( IntFlag1 > 0 )
 10985  1ABA  082E               	movf	MiWi_TickGet@IntFlag1,w
 10986  1ABB  1903               	btfsc	3,2
 10987  1ABC  2AC1               	goto	l7717
 10988                           
 10989                           ;symbol.c: 128: {
 10990                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 10991  1ABD  1011               	bcf	17,0	;volatile
 10992                           
 10993                           ;symbol.c: 130: timerExtension1++;
 10994  1ABE  0AFC               	incf	_timerExtension1,f	;volatile
 10995                           
 10996                           ;symbol.c: 131: if(timerExtension1 == 0)
 10997  1ABF  1903               	btfsc	3,2
 10998                           
 10999                           ;symbol.c: 132: {
 11000                           ;symbol.c: 133: timerExtension2++;
 11001  1AC0  0AFD               	incf	_timerExtension2,f	;volatile
 11002  1AC1                     l7717:	
 11003                           
 11004                           ;symbol.c: 134: }
 11005                           ;symbol.c: 135: }
 11006                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 11007  1AC1  087C               	movf	_timerExtension1,w	;volatile
 11008  1AC2  07B1               	addwf	MiWi_TickGet@currentTime+2,f
 11009                           
 11010                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 11011  1AC3  087D               	movf	_timerExtension2,w	;volatile
 11012  1AC4  07B2               	addwf	MiWi_TickGet@currentTime+3,f
 11013                           
 11014                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 11015  1AC5  0021               	movlb	1	; select bank1
 11016  1AC6  1411               	bsf	17,0	;volatile
 11017                           
 11018                           ;symbol.c: 143: return currentTime;
 11019  1AC7  0020               	movlb	0	; select bank0
 11020  1AC8  0832               	movf	MiWi_TickGet@currentTime+3,w
 11021  1AC9  00AC               	movwf	?_MiWi_TickGet+3
 11022  1ACA  0831               	movf	MiWi_TickGet@currentTime+2,w
 11023  1ACB  00AB               	movwf	?_MiWi_TickGet+2
 11024  1ACC  0830               	movf	MiWi_TickGet@currentTime+1,w
 11025  1ACD  00AA               	movwf	?_MiWi_TickGet+1
 11026  1ACE  082F               	movf	MiWi_TickGet@currentTime,w
 11027  1ACF  00A9               	movwf	?_MiWi_TickGet
 11028  1AD0  0008               	return
 11029  1AD1                     __end_of_MiWi_TickGet:	
 11030  1AD1                     __ptext32:	
 11031 ;; *************** function _SendPacket *****************
 11032 ;; Defined at:
 11033 ;;		line 1621 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  Broadcast       1    wreg     unsigned char 
 11036 ;;  DestinationP    2   51[BANK0 ] struct .
 11037 ;;  DestinationA    2   53[BANK0 ] PTR unsigned char 
 11038 ;;		 -> NULL(0), ConnectionTable(50), RxBuffer.Payload(68), RxBuffer(138), 
 11039 ;;  isCommand       1   55[BANK0 ] unsigned char 
 11040 ;;  SecurityEnab    1   56[BANK0 ] unsigned char 
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;  Broadcast       1   14[BANK1 ] unsigned char 
 11043 ;;  tParam          7   15[BANK1 ] struct .
 11044 ;;  status          1   13[BANK1 ] unsigned char 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      unsigned char 
 11047 ;; Registers used:
 11048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 1F/0
 11051 ;;		On exit  : 1F/1
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11054 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;Total ram usage:       16 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    9
 11061 ;; This function calls:
 11062 ;;		_MiMAC_SendPacket
 11063 ;; This function is called by:
 11064 ;;		_P2PTasks
 11065 ;;		_MiApp_BroadcastPacket
 11066 ;;		_MiApp_UnicastAddress
 11067 ;;		_MiApp_EstablishConnection
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function _SendPacket
 11073  1AD1                     _SendPacket:	
 11074                           
 11075                           ;incstack = 0
 11076                           ; Regs used in _SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11077                           ;SendPacket@Broadcast stored from wreg
 11078  1AD1  0021               	movlb	1	; select bank1
 11079  1AD2  00AE               	movwf	SendPacket@Broadcast^(0+128)
 11080                           
 11081                           ;miwi_p2p.c: 1633: MAC_TRANS_PARAM tParam;
 11082                           ;miwi_p2p.c: 1634: bool status;
 11083                           ;miwi_p2p.c: 1636: tParam.flags.Val = 0;
 11084  1AD3  01AF               	clrf	SendPacket@tParam^(0+128)
 11085                           
 11086                           ;miwi_p2p.c: 1637: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 11087  1AD4  0020               	movlb	0	; select bank0
 11088  1AD5  0857               	movf	SendPacket@isCommand,w
 11089  1AD6  1903               	btfsc	3,2
 11090  1AD7  2ADA               	goto	u7230
 11091  1AD8  3001               	movlw	1
 11092  1AD9  2ADB               	goto	u7240
 11093  1ADA                     u7230:	
 11094  1ADA  3000               	movlw	0
 11095  1ADB                     u7240:	
 11096  1ADB  00D9               	movwf	??_SendPacket
 11097  1ADC  0021               	movlb	1	; select bank1
 11098  1ADD  082F               	movf	SendPacket@tParam^(0+128),w
 11099  1ADE  0020               	movlb	0	; select bank0
 11100  1ADF  0659               	xorwf	??_SendPacket,w
 11101  1AE0  39FC               	andlw	-4
 11102  1AE1  0659               	xorwf	??_SendPacket,w
 11103  1AE2  0021               	movlb	1	; select bank1
 11104  1AE3  00AF               	movwf	SendPacket@tParam^(0+128)
 11105                           
 11106                           ;miwi_p2p.c: 1638: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 11107  1AE4  082E               	movf	SendPacket@Broadcast^(0+128),w
 11108  1AE5  1D03               	btfss	3,2
 11109  1AE6  2AEA               	goto	u7250
 11110  1AE7  0021               	movlb	1	; select bank1
 11111  1AE8  16AF               	bsf	SendPacket@tParam^(0+128),5
 11112  1AE9  2AEC               	goto	l8533
 11113  1AEA                     u7250:	
 11114  1AEA  0021               	movlb	1	; select bank1
 11115  1AEB  12AF               	bcf	SendPacket@tParam^(0+128),5
 11116  1AEC                     l8533:	
 11117                           
 11118                           ;miwi_p2p.c: 1639: tParam.flags.bits.broadcast = Broadcast;
 11119  1AEC  082E               	movf	SendPacket@Broadcast^(0+128),w
 11120  1AED  3901               	andlw	1
 11121  1AEE  112F               	bcf	SendPacket@tParam^(0+128),2
 11122  1AEF  1D03               	skipz
 11123  1AF0  152F               	bsf	SendPacket@tParam^(0+128),2
 11124                           
 11125                           ;miwi_p2p.c: 1640: tParam.flags.bits.secEn = SecurityEnabled;
 11126  1AF1  0020               	movlb	0	; select bank0
 11127  1AF2  0858               	movf	SendPacket@SecurityEnabled,w
 11128  1AF3  3901               	andlw	1
 11129  1AF4  0021               	movlb	1	; select bank1
 11130  1AF5  11AF               	bcf	SendPacket@tParam^(0+128),3
 11131  1AF6  1D03               	skipz
 11132  1AF7  15AF               	bsf	SendPacket@tParam^(0+128),3
 11133                           
 11134                           ;miwi_p2p.c: 1642: tParam.altSrcAddr = 0;
 11135  1AF8  01B3               	clrf	(SendPacket@tParam^(0+128)+4)
 11136                           
 11137                           ;miwi_p2p.c: 1643: tParam.altDestAddr = (Broadcast) ? 1 : 0;
 11138  1AF9  082E               	movf	SendPacket@Broadcast^(0+128),w
 11139  1AFA  1903               	btfsc	3,2
 11140  1AFB  2AFE               	goto	u7270
 11141  1AFC  3001               	movlw	1
 11142  1AFD  2AFF               	goto	u7280
 11143  1AFE                     u7270:	
 11144  1AFE  3000               	movlw	0
 11145  1AFF                     u7280:	
 11146  1AFF  00B2               	movwf	(SendPacket@tParam^(0+128)+3)
 11147                           
 11148                           ;miwi_p2p.c: 1649: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 11149  1B00  082E               	movf	SendPacket@Broadcast^(0+128),w
 11150  1B01  1D03               	btfss	3,2
 11151  1B02  2B06               	goto	u7290
 11152  1B03  0021               	movlb	1	; select bank1
 11153  1B04  172F               	bsf	SendPacket@tParam^(0+128),6
 11154  1B05  2B08               	goto	l8541
 11155  1B06                     u7290:	
 11156  1B06  0021               	movlb	1	; select bank1
 11157  1B07  132F               	bcf	SendPacket@tParam^(0+128),6
 11158  1B08                     l8541:	
 11159                           
 11160                           ;miwi_p2p.c: 1662: tParam.flags.bits.sourcePrsnt = 1;
 11161  1B08  17AF               	bsf	SendPacket@tParam^(0+128),7
 11162                           
 11163                           ;miwi_p2p.c: 1665: tParam.DestAddress = DestinationAddress;
 11164  1B09  0020               	movlb	0	; select bank0
 11165  1B0A  0856               	movf	SendPacket@DestinationAddress+1,w
 11166  1B0B  0021               	movlb	1	; select bank1
 11167  1B0C  00B1               	movwf	((low ((SendPacket@tParam| 0+1))+1))^(0+128)
 11168  1B0D  0020               	movlb	0	; select bank0
 11169  1B0E  0855               	movf	SendPacket@DestinationAddress,w
 11170  1B0F  0021               	movlb	1	; select bank1
 11171  1B10  00B0               	movwf	(low ((SendPacket@tParam| 0+1)))^(0+128)
 11172                           
 11173                           ;miwi_p2p.c: 1668: tParam.DestPANID.Val = DestinationPANID.Val;
 11174  1B11  0020               	movlb	0	; select bank0
 11175  1B12  0854               	movf	SendPacket@DestinationPANID+1,w
 11176  1B13  0021               	movlb	1	; select bank1
 11177  1B14  00B5               	movwf	((SendPacket@tParam+1)^(0+128)+5)
 11178  1B15  0020               	movlb	0	; select bank0
 11179  1B16  0853               	movf	SendPacket@DestinationPANID,w
 11180  1B17  0021               	movlb	1	; select bank1
 11181  1B18  00B4               	movwf	(SendPacket@tParam^(0+128)+5)
 11182                           
 11183                           ;miwi_p2p.c: 1671: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 11184  1B19  30AF               	movlw	low SendPacket@tParam
 11185  1B1A  0086               	movwf	6
 11186  1B1B  3000               	movlw	high SendPacket@tParam
 11187  1B1C  0087               	movwf	7
 11188  1B1D  3046               	movlw	low MiMAC_SendPacket@transParam
 11189  1B1E  0084               	movwf	4
 11190  1B1F  3000               	movlw	high MiMAC_SendPacket@transParam
 11191  1B20  0085               	movwf	5
 11192  1B21  3007               	movlw	7
 11193  1B22  0020               	movlb	0	; select bank0
 11194  1B23  00D9               	movwf	??_SendPacket
 11195  1B24                     u7310:	
 11196  1B24  0016               	moviw fsr1++
 11197  1B25  001A               	movwi fsr0++
 11198  1B26  0BD9               	decfsz	??_SendPacket,f
 11199  1B27  2B24               	goto	u7310
 11200  1B28  3020               	movlw	(low (_TxBuffer| (0+512)))& (0+255)
 11201  1B29  00CD               	movwf	MiMAC_SendPacket@MACPayload
 11202  1B2A  0021               	movlb	1	; select bank1
 11203  1B2B  085A               	movf	_TxData^(0+128),w
 11204  1B2C  0020               	movlb	0	; select bank0
 11205  1B2D  00CE               	movwf	MiMAC_SendPacket@MACPayloadLen
 11206  1B2E  249B               	fcall	_MiMAC_SendPacket
 11207  1B2F  0021               	movlb	1	; select bank1
 11208  1B30  00AD               	movwf	SendPacket@status^(0+128)
 11209                           
 11210                           ;miwi_p2p.c: 1672: TxData = 0;
 11211  1B31  01DA               	clrf	_TxData^(0+128)
 11212                           
 11213                           ;miwi_p2p.c: 1674: return status;
 11214  1B32  0008               	return
 11215  1B33                     __end_of_SendPacket:	
 11216  1B33                     __ptext30:	
 11217 ;; *************** function _MiApp_MessageAvailable *****************
 11218 ;; Defined at:
 11219 ;;		line 2406 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;		None
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      unsigned char 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 1C/1
 11230 ;;		On exit  : 1F/1
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;Total ram usage:        1 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:   11
 11240 ;; This function calls:
 11241 ;;		_P2PTasks
 11242 ;; This function is called by:
 11243 ;;		_MiApp_EstablishConnection
 11244 ;;		_Process_RxMessage
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           
 11249                           ;psect for function _MiApp_MessageAvailable
 11250  1B33                     _MiApp_MessageAvailable:	
 11251                           
 11252                           ;miwi_p2p.c: 2408: P2PTasks();
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _MiApp_MessageAvailable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11256  1B33  3194  2431         	fcall	_P2PTasks
 11257                           
 11258                           ;miwi_p2p.c: 2410: return P2PStatus.bits.RxHasUserData;
 11259  1B35  0021               	movlb	1	; select bank1
 11260  1B36  0C57               	rrf	_P2PStatus^(0+128),w	;volatile
 11261  1B37  00BE               	movwf	??_MiApp_MessageAvailable^(0+128)
 11262  1B38  0CBE               	rrf	??_MiApp_MessageAvailable^(0+128),f
 11263  1B39  0C3E               	rrf	??_MiApp_MessageAvailable^(0+128),w
 11264  1B3A  3901               	andlw	1
 11265  1B3B  0008               	return
 11266  1B3C                     __end_of_MiApp_MessageAvailable:	
 11267  1B3C                     __ptext26:	
 11268 ;; *************** function _MiApp_SetChannel *****************
 11269 ;; Defined at:
 11270 ;;		line 2392 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  channel         1    wreg     unsigned char 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  channel         1   27[BANK0 ] unsigned char 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  1    wreg      unsigned char 
 11277 ;; Registers used:
 11278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11279 ;; Tracked objects:
 11280 ;;		On entry : 1F/1
 11281 ;;		On exit  : 1F/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;Total ram usage:        1 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    7
 11291 ;; This function calls:
 11292 ;;		_MiMAC_SetChannel
 11293 ;;		_NVMWrite
 11294 ;; This function is called by:
 11295 ;;		_MiApp_ProtocolInit
 11296 ;;		_Initialize_Demo
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           
 11301                           ;psect for function _MiApp_SetChannel
 11302  1B3C                     _MiApp_SetChannel:	
 11303                           
 11304                           ;incstack = 0
 11305                           ; Regs used in _MiApp_SetChannel: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11306                           ;MiApp_SetChannel@channel stored from wreg
 11307  1B3C  0020               	movlb	0	; select bank0
 11308  1B3D  00BB               	movwf	MiApp_SetChannel@channel
 11309                           
 11310                           ;miwi_p2p.c: 2394: if( MiMAC_SetChannel(channel, 0) )
 11311  1B3E  01B0               	clrf	MiMAC_SetChannel@offsetFreq
 11312  1B3F  235A  3198         	fcall	_MiMAC_SetChannel
 11313  1B41  3A00               	xorlw	0
 11314  1B42  1903               	skipnz
 11315  1B43  3400               	retlw	0
 11316                           
 11317                           ;miwi_p2p.c: 2395: {
 11318                           ;miwi_p2p.c: 2396: currentChannel = channel;
 11319  1B44  083B               	movf	MiApp_SetChannel@channel,w
 11320  1B45  0021               	movlb	1	; select bank1
 11321  1B46  00E8               	movwf	_currentChannel^(0+128)
 11322                           
 11323                           ;miwi_p2p.c: 2398: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 11324  1B47  30E8               	movlw	low _currentChannel
 11325  1B48  0020               	movlb	0	; select bank0
 11326  1B49  00B4               	movwf	NVMWrite@source
 11327  1B4A  3000               	movlw	high _currentChannel
 11328  1B4B  00B5               	movwf	NVMWrite@source+1
 11329  1B4C  0021               	movlb	1	; select bank1
 11330  1B4D  0865               	movf	(_nvmCurrentChannel+1)^(0+128),w
 11331  1B4E  0020               	movlb	0	; select bank0
 11332  1B4F  00B7               	movwf	NVMWrite@addr+1
 11333  1B50  0021               	movlb	1	; select bank1
 11334  1B51  0864               	movf	_nvmCurrentChannel^(0+128),w
 11335  1B52  0020               	movlb	0	; select bank0
 11336  1B53  00B6               	movwf	NVMWrite@addr
 11337  1B54  01B8               	clrf	NVMWrite@count
 11338  1B55  0AB8               	incf	NVMWrite@count,f
 11339  1B56  01B9               	clrf	NVMWrite@count+1
 11340  1B57  3197  2755         	fcall	_NVMWrite
 11341                           
 11342                           ;miwi_p2p.c: 2400: return 1;
 11343  1B59  3401               	retlw	1
 11344  1B5A                     __end_of_MiApp_SetChannel:	
 11345                           ;miwi_p2p.c: 2401: }
 11346                           ;miwi_p2p.c: 2402: return 0;
 11347                           
 11348  1B5A                     __ptext40:	
 11349 ;; *************** function _MiMAC_SetChannel *****************
 11350 ;; Defined at:
 11351 ;;		line 1302 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  channel         1    wreg     unsigned char 
 11354 ;;  offsetFreq      1   16[BANK0 ] unsigned char 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  channel         1   17[BANK0 ] unsigned char 
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      unsigned char 
 11359 ;; Registers used:
 11360 ;;		wreg, status,2, status,0, pclath, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 1E/0
 11363 ;;		On exit  : 1F/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;Total ram usage:        2 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:    6
 11373 ;; This function calls:
 11374 ;;		_PHYSetLongRAMAddr
 11375 ;;		_PHYSetShortRAMAddr
 11376 ;; This function is called by:
 11377 ;;		_InitMRF24J40
 11378 ;;		_MiApp_SetChannel
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           
 11383                           ;psect for function _MiMAC_SetChannel
 11384  1B5A                     _MiMAC_SetChannel:	
 11385                           
 11386                           ;incstack = 0
 11387                           ; Regs used in _MiMAC_SetChannel: [wreg+status,2+status,0+pclath+cstack]
 11388                           ;MiMAC_SetChannel@channel stored from wreg
 11389  1B5A  0020               	movlb	0	; select bank0
 11390  1B5B  00B1               	movwf	MiMAC_SetChannel@channel
 11391                           
 11392                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 11393  1B5C  300B               	movlw	11
 11394  1B5D  0231               	subwf	MiMAC_SetChannel@channel,w
 11395  1B5E  1C03               	skipc
 11396  1B5F  3400               	retlw	0
 11397  1B60  301B               	movlw	27
 11398  1B61  0231               	subwf	MiMAC_SetChannel@channel,w
 11399  1B62  1803               	btfsc	3,0
 11400                           
 11401                           ;drv_mrf_miwi_24j40.c: 1305: {
 11402                           ;drv_mrf_miwi_24j40.c: 1306: return 0;
 11403  1B63  3400               	retlw	0
 11404                           
 11405                           ;drv_mrf_miwi_24j40.c: 1307: }
 11406                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 11407  1B64  0831               	movf	MiMAC_SetChannel@channel,w
 11408  1B65  0021               	movlb	1	; select bank1
 11409  1B66  00D4               	movwf	_MACCurrentChannel^(0+128)
 11410                           
 11411                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 11412  1B67  0020               	movlb	0	; select bank0
 11413  1B68  3002               	movlw	2
 11414  1B69  01AA               	clrf	PHYSetLongRAMAddr@address
 11415  1B6A  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11416  1B6B  0E31               	swapf	MiMAC_SetChannel@channel,w
 11417  1B6C  39F0               	andlw	240
 11418  1B6D  3E50               	addlw	80
 11419  1B6E  3803               	iorlw	3
 11420  1B6F  00AC               	movwf	PHYSetLongRAMAddr@value
 11421  1B70  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11422                           
 11423                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 11424  1B72  3004               	movlw	4
 11425  1B73  00AA               	movwf	PHYSetShortRAMAddr@value
 11426  1B74  306D               	movlw	109
 11427  1B75  2482  3198         	fcall	_PHYSetShortRAMAddr
 11428  1B77  306D               	movlw	109
 11429                           
 11430                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 11431  1B78  01AA               	clrf	PHYSetShortRAMAddr@value
 11432  1B79  2482               	fcall	_PHYSetShortRAMAddr
 11433                           
 11434                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 11435  1B7A  3401               	retlw	1
 11436  1B7B                     __end_of_MiMAC_SetChannel:	
 11437  1B7B                     __ptext36:	
 11438 ;; *************** function _InitMRF24J40 *****************
 11439 ;; Defined at:
 11440 ;;		line 201 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;		None
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  _ms             4   31[BANK0 ] unsigned long 
 11445 ;;  _dcnt           4   23[BANK0 ] unsigned long 
 11446 ;;  _ms             4   27[BANK0 ] unsigned long 
 11447 ;;  _dcnt           4   19[BANK0 ] unsigned long 
 11448 ;;  j               2   35[BANK0 ] unsigned int 
 11449 ;;  i               1   37[BANK0 ] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  1    wreg      void 
 11452 ;; Registers used:
 11453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11454 ;; Tracked objects:
 11455 ;;		On entry : 1E/1
 11456 ;;		On exit  : 1F/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;Total ram usage:       20 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; Hardware stack levels required when called:    7
 11466 ;; This function calls:
 11467 ;;		_MiMAC_SetChannel
 11468 ;;		_PHYGetLongRAMAddr
 11469 ;;		_PHYGetShortRAMAddr
 11470 ;;		_PHYSetLongRAMAddr
 11471 ;;		_PHYSetShortRAMAddr
 11472 ;; This function is called by:
 11473 ;;		_MiMAC_SendPacket
 11474 ;;		_MiMAC_Init
 11475 ;; This function uses a non-reentrant model
 11476 ;;
 11477                           
 11478                           
 11479                           ;psect for function _InitMRF24J40
 11480  1B7B                     _InitMRF24J40:	
 11481                           
 11482                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 11483                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 11484                           ;drv_mrf_miwi_24j40.c: 207: LATBbits.LATB5 = 0;
 11485                           
 11486                           ;incstack = 0
 11487                           ; Regs used in _InitMRF24J40: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11488  1B7B  0022               	movlb	2	; select bank2
 11489  1B7C  128D               	bcf	13,5	;volatile
 11490                           
 11491                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/(10000000))/6)); while(_dcnt--); _ms--; } };
 11492  1B7D  3003               	movlw	3
 11493  1B7E  0020               	movlb	0	; select bank0
 11494  1B7F  00BB               	movwf	InitMRF24J40@_ms
 11495  1B80  01BC               	clrf	InitMRF24J40@_ms+1
 11496  1B81  01BD               	clrf	InitMRF24J40@_ms+2
 11497  1B82  01BE               	clrf	InitMRF24J40@_ms+3
 11498  1B83                     l7651:	
 11499  1B83  083E               	movf	InitMRF24J40@_ms+3,w
 11500  1B84  043D               	iorwf	InitMRF24J40@_ms+2,w
 11501  1B85  043C               	iorwf	InitMRF24J40@_ms+1,w
 11502  1B86  043B               	iorwf	InitMRF24J40@_ms,w
 11503  1B87  1903               	btfsc	3,2
 11504  1B88  2BA7               	goto	l72
 11505  1B89  3006               	movlw	6
 11506  1B8A  01B6               	clrf	InitMRF24J40@_dcnt+3
 11507  1B8B  01B5               	clrf	InitMRF24J40@_dcnt+2
 11508  1B8C  00B4               	movwf	InitMRF24J40@_dcnt+1
 11509  1B8D  3082               	movlw	130
 11510  1B8E  00B3               	movwf	InitMRF24J40@_dcnt
 11511  1B8F                     l7647:	
 11512  1B8F  3001               	movlw	1
 11513  1B90                     L8:	
 11514  1B90  02B3               	subwf	InitMRF24J40@_dcnt,f
 11515  1B91  3000               	movlw	0
 11516  1B92  3BB4               	subwfb	InitMRF24J40@_dcnt+1,f
 11517  1B93  3BB5               	subwfb	InitMRF24J40@_dcnt+2,f
 11518  1B94  3BB6               	subwfb	InitMRF24J40@_dcnt+3,f
 11519  1B95  0F33               	incfsz	InitMRF24J40@_dcnt,w
 11520  1B96  2B8F               	goto	l7647
 11521  1B97  0A34               	incf	InitMRF24J40@_dcnt+1,w
 11522  1B98  1D03               	skipz
 11523  1B99  2B8F               	goto	l7647
 11524  1B9A  0A35               	incf	InitMRF24J40@_dcnt+2,w
 11525  1B9B  1D03               	skipz
 11526  1B9C  2B8F               	goto	l7647
 11527  1B9D  0A36               	incf	InitMRF24J40@_dcnt+3,w
 11528  1B9E  3001               	movlw	1
 11529  1B9F  1D03               	btfss	3,2
 11530  1BA0  2B90               	goto	L8
 11531  1BA1  02BB               	subwf	InitMRF24J40@_ms,f
 11532  1BA2  3000               	movlw	0
 11533  1BA3  3BBC               	subwfb	InitMRF24J40@_ms+1,f
 11534  1BA4  3BBD               	subwfb	InitMRF24J40@_ms+2,f
 11535  1BA5  3BBE               	subwfb	InitMRF24J40@_ms+3,f
 11536  1BA6  2B83               	goto	l7651
 11537  1BA7                     l72:	
 11538                           
 11539                           ;drv_mrf_miwi_24j40.c: 210: LATBbits.LATB5 = 1;
 11540  1BA7  0022               	movlb	2	; select bank2
 11541  1BA8  168D               	bsf	13,5	;volatile
 11542                           
 11543                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/(10000000))/6)); while(_dcnt--); _ms--; } };
 11544  1BA9  300A               	movlw	10
 11545  1BAA  0020               	movlb	0	; select bank0
 11546  1BAB  00BF               	movwf	InitMRF24J40@_ms_439
 11547  1BAC  01C0               	clrf	InitMRF24J40@_ms_439+1
 11548  1BAD  01C1               	clrf	InitMRF24J40@_ms_439+2
 11549  1BAE  01C2               	clrf	InitMRF24J40@_ms_439+3
 11550  1BAF                     l7661:	
 11551  1BAF  0842               	movf	InitMRF24J40@_ms_439+3,w
 11552  1BB0  0441               	iorwf	InitMRF24J40@_ms_439+2,w
 11553  1BB1  0440               	iorwf	InitMRF24J40@_ms_439+1,w
 11554  1BB2  043F               	iorwf	InitMRF24J40@_ms_439,w
 11555  1BB3  1903               	btfsc	3,2
 11556  1BB4  2BD3               	goto	l7663
 11557  1BB5  3006               	movlw	6
 11558  1BB6  01BA               	clrf	InitMRF24J40@_dcnt_438+3
 11559  1BB7  01B9               	clrf	InitMRF24J40@_dcnt_438+2
 11560  1BB8  00B8               	movwf	InitMRF24J40@_dcnt_438+1
 11561  1BB9  3082               	movlw	130
 11562  1BBA  00B7               	movwf	InitMRF24J40@_dcnt_438
 11563  1BBB                     l7657:	
 11564  1BBB  3001               	movlw	1
 11565  1BBC                     L9:	
 11566  1BBC  02B7               	subwf	InitMRF24J40@_dcnt_438,f
 11567  1BBD  3000               	movlw	0
 11568  1BBE  3BB8               	subwfb	InitMRF24J40@_dcnt_438+1,f
 11569  1BBF  3BB9               	subwfb	InitMRF24J40@_dcnt_438+2,f
 11570  1BC0  3BBA               	subwfb	InitMRF24J40@_dcnt_438+3,f
 11571  1BC1  0F37               	incfsz	InitMRF24J40@_dcnt_438,w
 11572  1BC2  2BBB               	goto	l7657
 11573  1BC3  0A38               	incf	InitMRF24J40@_dcnt_438+1,w
 11574  1BC4  1D03               	skipz
 11575  1BC5  2BBB               	goto	l7657
 11576  1BC6  0A39               	incf	InitMRF24J40@_dcnt_438+2,w
 11577  1BC7  1D03               	skipz
 11578  1BC8  2BBB               	goto	l7657
 11579  1BC9  0A3A               	incf	InitMRF24J40@_dcnt_438+3,w
 11580  1BCA  3001               	movlw	1
 11581  1BCB  1D03               	btfss	3,2
 11582  1BCC  2BBC               	goto	L9
 11583  1BCD  02BF               	subwf	InitMRF24J40@_ms_439,f
 11584  1BCE  3000               	movlw	0
 11585  1BCF  3BC0               	subwfb	InitMRF24J40@_ms_439+1,f
 11586  1BD0  3BC1               	subwfb	InitMRF24J40@_ms_439+2,f
 11587  1BD1  3BC2               	subwfb	InitMRF24J40@_ms_439+3,f
 11588  1BD2  2BAF               	goto	l7661
 11589  1BD3                     l7663:	
 11590                           
 11591                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 11592  1BD3  3007               	movlw	7
 11593  1BD4  00AA               	movwf	PHYSetShortRAMAddr@value
 11594  1BD5  3055               	movlw	85
 11595  1BD6  2482  3198         	fcall	_PHYSetShortRAMAddr
 11596  1BD8                     l79:	
 11597                           ;drv_mrf_miwi_24j40.c: 215: do
 11598                           
 11599                           
 11600                           ;drv_mrf_miwi_24j40.c: 216: {
 11601                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 11602  1BD8  3054               	movlw	84
 11603  1BD9  270C  3198         	fcall	_PHYGetShortRAMAddr
 11604  1BDB  00C5               	movwf	InitMRF24J40@i
 11605                           
 11606                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 11607  1BDC  3907               	andlw	7
 11608  1BDD  1D03               	btfss	3,2
 11609  1BDE  2BD8               	goto	l79
 11610                           
 11611                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 11612  1BDF  01C3               	clrf	InitMRF24J40@j
 11613  1BE0  01C4               	clrf	InitMRF24J40@j+1
 11614  1BE1                     l7673:	
 11615                           
 11616                           ;drv_mrf_miwi_24j40.c: 221: {
 11617  1BE1  0AC3               	incf	InitMRF24J40@j,f
 11618  1BE2  1903               	skipnz
 11619  1BE3  0AC4               	incf	InitMRF24J40@j+1,f
 11620  1BE4  3003               	movlw	3
 11621  1BE5  0244               	subwf	InitMRF24J40@j+1,w
 11622  1BE6  30E8               	movlw	232
 11623  1BE7  1903               	skipnz
 11624  1BE8  0243               	subwf	InitMRF24J40@j,w
 11625  1BE9  1C03               	skipc
 11626  1BEA  2BE1               	goto	l7673
 11627  1BEB  301B               	movlw	27
 11628                           
 11629                           ;drv_mrf_miwi_24j40.c: 222: }
 11630                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 11631  1BEC  01AA               	clrf	PHYSetShortRAMAddr@value
 11632  1BED  0AAA               	incf	PHYSetShortRAMAddr@value,f
 11633  1BEE  2482  3198         	fcall	_PHYSetShortRAMAddr
 11634                           
 11635                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 11636  1BF0  30FF               	movlw	255
 11637  1BF1  00AA               	movwf	PHYSetShortRAMAddr@value
 11638  1BF2  3007               	movlw	7
 11639  1BF3  2482  3198         	fcall	_PHYSetShortRAMAddr
 11640                           
 11641                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 11642  1BF5  30FF               	movlw	255
 11643  1BF6  00AA               	movwf	PHYSetShortRAMAddr@value
 11644  1BF7  3009               	movlw	9
 11645  1BF8  2482  3198         	fcall	_PHYSetShortRAMAddr
 11646                           
 11647                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 11648  1BFA  30FF               	movlw	255
 11649  1BFB  00AA               	movwf	PHYSetShortRAMAddr@value
 11650  1BFC  3003               	movlw	3
 11651  1BFD  2482  3198         	fcall	_PHYSetShortRAMAddr
 11652                           
 11653                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 11654  1BFF  30FF               	movlw	255
 11655  1C00  00AA               	movwf	PHYSetShortRAMAddr@value
 11656  1C01  3005               	movlw	5
 11657  1C02  2482  3198         	fcall	_PHYSetShortRAMAddr
 11658                           
 11659                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 11660  1C04  01C5               	clrf	InitMRF24J40@i
 11661  1C05                     l7685:	
 11662                           
 11663                           ;drv_mrf_miwi_24j40.c: 235: {
 11664                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 11665  1C05  0845               	movf	InitMRF24J40@i,w
 11666  1C06  0022               	movlb	2	; select bank2
 11667  1C07  0733               	addwf	(low ((_MACInitParams| (0+256)+1)))^0,w
 11668  1C08  0020               	movlb	0	; select bank0
 11669  1C09  00B2               	movwf	??_InitMRF24J40
 11670  1C0A  0086               	movwf	6
 11671  1C0B  3001               	movlw	1	; select bank2/3
 11672  1C0C  0087               	movwf	7
 11673  1C0D  0801               	movf	1,w
 11674  1C0E  00AA               	movwf	PHYSetShortRAMAddr@value
 11675  1C0F  3545               	lslf	InitMRF24J40@i,w
 11676  1C10  3E0B               	addlw	11
 11677  1C11  2482  3198         	fcall	_PHYSetShortRAMAddr
 11678  1C13  3008               	movlw	8
 11679  1C14  0AC5               	incf	InitMRF24J40@i,f
 11680  1C15  0245               	subwf	InitMRF24J40@i,w
 11681  1C16  1C03               	skipc
 11682  1C17  2C05               	goto	l7685
 11683                           
 11684                           ;drv_mrf_miwi_24j40.c: 237: }
 11685                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 11686  1C18  3002               	movlw	2
 11687  1C19  00AA               	movwf	PHYSetLongRAMAddr@address
 11688  1C1A  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11689  1C1B  3080               	movlw	128
 11690  1C1C  00AC               	movwf	PHYSetLongRAMAddr@value
 11691  1C1D  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11692                           
 11693                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 11694  1C1F  3003               	movlw	3
 11695  1C20  00AA               	movwf	PHYSetLongRAMAddr@address
 11696  1C21  3002               	movlw	2
 11697  1C22  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11698  1C23  01AC               	clrf	PHYSetLongRAMAddr@value
 11699  1C24  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11700                           
 11701                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 11702  1C26  3006               	movlw	6
 11703  1C27  00AA               	movwf	PHYSetLongRAMAddr@address
 11704  1C28  3002               	movlw	2
 11705  1C29  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11706  1C2A  3090               	movlw	144
 11707  1C2B  00AC               	movwf	PHYSetLongRAMAddr@value
 11708  1C2C  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11709                           
 11710                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 11711  1C2E  3007               	movlw	7
 11712  1C2F  00AA               	movwf	PHYSetLongRAMAddr@address
 11713  1C30  3002               	movlw	2
 11714  1C31  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11715  1C32  3080               	movlw	128
 11716  1C33  00AC               	movwf	PHYSetLongRAMAddr@value
 11717  1C34  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11718                           
 11719                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 11720  1C36  3008               	movlw	8
 11721  1C37  00AA               	movwf	PHYSetLongRAMAddr@address
 11722  1C38  3002               	movlw	2
 11723  1C39  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11724  1C3A  3010               	movlw	16
 11725  1C3B  00AC               	movwf	PHYSetLongRAMAddr@value
 11726  1C3C  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11727                           
 11728                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 11729  1C3E  3020               	movlw	32
 11730  1C3F  00AA               	movwf	PHYSetLongRAMAddr@address
 11731  1C40  3002               	movlw	2
 11732  1C41  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11733  1C42  3021               	movlw	33
 11734  1C43  00AC               	movwf	PHYSetLongRAMAddr@value
 11735  1C44  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11736                           
 11737                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 11738  1C46  3080               	movlw	128
 11739  1C47  00AA               	movwf	PHYSetShortRAMAddr@value
 11740  1C48  3075               	movlw	117
 11741  1C49  2482  3198         	fcall	_PHYSetShortRAMAddr
 11742                           
 11743                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 11744  1C4B  3040               	movlw	64
 11745  1C4C  00AA               	movwf	PHYSetShortRAMAddr@value
 11746  1C4D  307D               	movlw	125
 11747  1C4E  2482  3198         	fcall	_PHYSetShortRAMAddr
 11748                           
 11749                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 11750  1C50  3060               	movlw	96
 11751  1C51  00AA               	movwf	PHYSetShortRAMAddr@value
 11752  1C52  307F               	movlw	127
 11753  1C53  2482  3198         	fcall	_PHYSetShortRAMAddr
 11754                           
 11755                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 11756  1C55  3098               	movlw	152
 11757  1C56  00AA               	movwf	PHYSetShortRAMAddr@value
 11758  1C57  3031               	movlw	49
 11759  1C58  2482  3198         	fcall	_PHYSetShortRAMAddr
 11760                           
 11761                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 11762  1C5A  3095               	movlw	149
 11763  1C5B  00AA               	movwf	PHYSetShortRAMAddr@value
 11764  1C5C  305D               	movlw	93
 11765  1C5D  2482  3198         	fcall	_PHYSetShortRAMAddr
 11766  1C5F                     l85:	
 11767                           ;drv_mrf_miwi_24j40.c: 295: do
 11768                           
 11769                           
 11770                           ;drv_mrf_miwi_24j40.c: 296: {
 11771                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 11772  1C5F  300F               	movlw	15
 11773  1C60  00AA               	movwf	PHYGetLongRAMAddr@address
 11774  1C61  3002               	movlw	2
 11775  1C62  00AB               	movwf	PHYGetLongRAMAddr@address+1
 11776  1C63  26DC  3198         	fcall	_PHYGetLongRAMAddr
 11777  1C65  00C5               	movwf	InitMRF24J40@i
 11778                           
 11779                           ;drv_mrf_miwi_24j40.c: 298: }
 11780                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 11781  1C66  39A0               	andlw	160
 11782  1C67  00B2               	movwf	??_InitMRF24J40
 11783  1C68  3AA0               	xorlw	160
 11784  1C69  1D03               	btfss	3,2
 11785  1C6A  2C5F               	goto	l85
 11786                           
 11787                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 11788  1C6B  30E6               	movlw	230
 11789  1C6C  00AA               	movwf	PHYSetShortRAMAddr@value
 11790  1C6D  3065               	movlw	101
 11791  1C6E  2482  3198         	fcall	_PHYSetShortRAMAddr
 11792                           
 11793                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 11794  1C70  3002               	movlw	2
 11795  1C71  01AA               	clrf	PHYSetLongRAMAddr@address
 11796  1C72  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11797  1C73  3003               	movlw	3
 11798  1C74  00AC               	movwf	PHYSetLongRAMAddr@value
 11799  1C75  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11800                           
 11801                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 11802  1C77  3001               	movlw	1
 11803  1C78  00AA               	movwf	PHYSetLongRAMAddr@address
 11804  1C79  3002               	movlw	2
 11805  1C7A  00AB               	movwf	PHYSetLongRAMAddr@address+1
 11806  1C7B  00AC               	movwf	PHYSetLongRAMAddr@value
 11807  1C7C  26AB  3198         	fcall	_PHYSetLongRAMAddr
 11808                           
 11809                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 11810  1C7E  01B0               	clrf	MiMAC_SetChannel@offsetFreq
 11811  1C7F  0021               	movlb	1	; select bank1
 11812  1C80  0854               	movf	_MACCurrentChannel^(0+128),w
 11813  1C81  2B5A               	ljmp	_MiMAC_SetChannel
 11814  1C82                     __end_of_InitMRF24J40:	
 11815  1C82                     __ptext41:	
 11816 ;; *************** function _PHYSetShortRAMAddr *****************
 11817 ;; Defined at:
 11818 ;;		line 124 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  address         1    wreg     unsigned char 
 11821 ;;  value           1   10[BANK0 ] unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  address         1   11[BANK0 ] unsigned char 
 11824 ;;  tmpRFIE         1   12[BANK0 ] volatile unsigned char 
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  1    wreg      void 
 11827 ;; Registers used:
 11828 ;;		wreg, status,2, status,0, pclath, cstack
 11829 ;; Tracked objects:
 11830 ;;		On entry : 1F/0
 11831 ;;		On exit  : 1F/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11834 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;Total ram usage:        3 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; Hardware stack levels required when called:    5
 11841 ;; This function calls:
 11842 ;;		_SPIPut
 11843 ;; This function is called by:
 11844 ;;		_InitMRF24J40
 11845 ;;		_MiMAC_SendPacket
 11846 ;;		_MiMAC_SetChannel
 11847 ;;		_MiMAC_SetAltAddress
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           
 11852                           ;psect for function _PHYSetShortRAMAddr
 11853  1C82                     _PHYSetShortRAMAddr:	
 11854                           
 11855                           ;incstack = 0
 11856                           ; Regs used in _PHYSetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 11857                           ;PHYSetShortRAMAddr@address stored from wreg
 11858  1C82  00AB               	movwf	PHYSetShortRAMAddr@address
 11859                           
 11860                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 11861  1C83  3000               	movlw	0
 11862  1C84  198B               	btfsc	11,3	;volatile
 11863  1C85  3001               	movlw	1
 11864  1C86  00AC               	movwf	PHYSetShortRAMAddr@tmpRFIE	;volatile
 11865                           
 11866                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.IOCIE = 0;
 11867  1C87  118B               	bcf	11,3	;volatile
 11868                           
 11869                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 11870  1C88  0022               	movlb	2	; select bank2
 11871  1C89  118D               	bcf	13,3	;volatile
 11872                           
 11873                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
 11874  1C8A  0020               	movlb	0	; select bank0
 11875  1C8B  082B               	movf	PHYSetShortRAMAddr@address,w
 11876  1C8C  3189  21C9  3198   	fcall	_SPIPut
 11877                           
 11878                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
 11879  1C8F  082A               	movf	PHYSetShortRAMAddr@value,w
 11880  1C90  3189  21C9         	fcall	_SPIPut
 11881                           
 11882                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 11883  1C92  0022               	movlb	2	; select bank2
 11884  1C93  158D               	bsf	13,3	;volatile
 11885                           
 11886                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.IOCIE = tmpRFIE;
 11887  1C94  0020               	movlb	0	; select bank0
 11888  1C95  0C2C               	rrf	PHYSetShortRAMAddr@tmpRFIE,w	;volatile
 11889  1C96  1C03               	skipc
 11890  1C97  118B               	bcf	11,3	;volatile
 11891  1C98  1803               	skipnc
 11892  1C99  158B               	bsf	11,3	;volatile
 11893  1C9A  0008               	return
 11894  1C9B                     __end_of_PHYSetShortRAMAddr:	
 11895  1C9B                     __ptext33:	
 11896 ;; *************** function _MiMAC_SendPacket *****************
 11897 ;; Defined at:
 11898 ;;		line 736 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  transParam      7   38[BANK0 ] struct .
 11901 ;;  MACPayload      1   45[BANK0 ] PTR unsigned char 
 11902 ;;		 -> TxBuffer(40), 
 11903 ;;  MACPayloadLe    1   46[BANK0 ] unsigned char 
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;  t2              4    4[BANK1 ] struct _MIWI_TICK
 11906 ;;  t1              4    0[BANK1 ] struct _MIWI_TICK
 11907 ;;  loc             1   12[BANK1 ] unsigned char 
 11908 ;;  i               1   11[BANK1 ] unsigned char 
 11909 ;;  headerLength    1   10[BANK1 ] unsigned char 
 11910 ;;  frameControl    1    9[BANK1 ] unsigned char 
 11911 ;;  IntraPAN        1    8[BANK1 ] unsigned char 
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      unsigned char 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11916 ;; Tracked objects:
 11917 ;;		On entry : 1F/0
 11918 ;;		On exit  : 1F/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11921 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;Total ram usage:       26 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:    8
 11928 ;; This function calls:
 11929 ;;		_InitMRF24J40
 11930 ;;		_MiMAC_SetAltAddress
 11931 ;;		_MiWi_TickGet
 11932 ;;		_PHYSetLongRAMAddr
 11933 ;;		_PHYSetShortRAMAddr
 11934 ;; This function is called by:
 11935 ;;		_SendPacket
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _MiMAC_SendPacket
 11941  1C9B                     _MiMAC_SendPacket:	
 11942                           
 11943                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
 11944                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
 11945                           
 11946                           ;incstack = 0
 11947                           ; Regs used in _MiMAC_SendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11948  1C9B  0021               	movlb	1	; select bank1
 11949  1C9C  01AC               	clrf	MiMAC_SendPacket@loc^(0+128)
 11950                           
 11951                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
 11952                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
 11953                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
 11954                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
 11955  1C9D  0020               	movlb	0	; select bank0
 11956  1C9E  1D46               	btfss	MiMAC_SendPacket@transParam,2
 11957  1C9F  2CA2               	goto	l133
 11958                           
 11959                           ;drv_mrf_miwi_24j40.c: 750: {
 11960                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
 11961  1CA0  01C9               	clrf	MiMAC_SendPacket@transParam+3
 11962  1CA1  0AC9               	incf	MiMAC_SendPacket@transParam+3,f
 11963  1CA2                     l133:	
 11964                           
 11965                           ;drv_mrf_miwi_24j40.c: 752: }
 11966                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
 11967  1CA2  19C6               	btfsc	MiMAC_SendPacket@transParam,3
 11968                           
 11969                           ;drv_mrf_miwi_24j40.c: 755: {
 11970                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
 11971  1CA3  01CA               	clrf	MiMAC_SendPacket@transParam+4
 11972                           
 11973                           ;drv_mrf_miwi_24j40.c: 757: }
 11974                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
 11975  1CA4  0846               	movf	MiMAC_SendPacket@transParam,w
 11976  1CA5  3903               	andlw	3
 11977  1CA6  3A01               	xorlw	1
 11978  1CA7  1D03               	skipz
 11979  1CA8  2CAD               	goto	l7867
 11980                           
 11981                           ;drv_mrf_miwi_24j40.c: 784: {
 11982                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
 11983  1CA9  3003               	movlw	3
 11984  1CAA  0021               	movlb	1	; select bank1
 11985  1CAB  00A9               	movwf	MiMAC_SendPacket@frameControl^(0+128)
 11986                           
 11987                           ;drv_mrf_miwi_24j40.c: 786: } else if (transParam.flags.bits.packetType == 0x00)
 11988  1CAC  2CB4               	goto	l7871
 11989  1CAD                     l7867:	
 11990  1CAD  0846               	movf	MiMAC_SendPacket@transParam,w
 11991  1CAE  3903               	andlw	3
 11992  1CAF  1D03               	skipz
 11993  1CB0  2CB4               	goto	l7871
 11994                           
 11995                           ;drv_mrf_miwi_24j40.c: 787: {
 11996                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
 11997  1CB1  0021               	movlb	1	; select bank1
 11998  1CB2  01A9               	clrf	MiMAC_SendPacket@frameControl^(0+128)
 11999  1CB3  0AA9               	incf	MiMAC_SendPacket@frameControl^(0+128),f
 12000  1CB4                     l7871:	
 12001                           
 12002                           ;drv_mrf_miwi_24j40.c: 789: }
 12003                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
 12004  1CB4  0020               	movlb	0	; select bank0
 12005  1CB5  0860               	movf	_MAC_PANID+1,w
 12006  1CB6  064C               	xorwf	MiMAC_SendPacket@transParam+6,w
 12007  1CB7  1D03               	skipz
 12008  1CB8  2CBB               	goto	u6535
 12009  1CB9  085F               	movf	_MAC_PANID,w
 12010  1CBA  064B               	xorwf	MiMAC_SendPacket@transParam+5,w
 12011  1CBB                     u6535:	
 12012  1CBB  1D03               	skipz
 12013  1CBC  2CC9               	goto	l7881
 12014  1CBD  0F5F               	incfsz	_MAC_PANID,w
 12015  1CBE  2CC2               	goto	l7875
 12016  1CBF  0A60               	incf	_MAC_PANID+1,w
 12017  1CC0  1903               	btfsc	3,2
 12018  1CC1  2CC9               	goto	l7881
 12019  1CC2                     l7875:	
 12020                           
 12021                           ;drv_mrf_miwi_24j40.c: 796: {
 12022                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
 12023  1CC2  3005               	movlw	5
 12024  1CC3  0021               	movlb	1	; select bank1
 12025  1CC4  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 12026                           
 12027                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
 12028  1CC5  1729               	bsf	MiMAC_SendPacket@frameControl^(0+128),6
 12029                           
 12030                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
 12031  1CC6  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 12032  1CC7  0AA8               	incf	MiMAC_SendPacket@IntraPAN^(0+128),f
 12033                           
 12034                           ;drv_mrf_miwi_24j40.c: 802: }
 12035  1CC8  2CCD               	goto	l7885
 12036  1CC9                     l7881:	
 12037                           
 12038                           ;drv_mrf_miwi_24j40.c: 804: else
 12039                           ;drv_mrf_miwi_24j40.c: 805: {
 12040                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
 12041  1CC9  3007               	movlw	7
 12042  1CCA  0021               	movlb	1	; select bank1
 12043  1CCB  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 12044                           
 12045                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
 12046  1CCC  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 12047  1CCD                     l7885:	
 12048                           
 12049                           ;drv_mrf_miwi_24j40.c: 808: }
 12050                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
 12051  1CCD  0020               	movlb	0	; select bank0
 12052  1CCE  0849               	movf	MiMAC_SendPacket@transParam+3,w
 12053  1CCF  1903               	btfsc	3,2
 12054  1CD0  2CD5               	goto	l7889
 12055                           
 12056                           ;drv_mrf_miwi_24j40.c: 812: {
 12057                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
 12058  1CD1  0021               	movlb	1	; select bank1
 12059  1CD2  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 12060  1CD3  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 12061                           
 12062                           ;drv_mrf_miwi_24j40.c: 814: } else
 12063  1CD4  2CD8               	goto	l141
 12064  1CD5                     l7889:	
 12065                           
 12066                           ;drv_mrf_miwi_24j40.c: 815: {
 12067                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
 12068  1CD5  3008               	movlw	8
 12069  1CD6  0021               	movlb	1	; select bank1
 12070  1CD7  07AA               	addwf	MiMAC_SendPacket@headerLength^(0+128),f
 12071  1CD8                     l141:	
 12072                           
 12073                           ;drv_mrf_miwi_24j40.c: 817: }
 12074                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
 12075  1CD8  0020               	movlb	0	; select bank0
 12076  1CD9  084A               	movf	MiMAC_SendPacket@transParam+4,w
 12077  1CDA  1903               	btfsc	3,2
 12078  1CDB  2CE0               	goto	l7893
 12079                           
 12080                           ;drv_mrf_miwi_24j40.c: 820: {
 12081                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
 12082  1CDC  0021               	movlb	1	; select bank1
 12083  1CDD  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 12084  1CDE  0AAA               	incf	MiMAC_SendPacket@headerLength^(0+128),f
 12085                           
 12086                           ;drv_mrf_miwi_24j40.c: 822: } else
 12087  1CDF  2CE3               	goto	l7895
 12088  1CE0                     l7893:	
 12089                           
 12090                           ;drv_mrf_miwi_24j40.c: 823: {
 12091                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
 12092  1CE0  3008               	movlw	8
 12093  1CE1  0021               	movlb	1	; select bank1
 12094  1CE2  07AA               	addwf	MiMAC_SendPacket@headerLength^(0+128),f
 12095  1CE3                     l7895:	
 12096                           
 12097                           ;drv_mrf_miwi_24j40.c: 825: }
 12098                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 12099  1CE3  0020               	movlb	0	; select bank0
 12100  1CE4  1AC6               	btfsc	MiMAC_SendPacket@transParam,5
 12101  1CE5  1946               	btfsc	MiMAC_SendPacket@transParam,2
 12102  1CE6  2CE9               	goto	l7901
 12103                           
 12104                           ;drv_mrf_miwi_24j40.c: 828: {
 12105                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
 12106  1CE7  0021               	movlb	1	; select bank1
 12107  1CE8  16A9               	bsf	MiMAC_SendPacket@frameControl^(0+128),5
 12108  1CE9                     l7901:	
 12109                           
 12110                           ;drv_mrf_miwi_24j40.c: 830: }
 12111                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
 12112  1CE9  0020               	movlb	0	; select bank0
 12113  1CEA  0846               	movf	MiMAC_SendPacket@transParam,w
 12114  1CEB  3903               	andlw	3
 12115  1CEC  3A03               	xorlw	3
 12116  1CED  1D03               	skipz
 12117  1CEE  2CF8               	goto	l7913
 12118                           
 12119                           ;drv_mrf_miwi_24j40.c: 834: {
 12120                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
 12121  1CEF  0021               	movlb	1	; select bank1
 12122  1CF0  3007               	movlw	7
 12123  1CF1  01A9               	clrf	MiMAC_SendPacket@frameControl^(0+128)
 12124                           
 12125                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
 12126  1CF2  00AA               	movwf	MiMAC_SendPacket@headerLength^(0+128)
 12127                           
 12128                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
 12129  1CF3  01A8               	clrf	MiMAC_SendPacket@IntraPAN^(0+128)
 12130                           
 12131                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
 12132  1CF4  0020               	movlb	0	; select bank0
 12133  1CF5  01CA               	clrf	MiMAC_SendPacket@transParam+4
 12134  1CF6  0ACA               	incf	MiMAC_SendPacket@transParam+4,f
 12135                           
 12136                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
 12137  1CF7  12C6               	bcf	MiMAC_SendPacket@transParam,5
 12138  1CF8                     l7913:	
 12139                           
 12140                           ;drv_mrf_miwi_24j40.c: 842: }
 12141                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
 12142  1CF8  01AA               	clrf	PHYSetLongRAMAddr@address
 12143  1CF9  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12144  1CFA  0021               	movlb	1	; select bank1
 12145  1CFB  082A               	movf	MiMAC_SendPacket@headerLength^(0+128),w
 12146  1CFC  0020               	movlb	0	; select bank0
 12147  1CFD  00AC               	movwf	PHYSetLongRAMAddr@value
 12148  1CFE  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12149  1D00  0021               	movlb	1	; select bank1
 12150  1D01  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12151                           
 12152                           ;drv_mrf_miwi_24j40.c: 861: {
 12153                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 12154  1D02  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12155  1D03  0020               	movlb	0	; select bank0
 12156  1D04  00AA               	movwf	PHYSetLongRAMAddr@address
 12157  1D05  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12158  1D06  0021               	movlb	1	; select bank1
 12159  1D07  082A               	movf	MiMAC_SendPacket@headerLength^(0+128),w
 12160  1D08  0020               	movlb	0	; select bank0
 12161  1D09  074E               	addwf	MiMAC_SendPacket@MACPayloadLen,w
 12162  1D0A  00AC               	movwf	PHYSetLongRAMAddr@value
 12163  1D0B  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12164  1D0D  0021               	movlb	1	; select bank1
 12165  1D0E  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12166                           
 12167                           ;drv_mrf_miwi_24j40.c: 863: }
 12168                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
 12169  1D0F  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12170  1D10  0020               	movlb	0	; select bank0
 12171  1D11  00AA               	movwf	PHYSetLongRAMAddr@address
 12172  1D12  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12173  1D13  0021               	movlb	1	; select bank1
 12174  1D14  0829               	movf	MiMAC_SendPacket@frameControl^(0+128),w
 12175  1D15  0020               	movlb	0	; select bank0
 12176  1D16  00AC               	movwf	PHYSetLongRAMAddr@value
 12177  1D17  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12178  1D19  0021               	movlb	1	; select bank1
 12179  1D1A  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12180                           
 12181                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
 12182  1D1B  0020               	movlb	0	; select bank0
 12183  1D1C  0846               	movf	MiMAC_SendPacket@transParam,w
 12184  1D1D  3903               	andlw	3
 12185  1D1E  3A03               	xorlw	3
 12186  1D1F  1D03               	skipz
 12187  1D20  2D39               	goto	l7933
 12188                           
 12189                           ;drv_mrf_miwi_24j40.c: 870: {
 12190                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
 12191  1D21  0021               	movlb	1	; select bank1
 12192  1D22  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12193  1D23  0020               	movlb	0	; select bank0
 12194  1D24  00AA               	movwf	PHYSetLongRAMAddr@address
 12195  1D25  3080               	movlw	128
 12196  1D26  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12197  1D27  00AC               	movwf	PHYSetLongRAMAddr@value
 12198  1D28  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12199  1D2A  0021               	movlb	1	; select bank1
 12200  1D2B  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12201                           
 12202                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12203  1D2C  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12204  1D2D  0020               	movlb	0	; select bank0
 12205  1D2E  00AA               	movwf	PHYSetLongRAMAddr@address
 12206  1D2F  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12207  1D30  0021               	movlb	1	; select bank1
 12208  1D31  0852               	movf	_IEEESeqNum^(0+128),w
 12209  1D32  0020               	movlb	0	; select bank0
 12210  1D33  00AC               	movwf	PHYSetLongRAMAddr@value
 12211  1D34  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12212  1D36  0021               	movlb	1	; select bank1
 12213  1D37  0AD2               	incf	_IEEESeqNum^(0+128),f
 12214  1D38  2DBC               	goto	L5
 12215  1D39                     l7933:	
 12216                           ;drv_mrf_miwi_24j40.c: 874: } else
 12217                           
 12218                           
 12219                           ;drv_mrf_miwi_24j40.c: 875: {
 12220                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
 12221  1D39  0849               	movf	MiMAC_SendPacket@transParam+3,w
 12222  1D3A  1903               	btfsc	3,2
 12223  1D3B  2D45               	goto	l7941
 12224  1D3C  084A               	movf	MiMAC_SendPacket@transParam+4,w
 12225  1D3D  1903               	btfsc	3,2
 12226  1D3E  2D45               	goto	l7941
 12227                           
 12228                           ;drv_mrf_miwi_24j40.c: 877: {
 12229                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 12230  1D3F  0021               	movlb	1	; select bank1
 12231  1D40  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12232  1D41  0020               	movlb	0	; select bank0
 12233  1D42  00AA               	movwf	PHYSetLongRAMAddr@address
 12234  1D43  3088               	movlw	136
 12235  1D44  2D61               	goto	L7
 12236  1D45                     l7941:	
 12237                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 12238                           
 12239  1D45  0849               	movf	MiMAC_SendPacket@transParam+3,w
 12240  1D46  1903               	btfsc	3,2
 12241  1D47  2D51               	goto	l7949
 12242  1D48  084A               	movf	MiMAC_SendPacket@transParam+4,w
 12243  1D49  1D03               	btfss	3,2
 12244  1D4A  2D51               	goto	l7949
 12245                           
 12246                           ;drv_mrf_miwi_24j40.c: 880: {
 12247                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 12248  1D4B  0021               	movlb	1	; select bank1
 12249  1D4C  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12250  1D4D  0020               	movlb	0	; select bank0
 12251  1D4E  00AA               	movwf	PHYSetLongRAMAddr@address
 12252  1D4F  30C8               	movlw	200
 12253  1D50  2D61               	goto	L7
 12254  1D51                     l7949:	
 12255  1D51  0849               	movf	MiMAC_SendPacket@transParam+3,w
 12256  1D52  1D03               	btfss	3,2
 12257  1D53  2D5C               	goto	l7957
 12258  1D54  0B4A               	decfsz	MiMAC_SendPacket@transParam+4,w
 12259  1D55  2D5C               	goto	l7957
 12260                           
 12261                           ;drv_mrf_miwi_24j40.c: 883: {
 12262                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 12263  1D56  0021               	movlb	1	; select bank1
 12264  1D57  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12265  1D58  0020               	movlb	0	; select bank0
 12266  1D59  00AA               	movwf	PHYSetLongRAMAddr@address
 12267  1D5A  308C               	movlw	140
 12268  1D5B  2D61               	goto	L7
 12269  1D5C                     l7957:	
 12270                           
 12271                           ;drv_mrf_miwi_24j40.c: 886: {
 12272                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 12273  1D5C  0021               	movlb	1	; select bank1
 12274  1D5D  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12275  1D5E  0020               	movlb	0	; select bank0
 12276  1D5F  00AA               	movwf	PHYSetLongRAMAddr@address
 12277  1D60  30CC               	movlw	204
 12278  1D61                     L7:	
 12279  1D61  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12280  1D62  00AC               	movwf	PHYSetLongRAMAddr@value
 12281  1D63  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12282  1D65  0021               	movlb	1	; select bank1
 12283  1D66  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12284                           
 12285                           ;drv_mrf_miwi_24j40.c: 888: }
 12286                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12287  1D67  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12288  1D68  0020               	movlb	0	; select bank0
 12289  1D69  00AA               	movwf	PHYSetLongRAMAddr@address
 12290  1D6A  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12291  1D6B  0021               	movlb	1	; select bank1
 12292  1D6C  0852               	movf	_IEEESeqNum^(0+128),w
 12293  1D6D  0020               	movlb	0	; select bank0
 12294  1D6E  00AC               	movwf	PHYSetLongRAMAddr@value
 12295  1D6F  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12296  1D71  0021               	movlb	1	; select bank1
 12297  1D72  0AD2               	incf	_IEEESeqNum^(0+128),f
 12298  1D73  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12299                           
 12300                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 12301  1D74  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12302  1D75  0020               	movlb	0	; select bank0
 12303  1D76  00AA               	movwf	PHYSetLongRAMAddr@address
 12304  1D77  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12305  1D78  084B               	movf	MiMAC_SendPacket@transParam+5,w
 12306  1D79  00AC               	movwf	PHYSetLongRAMAddr@value
 12307  1D7A  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12308  1D7C  0021               	movlb	1	; select bank1
 12309  1D7D  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12310                           
 12311                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 12312  1D7E  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12313  1D7F  0020               	movlb	0	; select bank0
 12314  1D80  00AA               	movwf	PHYSetLongRAMAddr@address
 12315  1D81  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12316  1D82  084C               	movf	MiMAC_SendPacket@transParam+6,w
 12317  1D83  00AC               	movwf	PHYSetLongRAMAddr@value
 12318  1D84  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12319  1D86  0021               	movlb	1	; select bank1
 12320  1D87  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12321                           
 12322                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 12323  1D88  0020               	movlb	0	; select bank0
 12324  1D89  1D46               	btfss	MiMAC_SendPacket@transParam,2
 12325  1D8A  2D9C               	goto	l7977
 12326                           
 12327                           ;drv_mrf_miwi_24j40.c: 899: {
 12328                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 12329  1D8B  0021               	movlb	1	; select bank1
 12330  1D8C  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12331  1D8D  0020               	movlb	0	; select bank0
 12332  1D8E  00AA               	movwf	PHYSetLongRAMAddr@address
 12333  1D8F  30FF               	movlw	255
 12334  1D90  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12335  1D91  00AC               	movwf	PHYSetLongRAMAddr@value
 12336  1D92  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12337  1D94  0021               	movlb	1	; select bank1
 12338  1D95  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12339                           
 12340                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 12341  1D96  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12342  1D97  0020               	movlb	0	; select bank0
 12343  1D98  00AA               	movwf	PHYSetLongRAMAddr@address
 12344  1D99  30FF               	movlw	255
 12345  1D9A  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12346  1D9B  2DB8               	goto	L6
 12347  1D9C                     l7977:	
 12348                           ;drv_mrf_miwi_24j40.c: 902: } else
 12349                           
 12350                           
 12351                           ;drv_mrf_miwi_24j40.c: 903: {
 12352                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 12353  1D9C  0849               	movf	MiMAC_SendPacket@transParam+3,w
 12354  1D9D  1903               	btfsc	3,2
 12355  1D9E  2DBE               	goto	l7985
 12356                           
 12357                           ;drv_mrf_miwi_24j40.c: 905: {
 12358                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 12359  1D9F  0021               	movlb	1	; select bank1
 12360  1DA0  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12361  1DA1  0020               	movlb	0	; select bank0
 12362  1DA2  00AA               	movwf	PHYSetLongRAMAddr@address
 12363  1DA3  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12364  1DA4  0847               	movf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 12365  1DA5  0086               	movwf	6
 12366  1DA6  0848               	movf	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 12367  1DA7  0087               	movwf	7
 12368  1DA8  0801               	movf	1,w
 12369  1DA9  00AC               	movwf	PHYSetLongRAMAddr@value
 12370  1DAA  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12371  1DAC  0021               	movlb	1	; select bank1
 12372  1DAD  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12373                           
 12374                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 12375  1DAE  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12376  1DAF  0020               	movlb	0	; select bank0
 12377  1DB0  00AA               	movwf	PHYSetLongRAMAddr@address
 12378  1DB1  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12379  1DB2  0847               	movf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 12380  1DB3  0086               	movwf	6
 12381  1DB4  0848               	movf	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 12382  1DB5  0087               	movwf	7
 12383  1DB6  3141               	addfsr 1,1
 12384  1DB7  0801               	movf	1,w
 12385  1DB8                     L6:	
 12386  1DB8  00AC               	movwf	PHYSetLongRAMAddr@value
 12387  1DB9  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12388  1DBB  0021               	movlb	1	; select bank1
 12389  1DBC                     L5:	
 12390  1DBC  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12391                           
 12392                           ;drv_mrf_miwi_24j40.c: 908: } else
 12393  1DBD  2DD9               	goto	l7999
 12394  1DBE                     l7985:	
 12395                           
 12396                           ;drv_mrf_miwi_24j40.c: 909: {
 12397                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 12398  1DBE  0021               	movlb	1	; select bank1
 12399  1DBF  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 12400  1DC0                     l7991:	
 12401                           
 12402                           ;drv_mrf_miwi_24j40.c: 911: {
 12403                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 12404  1DC0  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12405  1DC1  0020               	movlb	0	; select bank0
 12406  1DC2  00AA               	movwf	PHYSetLongRAMAddr@address
 12407  1DC3  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12408  1DC4  0021               	movlb	1	; select bank1
 12409  1DC5  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 12410  1DC6  0020               	movlb	0	; select bank0
 12411  1DC7  00CF               	movwf	??_MiMAC_SendPacket
 12412  1DC8  01D0               	clrf	??_MiMAC_SendPacket+1
 12413  1DC9  0747               	addwf	low ((MiMAC_SendPacket@transParam| 0+1)),w
 12414  1DCA  0086               	movwf	6
 12415  1DCB  0850               	movf	??_MiMAC_SendPacket+1,w
 12416  1DCC  3D48               	addwfc	(low ((MiMAC_SendPacket@transParam| 0+1))+1),w
 12417  1DCD  0087               	movwf	7
 12418  1DCE  0801               	movf	1,w
 12419  1DCF  00AC               	movwf	PHYSetLongRAMAddr@value
 12420  1DD0  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12421  1DD2  0021               	movlb	1	; select bank1
 12422  1DD3  3008               	movlw	8
 12423  1DD4  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12424  1DD5  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 12425  1DD6  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 12426  1DD7  1C03               	skipc
 12427  1DD8  2DC0               	goto	l7991
 12428  1DD9                     l7999:	
 12429                           
 12430                           ;drv_mrf_miwi_24j40.c: 913: }
 12431                           ;drv_mrf_miwi_24j40.c: 914: }
 12432                           ;drv_mrf_miwi_24j40.c: 915: }
 12433                           ;drv_mrf_miwi_24j40.c: 916: }
 12434                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 12435  1DD9  0828               	movf	MiMAC_SendPacket@IntraPAN^(0+128),w
 12436  1DDA  1D03               	btfss	3,2
 12437  1DDB  2DF0               	goto	l8007
 12438                           
 12439                           ;drv_mrf_miwi_24j40.c: 921: {
 12440                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 12441  1DDC  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12442  1DDD  0020               	movlb	0	; select bank0
 12443  1DDE  00AA               	movwf	PHYSetLongRAMAddr@address
 12444  1DDF  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12445  1DE0  085F               	movf	_MAC_PANID,w
 12446  1DE1  00AC               	movwf	PHYSetLongRAMAddr@value
 12447  1DE2  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12448  1DE4  0021               	movlb	1	; select bank1
 12449  1DE5  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12450                           
 12451                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 12452  1DE6  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12453  1DE7  0020               	movlb	0	; select bank0
 12454  1DE8  00AA               	movwf	PHYSetLongRAMAddr@address
 12455  1DE9  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12456  1DEA  0860               	movf	_MAC_PANID+1,w
 12457  1DEB  00AC               	movwf	PHYSetLongRAMAddr@value
 12458  1DEC  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12459  1DEE  0021               	movlb	1	; select bank1
 12460  1DEF  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12461  1DF0                     l8007:	
 12462                           
 12463                           ;drv_mrf_miwi_24j40.c: 924: }
 12464                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 12465  1DF0  0020               	movlb	0	; select bank0
 12466  1DF1  084A               	movf	MiMAC_SendPacket@transParam+4,w
 12467  1DF2  1903               	btfsc	3,2
 12468  1DF3  2E0A               	goto	l8015
 12469                           
 12470                           ;drv_mrf_miwi_24j40.c: 929: {
 12471                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 12472  1DF4  0021               	movlb	1	; select bank1
 12473  1DF5  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12474  1DF6  0020               	movlb	0	; select bank0
 12475  1DF7  00AA               	movwf	PHYSetLongRAMAddr@address
 12476  1DF8  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12477  1DF9  0861               	movf	_myNetworkAddress,w
 12478  1DFA  00AC               	movwf	PHYSetLongRAMAddr@value
 12479  1DFB  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12480  1DFD  0021               	movlb	1	; select bank1
 12481  1DFE  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12482                           
 12483                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 12484  1DFF  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12485  1E00  0020               	movlb	0	; select bank0
 12486  1E01  00AA               	movwf	PHYSetLongRAMAddr@address
 12487  1E02  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12488  1E03  0862               	movf	_myNetworkAddress+1,w
 12489  1E04  00AC               	movwf	PHYSetLongRAMAddr@value
 12490  1E05  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12491  1E07  0021               	movlb	1	; select bank1
 12492  1E08  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12493                           
 12494                           ;drv_mrf_miwi_24j40.c: 932: } else
 12495  1E09  2E24               	goto	l8029
 12496  1E0A                     l8015:	
 12497                           
 12498                           ;drv_mrf_miwi_24j40.c: 933: {
 12499                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 12500  1E0A  0021               	movlb	1	; select bank1
 12501  1E0B  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 12502  1E0C                     l8021:	
 12503                           
 12504                           ;drv_mrf_miwi_24j40.c: 935: {
 12505                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 12506  1E0C  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12507  1E0D  0020               	movlb	0	; select bank0
 12508  1E0E  00AA               	movwf	PHYSetLongRAMAddr@address
 12509  1E0F  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12510  1E10  0021               	movlb	1	; select bank1
 12511  1E11  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 12512  1E12  0022               	movlb	2	; select bank2
 12513  1E13  0733               	addwf	(low ((_MACInitParams| (0+256)+1)))^0,w
 12514  1E14  0020               	movlb	0	; select bank0
 12515  1E15  00CF               	movwf	??_MiMAC_SendPacket
 12516  1E16  0086               	movwf	6
 12517  1E17  3001               	movlw	1	; select bank2/3
 12518  1E18  0087               	movwf	7
 12519  1E19  0801               	movf	1,w
 12520  1E1A  00AC               	movwf	PHYSetLongRAMAddr@value
 12521  1E1B  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12522  1E1D  0021               	movlb	1	; select bank1
 12523  1E1E  3008               	movlw	8
 12524  1E1F  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12525  1E20  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 12526  1E21  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 12527  1E22  1C03               	skipc
 12528  1E23  2E0C               	goto	l8021
 12529  1E24                     l8029:	
 12530                           
 12531                           ;drv_mrf_miwi_24j40.c: 937: }
 12532                           ;drv_mrf_miwi_24j40.c: 938: }
 12533                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 12534  1E24  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 12535  1E25                     l8037:	
 12536  1E25  0020               	movlb	0	; select bank0
 12537  1E26  084E               	movf	MiMAC_SendPacket@MACPayloadLen,w
 12538  1E27  0021               	movlb	1	; select bank1
 12539  1E28  022B               	subwf	MiMAC_SendPacket@i^(0+128),w
 12540  1E29  1803               	btfsc	3,0
 12541  1E2A  2E3F               	goto	l167
 12542                           
 12543                           ;drv_mrf_miwi_24j40.c: 965: {
 12544                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 12545  1E2B  082C               	movf	MiMAC_SendPacket@loc^(0+128),w
 12546  1E2C  0020               	movlb	0	; select bank0
 12547  1E2D  00AA               	movwf	PHYSetLongRAMAddr@address
 12548  1E2E  01AB               	clrf	PHYSetLongRAMAddr@address+1
 12549  1E2F  0021               	movlb	1	; select bank1
 12550  1E30  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 12551  1E31  0020               	movlb	0	; select bank0
 12552  1E32  074D               	addwf	MiMAC_SendPacket@MACPayload,w
 12553  1E33  00CF               	movwf	??_MiMAC_SendPacket
 12554  1E34  0086               	movwf	6
 12555  1E35  3002               	movlw	2	; select bank4/5
 12556  1E36  0087               	movwf	7
 12557  1E37  0801               	movf	1,w
 12558  1E38  00AC               	movwf	PHYSetLongRAMAddr@value
 12559  1E39  26AB  3198         	fcall	_PHYSetLongRAMAddr
 12560  1E3B  0021               	movlb	1	; select bank1
 12561  1E3C  0AAC               	incf	MiMAC_SendPacket@loc^(0+128),f
 12562  1E3D  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 12563  1E3E  2E25               	goto	l8037
 12564  1E3F                     l167:	
 12565                           
 12566                           ;drv_mrf_miwi_24j40.c: 967: }
 12567                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 12568  1E3F  0020               	movlb	0	; select bank0
 12569  1E40  145E               	bsf	_MRF24J40Status,0	;volatile
 12570                           
 12571                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 12572  1E41  1AC6               	btfsc	MiMAC_SendPacket@transParam,5
 12573  1E42  1946               	btfsc	MiMAC_SendPacket@transParam,2
 12574  1E43  2E4A               	goto	l168
 12575                           
 12576                           ;drv_mrf_miwi_24j40.c: 973: {
 12577                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 12578  1E44  3005               	movlw	5
 12579  1E45  0021               	movlb	1	; select bank1
 12580  1E46  00AB               	movwf	MiMAC_SendPacket@i^(0+128)
 12581                           
 12582                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 12583  1E47  0020               	movlb	0	; select bank0
 12584  1E48  14DE               	bsf	_MRF24J40Status,1	;volatile
 12585                           
 12586                           ;drv_mrf_miwi_24j40.c: 978: } else
 12587  1E49  2E4F               	goto	l8045
 12588  1E4A                     l168:	
 12589                           
 12590                           ;drv_mrf_miwi_24j40.c: 979: {
 12591                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 12592  1E4A  0021               	movlb	1	; select bank1
 12593  1E4B  01AB               	clrf	MiMAC_SendPacket@i^(0+128)
 12594  1E4C  0AAB               	incf	MiMAC_SendPacket@i^(0+128),f
 12595                           
 12596                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 12597  1E4D  0020               	movlb	0	; select bank0
 12598  1E4E  10DE               	bcf	_MRF24J40Status,1	;volatile
 12599  1E4F                     l8045:	
 12600                           
 12601                           ;drv_mrf_miwi_24j40.c: 984: }
 12602                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 12603  1E4F  0021               	movlb	1	; select bank1
 12604  1E50  082B               	movf	MiMAC_SendPacket@i^(0+128),w
 12605  1E51  0020               	movlb	0	; select bank0
 12606  1E52  00AA               	movwf	PHYSetShortRAMAddr@value
 12607  1E53  3037               	movlw	55
 12608  1E54  2482  3198         	fcall	_PHYSetShortRAMAddr
 12609                           
 12610                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 12611  1E56  22A5  3198         	fcall	_MiWi_TickGet
 12612  1E58  082C               	movf	?_MiWi_TickGet+3,w
 12613  1E59  0021               	movlb	1	; select bank1
 12614  1E5A  00A3               	movwf	(MiMAC_SendPacket@t1+3)^(0+128)
 12615  1E5B  0020               	movlb	0	; select bank0
 12616  1E5C  082B               	movf	?_MiWi_TickGet+2,w
 12617  1E5D  0021               	movlb	1	; select bank1
 12618  1E5E  00A2               	movwf	(MiMAC_SendPacket@t1+2)^(0+128)
 12619  1E5F  0020               	movlb	0	; select bank0
 12620  1E60  082A               	movf	?_MiWi_TickGet+1,w
 12621  1E61  0021               	movlb	1	; select bank1
 12622  1E62  00A1               	movwf	(MiMAC_SendPacket@t1+1)^(0+128)
 12623  1E63  0020               	movlb	0	; select bank0
 12624  1E64  0829               	movf	?_MiWi_TickGet,w
 12625  1E65  0021               	movlb	1	; select bank1
 12626  1E66  00A0               	movwf	MiMAC_SendPacket@t1^(0+128)
 12627  1E67                     l8047:	
 12628                           
 12629                           ;drv_mrf_miwi_24j40.c: 993: {
 12630                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB1 == 0)
 12631  1E67  0020               	movlb	0	; select bank0
 12632  1E68  188D               	btfsc	13,1	;volatile
 12633  1E69  2E6C               	goto	l171
 12634                           
 12635                           ;drv_mrf_miwi_24j40.c: 995: {
 12636                           ;drv_mrf_miwi_24j40.c: 996: IOCBFbits.IOCBF1 = 1;
 12637  1E6A  0027               	movlb	7	; select bank7
 12638  1E6B  1496               	bsf	22,1	;volatile
 12639  1E6C                     l171:	
 12640                           
 12641                           ;drv_mrf_miwi_24j40.c: 997: }
 12642                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 12643  1E6C  0020               	movlb	0	; select bank0
 12644  1E6D  185E               	btfsc	_MRF24J40Status,0	;volatile
 12645  1E6E  2E73               	goto	l8059
 12646                           
 12647                           ;drv_mrf_miwi_24j40.c: 999: {
 12648                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 12649  1E6F  1D5E               	btfss	_MRF24J40Status,2	;volatile
 12650  1E70  3401               	retlw	1
 12651                           
 12652                           ;drv_mrf_miwi_24j40.c: 1001: {
 12653                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 12654  1E71  115E               	bcf	_MRF24J40Status,2	;volatile
 12655                           
 12656                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 12657  1E72  3400               	retlw	0
 12658  1E73                     l8059:	
 12659                           
 12660                           ;drv_mrf_miwi_24j40.c: 1006: }
 12661                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 12662  1E73  22A5  3198         	fcall	_MiWi_TickGet
 12663  1E75  082C               	movf	?_MiWi_TickGet+3,w
 12664  1E76  0021               	movlb	1	; select bank1
 12665  1E77  00A7               	movwf	(MiMAC_SendPacket@t2+3)^(0+128)
 12666  1E78  0020               	movlb	0	; select bank0
 12667  1E79  082B               	movf	?_MiWi_TickGet+2,w
 12668  1E7A  0021               	movlb	1	; select bank1
 12669  1E7B  00A6               	movwf	(MiMAC_SendPacket@t2+2)^(0+128)
 12670  1E7C  0020               	movlb	0	; select bank0
 12671  1E7D  082A               	movf	?_MiWi_TickGet+1,w
 12672  1E7E  0021               	movlb	1	; select bank1
 12673  1E7F  00A5               	movwf	(MiMAC_SendPacket@t2+1)^(0+128)
 12674  1E80  0020               	movlb	0	; select bank0
 12675  1E81  0829               	movf	?_MiWi_TickGet,w
 12676  1E82  0021               	movlb	1	; select bank1
 12677  1E83  00A4               	movwf	MiMAC_SendPacket@t2^(0+128)
 12678                           
 12679                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(10000000)/32)/25))
 12680  1E84  0820               	movf	MiMAC_SendPacket@t1^(0+128),w
 12681  1E85  0224               	subwf	MiMAC_SendPacket@t2^(0+128),w
 12682  1E86  0020               	movlb	0	; select bank0
 12683  1E87  00CF               	movwf	??_MiMAC_SendPacket
 12684  1E88  0021               	movlb	1	; select bank1
 12685  1E89  0821               	movf	(MiMAC_SendPacket@t1+1)^(0+128),w
 12686  1E8A  3B25               	subwfb	(MiMAC_SendPacket@t2+1)^(0+128),w
 12687  1E8B  0020               	movlb	0	; select bank0
 12688  1E8C  00D0               	movwf	??_MiMAC_SendPacket+1
 12689  1E8D  0021               	movlb	1	; select bank1
 12690  1E8E  0822               	movf	(MiMAC_SendPacket@t1+2)^(0+128),w
 12691  1E8F  3B26               	subwfb	(MiMAC_SendPacket@t2+2)^(0+128),w
 12692  1E90  0020               	movlb	0	; select bank0
 12693  1E91  00D1               	movwf	??_MiMAC_SendPacket+2
 12694  1E92  0021               	movlb	1	; select bank1
 12695  1E93  0823               	movf	(MiMAC_SendPacket@t1+3)^(0+128),w
 12696  1E94  3B27               	subwfb	(MiMAC_SendPacket@t2+3)^(0+128),w
 12697  1E95  0020               	movlb	0	; select bank0
 12698  1E96  00D2               	movwf	??_MiMAC_SendPacket+3
 12699  1E97  0852               	movf	??_MiMAC_SendPacket+3,w
 12700  1E98  1D03               	btfss	3,2
 12701  1E99  2EA3               	goto	l8063
 12702  1E9A  0851               	movf	??_MiMAC_SendPacket+2,w
 12703  1E9B  1D03               	btfss	3,2
 12704  1E9C  2EA3               	goto	l8063
 12705  1E9D  30D5               	movlw	213
 12706  1E9E  024F               	subwf	??_MiMAC_SendPacket,w
 12707  1E9F  3030               	movlw	48
 12708  1EA0  3B50               	subwfb	??_MiMAC_SendPacket+1,w
 12709  1EA1  1C03               	btfss	3,0
 12710  1EA2  2E67               	goto	l8047
 12711  1EA3                     l8063:	
 12712                           
 12713                           ;drv_mrf_miwi_24j40.c: 1009: {
 12714                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 12715  1EA3  237B  3198         	fcall	_InitMRF24J40
 12716                           
 12717                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 12718  1EA5  305F               	movlw	(low (_MAC_PANID| 0))& (0+255)
 12719  1EA6  00AD               	movwf	MiMAC_SetAltAddress@PANID
 12720  1EA7  3061               	movlw	(low (_myNetworkAddress| 0))& (0+255)
 12721  1EA8  274A               	fcall	_MiMAC_SetAltAddress
 12722                           
 12723                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 12724  1EA9  105E               	bcf	_MRF24J40Status,0	;volatile
 12725  1EAA  3400               	retlw	0
 12726  1EAB                     __end_of_MiMAC_SendPacket:	
 12727                           ;drv_mrf_miwi_24j40.c: 1014: }
 12728                           ;drv_mrf_miwi_24j40.c: 1015: }
 12729                           ;drv_mrf_miwi_24j40.c: 1017: return 1;
 12730                           
 12731  1EAB                     __ptext42:	
 12732 ;; *************** function _PHYSetLongRAMAddr *****************
 12733 ;; Defined at:
 12734 ;;		line 90 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;  address         2   10[BANK0 ] unsigned int 
 12737 ;;  value           1   12[BANK0 ] unsigned char 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;  tmpRFIE         1   15[BANK0 ] volatile unsigned char 
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      void 
 12742 ;; Registers used:
 12743 ;;		wreg, status,2, status,0, pclath, cstack
 12744 ;; Tracked objects:
 12745 ;;		On entry : 1F/0
 12746 ;;		On exit  : 1F/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;Total ram usage:        6 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    5
 12756 ;; This function calls:
 12757 ;;		_SPIPut
 12758 ;; This function is called by:
 12759 ;;		_InitMRF24J40
 12760 ;;		_MiMAC_SendPacket
 12761 ;;		_MiMAC_SetChannel
 12762 ;; This function uses a non-reentrant model
 12763 ;;
 12764                           
 12765                           
 12766                           ;psect for function _PHYSetLongRAMAddr
 12767  1EAB                     _PHYSetLongRAMAddr:	
 12768                           
 12769                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 12770                           
 12771                           ;incstack = 0
 12772                           ; Regs used in _PHYSetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 12773  1EAB  3000               	movlw	0
 12774  1EAC  198B               	btfsc	11,3	;volatile
 12775  1EAD  3001               	movlw	1
 12776  1EAE  00AF               	movwf	PHYSetLongRAMAddr@tmpRFIE	;volatile
 12777                           
 12778                           ;drv_mrf_miwi_24j40.c: 94: INTCONbits.IOCIE = 0;
 12779  1EAF  118B               	bcf	11,3	;volatile
 12780                           
 12781                           ;drv_mrf_miwi_24j40.c: 95: LATBbits.LATB3 = 0;
 12782  1EB0  0022               	movlb	2	; select bank2
 12783  1EB1  118D               	bcf	13,3	;volatile
 12784                           
 12785                           ;drv_mrf_miwi_24j40.c: 96: SPIPut((((uint8_t) (address >> 3))&0x7F) | 0x80);
 12786  1EB2  0020               	movlb	0	; select bank0
 12787  1EB3  082B               	movf	PHYSetLongRAMAddr@address+1,w
 12788  1EB4  00AE               	movwf	??_PHYSetLongRAMAddr+1
 12789  1EB5  082A               	movf	PHYSetLongRAMAddr@address,w
 12790  1EB6  00AD               	movwf	??_PHYSetLongRAMAddr
 12791  1EB7  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 12792  1EB8  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 12793  1EB9  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 12794  1EBA  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 12795  1EBB  36AE               	lsrf	??_PHYSetLongRAMAddr+1,f
 12796  1EBC  0CAD               	rrf	??_PHYSetLongRAMAddr,f
 12797  1EBD  082D               	movf	??_PHYSetLongRAMAddr,w
 12798  1EBE  397F               	andlw	127
 12799  1EBF  3880               	iorlw	128
 12800  1EC0  3189  21C9  3198   	fcall	_SPIPut
 12801                           
 12802                           ;drv_mrf_miwi_24j40.c: 97: SPIPut((((uint8_t) (address << 5))&0xE0) | 0x10);
 12803  1EC3  082A               	movf	PHYSetLongRAMAddr@address,w
 12804  1EC4  00AD               	movwf	??_PHYSetLongRAMAddr
 12805  1EC5  3004               	movlw	4
 12806  1EC6                     u6195:	
 12807  1EC6  35AD               	lslf	??_PHYSetLongRAMAddr,f
 12808  1EC7  3EFF               	addlw	-1
 12809  1EC8  1D03               	skipz
 12810  1EC9  2EC6               	goto	u6195
 12811  1ECA  352D               	lslf	??_PHYSetLongRAMAddr,w
 12812  1ECB  39E0               	andlw	224
 12813  1ECC  3810               	iorlw	16
 12814  1ECD  3189  21C9  3198   	fcall	_SPIPut
 12815                           
 12816                           ;drv_mrf_miwi_24j40.c: 98: SPIPut(value);
 12817  1ED0  082C               	movf	PHYSetLongRAMAddr@value,w
 12818  1ED1  3189  21C9         	fcall	_SPIPut
 12819                           
 12820                           ;drv_mrf_miwi_24j40.c: 99: LATBbits.LATB3 = 1;
 12821  1ED3  0022               	movlb	2	; select bank2
 12822  1ED4  158D               	bsf	13,3	;volatile
 12823                           
 12824                           ;drv_mrf_miwi_24j40.c: 100: INTCONbits.IOCIE = tmpRFIE;
 12825  1ED5  0020               	movlb	0	; select bank0
 12826  1ED6  0C2F               	rrf	PHYSetLongRAMAddr@tmpRFIE,w	;volatile
 12827  1ED7  1C03               	skipc
 12828  1ED8  118B               	bcf	11,3	;volatile
 12829  1ED9  1803               	skipnc
 12830  1EDA  158B               	bsf	11,3	;volatile
 12831  1EDB  0008               	return
 12832  1EDC                     __end_of_PHYSetLongRAMAddr:	
 12833  1EDC                     __ptext38:	
 12834 ;; *************** function _PHYGetLongRAMAddr *****************
 12835 ;; Defined at:
 12836 ;;		line 185 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  address         2   10[BANK0 ] unsigned int 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  tmpRFIE         1   15[BANK0 ] volatile unsigned char 
 12841 ;;  toReturn        1   14[BANK0 ] unsigned char 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      unsigned char 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, pclath, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 1F/0
 12848 ;;		On exit  : 1F/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;Total ram usage:        6 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    6
 12858 ;; This function calls:
 12859 ;;		_SPIGet
 12860 ;;		_SPIPut
 12861 ;; This function is called by:
 12862 ;;		_InitMRF24J40
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           
 12867                           ;psect for function _PHYGetLongRAMAddr
 12868  1EDC                     _PHYGetLongRAMAddr:	
 12869                           
 12870                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 12871                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 12872                           
 12873                           ;incstack = 0
 12874                           ; Regs used in _PHYGetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 12875  1EDC  3000               	movlw	0
 12876  1EDD  198B               	btfsc	11,3	;volatile
 12877  1EDE  3001               	movlw	1
 12878  1EDF  00AF               	movwf	PHYGetLongRAMAddr@tmpRFIE	;volatile
 12879                           
 12880                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.IOCIE = 0;
 12881  1EE0  118B               	bcf	11,3	;volatile
 12882                           
 12883                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 12884  1EE1  0022               	movlb	2	; select bank2
 12885  1EE2  118D               	bcf	13,3	;volatile
 12886                           
 12887                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
 12888  1EE3  0020               	movlb	0	; select bank0
 12889  1EE4  082B               	movf	PHYGetLongRAMAddr@address+1,w
 12890  1EE5  00AD               	movwf	??_PHYGetLongRAMAddr+1
 12891  1EE6  082A               	movf	PHYGetLongRAMAddr@address,w
 12892  1EE7  00AC               	movwf	??_PHYGetLongRAMAddr
 12893  1EE8  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 12894  1EE9  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 12895  1EEA  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 12896  1EEB  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 12897  1EEC  36AD               	lsrf	??_PHYGetLongRAMAddr+1,f
 12898  1EED  0CAC               	rrf	??_PHYGetLongRAMAddr,f
 12899  1EEE  082C               	movf	??_PHYGetLongRAMAddr,w
 12900  1EEF  397F               	andlw	127
 12901  1EF0  3880               	iorlw	128
 12902  1EF1  3189  21C9  3198   	fcall	_SPIPut
 12903                           
 12904                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
 12905  1EF4  082A               	movf	PHYGetLongRAMAddr@address,w
 12906  1EF5  00AC               	movwf	??_PHYGetLongRAMAddr
 12907  1EF6  3005               	movlw	5
 12908  1EF7                     u6205:	
 12909  1EF7  35AC               	lslf	??_PHYGetLongRAMAddr,f
 12910  1EF8  0B89               	decfsz	9,f
 12911  1EF9  2EF7               	goto	u6205
 12912  1EFA  082C               	movf	??_PHYGetLongRAMAddr,w
 12913  1EFB  39E0               	andlw	224
 12914  1EFC  3189  21C9  3198   	fcall	_SPIPut
 12915                           
 12916                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
 12917  1EFF  2727               	fcall	_SPIGet
 12918  1F00  0020               	movlb	0	; select bank0
 12919  1F01  00AE               	movwf	PHYGetLongRAMAddr@toReturn
 12920                           
 12921                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 12922  1F02  0022               	movlb	2	; select bank2
 12923  1F03  158D               	bsf	13,3	;volatile
 12924                           
 12925                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.IOCIE = tmpRFIE;
 12926  1F04  0020               	movlb	0	; select bank0
 12927  1F05  0C2F               	rrf	PHYGetLongRAMAddr@tmpRFIE,w	;volatile
 12928  1F06  1C03               	skipc
 12929  1F07  118B               	bcf	11,3	;volatile
 12930  1F08  1803               	skipnc
 12931  1F09  158B               	bsf	11,3	;volatile
 12932                           
 12933                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 12934  1F0A  082E               	movf	PHYGetLongRAMAddr@toReturn,w
 12935  1F0B  0008               	return
 12936  1F0C                     __end_of_PHYGetLongRAMAddr:	
 12937  1F0C                     __ptext37:	
 12938 ;; *************** function _PHYGetShortRAMAddr *****************
 12939 ;; Defined at:
 12940 ;;		line 154 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  address         1    wreg     unsigned char 
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  address         1   10[BANK0 ] unsigned char 
 12945 ;;  tmpRFIE         1   12[BANK0 ] volatile unsigned char 
 12946 ;;  toReturn        1   11[BANK0 ] unsigned char 
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      unsigned char 
 12949 ;; Registers used:
 12950 ;;		wreg, status,2, status,0, pclath, cstack
 12951 ;; Tracked objects:
 12952 ;;		On entry : 1E/0
 12953 ;;		On exit  : 1F/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;Total ram usage:        3 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; Hardware stack levels required when called:    6
 12963 ;; This function calls:
 12964 ;;		_SPIGet
 12965 ;;		_SPIPut
 12966 ;; This function is called by:
 12967 ;;		_InitMRF24J40
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function _PHYGetShortRAMAddr
 12973  1F0C                     _PHYGetShortRAMAddr:	
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in _PHYGetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 12977                           ;PHYGetShortRAMAddr@address stored from wreg
 12978  1F0C  0020               	movlb	0	; select bank0
 12979  1F0D  00AA               	movwf	PHYGetShortRAMAddr@address
 12980                           
 12981                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 12982                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 12983  1F0E  3000               	movlw	0
 12984  1F0F  198B               	btfsc	11,3	;volatile
 12985  1F10  3001               	movlw	1
 12986  1F11  00AC               	movwf	PHYGetShortRAMAddr@tmpRFIE	;volatile
 12987                           
 12988                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.IOCIE = 0;
 12989  1F12  118B               	bcf	11,3	;volatile
 12990                           
 12991                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 12992  1F13  0022               	movlb	2	; select bank2
 12993  1F14  118D               	bcf	13,3	;volatile
 12994                           
 12995                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
 12996  1F15  0020               	movlb	0	; select bank0
 12997  1F16  082A               	movf	PHYGetShortRAMAddr@address,w
 12998  1F17  3189  21C9  3198   	fcall	_SPIPut
 12999                           
 13000                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
 13001  1F1A  2727               	fcall	_SPIGet
 13002  1F1B  0020               	movlb	0	; select bank0
 13003  1F1C  00AB               	movwf	PHYGetShortRAMAddr@toReturn
 13004                           
 13005                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 13006  1F1D  0022               	movlb	2	; select bank2
 13007  1F1E  158D               	bsf	13,3	;volatile
 13008                           
 13009                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.IOCIE = tmpRFIE;
 13010  1F1F  0020               	movlb	0	; select bank0
 13011  1F20  0C2C               	rrf	PHYGetShortRAMAddr@tmpRFIE,w	;volatile
 13012  1F21  1C03               	skipc
 13013  1F22  118B               	bcf	11,3	;volatile
 13014  1F23  1803               	skipnc
 13015  1F24  158B               	bsf	11,3	;volatile
 13016                           
 13017                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 13018  1F25  082B               	movf	PHYGetShortRAMAddr@toReturn,w
 13019  1F26  0008               	return
 13020  1F27                     __end_of_PHYGetShortRAMAddr:	
 13021  1F27                     __ptext39:	
 13022 ;; *************** function _SPIGet *****************
 13023 ;; Defined at:
 13024 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;		None
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;		None
 13029 ;; Return value:  Size  Location     Type
 13030 ;;                  1    wreg      unsigned char 
 13031 ;; Registers used:
 13032 ;;		wreg, status,2, status,0, pclath, cstack
 13033 ;; Tracked objects:
 13034 ;;		On entry : 1F/0
 13035 ;;		On exit  : 1F/4
 13036 ;;		Unchanged: 0/0
 13037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13042 ;;Total ram usage:        0 bytes
 13043 ;; Hardware stack levels used:    1
 13044 ;; Hardware stack levels required when called:    5
 13045 ;; This function calls:
 13046 ;;		_SPIPut
 13047 ;; This function is called by:
 13048 ;;		_PHYGetShortRAMAddr
 13049 ;;		_PHYGetLongRAMAddr
 13050 ;;		_EEPROM_Read
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054                           
 13055                           ;psect for function _SPIGet
 13056  1F27                     _SPIGet:	
 13057                           
 13058                           ;spi.c: 115: SPIPut(0x00);
 13059                           
 13060                           ;incstack = 0
 13061                           ; Regs used in _SPIGet: [wreg+status,2+status,0+pclath+cstack]
 13062  1F27  3000               	movlw	0
 13063  1F28  3189  21C9         	fcall	_SPIPut
 13064                           
 13065                           ;spi.c: 116: return SSP1BUF;
 13066  1F2A  0024               	movlb	4	; select bank4
 13067  1F2B  0811               	movf	17,w	;volatile
 13068  1F2C  0008               	return
 13069  1F2D                     __end_of_SPIGet:	
 13070  1F2D                     __ptext19:	
 13071 ;; *************** function _MiApp_StartConnection *****************
 13072 ;; Defined at:
 13073 ;;		line 2160 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  Mode            1    wreg     unsigned char 
 13076 ;;  ScanDuration    1   19[BANK0 ] unsigned char 
 13077 ;;  ChannelMap      4   20[BANK0 ] unsigned long 
 13078 ;; Auto vars:     Size  Location     Type
 13079 ;;  Mode            1   24[BANK0 ] unsigned char 
 13080 ;;  tmp             2   25[BANK0 ] unsigned int 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  1    wreg      unsigned char 
 13083 ;; Registers used:
 13084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13085 ;; Tracked objects:
 13086 ;;		On entry : 1F/0
 13087 ;;		On exit  : 1F/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13090 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;Total ram usage:        8 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:    7
 13097 ;; This function calls:
 13098 ;;		_MiMAC_SetAltAddress
 13099 ;;		_MiWi_TickGet
 13100 ;; This function is called by:
 13101 ;;		_Initialize_Demo
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           
 13106                           ;psect for function _MiApp_StartConnection
 13107  1F2D                     _MiApp_StartConnection:	
 13108                           
 13109                           ;incstack = 0
 13110                           ; Regs used in _MiApp_StartConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13111                           ;MiApp_StartConnection@Mode stored from wreg
 13112  1F2D  00B8               	movwf	MiApp_StartConnection@Mode
 13113                           
 13114                           ; Switch size 1, requested type "speed"
 13115                           ; Number of cases is 3, Range of values is 0 to 2
 13116                           ; switch strategies available:
 13117                           ; Name         Instructions Cycles
 13118                           ; simple_byte           10     6 (average)
 13119                           ; direct_byte           12     6 (fixed)
 13120                           ; jumptable            260     6 (fixed)
 13121                           ;	Chosen strategy is simple_byte
 13122                           
 13123                           ;miwi_p2p.c: 2162: switch(Mode)
 13124  1F2E  3A00               	xorlw	0	; case 0
 13125  1F2F  1903               	skipnz
 13126  1F30  2F38               	goto	l487
 13127  1F31  3A01               	xorlw	1	; case 1
 13128  1F32  1903               	skipnz
 13129  1F33  2F49               	goto	l488
 13130  1F34  3A03               	xorlw	3	; case 2
 13131  1F35  1903               	skipnz
 13132  1F36  2F49               	goto	l488
 13133  1F37  2F49               	goto	l488
 13134  1F38                     l487:	
 13135                           ;miwi_p2p.c: 2163: {
 13136                           ;miwi_p2p.c: 2164: case 0x00:
 13137                           
 13138                           
 13139                           ;miwi_p2p.c: 2170: myPANID.Val = 0x1234;
 13140  1F38  3034               	movlw	52
 13141  1F39  0021               	movlb	1	; select bank1
 13142  1F3A  00E0               	movwf	_myPANID^(0+128)
 13143  1F3B  3012               	movlw	18
 13144  1F3C  00E1               	movwf	(_myPANID^(0+128)+1)
 13145                           
 13146                           ;miwi_p2p.c: 2172: {
 13147                           ;miwi_p2p.c: 2173: uint16_t tmp = 0xFFFF;
 13148  1F3D  30FF               	movlw	255
 13149  1F3E  0020               	movlb	0	; select bank0
 13150  1F3F  00B9               	movwf	MiApp_StartConnection@tmp
 13151  1F40  00BA               	movwf	MiApp_StartConnection@tmp+1
 13152                           
 13153                           ;miwi_p2p.c: 2174: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
 13154  1F41  30E0               	movlw	(low (_myPANID| 0))& (0+255)
 13155  1F42  00AD               	movwf	MiMAC_SetAltAddress@PANID
 13156  1F43  3039               	movlw	(low (MiApp_StartConnection@tmp| 0))& (0+255)
 13157  1F44  274A  3198         	fcall	_MiMAC_SetAltAddress
 13158                           
 13159                           ;miwi_p2p.c: 2175: }
 13160                           ;miwi_p2p.c: 2180: tick1 = MiWi_TickGet();
 13161  1F46  22A5  3198         	fcall	_MiWi_TickGet
 13162                           
 13163                           ;miwi_p2p.c: 2181: tick4 = MiWi_TickGet();
 13164  1F48  2AA5               	ljmp	l7697
 13165  1F49                     l488:	
 13166  1F49  0008               	return
 13167  1F4A                     __end_of_MiApp_StartConnection:	
 13168  1F4A                     __ptext35:	
 13169 ;; *************** function _MiMAC_SetAltAddress *****************
 13170 ;; Defined at:
 13171 ;;		line 1421 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;  Address         1    wreg     PTR unsigned char 
 13174 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 13175 ;;  PANID           1   13[BANK0 ] PTR unsigned char 
 13176 ;;		 -> myPANID(2), MAC_PANID(2), 
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;  Address         1   14[BANK0 ] PTR unsigned char 
 13179 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  1    wreg      unsigned char 
 13182 ;; Registers used:
 13183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13184 ;; Tracked objects:
 13185 ;;		On entry : 1F/0
 13186 ;;		On exit  : 1F/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13189 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;Total ram usage:        2 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:    6
 13196 ;; This function calls:
 13197 ;;		_PHYSetShortRAMAddr
 13198 ;; This function is called by:
 13199 ;;		_MiMAC_SendPacket
 13200 ;;		_P2PTasks
 13201 ;;		_MiApp_ProtocolInit
 13202 ;;		_MiApp_StartConnection
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _MiMAC_SetAltAddress
 13208  1F4A                     _MiMAC_SetAltAddress:	
 13209                           
 13210                           ;incstack = 0
 13211                           ; Regs used in _MiMAC_SetAltAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13212                           ;MiMAC_SetAltAddress@Address stored from wreg
 13213  1F4A  00AE               	movwf	MiMAC_SetAltAddress@Address
 13214                           
 13215                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 13216  1F4B  0086               	movwf	6
 13217  1F4C  0187               	clrf	7
 13218  1F4D  0801               	movf	1,w
 13219  1F4E  00E1               	movwf	_myNetworkAddress
 13220                           
 13221                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 13222  1F4F  082E               	movf	MiMAC_SetAltAddress@Address,w
 13223  1F50  0086               	movwf	6
 13224  1F51  3F41               	moviw [1]fsr1
 13225  1F52  00E2               	movwf	_myNetworkAddress+1
 13226                           
 13227                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 13228  1F53  082D               	movf	MiMAC_SetAltAddress@PANID,w
 13229  1F54  0086               	movwf	6
 13230  1F55  0801               	movf	1,w
 13231  1F56  00DF               	movwf	_MAC_PANID
 13232                           
 13233                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 13234  1F57  082D               	movf	MiMAC_SetAltAddress@PANID,w
 13235  1F58  0086               	movwf	6
 13236  1F59  3F41               	moviw [1]fsr1
 13237  1F5A  00E0               	movwf	_MAC_PANID+1
 13238                           
 13239                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 13240  1F5B  0861               	movf	_myNetworkAddress,w
 13241  1F5C  00AA               	movwf	PHYSetShortRAMAddr@value
 13242  1F5D  3007               	movlw	7
 13243  1F5E  2482  3198         	fcall	_PHYSetShortRAMAddr
 13244                           
 13245                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 13246  1F60  0862               	movf	_myNetworkAddress+1,w
 13247  1F61  00AA               	movwf	PHYSetShortRAMAddr@value
 13248  1F62  3009               	movlw	9
 13249  1F63  2482  3198         	fcall	_PHYSetShortRAMAddr
 13250                           
 13251                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 13252  1F65  085F               	movf	_MAC_PANID,w
 13253  1F66  00AA               	movwf	PHYSetShortRAMAddr@value
 13254  1F67  3003               	movlw	3
 13255  1F68  2482  3198         	fcall	_PHYSetShortRAMAddr
 13256                           
 13257                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 13258  1F6A  0860               	movf	_MAC_PANID+1,w
 13259  1F6B  00AA               	movwf	PHYSetShortRAMAddr@value
 13260  1F6C  3005               	movlw	5
 13261  1F6D  2C82               	ljmp	_PHYSetShortRAMAddr
 13262  1F6E                     __end_of_MiMAC_SetAltAddress:	
 13263  1F6E                     __ptext7:	
 13264 ;; *************** function _Run_Demo *****************
 13265 ;; Defined at:
 13266 ;;		line 245 in file "../src/task.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;		None
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;		None
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      void 
 13273 ;; Registers used:
 13274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13275 ;; Tracked objects:
 13276 ;;		On entry : 1C/1
 13277 ;;		On exit  : 1C/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;Total ram usage:        0 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:   14
 13287 ;; This function calls:
 13288 ;;		_run_p2p_demo
 13289 ;; This function is called by:
 13290 ;;		_main
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           
 13295                           ;psect for function _Run_Demo
 13296  1F6E                     _Run_Demo:	
 13297                           
 13298                           ;task.c: 249: run_p2p_demo();
 13299                           
 13300                           ;incstack = 0
 13301                           ; Regs used in _Run_Demo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13302  1F6E  3188  2803         	ljmp	l9857
 13303  1F70                     __end_of_Run_Demo:	
 13304  1F70                     __ptext2:	
 13305 ;; *************** function _SYSTEM_Initialize *****************
 13306 ;; Defined at:
 13307 ;;		line 67 in file "../src/system_config/pic18exp_pic16f1947_24j40/system.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;		None
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;		None
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  1    wreg      void 
 13314 ;; Registers used:
 13315 ;;		wreg, status,2, status,0, pclath, cstack
 13316 ;; Tracked objects:
 13317 ;;		On entry : B1F/0
 13318 ;;		On exit  : 1F/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;Total ram usage:        0 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    8
 13328 ;; This function calls:
 13329 ;;		_LCD_Initialize
 13330 ;; This function is called by:
 13331 ;;		_main
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _SYSTEM_Initialize
 13337  1F70                     _SYSTEM_Initialize:	
 13338                           
 13339                           ;system.c: 71: OSCCON = 0x70;
 13340                           
 13341                           ;incstack = 0
 13342                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13343  1F70  3070               	movlw	112
 13344  1F71  0021               	movlb	1	; select bank1
 13345  1F72  0099               	movwf	25	;volatile
 13346                           
 13347                           ;system.c: 81: ANSELA = 0;
 13348  1F73  0023               	movlb	3	; select bank3
 13349  1F74  018C               	clrf	12	;volatile
 13350                           
 13351                           ;system.c: 84: TRISA = 0xFF;
 13352  1F75  30FF               	movlw	255
 13353  1F76  0021               	movlb	1	; select bank1
 13354  1F77  008C               	movwf	12	;volatile
 13355                           
 13356                           ;system.c: 85: TRISB = 0xFF;
 13357  1F78  008D               	movwf	13	;volatile
 13358                           
 13359                           ;system.c: 86: TRISC = 0xFF;
 13360  1F79  008E               	movwf	14	;volatile
 13361                           
 13362                           ;system.c: 87: TRISD = 0x00;
 13363  1F7A  018F               	clrf	15	;volatile
 13364                           
 13365                           ;system.c: 89: LATA = 0;
 13366  1F7B  0022               	movlb	2	; select bank2
 13367  1F7C  018C               	clrf	12	;volatile
 13368                           
 13369                           ;system.c: 90: LATB = 0;
 13370  1F7D  018D               	clrf	13	;volatile
 13371                           
 13372                           ;system.c: 91: LATC = 0;
 13373  1F7E  018E               	clrf	14	;volatile
 13374                           
 13375                           ;system.c: 92: LATD = 0;
 13376  1F7F  018F               	clrf	15	;volatile
 13377                           
 13378                           ;system.c: 95: TRISBbits.TRISB0 = 1;
 13379  1F80  0021               	movlb	1	; select bank1
 13380  1F81  140D               	bsf	13,0	;volatile
 13381                           
 13382                           ;system.c: 96: TRISAbits.TRISA5 = 1;
 13383  1F82  168C               	bsf	12,5	;volatile
 13384                           
 13385                           ;system.c: 97: TRISDbits.TRISD7 = 0;
 13386  1F83  138F               	bcf	15,7	;volatile
 13387                           
 13388                           ;system.c: 98: TRISDbits.TRISD6 = 0;
 13389  1F84  130F               	bcf	15,6	;volatile
 13390                           
 13391                           ;system.c: 101: TRISBbits.TRISB3 = 0;
 13392  1F85  118D               	bcf	13,3	;volatile
 13393                           
 13394                           ;system.c: 102: LATBbits.LATB3 = 1;
 13395  1F86  0022               	movlb	2	; select bank2
 13396  1F87  158D               	bsf	13,3	;volatile
 13397                           
 13398                           ;system.c: 103: TRISBbits.TRISB5 = 0;
 13399  1F88  0021               	movlb	1	; select bank1
 13400  1F89  128D               	bcf	13,5	;volatile
 13401                           
 13402                           ;system.c: 104: LATBbits.LATB5 = 1;
 13403  1F8A  0022               	movlb	2	; select bank2
 13404  1F8B  168D               	bsf	13,5	;volatile
 13405                           
 13406                           ;system.c: 105: TRISBbits.TRISB1 = 1;
 13407  1F8C  0021               	movlb	1	; select bank1
 13408  1F8D  148D               	bsf	13,1	;volatile
 13409                           
 13410                           ;system.c: 112: TRISCbits.TRISC4 = 1;
 13411  1F8E  160E               	bsf	14,4	;volatile
 13412                           
 13413                           ;system.c: 113: TRISCbits.TRISC5 = 0;
 13414  1F8F  128E               	bcf	14,5	;volatile
 13415                           
 13416                           ;system.c: 114: TRISCbits.TRISC3 = 0;
 13417  1F90  118E               	bcf	14,3	;volatile
 13418                           
 13419                           ;system.c: 117: IOCBN = 0;
 13420  1F91  0027               	movlb	7	; select bank7
 13421  1F92  0195               	clrf	21	;volatile
 13422                           
 13423                           ;system.c: 118: IOCBP = 0;
 13424  1F93  0194               	clrf	20	;volatile
 13425                           
 13426                           ;system.c: 124: SSP1STAT = 0xC0;
 13427  1F94  30C0               	movlw	192
 13428  1F95  0024               	movlb	4	; select bank4
 13429  1F96  0094               	movwf	20	;volatile
 13430                           
 13431                           ;system.c: 125: SSP1CON1 = 0x21;
 13432  1F97  3021               	movlw	33
 13433  1F98  0095               	movwf	21	;volatile
 13434                           
 13435                           ;system.c: 148: TRISBbits.TRISB4 = 0;
 13436  1F99  0021               	movlb	1	; select bank1
 13437  1F9A  120D               	bcf	13,4	;volatile
 13438                           
 13439                           ;system.c: 149: LATBbits.LATB4 = 1;
 13440  1F9B  0022               	movlb	2	; select bank2
 13441  1F9C  160D               	bsf	13,4	;volatile
 13442                           
 13443                           ;system.c: 154: IOCBNbits.IOCBN1 = 1;
 13444  1F9D  0027               	movlb	7	; select bank7
 13445  1F9E  1495               	bsf	21,1	;volatile
 13446                           
 13447                           ;system.c: 200: TRISAbits.TRISA3 = 0;
 13448  1F9F  0021               	movlb	1	; select bank1
 13449  1FA0  118C               	bcf	12,3	;volatile
 13450                           
 13451                           ;system.c: 201: LATAbits.LATA3 = 1;
 13452  1FA1  0022               	movlb	2	; select bank2
 13453  1FA2  158C               	bsf	12,3	;volatile
 13454                           
 13455                           ;system.c: 207: TRISCbits.TRISC2 = 0;
 13456  1FA3  0021               	movlb	1	; select bank1
 13457  1FA4  110E               	bcf	14,2	;volatile
 13458                           
 13459                           ;system.c: 208: LATCbits.LATC2 = 1;
 13460  1FA5  0022               	movlb	2	; select bank2
 13461  1FA6  150E               	bsf	14,2	;volatile
 13462                           
 13463                           ;system.c: 215: INTCONbits.GIE = 1;
 13464  1FA7  178B               	bsf	11,7	;volatile
 13465                           
 13466                           ;system.c: 216: INTCONbits.PEIE = 1;
 13467  1FA8  170B               	bsf	11,6	;volatile
 13468                           
 13469                           ;system.c: 221: IOCBFbits.IOCBF1 = 0;
 13470  1FA9  0027               	movlb	7	; select bank7
 13471  1FAA  1096               	bcf	22,1	;volatile
 13472                           
 13473                           ;system.c: 224: INTCONbits.IOCIE = 1;
 13474  1FAB  158B               	bsf	11,3	;volatile
 13475                           
 13476                           ;system.c: 227: LCD_Initialize();
 13477  1FAC  3191  2954         	ljmp	l9799
 13478  1FAE                     __end_of_SYSTEM_Initialize:	
 13479  1FAE                     __ptext1:	
 13480 ;; *************** function _freezer_feature *****************
 13481 ;; Defined at:
 13482 ;;		line 69 in file "../src/task.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;		None
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  tick2           4    8[BANK1 ] struct _MIWI_TICK
 13487 ;;  tick1           4    4[BANK1 ] struct _MIWI_TICK
 13488 ;;  switch_val      1   12[BANK1 ] unsigned char 
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  1    wreg      unsigned char 
 13491 ;; Registers used:
 13492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13493 ;; Tracked objects:
 13494 ;;		On entry : 1F/0
 13495 ;;		On exit  : 1E/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13502 ;;Total ram usage:       13 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; Hardware stack levels required when called:    9
 13505 ;; This function calls:
 13506 ;;		_ButtonPressed
 13507 ;;		_DELAY_ms
 13508 ;;		_LCDDisplay
 13509 ;;		_MiWi_TickGet
 13510 ;; This function is called by:
 13511 ;;		_main
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           
 13516                           ;psect for function _freezer_feature
 13517  1FAE                     _freezer_feature:	
 13518                           
 13519                           ;task.c: 71: MIWI_TICK tick1, tick2;
 13520                           ;task.c: 72: uint8_t switch_val;
 13521                           ;task.c: 73: tick1 = MiWi_TickGet();
 13522                           
 13523                           ;incstack = 0
 13524                           ; Regs used in _freezer_feature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13525  1FAE  22A5  3198         	fcall	_MiWi_TickGet
 13526  1FB0  082C               	movf	?_MiWi_TickGet+3,w
 13527  1FB1  0021               	movlb	1	; select bank1
 13528  1FB2  00A7               	movwf	(freezer_feature@tick1+3)^(0+128)
 13529  1FB3  0020               	movlb	0	; select bank0
 13530  1FB4  082B               	movf	?_MiWi_TickGet+2,w
 13531  1FB5  0021               	movlb	1	; select bank1
 13532  1FB6  00A6               	movwf	(freezer_feature@tick1+2)^(0+128)
 13533  1FB7  0020               	movlb	0	; select bank0
 13534  1FB8  082A               	movf	?_MiWi_TickGet+1,w
 13535  1FB9  0021               	movlb	1	; select bank1
 13536  1FBA  00A5               	movwf	(freezer_feature@tick1+1)^(0+128)
 13537  1FBB  0020               	movlb	0	; select bank0
 13538  1FBC  0829               	movf	?_MiWi_TickGet,w
 13539  1FBD  0021               	movlb	1	; select bank1
 13540  1FBE  00A4               	movwf	freezer_feature@tick1^(0+128)
 13541                           
 13542                           ;task.c: 75: {
 13543                           ;task.c: 76: tick2 = MiWi_TickGet();
 13544                           
 13545                           ;task.c: 74: while(1)
 13546  1FBF  22A5  3198         	fcall	_MiWi_TickGet
 13547  1FC1  082C               	movf	?_MiWi_TickGet+3,w
 13548  1FC2  0021               	movlb	1	; select bank1
 13549  1FC3  00AB               	movwf	(freezer_feature@tick2+3)^(0+128)
 13550  1FC4  0020               	movlb	0	; select bank0
 13551  1FC5  082B               	movf	?_MiWi_TickGet+2,w
 13552  1FC6  0021               	movlb	1	; select bank1
 13553  1FC7  00AA               	movwf	(freezer_feature@tick2+2)^(0+128)
 13554  1FC8  0020               	movlb	0	; select bank0
 13555  1FC9  082A               	movf	?_MiWi_TickGet+1,w
 13556  1FCA  0021               	movlb	1	; select bank1
 13557  1FCB  00A9               	movwf	(freezer_feature@tick2+1)^(0+128)
 13558  1FCC  0020               	movlb	0	; select bank0
 13559  1FCD  0829               	movf	?_MiWi_TickGet,w
 13560  1FCE  0021               	movlb	1	; select bank1
 13561  1FCF  00A8               	movwf	freezer_feature@tick2^(0+128)
 13562                           
 13563                           ;task.c: 77: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
 13564  1FD0  0824               	movf	freezer_feature@tick1^(0+128),w
 13565  1FD1  0228               	subwf	freezer_feature@tick2^(0+128),w
 13566  1FD2  00A0               	movwf	??_freezer_feature^(0+128)
 13567  1FD3  0825               	movf	(freezer_feature@tick1+1)^(0+128),w
 13568  1FD4  3B29               	subwfb	(freezer_feature@tick2+1)^(0+128),w
 13569  1FD5  00A1               	movwf	(??_freezer_feature^(0+128)+1)
 13570  1FD6  0826               	movf	(freezer_feature@tick1+2)^(0+128),w
 13571  1FD7  3B2A               	subwfb	(freezer_feature@tick2+2)^(0+128),w
 13572  1FD8  00A2               	movwf	(??_freezer_feature^(0+128)+2)
 13573  1FD9  0827               	movf	(freezer_feature@tick1+3)^(0+128),w
 13574  1FDA  3B2B               	subwfb	(freezer_feature@tick2+3)^(0+128),w
 13575  1FDB  00A3               	movwf	(??_freezer_feature^(0+128)+3)
 13576  1FDC  0823               	movf	(??_freezer_feature^(0+128)+3),w
 13577  1FDD  1D03               	btfss	3,2
 13578  1FDE  0008               	return
 13579  1FDF  30D1               	movlw	209
 13580  1FE0  0220               	subwf	??_freezer_feature^(0+128),w
 13581  1FE1  3012               	movlw	18
 13582  1FE2  3B21               	subwfb	(??_freezer_feature^(0+128)+1),w
 13583  1FE3  3013               	movlw	19
 13584  1FE4  3B22               	subwfb	(??_freezer_feature^(0+128)+2),w
 13585  1FE5  1803               	btfsc	3,0
 13586  1FE6  0008               	return
 13587                           
 13588                           ;task.c: 79: switch_val = ButtonPressed ();
 13589  1FE7  318F  2770  3198   	fcall	_ButtonPressed
 13590  1FEA  0021               	movlb	1	; select bank1
 13591  1FEB  00AC               	movwf	freezer_feature@switch_val^(0+128)
 13592                           
 13593                           ;task.c: 80: if(switch_val == 2)
 13594  1FEC  3A02               	xorlw	2
 13595  1FED  1D03               	btfss	3,2
 13596  1FEE  3400               	retlw	0
 13597                           
 13598                           ;task.c: 81: {
 13599                           ;task.c: 82: LCDDisplay((char *)"Restoring Network !!", 0, 0);
 13600  1FEF  30EB               	movlw	low (STR_45| (0+32768))
 13601  1FF0  0020               	movlb	0	; select bank0
 13602  1FF1  00D7               	movwf	LCDDisplay@text
 13603  1FF2  30A3               	movlw	high (STR_45| (0+32768))
 13604  1FF3  00D8               	movwf	LCDDisplay@text+1
 13605  1FF4  01D9               	clrf	LCDDisplay@value
 13606  1FF5  01DA               	clrf	LCDDisplay@delay
 13607  1FF6  3193  237A  3198   	fcall	_LCDDisplay
 13608                           
 13609                           ;task.c: 83: DELAY_ms(1000);
 13610  1FF9  30E8               	movlw	232
 13611  1FFA  00B5               	movwf	DELAY_ms@ms
 13612  1FFB  3003               	movlw	3
 13613  1FFC  00B6               	movwf	DELAY_ms@ms+1
 13614  1FFD  3193  239D         	fcall	_DELAY_ms
 13615                           
 13616                           ;task.c: 84: return 1;
 13617  1FFF  3401               	retlw	1
 13618  2000                     __end_of_freezer_feature:	
 13619                           ;task.c: 86: else
 13620                           ;task.c: 87: {
 13621                           ;task.c: 88: return 0;
 13622                           
 13623                           
 13624                           	psect	text16
 13625  2751                     __ptext16:	
 13626 ;; *************** function _DemoOutput_UnicastFail *****************
 13627 ;; Defined at:
 13628 ;;		line 294 in file "../src/demo_ouput.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;		None
 13631 ;; Auto vars:     Size  Location     Type
 13632 ;;		None
 13633 ;; Return value:  Size  Location     Type
 13634 ;;                  1    wreg      void 
 13635 ;; Registers used:
 13636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13637 ;; Tracked objects:
 13638 ;;		On entry : 1E/1
 13639 ;;		On exit  : 1F/0
 13640 ;;		Unchanged: 0/0
 13641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13646 ;;Total ram usage:        0 bytes
 13647 ;; Hardware stack levels used:    1
 13648 ;; Hardware stack levels required when called:    9
 13649 ;; This function calls:
 13650 ;;		_CONSOLE_PutString
 13651 ;;		_LCDDisplay
 13652 ;; This function is called by:
 13653 ;;		_run_p2p_demo
 13654 ;; This function uses a non-reentrant model
 13655 ;;
 13656                           
 13657                           
 13658                           ;psect for function _DemoOutput_UnicastFail
 13659  2751                     _DemoOutput_UnicastFail:	
 13660                           
 13661                           ;demo_ouput.c: 297: CONSOLE_PutString((char*)"\r\nUnicast Failed\r\n");
 13662                           
 13663                           ;incstack = 0
 13664                           ; Regs used in _DemoOutput_UnicastFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13665  2751  3000               	movlw	low (STR_41| (0+32768))
 13666  2752  0020               	movlb	0	; select bank0
 13667  2753  00AA               	movwf	CONSOLE_PutString@str
 13668  2754  30A4               	movlw	high (STR_41| (0+32768))
 13669  2755  00AB               	movwf	CONSOLE_PutString@str+1
 13670  2756  3193  2341         	fcall	_CONSOLE_PutString
 13671                           
 13672                           ;demo_ouput.c: 299: LCDDisplay((char *)" Unicast Failed", 0, 1);
 13673  2758  307A               	movlw	low (STR_42| (0+32768))
 13674  2759  00D7               	movwf	LCDDisplay@text
 13675  275A  30A4               	movlw	high (STR_42| (0+32768))
 13676  275B  00D8               	movwf	LCDDisplay@text+1
 13677  275C  01D9               	clrf	LCDDisplay@value
 13678  275D  01DA               	clrf	LCDDisplay@delay
 13679  275E  0ADA               	incf	LCDDisplay@delay,f
 13680  275F  3193  2B7A         	ljmp	l9235
 13681  2761                     __end_of_DemoOutput_UnicastFail:	
 13682                           
 13683                           	psect	text20
 13684  1007                     __ptext20:	
 13685 ;; *************** function _MiApp_ProtocolInit *****************
 13686 ;; Defined at:
 13687 ;;		line 1122 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  bNetworkFree    1    wreg     unsigned char 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  bNetworkFree    1   46[BANK0 ] unsigned char 
 13692 ;;  tmp             2   44[BANK0 ] unsigned int 
 13693 ;;  initValue       2   47[BANK0 ] struct .
 13694 ;;  i               1   49[BANK0 ] unsigned char 
 13695 ;; Return value:  Size  Location     Type
 13696 ;;                  1    wreg      unsigned char 
 13697 ;; Registers used:
 13698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13699 ;; Tracked objects:
 13700 ;;		On entry : 1C/1
 13701 ;;		On exit  : 1F/1
 13702 ;;		Unchanged: 0/0
 13703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13707 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;Total ram usage:        7 bytes
 13709 ;; Hardware stack levels used:    1
 13710 ;; Hardware stack levels required when called:    9
 13711 ;; This function calls:
 13712 ;;		_CONSOLE_PrintHex
 13713 ;;		_CONSOLE_PutString
 13714 ;;		_EEPROM_Read
 13715 ;;		_InitSymbolTimer
 13716 ;;		_MiApp_SetChannel
 13717 ;;		_MiMAC_Init
 13718 ;;		_MiMAC_SetAltAddress
 13719 ;;		_NVMInit
 13720 ;;		_NVMRead
 13721 ;;		_NVMWrite
 13722 ;;		___bmul
 13723 ;; This function is called by:
 13724 ;;		_Initialize_Demo
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           
 13729                           ;psect for function _MiApp_ProtocolInit
 13730  1007                     _MiApp_ProtocolInit:	
 13731                           
 13732                           ;incstack = 0
 13733                           ; Regs used in _MiApp_ProtocolInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13734                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 13735  1007  0020               	movlb	0	; select bank0
 13736  1008  00CE               	movwf	MiApp_ProtocolInit@bNetworkFreezer
 13737                           
 13738                           ;miwi_p2p.c: 1131: {
 13739                           ;miwi_p2p.c: 1132: for(i = 0; i < 3; i++)
 13740  1009  01D1               	clrf	MiApp_ProtocolInit@i
 13741  100A                     l9475:	
 13742                           
 13743                           ;miwi_p2p.c: 1133: {
 13744                           ;miwi_p2p.c: 1134: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
 13745  100A  0851               	movf	MiApp_ProtocolInit@i,w
 13746  100B  3EFA               	addlw	250
 13747  100C  00AA               	movwf	EEPROM_Read@addr
 13748  100D  3053               	movlw	(low ((_myLongAddress| (0+256)+7)))& (0+255)
 13749  100E  01AB               	clrf	EEPROM_Read@count
 13750  100F  0AAB               	incf	EEPROM_Read@count,f
 13751  1010  00CB               	movwf	??_MiApp_ProtocolInit
 13752  1011  0851               	movf	MiApp_ProtocolInit@i,w
 13753  1012  024B               	subwf	??_MiApp_ProtocolInit,w
 13754  1013  3198  205B  3190   	fcall	_EEPROM_Read
 13755  1016  0020               	movlb	0	; select bank0
 13756  1017  3003               	movlw	3
 13757  1018  0AD1               	incf	MiApp_ProtocolInit@i,f
 13758  1019  0251               	subwf	MiApp_ProtocolInit@i,w
 13759  101A  1C03               	skipc
 13760  101B  280A               	goto	l9475
 13761                           
 13762                           ;miwi_p2p.c: 1137: if( 8 > 7 )
 13763  101C  30FF               	movlw	255
 13764  101D  0022               	movlb	2	; select bank2
 13765  101E  00D0               	movwf	(_myLongAddress^(0+256)+4)
 13766                           
 13767                           ;miwi_p2p.c: 1138: {
 13768                           ;miwi_p2p.c: 1139: myLongAddress[3] = 0xFE;
 13769  101F  30FE               	movlw	254
 13770  1020  00CF               	movwf	(_myLongAddress^(0+256)+3)
 13771                           
 13772                           ;miwi_p2p.c: 1140: }
 13773                           ;miwi_p2p.c: 1141: for(i = 0; i < 3; i++)
 13774  1021  0020               	movlb	0	; select bank0
 13775  1022  01D1               	clrf	MiApp_ProtocolInit@i
 13776  1023                     l9489:	
 13777                           
 13778                           ;miwi_p2p.c: 1142: {
 13779                           ;miwi_p2p.c: 1143: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
 13780  1023  0851               	movf	MiApp_ProtocolInit@i,w
 13781  1024  3EFD               	addlw	253
 13782  1025  00AA               	movwf	EEPROM_Read@addr
 13783  1026  304E               	movlw	(low ((_myLongAddress| (0+256)+2)))& (0+255)
 13784  1027  01AB               	clrf	EEPROM_Read@count
 13785  1028  0AAB               	incf	EEPROM_Read@count,f
 13786  1029  00CB               	movwf	??_MiApp_ProtocolInit
 13787  102A  0851               	movf	MiApp_ProtocolInit@i,w
 13788  102B  024B               	subwf	??_MiApp_ProtocolInit,w
 13789  102C  3198  205B  3190   	fcall	_EEPROM_Read
 13790  102F  0020               	movlb	0	; select bank0
 13791  1030  3003               	movlw	3
 13792  1031  0AD1               	incf	MiApp_ProtocolInit@i,f
 13793  1032  0251               	subwf	MiApp_ProtocolInit@i,w
 13794  1033  1C03               	skipc
 13795  1034  2823               	goto	l9489
 13796                           
 13797                           ;miwi_p2p.c: 1151: }
 13798                           ;miwi_p2p.c: 1152: }
 13799                           ;miwi_p2p.c: 1158: NVMInit();
 13800  1035  3186  26CC  3190   	fcall	_NVMInit
 13801                           
 13802                           ;miwi_p2p.c: 1162: P2PStatus.Val = 0;
 13803  1038  0021               	movlb	1	; select bank1
 13804  1039  01D7               	clrf	_P2PStatus^(0+128)	;volatile
 13805                           
 13806                           ;miwi_p2p.c: 1164: if (!bNetworkFreezer)
 13807  103A  0020               	movlb	0	; select bank0
 13808  103B  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 13809  103C  1D03               	btfss	3,2
 13810  103D  286C               	goto	l9525
 13811                           
 13812                           ;miwi_p2p.c: 1165: {
 13813                           ;miwi_p2p.c: 1166: for(i = 0; i < 5; i++)
 13814  103E  01D1               	clrf	MiApp_ProtocolInit@i
 13815  103F                     l9519:	
 13816                           
 13817                           ;miwi_p2p.c: 1167: {
 13818                           ;miwi_p2p.c: 1168: ConnectionTable[i].status.Val = 0;
 13819  103F  300A               	movlw	10
 13820  1040  00A9               	movwf	___bmul@multiplicand
 13821  1041  0851               	movf	MiApp_ProtocolInit@i,w
 13822  1042  2731  3190         	fcall	___bmul
 13823  1044  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 13824  1045  0086               	movwf	6
 13825  1046  3001               	movlw	1	; select bank3/4
 13826  1047  0087               	movwf	7
 13827  1048  300A               	movlw	10
 13828  1049  0181               	clrf	1
 13829                           
 13830                           ;miwi_p2p.c: 1169: ConnectionTable[i].Address[0] = 0x00;
 13831  104A  00A9               	movwf	___bmul@multiplicand
 13832  104B  0851               	movf	MiApp_ProtocolInit@i,w
 13833  104C  2731  3190         	fcall	___bmul
 13834  104E  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 13835  104F  0086               	movwf	6
 13836  1050  3001               	movlw	1	; select bank3/4
 13837  1051  0087               	movwf	7
 13838  1052  300A               	movlw	10
 13839  1053  0181               	clrf	1
 13840                           
 13841                           ;miwi_p2p.c: 1170: ConnectionTable[i].Address[1] = 0x00;
 13842  1054  00A9               	movwf	___bmul@multiplicand
 13843  1055  0851               	movf	MiApp_ProtocolInit@i,w
 13844  1056  2731  3190         	fcall	___bmul
 13845  1058  3EA1               	addlw	(low ((_ConnectionTable| (0+256)+1)))& (0+255)
 13846  1059  0086               	movwf	6
 13847  105A  3001               	movlw	1	; select bank3/4
 13848  105B  0087               	movwf	7
 13849  105C  300A               	movlw	10
 13850  105D  0181               	clrf	1
 13851                           
 13852                           ;miwi_p2p.c: 1171: ConnectionTable[i].Address[2] = 0x00;
 13853  105E  00A9               	movwf	___bmul@multiplicand
 13854  105F  0851               	movf	MiApp_ProtocolInit@i,w
 13855  1060  2731  3190         	fcall	___bmul
 13856  1062  3EA2               	addlw	(low ((_ConnectionTable| (0+256)+2)))& (0+255)
 13857  1063  0086               	movwf	6
 13858  1064  3001               	movlw	1	; select bank3/4
 13859  1065  0087               	movwf	7
 13860  1066  3005               	movlw	5
 13861  1067  0181               	clrf	1
 13862  1068  0AD1               	incf	MiApp_ProtocolInit@i,f
 13863  1069  0251               	subwf	MiApp_ProtocolInit@i,w
 13864  106A  1C03               	skipc
 13865  106B  283F               	goto	l9519
 13866  106C                     l9525:	
 13867                           
 13868                           ;miwi_p2p.c: 1176: }
 13869                           ;miwi_p2p.c: 1177: }
 13870                           ;miwi_p2p.c: 1179: InitSymbolTimer();
 13871  106C  27ED  3190         	fcall	_InitSymbolTimer
 13872                           
 13873                           ;miwi_p2p.c: 1181: TxData = 0;
 13874  106E  0021               	movlb	1	; select bank1
 13875  106F  01DA               	clrf	_TxData^(0+128)
 13876                           
 13877                           ;miwi_p2p.c: 1198: if( bNetworkFreezer )
 13878  1070  0020               	movlb	0	; select bank0
 13879  1071  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 13880  1072  1903               	btfsc	3,2
 13881  1073  28E5               	goto	l9547
 13882                           
 13883                           ;miwi_p2p.c: 1199: {
 13884                           ;miwi_p2p.c: 1200: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 13885  1074  30E8               	movlw	low _currentChannel
 13886  1075  00A9               	movwf	NVMRead@dest
 13887  1076  3000               	movlw	high _currentChannel
 13888  1077  00AA               	movwf	NVMRead@dest+1
 13889  1078  0021               	movlb	1	; select bank1
 13890  1079  0865               	movf	(_nvmCurrentChannel+1)^(0+128),w
 13891  107A  0020               	movlb	0	; select bank0
 13892  107B  00AC               	movwf	NVMRead@addr+1
 13893  107C  0021               	movlb	1	; select bank1
 13894  107D  0864               	movf	_nvmCurrentChannel^(0+128),w
 13895  107E  0020               	movlb	0	; select bank0
 13896  107F  00AB               	movwf	NVMRead@addr
 13897  1080  01AD               	clrf	NVMRead@count
 13898  1081  0AAD               	incf	NVMRead@count,f
 13899  1082  01AE               	clrf	NVMRead@count+1
 13900  1083  2793  3190         	fcall	_NVMRead
 13901                           
 13902                           ;miwi_p2p.c: 1201: if( currentChannel >= 32 )
 13903  1085  3020               	movlw	32
 13904  1086  0021               	movlb	1	; select bank1
 13905  1087  0268               	subwf	_currentChannel^(0+128),w
 13906  1088  1803               	btfsc	3,0
 13907  1089  0008               	return
 13908                           
 13909                           ;miwi_p2p.c: 1204: }
 13910                           ;miwi_p2p.c: 1207: NVMRead( (uint8_t *)myPANID.v, nvmMyPANID, 2);
 13911  108A  30E0               	movlw	low _myPANID
 13912  108B  0020               	movlb	0	; select bank0
 13913  108C  00A9               	movwf	NVMRead@dest
 13914  108D  3000               	movlw	high _myPANID
 13915  108E  00AA               	movwf	NVMRead@dest+1
 13916  108F  0021               	movlb	1	; select bank1
 13917  1090  0867               	movf	(_nvmMyPANID+1)^(0+128),w
 13918  1091  0020               	movlb	0	; select bank0
 13919  1092  00AC               	movwf	NVMRead@addr+1
 13920  1093  0021               	movlb	1	; select bank1
 13921  1094  0866               	movf	_nvmMyPANID^(0+128),w
 13922  1095  0020               	movlb	0	; select bank0
 13923  1096  00AB               	movwf	NVMRead@addr
 13924  1097  3002               	movlw	2
 13925  1098  00AD               	movwf	NVMRead@count
 13926  1099  01AE               	clrf	NVMRead@count+1
 13927  109A  2793  3190         	fcall	_NVMRead
 13928                           
 13929                           ;miwi_p2p.c: 1209: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
 13930  109C  30EB               	movlw	low _ConnMode
 13931  109D  00A9               	movwf	NVMRead@dest
 13932  109E  3000               	movlw	high _ConnMode
 13933  109F  00AA               	movwf	NVMRead@dest+1
 13934  10A0  0021               	movlb	1	; select bank1
 13935  10A1  0863               	movf	(_nvmConnMode+1)^(0+128),w
 13936  10A2  0020               	movlb	0	; select bank0
 13937  10A3  00AC               	movwf	NVMRead@addr+1
 13938  10A4  0021               	movlb	1	; select bank1
 13939  10A5  0862               	movf	_nvmConnMode^(0+128),w
 13940  10A6  0020               	movlb	0	; select bank0
 13941  10A7  00AB               	movwf	NVMRead@addr
 13942  10A8  01AD               	clrf	NVMRead@count
 13943  10A9  0AAD               	incf	NVMRead@count,f
 13944  10AA  01AE               	clrf	NVMRead@count+1
 13945  10AB  2793  3190         	fcall	_NVMRead
 13946                           
 13947                           ;miwi_p2p.c: 1210: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
 13948  10AD  30A0               	movlw	low _ConnectionTable
 13949  10AE  00A9               	movwf	NVMRead@dest
 13950  10AF  3001               	movlw	high _ConnectionTable
 13951  10B0  00AA               	movwf	NVMRead@dest+1
 13952  10B1  0864               	movf	_nvmConnectionTable+1,w
 13953  10B2  00AC               	movwf	NVMRead@addr+1
 13954  10B3  0863               	movf	_nvmConnectionTable,w
 13955  10B4  00AB               	movwf	NVMRead@addr
 13956  10B5  3032               	movlw	50
 13957  10B6  00AD               	movwf	NVMRead@count
 13958  10B7  01AE               	clrf	NVMRead@count+1
 13959  10B8  2793  3190         	fcall	_NVMRead
 13960                           
 13961                           ;miwi_p2p.c: 1216: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
 13962  10BA  3065               	movlw	low _conn_size
 13963  10BB  00A9               	movwf	NVMRead@dest
 13964  10BC  3000               	movlw	high _conn_size
 13965  10BD  00AA               	movwf	NVMRead@dest+1
 13966  10BE  0022               	movlb	2	; select bank2
 13967  10BF  0839               	movf	(_nvmEdc+1)^(0+256),w
 13968  10C0  0020               	movlb	0	; select bank0
 13969  10C1  00AC               	movwf	NVMRead@addr+1
 13970  10C2  0022               	movlb	2	; select bank2
 13971  10C3  0838               	movf	_nvmEdc^(0+256),w
 13972  10C4  0020               	movlb	0	; select bank0
 13973  10C5  00AB               	movwf	NVMRead@addr
 13974  10C6  01AD               	clrf	NVMRead@count
 13975  10C7  0AAD               	incf	NVMRead@count,f
 13976  10C8  01AE               	clrf	NVMRead@count+1
 13977  10C9  2793  3190         	fcall	_NVMRead
 13978                           
 13979                           ;miwi_p2p.c: 1220: CONSOLE_PutString((char*)"\r\nPANID:");
 13980  10CB  30C3               	movlw	low (STR_1| (0+32768))
 13981  10CC  00AA               	movwf	CONSOLE_PutString@str
 13982  10CD  30A4               	movlw	high (STR_1| (0+32768))
 13983  10CE  00AB               	movwf	CONSOLE_PutString@str+1
 13984  10CF  2341  3190         	fcall	_CONSOLE_PutString
 13985                           
 13986                           ;miwi_p2p.c: 1221: CONSOLE_PrintHex(myPANID.v[1]);
 13987  10D1  0021               	movlb	1	; select bank1
 13988  10D2  0861               	movf	(_myPANID^(0+128)+1),w
 13989  10D3  2355  3190         	fcall	_CONSOLE_PrintHex
 13990                           
 13991                           ;miwi_p2p.c: 1222: CONSOLE_PrintHex( myPANID.v[0]);
 13992  10D5  0021               	movlb	1	; select bank1
 13993  10D6  0860               	movf	_myPANID^(0+128),w
 13994  10D7  2355  3190         	fcall	_CONSOLE_PrintHex
 13995                           
 13996                           ;miwi_p2p.c: 1224: CONSOLE_PutString((char*)" Channel:");
 13997  10D9  30B0               	movlw	low (STR_2| (0+32768))
 13998  10DA  0020               	movlb	0	; select bank0
 13999  10DB  00AA               	movwf	CONSOLE_PutString@str
 14000  10DC  30A4               	movlw	high (STR_2| (0+32768))
 14001  10DD  00AB               	movwf	CONSOLE_PutString@str+1
 14002  10DE  2341  3190         	fcall	_CONSOLE_PutString
 14003                           
 14004                           ;miwi_p2p.c: 1225: CONSOLE_PrintHex(currentChannel);
 14005  10E0  0021               	movlb	1	; select bank1
 14006  10E1  0868               	movf	_currentChannel^(0+128),w
 14007  10E2  2355  3190         	fcall	_CONSOLE_PrintHex
 14008                           
 14009                           ;miwi_p2p.c: 1227: }
 14010  10E4  292A               	goto	l464
 14011  10E5                     l9547:	
 14012                           
 14013                           ;miwi_p2p.c: 1228: else
 14014                           ;miwi_p2p.c: 1229: {
 14015                           ;miwi_p2p.c: 1231: myPANID.Val = 0x1234;
 14016  10E5  3034               	movlw	52
 14017  10E6  0021               	movlb	1	; select bank1
 14018  10E7  00E0               	movwf	_myPANID^(0+128)
 14019  10E8  3012               	movlw	18
 14020  10E9  00E1               	movwf	(_myPANID^(0+128)+1)
 14021                           
 14022                           ;miwi_p2p.c: 1232: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
 14023  10EA  30E0               	movlw	low _myPANID
 14024  10EB  0020               	movlb	0	; select bank0
 14025  10EC  00B4               	movwf	NVMWrite@source
 14026  10ED  3000               	movlw	high _myPANID
 14027  10EE  00B5               	movwf	NVMWrite@source+1
 14028  10EF  0021               	movlb	1	; select bank1
 14029  10F0  0867               	movf	(_nvmMyPANID+1)^(0+128),w
 14030  10F1  0020               	movlb	0	; select bank0
 14031  10F2  00B7               	movwf	NVMWrite@addr+1
 14032  10F3  0021               	movlb	1	; select bank1
 14033  10F4  0866               	movf	_nvmMyPANID^(0+128),w
 14034  10F5  0020               	movlb	0	; select bank0
 14035  10F6  00B6               	movwf	NVMWrite@addr
 14036  10F7  3002               	movlw	2
 14037  10F8  00B8               	movwf	NVMWrite@count
 14038  10F9  01B9               	clrf	NVMWrite@count+1
 14039  10FA  2755  3190         	fcall	_NVMWrite
 14040                           
 14041                           ;miwi_p2p.c: 1234: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
 14042  10FC  30E8               	movlw	low _currentChannel
 14043  10FD  00B4               	movwf	NVMWrite@source
 14044  10FE  3000               	movlw	high _currentChannel
 14045  10FF  00B5               	movwf	NVMWrite@source+1
 14046  1100  0021               	movlb	1	; select bank1
 14047  1101  0865               	movf	(_nvmCurrentChannel+1)^(0+128),w
 14048  1102  0020               	movlb	0	; select bank0
 14049  1103  00B7               	movwf	NVMWrite@addr+1
 14050  1104  0021               	movlb	1	; select bank1
 14051  1105  0864               	movf	_nvmCurrentChannel^(0+128),w
 14052  1106  0020               	movlb	0	; select bank0
 14053  1107  00B6               	movwf	NVMWrite@addr
 14054  1108  01B8               	clrf	NVMWrite@count
 14055  1109  0AB8               	incf	NVMWrite@count,f
 14056  110A  01B9               	clrf	NVMWrite@count+1
 14057  110B  2755  3190         	fcall	_NVMWrite
 14058                           
 14059                           ;miwi_p2p.c: 1235: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 14060  110D  30EB               	movlw	low _ConnMode
 14061  110E  00B4               	movwf	NVMWrite@source
 14062  110F  3000               	movlw	high _ConnMode
 14063  1110  00B5               	movwf	NVMWrite@source+1
 14064  1111  0021               	movlb	1	; select bank1
 14065  1112  0863               	movf	(_nvmConnMode+1)^(0+128),w
 14066  1113  0020               	movlb	0	; select bank0
 14067  1114  00B7               	movwf	NVMWrite@addr+1
 14068  1115  0021               	movlb	1	; select bank1
 14069  1116  0862               	movf	_nvmConnMode^(0+128),w
 14070  1117  0020               	movlb	0	; select bank0
 14071  1118  00B6               	movwf	NVMWrite@addr
 14072  1119  01B8               	clrf	NVMWrite@count
 14073  111A  0AB8               	incf	NVMWrite@count,f
 14074  111B  01B9               	clrf	NVMWrite@count+1
 14075  111C  2755  3190         	fcall	_NVMWrite
 14076                           
 14077                           ;miwi_p2p.c: 1236: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
 14078  111E  30A0               	movlw	low _ConnectionTable
 14079  111F  00B4               	movwf	NVMWrite@source
 14080  1120  3001               	movlw	high _ConnectionTable
 14081  1121  00B5               	movwf	NVMWrite@source+1
 14082  1122  0864               	movf	_nvmConnectionTable+1,w
 14083  1123  00B7               	movwf	NVMWrite@addr+1
 14084  1124  0863               	movf	_nvmConnectionTable,w
 14085  1125  00B6               	movwf	NVMWrite@addr
 14086  1126  3032               	movlw	50
 14087  1127  00B8               	movwf	NVMWrite@count
 14088  1128  01B9               	clrf	NVMWrite@count+1
 14089  1129  2755               	fcall	_NVMWrite
 14090  112A                     l464:	
 14091                           
 14092                           ;miwi_p2p.c: 1237: }
 14093                           ;miwi_p2p.c: 1244: initValue.PAddress = myLongAddress;
 14094  112A  304C               	movlw	(low (_myLongAddress| (0+256)))& (0+255)
 14095  112B  0020               	movlb	0	; select bank0
 14096  112C  00D0               	movwf	low ((MiApp_ProtocolInit@initValue| 0+1))
 14097                           
 14098                           ;miwi_p2p.c: 1245: initValue.actionFlags.bits.CCAEnable = 1;
 14099  112D  14CF               	bsf	MiApp_ProtocolInit@initValue,1
 14100                           
 14101                           ;miwi_p2p.c: 1246: initValue.actionFlags.bits.PAddrLength = 8;
 14102  112E  084F               	movf	MiApp_ProtocolInit@initValue,w
 14103  112F  3987               	andlw	-121
 14104  1130  3840               	iorlw	64
 14105  1131  00CF               	movwf	MiApp_ProtocolInit@initValue
 14106                           
 14107                           ;miwi_p2p.c: 1247: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 14108  1132  084E               	movf	MiApp_ProtocolInit@bNetworkFreezer,w
 14109  1133  3901               	andlw	1
 14110  1134  114F               	bcf	MiApp_ProtocolInit@initValue,2
 14111  1135  1D03               	skipz
 14112  1136  154F               	bsf	MiApp_ProtocolInit@initValue,2
 14113                           
 14114                           ;miwi_p2p.c: 1248: initValue.actionFlags.bits.RepeaterMode = 0;
 14115  1137  104F               	bcf	MiApp_ProtocolInit@initValue,0
 14116                           
 14117                           ;miwi_p2p.c: 1250: MiMAC_Init(initValue);
 14118  1138  0850               	movf	MiApp_ProtocolInit@initValue+1,w
 14119  1139  00C7               	movwf	MiMAC_Init@initValue+1
 14120  113A  084F               	movf	MiApp_ProtocolInit@initValue,w
 14121  113B  00C6               	movwf	MiMAC_Init@initValue
 14122  113C  3187  27CF  3190   	fcall	_MiMAC_Init
 14123                           
 14124                           ;miwi_p2p.c: 1253: {
 14125                           ;miwi_p2p.c: 1254: uint16_t tmp = 0xFFFF;
 14126  113F  30FF               	movlw	255
 14127  1140  00CC               	movwf	MiApp_ProtocolInit@tmp
 14128  1141  00CD               	movwf	MiApp_ProtocolInit@tmp+1
 14129                           
 14130                           ;miwi_p2p.c: 1255: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
 14131  1142  30E0               	movlw	(low (_myPANID| 0))& (0+255)
 14132  1143  00AD               	movwf	MiMAC_SetAltAddress@PANID
 14133  1144  304C               	movlw	(low (MiApp_ProtocolInit@tmp| 0))& (0+255)
 14134  1145  319F  274A  3190   	fcall	_MiMAC_SetAltAddress
 14135                           
 14136                           ;miwi_p2p.c: 1256: }
 14137                           ;miwi_p2p.c: 1259: MiApp_SetChannel(currentChannel);
 14138  1148  0021               	movlb	1	; select bank1
 14139  1149  0868               	movf	_currentChannel^(0+128),w
 14140  114A  319B  233C         	fcall	_MiApp_SetChannel
 14141                           
 14142                           ;miwi_p2p.c: 1270: P2PCapacityInfo = 0;
 14143  114C  0021               	movlb	1	; select bank1
 14144  114D  01D6               	clrf	_P2PCapacityInfo^(0+128)
 14145                           
 14146                           ;miwi_p2p.c: 1272: P2PCapacityInfo |= 0x01;
 14147  114E  1456               	bsf	_P2PCapacityInfo^(0+128),0
 14148                           
 14149                           ;miwi_p2p.c: 1277: P2PCapacityInfo |= (ConnMode << 4);
 14150  114F  0E6B               	swapf	_ConnMode^(0+128),w
 14151  1150  39F0               	andlw	240
 14152  1151  04D6               	iorwf	_P2PCapacityInfo^(0+128),f
 14153                           
 14154                           ;miwi_p2p.c: 1279: INTCONbits.IOCIE = 1;
 14155  1152  158B               	bsf	11,3	;volatile
 14156  1153  0008               	return
 14157  1154                     __end_of_MiApp_ProtocolInit:	
 14158  1154                     __ptext3:	
 14159 ;; *************** function _LCD_Initialize *****************
 14160 ;; Defined at:
 14161 ;;		line 179 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;		None
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;		None
 14166 ;; Return value:  Size  Location     Type
 14167 ;;                  1    wreg      void 
 14168 ;; Registers used:
 14169 ;;		wreg, status,2, status,0, pclath, cstack
 14170 ;; Tracked objects:
 14171 ;;		On entry : B1F/7
 14172 ;;		On exit  : 1F/0
 14173 ;;		Unchanged: 0/0
 14174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;Total ram usage:        0 bytes
 14180 ;; Hardware stack levels used:    1
 14181 ;; Hardware stack levels required when called:    7
 14182 ;; This function calls:
 14183 ;;		_DELAY_ms
 14184 ;;		_LCDInitPortA
 14185 ;;		_LCDInitPortB
 14186 ;;		_LCDInitSPI
 14187 ;;		_LCDInitWrite
 14188 ;;		_LCDWritePortA
 14189 ;; This function is called by:
 14190 ;;		_SYSTEM_Initialize
 14191 ;; This function uses a non-reentrant model
 14192 ;;
 14193                           
 14194                           
 14195                           ;psect for function _LCD_Initialize
 14196  1154                     _LCD_Initialize:	
 14197  1154                     l9799:	
 14198                           ;incstack = 0
 14199                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14200                           
 14201                           
 14202                           ;lcd.c: 182: (TRISAbits.TRISA2) = 0;
 14203  1154  0021               	movlb	1	; select bank1
 14204  1155  110C               	bcf	12,2	;volatile
 14205                           
 14206                           ;lcd.c: 183: (LATAbits.LATA2) = 1;
 14207  1156  0022               	movlb	2	; select bank2
 14208  1157  150C               	bsf	12,2	;volatile
 14209                           
 14210                           ;lcd.c: 184: DELAY_ms(10);
 14211  1158  300A               	movlw	10
 14212  1159  0020               	movlb	0	; select bank0
 14213  115A  00B5               	movwf	DELAY_ms@ms
 14214  115B  01B6               	clrf	DELAY_ms@ms+1
 14215  115C  239D  3190         	fcall	_DELAY_ms
 14216                           
 14217                           ;lcd.c: 186: (TRISFbits.TRISF6) = 0;
 14218  115E  0026               	movlb	6	; select bank6
 14219  115F  130C               	bcf	12,6	;volatile
 14220                           
 14221                           ;lcd.c: 187: (LATFbits.LATF6) = 0;
 14222  1160  0027               	movlb	7	; select bank7
 14223  1161  130C               	bcf	12,6	;volatile
 14224                           
 14225                           ;lcd.c: 188: DELAY_ms(10);
 14226  1162  300A               	movlw	10
 14227  1163  0020               	movlb	0	; select bank0
 14228  1164  00B5               	movwf	DELAY_ms@ms
 14229  1165  01B6               	clrf	DELAY_ms@ms+1
 14230  1166  239D  3190         	fcall	_DELAY_ms
 14231                           
 14232                           ;lcd.c: 189: (LATFbits.LATF6) = 1;
 14233  1168  0027               	movlb	7	; select bank7
 14234  1169  170C               	bsf	12,6	;volatile
 14235                           
 14236                           ;lcd.c: 192: LCDInitSPI();
 14237  116A  27FA               	fcall	_LCDInitSPI
 14238                           
 14239                           ;lcd.c: 195: LCDInitPortA();
 14240  116B  31A7  2789  3190   	fcall	_LCDInitPortA
 14241                           
 14242                           ;lcd.c: 198: LCDInitPortB();
 14243  116E  31A7  27A4  3190   	fcall	_LCDInitPortB
 14244                           
 14245                           ;lcd.c: 200: LCDWritePortA(0);
 14246  1171  3000               	movlw	0
 14247  1172  3189  21AF  3190   	fcall	_LCDWritePortA
 14248                           
 14249                           ;lcd.c: 203: DELAY_ms(10);
 14250  1175  300A               	movlw	10
 14251  1176  00B5               	movwf	DELAY_ms@ms
 14252  1177  01B6               	clrf	DELAY_ms@ms+1
 14253  1178  239D  3190         	fcall	_DELAY_ms
 14254                           
 14255                           ;lcd.c: 204: LCDInitWrite(0x3C);
 14256  117A  303C               	movlw	60
 14257  117B  2414  3190         	fcall	_LCDInitWrite
 14258                           
 14259                           ;lcd.c: 206: DELAY_ms(10);
 14260  117D  300A               	movlw	10
 14261  117E  00B5               	movwf	DELAY_ms@ms
 14262  117F  01B6               	clrf	DELAY_ms@ms+1
 14263  1180  239D  3190         	fcall	_DELAY_ms
 14264                           
 14265                           ;lcd.c: 207: LCDInitWrite(0x0C);
 14266  1182  300C               	movlw	12
 14267  1183  2414  3190         	fcall	_LCDInitWrite
 14268                           
 14269                           ;lcd.c: 209: DELAY_ms(10);
 14270  1185  300A               	movlw	10
 14271  1186  00B5               	movwf	DELAY_ms@ms
 14272  1187  01B6               	clrf	DELAY_ms@ms+1
 14273  1188  239D  3190         	fcall	_DELAY_ms
 14274                           
 14275                           ;lcd.c: 210: LCDInitWrite(0x01);
 14276  118A  3001               	movlw	1
 14277  118B  2414  3190         	fcall	_LCDInitWrite
 14278                           
 14279                           ;lcd.c: 212: DELAY_ms(10);
 14280  118D  300A               	movlw	10
 14281  118E  00B5               	movwf	DELAY_ms@ms
 14282  118F  01B6               	clrf	DELAY_ms@ms+1
 14283  1190  239D  3190         	fcall	_DELAY_ms
 14284                           
 14285                           ;lcd.c: 213: LCDInitWrite(0x0C);
 14286  1192  300C               	movlw	12
 14287  1193  2C14               	ljmp	_LCDInitWrite
 14288  1194                     __end_of_LCD_Initialize:	
 14289  1194                     __ptext59:	
 14290 ;; *************** function _DemoOutput_Greeting *****************
 14291 ;; Defined at:
 14292 ;;		line 63 in file "../src/demo_ouput.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      void 
 14299 ;; Registers used:
 14300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14301 ;; Tracked objects:
 14302 ;;		On entry : 1F/0
 14303 ;;		On exit  : 1F/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:    9
 14313 ;; This function calls:
 14314 ;;		_CONSOLE_PutString
 14315 ;;		_LCDDisplay
 14316 ;; This function is called by:
 14317 ;;		_main
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           
 14322                           ;psect for function _DemoOutput_Greeting
 14323  1194                     _DemoOutput_Greeting:	
 14324                           
 14325                           ;demo_ouput.c: 80: LCDDisplay((char *)"Simple P2P Demo MRF24J40 Node ", 0, 1);
 14326                           
 14327                           ;incstack = 0
 14328                           ; Regs used in _DemoOutput_Greeting: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14329  1194  30F8               	movlw	low (STR_18| (0+32768))
 14330  1195  00D7               	movwf	LCDDisplay@text
 14331  1196  30A2               	movlw	high (STR_18| (0+32768))
 14332  1197  00D8               	movwf	LCDDisplay@text+1
 14333  1198  01D9               	clrf	LCDDisplay@value
 14334  1199  01DA               	clrf	LCDDisplay@delay
 14335  119A  0ADA               	incf	LCDDisplay@delay,f
 14336  119B  237A  3190         	fcall	_LCDDisplay
 14337                           
 14338                           ;demo_ouput.c: 120: CONSOLE_PutString((char*)"\r\nStarting Node 1 of Simple Demo for MiW
      +                          i(TM) P2P Stack ...");
 14339  119D  301C               	movlw	low (STR_19| (0+32768))
 14340  119E  00AA               	movwf	CONSOLE_PutString@str
 14341  119F  30A2               	movlw	high (STR_19| (0+32768))
 14342  11A0  00AB               	movwf	CONSOLE_PutString@str+1
 14343  11A1  2341  3190         	fcall	_CONSOLE_PutString
 14344                           
 14345                           ;demo_ouput.c: 170: CONSOLE_PutString((char*)"\r\n     RF Transceiver: MRF24J40");
 14346  11A3  30D8               	movlw	low (STR_20| (0+32768))
 14347  11A4  00AA               	movwf	CONSOLE_PutString@str
 14348  11A5  30A2               	movlw	high (STR_20| (0+32768))
 14349  11A6  00AB               	movwf	CONSOLE_PutString@str+1
 14350  11A7  2341  3190         	fcall	_CONSOLE_PutString
 14351                           
 14352                           ;demo_ouput.c: 178: CONSOLE_PutString((char*)"\r\n   Demo Instruction:");
 14353  11A9  30BE               	movlw	low (STR_21| (0+32768))
 14354  11AA  00AA               	movwf	CONSOLE_PutString@str
 14355  11AB  30A3               	movlw	high (STR_21| (0+32768))
 14356  11AC  00AB               	movwf	CONSOLE_PutString@str+1
 14357  11AD  2341  3190         	fcall	_CONSOLE_PutString
 14358                           
 14359                           ;demo_ouput.c: 179: CONSOLE_PutString((char*)"\r\n                     Power on the boar
      +                          d until LED 1 lights up");
 14360  11AF  3062               	movlw	low (STR_22| (0+32768))
 14361  11B0  00AA               	movwf	CONSOLE_PutString@str
 14362  11B1  30A1               	movlw	high (STR_22| (0+32768))
 14363  11B2  00AB               	movwf	CONSOLE_PutString@str+1
 14364  11B3  2341  3190         	fcall	_CONSOLE_PutString
 14365                           
 14366                           ;demo_ouput.c: 180: CONSOLE_PutString((char*)"\r\n                     to indicate conne
      +                          cting with peer. Push");
 14367  11B5  30A2               	movlw	low (STR_23| (0+32768))
 14368  11B6  00AA               	movwf	CONSOLE_PutString@str
 14369  11B7  30A1               	movlw	high (STR_23| (0+32768))
 14370  11B8  00AB               	movwf	CONSOLE_PutString@str+1
 14371  11B9  2341  3190         	fcall	_CONSOLE_PutString
 14372                           
 14373                           ;demo_ouput.c: 181: CONSOLE_PutString((char*)"\r\n                     Button 1 to broad
      +                          cast message. Push Button");
 14374  11BB  3020               	movlw	low (STR_24| (0+32768))
 14375  11BC  00AA               	movwf	CONSOLE_PutString@str
 14376  11BD  30A1               	movlw	high (STR_24| (0+32768))
 14377  11BE  00AB               	movwf	CONSOLE_PutString@str+1
 14378  11BF  2341  3190         	fcall	_CONSOLE_PutString
 14379                           
 14380                           ;demo_ouput.c: 182: CONSOLE_PutString((char*)"\r\n                     2 to unicast encr
      +                          ypted message. LED 2 will");
 14381  11C1  30DE               	movlw	low (STR_25| (0+32768))
 14382  11C2  00AA               	movwf	CONSOLE_PutString@str
 14383  11C3  30A0               	movlw	high (STR_25| (0+32768))
 14384  11C4  00AB               	movwf	CONSOLE_PutString@str+1
 14385  11C5  2341  3190         	fcall	_CONSOLE_PutString
 14386                           
 14387                           ;demo_ouput.c: 183: CONSOLE_PutString((char*)"\r\n                     be toggled upon r
      +                          eceiving messages. ");
 14388  11C7  30E0               	movlw	low (STR_26| (0+32768))
 14389  11C8  00AA               	movwf	CONSOLE_PutString@str
 14390  11C9  30A1               	movlw	high (STR_26| (0+32768))
 14391  11CA  00AB               	movwf	CONSOLE_PutString@str+1
 14392  11CB  2341  3190         	fcall	_CONSOLE_PutString
 14393                           
 14394                           ;demo_ouput.c: 184: CONSOLE_PutString((char*)"\r\n\r\n");
 14395  11CD  30D3               	movlw	low (STR_27| (0+32768))
 14396  11CE  00AA               	movwf	CONSOLE_PutString@str
 14397  11CF  30A4               	movlw	high (STR_27| (0+32768))
 14398  11D0  00AB               	movwf	CONSOLE_PutString@str+1
 14399  11D1  2B41               	ljmp	l9197
 14400  11D2                     __end_of_DemoOutput_Greeting:	
 14401  11D2                     __ptext12:	
 14402 ;; *************** function _DemoOutput_HandleMessage *****************
 14403 ;; Defined at:
 14404 ;;		line 238 in file "../src/demo_ouput.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;		None
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;  i               1   17[BANK0 ] unsigned char 
 14409 ;; Return value:  Size  Location     Type
 14410 ;;                  1    wreg      void 
 14411 ;; Registers used:
 14412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14413 ;; Tracked objects:
 14414 ;;		On entry : 1F/1
 14415 ;;		On exit  : 1F/0
 14416 ;;		Unchanged: 0/0
 14417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;Total ram usage:        3 bytes
 14423 ;; Hardware stack levels used:    1
 14424 ;; Hardware stack levels required when called:    6
 14425 ;; This function calls:
 14426 ;;		_CONSOLE_PrintHex
 14427 ;;		_CONSOLE_Put
 14428 ;;		_CONSOLE_PutString
 14429 ;; This function is called by:
 14430 ;;		_Process_RxMessage
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           
 14435                           ;psect for function _DemoOutput_HandleMessage
 14436  11D2                     _DemoOutput_HandleMessage:	
 14437                           
 14438                           ;demo_ouput.c: 240: uint8_t i;
 14439                           ;demo_ouput.c: 242: if( rxMessage.flags.bits.secEn )
 14440                           
 14441                           ;incstack = 0
 14442                           ; Regs used in _DemoOutput_HandleMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14443  11D2  0022               	movlb	2	; select bank2
 14444  11D3  1DA0               	btfss	_rxMessage^(0+256),3
 14445  11D4  29DC               	goto	l9261
 14446                           
 14447                           ;demo_ouput.c: 243: {
 14448                           ;demo_ouput.c: 244: CONSOLE_PutString((char *)"Secured ");
 14449  11D5  30BA               	movlw	low (STR_34| (0+32768))
 14450  11D6  0020               	movlb	0	; select bank0
 14451  11D7  00AA               	movwf	CONSOLE_PutString@str
 14452  11D8  30A4               	movlw	high (STR_34| (0+32768))
 14453  11D9  00AB               	movwf	CONSOLE_PutString@str+1
 14454  11DA  2341  3190         	fcall	_CONSOLE_PutString
 14455  11DC                     l9261:	
 14456                           
 14457                           ;demo_ouput.c: 245: }
 14458                           ;demo_ouput.c: 247: if( rxMessage.flags.bits.broadcast )
 14459  11DC  0022               	movlb	2	; select bank2
 14460  11DD  0820               	movf	_rxMessage^(0+256),w
 14461  11DE  3903               	andlw	3
 14462  11DF  1903               	skipnz
 14463  11E0  29E6               	goto	l9265
 14464                           
 14465                           ;demo_ouput.c: 248: {
 14466                           ;demo_ouput.c: 249: CONSOLE_PutString((char *)"Broadcast Packet with RSSI ");
 14467  11E1  3070               	movlw	low (STR_35| (0+32768))
 14468  11E2  0020               	movlb	0	; select bank0
 14469  11E3  00AA               	movwf	CONSOLE_PutString@str
 14470  11E4  30A3               	movlw	high (STR_35| (0+32768))
 14471  11E5  29EA               	goto	L1
 14472  11E6                     l9265:	
 14473                           ;demo_ouput.c: 250: }
 14474                           
 14475                           
 14476                           ;demo_ouput.c: 251: else
 14477                           ;demo_ouput.c: 252: {
 14478                           ;demo_ouput.c: 253: CONSOLE_PutString((char *)"Unicast Packet with RSSI ");
 14479  11E6  308C               	movlw	low (STR_36| (0+32768))
 14480  11E7  0020               	movlb	0	; select bank0
 14481  11E8  00AA               	movwf	CONSOLE_PutString@str
 14482  11E9  30A3               	movlw	high (STR_36| (0+32768))
 14483  11EA                     L1:	
 14484  11EA  00AB               	movwf	CONSOLE_PutString@str+1
 14485  11EB  2341  3190         	fcall	_CONSOLE_PutString
 14486                           
 14487                           ;demo_ouput.c: 254: }
 14488                           ;demo_ouput.c: 255: CONSOLE_PrintHex(rxMessage.PacketRSSI);
 14489  11ED  0022               	movlb	2	; select bank2
 14490  11EE  0828               	movf	(_rxMessage^(0+256)+8),w
 14491  11EF  2355  3190         	fcall	_CONSOLE_PrintHex
 14492                           
 14493                           ;demo_ouput.c: 256: if( rxMessage.flags.bits.srcPrsnt )
 14494  11F1  0022               	movlb	2	; select bank2
 14495  11F2  1F20               	btfss	_rxMessage^(0+256),6
 14496  11F3  2A29               	goto	l9289
 14497                           
 14498                           ;demo_ouput.c: 257: {
 14499                           ;demo_ouput.c: 258: CONSOLE_PutString((char *)" from ");
 14500  11F4  30CC               	movlw	low (STR_37| (0+32768))
 14501  11F5  0020               	movlb	0	; select bank0
 14502  11F6  00AA               	movwf	CONSOLE_PutString@str
 14503  11F7  30A4               	movlw	high (STR_37| (0+32768))
 14504  11F8  00AB               	movwf	CONSOLE_PutString@str+1
 14505  11F9  2341  3190         	fcall	_CONSOLE_PutString
 14506                           
 14507                           ;demo_ouput.c: 259: if( rxMessage.flags.bits.altSrcAddr )
 14508  11FB  0022               	movlb	2	; select bank2
 14509  11FC  1FA0               	btfss	_rxMessage^(0+256),7
 14510  11FD  2A0F               	goto	l9277
 14511                           
 14512                           ;demo_ouput.c: 260: {
 14513                           ;demo_ouput.c: 261: CONSOLE_PrintHex( rxMessage.SourceAddress[1]);
 14514  11FE  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14515  11FF  0086               	movwf	6
 14516  1200  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14517  1201  0087               	movwf	7
 14518  1202  3141               	addfsr 1,1
 14519  1203  0801               	movf	1,w
 14520  1204  2355  3190         	fcall	_CONSOLE_PrintHex
 14521                           
 14522                           ;demo_ouput.c: 262: CONSOLE_PrintHex( rxMessage.SourceAddress[0]);
 14523  1206  0022               	movlb	2	; select bank2
 14524  1207  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 14525  1208  0086               	movwf	6
 14526  1209  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14527  120A  0087               	movwf	7
 14528  120B  0801               	movf	1,w
 14529  120C  2355  3190         	fcall	_CONSOLE_PrintHex
 14530                           
 14531                           ;demo_ouput.c: 263: }
 14532  120E  2A29               	goto	l9289
 14533  120F                     l9277:	
 14534                           
 14535                           ;demo_ouput.c: 264: else
 14536                           ;demo_ouput.c: 265: {
 14537                           ;demo_ouput.c: 266: for(i = 0; i < 8; i++)
 14538  120F  0020               	movlb	0	; select bank0
 14539  1210  01B1               	clrf	DemoOutput_HandleMessage@i
 14540  1211                     l9283:	
 14541                           
 14542                           ;demo_ouput.c: 267: {
 14543                           ;demo_ouput.c: 268: CONSOLE_PrintHex(rxMessage.SourceAddress[8-1-i]);
 14544  1211  0022               	movlb	2	; select bank2
 14545  1212  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 14546  1213  0020               	movlb	0	; select bank0
 14547  1214  00B0               	movwf	??_DemoOutput_HandleMessage+1
 14548  1215  0831               	movf	DemoOutput_HandleMessage@i,w
 14549  1216  0022               	movlb	2	; select bank2
 14550  1217  0223               	subwf	(low ((_rxMessage| (0+256)+3)))^0,w
 14551  1218  0020               	movlb	0	; select bank0
 14552  1219  00AF               	movwf	??_DemoOutput_HandleMessage
 14553  121A  1C03               	skipc
 14554  121B  03B0               	decf	??_DemoOutput_HandleMessage+1,f
 14555  121C  0086               	movwf	6
 14556  121D  0830               	movf	??_DemoOutput_HandleMessage+1,w
 14557  121E  0087               	movwf	7
 14558  121F  3147               	addfsr 1,7
 14559  1220  0801               	movf	1,w
 14560  1221  2355  3190         	fcall	_CONSOLE_PrintHex
 14561  1223  0020               	movlb	0	; select bank0
 14562  1224  3008               	movlw	8
 14563  1225  0AB1               	incf	DemoOutput_HandleMessage@i,f
 14564  1226  0231               	subwf	DemoOutput_HandleMessage@i,w
 14565  1227  1C03               	skipc
 14566  1228  2A11               	goto	l9283
 14567  1229                     l9289:	
 14568                           
 14569                           ;demo_ouput.c: 269: }
 14570                           ;demo_ouput.c: 270: }
 14571                           ;demo_ouput.c: 271: }
 14572                           ;demo_ouput.c: 272: CONSOLE_PutString((char *)": ");
 14573  1229  30A1               	movlw	low ((STR_5+9)| (0+32768))
 14574  122A  0020               	movlb	0	; select bank0
 14575  122B  00AA               	movwf	CONSOLE_PutString@str
 14576  122C  30A4               	movlw	high ((STR_5+9)| (0+32768))
 14577  122D  00AB               	movwf	CONSOLE_PutString@str+1
 14578  122E  2341  3190         	fcall	_CONSOLE_PutString
 14579                           
 14580                           ;demo_ouput.c: 274: for(i = 0; i < rxMessage.PayloadSize; i++)
 14581  1230  01B1               	clrf	DemoOutput_HandleMessage@i
 14582  1231                     l9297:	
 14583  1231  0022               	movlb	2	; select bank2
 14584  1232  0827               	movf	(_rxMessage^(0+256)+7),w
 14585  1233  0020               	movlb	0	; select bank0
 14586  1234  0231               	subwf	DemoOutput_HandleMessage@i,w
 14587  1235  1803               	btfsc	3,0
 14588  1236  0008               	return
 14589                           
 14590                           ;demo_ouput.c: 275: {
 14591                           ;demo_ouput.c: 276: CONSOLE_Put(rxMessage.Payload[i]);
 14592  1237  0831               	movf	DemoOutput_HandleMessage@i,w
 14593  1238  00AF               	movwf	??_DemoOutput_HandleMessage
 14594  1239  01B0               	clrf	??_DemoOutput_HandleMessage+1
 14595  123A  0022               	movlb	2	; select bank2
 14596  123B  0725               	addwf	(low ((_rxMessage| (0+256)+5)))^0,w
 14597  123C  0086               	movwf	6
 14598  123D  0020               	movlb	0	; select bank0
 14599  123E  0830               	movf	??_DemoOutput_HandleMessage+1,w
 14600  123F  0022               	movlb	2	; select bank2
 14601  1240  3D26               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^0,w
 14602  1241  0087               	movwf	7
 14603  1242  0801               	movf	1,w
 14604  1243  2370  3190         	fcall	_CONSOLE_Put
 14605  1245  0020               	movlb	0	; select bank0
 14606  1246  0AB1               	incf	DemoOutput_HandleMessage@i,f
 14607  1247  2A31               	goto	l9297
 14608  1248                     __end_of_DemoOutput_HandleMessage:	
 14609  1248                     __ptext51:	
 14610 ;; *************** function _DumpConnection *****************
 14611 ;; Defined at:
 14612 ;;		line 2431 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 14613 ;; Parameters:    Size  Location     Type
 14614 ;;  index           1    wreg     unsigned char 
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;  index           1   20[BANK0 ] unsigned char 
 14617 ;;  i               1   22[BANK0 ] unsigned char 
 14618 ;;  j               1   21[BANK0 ] unsigned char 
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  1    wreg      void 
 14621 ;; Registers used:
 14622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14623 ;; Tracked objects:
 14624 ;;		On entry : 1F/0
 14625 ;;		On exit  : 1F/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;Total ram usage:        4 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:    6
 14635 ;; This function calls:
 14636 ;;		_CONSOLE_PrintDec
 14637 ;;		_CONSOLE_PrintHex
 14638 ;;		_CONSOLE_PutString
 14639 ;;		___bmul
 14640 ;; This function is called by:
 14641 ;;		_Initialize_Demo
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           
 14646                           ;psect for function _DumpConnection
 14647  1248                     _DumpConnection:	
 14648                           
 14649                           ;incstack = 0
 14650                           ; Regs used in _DumpConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14651                           ;DumpConnection@index stored from wreg
 14652  1248  00B4               	movwf	DumpConnection@index
 14653                           
 14654                           ;miwi_p2p.c: 2433: uint8_t i, j;
 14655                           ;miwi_p2p.c: 2435: if( index > 5 )
 14656  1249  3006               	movlw	6
 14657  124A  0234               	subwf	DumpConnection@index,w
 14658  124B  1C03               	skipc
 14659  124C  2A7E               	goto	l9697
 14660                           
 14661                           ;miwi_p2p.c: 2436: {
 14662                           ;miwi_p2p.c: 2437: CONSOLE_PutString((char*)"\r\n\r\nMy Address: 0x");
 14663  124D  3013               	movlw	low (STR_3| (0+32768))
 14664  124E  00AA               	movwf	CONSOLE_PutString@str
 14665  124F  30A4               	movlw	high (STR_3| (0+32768))
 14666  1250  00AB               	movwf	CONSOLE_PutString@str+1
 14667  1251  2341  3190         	fcall	_CONSOLE_PutString
 14668                           
 14669                           ;miwi_p2p.c: 2438: for(i = 0; i < 8; i++)
 14670  1253  01B6               	clrf	DumpConnection@i
 14671  1254                     l9683:	
 14672                           
 14673                           ;miwi_p2p.c: 2439: {
 14674                           ;miwi_p2p.c: 2440: CONSOLE_PrintHex(myLongAddress[8-1-i]);
 14675  1254  3053               	movlw	(low ((_myLongAddress| (0+256)+7)))& (0+255)
 14676  1255  00B3               	movwf	??_DumpConnection
 14677  1256  0836               	movf	DumpConnection@i,w
 14678  1257  02B3               	subwf	??_DumpConnection,f
 14679  1258  0833               	movf	??_DumpConnection,w
 14680  1259  0086               	movwf	6
 14681  125A  3001               	movlw	1	; select bank2/3
 14682  125B  0087               	movwf	7
 14683  125C  0801               	movf	1,w
 14684  125D  2355  3190         	fcall	_CONSOLE_PrintHex
 14685  125F  0020               	movlb	0	; select bank0
 14686  1260  3008               	movlw	8
 14687  1261  0AB6               	incf	DumpConnection@i,f
 14688  1262  0236               	subwf	DumpConnection@i,w
 14689  1263  1C03               	skipc
 14690  1264  2A54               	goto	l9683
 14691                           
 14692                           ;miwi_p2p.c: 2441: }
 14693                           ;miwi_p2p.c: 2443: CONSOLE_PutString((char*)"  PANID: 0x");
 14694  1265  30A4               	movlw	low (STR_4| (0+32768))
 14695  1266  00AA               	movwf	CONSOLE_PutString@str
 14696  1267  30A4               	movlw	high (STR_4| (0+32768))
 14697  1268  00AB               	movwf	CONSOLE_PutString@str+1
 14698  1269  2341  3190         	fcall	_CONSOLE_PutString
 14699                           
 14700                           ;miwi_p2p.c: 2444: CONSOLE_PrintHex(myPANID.v[1]);
 14701  126B  0021               	movlb	1	; select bank1
 14702  126C  0861               	movf	(_myPANID^(0+128)+1),w
 14703  126D  2355  3190         	fcall	_CONSOLE_PrintHex
 14704                           
 14705                           ;miwi_p2p.c: 2445: CONSOLE_PrintHex(myPANID.v[0]);
 14706  126F  0021               	movlb	1	; select bank1
 14707  1270  0860               	movf	_myPANID^(0+128),w
 14708  1271  2355  3190         	fcall	_CONSOLE_PrintHex
 14709                           
 14710                           ;miwi_p2p.c: 2447: CONSOLE_PutString((char*)"  Channel: ");
 14711  1273  3098               	movlw	low (STR_5| (0+32768))
 14712  1274  0020               	movlb	0	; select bank0
 14713  1275  00AA               	movwf	CONSOLE_PutString@str
 14714  1276  30A4               	movlw	high (STR_5| (0+32768))
 14715  1277  00AB               	movwf	CONSOLE_PutString@str+1
 14716  1278  2341               	fcall	_CONSOLE_PutString
 14717                           
 14718                           ;miwi_p2p.c: 2448: CONSOLE_PrintDec(currentChannel);
 14719  1279  0021               	movlb	1	; select bank1
 14720  127A  0868               	movf	_currentChannel^(0+128),w
 14721  127B  3199  2169  3190   	fcall	_CONSOLE_PrintDec
 14722  127E                     l9697:	
 14723                           
 14724                           ;miwi_p2p.c: 2449: }
 14725                           ;miwi_p2p.c: 2451: if( index < 5 )
 14726  127E  3005               	movlw	5
 14727  127F  0020               	movlb	0	; select bank0
 14728  1280  0234               	subwf	DumpConnection@index,w
 14729  1281  1803               	skipnc
 14730  1282  2ADE               	goto	l9739
 14731                           
 14732                           ;miwi_p2p.c: 2452: {
 14733                           ;miwi_p2p.c: 2453: CONSOLE_PutString((char*)"\r\nConnection     PeerLongAddress     Peer
      +                          Info\r\n");
 14734  1283  305A               	movlw	low ((STR_11+2)| (0+32768))
 14735  1284  00AA               	movwf	CONSOLE_PutString@str
 14736  1285  30A2               	movlw	high ((STR_11+2)| (0+32768))
 14737  1286  00AB               	movwf	CONSOLE_PutString@str+1
 14738  1287  2341  3190         	fcall	_CONSOLE_PutString
 14739                           
 14740                           ;miwi_p2p.c: 2454: if( ConnectionTable[index].status.bits.isValid )
 14741  1289  300A               	movlw	10
 14742  128A  00A9               	movwf	___bmul@multiplicand
 14743  128B  0834               	movf	DumpConnection@index,w
 14744  128C  2731  3190         	fcall	___bmul
 14745  128E  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 14746  128F  0086               	movwf	6
 14747  1290  3001               	movlw	1	; select bank3/4
 14748  1291  0087               	movwf	7
 14749  1292  1F81               	btfss	1,7
 14750  1293  0008               	return
 14751                           
 14752                           ;miwi_p2p.c: 2455: {
 14753                           ;miwi_p2p.c: 2456: CONSOLE_PrintHex(index);
 14754  1294  0834               	movf	DumpConnection@index,w
 14755  1295  2355  3190         	fcall	_CONSOLE_PrintHex
 14756                           
 14757                           ;miwi_p2p.c: 2457: CONSOLE_PutString((char*)"             ");
 14758  1297  308A               	movlw	low (STR_7| (0+32768))
 14759  1298  0020               	movlb	0	; select bank0
 14760  1299  00AA               	movwf	CONSOLE_PutString@str
 14761  129A  30A4               	movlw	high (STR_7| (0+32768))
 14762  129B  00AB               	movwf	CONSOLE_PutString@str+1
 14763  129C  2341  3190         	fcall	_CONSOLE_PutString
 14764                           
 14765                           ;miwi_p2p.c: 2458: for(i = 0; i < 8; i++)
 14766  129E  01B6               	clrf	DumpConnection@i
 14767  129F                     l9713:	
 14768                           
 14769                           ;miwi_p2p.c: 2459: {
 14770                           ;miwi_p2p.c: 2460: if(i < 8)
 14771  129F  3008               	movlw	8
 14772  12A0  0236               	subwf	DumpConnection@i,w
 14773  12A1  1803               	skipnc
 14774  12A2  2AB4               	goto	l9717
 14775                           
 14776                           ;miwi_p2p.c: 2461: {
 14777                           ;miwi_p2p.c: 2462: CONSOLE_PrintHex( ConnectionTable[index].Address[8-1-i] );
 14778  12A3  300A               	movlw	10
 14779  12A4  00A9               	movwf	___bmul@multiplicand
 14780  12A5  0834               	movf	DumpConnection@index,w
 14781  12A6  2731  3190         	fcall	___bmul
 14782  12A8  3EA7               	addlw	(low ((_ConnectionTable| (0+256)+7)))& (0+255)
 14783  12A9  00B3               	movwf	??_DumpConnection
 14784  12AA  0836               	movf	DumpConnection@i,w
 14785  12AB  02B3               	subwf	??_DumpConnection,f
 14786  12AC  0833               	movf	??_DumpConnection,w
 14787  12AD  0086               	movwf	6
 14788  12AE  3001               	movlw	1	; select bank2/3
 14789  12AF  0087               	movwf	7
 14790  12B0  0801               	movf	1,w
 14791  12B1  2355  3190         	fcall	_CONSOLE_PrintHex
 14792                           
 14793                           ;miwi_p2p.c: 2463: }
 14794  12B3  2ABA               	goto	l9719
 14795  12B4                     l9717:	
 14796                           
 14797                           ;miwi_p2p.c: 2464: else
 14798                           ;miwi_p2p.c: 2465: {
 14799                           ;miwi_p2p.c: 2466: CONSOLE_PutString((char*)"  ");
 14800  12B4  3095               	movlw	low ((STR_7+11)| (0+32768))
 14801  12B5  00AA               	movwf	CONSOLE_PutString@str
 14802  12B6  30A4               	movlw	high ((STR_7+11)| (0+32768))
 14803  12B7  00AB               	movwf	CONSOLE_PutString@str+1
 14804  12B8  2341  3190         	fcall	_CONSOLE_PutString
 14805  12BA                     l9719:	
 14806  12BA  0020               	movlb	0	; select bank0
 14807  12BB  3008               	movlw	8
 14808  12BC  0AB6               	incf	DumpConnection@i,f
 14809  12BD  0236               	subwf	DumpConnection@i,w
 14810  12BE  1C03               	skipc
 14811  12BF  2A9F               	goto	l9713
 14812                           
 14813                           ;miwi_p2p.c: 2467: }
 14814                           ;miwi_p2p.c: 2468: }
 14815                           ;miwi_p2p.c: 2469: CONSOLE_PutString((char*)"    ");
 14816  12C0  3093               	movlw	low ((STR_7+9)| (0+32768))
 14817  12C1  00AA               	movwf	CONSOLE_PutString@str
 14818  12C2  30A4               	movlw	high ((STR_7+9)| (0+32768))
 14819  12C3  00AB               	movwf	CONSOLE_PutString@str+1
 14820  12C4  2341  3190         	fcall	_CONSOLE_PutString
 14821                           
 14822                           ;miwi_p2p.c: 2471: for(i = 0; i < 1; i++)
 14823  12C6  01B6               	clrf	DumpConnection@i
 14824  12C7                     l9731:	
 14825                           
 14826                           ;miwi_p2p.c: 2472: {
 14827                           ;miwi_p2p.c: 2473: CONSOLE_PrintHex( ConnectionTable[index].PeerInfo[i] );
 14828  12C7  300A               	movlw	10
 14829  12C8  00A9               	movwf	___bmul@multiplicand
 14830  12C9  0834               	movf	DumpConnection@index,w
 14831  12CA  2731  3190         	fcall	___bmul
 14832  12CC  3EA9               	addlw	(low ((_ConnectionTable| (0+256)+9)))& (0+255)
 14833  12CD  0736               	addwf	DumpConnection@i,w
 14834  12CE  00B3               	movwf	??_DumpConnection
 14835  12CF  0086               	movwf	6
 14836  12D0  3001               	movlw	1	; select bank3/4
 14837  12D1  0087               	movwf	7
 14838  12D2  0801               	movf	1,w
 14839  12D3  2355  3190         	fcall	_CONSOLE_PrintHex
 14840  12D5  0020               	movlb	0	; select bank0
 14841  12D6  0AB6               	incf	DumpConnection@i,f
 14842  12D7  1903               	btfsc	3,2
 14843  12D8  2AC7               	goto	l9731
 14844                           
 14845                           ;miwi_p2p.c: 2474: }
 14846                           ;miwi_p2p.c: 2476: CONSOLE_PutString((char*)"\r\n");
 14847  12D9  30D5               	movlw	low ((STR_27+2)| (0+32768))
 14848  12DA  00AA               	movwf	CONSOLE_PutString@str
 14849  12DB  30A4               	movlw	high ((STR_27+2)| (0+32768))
 14850  12DC  00AB               	movwf	CONSOLE_PutString@str+1
 14851  12DD  2B41               	ljmp	l9197
 14852  12DE                     l9739:	
 14853                           
 14854                           ;miwi_p2p.c: 2479: else
 14855                           ;miwi_p2p.c: 2480: {
 14856                           ;miwi_p2p.c: 2481: CONSOLE_PutString((char*)"\r\n\r\nConnection     PeerLongAddress     
      +                          PeerInfo\r\n");
 14857  12DE  3058               	movlw	low (STR_11| (0+32768))
 14858  12DF  00AA               	movwf	CONSOLE_PutString@str
 14859  12E0  30A2               	movlw	high (STR_11| (0+32768))
 14860  12E1  00AB               	movwf	CONSOLE_PutString@str+1
 14861  12E2  2341  3190         	fcall	_CONSOLE_PutString
 14862                           
 14863                           ;miwi_p2p.c: 2482: for(i = 0; i < 5; i++)
 14864  12E4  01B6               	clrf	DumpConnection@i
 14865  12E5                     l9747:	
 14866                           
 14867                           ;miwi_p2p.c: 2483: {
 14868                           ;miwi_p2p.c: 2485: if( ConnectionTable[i].status.bits.isValid )
 14869  12E5  300A               	movlw	10
 14870  12E6  00A9               	movwf	___bmul@multiplicand
 14871  12E7  0836               	movf	DumpConnection@i,w
 14872  12E8  2731  3190         	fcall	___bmul
 14873  12EA  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 14874  12EB  0086               	movwf	6
 14875  12EC  3001               	movlw	1	; select bank3/4
 14876  12ED  0087               	movwf	7
 14877  12EE  1F81               	btfss	1,7
 14878  12EF  2B3B               	goto	l9785
 14879                           
 14880                           ;miwi_p2p.c: 2486: {
 14881                           ;miwi_p2p.c: 2487: CONSOLE_PrintHex(i);
 14882  12F0  0836               	movf	DumpConnection@i,w
 14883  12F1  2355  3190         	fcall	_CONSOLE_PrintHex
 14884                           
 14885                           ;miwi_p2p.c: 2488: CONSOLE_PutString((char*)"             ");
 14886  12F3  308A               	movlw	low (STR_7| (0+32768))
 14887  12F4  0020               	movlb	0	; select bank0
 14888  12F5  00AA               	movwf	CONSOLE_PutString@str
 14889  12F6  30A4               	movlw	high (STR_7| (0+32768))
 14890  12F7  00AB               	movwf	CONSOLE_PutString@str+1
 14891  12F8  2341  3190         	fcall	_CONSOLE_PutString
 14892                           
 14893                           ;miwi_p2p.c: 2489: for(j = 0; j < 8; j++)
 14894  12FA  01B5               	clrf	DumpConnection@j
 14895  12FB                     l9759:	
 14896                           
 14897                           ;miwi_p2p.c: 2490: {
 14898                           ;miwi_p2p.c: 2491: if( j < 8 )
 14899  12FB  3008               	movlw	8
 14900  12FC  0235               	subwf	DumpConnection@j,w
 14901  12FD  1803               	skipnc
 14902  12FE  2B10               	goto	l9763
 14903                           
 14904                           ;miwi_p2p.c: 2492: {
 14905                           ;miwi_p2p.c: 2493: CONSOLE_PrintHex( ConnectionTable[i].Address[8-1-j] );
 14906  12FF  300A               	movlw	10
 14907  1300  00A9               	movwf	___bmul@multiplicand
 14908  1301  0836               	movf	DumpConnection@i,w
 14909  1302  2731  3190         	fcall	___bmul
 14910  1304  3EA7               	addlw	(low ((_ConnectionTable| (0+256)+7)))& (0+255)
 14911  1305  00B3               	movwf	??_DumpConnection
 14912  1306  0835               	movf	DumpConnection@j,w
 14913  1307  02B3               	subwf	??_DumpConnection,f
 14914  1308  0833               	movf	??_DumpConnection,w
 14915  1309  0086               	movwf	6
 14916  130A  3001               	movlw	1	; select bank2/3
 14917  130B  0087               	movwf	7
 14918  130C  0801               	movf	1,w
 14919  130D  2355  3190         	fcall	_CONSOLE_PrintHex
 14920                           
 14921                           ;miwi_p2p.c: 2494: }
 14922  130F  2B16               	goto	l9765
 14923  1310                     l9763:	
 14924                           
 14925                           ;miwi_p2p.c: 2495: else
 14926                           ;miwi_p2p.c: 2496: {
 14927                           ;miwi_p2p.c: 2497: CONSOLE_PutString((char*)"  ");
 14928  1310  3095               	movlw	low ((STR_7+11)| (0+32768))
 14929  1311  00AA               	movwf	CONSOLE_PutString@str
 14930  1312  30A4               	movlw	high ((STR_7+11)| (0+32768))
 14931  1313  00AB               	movwf	CONSOLE_PutString@str+1
 14932  1314  2341  3190         	fcall	_CONSOLE_PutString
 14933  1316                     l9765:	
 14934  1316  0020               	movlb	0	; select bank0
 14935  1317  3008               	movlw	8
 14936  1318  0AB5               	incf	DumpConnection@j,f
 14937  1319  0235               	subwf	DumpConnection@j,w
 14938  131A  1C03               	skipc
 14939  131B  2AFB               	goto	l9759
 14940                           
 14941                           ;miwi_p2p.c: 2498: }
 14942                           ;miwi_p2p.c: 2499: }
 14943                           ;miwi_p2p.c: 2500: CONSOLE_PutString((char*)"    ");
 14944  131C  3093               	movlw	low ((STR_7+9)| (0+32768))
 14945  131D  00AA               	movwf	CONSOLE_PutString@str
 14946  131E  30A4               	movlw	high ((STR_7+9)| (0+32768))
 14947  131F  00AB               	movwf	CONSOLE_PutString@str+1
 14948  1320  2341  3190         	fcall	_CONSOLE_PutString
 14949                           
 14950                           ;miwi_p2p.c: 2502: for(j = 0; j < 1; j++)
 14951  1322  01B5               	clrf	DumpConnection@j
 14952  1323                     l9777:	
 14953                           
 14954                           ;miwi_p2p.c: 2503: {
 14955                           ;miwi_p2p.c: 2504: CONSOLE_PrintHex( ConnectionTable[i].PeerInfo[j] );
 14956  1323  300A               	movlw	10
 14957  1324  00A9               	movwf	___bmul@multiplicand
 14958  1325  0836               	movf	DumpConnection@i,w
 14959  1326  2731  3190         	fcall	___bmul
 14960  1328  3EA9               	addlw	(low ((_ConnectionTable| (0+256)+9)))& (0+255)
 14961  1329  0735               	addwf	DumpConnection@j,w
 14962  132A  00B3               	movwf	??_DumpConnection
 14963  132B  0086               	movwf	6
 14964  132C  3001               	movlw	1	; select bank3/4
 14965  132D  0087               	movwf	7
 14966  132E  0801               	movf	1,w
 14967  132F  2355  3190         	fcall	_CONSOLE_PrintHex
 14968  1331  0020               	movlb	0	; select bank0
 14969  1332  0AB5               	incf	DumpConnection@j,f
 14970  1333  1903               	btfsc	3,2
 14971  1334  2B23               	goto	l9777
 14972                           
 14973                           ;miwi_p2p.c: 2505: }
 14974                           ;miwi_p2p.c: 2507: CONSOLE_PutString((char*)"\r\n");
 14975  1335  30D5               	movlw	low ((STR_27+2)| (0+32768))
 14976  1336  00AA               	movwf	CONSOLE_PutString@str
 14977  1337  30A4               	movlw	high ((STR_27+2)| (0+32768))
 14978  1338  00AB               	movwf	CONSOLE_PutString@str+1
 14979  1339  2341  3190         	fcall	_CONSOLE_PutString
 14980  133B                     l9785:	
 14981  133B  3005               	movlw	5
 14982  133C  0AB6               	incf	DumpConnection@i,f
 14983  133D  0236               	subwf	DumpConnection@i,w
 14984  133E  1803               	btfsc	3,0
 14985  133F  0008               	return
 14986  1340  2AE5               	goto	l9747
 14987  1341                     __end_of_DumpConnection:	
 14988  1341                     __ptext78:	
 14989 ;; *************** function _CONSOLE_PutString *****************
 14990 ;; Defined at:
 14991 ;;		line 99 in file "../src/system_config/pic18exp_pic16f1947_24j40/console.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;  str             2   10[BANK0 ] PTR unsigned char 
 14994 ;;		 -> STR_41(19), STR_40(46), STR_39(24), STR_38(3), 
 14995 ;;		 -> STR_37(7), STR_36(26), STR_35(28), STR_34(9), 
 14996 ;;		 -> STR_33(3), STR_32(29), STR_30(3), STR_29(30), 
 14997 ;;		 -> STR_27(5), STR_26(60), STR_25(66), STR_24(66), 
 14998 ;;		 -> STR_23(62), STR_22(64), STR_21(23), STR_20(32), 
 14999 ;;		 -> STR_19(60), STR_15(3), STR_14(5), STR_13(3), 
 15000 ;;		 -> STR_12(14), STR_11(50), STR_10(3), STR_9(5), 
 15001 ;;		 -> STR_8(3), STR_7(14), STR_6(48), STR_5(12), 
 15002 ;;		 -> STR_4(12), STR_3(19), STR_2(10), STR_1(9), 
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;  c               1   14[BANK0 ] unsigned char 
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15009 ;; Tracked objects:
 15010 ;;		On entry : 1F/0
 15011 ;;		On exit  : 1F/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15018 ;;Total ram usage:        5 bytes
 15019 ;; Hardware stack levels used:    1
 15020 ;; Hardware stack levels required when called:    5
 15021 ;; This function calls:
 15022 ;;		_CONSOLE_Put
 15023 ;; This function is called by:
 15024 ;;		_MiApp_ProtocolInit
 15025 ;;		_DumpConnection
 15026 ;;		_DemoOutput_Greeting
 15027 ;;		_DemoOutput_Channel
 15028 ;;		_DemoOutput_HandleMessage
 15029 ;;		_DemoOutput_ChannelError
 15030 ;;		_DemoOutput_UnicastFail
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _CONSOLE_PutString
 15036  1341                     _CONSOLE_PutString:	
 15037  1341                     l9197:	
 15038                           ;console.c: 101: uint8_t c;
 15039                           ;console.c: 103: while( c = *str++ )
 15040                           
 15041                           ;incstack = 0
 15042                           ; Regs used in _CONSOLE_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15043                           
 15044  1341  0020               	movlb	0	; select bank0
 15045  1342  082B               	movf	CONSOLE_PutString@str+1,w
 15046  1343  00AD               	movwf	??_CONSOLE_PutString+1
 15047  1344  082A               	movf	CONSOLE_PutString@str,w
 15048  1345  00AC               	movwf	??_CONSOLE_PutString
 15049  1346  0AAA               	incf	CONSOLE_PutString@str,f
 15050  1347  1903               	skipnz
 15051  1348  0AAB               	incf	CONSOLE_PutString@str+1,f
 15052  1349  0084               	movwf	4
 15053  134A  082D               	movf	??_CONSOLE_PutString+1,w
 15054  134B  0085               	movwf	5
 15055  134C  0800               	movf	0,w	;code access
 15056  134D  00AE               	movwf	CONSOLE_PutString@c
 15057  134E  082E               	movf	CONSOLE_PutString@c,w
 15058  134F  1903               	btfsc	3,2
 15059  1350  0008               	return
 15060                           
 15061                           ;console.c: 104: CONSOLE_Put(c);
 15062  1351  082E               	movf	CONSOLE_PutString@c,w
 15063  1352  2370  3190         	fcall	_CONSOLE_Put
 15064  1354  2B41               	goto	l9197
 15065  1355                     __end_of_CONSOLE_PutString:	
 15066  1355                     __ptext52:	
 15067 ;; *************** function _CONSOLE_PrintHex *****************
 15068 ;; Defined at:
 15069 ;;		line 184 in file "../src/system_config/pic18exp_pic16f1947_24j40/console.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;  toPrint         1    wreg     unsigned char 
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;  toPrint         1   11[BANK0 ] unsigned char 
 15074 ;;  PRINT_VAR       1   10[BANK0 ] unsigned char 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15079 ;; Tracked objects:
 15080 ;;		On entry : 1C/2
 15081 ;;		On exit  : 1F/3
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;Total ram usage:        2 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    5
 15091 ;; This function calls:
 15092 ;;		_CONSOLE_Put
 15093 ;; This function is called by:
 15094 ;;		_MiApp_ProtocolInit
 15095 ;;		_DumpConnection
 15096 ;;		_DemoOutput_HandleMessage
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           
 15101                           ;psect for function _CONSOLE_PrintHex
 15102  1355                     _CONSOLE_PrintHex:	
 15103                           
 15104                           ;incstack = 0
 15105                           ; Regs used in _CONSOLE_PrintHex: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15106                           ;CONSOLE_PrintHex@toPrint stored from wreg
 15107  1355  0020               	movlb	0	; select bank0
 15108  1356  00AB               	movwf	CONSOLE_PrintHex@toPrint
 15109                           
 15110                           ;console.c: 186: uint8_t PRINT_VAR;
 15111                           ;console.c: 187: PRINT_VAR = toPrint;
 15112  1357  00AA               	movwf	CONSOLE_PrintHex@PRINT_VAR
 15113  1358  300F               	movlw	15
 15114                           
 15115                           ;console.c: 188: toPrint = (toPrint>>4)&0x0F;
 15116  1359  0EAB               	swapf	CONSOLE_PrintHex@toPrint,f
 15117  135A  05AB               	andwf	CONSOLE_PrintHex@toPrint,f
 15118  135B  05AB               	andwf	CONSOLE_PrintHex@toPrint,f
 15119                           
 15120                           ;console.c: 189: CONSOLE_Put(CharacterArray[toPrint]);
 15121  135C  082B               	movf	CONSOLE_PrintHex@toPrint,w
 15122  135D  3E3C               	addlw	(low (_CharacterArray| (0+256)))& (0+255)
 15123  135E  0086               	movwf	6
 15124  135F  3001               	movlw	1	; select bank2/3
 15125  1360  0087               	movwf	7
 15126  1361  0801               	movf	1,w
 15127  1362  2370  3190         	fcall	_CONSOLE_Put
 15128                           
 15129                           ;console.c: 190: toPrint = (PRINT_VAR)&0x0F;
 15130  1364  0020               	movlb	0	; select bank0
 15131  1365  082A               	movf	CONSOLE_PrintHex@PRINT_VAR,w
 15132  1366  00AB               	movwf	CONSOLE_PrintHex@toPrint
 15133  1367  300F               	movlw	15
 15134  1368  05AB               	andwf	CONSOLE_PrintHex@toPrint,f
 15135                           
 15136                           ;console.c: 191: CONSOLE_Put(CharacterArray[toPrint]);
 15137  1369  082B               	movf	CONSOLE_PrintHex@toPrint,w
 15138  136A  3E3C               	addlw	(low (_CharacterArray| (0+256)))& (0+255)
 15139  136B  0086               	movwf	6
 15140  136C  3001               	movlw	1	; select bank2/3
 15141  136D  0087               	movwf	7
 15142  136E  0801               	movf	1,w
 15143  136F  2B70               	ljmp	_CONSOLE_Put
 15144  1370                     __end_of_CONSOLE_PrintHex:	
 15145  1370                     __ptext79:	
 15146 ;; *************** function _CONSOLE_Put *****************
 15147 ;; Defined at:
 15148 ;;		line 124 in file "../src/system_config/pic18exp_pic16f1947_24j40/console.c"
 15149 ;; Parameters:    Size  Location     Type
 15150 ;;  c               1    wreg     unsigned char 
 15151 ;; Auto vars:     Size  Location     Type
 15152 ;;  c               1    9[BANK0 ] unsigned char 
 15153 ;; Return value:  Size  Location     Type
 15154 ;;                  1    wreg      void 
 15155 ;; Registers used:
 15156 ;;		wreg
 15157 ;; Tracked objects:
 15158 ;;		On entry : 1D/2
 15159 ;;		On exit  : 1F/3
 15160 ;;		Unchanged: 0/0
 15161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15166 ;;Total ram usage:        1 bytes
 15167 ;; Hardware stack levels used:    1
 15168 ;; Hardware stack levels required when called:    4
 15169 ;; This function calls:
 15170 ;;		Nothing
 15171 ;; This function is called by:
 15172 ;;		_CONSOLE_PutString
 15173 ;;		_CONSOLE_PrintHex
 15174 ;;		_CONSOLE_PrintDec
 15175 ;;		_DemoOutput_HandleMessage
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           
 15180                           ;psect for function _CONSOLE_Put
 15181  1370                     _CONSOLE_Put:	
 15182                           
 15183                           ;incstack = 0
 15184                           ; Regs used in _CONSOLE_Put: [wreg]
 15185                           ;CONSOLE_Put@c stored from wreg
 15186  1370  0020               	movlb	0	; select bank0
 15187  1371  00A9               	movwf	CONSOLE_Put@c
 15188  1372                     l604:	
 15189                           ;console.c: 126: while( !(TXSTAbits.TRMT) );
 15190                           
 15191  1372  0023               	movlb	3	; select bank3
 15192  1373  1C9E               	btfss	30,1	;volatile
 15193  1374  2B72               	goto	l604
 15194                           
 15195                           ;console.c: 128: TXREG = c;
 15196  1375  0020               	movlb	0	; select bank0
 15197  1376  0829               	movf	CONSOLE_Put@c,w
 15198  1377  0023               	movlb	3	; select bank3
 15199  1378  009A               	movwf	26	;volatile
 15200  1379  0008               	return
 15201  137A                     __end_of_CONSOLE_Put:	
 15202  137A                     __ptext60:	
 15203 ;; *************** function _LCDDisplay *****************
 15204 ;; Defined at:
 15205 ;;		line 347 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;  text            2   55[BANK0 ] PTR unsigned char 
 15208 ;;		 -> STR_45(21), STR_42(16), STR_31(30), STR_28(32), 
 15209 ;;		 -> STR_18(31), 
 15210 ;;  value           1   57[BANK0 ] unsigned char 
 15211 ;;  delay           1   58[BANK0 ] unsigned char 
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;  i               1   59[BANK0 ] unsigned char 
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 1F/0
 15220 ;;		On exit  : 1F/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15227 ;;Total ram usage:        5 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:    8
 15230 ;; This function calls:
 15231 ;;		_DELAY_ms
 15232 ;;		_LCD_Erase
 15233 ;;		_LCD_Update
 15234 ;;		_sprintf
 15235 ;; This function is called by:
 15236 ;;		_DemoOutput_Greeting
 15237 ;;		_DemoOutput_Channel
 15238 ;;		_DemoOutput_UnicastFail
 15239 ;;		_freezer_feature
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           
 15244                           ;psect for function _LCDDisplay
 15245  137A                     _LCDDisplay:	
 15246  137A                     l9235:	
 15247                           ;incstack = 0
 15248                           ; Regs used in _LCDDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15249                           
 15250                           
 15251                           ;lcd.c: 350: LCD_Erase();
 15252  137A  2405  3190         	fcall	_LCD_Erase
 15253                           
 15254                           ;lcd.c: 351: DELAY_ms(5);
 15255  137C  3005               	movlw	5
 15256  137D  00B5               	movwf	DELAY_ms@ms
 15257  137E  01B6               	clrf	DELAY_ms@ms+1
 15258  137F  239D               	fcall	_DELAY_ms
 15259                           
 15260                           ;lcd.c: 352: sprintf((char *)LCDText, (char*)text, value);
 15261  1380  0858               	movf	LCDDisplay@text+1,w
 15262  1381  00B6               	movwf	sprintf@f+1
 15263  1382  0857               	movf	LCDDisplay@text,w
 15264  1383  00B5               	movwf	sprintf@f
 15265  1384  0859               	movf	LCDDisplay@value,w
 15266  1385  00B7               	movwf	?_sprintf+2
 15267  1386  3048               	movlw	(low (_LCDText| (0+512)))& (0+255)
 15268  1387  01B8               	clrf	?_sprintf+3
 15269  1388  3181  2111  3190   	fcall	_sprintf
 15270                           
 15271                           ;lcd.c: 353: LCD_Update();
 15272  138B  3189  215B  3190   	fcall	_LCD_Update
 15273                           
 15274                           ;lcd.c: 356: if( delay )
 15275  138E  085A               	movf	LCDDisplay@delay,w
 15276  138F  1903               	btfsc	3,2
 15277  1390  0008               	return
 15278                           
 15279                           ;lcd.c: 357: {
 15280                           ;lcd.c: 358: uint8_t i;
 15281                           ;lcd.c: 359: for(i = 0; i < 8; i++)
 15282  1391  01DB               	clrf	LCDDisplay@i
 15283  1392                     l9251:	
 15284                           
 15285                           ;lcd.c: 360: {
 15286                           ;lcd.c: 361: DELAY_ms(250);
 15287  1392  30FA               	movlw	250
 15288  1393  00B5               	movwf	DELAY_ms@ms
 15289  1394  01B6               	clrf	DELAY_ms@ms+1
 15290  1395  239D  3190         	fcall	_DELAY_ms
 15291  1397  3008               	movlw	8
 15292  1398  0ADB               	incf	LCDDisplay@i,f
 15293  1399  025B               	subwf	LCDDisplay@i,w
 15294  139A  1803               	btfsc	3,0
 15295  139B  0008               	return
 15296  139C  2B92               	goto	l9251
 15297  139D                     __end_of_LCDDisplay:	
 15298  139D                     __ptext76:	
 15299 ;; *************** function _DELAY_ms *****************
 15300 ;; Defined at:
 15301 ;;		line 110 in file "../src/system_config/pic18exp_pic16f1947_24j40/delay.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  ms              2   21[BANK0 ] unsigned int 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;  cyclesRequir    4   23[BANK0 ] long 
 15306 ;; Return value:  Size  Location     Type
 15307 ;;                  1    wreg      void 
 15308 ;; Registers used:
 15309 ;;		wreg, status,2, status,0, pclath, cstack
 15310 ;; Tracked objects:
 15311 ;;		On entry : 1F/0
 15312 ;;		On exit  : 1F/0
 15313 ;;		Unchanged: 0/0
 15314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;Total ram usage:        6 bytes
 15320 ;; Hardware stack levels used:    1
 15321 ;; Hardware stack levels required when called:    5
 15322 ;; This function calls:
 15323 ;;		___lmul
 15324 ;; This function is called by:
 15325 ;;		_LCD_i_write
 15326 ;;		_LCD_d_write
 15327 ;;		_LCD_Initialize
 15328 ;;		_LCD_Erase
 15329 ;;		_LCDTRXCount
 15330 ;;		_LCDDisplay
 15331 ;;		_Process_RxMessage
 15332 ;;		_run_p2p_demo
 15333 ;;		_freezer_feature
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337                           
 15338                           ;psect for function _DELAY_ms
 15339  139D                     _DELAY_ms:	
 15340                           
 15341                           ;delay.c: 114: int32_t cyclesRequiredForEntireDelay;
 15342                           ;delay.c: 117: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
 15343                           
 15344                           ;incstack = 0
 15345                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
 15346  139D  0835               	movf	DELAY_ms@ms,w
 15347  139E  00A9               	movwf	___lmul@multiplier
 15348  139F  0836               	movf	DELAY_ms@ms+1,w
 15349  13A0  00AA               	movwf	___lmul@multiplier+1
 15350  13A1  3009               	movlw	9
 15351  13A2  01AB               	clrf	___lmul@multiplier+2
 15352  13A3  01AC               	clrf	___lmul@multiplier+3
 15353  13A4  01B0               	clrf	___lmul@multiplicand+3
 15354  13A5  01AF               	clrf	___lmul@multiplicand+2
 15355  13A6  00AE               	movwf	___lmul@multiplicand+1
 15356  13A7  30C4               	movlw	196
 15357  13A8  00AD               	movwf	___lmul@multiplicand
 15358  13A9  23E0  3190         	fcall	___lmul
 15359  13AB  082C               	movf	?___lmul+3,w
 15360  13AC  00BA               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+3
 15361  13AD  082B               	movf	?___lmul+2,w
 15362  13AE  00B9               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+2
 15363  13AF  082A               	movf	?___lmul+1,w
 15364  13B0  00B8               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+1
 15365  13B1  0829               	movf	?___lmul,w
 15366  13B2  00B7               	movwf	DELAY_ms@cyclesRequiredForEntireDelay
 15367                           
 15368                           ;delay.c: 121: cyclesRequiredForEntireDelay -= (148 + 22);
 15369  13B3  3056               	movlw	86
 15370  13B4  07B7               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f
 15371  13B5  30FF               	movlw	255
 15372  13B6  3DB8               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f
 15373  13B7  3DB9               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f
 15374  13B8  3DBA               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f
 15375                           
 15376                           ;delay.c: 123: if (cyclesRequiredForEntireDelay <= (170+25))
 15377  13B9  1BBA               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7
 15378  13BA  0008               	return
 15379  13BB  083A               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w
 15380  13BC  1D03               	btfss	3,2
 15381  13BD  2BC8               	goto	l637
 15382  13BE  0839               	movf	DELAY_ms@cyclesRequiredForEntireDelay+2,w
 15383  13BF  1D03               	btfss	3,2
 15384  13C0  2BC8               	goto	l637
 15385  13C1  0838               	movf	DELAY_ms@cyclesRequiredForEntireDelay+1,w
 15386  13C2  1D03               	btfss	3,2
 15387  13C3  2BC8               	goto	l637
 15388  13C4  30C4               	movlw	196
 15389  13C5  0237               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w
 15390  13C6  1C03               	btfss	3,0
 15391  13C7  0008               	return
 15392  13C8                     l637:	
 15393  13C8  1BBA               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7
 15394  13C9  0008               	return
 15395  13CA  083A               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w
 15396  13CB  1D03               	btfss	3,2
 15397  13CC  2BD7               	goto	l638
 15398  13CD  0839               	movf	DELAY_ms@cyclesRequiredForEntireDelay+2,w
 15399  13CE  1D03               	btfss	3,2
 15400  13CF  2BD7               	goto	l638
 15401  13D0  0838               	movf	DELAY_ms@cyclesRequiredForEntireDelay+1,w
 15402  13D1  1D03               	btfss	3,2
 15403  13D2  2BD7               	goto	l638
 15404  13D3  3001               	movlw	1
 15405  13D4  0237               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w
 15406  13D5  1C03               	btfss	3,0
 15407  13D6  0008               	return
 15408  13D7                     l638:	
 15409                           
 15410                           ;delay.c: 130: {
 15411                           ;delay.c: 131: __nop();
 15412  13D7  0000               	nop
 15413                           
 15414                           ;delay.c: 133: cyclesRequiredForEntireDelay -= 39;
 15415  13D8  30D9               	movlw	217
 15416  13D9  0020               	movlb	0	; select bank0
 15417  13DA  07B7               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f
 15418  13DB  30FF               	movlw	255
 15419  13DC  3DB8               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f
 15420  13DD  3DB9               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f
 15421  13DE  3DBA               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f
 15422  13DF  2BC8               	goto	l637
 15423  13E0                     __end_of_DELAY_ms:	
 15424  13E0                     __ptext77:	
 15425 ;; *************** function ___lmul *****************
 15426 ;; Defined at:
 15427 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;  multiplier      4    9[BANK0 ] unsigned long 
 15430 ;;  multiplicand    4   13[BANK0 ] unsigned long 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;  product         4   17[BANK0 ] unsigned long 
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  4    9[BANK0 ] unsigned long 
 15435 ;; Registers used:
 15436 ;;		wreg, status,2, status,0
 15437 ;; Tracked objects:
 15438 ;;		On entry : 1F/0
 15439 ;;		On exit  : 1F/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15442 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15443 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;Total ram usage:       12 bytes
 15447 ;; Hardware stack levels used:    1
 15448 ;; Hardware stack levels required when called:    4
 15449 ;; This function calls:
 15450 ;;		Nothing
 15451 ;; This function is called by:
 15452 ;;		_DELAY_ms
 15453 ;; This function uses a non-reentrant model
 15454 ;;
 15455                           
 15456                           
 15457                           ;psect for function ___lmul
 15458  13E0                     ___lmul:	
 15459                           
 15460                           ;incstack = 0
 15461                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 15462  13E0  01B1               	clrf	___lmul@product
 15463  13E1  01B2               	clrf	___lmul@product+1
 15464  13E2  01B3               	clrf	___lmul@product+2
 15465  13E3  01B4               	clrf	___lmul@product+3
 15466  13E4                     l1302:	
 15467  13E4  1C29               	btfss	___lmul@multiplier,0
 15468  13E5  2BEE               	goto	l7633
 15469  13E6  082D               	movf	___lmul@multiplicand,w
 15470  13E7  07B1               	addwf	___lmul@product,f
 15471  13E8  082E               	movf	___lmul@multiplicand+1,w
 15472  13E9  3DB2               	addwfc	___lmul@product+1,f
 15473  13EA  082F               	movf	___lmul@multiplicand+2,w
 15474  13EB  3DB3               	addwfc	___lmul@product+2,f
 15475  13EC  0830               	movf	___lmul@multiplicand+3,w
 15476  13ED  3DB4               	addwfc	___lmul@product+3,f
 15477  13EE                     l7633:	
 15478  13EE  35AD               	lslf	___lmul@multiplicand,f
 15479  13EF  0DAE               	rlf	___lmul@multiplicand+1,f
 15480  13F0  0DAF               	rlf	___lmul@multiplicand+2,f
 15481  13F1  0DB0               	rlf	___lmul@multiplicand+3,f
 15482  13F2  36AC               	lsrf	___lmul@multiplier+3,f
 15483  13F3  0CAB               	rrf	___lmul@multiplier+2,f
 15484  13F4  0CAA               	rrf	___lmul@multiplier+1,f
 15485  13F5  0CA9               	rrf	___lmul@multiplier,f
 15486  13F6  082C               	movf	___lmul@multiplier+3,w
 15487  13F7  042B               	iorwf	___lmul@multiplier+2,w
 15488  13F8  042A               	iorwf	___lmul@multiplier+1,w
 15489  13F9  0429               	iorwf	___lmul@multiplier,w
 15490  13FA  1D03               	skipz
 15491  13FB  2BE4               	goto	l1302
 15492  13FC  0834               	movf	___lmul@product+3,w
 15493  13FD  00AC               	movwf	?___lmul+3
 15494  13FE  0833               	movf	___lmul@product+2,w
 15495  13FF  00AB               	movwf	?___lmul+2
 15496  1400  0832               	movf	___lmul@product+1,w
 15497  1401  00AA               	movwf	?___lmul+1
 15498  1402  0831               	movf	___lmul@product,w
 15499  1403  00A9               	movwf	?___lmul
 15500  1404  0008               	return
 15501  1405                     __end_of___lmul:	
 15502  1405                     __ptext70:	
 15503 ;; *************** function _LCD_Erase *****************
 15504 ;; Defined at:
 15505 ;;		line 283 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;		None
 15508 ;; Auto vars:     Size  Location     Type
 15509 ;;		None
 15510 ;; Return value:  Size  Location     Type
 15511 ;;                  1    wreg      void 
 15512 ;; Registers used:
 15513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15514 ;; Tracked objects:
 15515 ;;		On entry : 1C/2
 15516 ;;		On exit  : 1F/0
 15517 ;;		Unchanged: 0/0
 15518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15523 ;;Total ram usage:        0 bytes
 15524 ;; Hardware stack levels used:    1
 15525 ;; Hardware stack levels required when called:    7
 15526 ;; This function calls:
 15527 ;;		_DELAY_ms
 15528 ;;		_LCDInitWrite
 15529 ;;		_memset
 15530 ;; This function is called by:
 15531 ;;		_LCDTRXCount
 15532 ;;		_LCDDisplay
 15533 ;;		_run_p2p_demo
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           
 15538                           ;psect for function _LCD_Erase
 15539  1405                     _LCD_Erase:	
 15540                           
 15541                           ;lcd.c: 286: LCDInitWrite(0x01);
 15542                           
 15543                           ;incstack = 0
 15544                           ; Regs used in _LCD_Erase: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15545  1405  3001               	movlw	1
 15546  1406  2414  3190         	fcall	_LCDInitWrite
 15547                           
 15548                           ;lcd.c: 287: DELAY_ms(2);
 15549  1408  3002               	movlw	2
 15550  1409  00B5               	movwf	DELAY_ms@ms
 15551  140A  01B6               	clrf	DELAY_ms@ms+1
 15552  140B  239D               	fcall	_DELAY_ms
 15553                           
 15554                           ;lcd.c: 290: memset(LCDText, ' ', 32);
 15555  140C  3020               	movlw	32
 15556  140D  00A9               	movwf	memset@c
 15557  140E  01AA               	clrf	memset@c+1
 15558  140F  00AB               	movwf	memset@n
 15559  1410  3048               	movlw	(low (_LCDText| (0+512)))& (0+255)
 15560  1411  01AC               	clrf	memset@n+1
 15561  1412  31A7  2F61         	ljmp	_memset
 15562  1414                     __end_of_LCD_Erase:	
 15563  1414                     __ptext72:	
 15564 ;; *************** function _LCDInitWrite *****************
 15565 ;; Defined at:
 15566 ;;		line 96 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 15567 ;; Parameters:    Size  Location     Type
 15568 ;;  v               1    wreg     unsigned char 
 15569 ;; Auto vars:     Size  Location     Type
 15570 ;;  v               1   12[BANK0 ] unsigned char 
 15571 ;; Return value:  Size  Location     Type
 15572 ;;                  1    wreg      void 
 15573 ;; Registers used:
 15574 ;;		wreg, status,2, status,0, pclath, cstack
 15575 ;; Tracked objects:
 15576 ;;		On entry : 1C/0
 15577 ;;		On exit  : 1F/0
 15578 ;;		Unchanged: 0/0
 15579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;Total ram usage:        1 bytes
 15585 ;; Hardware stack levels used:    1
 15586 ;; Hardware stack levels required when called:    6
 15587 ;; This function calls:
 15588 ;;		_LCDWritePortA
 15589 ;;		_LCDWritePortB
 15590 ;; This function is called by:
 15591 ;;		_LCD_Initialize
 15592 ;;		_LCD_Erase
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           
 15597                           ;psect for function _LCDInitWrite
 15598  1414                     _LCDInitWrite:	
 15599                           
 15600                           ;incstack = 0
 15601                           ; Regs used in _LCDInitWrite: [wreg+status,2+status,0+pclath+cstack]
 15602                           ;LCDInitWrite@v stored from wreg
 15603  1414  0020               	movlb	0	; select bank0
 15604  1415  00AC               	movwf	LCDInitWrite@v
 15605                           
 15606                           ;lcd.c: 98: LCDWritePortA(0);
 15607  1416  3000               	movlw	0
 15608  1417  3189  21AF  3190   	fcall	_LCDWritePortA
 15609                           
 15610                           ;lcd.c: 99: LCDWritePortB(v);
 15611  141A  082C               	movf	LCDInitWrite@v,w
 15612  141B  3189  21F5  3190   	fcall	_LCDWritePortB
 15613                           
 15614                           ;lcd.c: 100: __nop();
 15615  141E  0000               	nop
 15616                           
 15617                           ;lcd.c: 101: __nop();
 15618  141F  0000               	nop
 15619                           
 15620                           ;lcd.c: 102: __nop();
 15621  1420  0000               	nop
 15622                           
 15623                           ;lcd.c: 104: LCDWritePortA(0x40);
 15624  1421  3040               	movlw	64
 15625  1422  3189  21AF  3190   	fcall	_LCDWritePortA
 15626                           
 15627                           ;lcd.c: 105: __nop();
 15628  1425  0000               	nop
 15629                           
 15630                           ;lcd.c: 106: __nop();
 15631  1426  0000               	nop
 15632                           
 15633                           ;lcd.c: 107: __nop();
 15634  1427  0000               	nop
 15635                           
 15636                           ;lcd.c: 108: __nop();
 15637  1428  0000               	nop
 15638                           
 15639                           ;lcd.c: 109: __nop();
 15640  1429  0000               	nop
 15641                           
 15642                           ;lcd.c: 110: __nop();
 15643  142A  0000               	nop
 15644                           
 15645                           ;lcd.c: 111: __nop();
 15646  142B  0000               	nop
 15647                           
 15648                           ;lcd.c: 112: __nop();
 15649  142C  0000               	nop
 15650                           
 15651                           ;lcd.c: 113: __nop();
 15652  142D  0000               	nop
 15653                           
 15654                           ;lcd.c: 115: LCDWritePortA(0);
 15655  142E  3000               	movlw	0
 15656  142F  3189  29AF         	ljmp	_LCDWritePortA
 15657  1431                     __end_of_LCDInitWrite:	
 15658  1431                     __ptext31:	
 15659 ;; *************** function _P2PTasks *****************
 15660 ;; Defined at:
 15661 ;;		line 350 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;  tmp             2   26[BANK1 ] unsigned int 
 15666 ;;  status          1   28[BANK1 ] unsigned char 
 15667 ;;  FW_Stat         1    0        unsigned char 
 15668 ;;  tmpTick         4   22[BANK1 ] struct _MIWI_TICK
 15669 ;;  tick3           4    0        struct _MIWI_TICK
 15670 ;;  tick2           4    0        struct _MIWI_TICK
 15671 ;;  i               1   29[BANK1 ] unsigned char 
 15672 ;;  broadcast_st    1    0        unsigned char 
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      void 
 15675 ;; Registers used:
 15676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 1C/1
 15679 ;;		On exit  : 1E/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;Total ram usage:       12 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:   10
 15689 ;; This function calls:
 15690 ;;		_AddConnection
 15691 ;;		_MiMAC_DiscardPacket
 15692 ;;		_MiMAC_ReceivedPacket
 15693 ;;		_MiMAC_SetAltAddress
 15694 ;;		_MiWi_TickGet
 15695 ;;		_NVMWrite
 15696 ;;		_SendPacket
 15697 ;;		___bmul
 15698 ;;		___wmul
 15699 ;;		_isSameAddress
 15700 ;; This function is called by:
 15701 ;;		_MiApp_MessageAvailable
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           
 15706                           ;psect for function _P2PTasks
 15707  1431                     _P2PTasks:	
 15708                           
 15709                           ;miwi_p2p.c: 352: uint8_t i;
 15710                           ;miwi_p2p.c: 353: MIWI_TICK tmpTick ,tick2 , tick3 ;
 15711                           ;miwi_p2p.c: 354: bool broadcast_status;
 15712                           ;miwi_p2p.c: 427: if( P2PStatus.bits.SaveConnection )
 15713                           
 15714                           ;incstack = 0
 15715                           ; Regs used in _P2PTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15716  1431  0021               	movlb	1	; select bank1
 15717  1432  1CD7               	btfss	_P2PStatus^(0+128),1	;volatile
 15718  1433  2C79               	goto	l8955
 15719                           
 15720                           ;miwi_p2p.c: 428: {
 15721                           ;miwi_p2p.c: 429: tmpTick = MiWi_TickGet();
 15722  1434  319A  22A5  3190   	fcall	_MiWi_TickGet
 15723  1437  082C               	movf	?_MiWi_TickGet+3,w
 15724  1438  0021               	movlb	1	; select bank1
 15725  1439  00B9               	movwf	(P2PTasks@tmpTick+3)^(0+128)
 15726  143A  0020               	movlb	0	; select bank0
 15727  143B  082B               	movf	?_MiWi_TickGet+2,w
 15728  143C  0021               	movlb	1	; select bank1
 15729  143D  00B8               	movwf	(P2PTasks@tmpTick+2)^(0+128)
 15730  143E  0020               	movlb	0	; select bank0
 15731  143F  082A               	movf	?_MiWi_TickGet+1,w
 15732  1440  0021               	movlb	1	; select bank1
 15733  1441  00B7               	movwf	(P2PTasks@tmpTick+1)^(0+128)
 15734  1442  0020               	movlb	0	; select bank0
 15735  1443  0829               	movf	?_MiWi_TickGet,w
 15736  1444  0021               	movlb	1	; select bank1
 15737  1445  00B6               	movwf	P2PTasks@tmpTick^(0+128)
 15738                           
 15739                           ;miwi_p2p.c: 430: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
 15740  1446  0022               	movlb	2	; select bank2
 15741  1447  082E               	movf	_nvmDelayTick^(0+256),w
 15742  1448  0021               	movlb	1	; select bank1
 15743  1449  0236               	subwf	P2PTasks@tmpTick^(0+128),w
 15744  144A  0020               	movlb	0	; select bank0
 15745  144B  00DA               	movwf	??_P2PTasks
 15746  144C  0022               	movlb	2	; select bank2
 15747  144D  082F               	movf	(_nvmDelayTick+1)^(0+256),w
 15748  144E  0021               	movlb	1	; select bank1
 15749  144F  3B37               	subwfb	(P2PTasks@tmpTick+1)^(0+128),w
 15750  1450  0020               	movlb	0	; select bank0
 15751  1451  00DB               	movwf	??_P2PTasks+1
 15752  1452  0022               	movlb	2	; select bank2
 15753  1453  0830               	movf	(_nvmDelayTick+2)^(0+256),w
 15754  1454  0021               	movlb	1	; select bank1
 15755  1455  3B38               	subwfb	(P2PTasks@tmpTick+2)^(0+128),w
 15756  1456  0020               	movlb	0	; select bank0
 15757  1457  00DC               	movwf	??_P2PTasks+2
 15758  1458  0022               	movlb	2	; select bank2
 15759  1459  0831               	movf	(_nvmDelayTick+3)^(0+256),w
 15760  145A  0021               	movlb	1	; select bank1
 15761  145B  3B39               	subwfb	(P2PTasks@tmpTick+3)^(0+128),w
 15762  145C  0020               	movlb	0	; select bank0
 15763  145D  00DD               	movwf	??_P2PTasks+3
 15764  145E  085D               	movf	??_P2PTasks+3,w
 15765  145F  1D03               	btfss	3,2
 15766  1460  2C69               	goto	l8951
 15767  1461  30B5               	movlw	181
 15768  1462  025A               	subwf	??_P2PTasks,w
 15769  1463  30C4               	movlw	196
 15770  1464  3B5B               	subwfb	??_P2PTasks+1,w
 15771  1465  3004               	movlw	4
 15772  1466  3B5C               	subwfb	??_P2PTasks+2,w
 15773  1467  1C03               	btfss	3,0
 15774  1468  2C79               	goto	l8955
 15775  1469                     l8951:	
 15776                           
 15777                           ;miwi_p2p.c: 431: {
 15778                           ;miwi_p2p.c: 432: P2PStatus.bits.SaveConnection = 0;
 15779  1469  0021               	movlb	1	; select bank1
 15780  146A  10D7               	bcf	_P2PStatus^(0+128),1	;volatile
 15781                           
 15782                           ;miwi_p2p.c: 433: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 *
      +                           sizeof(CONNECTION_ENTRY));
 15783  146B  30A0               	movlw	low _ConnectionTable
 15784  146C  0020               	movlb	0	; select bank0
 15785  146D  00B4               	movwf	NVMWrite@source
 15786  146E  3001               	movlw	high _ConnectionTable
 15787  146F  00B5               	movwf	NVMWrite@source+1
 15788  1470  0864               	movf	_nvmConnectionTable+1,w
 15789  1471  00B7               	movwf	NVMWrite@addr+1
 15790  1472  0863               	movf	_nvmConnectionTable,w
 15791  1473  00B6               	movwf	NVMWrite@addr
 15792  1474  3032               	movlw	50
 15793  1475  00B8               	movwf	NVMWrite@count
 15794  1476  01B9               	clrf	NVMWrite@count+1
 15795  1477  2755  3190         	fcall	_NVMWrite
 15796  1479                     l8955:	
 15797                           
 15798                           ;miwi_p2p.c: 435: }
 15799                           ;miwi_p2p.c: 436: }
 15800                           ;miwi_p2p.c: 453: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
 15801  1479  0021               	movlb	1	; select bank1
 15802  147A  19D7               	btfsc	_P2PStatus^(0+128),3	;volatile
 15803  147B  0008               	return
 15804                           
 15805                           ;miwi_p2p.c: 454: {
 15806                           ;miwi_p2p.c: 455: bool FW_Stat = 0;
 15807  147C  318A  2227  3190   	fcall	_MiMAC_ReceivedPacket
 15808  147F  3A00               	xorlw	0
 15809  1480  1903               	skipnz
 15810  1481  0008               	return
 15811                           
 15812                           ;miwi_p2p.c: 456: rxMessage.flags.Val = 0;
 15813  1482  0022               	movlb	2	; select bank2
 15814  1483  3000               	movlw	0
 15815  1484  01A0               	clrf	_rxMessage^(0+256)
 15816                           
 15817                           ;miwi_p2p.c: 459: temp_bit = MACRxPacket.flags.bits.broadcast;
 15818  1485  0021               	movlb	1	; select bank1
 15819  1486  1947               	btfsc	_MACRxPacket^(0+128),2
 15820  1487  3001               	movlw	1
 15821  1488  00DF               	movwf	_temp_bit^(0+128)
 15822                           
 15823                           ;miwi_p2p.c: 460: rxMessage.flags.bits.broadcast = temp_bit;
 15824  1489  0022               	movlb	2	; select bank2
 15825  148A  0820               	movf	_rxMessage^(0+256),w
 15826  148B  0021               	movlb	1	; select bank1
 15827  148C  065F               	xorwf	_temp_bit^(0+128),w
 15828  148D  39FC               	andlw	-4
 15829  148E  065F               	xorwf	_temp_bit^(0+128),w
 15830  148F  0022               	movlb	2	; select bank2
 15831  1490  00A0               	movwf	_rxMessage^(0+256)
 15832                           
 15833                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15834  1491  11A0               	bcf	_rxMessage^(0+256),3
 15835  1492  0021               	movlb	1	; select bank1
 15836  1493  1DC7               	btfss	_MACRxPacket^(0+128),3
 15837  1494  2C97               	goto	l8967
 15838  1495  0022               	movlb	2	; select bank2
 15839  1496  15A0               	bsf	_rxMessage^(0+256),3
 15840  1497                     l8967:	
 15841                           
 15842                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
 15843  1497  0021               	movlb	1	; select bank1
 15844  1498  0847               	movf	_MACRxPacket^(0+128),w
 15845  1499  3903               	andlw	3
 15846  149A  3A01               	xorlw	1
 15847  149B  1D03               	btfss	3,2
 15848  149C  2CA0               	goto	u8000
 15849  149D  0022               	movlb	2	; select bank2
 15850  149E  16A0               	bsf	_rxMessage^(0+256),5
 15851  149F  2CA2               	goto	l8969
 15852  14A0                     u8000:	
 15853  14A0  0022               	movlb	2	; select bank2
 15854  14A1  12A0               	bcf	_rxMessage^(0+256),5
 15855  14A2                     l8969:	
 15856                           
 15857                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 15858  14A2  1320               	bcf	_rxMessage^(0+256),6
 15859  14A3  0021               	movlb	1	; select bank1
 15860  14A4  1FC7               	btfss	_MACRxPacket^(0+128),7
 15861  14A5  2CA8               	goto	l8971
 15862  14A6  0022               	movlb	2	; select bank2
 15863  14A7  1720               	bsf	_rxMessage^(0+256),6
 15864  14A8                     l8971:	
 15865                           
 15866                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
 15867  14A8  0021               	movlb	1	; select bank1
 15868  14A9  1FC7               	btfss	_MACRxPacket^(0+128),7
 15869  14AA  2CB2               	goto	l395
 15870                           
 15871                           ;miwi_p2p.c: 466: {
 15872                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 15873  14AB  0849               	movf	((low ((_MACRxPacket| 0+1))+1))^(0+128),w
 15874  14AC  0022               	movlb	2	; select bank2
 15875  14AD  00A4               	movwf	((low ((_rxMessage| (0+256)+3))+1))^0
 15876  14AE  0021               	movlb	1	; select bank1
 15877  14AF  0848               	movf	(low ((_MACRxPacket| 0+1)))^(0+128),w
 15878  14B0  0022               	movlb	2	; select bank2
 15879  14B1  00A3               	movwf	(low ((_rxMessage| (0+256)+3)))^0
 15880  14B2                     l395:	
 15881                           
 15882                           ;miwi_p2p.c: 468: }
 15883                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
 15884  14B2  0021               	movlb	1	; select bank1
 15885  14B3  0851               	movf	((_MACRxPacket+1)^(0+128)+9),w
 15886  14B4  0022               	movlb	2	; select bank2
 15887  14B5  00A2               	movwf	((_rxMessage+1)^(0+256)+1)
 15888  14B6  0021               	movlb	1	; select bank1
 15889  14B7  0850               	movf	(_MACRxPacket^(0+128)+9),w
 15890  14B8  0022               	movlb	2	; select bank2
 15891  14B9  00A1               	movwf	(_rxMessage^(0+256)+1)
 15892                           
 15893                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
 15894  14BA  0021               	movlb	1	; select bank1
 15895  14BB  084C               	movf	(_MACRxPacket^(0+128)+5),w
 15896  14BC  0022               	movlb	2	; select bank2
 15897  14BD  00A7               	movwf	(_rxMessage^(0+256)+7)
 15898                           
 15899                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
 15900  14BE  0021               	movlb	1	; select bank1
 15901  14BF  084B               	movf	((low ((_MACRxPacket| 0+3))+1))^(0+128),w
 15902  14C0  0022               	movlb	2	; select bank2
 15903  14C1  00A6               	movwf	((low ((_rxMessage| (0+256)+5))+1))^0
 15904  14C2  0021               	movlb	1	; select bank1
 15905  14C3  084A               	movf	(low ((_MACRxPacket| 0+3)))^(0+128),w
 15906  14C4  0022               	movlb	2	; select bank2
 15907  14C5  00A5               	movwf	(low ((_rxMessage| (0+256)+5)))^0
 15908                           
 15909                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 15910  14C6  0021               	movlb	1	; select bank1
 15911  14C7  084E               	movf	(_MACRxPacket^(0+128)+7),w
 15912  14C8  0022               	movlb	2	; select bank2
 15913  14C9  00A9               	movwf	(_rxMessage^(0+256)+9)
 15914                           
 15915                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 15916  14CA  0021               	movlb	1	; select bank1
 15917  14CB  084D               	movf	(_MACRxPacket^(0+128)+6),w
 15918  14CC  0022               	movlb	2	; select bank2
 15919  14CD  00A8               	movwf	(_rxMessage^(0+256)+8)
 15920                           
 15921                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
 15922  14CE  1AA0               	btfsc	_rxMessage^(0+256),5
 15923  14CF  2F12               	goto	l9177
 15924  14D0  2F23               	goto	l396
 15925  14D1                     l8979:	
 15926                           
 15927                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
 15928  14D1  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 15929  14D2  0086               	movwf	6
 15930  14D3  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 15931  14D4  0087               	movwf	7
 15932  14D5  3141               	addfsr 1,1
 15933  14D6  0801               	movf	1,w
 15934  14D7  0021               	movlb	1	; select bank1
 15935  14D8  0668               	xorwf	_currentChannel^(0+128),w
 15936  14D9  1903               	skipnz
 15937  14DA  2CDE               	goto	l8985
 15938  14DB                     l8983:	
 15939                           
 15940                           ;miwi_p2p.c: 514: {
 15941                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
 15942  14DB  27BB  3190         	fcall	_MiMAC_DiscardPacket
 15943                           
 15944                           ;miwi_p2p.c: 516: break;
 15945  14DD  2F25               	goto	l9179
 15946  14DE                     l8985:	
 15947                           
 15948                           ;miwi_p2p.c: 517: }
 15949                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
 15950  14DE  3003               	movlw	3
 15951  14DF  066B               	xorwf	_ConnMode^(0+128),w
 15952  14E0  1903               	btfsc	3,2
 15953  14E1  2CDB               	goto	l8983
 15954                           
 15955                           ;miwi_p2p.c: 525: }
 15956                           ;miwi_p2p.c: 529: if( rxMessage.SourcePANID.Val != 0xFFFF &&
 15957                           ;miwi_p2p.c: 530: rxMessage.SourcePANID.Val != myPANID.Val &&
 15958                           ;miwi_p2p.c: 531: rxMessage.PayloadSize > 2)
 15959  14E2  0022               	movlb	2	; select bank2
 15960  14E3  0F21               	incfsz	(_rxMessage^(0+256)+1),w
 15961  14E4  2CE8               	goto	l8991
 15962  14E5  0A22               	incf	((_rxMessage+1)^(0+256)+1),w
 15963  14E6  1903               	btfsc	3,2
 15964  14E7  2CFA               	goto	l8997
 15965  14E8                     l8991:	
 15966  14E8  0021               	movlb	1	; select bank1
 15967  14E9  0861               	movf	(_myPANID+1)^(0+128),w
 15968  14EA  0022               	movlb	2	; select bank2
 15969  14EB  0622               	xorwf	((_rxMessage+1)^(0+256)+1),w
 15970  14EC  1D03               	skipz
 15971  14ED  2CF2               	goto	u8085
 15972  14EE  0021               	movlb	1	; select bank1
 15973  14EF  0860               	movf	_myPANID^(0+128),w
 15974  14F0  0022               	movlb	2	; select bank2
 15975  14F1  0621               	xorwf	(_rxMessage^(0+256)+1),w
 15976  14F2                     u8085:	
 15977  14F2  1903               	skipnz
 15978  14F3  2CFA               	goto	l8997
 15979  14F4  3003               	movlw	3
 15980  14F5  0227               	subwf	(_rxMessage^(0+256)+7),w
 15981  14F6  1C03               	skipc
 15982  14F7  2CFA               	goto	l8997
 15983                           
 15984                           ;miwi_p2p.c: 532: {
 15985                           ;miwi_p2p.c: 533: status = 0xF2;
 15986  14F8  30F2               	movlw	242
 15987  14F9  2CFD               	goto	L2
 15988  14FA                     l8997:	
 15989                           ;miwi_p2p.c: 534: }
 15990                           
 15991                           
 15992                           ;miwi_p2p.c: 535: else
 15993                           ;miwi_p2p.c: 537: {
 15994                           ;miwi_p2p.c: 540: status = AddConnection();
 15995  14FA  3185  25F2  3190   	fcall	_AddConnection
 15996  14FD                     L2:	
 15997  14FD  0021               	movlb	1	; select bank1
 15998  14FE  00BC               	movwf	P2PTasks@status^(0+128)
 15999                           
 16000                           ;miwi_p2p.c: 541: }
 16001                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
 16002  14FF  0B6B               	decfsz	_ConnMode^(0+128),w
 16003  1500  2D0A               	goto	l9015
 16004  1501  033C               	decf	P2PTasks@status^(0+128),w
 16005  1502  1903               	btfsc	3,2
 16006  1503  2D0A               	goto	l9015
 16007  1504  3002               	movlw	2
 16008  1505  063C               	xorwf	P2PTasks@status^(0+128),w
 16009  1506  1903               	btfsc	3,2
 16010  1507  2D0A               	goto	l9015
 16011                           
 16012                           ;miwi_p2p.c: 559: {
 16013                           ;miwi_p2p.c: 560: status = 0xF3;
 16014  1508  30F3               	movlw	243
 16015  1509  00BC               	movwf	P2PTasks@status^(0+128)
 16016  150A                     l9015:	
 16017                           
 16018                           ;miwi_p2p.c: 568: }
 16019                           ;miwi_p2p.c: 572: {TxData = 0;};
 16020  150A  01DA               	clrf	_TxData^(0+128)
 16021                           
 16022                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
 16023  150B  085A               	movf	_TxData^(0+128),w
 16024  150C  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16025  150D  0086               	movwf	6
 16026  150E  3002               	movlw	2	; select bank4/5
 16027  150F  0087               	movwf	7
 16028  1510  3091               	movlw	145
 16029  1511  0081               	movwf	1
 16030  1512  0ADA               	incf	_TxData^(0+128),f
 16031                           
 16032                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
 16033  1513  085A               	movf	_TxData^(0+128),w
 16034  1514  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16035  1515  0086               	movwf	6
 16036  1516  083C               	movf	P2PTasks@status^(0+128),w
 16037  1517  0081               	movwf	1
 16038  1518  0ADA               	incf	_TxData^(0+128),f
 16039                           
 16040                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
 16041  1519  085A               	movf	_TxData^(0+128),w
 16042  151A  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16043  151B  0086               	movwf	6
 16044  151C  0855               	movf	_MyindexinPC^(0+128),w
 16045  151D  0081               	movwf	1
 16046  151E  0ADA               	incf	_TxData^(0+128),f
 16047                           
 16048                           ;miwi_p2p.c: 576: if( status == 0x00 ||
 16049                           ;miwi_p2p.c: 577: status == 0x01 )
 16050  151F  083C               	movf	P2PTasks@status^(0+128),w
 16051  1520  1903               	btfsc	3,2
 16052  1521  2D24               	goto	l9033
 16053  1522  0B3C               	decfsz	P2PTasks@status^(0+128),w
 16054  1523  2D3C               	goto	l9051
 16055  1524                     l9033:	
 16056                           
 16057                           ;miwi_p2p.c: 578: {
 16058                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
 16059  1524  085A               	movf	_TxData^(0+128),w
 16060  1525  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16061  1526  0086               	movwf	6
 16062  1527  3002               	movlw	2	; select bank4/5
 16063  1528  0087               	movwf	7
 16064  1529  0856               	movf	_P2PCapacityInfo^(0+128),w
 16065  152A  0081               	movwf	1
 16066  152B  0ADA               	incf	_TxData^(0+128),f
 16067                           
 16068                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
 16069  152C  01BD               	clrf	P2PTasks@i^(0+128)
 16070  152D                     l9043:	
 16071                           
 16072                           ;miwi_p2p.c: 582: {
 16073                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
 16074  152D  085A               	movf	_TxData^(0+128),w
 16075  152E  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16076  152F  0086               	movwf	6
 16077  1530  3002               	movlw	2	; select bank4/5
 16078  1531  0087               	movwf	7
 16079  1532  083D               	movf	P2PTasks@i^(0+128),w
 16080  1533  3EE9               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 16081  1534  0084               	movwf	4
 16082  1535  0185               	clrf	5
 16083  1536  0800               	movf	0,w
 16084  1537  0081               	movwf	1
 16085  1538  0ADA               	incf	_TxData^(0+128),f
 16086  1539  0ABD               	incf	P2PTasks@i^(0+128),f
 16087  153A  1903               	btfsc	3,2
 16088  153B  2D2D               	goto	l9043
 16089  153C                     l9051:	
 16090                           
 16091                           ;miwi_p2p.c: 584: }
 16092                           ;miwi_p2p.c: 586: }
 16093                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
 16094  153C  27BB               	fcall	_MiMAC_DiscardPacket
 16095                           
 16096                           ;miwi_p2p.c: 600: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 16097  153D  0022               	movlb	2	; select bank2
 16098  153E  0822               	movf	((_rxMessage+1)^(0+256)+1),w
 16099  153F  0020               	movlb	0	; select bank0
 16100  1540  00D4               	movwf	SendPacket@DestinationPANID+1
 16101  1541  0022               	movlb	2	; select bank2
 16102  1542  0821               	movf	(_rxMessage^(0+256)+1),w
 16103  1543  0020               	movlb	0	; select bank0
 16104  1544  00D3               	movwf	SendPacket@DestinationPANID
 16105  1545  0022               	movlb	2	; select bank2
 16106  1546  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 16107  1547  0020               	movlb	0	; select bank0
 16108  1548  00D6               	movwf	SendPacket@DestinationAddress+1
 16109  1549  0022               	movlb	2	; select bank2
 16110  154A  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 16111  154B  0020               	movlb	0	; select bank0
 16112  154C  00D5               	movwf	SendPacket@DestinationAddress
 16113  154D  3000               	movlw	0
 16114  154E  01D7               	clrf	SendPacket@isCommand
 16115  154F  0AD7               	incf	SendPacket@isCommand,f
 16116  1550  0022               	movlb	2	; select bank2
 16117  1551  19A0               	btfsc	_rxMessage^(0+256),3
 16118  1552  3001               	movlw	1
 16119  1553  0020               	movlb	0	; select bank0
 16120  1554  00D8               	movwf	SendPacket@SecurityEnabled
 16121  1555  3000               	movlw	0
 16122  1556  319A  22D1  3190   	fcall	_SendPacket
 16123                           
 16124                           ;miwi_p2p.c: 610: if( status == 0x00 )
 16125  1559  083C               	movf	P2PTasks@status^(0+128),w
 16126  155A  1D03               	btfss	3,2
 16127  155B  2CDB               	goto	l8983
 16128                           
 16129                           ;miwi_p2p.c: 611: {
 16130                           ;miwi_p2p.c: 612: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
 16131  155C  0853               	movf	_LatestConnection^(0+128),w
 16132  155D  0020               	movlb	0	; select bank0
 16133  155E  00AE               	movwf	___wmul@multiplier
 16134  155F  300A               	movlw	10
 16135  1560  01AF               	clrf	___wmul@multiplier+1
 16136  1561  00B0               	movwf	___wmul@multiplicand
 16137  1562  01B1               	clrf	___wmul@multiplicand+1
 16138  1563  318F  275B  3190   	fcall	___wmul
 16139  1566  082F               	movf	?___wmul+1,w
 16140  1567  00B7               	movwf	NVMWrite@addr+1
 16141  1568  082E               	movf	?___wmul,w
 16142  1569  00B6               	movwf	NVMWrite@addr
 16143  156A  0863               	movf	_nvmConnectionTable,w
 16144  156B  07B6               	addwf	NVMWrite@addr,f
 16145  156C  0864               	movf	_nvmConnectionTable+1,w
 16146  156D  3DB7               	addwfc	NVMWrite@addr+1,f
 16147  156E  300A               	movlw	10
 16148  156F  00A9               	movwf	___bmul@multiplicand
 16149  1570  0021               	movlb	1	; select bank1
 16150  1571  0853               	movf	_LatestConnection^(0+128),w
 16151  1572  2731  3190         	fcall	___bmul
 16152  1574  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16153  1575  00B4               	movwf	NVMWrite@source
 16154  1576  3001               	movlw	1
 16155  1577  00B5               	movwf	NVMWrite@source+1
 16156  1578  300A               	movlw	10
 16157  1579  00B8               	movwf	NVMWrite@count
 16158  157A  01B9               	clrf	NVMWrite@count+1
 16159  157B  2755  3190         	fcall	_NVMWrite
 16160                           
 16161                           ;miwi_p2p.c: 613: }
 16162  157D  2F25               	goto	l9179
 16163  157E                     l9061:	
 16164                           
 16165                           ;miwi_p2p.c: 631: {
 16166                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
 16167  157E  3003               	movlw	3
 16168  157F  0021               	movlb	1	; select bank1
 16169  1580  026B               	subwf	_ConnMode^(0+128),w
 16170  1581  1803               	btfsc	3,0
 16171  1582  2CDB               	goto	l8983
 16172                           
 16173                           ;miwi_p2p.c: 636: }
 16174                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
 16175  1583  0022               	movlb	2	; select bank2
 16176  1584  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 16177  1585  0086               	movwf	6
 16178  1586  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 16179  1587  0087               	movwf	7
 16180  1588  3141               	addfsr 1,1
 16181  1589  0801               	movf	1,w
 16182  158A  0021               	movlb	1	; select bank1
 16183  158B  0668               	xorwf	_currentChannel^(0+128),w
 16184  158C  1D03               	btfss	3,2
 16185  158D  2CDB               	goto	l8983
 16186                           
 16187                           ;miwi_p2p.c: 641: }
 16188                           ;miwi_p2p.c: 643: {TxData = 0;};
 16189  158E  01DA               	clrf	_TxData^(0+128)
 16190                           
 16191                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
 16192  158F  085A               	movf	_TxData^(0+128),w
 16193  1590  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16194  1591  0086               	movwf	6
 16195  1592  3002               	movlw	2	; select bank4/5
 16196  1593  0087               	movwf	7
 16197  1594  3097               	movlw	151
 16198  1595  0081               	movwf	1
 16199  1596  0ADA               	incf	_TxData^(0+128),f
 16200                           
 16201                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
 16202  1597  085A               	movf	_TxData^(0+128),w
 16203  1598  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16204  1599  0086               	movwf	6
 16205  159A  0856               	movf	_P2PCapacityInfo^(0+128),w
 16206  159B  0081               	movwf	1
 16207  159C  0ADA               	incf	_TxData^(0+128),f
 16208                           
 16209                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
 16210  159D  01BD               	clrf	P2PTasks@i^(0+128)
 16211  159E                     l9083:	
 16212                           
 16213                           ;miwi_p2p.c: 648: {
 16214                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
 16215  159E  085A               	movf	_TxData^(0+128),w
 16216  159F  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16217  15A0  0086               	movwf	6
 16218  15A1  3002               	movlw	2	; select bank4/5
 16219  15A2  0087               	movwf	7
 16220  15A3  083D               	movf	P2PTasks@i^(0+128),w
 16221  15A4  3EE9               	addlw	(low (_AdditionalNodeID| 0))& (0+255)
 16222  15A5  0084               	movwf	4
 16223  15A6  0185               	clrf	5
 16224  15A7  0800               	movf	0,w
 16225  15A8  0081               	movwf	1
 16226  15A9  0ADA               	incf	_TxData^(0+128),f
 16227  15AA  0ABD               	incf	P2PTasks@i^(0+128),f
 16228  15AB  1903               	btfsc	3,2
 16229  15AC  2D9E               	goto	l9083
 16230                           
 16231                           ;miwi_p2p.c: 650: }
 16232                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
 16233  15AD  27BB               	fcall	_MiMAC_DiscardPacket
 16234                           
 16235                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 16236  15AE  0022               	movlb	2	; select bank2
 16237  15AF  0822               	movf	((_rxMessage+1)^(0+256)+1),w
 16238  15B0  0020               	movlb	0	; select bank0
 16239  15B1  00D4               	movwf	SendPacket@DestinationPANID+1
 16240  15B2  0022               	movlb	2	; select bank2
 16241  15B3  0821               	movf	(_rxMessage^(0+256)+1),w
 16242  15B4  0020               	movlb	0	; select bank0
 16243  15B5  00D3               	movwf	SendPacket@DestinationPANID
 16244  15B6  0022               	movlb	2	; select bank2
 16245  15B7  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 16246  15B8  0020               	movlb	0	; select bank0
 16247  15B9  00D6               	movwf	SendPacket@DestinationAddress+1
 16248  15BA  0022               	movlb	2	; select bank2
 16249  15BB  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 16250  15BC  0020               	movlb	0	; select bank0
 16251  15BD  00D5               	movwf	SendPacket@DestinationAddress
 16252  15BE  3000               	movlw	0
 16253  15BF  01D7               	clrf	SendPacket@isCommand
 16254  15C0  0AD7               	incf	SendPacket@isCommand,f
 16255  15C1  0022               	movlb	2	; select bank2
 16256  15C2  19A0               	btfsc	_rxMessage^(0+256),3
 16257  15C3  3001               	movlw	1
 16258  15C4  0020               	movlb	0	; select bank0
 16259  15C5  00D8               	movwf	SendPacket@SecurityEnabled
 16260  15C6  3000               	movlw	0
 16261  15C7  319A  22D1  3190   	fcall	_SendPacket
 16262                           
 16263                           ;miwi_p2p.c: 668: }
 16264                           ;miwi_p2p.c: 669: break;
 16265  15CA  2F25               	goto	l9179
 16266  15CB                     l9095:	
 16267                           
 16268                           ;miwi_p2p.c: 677: {
 16269                           ;miwi_p2p.c: 678: {TxData = 0;};
 16270  15CB  0021               	movlb	1	; select bank1
 16271  15CC  01DA               	clrf	_TxData^(0+128)
 16272                           
 16273                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
 16274  15CD  085A               	movf	_TxData^(0+128),w
 16275  15CE  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16276  15CF  0086               	movwf	6
 16277  15D0  3002               	movlw	2	; select bank4/5
 16278  15D1  0087               	movwf	7
 16279  15D2  3092               	movlw	146
 16280  15D3  0081               	movwf	1
 16281  15D4  0ADA               	incf	_TxData^(0+128),f
 16282                           
 16283                           ;miwi_p2p.c: 681: for(i = 0; i < 5; i++)
 16284  15D5  01BD               	clrf	P2PTasks@i^(0+128)
 16285  15D6                     l9107:	
 16286                           
 16287                           ;miwi_p2p.c: 682: {
 16288                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
 16289  15D6  300A               	movlw	10
 16290  15D7  0020               	movlb	0	; select bank0
 16291  15D8  00A9               	movwf	___bmul@multiplicand
 16292  15D9  0021               	movlb	1	; select bank1
 16293  15DA  083D               	movf	P2PTasks@i^(0+128),w
 16294  15DB  2731  3190         	fcall	___bmul
 16295  15DD  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 16296  15DE  0086               	movwf	6
 16297  15DF  3001               	movlw	1	; select bank3/4
 16298  15E0  0087               	movwf	7
 16299  15E1  1F81               	btfss	1,7
 16300  15E2  2E2D               	goto	l9117
 16301                           
 16302                           ;miwi_p2p.c: 685: {
 16303                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 16304  15E3  0022               	movlb	2	; select bank2
 16305  15E4  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 16306  15E5  0020               	movlb	0	; select bank0
 16307  15E6  00AD               	movwf	isSameAddress@Address1+1
 16308  15E7  0022               	movlb	2	; select bank2
 16309  15E8  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 16310  15E9  0020               	movlb	0	; select bank0
 16311  15EA  00AC               	movwf	isSameAddress@Address1
 16312  15EB  300A               	movlw	10
 16313  15EC  00A9               	movwf	___bmul@multiplicand
 16314  15ED  0021               	movlb	1	; select bank1
 16315  15EE  083D               	movf	P2PTasks@i^(0+128),w
 16316  15EF  2731  3190         	fcall	___bmul
 16317  15F1  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16318  15F2  00AE               	movwf	isSameAddress@Address2
 16319  15F3  27D4  3190         	fcall	_isSameAddress
 16320  15F5  3A00               	xorlw	0
 16321  15F6  1903               	skipnz
 16322  15F7  2E2D               	goto	l9117
 16323                           
 16324                           ;miwi_p2p.c: 688: {
 16325                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
 16326  15F8  300A               	movlw	10
 16327  15F9  00A9               	movwf	___bmul@multiplicand
 16328  15FA  0021               	movlb	1	; select bank1
 16329  15FB  083D               	movf	P2PTasks@i^(0+128),w
 16330  15FC  2731               	fcall	___bmul
 16331  15FD  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 16332  15FE  0086               	movwf	6
 16333  15FF  3001               	movlw	1	; select bank3/4
 16334  1600  0087               	movwf	7
 16335  1601  0181               	clrf	1
 16336                           
 16337                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 16338  1602  0021               	movlb	1	; select bank1
 16339  1603  083D               	movf	P2PTasks@i^(0+128),w
 16340  1604  0020               	movlb	0	; select bank0
 16341  1605  00AE               	movwf	___wmul@multiplier
 16342  1606  300A               	movlw	10
 16343  1607  01AF               	clrf	___wmul@multiplier+1
 16344  1608  00B0               	movwf	___wmul@multiplicand
 16345  1609  01B1               	clrf	___wmul@multiplicand+1
 16346  160A  318F  275B  3190   	fcall	___wmul
 16347  160D  082F               	movf	?___wmul+1,w
 16348  160E  00B7               	movwf	NVMWrite@addr+1
 16349  160F  082E               	movf	?___wmul,w
 16350  1610  00B6               	movwf	NVMWrite@addr
 16351  1611  0863               	movf	_nvmConnectionTable,w
 16352  1612  07B6               	addwf	NVMWrite@addr,f
 16353  1613  0864               	movf	_nvmConnectionTable+1,w
 16354  1614  3DB7               	addwfc	NVMWrite@addr+1,f
 16355  1615  300A               	movlw	10
 16356  1616  00A9               	movwf	___bmul@multiplicand
 16357  1617  0021               	movlb	1	; select bank1
 16358  1618  083D               	movf	P2PTasks@i^(0+128),w
 16359  1619  2731  3190         	fcall	___bmul
 16360  161B  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16361  161C  00B4               	movwf	NVMWrite@source
 16362  161D  3001               	movlw	1
 16363  161E  00B5               	movwf	NVMWrite@source+1
 16364  161F  300A               	movlw	10
 16365  1620  00B8               	movwf	NVMWrite@count
 16366  1621  01B9               	clrf	NVMWrite@count+1
 16367  1622  2755  3190         	fcall	_NVMWrite
 16368                           
 16369                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
 16370  1624  0021               	movlb	1	; select bank1
 16371  1625  085A               	movf	_TxData^(0+128),w
 16372  1626  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16373  1627  0086               	movwf	6
 16374  1628  3002               	movlw	2	; select bank4/5
 16375  1629  0087               	movwf	7
 16376  162A  0181               	clrf	1
 16377  162B  0ADA               	incf	_TxData^(0+128),f
 16378                           
 16379                           ;miwi_p2p.c: 697: break;
 16380  162C  2E33               	goto	l9121
 16381  162D                     l9117:	
 16382  162D  0021               	movlb	1	; select bank1
 16383  162E  3005               	movlw	5
 16384  162F  0ABD               	incf	P2PTasks@i^(0+128),f
 16385  1630  023D               	subwf	P2PTasks@i^(0+128),w
 16386  1631  1C03               	skipc
 16387  1632  2DD6               	goto	l9107
 16388  1633                     l9121:	
 16389                           
 16390                           ;miwi_p2p.c: 698: }
 16391                           ;miwi_p2p.c: 699: }
 16392                           ;miwi_p2p.c: 700: }
 16393                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
 16394  1633  27BB  3190         	fcall	_MiMAC_DiscardPacket
 16395                           
 16396                           ;miwi_p2p.c: 704: if( i == 5 )
 16397  1635  3005               	movlw	5
 16398  1636  0021               	movlb	1	; select bank1
 16399  1637  063D               	xorwf	P2PTasks@i^(0+128),w
 16400  1638  1D03               	btfss	3,2
 16401  1639  2E42               	goto	l9129
 16402                           
 16403                           ;miwi_p2p.c: 705: {
 16404                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
 16405  163A  085A               	movf	_TxData^(0+128),w
 16406  163B  3E20               	addlw	(low (_TxBuffer| (0+512)))& (0+255)
 16407  163C  0086               	movwf	6
 16408  163D  3002               	movlw	2	; select bank4/5
 16409  163E  0087               	movwf	7
 16410  163F  30F0               	movlw	240
 16411  1640  0081               	movwf	1
 16412  1641  0ADA               	incf	_TxData^(0+128),f
 16413  1642                     l9129:	
 16414                           
 16415                           ;miwi_p2p.c: 708: }
 16416                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
 16417  1642  0022               	movlb	2	; select bank2
 16418  1643  0822               	movf	((_rxMessage+1)^(0+256)+1),w
 16419  1644  0020               	movlb	0	; select bank0
 16420  1645  00D4               	movwf	SendPacket@DestinationPANID+1
 16421  1646  0022               	movlb	2	; select bank2
 16422  1647  0821               	movf	(_rxMessage^(0+256)+1),w
 16423  1648  0020               	movlb	0	; select bank0
 16424  1649  00D3               	movwf	SendPacket@DestinationPANID
 16425  164A  0022               	movlb	2	; select bank2
 16426  164B  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 16427  164C  0020               	movlb	0	; select bank0
 16428  164D  00D6               	movwf	SendPacket@DestinationAddress+1
 16429  164E  0022               	movlb	2	; select bank2
 16430  164F  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 16431  1650  0020               	movlb	0	; select bank0
 16432  1651  00D5               	movwf	SendPacket@DestinationAddress
 16433  1652  3000               	movlw	0
 16434  1653  01D7               	clrf	SendPacket@isCommand
 16435  1654  0AD7               	incf	SendPacket@isCommand,f
 16436  1655  0022               	movlb	2	; select bank2
 16437  1656  19A0               	btfsc	_rxMessage^(0+256),3
 16438  1657  3001               	movlw	1
 16439  1658  0020               	movlb	0	; select bank0
 16440  1659  00D8               	movwf	SendPacket@SecurityEnabled
 16441  165A  3000               	movlw	0
 16442  165B  319A  22D1  3190   	fcall	_SendPacket
 16443                           
 16444                           ;miwi_p2p.c: 723: }
 16445                           ;miwi_p2p.c: 724: break;
 16446  165E  2F25               	goto	l9179
 16447  165F                     l9131:	
 16448                           
 16449                           ;miwi_p2p.c: 732: case 0x01:
 16450                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
 16451  165F  0021               	movlb	1	; select bank1
 16452  1660  0F60               	incfsz	_myPANID^(0+128),w
 16453  1661  2E87               	goto	l9139
 16454  1662  0A61               	incf	(_myPANID+1)^(0+128),w
 16455  1663  1D03               	btfss	3,2
 16456  1664  2E87               	goto	l9139
 16457                           
 16458                           ;miwi_p2p.c: 735: {
 16459                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
 16460  1665  0022               	movlb	2	; select bank2
 16461  1666  0822               	movf	((_rxMessage+1)^(0+256)+1),w
 16462  1667  0021               	movlb	1	; select bank1
 16463  1668  00E1               	movwf	(_myPANID+1)^(0+128)
 16464  1669  0022               	movlb	2	; select bank2
 16465  166A  0821               	movf	(_rxMessage^(0+256)+1),w
 16466  166B  0021               	movlb	1	; select bank1
 16467  166C  00E0               	movwf	_myPANID^(0+128)
 16468                           
 16469                           ;miwi_p2p.c: 737: {
 16470                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
 16471  166D  30FF               	movlw	255
 16472  166E  00BA               	movwf	P2PTasks@tmp^(0+128)
 16473  166F  00BB               	movwf	(P2PTasks@tmp^(0+128)+1)
 16474                           
 16475                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
 16476  1670  30E0               	movlw	(low (_myPANID| 0))& (0+255)
 16477  1671  0020               	movlb	0	; select bank0
 16478  1672  00AD               	movwf	MiMAC_SetAltAddress@PANID
 16479  1673  30BA               	movlw	(low (P2PTasks@tmp| 0))& (0+255)
 16480  1674  319F  274A  3190   	fcall	_MiMAC_SetAltAddress
 16481                           
 16482                           ;miwi_p2p.c: 740: }
 16483                           ;miwi_p2p.c: 742: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
 16484  1677  30E0               	movlw	low _myPANID
 16485  1678  00B4               	movwf	NVMWrite@source
 16486  1679  3000               	movlw	high _myPANID
 16487  167A  00B5               	movwf	NVMWrite@source+1
 16488  167B  0021               	movlb	1	; select bank1
 16489  167C  0867               	movf	(_nvmMyPANID+1)^(0+128),w
 16490  167D  0020               	movlb	0	; select bank0
 16491  167E  00B7               	movwf	NVMWrite@addr+1
 16492  167F  0021               	movlb	1	; select bank1
 16493  1680  0866               	movf	_nvmMyPANID^(0+128),w
 16494  1681  0020               	movlb	0	; select bank0
 16495  1682  00B6               	movwf	NVMWrite@addr
 16496  1683  3002               	movlw	2
 16497  1684  00B8               	movwf	NVMWrite@count
 16498  1685  01B9               	clrf	NVMWrite@count+1
 16499  1686  2755               	fcall	_NVMWrite
 16500  1687                     l9139:	
 16501                           
 16502                           ;miwi_p2p.c: 744: }
 16503                           ;miwi_p2p.c: 746: AddConnection();
 16504  1687  3185  25F2  3190   	fcall	_AddConnection
 16505                           
 16506                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
 16507  168A  0021               	movlb	1	; select bank1
 16508  168B  14D7               	bsf	_P2PStatus^(0+128),1	;volatile
 16509                           
 16510                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
 16511  168C  319A  22A5  3190   	fcall	_MiWi_TickGet
 16512  168F  082C               	movf	?_MiWi_TickGet+3,w
 16513  1690  0022               	movlb	2	; select bank2
 16514  1691  00B1               	movwf	(_nvmDelayTick+3)^(0+256)
 16515  1692  0020               	movlb	0	; select bank0
 16516  1693  082B               	movf	?_MiWi_TickGet+2,w
 16517  1694  0022               	movlb	2	; select bank2
 16518  1695  00B0               	movwf	(_nvmDelayTick+2)^(0+256)
 16519  1696  0020               	movlb	0	; select bank0
 16520  1697  082A               	movf	?_MiWi_TickGet+1,w
 16521  1698  0022               	movlb	2	; select bank2
 16522  1699  00AF               	movwf	(_nvmDelayTick+1)^(0+256)
 16523  169A  0020               	movlb	0	; select bank0
 16524  169B  0829               	movf	?_MiWi_TickGet,w
 16525  169C  0022               	movlb	2	; select bank2
 16526  169D  00AE               	movwf	_nvmDelayTick^(0+256)
 16527                           
 16528                           ;miwi_p2p.c: 756: break;
 16529  169E  2CDB               	goto	l8983
 16530  169F                     l9147:	
 16531  169F  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 16532  16A0  0086               	movwf	6
 16533  16A1  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 16534  16A2  0087               	movwf	7
 16535  16A3  3141               	addfsr 1,1
 16536  16A4  0801               	movf	1,w
 16537                           
 16538                           ; Switch size 1, requested type "speed"
 16539                           ; Number of cases is 2, Range of values is 0 to 1
 16540                           ; switch strategies available:
 16541                           ; Name         Instructions Cycles
 16542                           ; simple_byte            7     4 (average)
 16543                           ; direct_byte           10     6 (fixed)
 16544                           ; jumptable            260     6 (fixed)
 16545                           ;	Chosen strategy is simple_byte
 16546  16A5  3A00               	xorlw	0	; case 0
 16547  16A6  1903               	skipnz
 16548  16A7  2E5F               	goto	l9131
 16549  16A8  3A01               	xorlw	1	; case 1
 16550  16A9  1903               	skipnz
 16551  16AA  2E5F               	goto	l9131
 16552  16AB  2CDB               	goto	l8983
 16553  16AC                     l433:	
 16554                           ;miwi_p2p.c: 765: case 0x97:
 16555                           
 16556                           
 16557                           ;miwi_p2p.c: 766: {
 16558                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
 16559  16AC  0021               	movlb	1	; select bank1
 16560  16AD  1ED7               	btfss	_P2PStatus^(0+128),5	;volatile
 16561  16AE  2CDB               	goto	l8983
 16562                           
 16563                           ;miwi_p2p.c: 768: {
 16564                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
 16565  16AF  12D7               	bcf	_P2PStatus^(0+128),5	;volatile
 16566  16B0  2CDB               	goto	l8983
 16567  16B1                     l9155:	
 16568                           
 16569                           ;miwi_p2p.c: 817: {
 16570                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
 16571  16B1  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 16572  16B2  0086               	movwf	6
 16573  16B3  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 16574  16B4  0087               	movwf	7
 16575  16B5  3141               	addfsr 1,1
 16576  16B6  0801               	movf	1,w
 16577  16B7  1D03               	btfss	3,2
 16578  16B8  2CDB               	goto	l8983
 16579                           
 16580                           ;miwi_p2p.c: 819: {
 16581                           ;miwi_p2p.c: 820: for(i = 0; i < 5; i++)
 16582  16B9  0021               	movlb	1	; select bank1
 16583  16BA  01BD               	clrf	P2PTasks@i^(0+128)
 16584  16BB                     l9163:	
 16585                           
 16586                           ;miwi_p2p.c: 821: {
 16587                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
 16588  16BB  300A               	movlw	10
 16589  16BC  0020               	movlb	0	; select bank0
 16590  16BD  00A9               	movwf	___bmul@multiplicand
 16591  16BE  0021               	movlb	1	; select bank1
 16592  16BF  083D               	movf	P2PTasks@i^(0+128),w
 16593  16C0  2731  3190         	fcall	___bmul
 16594  16C2  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 16595  16C3  0086               	movwf	6
 16596  16C4  3001               	movlw	1	; select bank3/4
 16597  16C5  0087               	movwf	7
 16598  16C6  1F81               	btfss	1,7
 16599  16C7  2F0A               	goto	l9169
 16600                           
 16601                           ;miwi_p2p.c: 824: {
 16602                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
 16603  16C8  0022               	movlb	2	; select bank2
 16604  16C9  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 16605  16CA  0020               	movlb	0	; select bank0
 16606  16CB  00AD               	movwf	isSameAddress@Address1+1
 16607  16CC  0022               	movlb	2	; select bank2
 16608  16CD  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 16609  16CE  0020               	movlb	0	; select bank0
 16610  16CF  00AC               	movwf	isSameAddress@Address1
 16611  16D0  300A               	movlw	10
 16612  16D1  00A9               	movwf	___bmul@multiplicand
 16613  16D2  0021               	movlb	1	; select bank1
 16614  16D3  083D               	movf	P2PTasks@i^(0+128),w
 16615  16D4  2731  3190         	fcall	___bmul
 16616  16D6  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16617  16D7  00AE               	movwf	isSameAddress@Address2
 16618  16D8  27D4  3190         	fcall	_isSameAddress
 16619  16DA  3A00               	xorlw	0
 16620  16DB  1903               	skipnz
 16621  16DC  2F0A               	goto	l9169
 16622                           
 16623                           ;miwi_p2p.c: 827: {
 16624                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
 16625  16DD  300A               	movlw	10
 16626  16DE  00A9               	movwf	___bmul@multiplicand
 16627  16DF  0021               	movlb	1	; select bank1
 16628  16E0  083D               	movf	P2PTasks@i^(0+128),w
 16629  16E1  2731               	fcall	___bmul
 16630  16E2  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 16631  16E3  0086               	movwf	6
 16632  16E4  3001               	movlw	1	; select bank3/4
 16633  16E5  0087               	movwf	7
 16634  16E6  0181               	clrf	1
 16635                           
 16636                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 16637  16E7  0021               	movlb	1	; select bank1
 16638  16E8  083D               	movf	P2PTasks@i^(0+128),w
 16639  16E9  0020               	movlb	0	; select bank0
 16640  16EA  00AE               	movwf	___wmul@multiplier
 16641  16EB  300A               	movlw	10
 16642  16EC  01AF               	clrf	___wmul@multiplier+1
 16643  16ED  00B0               	movwf	___wmul@multiplicand
 16644  16EE  01B1               	clrf	___wmul@multiplicand+1
 16645  16EF  318F  275B  3190   	fcall	___wmul
 16646  16F2  082F               	movf	?___wmul+1,w
 16647  16F3  00B7               	movwf	NVMWrite@addr+1
 16648  16F4  082E               	movf	?___wmul,w
 16649  16F5  00B6               	movwf	NVMWrite@addr
 16650  16F6  0863               	movf	_nvmConnectionTable,w
 16651  16F7  07B6               	addwf	NVMWrite@addr,f
 16652  16F8  0864               	movf	_nvmConnectionTable+1,w
 16653  16F9  3DB7               	addwfc	NVMWrite@addr+1,f
 16654  16FA  300A               	movlw	10
 16655  16FB  00A9               	movwf	___bmul@multiplicand
 16656  16FC  0021               	movlb	1	; select bank1
 16657  16FD  083D               	movf	P2PTasks@i^(0+128),w
 16658  16FE  2731  3190         	fcall	___bmul
 16659  1700  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 16660  1701  00B4               	movwf	NVMWrite@source
 16661  1702  3001               	movlw	1
 16662  1703  00B5               	movwf	NVMWrite@source+1
 16663  1704  300A               	movlw	10
 16664  1705  00B8               	movwf	NVMWrite@count
 16665  1706  01B9               	clrf	NVMWrite@count+1
 16666  1707  2755  3190         	fcall	_NVMWrite
 16667                           
 16668                           ;miwi_p2p.c: 833: break;
 16669  1709  2CDB               	goto	l8983
 16670  170A                     l9169:	
 16671  170A  0021               	movlb	1	; select bank1
 16672  170B  3005               	movlw	5
 16673  170C  0ABD               	incf	P2PTasks@i^(0+128),f
 16674  170D  023D               	subwf	P2PTasks@i^(0+128),w
 16675  170E  1803               	btfsc	3,0
 16676  170F  2CDB               	goto	l8983
 16677  1710  2EBB               	goto	l9163
 16678  1711                     l441:	
 16679                           ;miwi_p2p.c: 1095: default:
 16680                           
 16681  1711  2F23               	goto	l396
 16682  1712                     l9177:	
 16683                           ;miwi_p2p.c: 1098: break;
 16684                           
 16685                           ;miwi_p2p.c: 1097: P2PStatus.bits.RxHasUserData = 1;
 16686                           
 16687  1712  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 16688  1713  0086               	movwf	6
 16689  1714  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 16690  1715  0087               	movwf	7
 16691  1716  0801               	movf	1,w
 16692                           
 16693                           ; Switch size 1, requested type "speed"
 16694                           ; Number of cases is 6, Range of values is 129 to 151
 16695                           ; switch strategies available:
 16696                           ; Name         Instructions Cycles
 16697                           ; direct_byte           55     9 (fixed)
 16698                           ; simple_byte           19    10 (average)
 16699                           ; jumptable            263     9 (fixed)
 16700                           ;	Chosen strategy is direct_byte
 16701  1717  3E7F               	addlw	-129
 16702  1718  1C03               	skipc
 16703  1719  2F23               	goto	l396
 16704  171A  0084               	movwf	4
 16705  171B  3017               	movlw	23
 16706  171C  0204               	subwf	4,w
 16707  171D  1803               	skipnc
 16708  171E  2F23               	goto	l396
 16709  171F  3187               	movlp	high S10181
 16710  1720  3504               	lslf	4,w
 16711  1721  3EA1               	addlw	low S10181
 16712  1722  0082               	movwf	2
 16713  1723                     l396:	
 16714                           
 16715                           ;miwi_p2p.c: 1101: else
 16716                           ;miwi_p2p.c: 1102: {
 16717                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
 16718  1723  0021               	movlb	1	; select bank1
 16719  1724  15D7               	bsf	_P2PStatus^(0+128),3	;volatile
 16720  1725                     l9179:	
 16721                           
 16722                           ;miwi_p2p.c: 1104: }
 16723                           ;miwi_p2p.c: 1112: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
 16724  1725  0022               	movlb	2	; select bank2
 16725  1726  0827               	movf	(_rxMessage^(0+256)+7),w
 16726  1727  1903               	btfsc	3,2
 16727  1728  2F2E               	goto	l445
 16728  1729  0021               	movlb	1	; select bank1
 16729  172A  1A57               	btfsc	_P2PStatus^(0+128),4	;volatile
 16730  172B  2F2E               	goto	l445
 16731  172C  1ED7               	btfss	_P2PStatus^(0+128),5	;volatile
 16732  172D  0008               	return
 16733  172E                     l445:	
 16734                           
 16735                           ;miwi_p2p.c: 1113: {
 16736                           ;miwi_p2p.c: 1114: P2PStatus.bits.RxHasUserData = 0;
 16737  172E  0021               	movlb	1	; select bank1
 16738  172F  11D7               	bcf	_P2PStatus^(0+128),3	;volatile
 16739                           
 16740                           ;miwi_p2p.c: 1115: MiMAC_DiscardPacket();
 16741  1730  2FBB               	ljmp	l7851
 16742  1731                     __end_of_P2PTasks:	
 16743  1731                     __ptext66:	
 16744 ;; *************** function ___bmul *****************
 16745 ;; Defined at:
 16746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;  multiplier      1    wreg     unsigned char 
 16749 ;;  multiplicand    1    9[BANK0 ] unsigned char 
 16750 ;; Auto vars:     Size  Location     Type
 16751 ;;  multiplier      1   11[BANK0 ] unsigned char 
 16752 ;;  product         1   10[BANK0 ] unsigned char 
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  1    wreg      unsigned char 
 16755 ;; Registers used:
 16756 ;;		wreg, status,2, status,0
 16757 ;; Tracked objects:
 16758 ;;		On entry : 1C/2
 16759 ;;		On exit  : 1F/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16762 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16765 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16766 ;;Total ram usage:        3 bytes
 16767 ;; Hardware stack levels used:    1
 16768 ;; Hardware stack levels required when called:    4
 16769 ;; This function calls:
 16770 ;;		Nothing
 16771 ;; This function is called by:
 16772 ;;		_Total_Connections
 16773 ;;		_P2PTasks
 16774 ;;		_MiApp_ProtocolInit
 16775 ;;		_MiApp_UnicastConnection
 16776 ;;		_DumpConnection
 16777 ;;		_AddConnection
 16778 ;;		_run_p2p_demo
 16779 ;;		_sprintf
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           
 16784                           ;psect for function ___bmul
 16785  1731                     ___bmul:	
 16786                           
 16787                           ;incstack = 0
 16788                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 16789                           ;___bmul@multiplier stored from wreg
 16790  1731  0020               	movlb	0	; select bank0
 16791  1732  00AB               	movwf	___bmul@multiplier
 16792  1733  01AA               	clrf	___bmul@product
 16793  1734  0829               	movf	___bmul@multiplicand,w
 16794  1735  182B               	btfsc	___bmul@multiplier,0
 16795  1736  07AA               	addwf	___bmul@product,f
 16796  1737  35A9               	lslf	___bmul@multiplicand,f
 16797  1738  0829               	movf	___bmul@multiplicand,w
 16798  1739  18AB               	btfsc	___bmul@multiplier,1
 16799  173A  07AA               	addwf	___bmul@product,f
 16800  173B  35A9               	lslf	___bmul@multiplicand,f
 16801  173C  0829               	movf	___bmul@multiplicand,w
 16802  173D  192B               	btfsc	___bmul@multiplier,2
 16803  173E  07AA               	addwf	___bmul@product,f
 16804  173F  35A9               	lslf	___bmul@multiplicand,f
 16805  1740  0829               	movf	___bmul@multiplicand,w
 16806  1741  19AB               	btfsc	___bmul@multiplier,3
 16807  1742  07AA               	addwf	___bmul@product,f
 16808  1743  35A9               	lslf	___bmul@multiplicand,f
 16809  1744  0829               	movf	___bmul@multiplicand,w
 16810  1745  1A2B               	btfsc	___bmul@multiplier,4
 16811  1746  07AA               	addwf	___bmul@product,f
 16812  1747  35A9               	lslf	___bmul@multiplicand,f
 16813  1748  0829               	movf	___bmul@multiplicand,w
 16814  1749  1AAB               	btfsc	___bmul@multiplier,5
 16815  174A  07AA               	addwf	___bmul@product,f
 16816  174B  35A9               	lslf	___bmul@multiplicand,f
 16817  174C  0829               	movf	___bmul@multiplicand,w
 16818  174D  1B2B               	btfsc	___bmul@multiplier,6
 16819  174E  07AA               	addwf	___bmul@product,f
 16820  174F  35A9               	lslf	___bmul@multiplicand,f
 16821  1750  0829               	movf	___bmul@multiplicand,w
 16822  1751  1BAB               	btfsc	___bmul@multiplier,7
 16823  1752  07AA               	addwf	___bmul@product,f
 16824  1753  082A               	movf	___bmul@product,w
 16825  1754  0008               	return
 16826  1755                     __end_of___bmul:	
 16827  1755                     __ptext50:	
 16828 ;; *************** function _NVMWrite *****************
 16829 ;; Defined at:
 16830 ;;		line 656 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 16831 ;; Parameters:    Size  Location     Type
 16832 ;;  source          2   20[BANK0 ] PTR unsigned char 
 16833 ;;		 -> conn_size(1), myPANID(2), ConnMode(1), currentChannel(1), 
 16834 ;;		 -> ConnectionTable(50), 
 16835 ;;  addr            2   22[BANK0 ] unsigned int 
 16836 ;;  count           2   24[BANK0 ] unsigned int 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;  oldGIEH         1   26[BANK0 ] unsigned char 
 16839 ;; Return value:  Size  Location     Type
 16840 ;;                  1    wreg      void 
 16841 ;; Registers used:
 16842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16843 ;; Tracked objects:
 16844 ;;		On entry : 1F/0
 16845 ;;		On exit  : 1F/0
 16846 ;;		Unchanged: 0/0
 16847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16848 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16852 ;;Total ram usage:        7 bytes
 16853 ;; Hardware stack levels used:    1
 16854 ;; Hardware stack levels required when called:    4
 16855 ;; This function calls:
 16856 ;;		Nothing
 16857 ;; This function is called by:
 16858 ;;		_P2PTasks
 16859 ;;		_MiApp_ProtocolInit
 16860 ;;		_MiApp_SetChannel
 16861 ;;		_AddConnection
 16862 ;;		_MiApp_ConnectionMode
 16863 ;; This function uses a non-reentrant model
 16864 ;;
 16865                           
 16866                           
 16867                           ;psect for function _NVMWrite
 16868  1755                     _NVMWrite:	
 16869  1755                     l263:	
 16870                           ;miwi_nvm.c: 658: uint8_t oldGIEH;
 16871                           ;miwi_nvm.c: 664: while(count)
 16872                           
 16873                           ;incstack = 0
 16874                           ; Regs used in _NVMWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 16875                           
 16876  1755  0838               	movf	NVMWrite@count,w
 16877  1756  0439               	iorwf	NVMWrite@count+1,w
 16878  1757  1903               	btfsc	3,2
 16879  1758  0008               	return
 16880                           
 16881                           ;miwi_nvm.c: 665: {
 16882                           ;miwi_nvm.c: 666: EEADRH = addr >> 8;
 16883  1759  0837               	movf	NVMWrite@addr+1,w
 16884  175A  0023               	movlb	3	; select bank3
 16885  175B  0092               	movwf	18	;volatile
 16886                           
 16887                           ;miwi_nvm.c: 667: EEADR = addr;
 16888  175C  0020               	movlb	0	; select bank0
 16889  175D  0837               	movf	NVMWrite@addr+1,w
 16890  175E  0023               	movlb	3	; select bank3
 16891  175F  0092               	movwf	18	;volatile
 16892  1760  0020               	movlb	0	; select bank0
 16893  1761  0836               	movf	NVMWrite@addr,w
 16894  1762  0023               	movlb	3	; select bank3
 16895  1763  0091               	movwf	17	;volatile
 16896                           
 16897                           ;miwi_nvm.c: 668: EEDATA = *source++;
 16898  1764  0020               	movlb	0	; select bank0
 16899  1765  0834               	movf	NVMWrite@source,w
 16900  1766  0086               	movwf	6
 16901  1767  0835               	movf	NVMWrite@source+1,w
 16902  1768  0087               	movwf	7
 16903  1769  0801               	movf	1,w
 16904  176A  0023               	movlb	3	; select bank3
 16905  176B  0093               	movwf	19	;volatile
 16906  176C  0020               	movlb	0	; select bank0
 16907  176D  0AB4               	incf	NVMWrite@source,f
 16908  176E  1903               	skipnz
 16909  176F  0AB5               	incf	NVMWrite@source+1,f
 16910                           
 16911                           ;miwi_nvm.c: 669: EECON1bits.EEPGD = 0;
 16912  1770  0023               	movlb	3	; select bank3
 16913  1771  1395               	bcf	21,7	;volsfr
 16914                           
 16915                           ;miwi_nvm.c: 670: EECON1bits.CFGS = 0;
 16916  1772  1315               	bcf	21,6	;volsfr
 16917                           
 16918                           ;miwi_nvm.c: 671: EECON1bits.WREN = 1;
 16919  1773  1515               	bsf	21,2	;volsfr
 16920                           
 16921                           ;miwi_nvm.c: 672: oldGIEH = INTCONbits.GIE;
 16922  1774  3000               	movlw	0
 16923  1775  1B8B               	btfsc	11,7	;volatile
 16924  1776  3001               	movlw	1
 16925  1777  0020               	movlb	0	; select bank0
 16926  1778  00BA               	movwf	NVMWrite@oldGIEH
 16927                           
 16928                           ;miwi_nvm.c: 673: INTCONbits.GIE = 0;
 16929  1779  138B               	bcf	11,7	;volatile
 16930                           
 16931                           ;miwi_nvm.c: 674: EECON2 = 0x55;
 16932  177A  3055               	movlw	85
 16933  177B  0023               	movlb	3	; select bank3
 16934  177C  0096               	movwf	22	;volsfr
 16935                           
 16936                           ;miwi_nvm.c: 675: EECON2 = 0xAA;
 16937  177D  30AA               	movlw	170
 16938  177E  0096               	movwf	22	;volsfr
 16939                           
 16940                           ;miwi_nvm.c: 676: EECON1bits.WR = 1;
 16941  177F  1495               	bsf	21,1	;volsfr
 16942                           
 16943                           ;miwi_nvm.c: 677: INTCONbits.GIE = oldGIEH;
 16944  1780  0020               	movlb	0	; select bank0
 16945  1781  0C3A               	rrf	NVMWrite@oldGIEH,w
 16946  1782  1C03               	skipc
 16947  1783  138B               	bcf	11,7	;volatile
 16948  1784  1803               	skipnc
 16949  1785  178B               	bsf	11,7	;volatile
 16950  1786                     l265:	
 16951                           ;miwi_nvm.c: 678: while(EECON1bits.WR) ;
 16952                           
 16953  1786  0023               	movlb	3	; select bank3
 16954  1787  1895               	btfsc	21,1	;volsfr
 16955  1788  2F86               	goto	l265
 16956                           
 16957                           ;miwi_nvm.c: 679: EECON1bits.WREN = 0;
 16958  1789  1115               	bcf	21,2	;volsfr
 16959                           
 16960                           ;miwi_nvm.c: 680: count--;
 16961  178A  3001               	movlw	1
 16962  178B  0020               	movlb	0	; select bank0
 16963  178C  02B8               	subwf	NVMWrite@count,f
 16964  178D  3000               	movlw	0
 16965  178E  3BB9               	subwfb	NVMWrite@count+1,f
 16966                           
 16967                           ;miwi_nvm.c: 681: addr++;
 16968  178F  0AB6               	incf	NVMWrite@addr,f
 16969  1790  1903               	skipnz
 16970  1791  0AB7               	incf	NVMWrite@addr+1,f
 16971  1792  2F55               	goto	l263
 16972  1793                     __end_of_NVMWrite:	
 16973  1793                     __ptext21:	
 16974 ;; *************** function _NVMRead *****************
 16975 ;; Defined at:
 16976 ;;		line 640 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 16977 ;; Parameters:    Size  Location     Type
 16978 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 16979 ;;		 -> conn_size(1), myPANID(2), ConnMode(1), currentChannel(1), 
 16980 ;;		 -> ConnectionTable(50), 
 16981 ;;  addr            2   11[BANK0 ] unsigned int 
 16982 ;;  count           2   13[BANK0 ] unsigned int 
 16983 ;; Auto vars:     Size  Location     Type
 16984 ;;		None
 16985 ;; Return value:  Size  Location     Type
 16986 ;;                  1    wreg      void 
 16987 ;; Registers used:
 16988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16989 ;; Tracked objects:
 16990 ;;		On entry : 1F/0
 16991 ;;		On exit  : 1F/0
 16992 ;;		Unchanged: 0/0
 16993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16994 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16998 ;;Total ram usage:        6 bytes
 16999 ;; Hardware stack levels used:    1
 17000 ;; Hardware stack levels required when called:    5
 17001 ;; This function calls:
 17002 ;;		_MacroNop
 17003 ;; This function is called by:
 17004 ;;		_MiApp_ProtocolInit
 17005 ;; This function uses a non-reentrant model
 17006 ;;
 17007                           
 17008                           
 17009                           ;psect for function _NVMRead
 17010  1793                     _NVMRead:	
 17011  1793                     l6481:	
 17012                           ;miwi_nvm.c: 642: while( count )
 17013                           
 17014                           ;incstack = 0
 17015                           ; Regs used in _NVMRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17016                           
 17017  1793  082D               	movf	NVMRead@count,w
 17018  1794  042E               	iorwf	NVMRead@count+1,w
 17019  1795  1903               	btfsc	3,2
 17020  1796  0008               	return
 17021                           
 17022                           ;miwi_nvm.c: 643: {
 17023                           ;miwi_nvm.c: 644: EEADRH = addr >> 8;
 17024  1797  082C               	movf	NVMRead@addr+1,w
 17025  1798  0023               	movlb	3	; select bank3
 17026  1799  0092               	movwf	18	;volatile
 17027                           
 17028                           ;miwi_nvm.c: 645: EEADR = addr;
 17029  179A  0020               	movlb	0	; select bank0
 17030  179B  082C               	movf	NVMRead@addr+1,w
 17031  179C  0023               	movlb	3	; select bank3
 17032  179D  0092               	movwf	18	;volatile
 17033  179E  0020               	movlb	0	; select bank0
 17034  179F  082B               	movf	NVMRead@addr,w
 17035  17A0  0023               	movlb	3	; select bank3
 17036  17A1  0091               	movwf	17	;volatile
 17037                           
 17038                           ;miwi_nvm.c: 646: EECON1bits.EEPGD = 0;
 17039  17A2  1395               	bcf	21,7	;volsfr
 17040                           
 17041                           ;miwi_nvm.c: 647: EECON1bits.CFGS = 0;
 17042  17A3  1315               	bcf	21,6	;volsfr
 17043                           
 17044                           ;miwi_nvm.c: 648: EECON1bits.RD = 1;
 17045  17A4  1415               	bsf	21,0	;volsfr
 17046                           
 17047                           ;miwi_nvm.c: 649: MacroNop();
 17048  17A5  27F8  3190         	fcall	_MacroNop
 17049                           
 17050                           ;miwi_nvm.c: 650: *dest++ = EEDATA;
 17051  17A7  0020               	movlb	0	; select bank0
 17052  17A8  0829               	movf	NVMRead@dest,w
 17053  17A9  0086               	movwf	6
 17054  17AA  082A               	movf	NVMRead@dest+1,w
 17055  17AB  0087               	movwf	7
 17056  17AC  0023               	movlb	3	; select bank3
 17057  17AD  0813               	movf	19,w	;volatile
 17058  17AE  0081               	movwf	1
 17059  17AF  0020               	movlb	0	; select bank0
 17060  17B0  0AA9               	incf	NVMRead@dest,f
 17061  17B1  1903               	skipnz
 17062  17B2  0AAA               	incf	NVMRead@dest+1,f
 17063                           
 17064                           ;miwi_nvm.c: 651: count--;
 17065  17B3  3001               	movlw	1
 17066  17B4  02AD               	subwf	NVMRead@count,f
 17067  17B5  3000               	movlw	0
 17068  17B6  3BAE               	subwfb	NVMRead@count+1,f
 17069                           
 17070                           ;miwi_nvm.c: 652: addr++;
 17071  17B7  0AAB               	incf	NVMRead@addr,f
 17072  17B8  1903               	skipnz
 17073  17B9  0AAC               	incf	NVMRead@addr+1,f
 17074  17BA  2F93               	goto	l6481
 17075  17BB                     __end_of_NVMRead:	
 17076  17BB                     __ptext48:	
 17077 ;; *************** function _MiMAC_DiscardPacket *****************
 17078 ;; Defined at:
 17079 ;;		line 693 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 17080 ;; Parameters:    Size  Location     Type
 17081 ;;		None
 17082 ;; Auto vars:     Size  Location     Type
 17083 ;;		None
 17084 ;; Return value:  Size  Location     Type
 17085 ;;                  1    wreg      void 
 17086 ;; Registers used:
 17087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17088 ;; Tracked objects:
 17089 ;;		On entry : 1C/1
 17090 ;;		On exit  : 1F/0
 17091 ;;		Unchanged: 0/0
 17092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;Total ram usage:        2 bytes
 17098 ;; Hardware stack levels used:    1
 17099 ;; Hardware stack levels required when called:    5
 17100 ;; This function calls:
 17101 ;;		___wmul
 17102 ;; This function is called by:
 17103 ;;		_MiMAC_ReceivedPacket
 17104 ;;		_P2PTasks
 17105 ;;		_MiApp_DiscardMessage
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           
 17110                           ;psect for function _MiMAC_DiscardPacket
 17111  17BB                     _MiMAC_DiscardPacket:	
 17112  17BB                     l7851:	
 17113                           ;incstack = 0
 17114                           ; Regs used in _MiMAC_DiscardPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17115                           
 17116                           
 17117                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 17118  17BB  3002               	movlw	2
 17119  17BC  0020               	movlb	0	; select bank0
 17120  17BD  0266               	subwf	_BankIndex,w
 17121  17BE  1803               	skipnc
 17122  17BF  0008               	return
 17123                           
 17124                           ;drv_mrf_miwi_24j40.c: 698: {
 17125                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 17126  17C0  0866               	movf	_BankIndex,w
 17127  17C1  00AE               	movwf	___wmul@multiplier
 17128  17C2  3045               	movlw	69
 17129  17C3  01AF               	clrf	___wmul@multiplier+1
 17130  17C4  00B0               	movwf	___wmul@multiplicand
 17131  17C5  01B1               	clrf	___wmul@multiplicand+1
 17132  17C6  318F  275B         	fcall	___wmul
 17133  17C8  3066               	movlw	102
 17134  17C9  00B4               	movwf	??_MiMAC_DiscardPacket
 17135  17CA  3023               	movlw	35
 17136  17CB  00B5               	movwf	??_MiMAC_DiscardPacket+1
 17137  17CC  082E               	movf	?___wmul,w
 17138  17CD  0734               	addwf	??_MiMAC_DiscardPacket,w
 17139  17CE  0086               	movwf	6
 17140  17CF  082F               	movf	?___wmul+1,w
 17141  17D0  3D35               	addwfc	??_MiMAC_DiscardPacket+1,w
 17142  17D1  0087               	movwf	7
 17143  17D2  0181               	clrf	1
 17144  17D3  0008               	return
 17145  17D4                     __end_of_MiMAC_DiscardPacket:	
 17146  17D4                     __ptext45:	
 17147 ;; *************** function _isSameAddress *****************
 17148 ;; Defined at:
 17149 ;;		line 2144 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  Address1        2   12[BANK0 ] PTR unsigned char 
 17152 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 17153 ;;  Address2        1   14[BANK0 ] PTR unsigned char 
 17154 ;;		 -> ConnectionTable(50), 
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;  i               1   18[BANK0 ] unsigned char 
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      unsigned char 
 17159 ;; Registers used:
 17160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17161 ;; Tracked objects:
 17162 ;;		On entry : 1F/0
 17163 ;;		On exit  : 1F/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17166 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17170 ;;Total ram usage:        7 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    4
 17173 ;; This function calls:
 17174 ;;		Nothing
 17175 ;; This function is called by:
 17176 ;;		_P2PTasks
 17177 ;;		_AddConnection
 17178 ;; This function uses a non-reentrant model
 17179 ;;
 17180                           
 17181                           
 17182                           ;psect for function _isSameAddress
 17183  17D4                     _isSameAddress:	
 17184                           
 17185                           ;miwi_p2p.c: 2146: uint8_t i;
 17186                           ;miwi_p2p.c: 2148: for(i = 0; i < 8; i++)
 17187                           
 17188                           ;incstack = 0
 17189                           ; Regs used in _isSameAddress: [wreg-fsr1h+status,2+status,0]
 17190  17D4  01B2               	clrf	isSameAddress@i
 17191  17D5                     l8127:	
 17192                           
 17193                           ;miwi_p2p.c: 2149: {
 17194                           ;miwi_p2p.c: 2150: if( Address1[i] != Address2[i] )
 17195  17D5  0832               	movf	isSameAddress@i,w
 17196  17D6  072E               	addwf	isSameAddress@Address2,w
 17197  17D7  00AF               	movwf	??_isSameAddress
 17198  17D8  0086               	movwf	6
 17199  17D9  3001               	movlw	1	; select bank2/3
 17200  17DA  0087               	movwf	7
 17201  17DB  0832               	movf	isSameAddress@i,w
 17202  17DC  00B0               	movwf	??_isSameAddress+1
 17203  17DD  01B1               	clrf	??_isSameAddress+2
 17204  17DE  072C               	addwf	isSameAddress@Address1,w
 17205  17DF  0084               	movwf	4
 17206  17E0  0831               	movf	??_isSameAddress+2,w
 17207  17E1  3D2D               	addwfc	isSameAddress@Address1+1,w
 17208  17E2  0085               	movwf	5
 17209  17E3  0800               	movf	0,w
 17210  17E4  0601               	xorwf	1,w
 17211  17E5  1D03               	btfss	3,2
 17212                           
 17213                           ;miwi_p2p.c: 2151: {
 17214                           ;miwi_p2p.c: 2152: return 0;
 17215  17E6  3400               	retlw	0
 17216  17E7  3008               	movlw	8
 17217  17E8  0AB2               	incf	isSameAddress@i,f
 17218  17E9  0232               	subwf	isSameAddress@i,w
 17219  17EA  1803               	btfsc	3,0
 17220                           
 17221                           ;miwi_p2p.c: 2153: }
 17222                           ;miwi_p2p.c: 2154: }
 17223                           ;miwi_p2p.c: 2155: return 1;
 17224  17EB  3401               	retlw	1
 17225  17EC  2FD5               	goto	l8127
 17226  17ED                     __end_of_isSameAddress:	
 17227  17ED                     __ptext27:	
 17228 ;; *************** function _InitSymbolTimer *****************
 17229 ;; Defined at:
 17230 ;;		line 60 in file "../src/system_config/pic18exp_pic16f1947_24j40/symbol.c"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;		None
 17233 ;; Auto vars:     Size  Location     Type
 17234 ;;		None
 17235 ;; Return value:  Size  Location     Type
 17236 ;;                  1    wreg      void 
 17237 ;; Registers used:
 17238 ;;		wreg, status,2
 17239 ;; Tracked objects:
 17240 ;;		On entry : 1C/3
 17241 ;;		On exit  : 1F/0
 17242 ;;		Unchanged: 0/0
 17243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17248 ;;Total ram usage:        0 bytes
 17249 ;; Hardware stack levels used:    1
 17250 ;; Hardware stack levels required when called:    4
 17251 ;; This function calls:
 17252 ;;		Nothing
 17253 ;; This function is called by:
 17254 ;;		_MiApp_ProtocolInit
 17255 ;;		_main
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           
 17260                           ;psect for function _InitSymbolTimer
 17261  17ED                     _InitSymbolTimer:	
 17262                           
 17263                           ;symbol.c: 70: T1CON = 0b00111000;
 17264                           
 17265                           ;incstack = 0
 17266                           ; Regs used in _InitSymbolTimer: [wreg+status,2]
 17267  17ED  3038               	movlw	56
 17268  17EE  0020               	movlb	0	; select bank0
 17269  17EF  0098               	movwf	24	;volatile
 17270                           
 17271                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
 17272  17F0  1011               	bcf	17,0	;volatile
 17273                           
 17274                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
 17275  17F1  0021               	movlb	1	; select bank1
 17276  17F2  1411               	bsf	17,0	;volatile
 17277                           
 17278                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
 17279  17F3  0020               	movlb	0	; select bank0
 17280  17F4  1418               	bsf	24,0	;volatile
 17281                           
 17282                           ;symbol.c: 75: timerExtension1 = 0;
 17283  17F5  01FC               	clrf	_timerExtension1	;volatile
 17284                           
 17285                           ;symbol.c: 76: timerExtension2 = 0;
 17286  17F6  01FD               	clrf	_timerExtension2	;volatile
 17287  17F7  0008               	return
 17288  17F8                     __end_of_InitSymbolTimer:	
 17289  17F8                     __ptext22:	
 17290 ;; *************** function _MacroNop *****************
 17291 ;; Defined at:
 17292 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;		None
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;		None
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      void 
 17299 ;; Registers used:
 17300 ;;		None
 17301 ;; Tracked objects:
 17302 ;;		On entry : 1F/3
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;Total ram usage:        0 bytes
 17311 ;; Hardware stack levels used:    1
 17312 ;; Hardware stack levels required when called:    4
 17313 ;; This function calls:
 17314 ;;		Nothing
 17315 ;; This function is called by:
 17316 ;;		_NVMRead
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320                           
 17321                           ;psect for function _MacroNop
 17322  17F8                     _MacroNop:	
 17323                           
 17324                           ;miwi_p2p.c: 327: __nop();
 17325                           
 17326                           ;incstack = 0
 17327                           ; Regs used in _MacroNop: []
 17328  17F8  0000               	nop
 17329  17F9  0008               	return
 17330  17FA                     __end_of_MacroNop:	
 17331  17FA                     __ptext4:	
 17332 ;; *************** function _LCDInitSPI *****************
 17333 ;; Defined at:
 17334 ;;		line 41 in file "../src/system_config/pic18exp_pic16f1947_24j40/lcd.c"
 17335 ;; Parameters:    Size  Location     Type
 17336 ;;		None
 17337 ;; Auto vars:     Size  Location     Type
 17338 ;;		None
 17339 ;; Return value:  Size  Location     Type
 17340 ;;                  1    wreg      void 
 17341 ;; Registers used:
 17342 ;;		None
 17343 ;; Tracked objects:
 17344 ;;		On entry : 1F/7
 17345 ;;		On exit  : 1F/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;Total ram usage:        0 bytes
 17353 ;; Hardware stack levels used:    1
 17354 ;; Hardware stack levels required when called:    4
 17355 ;; This function calls:
 17356 ;;		Nothing
 17357 ;; This function is called by:
 17358 ;;		_LCD_Initialize
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           
 17363                           ;psect for function _LCDInitSPI
 17364  17FA                     _LCDInitSPI:	
 17365                           
 17366                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
 17367                           
 17368                           ;incstack = 0
 17369                           ; Regs used in _LCDInitSPI: []
 17370  17FA  0021               	movlb	1	; select bank1
 17371  17FB  128E               	bcf	14,5	;volatile
 17372                           
 17373                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
 17374  17FC  118E               	bcf	14,3	;volatile
 17375                           
 17376                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
 17377  17FD  0020               	movlb	0	; select bank0
 17378  17FE  1191               	bcf	17,3	;volatile
 17379  17FF  0008               	return
 17380  1800                     __end_of_LCDInitSPI:	
 17381                           
 17382                           	psect	text23
 17383  06CC                     __ptext23:	
 17384 ;; *************** function _NVMInit *****************
 17385 ;; Defined at:
 17386 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;		None
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;  result          1   15[BANK0 ] unsigned char 
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1    wreg      unsigned char 
 17393 ;; Registers used:
 17394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17395 ;; Tracked objects:
 17396 ;;		On entry : 1F/0
 17397 ;;		On exit  : 1F/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17404 ;;Total ram usage:        1 bytes
 17405 ;; Hardware stack levels used:    1
 17406 ;; Hardware stack levels required when called:    5
 17407 ;; This function calls:
 17408 ;;		_NVMalloc
 17409 ;; This function is called by:
 17410 ;;		_MiApp_ProtocolInit
 17411 ;; This function uses a non-reentrant model
 17412 ;;
 17413                           
 17414                           
 17415                           ;psect for function _NVMInit
 17416  06CC                     _NVMInit:	
 17417                           
 17418                           ;miwi_nvm.c: 709: bool result = 1;
 17419                           
 17420                           ;incstack = 0
 17421                           ; Regs used in _NVMInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17422  06CC  01AF               	clrf	NVMInit@result
 17423  06CD  0AAF               	incf	NVMInit@result,f
 17424                           
 17425                           ;miwi_nvm.c: 711: nextEEPosition = 0;
 17426  06CE  0022               	movlb	2	; select bank2
 17427  06CF  3002               	movlw	2
 17428  06D0  01B6               	clrf	_nextEEPosition^(0+256)
 17429  06D1  01B7               	clrf	(_nextEEPosition+1)^(0+256)
 17430                           
 17431                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
 17432  06D2  0020               	movlb	0	; select bank0
 17433  06D3  00A9               	movwf	NVMalloc@size
 17434  06D4  30E6               	movlw	low _nvmMyPANID
 17435  06D5  01AA               	clrf	NVMalloc@size+1
 17436  06D6  00AB               	movwf	NVMalloc@location
 17437  06D7  3000               	movlw	high _nvmMyPANID
 17438  06D8  00AC               	movwf	NVMalloc@location+1
 17439  06D9  2714  3186         	fcall	_NVMalloc
 17440  06DB  0020               	movlb	0	; select bank0
 17441  06DC  05AF               	andwf	NVMInit@result,f
 17442  06DD  30E4               	movlw	low _nvmCurrentChannel
 17443                           
 17444                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
 17445  06DE  01A9               	clrf	NVMalloc@size
 17446  06DF  0AA9               	incf	NVMalloc@size,f
 17447  06E0  01AA               	clrf	NVMalloc@size+1
 17448  06E1  00AB               	movwf	NVMalloc@location
 17449  06E2  3000               	movlw	high _nvmCurrentChannel
 17450  06E3  00AC               	movwf	NVMalloc@location+1
 17451  06E4  2714  3186         	fcall	_NVMalloc
 17452  06E6  0020               	movlb	0	; select bank0
 17453  06E7  05AF               	andwf	NVMInit@result,f
 17454  06E8  30E2               	movlw	low _nvmConnMode
 17455                           
 17456                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
 17457  06E9  01A9               	clrf	NVMalloc@size
 17458  06EA  0AA9               	incf	NVMalloc@size,f
 17459  06EB  01AA               	clrf	NVMalloc@size+1
 17460  06EC  00AB               	movwf	NVMalloc@location
 17461  06ED  3000               	movlw	high _nvmConnMode
 17462  06EE  00AC               	movwf	NVMalloc@location+1
 17463  06EF  2714  3186         	fcall	_NVMalloc
 17464  06F1  0020               	movlb	0	; select bank0
 17465  06F2  05AF               	andwf	NVMInit@result,f
 17466                           
 17467                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 5, &nvmConnectionTable);
 17468  06F3  3032               	movlw	50
 17469  06F4  00A9               	movwf	NVMalloc@size
 17470  06F5  3063               	movlw	low _nvmConnectionTable
 17471  06F6  01AA               	clrf	NVMalloc@size+1
 17472  06F7  00AB               	movwf	NVMalloc@location
 17473  06F8  3000               	movlw	high _nvmConnectionTable
 17474  06F9  00AC               	movwf	NVMalloc@location+1
 17475  06FA  2714  3186         	fcall	_NVMalloc
 17476  06FC  0020               	movlb	0	; select bank0
 17477  06FD  05AF               	andwf	NVMInit@result,f
 17478                           
 17479                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
 17480  06FE  3004               	movlw	4
 17481  06FF  00A9               	movwf	NVMalloc@size
 17482  0700  303A               	movlw	low _nvmOutFrameCounter
 17483  0701  01AA               	clrf	NVMalloc@size+1
 17484  0702  00AB               	movwf	NVMalloc@location
 17485  0703  3001               	movlw	high _nvmOutFrameCounter
 17486  0704  00AC               	movwf	NVMalloc@location+1
 17487  0705  2714  3186         	fcall	_NVMalloc
 17488  0707  0020               	movlb	0	; select bank0
 17489  0708  05AF               	andwf	NVMInit@result,f
 17490  0709  3038               	movlw	low _nvmEdc
 17491                           
 17492                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
 17493  070A  01A9               	clrf	NVMalloc@size
 17494  070B  0AA9               	incf	NVMalloc@size,f
 17495  070C  01AA               	clrf	NVMalloc@size+1
 17496  070D  00AB               	movwf	NVMalloc@location
 17497  070E  3001               	movlw	high _nvmEdc
 17498  070F  00AC               	movwf	NVMalloc@location+1
 17499  0710  2714               	fcall	_NVMalloc
 17500  0711  0020               	movlb	0	; select bank0
 17501  0712  05AF               	andwf	NVMInit@result,f
 17502  0713  0008               	return
 17503  0714                     __end_of_NVMInit:	
 17504  0714                     __ptext24:	
 17505 ;; *************** function _NVMalloc *****************
 17506 ;; Defined at:
 17507 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 17508 ;; Parameters:    Size  Location     Type
 17509 ;;  size            2    9[BANK0 ] unsigned int 
 17510 ;;  location        2   11[BANK0 ] PTR unsigned int 
 17511 ;;		 -> nvmEdc(2), nvmOutFrameCounter(2), nvmConnectionTable(2), nvmConnMode(2), 
 17512 ;;		 -> nvmCurrentChannel(2), nvmMyPANID(2), 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;		None
 17515 ;; Return value:  Size  Location     Type
 17516 ;;                  1    wreg      unsigned char 
 17517 ;; Registers used:
 17518 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17519 ;; Tracked objects:
 17520 ;;		On entry : 1F/0
 17521 ;;		On exit  : 1D/0
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;Total ram usage:        6 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; Hardware stack levels required when called:    4
 17531 ;; This function calls:
 17532 ;;		Nothing
 17533 ;; This function is called by:
 17534 ;;		_NVMInit
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           
 17538                           
 17539                           ;psect for function _NVMalloc
 17540  0714                     _NVMalloc:	
 17541                           
 17542                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 1024)
 17543                           
 17544                           ;incstack = 0
 17545                           ; Regs used in _NVMalloc: [wreg+fsr1l+fsr1h+status,2+status,0]
 17546  0714  0829               	movf	NVMalloc@size,w
 17547  0715  0022               	movlb	2	; select bank2
 17548  0716  0736               	addwf	_nextEEPosition^(0+256),w
 17549  0717  0020               	movlb	0	; select bank0
 17550  0718  00AD               	movwf	??_NVMalloc
 17551  0719  082A               	movf	NVMalloc@size+1,w
 17552  071A  0022               	movlb	2	; select bank2
 17553  071B  3D37               	addwfc	(_nextEEPosition+1)^(0+256),w
 17554  071C  0020               	movlb	0	; select bank0
 17555  071D  00AE               	movwf	??_NVMalloc+1
 17556  071E  3004               	movlw	4
 17557  071F  022E               	subwf	??_NVMalloc+1,w
 17558  0720  3001               	movlw	1
 17559  0721  1903               	skipnz
 17560  0722  022D               	subwf	??_NVMalloc,w
 17561  0723  1803               	btfsc	3,0
 17562                           
 17563                           ;miwi_nvm.c: 697: {
 17564                           ;miwi_nvm.c: 698: return 0;
 17565  0724  3400               	retlw	0
 17566                           
 17567                           ;miwi_nvm.c: 699: }
 17568                           ;miwi_nvm.c: 701: *location = nextEEPosition;
 17569  0725  082B               	movf	NVMalloc@location,w
 17570  0726  0086               	movwf	6
 17571  0727  082C               	movf	NVMalloc@location+1,w
 17572  0728  0087               	movwf	7
 17573  0729  0022               	movlb	2	; select bank2
 17574  072A  0836               	movf	_nextEEPosition^(0+256),w
 17575  072B  3FC0               	movwi [0]fsr1
 17576  072C  0837               	movf	(_nextEEPosition+1)^(0+256),w
 17577  072D  3FC1               	movwi [1]fsr1
 17578                           
 17579                           ;miwi_nvm.c: 702: nextEEPosition += size;
 17580  072E  0020               	movlb	0	; select bank0
 17581  072F  0829               	movf	NVMalloc@size,w
 17582  0730  0022               	movlb	2	; select bank2
 17583  0731  07B6               	addwf	_nextEEPosition^(0+256),f
 17584  0732  0020               	movlb	0	; select bank0
 17585  0733  082A               	movf	NVMalloc@size+1,w
 17586  0734  0022               	movlb	2	; select bank2
 17587  0735  3DB7               	addwfc	(_nextEEPosition+1)^(0+256),f
 17588                           
 17589                           ;miwi_nvm.c: 703: return 1;
 17590  0736  3401               	retlw	1
 17591  0737                     __end_of_NVMalloc:	
 17592                           
 17593                           	psect	text25
 17594  07CF                     __ptext25:	
 17595 ;; *************** function _MiMAC_Init *****************
 17596 ;; Defined at:
 17597 ;;		line 1465 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 17598 ;; Parameters:    Size  Location     Type
 17599 ;;  initValue       2   38[BANK0 ] struct .
 17600 ;; Auto vars:     Size  Location     Type
 17601 ;;  i               1   42[BANK0 ] unsigned char 
 17602 ;; Return value:  Size  Location     Type
 17603 ;;                  1    wreg      unsigned char 
 17604 ;; Registers used:
 17605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17606 ;; Tracked objects:
 17607 ;;		On entry : 1F/0
 17608 ;;		On exit  : 1F/0
 17609 ;;		Unchanged: 0/0
 17610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17615 ;;Total ram usage:        5 bytes
 17616 ;; Hardware stack levels used:    1
 17617 ;; Hardware stack levels required when called:    8
 17618 ;; This function calls:
 17619 ;;		_InitMRF24J40
 17620 ;;		___wmul
 17621 ;; This function is called by:
 17622 ;;		_MiApp_ProtocolInit
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           
 17627                           ;psect for function _MiMAC_Init
 17628  07CF                     _MiMAC_Init:	
 17629                           
 17630                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
 17631                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
 17632                           
 17633                           ;incstack = 0
 17634                           ; Regs used in _MiMAC_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17635  07CF  0847               	movf	MiMAC_Init@initValue+1,w
 17636  07D0  0022               	movlb	2	; select bank2
 17637  07D1  00B3               	movwf	(_MACInitParams+1)^(0+256)
 17638  07D2  0020               	movlb	0	; select bank0
 17639  07D3  0846               	movf	MiMAC_Init@initValue,w
 17640  07D4  0022               	movlb	2	; select bank2
 17641  07D5  00B2               	movwf	_MACInitParams^(0+256)
 17642                           
 17643                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR1L;
 17644  07D6  0020               	movlb	0	; select bank0
 17645  07D7  0816               	movf	22,w	;volatile
 17646  07D8  0021               	movlb	1	; select bank1
 17647  07D9  00D2               	movwf	_IEEESeqNum^(0+128)
 17648                           
 17649                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
 17650  07DA  300B               	movlw	11
 17651  07DB  00D4               	movwf	_MACCurrentChannel^(0+128)
 17652                           
 17653                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
 17654  07DC  319B  237B  3187   	fcall	_InitMRF24J40
 17655                           
 17656                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
 17657  07DF  01DE               	clrf	_MRF24J40Status	;volatile
 17658                           
 17659                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
 17660  07E0  01CA               	clrf	MiMAC_Init@i
 17661  07E1                     l9331:	
 17662                           
 17663                           ;drv_mrf_miwi_24j40.c: 1480: {
 17664                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
 17665  07E1  084A               	movf	MiMAC_Init@i,w
 17666  07E2  00AE               	movwf	___wmul@multiplier
 17667  07E3  3045               	movlw	69
 17668  07E4  01AF               	clrf	___wmul@multiplier+1
 17669  07E5  00B0               	movwf	___wmul@multiplicand
 17670  07E6  01B1               	clrf	___wmul@multiplicand+1
 17671  07E7  318F  275B  3187   	fcall	___wmul
 17672  07EA  3066               	movlw	102
 17673  07EB  00C8               	movwf	??_MiMAC_Init
 17674  07EC  3023               	movlw	35
 17675  07ED  00C9               	movwf	??_MiMAC_Init+1
 17676  07EE  082E               	movf	?___wmul,w
 17677  07EF  0748               	addwf	??_MiMAC_Init,w
 17678  07F0  0086               	movwf	6
 17679  07F1  082F               	movf	?___wmul+1,w
 17680  07F2  3D49               	addwfc	??_MiMAC_Init+1,w
 17681  07F3  0087               	movwf	7
 17682  07F4  3002               	movlw	2
 17683  07F5  0181               	clrf	1
 17684  07F6  0ACA               	incf	MiMAC_Init@i,f
 17685  07F7  024A               	subwf	MiMAC_Init@i,w
 17686  07F8  1803               	btfsc	3,0
 17687  07F9  0008               	return
 17688  07FA  2FE1               	goto	l9331
 17689  07FB                     __end_of_MiMAC_Init:	
 17690                           
 17691                           	psect	swtext1
 17692  07A1                     __pswtext1:	
 17693  07A1                     S10181:	
 17694  07A1  3194  2CD1         	ljmp	l8979
 17695  07A3  3195  2DCB         	ljmp	l9095
 17696  07A5  3197  2F11         	ljmp	l441
 17697  07A7  3197  2F11         	ljmp	l441
 17698  07A9  3197  2F11         	ljmp	l441
 17699  07AB  3197  2F11         	ljmp	l441
 17700  07AD  3195  2D7E         	ljmp	l9061
 17701  07AF  3197  2F11         	ljmp	l441
 17702  07B1  3197  2F11         	ljmp	l441
 17703  07B3  3197  2F11         	ljmp	l441
 17704  07B5  3197  2F11         	ljmp	l441
 17705  07B7  3197  2F11         	ljmp	l441
 17706  07B9  3197  2F11         	ljmp	l441
 17707  07BB  3197  2F11         	ljmp	l441
 17708  07BD  3197  2F11         	ljmp	l441
 17709  07BF  3197  2F11         	ljmp	l441
 17710  07C1  3196  2E9F         	ljmp	l9147
 17711  07C3  3196  2EB1         	ljmp	l9155
 17712  07C5  3197  2F11         	ljmp	l441
 17713  07C7  3197  2F11         	ljmp	l441
 17714  07C9  3197  2F11         	ljmp	l441
 17715  07CB  3197  2F11         	ljmp	l441
 17716  07CD  3196  2EAC         	ljmp	l433
 17717                           
 17718                           	psect	text44
 17719  05F2                     __ptext44:	
 17720 ;; *************** function _AddConnection *****************
 17721 ;; Defined at:
 17722 ;;		line 2535 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;		None
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  i               1   34[BANK0 ] unsigned char 
 17727 ;;  connectionSl    1   33[BANK0 ] unsigned char 
 17728 ;;  status          1   32[BANK0 ] unsigned char 
 17729 ;; Return value:  Size  Location     Type
 17730 ;;                  1    wreg      unsigned char 
 17731 ;; Registers used:
 17732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17733 ;; Tracked objects:
 17734 ;;		On entry : 1C/2
 17735 ;;		On exit  : 1F/0
 17736 ;;		Unchanged: 0/0
 17737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17741 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17742 ;;Total ram usage:        8 bytes
 17743 ;; Hardware stack levels used:    1
 17744 ;; Hardware stack levels required when called:    6
 17745 ;; This function calls:
 17746 ;;		_NVMWrite
 17747 ;;		_Total_Connections
 17748 ;;		___bmul
 17749 ;;		_isSameAddress
 17750 ;; This function is called by:
 17751 ;;		_P2PTasks
 17752 ;; This function uses a non-reentrant model
 17753 ;;
 17754                           
 17755                           
 17756                           ;psect for function _AddConnection
 17757  05F2                     _AddConnection:	
 17758                           
 17759                           ;miwi_p2p.c: 2537: uint8_t i;
 17760                           ;miwi_p2p.c: 2538: uint8_t status = 0x00;
 17761                           
 17762                           ;incstack = 0
 17763                           ; Regs used in _AddConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17764  05F2  0020               	movlb	0	; select bank0
 17765  05F3  30FF               	movlw	255
 17766  05F4  01C0               	clrf	AddConnection@status
 17767                           
 17768                           ;miwi_p2p.c: 2539: uint8_t connectionSlot = 0xFF;
 17769  05F5  00C1               	movwf	AddConnection@connectionSlot
 17770                           
 17771                           ;miwi_p2p.c: 2551: for(i = 0; i < 5; i++)
 17772  05F6  01C2               	clrf	AddConnection@i
 17773  05F7                     l8459:	
 17774                           
 17775                           ;miwi_p2p.c: 2552: {
 17776                           ;miwi_p2p.c: 2554: if( ConnectionTable[i].status.bits.isValid )
 17777  05F7  300A               	movlw	10
 17778  05F8  00A9               	movwf	___bmul@multiplicand
 17779  05F9  0842               	movf	AddConnection@i,w
 17780  05FA  3197  2731  3185   	fcall	___bmul
 17781  05FD  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 17782  05FE  0086               	movwf	6
 17783  05FF  3001               	movlw	1	; select bank3/4
 17784  0600  0087               	movwf	7
 17785  0601  1F81               	btfss	1,7
 17786  0602  2E1E               	goto	l8467
 17787                           
 17788                           ;miwi_p2p.c: 2555: {
 17789                           ;miwi_p2p.c: 2557: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 17790  0603  0022               	movlb	2	; select bank2
 17791  0604  0824               	movf	((low ((_rxMessage| (0+256)+3))+1))^0,w
 17792  0605  0020               	movlb	0	; select bank0
 17793  0606  00AD               	movwf	isSameAddress@Address1+1
 17794  0607  0022               	movlb	2	; select bank2
 17795  0608  0823               	movf	(low ((_rxMessage| (0+256)+3)))^0,w
 17796  0609  0020               	movlb	0	; select bank0
 17797  060A  00AC               	movwf	isSameAddress@Address1
 17798  060B  300A               	movlw	10
 17799  060C  00A9               	movwf	___bmul@multiplicand
 17800  060D  0842               	movf	AddConnection@i,w
 17801  060E  3197  2731  3185   	fcall	___bmul
 17802  0611  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 17803  0612  00AE               	movwf	isSameAddress@Address2
 17804  0613  3197  27D4  3185   	fcall	_isSameAddress
 17805  0616  3A00               	xorlw	0
 17806  0617  1903               	skipnz
 17807  0618  2E22               	goto	l8471
 17808                           
 17809                           ;miwi_p2p.c: 2558: {
 17810                           ;miwi_p2p.c: 2559: connectionSlot = i;
 17811  0619  0842               	movf	AddConnection@i,w
 17812  061A  00C1               	movwf	AddConnection@connectionSlot
 17813                           
 17814                           ;miwi_p2p.c: 2560: status = 0x01;
 17815  061B  01C0               	clrf	AddConnection@status
 17816  061C  0AC0               	incf	AddConnection@status,f
 17817                           
 17818                           ;miwi_p2p.c: 2561: break;
 17819  061D  2E27               	goto	l8475
 17820  061E                     l8467:	
 17821                           
 17822                           ;miwi_p2p.c: 2564: else if( connectionSlot == 0xFF )
 17823  061E  0F41               	incfsz	AddConnection@connectionSlot,w
 17824  061F  2E22               	goto	l8471
 17825                           
 17826                           ;miwi_p2p.c: 2565: {
 17827                           ;miwi_p2p.c: 2567: connectionSlot = i;
 17828  0620  0842               	movf	AddConnection@i,w
 17829  0621  00C1               	movwf	AddConnection@connectionSlot
 17830  0622                     l8471:	
 17831  0622  3005               	movlw	5
 17832  0623  0AC2               	incf	AddConnection@i,f
 17833  0624  0242               	subwf	AddConnection@i,w
 17834  0625  1C03               	skipc
 17835  0626  2DF7               	goto	l8459
 17836  0627                     l8475:	
 17837                           
 17838                           ;miwi_p2p.c: 2568: }
 17839                           ;miwi_p2p.c: 2569: }
 17840                           ;miwi_p2p.c: 2571: if( connectionSlot == 0xFF )
 17841  0627  0F41               	incfsz	AddConnection@connectionSlot,w
 17842  0628  2E2A               	goto	l8483
 17843                           
 17844                           ;miwi_p2p.c: 2572: {
 17845                           ;miwi_p2p.c: 2573: return 0xF1;
 17846  0629  34F1               	retlw	241
 17847  062A                     l8483:	
 17848                           
 17849                           ;miwi_p2p.c: 2575: else
 17850                           ;miwi_p2p.c: 2576: {
 17851                           ;miwi_p2p.c: 2577: if( ConnMode >= 0x01 )
 17852  062A  0021               	movlb	1	; select bank1
 17853  062B  086B               	movf	_ConnMode^(0+128),w
 17854  062C  1903               	btfsc	3,2
 17855  062D  2E31               	goto	l8489
 17856                           
 17857                           ;miwi_p2p.c: 2578: {
 17858                           ;miwi_p2p.c: 2579: return status;
 17859  062E  0020               	movlb	0	; select bank0
 17860  062F  0840               	movf	AddConnection@status,w
 17861  0630  0008               	return
 17862  0631                     l8489:	
 17863                           
 17864                           ;miwi_p2p.c: 2580: }
 17865                           ;miwi_p2p.c: 2581: MyindexinPC = connectionSlot;
 17866  0631  0020               	movlb	0	; select bank0
 17867  0632  0841               	movf	AddConnection@connectionSlot,w
 17868  0633  0021               	movlb	1	; select bank1
 17869  0634  00D5               	movwf	_MyindexinPC^(0+128)
 17870                           
 17871                           ;miwi_p2p.c: 2583: for(i = 0; i < 8; i++)
 17872  0635  0020               	movlb	0	; select bank0
 17873  0636  300A               	movlw	10
 17874  0637  01C2               	clrf	AddConnection@i
 17875                           
 17876                           ;miwi_p2p.c: 2584: {
 17877                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 17878  0638  00A9               	movwf	___bmul@multiplicand
 17879  0639  0841               	movf	AddConnection@connectionSlot,w
 17880  063A                     L20:	
 17881  063A  3197  2731  3185   	fcall	___bmul
 17882  063D  3EA0               	addlw	(low (_ConnectionTable| (0+256)))& (0+255)
 17883  063E  0742               	addwf	AddConnection@i,w
 17884  063F  00BB               	movwf	??_AddConnection
 17885  0640  0086               	movwf	6
 17886  0641  3001               	movlw	1	; select bank3/4
 17887  0642  0087               	movwf	7
 17888  0643  0842               	movf	AddConnection@i,w
 17889  0644  00BC               	movwf	??_AddConnection+1
 17890  0645  01BD               	clrf	??_AddConnection+2
 17891  0646  0022               	movlb	2	; select bank2
 17892  0647  0723               	addwf	(low ((_rxMessage| (0+256)+3)))^0,w
 17893  0648  0084               	movwf	4
 17894  0649  0020               	movlb	0	; select bank0
 17895  064A  083D               	movf	??_AddConnection+2,w
 17896  064B  0022               	movlb	2	; select bank2
 17897  064C  3D24               	addwfc	((low ((_rxMessage| (0+256)+3))+1))^0,w
 17898  064D  0085               	movwf	5
 17899  064E  0800               	movf	0,w
 17900  064F  0081               	movwf	1
 17901  0650  0020               	movlb	0	; select bank0
 17902  0651  3008               	movlw	8
 17903  0652  0AC2               	incf	AddConnection@i,f
 17904  0653  0242               	subwf	AddConnection@i,w
 17905                           
 17906                           ;miwi_p2p.c: 2586: }
 17907                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 17908  0654  300A               	movlw	10
 17909  0655  00A9               	movwf	___bmul@multiplicand
 17910  0656  0841               	movf	AddConnection@connectionSlot,w
 17911  0657  1C03               	skipc
 17912  0658  2E3A               	goto	L20
 17913  0659  3197  2731  3185   	fcall	___bmul
 17914  065C  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 17915  065D  0086               	movwf	6
 17916  065E  3001               	movlw	1	; select bank3/4
 17917  065F  0087               	movwf	7
 17918  0660  1781               	bsf	1,7
 17919                           
 17920                           ;miwi_p2p.c: 2590: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 17921  0661  0022               	movlb	2	; select bank2
 17922  0662  0825               	movf	(low ((_rxMessage| (0+256)+5)))^0,w
 17923  0663  0086               	movwf	6
 17924  0664  0826               	movf	((low ((_rxMessage| (0+256)+5))+1))^0,w
 17925  0665  0087               	movwf	7
 17926  0666  3001               	movlw	1
 17927  0667  3142               	addfsr 1,2
 17928  0668  0501               	andwf	1,w
 17929  0669  0020               	movlb	0	; select bank0
 17930  066A  00BB               	movwf	??_AddConnection
 17931  066B  300A               	movlw	10
 17932  066C  00A9               	movwf	___bmul@multiplicand
 17933  066D  0841               	movf	AddConnection@connectionSlot,w
 17934  066E  3197  2731  3185   	fcall	___bmul
 17935  0671  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 17936  0672  0086               	movwf	6
 17937  0673  3001               	movlw	1	; select bank3/4
 17938  0674  0087               	movwf	7
 17939  0675  0801               	movf	1,w
 17940  0676  063B               	xorwf	??_AddConnection,w
 17941  0677  39FE               	andlw	-2
 17942  0678  063B               	xorwf	??_AddConnection,w
 17943  0679  0081               	movwf	1
 17944                           
 17945                           ;miwi_p2p.c: 2594: for(i = 0; i < 1; i++)
 17946  067A  01C2               	clrf	AddConnection@i
 17947  067B                     l8511:	
 17948                           
 17949                           ;miwi_p2p.c: 2595: {
 17950                           ;miwi_p2p.c: 2596: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 17951  067B  300A               	movlw	10
 17952  067C  00A9               	movwf	___bmul@multiplicand
 17953  067D  0841               	movf	AddConnection@connectionSlot,w
 17954  067E  3197  2731  3185   	fcall	___bmul
 17955  0681  3EA9               	addlw	(low ((_ConnectionTable| (0+256)+9)))& (0+255)
 17956  0682  0742               	addwf	AddConnection@i,w
 17957  0683  00BB               	movwf	??_AddConnection
 17958  0684  0086               	movwf	6
 17959  0685  3001               	movlw	1	; select bank3/4
 17960  0686  0087               	movwf	7
 17961  0687  0842               	movf	AddConnection@i,w
 17962  0688  00BC               	movwf	??_AddConnection+1
 17963  0689  01BD               	clrf	??_AddConnection+2
 17964  068A  0022               	movlb	2	; select bank2
 17965  068B  0725               	addwf	(low ((_rxMessage| (0+256)+5)))^0,w
 17966  068C  0020               	movlb	0	; select bank0
 17967  068D  00BE               	movwf	??_AddConnection+3
 17968  068E  083D               	movf	??_AddConnection+2,w
 17969  068F  0022               	movlb	2	; select bank2
 17970  0690  3D26               	addwfc	((low ((_rxMessage| (0+256)+5))+1))^0,w
 17971  0691  0020               	movlb	0	; select bank0
 17972  0692  00BF               	movwf	??_AddConnection+4
 17973  0693  083E               	movf	??_AddConnection+3,w
 17974  0694  0084               	movwf	4
 17975  0695  083F               	movf	??_AddConnection+4,w
 17976  0696  0085               	movwf	5
 17977  0697  3103               	addfsr 0,3
 17978  0698  0800               	movf	0,w
 17979  0699  0081               	movwf	1
 17980  069A  0AC2               	incf	AddConnection@i,f
 17981  069B  1903               	btfsc	3,2
 17982  069C  2E7B               	goto	l8511
 17983                           
 17984                           ;miwi_p2p.c: 2597: }
 17985                           ;miwi_p2p.c: 2604: LatestConnection = connectionSlot;
 17986  069D  0841               	movf	AddConnection@connectionSlot,w
 17987  069E  0021               	movlb	1	; select bank1
 17988  069F  00D3               	movwf	_LatestConnection^(0+128)
 17989                           
 17990                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 17991  06A0  1257               	bcf	_P2PStatus^(0+128),4	;volatile
 17992                           
 17993                           ;miwi_p2p.c: 2606: }
 17994                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 17995  06A1  26B6               	fcall	_Total_Connections
 17996  06A2  00E5               	movwf	_conn_size
 17997                           
 17998                           ;miwi_p2p.c: 2609: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 17999  06A3  3065               	movlw	low _conn_size
 18000  06A4  00B4               	movwf	NVMWrite@source
 18001  06A5  3000               	movlw	high _conn_size
 18002  06A6  00B5               	movwf	NVMWrite@source+1
 18003  06A7  0022               	movlb	2	; select bank2
 18004  06A8  0839               	movf	(_nvmEdc+1)^(0+256),w
 18005  06A9  0020               	movlb	0	; select bank0
 18006  06AA  00B7               	movwf	NVMWrite@addr+1
 18007  06AB  0022               	movlb	2	; select bank2
 18008  06AC  0838               	movf	_nvmEdc^(0+256),w
 18009  06AD  0020               	movlb	0	; select bank0
 18010  06AE  00B6               	movwf	NVMWrite@addr
 18011  06AF  01B8               	clrf	NVMWrite@count
 18012  06B0  0AB8               	incf	NVMWrite@count,f
 18013  06B1  01B9               	clrf	NVMWrite@count+1
 18014  06B2  3197  2755         	fcall	_NVMWrite
 18015                           
 18016                           ;miwi_p2p.c: 2612: return status;
 18017  06B4  0840               	movf	AddConnection@status,w
 18018  06B5  0008               	return
 18019  06B6                     __end_of_AddConnection:	
 18020  06B6                     __ptext46:	
 18021 ;; *************** function _Total_Connections *****************
 18022 ;; Defined at:
 18023 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;		None
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;  i               1   13[BANK0 ] unsigned char 
 18028 ;;  count           1   12[BANK0 ] unsigned char 
 18029 ;; Return value:  Size  Location     Type
 18030 ;;                  1    wreg      unsigned char 
 18031 ;; Registers used:
 18032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18033 ;; Tracked objects:
 18034 ;;		On entry : 1F/1
 18035 ;;		On exit  : 1F/0
 18036 ;;		Unchanged: 0/0
 18037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18042 ;;Total ram usage:        2 bytes
 18043 ;; Hardware stack levels used:    1
 18044 ;; Hardware stack levels required when called:    5
 18045 ;; This function calls:
 18046 ;;		___bmul
 18047 ;; This function is called by:
 18048 ;;		_AddConnection
 18049 ;; This function uses a non-reentrant model
 18050 ;;
 18051                           
 18052                           
 18053                           ;psect for function _Total_Connections
 18054  06B6                     _Total_Connections:	
 18055                           
 18056                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 18057                           
 18058                           ;incstack = 0
 18059                           ; Regs used in _Total_Connections: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18060  06B6  0020               	movlb	0	; select bank0
 18061  06B7  01AC               	clrf	Total_Connections@count
 18062                           
 18063                           ;miwi_p2p.c: 69: for (i=0;i<5;i++)
 18064  06B8  01AD               	clrf	Total_Connections@i
 18065  06B9                     l8111:	
 18066                           
 18067                           ;miwi_p2p.c: 70: {
 18068                           ;miwi_p2p.c: 77: if (ConnectionTable[i].status.bits.isValid)
 18069  06B9  300A               	movlw	10
 18070  06BA  00A9               	movwf	___bmul@multiplicand
 18071  06BB  082D               	movf	Total_Connections@i,w
 18072  06BC  3197  2731  3185   	fcall	___bmul
 18073  06BF  3EA8               	addlw	(low ((_ConnectionTable| (0+256)+8)))& (0+255)
 18074  06C0  0086               	movwf	6
 18075  06C1  3001               	movlw	1	; select bank3/4
 18076  06C2  0087               	movwf	7
 18077  06C3  1B81               	btfsc	1,7
 18078                           
 18079                           ;miwi_p2p.c: 78: {
 18080                           ;miwi_p2p.c: 79: count++;
 18081  06C4  0AAC               	incf	Total_Connections@count,f
 18082  06C5  3005               	movlw	5
 18083  06C6  0AAD               	incf	Total_Connections@i,f
 18084  06C7  022D               	subwf	Total_Connections@i,w
 18085  06C8  1C03               	skipc
 18086  06C9  2EB9               	goto	l8111
 18087                           
 18088                           ;miwi_p2p.c: 80: }
 18089                           ;miwi_p2p.c: 82: }
 18090                           ;miwi_p2p.c: 83: return count;
 18091  06CA  082C               	movf	Total_Connections@count,w
 18092  06CB  0008               	return
 18093  06CC                     __end_of_Total_Connections:	
 18094                           
 18095                           	psect	text61
 18096  0111                     __ptext61:	
 18097 ;; *************** function _sprintf *****************
 18098 ;; Defined at:
 18099 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;  sp              1    wreg     PTR unsigned char 
 18102 ;;		 -> LCDText(33), 
 18103 ;;  f               2   21[BANK0 ] PTR const unsigned char 
 18104 ;;		 -> STR_45(21), STR_44(16), STR_43(22), STR_42(16), 
 18105 ;;		 -> STR_31(30), STR_28(32), STR_18(31), STR_17(17), 
 18106 ;;		 -> STR_16(17), 
 18107 ;; Auto vars:     Size  Location     Type
 18108 ;;  sp              1   52[BANK0 ] PTR unsigned char 
 18109 ;;		 -> LCDText(33), 
 18110 ;;  idx             1   42[BANK0 ] unsigned char 
 18111 ;;  tmpval          4    0        struct .
 18112 ;;  flag            2   53[BANK0 ] unsigned short 
 18113 ;;  width           2   49[BANK0 ] int 
 18114 ;;  val             2   46[BANK0 ] unsigned int 
 18115 ;;  len             2   43[BANK0 ] unsigned int 
 18116 ;;  c               1   51[BANK0 ] char 
 18117 ;;  prec            1   48[BANK0 ] char 
 18118 ;;  ap              1   45[BANK0 ] PTR void [1]
 18119 ;;		 -> ?_sprintf(2), 
 18120 ;;  cp              1   41[BANK0 ] PTR const unsigned char 
 18121 ;;		 -> sprintf@c(1), 
 18122 ;; Return value:  Size  Location     Type
 18123 ;;                  2   21[BANK0 ] int 
 18124 ;; Registers used:
 18125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18126 ;; Tracked objects:
 18127 ;;		On entry : 1F/0
 18128 ;;		On exit  : 1F/0
 18129 ;;		Unchanged: 0/0
 18130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18131 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18134 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18135 ;;Total ram usage:       34 bytes
 18136 ;; Hardware stack levels used:    1
 18137 ;; Hardware stack levels required when called:    5
 18138 ;; This function calls:
 18139 ;;		___bmul
 18140 ;;		___lwdiv
 18141 ;;		___lwmod
 18142 ;;		___wmul
 18143 ;;		_isdigit
 18144 ;; This function is called by:
 18145 ;;		_LCDTRXCount
 18146 ;;		_LCDDisplay
 18147 ;;		_run_p2p_demo
 18148 ;; This function uses a non-reentrant model
 18149 ;;
 18150                           
 18151                           
 18152                           ;psect for function _sprintf
 18153  0111                     _sprintf:	
 18154                           
 18155                           ;incstack = 0
 18156                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18157                           ;sprintf@sp stored from wreg
 18158  0111  00D4               	movwf	sprintf@sp
 18159                           
 18160                           ;doprnt.c: 494: va_list ap;
 18161                           ;doprnt.c: 499: signed char c;
 18162                           ;doprnt.c: 501: int width;
 18163                           ;doprnt.c: 506: signed char prec;
 18164                           ;doprnt.c: 508: unsigned short flag;
 18165                           ;doprnt.c: 523: union {
 18166                           ;doprnt.c: 524: unsigned long vd;
 18167                           ;doprnt.c: 525: double integ;
 18168                           ;doprnt.c: 526: } tmpval;
 18169                           ;doprnt.c: 528: unsigned int val;
 18170                           ;doprnt.c: 529: unsigned len;
 18171                           ;doprnt.c: 530: const char * cp;
 18172                           ;doprnt.c: 533: *ap = __va_start();
 18173  0112  3037               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 18174  0113  00CD               	movwf	sprintf@ap
 18175  0114                     l8935:	
 18176                           ;doprnt.c: 536: while(c = *f++) {
 18177                           
 18178  0114  0020               	movlb	0	; select bank0
 18179  0115  0836               	movf	sprintf@f+1,w
 18180  0116  00C0               	movwf	??_sprintf+1
 18181  0117  0835               	movf	sprintf@f,w
 18182  0118  00BF               	movwf	??_sprintf
 18183  0119  0AB5               	incf	sprintf@f,f
 18184  011A  1903               	skipnz
 18185  011B  0AB6               	incf	sprintf@f+1,f
 18186  011C  0084               	movwf	4
 18187  011D  0840               	movf	??_sprintf+1,w
 18188  011E  0085               	movwf	5
 18189  011F  0800               	movf	0,w	;code access
 18190  0120  00D3               	movwf	sprintf@c
 18191  0121  0853               	movf	sprintf@c,w
 18192  0122  1903               	btfsc	3,2
 18193  0123  2CC5               	goto	l8937
 18194                           
 18195                           ;doprnt.c: 538: if(c != '%')
 18196  0124  3025               	movlw	37
 18197  0125  0653               	xorwf	sprintf@c,w
 18198  0126  1903               	btfsc	3,2
 18199  0127  2930               	goto	l8607
 18200                           
 18201                           ;doprnt.c: 540: {
 18202                           ;doprnt.c: 541: ((*sp++ = (c)));
 18203  0128  0854               	movf	sprintf@sp,w
 18204  0129  0086               	movwf	6
 18205  012A  3002               	movlw	2	; select bank4/5
 18206  012B  0087               	movwf	7
 18207  012C  0853               	movf	sprintf@c,w
 18208  012D  0081               	movwf	1
 18209  012E  0AD4               	incf	sprintf@sp,f
 18210                           
 18211                           ;doprnt.c: 542: continue;
 18212  012F  2914               	goto	l8935
 18213  0130                     l8607:	
 18214                           
 18215                           ;doprnt.c: 543: }
 18216                           ;doprnt.c: 546: width = 0;
 18217  0130  01D1               	clrf	sprintf@width
 18218  0131  01D2               	clrf	sprintf@width+1
 18219                           
 18220                           ;doprnt.c: 548: flag = 0;
 18221  0132  01D5               	clrf	sprintf@flag
 18222  0133  01D6               	clrf	sprintf@flag+1
 18223  0134  293F               	goto	l8619
 18224  0135                     l1082:	
 18225                           ;doprnt.c: 553: case '-':
 18226                           
 18227                           
 18228                           ;doprnt.c: 554: flag |= 0x08;
 18229  0135  15D5               	bsf	sprintf@flag,3
 18230                           
 18231                           ;doprnt.c: 556: continue;
 18232  0136  293C               	goto	l8609
 18233  0137                     l1084:	
 18234                           ;doprnt.c: 560: case ' ':
 18235                           
 18236                           
 18237                           ;doprnt.c: 561: flag |= 0x01;
 18238  0137  1455               	bsf	sprintf@flag,0
 18239  0138  293C               	goto	l8609
 18240  0139                     l1085:	
 18241                           ;doprnt.c: 573: case '#':
 18242                           
 18243                           
 18244                           ;doprnt.c: 574: flag |= 0x800;
 18245  0139  15D6               	bsf	sprintf@flag+1,3
 18246  013A  293C               	goto	l8609
 18247  013B                     l1086:	
 18248                           ;doprnt.c: 579: case '0':
 18249                           
 18250                           
 18251                           ;doprnt.c: 580: flag |= 0x04;
 18252  013B  1555               	bsf	sprintf@flag,2
 18253  013C                     l8609:	
 18254                           
 18255                           ;doprnt.c: 555: f++;
 18256  013C  0AB5               	incf	sprintf@f,f
 18257  013D  1903               	skipnz
 18258  013E  0AB6               	incf	sprintf@f+1,f
 18259  013F                     l8619:	
 18260  013F  0835               	movf	sprintf@f,w
 18261  0140  0084               	movwf	4
 18262  0141  0836               	movf	sprintf@f+1,w
 18263  0142  0085               	movwf	5
 18264  0143  0800               	movf	0,w	;code access
 18265                           
 18266                           ; Switch size 1, requested type "speed"
 18267                           ; Number of cases is 4, Range of values is 32 to 48
 18268                           ; switch strategies available:
 18269                           ; Name         Instructions Cycles
 18270                           ; simple_byte           13     7 (average)
 18271                           ; direct_byte           43     9 (fixed)
 18272                           ; jumptable            263     9 (fixed)
 18273                           ;	Chosen strategy is simple_byte
 18274  0144  3A20               	xorlw	32	; case 32
 18275  0145  1903               	skipnz
 18276  0146  2937               	goto	l1084
 18277  0147  3A03               	xorlw	3	; case 35
 18278  0148  1903               	skipnz
 18279  0149  2939               	goto	l1085
 18280  014A  3A0E               	xorlw	14	; case 45
 18281  014B  1903               	skipnz
 18282  014C  2935               	goto	l1082
 18283  014D  3A1D               	xorlw	29	; case 48
 18284  014E  1903               	skipnz
 18285  014F  293B               	goto	l1086
 18286  0150  2951               	goto	l1088
 18287  0151                     l1088:	
 18288                           
 18289                           ;doprnt.c: 593: if(flag & 0x08)
 18290  0151  1DD5               	btfss	sprintf@flag,3
 18291  0152  2954               	goto	l8623
 18292                           
 18293                           ;doprnt.c: 594: flag &= ~0x04;
 18294  0153  1155               	bcf	sprintf@flag,2
 18295  0154                     l8623:	
 18296                           
 18297                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 18298  0154  0835               	movf	sprintf@f,w
 18299  0155  0084               	movwf	4
 18300  0156  0836               	movf	sprintf@f+1,w
 18301  0157  0085               	movwf	5
 18302  0158  0800               	movf	0,w	;code access
 18303  0159  24F0  3181         	fcall	_isdigit
 18304  015B  1C03               	btfss	3,0
 18305  015C  2989               	goto	l8635
 18306                           
 18307                           ;doprnt.c: 598: width = 0;
 18308  015D  01D1               	clrf	sprintf@width
 18309  015E  01D2               	clrf	sprintf@width+1
 18310  015F                     l8627:	
 18311                           
 18312                           ;doprnt.c: 600: width *= 10;
 18313  015F  300A               	movlw	10
 18314  0160  00AE               	movwf	___wmul@multiplier
 18315  0161  01AF               	clrf	___wmul@multiplier+1
 18316  0162  0852               	movf	sprintf@width+1,w
 18317  0163  00B1               	movwf	___wmul@multiplicand+1
 18318  0164  0851               	movf	sprintf@width,w
 18319  0165  00B0               	movwf	___wmul@multiplicand
 18320  0166  318F  275B  3181   	fcall	___wmul
 18321  0169  082F               	movf	?___wmul+1,w
 18322  016A  00D2               	movwf	sprintf@width+1
 18323  016B  082E               	movf	?___wmul,w
 18324  016C  00D1               	movwf	sprintf@width
 18325                           
 18326                           ;doprnt.c: 601: width += *f++ - '0';
 18327  016D  0835               	movf	sprintf@f,w
 18328  016E  0084               	movwf	4
 18329  016F  0836               	movf	sprintf@f+1,w
 18330  0170  0085               	movwf	5
 18331  0171  0800               	movf	0,w	;code access
 18332  0172  3ED0               	addlw	208
 18333  0173  00BF               	movwf	??_sprintf
 18334  0174  30FF               	movlw	255
 18335  0175  1803               	skipnc
 18336  0176  3000               	movlw	0
 18337  0177  00C0               	movwf	??_sprintf+1
 18338  0178  083F               	movf	??_sprintf,w
 18339  0179  07D1               	addwf	sprintf@width,f
 18340  017A  0840               	movf	??_sprintf+1,w
 18341  017B  3DD2               	addwfc	sprintf@width+1,f
 18342  017C  0AB5               	incf	sprintf@f,f
 18343  017D  1903               	skipnz
 18344  017E  0AB6               	incf	sprintf@f+1,f
 18345                           
 18346                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 18347  017F  0835               	movf	sprintf@f,w
 18348  0180  0084               	movwf	4
 18349  0181  0836               	movf	sprintf@f+1,w
 18350  0182  0085               	movwf	5
 18351  0183  0800               	movf	0,w	;code access
 18352  0184  24F0  3181         	fcall	_isdigit
 18353  0186  1C03               	btfss	3,0
 18354  0187  299D               	goto	l8643
 18355  0188  295F               	goto	l8627
 18356  0189                     l8635:	
 18357  0189  0835               	movf	sprintf@f,w
 18358  018A  0084               	movwf	4
 18359  018B  0836               	movf	sprintf@f+1,w
 18360  018C  0085               	movwf	5
 18361  018D  0012               	moviw fsr0++
 18362  018E  3A2A               	xorlw	42
 18363  018F  1D03               	btfss	3,2
 18364  0190  299D               	goto	l8643
 18365                           
 18366                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 18367  0191  084D               	movf	sprintf@ap,w
 18368  0192  0086               	movwf	6
 18369  0193  0187               	clrf	7
 18370  0194  3F40               	moviw [0]fsr1
 18371  0195  00D1               	movwf	sprintf@width
 18372  0196  3F41               	moviw [1]fsr1
 18373  0197  00D2               	movwf	sprintf@width+1
 18374  0198  0ACD               	incf	sprintf@ap,f
 18375  0199  0ACD               	incf	sprintf@ap,f
 18376                           
 18377                           ;doprnt.c: 606: f++;
 18378  019A  0AB5               	incf	sprintf@f,f
 18379  019B  1903               	skipnz
 18380  019C  0AB6               	incf	sprintf@f+1,f
 18381  019D                     l8643:	
 18382                           
 18383                           ;doprnt.c: 608: }
 18384                           ;doprnt.c: 611: if(*f == '.') {
 18385  019D  0835               	movf	sprintf@f,w
 18386  019E  0084               	movwf	4
 18387  019F  0836               	movf	sprintf@f+1,w
 18388  01A0  0085               	movwf	5
 18389  01A1  0012               	moviw fsr0++
 18390  01A2  3A2E               	xorlw	46
 18391  01A3  1D03               	btfss	3,2
 18392  01A4  29D9               	goto	l8665
 18393                           
 18394                           ;doprnt.c: 612: flag |= 0x4000;
 18395  01A5  1756               	bsf	sprintf@flag+1,6
 18396                           
 18397                           ;doprnt.c: 613: f++;
 18398  01A6  0AB5               	incf	sprintf@f,f
 18399  01A7  1903               	skipnz
 18400  01A8  0AB6               	incf	sprintf@f+1,f
 18401                           
 18402                           ;doprnt.c: 615: if(*f == '*') {
 18403  01A9  0835               	movf	sprintf@f,w
 18404  01AA  0084               	movwf	4
 18405  01AB  0836               	movf	sprintf@f+1,w
 18406  01AC  0085               	movwf	5
 18407  01AD  0012               	moviw fsr0++
 18408  01AE  3A2A               	xorlw	42
 18409  01AF  1D03               	btfss	3,2
 18410  01B0  29BC               	goto	l8657
 18411                           
 18412                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 18413  01B1  084D               	movf	sprintf@ap,w
 18414  01B2  0086               	movwf	6
 18415  01B3  0187               	clrf	7
 18416  01B4  0801               	movf	1,w
 18417  01B5  00D0               	movwf	sprintf@prec
 18418  01B6  0ACD               	incf	sprintf@ap,f
 18419  01B7  0ACD               	incf	sprintf@ap,f
 18420                           
 18421                           ;doprnt.c: 617: f++;
 18422  01B8  0AB5               	incf	sprintf@f,f
 18423  01B9  1903               	skipnz
 18424  01BA  0AB6               	incf	sprintf@f+1,f
 18425                           
 18426                           ;doprnt.c: 618: } else
 18427  01BB  2A50               	goto	l8717
 18428  01BC                     l8657:	
 18429                           
 18430                           ;doprnt.c: 620: {
 18431                           ;doprnt.c: 621: prec = 0;
 18432  01BC  01D0               	clrf	sprintf@prec
 18433  01BD                     l8663:	
 18434                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 18435                           
 18436  01BD  0835               	movf	sprintf@f,w
 18437  01BE  0084               	movwf	4
 18438  01BF  0836               	movf	sprintf@f+1,w
 18439  01C0  0085               	movwf	5
 18440  01C1  0800               	movf	0,w	;code access
 18441  01C2  24F0  3181         	fcall	_isdigit
 18442  01C4  1C03               	btfss	3,0
 18443  01C5  2A50               	goto	l8717
 18444                           
 18445                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 18446  01C6  0835               	movf	sprintf@f,w
 18447  01C7  0084               	movwf	4
 18448  01C8  0836               	movf	sprintf@f+1,w
 18449  01C9  0085               	movwf	5
 18450  01CA  0800               	movf	0,w	;code access
 18451  01CB  00BF               	movwf	??_sprintf
 18452  01CC  300A               	movlw	10
 18453  01CD  00A9               	movwf	___bmul@multiplicand
 18454  01CE  0850               	movf	sprintf@prec,w
 18455  01CF  3197  2731  3181   	fcall	___bmul
 18456  01D2  073F               	addwf	??_sprintf,w
 18457  01D3  3ED0               	addlw	-48
 18458  01D4  00D0               	movwf	sprintf@prec
 18459  01D5  0AB5               	incf	sprintf@f,f
 18460  01D6  1903               	skipnz
 18461  01D7  0AB6               	incf	sprintf@f+1,f
 18462  01D8  29BD               	goto	l8663
 18463  01D9                     l8665:	
 18464                           
 18465                           ;doprnt.c: 626: prec = 0;
 18466  01D9  01D0               	clrf	sprintf@prec
 18467  01DA  2A50               	goto	l8717
 18468  01DB                     l1105:	
 18469                           ;doprnt.c: 689: case 'o':
 18470                           
 18471                           
 18472                           ;doprnt.c: 691: flag |= 0x40;
 18473  01DB  1755               	bsf	sprintf@flag,6
 18474                           
 18475                           ;doprnt.c: 693: break;
 18476  01DC  2A65               	goto	l8719
 18477  01DD                     l1109:	
 18478                           ;doprnt.c: 712: case 'X':
 18479                           
 18480                           
 18481                           ;doprnt.c: 714: flag |= 0x20;
 18482  01DD  16D5               	bsf	sprintf@flag,5
 18483  01DE                     l1110:	
 18484                           ;doprnt.c: 718: case 'x':
 18485                           
 18486                           
 18487                           ;doprnt.c: 721: flag |= 0x80;
 18488  01DE  17D5               	bsf	sprintf@flag,7
 18489                           
 18490                           ;doprnt.c: 723: break;
 18491  01DF  2A65               	goto	l8719
 18492  01E0                     l8667:	
 18493                           
 18494                           ;doprnt.c: 753: if(prec && prec < len)
 18495  01E0  0850               	movf	sprintf@prec,w
 18496  01E1  1903               	btfsc	3,2
 18497  01E2  29F5               	goto	l8673
 18498  01E3  0850               	movf	sprintf@prec,w
 18499  01E4  00BF               	movwf	??_sprintf
 18500  01E5  01C0               	clrf	??_sprintf+1
 18501  01E6  1BBF               	btfsc	??_sprintf,7
 18502  01E7  03C0               	decf	??_sprintf+1,f
 18503  01E8  084C               	movf	sprintf@len+1,w
 18504  01E9  0240               	subwf	??_sprintf+1,w
 18505  01EA  1D03               	skipz
 18506  01EB  29EE               	goto	u7465
 18507  01EC  084B               	movf	sprintf@len,w
 18508  01ED  023F               	subwf	??_sprintf,w
 18509  01EE                     u7465:	
 18510  01EE  1803               	skipnc
 18511  01EF  29F5               	goto	l8673
 18512                           
 18513                           ;doprnt.c: 754: len = prec;
 18514  01F0  0850               	movf	sprintf@prec,w
 18515  01F1  00CB               	movwf	sprintf@len
 18516  01F2  01CC               	clrf	sprintf@len+1
 18517  01F3  1BCB               	btfsc	sprintf@len,7
 18518  01F4  03CC               	decf	sprintf@len+1,f
 18519  01F5                     l8673:	
 18520                           
 18521                           ;doprnt.c: 757: if(width > len)
 18522  01F5  0852               	movf	sprintf@width+1,w
 18523  01F6  024C               	subwf	sprintf@len+1,w
 18524  01F7  1D03               	skipz
 18525  01F8  29FB               	goto	u7475
 18526  01F9  0851               	movf	sprintf@width,w
 18527  01FA  024B               	subwf	sprintf@len,w
 18528  01FB                     u7475:	
 18529  01FB  1803               	skipnc
 18530  01FC  2A02               	goto	l8677
 18531                           
 18532                           ;doprnt.c: 758: width -= len;
 18533  01FD  084B               	movf	sprintf@len,w
 18534  01FE  02D1               	subwf	sprintf@width,f
 18535  01FF  084C               	movf	sprintf@len+1,w
 18536  0200  3BD2               	subwfb	sprintf@width+1,f
 18537  0201  2A04               	goto	l8679
 18538  0202                     l8677:	
 18539                           
 18540                           ;doprnt.c: 759: else
 18541                           ;doprnt.c: 760: width = 0;
 18542  0202  01D1               	clrf	sprintf@width
 18543  0203  01D2               	clrf	sprintf@width+1
 18544  0204                     l8679:	
 18545                           
 18546                           ;doprnt.c: 762: if(!(flag & 0x08))
 18547  0204  1DD5               	btfss	sprintf@flag,3
 18548  0205  2A0E               	goto	l8687
 18549  0206  2A23               	goto	l8695
 18550  0207                     l8683:	
 18551                           
 18552                           ;doprnt.c: 765: ((*sp++ = (' ')));
 18553  0207  0854               	movf	sprintf@sp,w
 18554  0208  0086               	movwf	6
 18555  0209  3002               	movlw	2	; select bank4/5
 18556  020A  0087               	movwf	7
 18557  020B  3020               	movlw	32
 18558  020C  0081               	movwf	1
 18559  020D  0AD4               	incf	sprintf@sp,f
 18560  020E                     l8687:	
 18561  020E  30FF               	movlw	-1
 18562  020F  07D1               	addwf	sprintf@width,f
 18563  0210  1C03               	skipc
 18564  0211  03D2               	decf	sprintf@width+1,f
 18565  0212  0F51               	incfsz	sprintf@width,w
 18566  0213  2A07               	goto	l8683
 18567  0214  0A52               	incf	sprintf@width+1,w
 18568  0215  1903               	btfsc	3,2
 18569  0216  2A23               	goto	l8695
 18570  0217  2A07               	goto	l8683
 18571  0218                     l8689:	
 18572                           
 18573                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 18574  0218  0854               	movf	sprintf@sp,w
 18575  0219  0086               	movwf	6
 18576  021A  3002               	movlw	2	; select bank4/5
 18577  021B  0087               	movwf	7
 18578  021C  0849               	movf	sprintf@cp,w
 18579  021D  0084               	movwf	4
 18580  021E  0185               	clrf	5
 18581  021F  0800               	movf	0,w
 18582  0220  0081               	movwf	1
 18583  0221  0AC9               	incf	sprintf@cp,f
 18584  0222  0AD4               	incf	sprintf@sp,f
 18585  0223                     l8695:	
 18586  0223  3001               	movlw	1
 18587  0224  02CB               	subwf	sprintf@len,f
 18588  0225  3000               	movlw	0
 18589  0226  3BCC               	subwfb	sprintf@len+1,f
 18590  0227  0F4B               	incfsz	sprintf@len,w
 18591  0228  2A18               	goto	l8689
 18592  0229  0A4C               	incf	sprintf@len+1,w
 18593  022A  1D03               	btfss	3,2
 18594  022B  2A18               	goto	l8689
 18595                           
 18596                           ;doprnt.c: 770: if(flag & 0x08)
 18597  022C  19D5               	btfsc	sprintf@flag,3
 18598  022D  2A36               	goto	l8703
 18599  022E  2914               	goto	l8935
 18600  022F                     l8699:	
 18601                           
 18602                           ;doprnt.c: 772: ((*sp++ = (' ')));
 18603  022F  0854               	movf	sprintf@sp,w
 18604  0230  0086               	movwf	6
 18605  0231  3002               	movlw	2	; select bank4/5
 18606  0232  0087               	movwf	7
 18607  0233  3020               	movlw	32
 18608  0234  0081               	movwf	1
 18609  0235  0AD4               	incf	sprintf@sp,f
 18610  0236                     l8703:	
 18611  0236  30FF               	movlw	-1
 18612  0237  07D1               	addwf	sprintf@width,f
 18613  0238  1C03               	skipc
 18614  0239  03D2               	decf	sprintf@width+1,f
 18615  023A  0F51               	incfsz	sprintf@width,w
 18616  023B  2A2F               	goto	l8699
 18617  023C  0A52               	incf	sprintf@width+1,w
 18618  023D  1903               	btfsc	3,2
 18619  023E  2914               	goto	l8935
 18620  023F  2A2F               	goto	l8699
 18621  0240                     l8705:	
 18622                           
 18623                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 18624  0240  084D               	movf	sprintf@ap,w
 18625  0241  0086               	movwf	6
 18626  0242  0187               	clrf	7
 18627  0243  0801               	movf	1,w
 18628  0244  00D3               	movwf	sprintf@c
 18629  0245  0ACD               	incf	sprintf@ap,f
 18630  0246  0ACD               	incf	sprintf@ap,f
 18631  0247                     l8709:	
 18632                           
 18633                           ;doprnt.c: 805: cp = (char *)&c;
 18634  0247  3053               	movlw	(low (sprintf@c| 0))& (0+255)
 18635  0248  00C9               	movwf	sprintf@cp
 18636                           
 18637                           ;doprnt.c: 806: len = 1;
 18638  0249  01CB               	clrf	sprintf@len
 18639  024A  0ACB               	incf	sprintf@len,f
 18640  024B  01CC               	clrf	sprintf@len+1
 18641                           
 18642                           ;doprnt.c: 807: goto dostring;
 18643  024C  29E0               	goto	l8667
 18644  024D                     l8713:	
 18645                           
 18646                           ;doprnt.c: 818: flag |= 0xC0;
 18647  024D  30C0               	movlw	192
 18648  024E  04D5               	iorwf	sprintf@flag,f
 18649                           
 18650                           ;doprnt.c: 819: break;
 18651  024F  2A65               	goto	l8719
 18652  0250                     l8717:	
 18653  0250  0836               	movf	sprintf@f+1,w
 18654  0251  00C0               	movwf	??_sprintf+1
 18655  0252  0835               	movf	sprintf@f,w
 18656  0253  00BF               	movwf	??_sprintf
 18657  0254  0AB5               	incf	sprintf@f,f
 18658  0255  1903               	skipnz
 18659  0256  0AB6               	incf	sprintf@f+1,f
 18660  0257  0084               	movwf	4
 18661  0258  0840               	movf	??_sprintf+1,w
 18662  0259  0085               	movwf	5
 18663  025A  0800               	movf	0,w	;code access
 18664  025B  00D3               	movwf	sprintf@c
 18665                           
 18666                           ; Switch size 1, requested type "speed"
 18667                           ; Number of cases is 8, Range of values is 0 to 120
 18668                           ; switch strategies available:
 18669                           ; Name         Instructions Cycles
 18670                           ; direct_byte          248     6 (fixed)
 18671                           ; simple_byte           25    13 (average)
 18672                           ; jumptable            260     6 (fixed)
 18673                           ;	Chosen strategy is direct_byte
 18674  025C  0084               	movwf	4
 18675  025D  3079               	movlw	121
 18676  025E  0204               	subwf	4,w
 18677  025F  1803               	skipnc
 18678  0260  2A47               	goto	l8709
 18679  0261  3185               	movlp	high S10185
 18680  0262  3504               	lslf	4,w
 18681  0263  3E00               	addlw	low S10185
 18682  0264  0082               	movwf	2
 18683  0265                     l8719:	
 18684                           
 18685                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 18686  0265  0855               	movf	sprintf@flag,w
 18687  0266  39C0               	andlw	192
 18688  0267  1D03               	btfss	3,2
 18689  0268  2A7C               	goto	l8731
 18690                           
 18691                           ;doprnt.c: 1253: {
 18692                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 18693  0269  084D               	movf	sprintf@ap,w
 18694  026A  0086               	movwf	6
 18695  026B  0187               	clrf	7
 18696  026C  3F40               	moviw [0]fsr1
 18697  026D  00CE               	movwf	sprintf@val
 18698  026E  3F41               	moviw [1]fsr1
 18699  026F  00CF               	movwf	sprintf@val+1
 18700  0270  0ACD               	incf	sprintf@ap,f
 18701  0271  0ACD               	incf	sprintf@ap,f
 18702                           
 18703                           ;doprnt.c: 1261: if((int)val < 0) {
 18704  0272  1FCF               	btfss	sprintf@val+1,7
 18705  0273  2A85               	goto	l8735
 18706                           
 18707                           ;doprnt.c: 1262: flag |= 0x03;
 18708  0274  3003               	movlw	3
 18709  0275  04D5               	iorwf	sprintf@flag,f
 18710                           
 18711                           ;doprnt.c: 1263: val = -val;
 18712  0276  09CE               	comf	sprintf@val,f
 18713  0277  09CF               	comf	sprintf@val+1,f
 18714  0278  0ACE               	incf	sprintf@val,f
 18715  0279  1903               	skipnz
 18716  027A  0ACF               	incf	sprintf@val+1,f
 18717  027B  2A85               	goto	l8735
 18718  027C                     l8731:	
 18719                           
 18720                           ;doprnt.c: 1268: else
 18721                           ;doprnt.c: 1273: {
 18722                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18723  027C  084D               	movf	sprintf@ap,w
 18724  027D  0086               	movwf	6
 18725  027E  0187               	clrf	7
 18726  027F  3F40               	moviw [0]fsr1
 18727  0280  00CE               	movwf	sprintf@val
 18728  0281  3F41               	moviw [1]fsr1
 18729  0282  00CF               	movwf	sprintf@val+1
 18730  0283  0ACD               	incf	sprintf@ap,f
 18731  0284  0ACD               	incf	sprintf@ap,f
 18732  0285                     l8735:	
 18733                           
 18734                           ;doprnt.c: 1287: }
 18735                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 18736  0285  0850               	movf	sprintf@prec,w
 18737  0286  1D03               	btfss	3,2
 18738  0287  2AE5               	goto	l8779
 18739  0288  084E               	movf	sprintf@val,w
 18740  0289  044F               	iorwf	sprintf@val+1,w
 18741  028A  1D03               	btfss	3,2
 18742  028B  2AE5               	goto	l8779
 18743                           
 18744                           ;doprnt.c: 1291: prec++;
 18745  028C  0AD0               	incf	sprintf@prec,f
 18746  028D  2AE5               	goto	l8779
 18747  028E                     l1135:	
 18748                           
 18749                           ;doprnt.c: 1302: case 0xC0:
 18750                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18751  028E  01D3               	clrf	sprintf@c
 18752  028F                     L22:	
 18753  028F  3005               	movlw	5
 18754  0290  0AD3               	incf	sprintf@c,f
 18755  0291  0653               	xorwf	sprintf@c,w
 18756  0292  1903               	btfsc	3,2
 18757  0293  2AF3               	goto	l8781
 18758                           
 18759                           ;doprnt.c: 1306: if(val < dpowers[c])
 18760  0294  0853               	movf	sprintf@c,w
 18761  0295  00BF               	movwf	??_sprintf
 18762  0296  30CC               	movlw	low (_dpowers| (0+32768))
 18763  0297  01C0               	clrf	??_sprintf+1
 18764  0298  35BF               	lslf	??_sprintf,f
 18765  0299  0DC0               	rlf	??_sprintf+1,f
 18766  029A  073F               	addwf	??_sprintf,w
 18767  029B  0084               	movwf	4
 18768  029C  30A0               	movlw	high (_dpowers| (0+32768))
 18769  029D  3D40               	addwfc	??_sprintf+1,w
 18770  029E  0085               	movwf	5
 18771  029F  3F00               	moviw [0]fsr0
 18772  02A0  00C1               	movwf	??_sprintf+2
 18773  02A1  3F01               	moviw [1]fsr0
 18774  02A2  00C2               	movwf	??_sprintf+3
 18775  02A3  024F               	subwf	sprintf@val+1,w
 18776  02A4  1D03               	skipz
 18777  02A5  2AA8               	goto	u7585
 18778  02A6  0841               	movf	??_sprintf+2,w
 18779  02A7  024E               	subwf	sprintf@val,w
 18780  02A8                     u7585:	
 18781  02A8  1C03               	btfss	3,0
 18782  02A9  2AF3               	goto	l8781
 18783  02AA  2A8F               	goto	L22
 18784  02AB                     l1140:	
 18785                           ;doprnt.c: 1314: case 0x80:
 18786                           
 18787                           
 18788                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18789  02AB  01D3               	clrf	sprintf@c
 18790  02AC                     L23:	
 18791  02AC  3004               	movlw	4
 18792  02AD  0AD3               	incf	sprintf@c,f
 18793  02AE  0653               	xorwf	sprintf@c,w
 18794  02AF  1903               	btfsc	3,2
 18795  02B0  2AF3               	goto	l8781
 18796                           
 18797                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18798  02B1  0853               	movf	sprintf@c,w
 18799  02B2  00BF               	movwf	??_sprintf
 18800  02B3  30D6               	movlw	low (_hexpowers| (0+32768))
 18801  02B4  01C0               	clrf	??_sprintf+1
 18802  02B5  35BF               	lslf	??_sprintf,f
 18803  02B6  0DC0               	rlf	??_sprintf+1,f
 18804  02B7  073F               	addwf	??_sprintf,w
 18805  02B8  0084               	movwf	4
 18806  02B9  30A0               	movlw	high (_hexpowers| (0+32768))
 18807  02BA  3D40               	addwfc	??_sprintf+1,w
 18808  02BB  0085               	movwf	5
 18809  02BC  3F00               	moviw [0]fsr0
 18810  02BD  00C1               	movwf	??_sprintf+2
 18811  02BE  3F01               	moviw [1]fsr0
 18812  02BF  00C2               	movwf	??_sprintf+3
 18813  02C0  024F               	subwf	sprintf@val+1,w
 18814  02C1  1D03               	skipz
 18815  02C2  2AC5               	goto	u7605
 18816  02C3  0841               	movf	??_sprintf+2,w
 18817  02C4  024E               	subwf	sprintf@val,w
 18818  02C5                     u7605:	
 18819  02C5  1C03               	btfss	3,0
 18820  02C6  2AF3               	goto	l8781
 18821  02C7  2AAC               	goto	L23
 18822  02C8                     l1144:	
 18823                           ;doprnt.c: 1326: case 0x40:
 18824                           
 18825                           
 18826                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 18827  02C8  01D3               	clrf	sprintf@c
 18828  02C9                     L24:	
 18829  02C9  3006               	movlw	6
 18830  02CA  0AD3               	incf	sprintf@c,f
 18831  02CB  0653               	xorwf	sprintf@c,w
 18832  02CC  1903               	btfsc	3,2
 18833  02CD  2AF3               	goto	l8781
 18834                           
 18835                           ;doprnt.c: 1329: if(val < octpowers[c])
 18836  02CE  0853               	movf	sprintf@c,w
 18837  02CF  00BF               	movwf	??_sprintf
 18838  02D0  30C0               	movlw	low (_octpowers| (0+32768))
 18839  02D1  01C0               	clrf	??_sprintf+1
 18840  02D2  35BF               	lslf	??_sprintf,f
 18841  02D3  0DC0               	rlf	??_sprintf+1,f
 18842  02D4  073F               	addwf	??_sprintf,w
 18843  02D5  0084               	movwf	4
 18844  02D6  30A0               	movlw	high (_octpowers| (0+32768))
 18845  02D7  3D40               	addwfc	??_sprintf+1,w
 18846  02D8  0085               	movwf	5
 18847  02D9  3F00               	moviw [0]fsr0
 18848  02DA  00C1               	movwf	??_sprintf+2
 18849  02DB  3F01               	moviw [1]fsr0
 18850  02DC  00C2               	movwf	??_sprintf+3
 18851  02DD  024F               	subwf	sprintf@val+1,w
 18852  02DE  1D03               	skipz
 18853  02DF  2AE2               	goto	u7625
 18854  02E0  0841               	movf	??_sprintf+2,w
 18855  02E1  024E               	subwf	sprintf@val,w
 18856  02E2                     u7625:	
 18857  02E2  1C03               	btfss	3,0
 18858  02E3  2AF3               	goto	l8781
 18859  02E4  2AC9               	goto	L24
 18860  02E5                     l8779:	
 18861  02E5  0855               	movf	sprintf@flag,w
 18862  02E6  39C0               	andlw	192
 18863                           
 18864                           ; Switch size 1, requested type "speed"
 18865                           ; Number of cases is 4, Range of values is 0 to 192
 18866                           ; switch strategies available:
 18867                           ; Name         Instructions Cycles
 18868                           ; simple_byte           13     7 (average)
 18869                           ; jumptable            260     6 (fixed)
 18870                           ;	Chosen strategy is simple_byte
 18871  02E7  1903               	skipnz
 18872  02E8  2A8E               	goto	l1135
 18873  02E9  3A40               	xorlw	64	; case 64
 18874  02EA  1903               	skipnz
 18875  02EB  2AC8               	goto	l1144
 18876  02EC  3AC0               	xorlw	192	; case 128
 18877  02ED  1903               	skipnz
 18878  02EE  2AAB               	goto	l1140
 18879  02EF  3A40               	xorlw	64	; case 192
 18880  02F0  1903               	skipnz
 18881  02F1  2A8E               	goto	l1135
 18882  02F2  2AF3               	goto	l8781
 18883  02F3                     l8781:	
 18884                           
 18885                           ;doprnt.c: 1339: if(c < prec)
 18886  02F3  0853               	movf	sprintf@c,w
 18887  02F4  3A80               	xorlw	128
 18888  02F5  00BF               	movwf	??_sprintf
 18889  02F6  0850               	movf	sprintf@prec,w
 18890  02F7  3A80               	xorlw	128
 18891  02F8  02BF               	subwf	??_sprintf,f
 18892                           
 18893                           ;doprnt.c: 1340: c = prec;
 18894  02F9  0850               	movf	sprintf@prec,w
 18895  02FA  1803               	skipnc
 18896  02FB  2AFE               	goto	L37
 18897  02FC  00D3               	movwf	sprintf@c
 18898  02FD  2B07               	goto	l8789
 18899  02FE                     L37:	
 18900                           ;doprnt.c: 1341: else if(prec < c)
 18901                           
 18902  02FE  3A80               	xorlw	128
 18903  02FF  00BF               	movwf	??_sprintf
 18904  0300  0853               	movf	sprintf@c,w
 18905  0301  3A80               	xorlw	128
 18906  0302  02BF               	subwf	??_sprintf,f
 18907  0303  1803               	skipnc
 18908  0304  2B07               	goto	l8789
 18909                           
 18910                           ;doprnt.c: 1342: prec = c;
 18911  0305  0853               	movf	sprintf@c,w
 18912  0306  00D0               	movwf	sprintf@prec
 18913  0307                     l8789:	
 18914                           
 18915                           ;doprnt.c: 1345: if(width && flag & 0x03)
 18916  0307  0851               	movf	sprintf@width,w
 18917  0308  0452               	iorwf	sprintf@width+1,w
 18918  0309  1903               	btfsc	3,2
 18919  030A  2B13               	goto	l8795
 18920  030B  0855               	movf	sprintf@flag,w
 18921  030C  3903               	andlw	3
 18922  030D  1903               	btfsc	3,2
 18923  030E  2B13               	goto	l8795
 18924                           
 18925                           ;doprnt.c: 1346: width--;
 18926  030F  30FF               	movlw	-1
 18927  0310  07D1               	addwf	sprintf@width,f
 18928  0311  1C03               	skipc
 18929  0312  03D2               	decf	sprintf@width+1,f
 18930  0313                     l8795:	
 18931                           
 18932                           ;doprnt.c: 1348: if(flag & 0x4000) {
 18933  0313  1F56               	btfss	sprintf@flag+1,6
 18934  0314  2B33               	goto	l8803
 18935                           
 18936                           ;doprnt.c: 1349: if(width > prec)
 18937  0315  0850               	movf	sprintf@prec,w
 18938  0316  00BF               	movwf	??_sprintf
 18939  0317  01C0               	clrf	??_sprintf+1
 18940  0318  1BBF               	btfsc	??_sprintf,7
 18941  0319  03C0               	decf	??_sprintf+1,f
 18942  031A  0840               	movf	??_sprintf+1,w
 18943  031B  3A80               	xorlw	128
 18944  031C  00C1               	movwf	??_sprintf+2
 18945  031D  0852               	movf	sprintf@width+1,w
 18946  031E  3A80               	xorlw	128
 18947  031F  0241               	subwf	??_sprintf+2,w
 18948  0320  1D03               	skipz
 18949  0321  2B24               	goto	u7685
 18950  0322  0851               	movf	sprintf@width,w
 18951  0323  023F               	subwf	??_sprintf,w
 18952  0324                     u7685:	
 18953  0324  1803               	skipnc
 18954  0325  2B30               	goto	l8801
 18955                           
 18956                           ;doprnt.c: 1350: width -= prec;
 18957  0326  0020               	movlb	0	; select bank0
 18958  0327  0850               	movf	sprintf@prec,w
 18959  0328  00BF               	movwf	??_sprintf
 18960  0329  01C0               	clrf	??_sprintf+1
 18961  032A  1BBF               	btfsc	??_sprintf,7
 18962  032B  03C0               	decf	??_sprintf+1,f
 18963  032C  02D1               	subwf	sprintf@width,f
 18964  032D  0840               	movf	??_sprintf+1,w
 18965  032E  3BD2               	subwfb	sprintf@width+1,f
 18966  032F  2B33               	goto	l8803
 18967  0330                     l8801:	
 18968                           
 18969                           ;doprnt.c: 1351: else
 18970                           ;doprnt.c: 1352: width = 0;
 18971  0330  0020               	movlb	0	; select bank0
 18972  0331  01D1               	clrf	sprintf@width
 18973  0332  01D2               	clrf	sprintf@width+1
 18974  0333                     l8803:	
 18975                           
 18976                           ;doprnt.c: 1353: }
 18977                           ;doprnt.c: 1357: if((flag & (
 18978                           ;doprnt.c: 1359: 0x04|
 18979                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 18980  0333  30C4               	movlw	196
 18981  0334  0555               	andwf	sprintf@flag,w
 18982  0335  00BF               	movwf	??_sprintf
 18983  0336  3008               	movlw	8
 18984  0337  0556               	andwf	sprintf@flag+1,w
 18985  0338  00C0               	movwf	??_sprintf+1
 18986  0339  3040               	movlw	64
 18987  033A  063F               	xorwf	??_sprintf,w
 18988  033B  3008               	movlw	8
 18989  033C  1903               	skipnz
 18990  033D  0640               	xorwf	??_sprintf+1,w
 18991  033E  1D03               	btfss	3,2
 18992  033F  2B46               	goto	l8809
 18993                           
 18994                           ;doprnt.c: 1362: if(width)
 18995  0340  0851               	movf	sprintf@width,w
 18996  0341  0452               	iorwf	sprintf@width+1,w
 18997  0342  1903               	btfsc	3,2
 18998  0343  2B67               	goto	l8817
 18999                           
 19000                           ;doprnt.c: 1363: width--;
 19001  0344  30FF               	movlw	-1
 19002  0345  2B60               	goto	L25
 19003  0346                     l8809:	
 19004                           
 19005                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 19006  0346  30C0               	movlw	192
 19007  0347  0555               	andwf	sprintf@flag,w
 19008  0348  00BF               	movwf	??_sprintf
 19009  0349  3008               	movlw	8
 19010  034A  0556               	andwf	sprintf@flag+1,w
 19011  034B  00C0               	movwf	??_sprintf+1
 19012  034C  3080               	movlw	128
 19013  034D  063F               	xorwf	??_sprintf,w
 19014  034E  3008               	movlw	8
 19015  034F  1903               	skipnz
 19016  0350  0640               	xorwf	??_sprintf+1,w
 19017  0351  1D03               	btfss	3,2
 19018  0352  2B67               	goto	l8817
 19019                           
 19020                           ;doprnt.c: 1372: if(width > 2)
 19021  0353  0852               	movf	sprintf@width+1,w
 19022  0354  3A80               	xorlw	128
 19023  0355  00BF               	movwf	??_sprintf
 19024  0356  3080               	movlw	128
 19025  0357  023F               	subwf	??_sprintf,w
 19026  0358  1D03               	skipz
 19027  0359  2B5C               	goto	u7725
 19028  035A  3003               	movlw	3
 19029  035B  0251               	subwf	sprintf@width,w
 19030  035C                     u7725:	
 19031  035C  1C03               	skipc
 19032  035D  2B64               	goto	l8815
 19033                           
 19034                           ;doprnt.c: 1373: width -= 2;
 19035  035E  30FE               	movlw	-2
 19036  035F  0020               	movlb	0	; select bank0
 19037  0360                     L25:	
 19038  0360  07D1               	addwf	sprintf@width,f
 19039  0361  1C03               	skipc
 19040  0362  03D2               	decf	sprintf@width+1,f
 19041  0363  2B67               	goto	l8817
 19042  0364                     l8815:	
 19043                           
 19044                           ;doprnt.c: 1374: else
 19045                           ;doprnt.c: 1375: width = 0;
 19046  0364  0020               	movlb	0	; select bank0
 19047  0365  01D1               	clrf	sprintf@width
 19048  0366  01D2               	clrf	sprintf@width+1
 19049  0367                     l8817:	
 19050                           
 19051                           ;doprnt.c: 1376: }
 19052                           ;doprnt.c: 1381: if(width > c)
 19053  0367  0853               	movf	sprintf@c,w
 19054  0368  00BF               	movwf	??_sprintf
 19055  0369  01C0               	clrf	??_sprintf+1
 19056  036A  1BBF               	btfsc	??_sprintf,7
 19057  036B  03C0               	decf	??_sprintf+1,f
 19058  036C  0840               	movf	??_sprintf+1,w
 19059  036D  3A80               	xorlw	128
 19060  036E  00C1               	movwf	??_sprintf+2
 19061  036F  0852               	movf	sprintf@width+1,w
 19062  0370  3A80               	xorlw	128
 19063  0371  0241               	subwf	??_sprintf+2,w
 19064  0372  1D03               	skipz
 19065  0373  2B76               	goto	u7735
 19066  0374  0851               	movf	sprintf@width,w
 19067  0375  023F               	subwf	??_sprintf,w
 19068  0376                     u7735:	
 19069  0376  1803               	skipnc
 19070  0377  2B82               	goto	l8821
 19071                           
 19072                           ;doprnt.c: 1382: width -= c;
 19073  0378  0020               	movlb	0	; select bank0
 19074  0379  0853               	movf	sprintf@c,w
 19075  037A  00BF               	movwf	??_sprintf
 19076  037B  01C0               	clrf	??_sprintf+1
 19077  037C  1BBF               	btfsc	??_sprintf,7
 19078  037D  03C0               	decf	??_sprintf+1,f
 19079  037E  02D1               	subwf	sprintf@width,f
 19080  037F  0840               	movf	??_sprintf+1,w
 19081  0380  3BD2               	subwfb	sprintf@width+1,f
 19082  0381  2B85               	goto	l8823
 19083  0382                     l8821:	
 19084                           
 19085                           ;doprnt.c: 1383: else
 19086                           ;doprnt.c: 1384: width = 0;
 19087  0382  0020               	movlb	0	; select bank0
 19088  0383  01D1               	clrf	sprintf@width
 19089  0384  01D2               	clrf	sprintf@width+1
 19090  0385                     l8823:	
 19091                           
 19092                           ;doprnt.c: 1387: if(flag & 0x04) {
 19093  0385  1D55               	btfss	sprintf@flag,2
 19094  0386  2BCB               	goto	l8859
 19095                           
 19096                           ;doprnt.c: 1392: if(flag & 0x03)
 19097  0387  0855               	movf	sprintf@flag,w
 19098  0388  3903               	andlw	3
 19099  0389  1903               	btfsc	3,2
 19100  038A  2B91               	goto	l1164
 19101                           
 19102                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 19103  038B  0854               	movf	sprintf@sp,w
 19104  038C  0086               	movwf	6
 19105  038D  3002               	movlw	2	; select bank4/5
 19106  038E  0087               	movwf	7
 19107  038F  302D               	movlw	45
 19108  0390  2BB9               	goto	L33
 19109  0391                     l1164:	
 19110                           
 19111                           ;doprnt.c: 1396: else
 19112                           ;doprnt.c: 1399: if(flag & 0x01)
 19113  0391  1C55               	btfss	sprintf@flag,0
 19114  0392  2B99               	goto	l8835
 19115                           
 19116                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 19117  0393  0854               	movf	sprintf@sp,w
 19118  0394  0086               	movwf	6
 19119  0395  3002               	movlw	2	; select bank4/5
 19120  0396  0087               	movwf	7
 19121  0397  3020               	movlw	32
 19122  0398  2BB9               	goto	L33
 19123  0399                     l8835:	
 19124                           
 19125                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 19126  0399  30C0               	movlw	192
 19127  039A  0555               	andwf	sprintf@flag,w
 19128  039B  00BF               	movwf	??_sprintf
 19129  039C  3008               	movlw	8
 19130  039D  0556               	andwf	sprintf@flag+1,w
 19131  039E  00C0               	movwf	??_sprintf+1
 19132  039F  3080               	movlw	128
 19133  03A0  063F               	xorwf	??_sprintf,w
 19134  03A1  3008               	movlw	8
 19135  03A2  1903               	skipnz
 19136  03A3  0640               	xorwf	??_sprintf+1,w
 19137  03A4  1D03               	btfss	3,2
 19138  03A5  2BBB               	goto	l8851
 19139                           
 19140                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 19141  03A6  0854               	movf	sprintf@sp,w
 19142  03A7  0086               	movwf	6
 19143  03A8  3002               	movlw	2	; select bank4/5
 19144  03A9  0087               	movwf	7
 19145  03AA  3030               	movlw	48
 19146  03AB  0081               	movwf	1
 19147  03AC  0AD4               	incf	sprintf@sp,f
 19148                           
 19149                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 19150  03AD  1AD5               	btfsc	sprintf@flag,5
 19151  03AE  2BB1               	goto	l8845
 19152  03AF  3078               	movlw	120
 19153  03B0  2BB2               	goto	L27
 19154  03B1                     l8845:	
 19155  03B1  3058               	movlw	88
 19156  03B2                     L27:	
 19157  03B2  00C3               	movwf	_sprintf$2447
 19158  03B3  01C4               	clrf	_sprintf$2447+1
 19159  03B4  0854               	movf	sprintf@sp,w
 19160  03B5  0086               	movwf	6
 19161  03B6  3002               	movlw	2	; select bank4/5
 19162  03B7  0087               	movwf	7
 19163  03B8  0843               	movf	_sprintf$2447,w
 19164  03B9                     L33:	
 19165  03B9  0081               	movwf	1
 19166  03BA  0AD4               	incf	sprintf@sp,f
 19167  03BB                     l8851:	
 19168                           
 19169                           ;doprnt.c: 1412: }
 19170                           ;doprnt.c: 1415: if(width)
 19171  03BB  0851               	movf	sprintf@width,w
 19172  03BC  0452               	iorwf	sprintf@width+1,w
 19173  03BD  1903               	btfsc	3,2
 19174  03BE  2CA4               	goto	l8925
 19175                           
 19176                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 19177  03BF  0854               	movf	sprintf@sp,w
 19178  03C0  0086               	movwf	6
 19179  03C1  3002               	movlw	2	; select bank4/5
 19180  03C2  0087               	movwf	7
 19181  03C3  3030               	movlw	48
 19182  03C4  0081               	movwf	1
 19183  03C5  30FF               	movlw	-1
 19184  03C6  0AD4               	incf	sprintf@sp,f
 19185                           
 19186                           ;doprnt.c: 1418: while(--width);
 19187  03C7  07D1               	addwf	sprintf@width,f
 19188  03C8  1C03               	skipc
 19189  03C9  03D2               	decf	sprintf@width+1,f
 19190  03CA  2BBB               	goto	l8851
 19191  03CB                     l8859:	
 19192                           
 19193                           ;doprnt.c: 1422: {
 19194                           ;doprnt.c: 1424: if(width
 19195                           ;doprnt.c: 1426: && !(flag & 0x08)
 19196                           ;doprnt.c: 1428: )
 19197  03CB  0851               	movf	sprintf@width,w
 19198  03CC  0452               	iorwf	sprintf@width+1,w
 19199  03CD  1D03               	btfss	3,2
 19200  03CE  19D5               	btfsc	sprintf@flag,3
 19201  03CF  2BDF               	goto	l8869
 19202  03D0                     l8863:	
 19203                           
 19204                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 19205  03D0  0854               	movf	sprintf@sp,w
 19206  03D1  0086               	movwf	6
 19207  03D2  3002               	movlw	2	; select bank4/5
 19208  03D3  0087               	movwf	7
 19209  03D4  3020               	movlw	32
 19210  03D5  0081               	movwf	1
 19211  03D6  30FF               	movlw	-1
 19212  03D7  0AD4               	incf	sprintf@sp,f
 19213                           
 19214                           ;doprnt.c: 1431: while(--width);
 19215  03D8  07D1               	addwf	sprintf@width,f
 19216  03D9  1C03               	skipc
 19217  03DA  03D2               	decf	sprintf@width+1,f
 19218  03DB  0851               	movf	sprintf@width,w
 19219  03DC  0452               	iorwf	sprintf@width+1,w
 19220  03DD  1D03               	btfss	3,2
 19221  03DE  2BD0               	goto	l8863
 19222  03DF                     l8869:	
 19223                           
 19224                           ;doprnt.c: 1438: if(flag & 0x03)
 19225  03DF  0855               	movf	sprintf@flag,w
 19226  03E0  3903               	andlw	3
 19227  03E1  1903               	btfsc	3,2
 19228  03E2  2BE9               	goto	l1180
 19229                           
 19230                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 19231  03E3  0854               	movf	sprintf@sp,w
 19232  03E4  0086               	movwf	6
 19233  03E5  3002               	movlw	2	; select bank4/5
 19234  03E6  0087               	movwf	7
 19235  03E7  302D               	movlw	45
 19236  03E8  2BF0               	goto	L34
 19237  03E9                     l1180:	
 19238                           
 19239                           ;doprnt.c: 1443: else if(flag & 0x01)
 19240  03E9  1C55               	btfss	sprintf@flag,0
 19241  03EA  2BF2               	goto	l8879
 19242                           
 19243                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 19244  03EB  0854               	movf	sprintf@sp,w
 19245  03EC  0086               	movwf	6
 19246  03ED  3002               	movlw	2	; select bank4/5
 19247  03EE  0087               	movwf	7
 19248  03EF  3020               	movlw	32
 19249  03F0                     L34:	
 19250  03F0  0081               	movwf	1
 19251  03F1  0AD4               	incf	sprintf@sp,f
 19252  03F2                     l8879:	
 19253                           
 19254                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 19255  03F2  30C0               	movlw	192
 19256  03F3  0555               	andwf	sprintf@flag,w
 19257  03F4  00BF               	movwf	??_sprintf
 19258  03F5  3008               	movlw	8
 19259  03F6  0556               	andwf	sprintf@flag+1,w
 19260  03F7  00C0               	movwf	??_sprintf+1
 19261  03F8  3040               	movlw	64
 19262  03F9  063F               	xorwf	??_sprintf,w
 19263  03FA  3008               	movlw	8
 19264  03FB  1903               	skipnz
 19265  03FC  0640               	xorwf	??_sprintf+1,w
 19266  03FD  1D03               	btfss	3,2
 19267  03FE  2C05               	goto	l8885
 19268                           
 19269                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 19270  03FF  0854               	movf	sprintf@sp,w
 19271  0400  0086               	movwf	6
 19272  0401  3002               	movlw	2	; select bank4/5
 19273  0402  0087               	movwf	7
 19274  0403  3030               	movlw	48
 19275  0404  2CA2               	goto	L35
 19276  0405                     l8885:	
 19277                           
 19278                           ;doprnt.c: 1450: else
 19279                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 19280  0405  30C0               	movlw	192
 19281  0406  0555               	andwf	sprintf@flag,w
 19282  0407  00BF               	movwf	??_sprintf
 19283  0408  3008               	movlw	8
 19284  0409  0556               	andwf	sprintf@flag+1,w
 19285  040A  00C0               	movwf	??_sprintf+1
 19286  040B  3080               	movlw	128
 19287  040C  063F               	xorwf	??_sprintf,w
 19288  040D  3008               	movlw	8
 19289  040E  1903               	skipnz
 19290  040F  0640               	xorwf	??_sprintf+1,w
 19291  0410  1D03               	btfss	3,2
 19292  0411  2CA4               	goto	l8925
 19293                           
 19294                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 19295  0412  0854               	movf	sprintf@sp,w
 19296  0413  0086               	movwf	6
 19297  0414  3002               	movlw	2	; select bank4/5
 19298  0415  0087               	movwf	7
 19299  0416  3030               	movlw	48
 19300  0417  0081               	movwf	1
 19301  0418  0AD4               	incf	sprintf@sp,f
 19302                           
 19303                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 19304  0419  1AD5               	btfsc	sprintf@flag,5
 19305  041A  2C1D               	goto	l8895
 19306  041B  3078               	movlw	120
 19307  041C  2C1E               	goto	L28
 19308  041D                     l8895:	
 19309  041D  3058               	movlw	88
 19310  041E                     L28:	
 19311  041E  00C5               	movwf	_sprintf$2448
 19312  041F  01C6               	clrf	_sprintf$2448+1
 19313  0420  0854               	movf	sprintf@sp,w
 19314  0421  0086               	movwf	6
 19315  0422  3002               	movlw	2	; select bank4/5
 19316  0423  0087               	movwf	7
 19317  0424  0845               	movf	_sprintf$2448,w
 19318  0425  2CA2               	goto	L35
 19319  0426                     l8901:	
 19320                           ;doprnt.c: 1466: }
 19321                           ;doprnt.c: 1469: }
 19322                           ;doprnt.c: 1474: while(prec--) {
 19323                           
 19324                           
 19325                           ;doprnt.c: 1486: case 0xC0:
 19326                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19327  0426  300A               	movlw	10
 19328  0427  00B0               	movwf	___lwmod@divisor
 19329  0428  01B1               	clrf	___lwmod@divisor+1
 19330  0429  0850               	movf	sprintf@prec,w
 19331  042A  00BF               	movwf	??_sprintf
 19332  042B  30CC               	movlw	low (_dpowers| (0+32768))
 19333  042C  01C0               	clrf	??_sprintf+1
 19334  042D  35BF               	lslf	??_sprintf,f
 19335  042E  0DC0               	rlf	??_sprintf+1,f
 19336  042F  073F               	addwf	??_sprintf,w
 19337  0430  0084               	movwf	4
 19338  0431  30A0               	movlw	high (_dpowers| (0+32768))
 19339  0432  3D40               	addwfc	??_sprintf+1,w
 19340  0433  0085               	movwf	5
 19341  0434  3F00               	moviw [0]fsr0
 19342  0435  00A9               	movwf	___lwdiv@divisor
 19343  0436  3F01               	moviw [1]fsr0
 19344  0437  00AA               	movwf	___lwdiv@divisor+1
 19345  0438  084F               	movf	sprintf@val+1,w
 19346  0439  00AC               	movwf	___lwdiv@dividend+1
 19347  043A  084E               	movf	sprintf@val,w
 19348  043B  00AB               	movwf	___lwdiv@dividend
 19349  043C  24CB               	fcall	___lwdiv
 19350  043D  082A               	movf	?___lwdiv+1,w
 19351  043E  00B3               	movwf	___lwmod@dividend+1
 19352  043F  0829               	movf	?___lwdiv,w
 19353  0440  00B2               	movwf	___lwmod@dividend
 19354  0441  31A7  27BF  3181   	fcall	___lwmod
 19355  0444  0830               	movf	?___lwmod,w
 19356  0445  2C8C               	goto	L36
 19357  0446                     l8903:	
 19358                           ;doprnt.c: 1491: break;
 19359                           
 19360                           
 19361                           ;doprnt.c: 1499: {
 19362                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 19363  0446  084F               	movf	sprintf@val+1,w
 19364  0447  00AC               	movwf	___lwdiv@dividend+1
 19365  0448  084E               	movf	sprintf@val,w
 19366  0449  00AB               	movwf	___lwdiv@dividend
 19367  044A  0850               	movf	sprintf@prec,w
 19368  044B  00BF               	movwf	??_sprintf
 19369  044C  30D6               	movlw	low (_hexpowers| (0+32768))
 19370  044D  01C0               	clrf	??_sprintf+1
 19371  044E  35BF               	lslf	??_sprintf,f
 19372  044F  0DC0               	rlf	??_sprintf+1,f
 19373  0450  073F               	addwf	??_sprintf,w
 19374  0451  0084               	movwf	4
 19375  0452  30A0               	movlw	high (_hexpowers| (0+32768))
 19376  0453  3D40               	addwfc	??_sprintf+1,w
 19377  0454  0085               	movwf	5
 19378  0455  3F00               	moviw [0]fsr0
 19379  0456  00A9               	movwf	___lwdiv@divisor
 19380  0457  3F01               	moviw [1]fsr0
 19381  0458  00AA               	movwf	___lwdiv@divisor+1
 19382  0459  24CB  3181         	fcall	___lwdiv
 19383  045B  0829               	movf	?___lwdiv,w
 19384  045C  00CA               	movwf	sprintf@idx
 19385  045D  300F               	movlw	15
 19386  045E  05CA               	andwf	sprintf@idx,f
 19387                           
 19388                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 19389  045F  1AD5               	btfsc	sprintf@flag,5
 19390  0460  2C65               	goto	l8911
 19391  0461  3037               	movlw	low (STR_47| (0+32768))
 19392  0462  00C7               	movwf	_sprintf$2454
 19393  0463  30A4               	movlw	high (STR_47| (0+32768))
 19394  0464  2C68               	goto	L31
 19395  0465                     l8911:	
 19396  0465  3026               	movlw	low (STR_46| (0+32768))
 19397  0466  00C7               	movwf	_sprintf$2454
 19398  0467  30A4               	movlw	high (STR_46| (0+32768))
 19399  0468                     L31:	
 19400  0468  00C8               	movwf	_sprintf$2454+1
 19401  0469  00C0               	movwf	??_sprintf+1
 19402  046A  0847               	movf	_sprintf$2454,w
 19403  046B  00BF               	movwf	??_sprintf
 19404  046C  084A               	movf	sprintf@idx,w
 19405  046D  073F               	addwf	??_sprintf,w
 19406  046E  0084               	movwf	4
 19407  046F  0840               	movf	??_sprintf+1,w
 19408  0470  1803               	skipnc
 19409  0471  0A40               	incf	??_sprintf+1,w
 19410  0472  0085               	movwf	5
 19411  0473  0800               	movf	0,w	;code access
 19412  0474  2C8D               	goto	L32
 19413  0475                     l8915:	
 19414                           ;doprnt.c: 1508: }
 19415                           ;doprnt.c: 1510: break;
 19416                           
 19417                           
 19418                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 19419  0475  0850               	movf	sprintf@prec,w
 19420  0476  00BF               	movwf	??_sprintf
 19421  0477  30C0               	movlw	low (_octpowers| (0+32768))
 19422  0478  01C0               	clrf	??_sprintf+1
 19423  0479  35BF               	lslf	??_sprintf,f
 19424  047A  0DC0               	rlf	??_sprintf+1,f
 19425  047B  073F               	addwf	??_sprintf,w
 19426  047C  0084               	movwf	4
 19427  047D  30A0               	movlw	high (_octpowers| (0+32768))
 19428  047E  3D40               	addwfc	??_sprintf+1,w
 19429  047F  0085               	movwf	5
 19430  0480  3F00               	moviw [0]fsr0
 19431  0481  00A9               	movwf	___lwdiv@divisor
 19432  0482  3F01               	moviw [1]fsr0
 19433  0483  00AA               	movwf	___lwdiv@divisor+1
 19434  0484  084F               	movf	sprintf@val+1,w
 19435  0485  00AC               	movwf	___lwdiv@dividend+1
 19436  0486  084E               	movf	sprintf@val,w
 19437  0487  00AB               	movwf	___lwdiv@dividend
 19438  0488  24CB  3181         	fcall	___lwdiv
 19439  048A  0829               	movf	?___lwdiv,w
 19440  048B  3907               	andlw	7
 19441  048C                     L36:	
 19442  048C  3E30               	addlw	48
 19443  048D                     L32:	
 19444  048D  00D3               	movwf	sprintf@c
 19445                           
 19446                           ;doprnt.c: 1520: break;
 19447  048E  2C9D               	goto	l8921
 19448  048F                     l8919:	
 19449  048F  0855               	movf	sprintf@flag,w
 19450  0490  39C0               	andlw	192
 19451                           
 19452                           ; Switch size 1, requested type "speed"
 19453                           ; Number of cases is 4, Range of values is 0 to 192
 19454                           ; switch strategies available:
 19455                           ; Name         Instructions Cycles
 19456                           ; simple_byte           13     7 (average)
 19457                           ; jumptable            260     6 (fixed)
 19458                           ;	Chosen strategy is simple_byte
 19459  0491  1903               	skipnz
 19460  0492  2C26               	goto	l8901
 19461  0493  3A40               	xorlw	64	; case 64
 19462  0494  1903               	skipnz
 19463  0495  2C75               	goto	l8915
 19464  0496  3AC0               	xorlw	192	; case 128
 19465  0497  1903               	skipnz
 19466  0498  2C46               	goto	l8903
 19467  0499  3A40               	xorlw	64	; case 192
 19468  049A  1903               	skipnz
 19469  049B  2C26               	goto	l8901
 19470  049C  2C9D               	goto	l8921
 19471  049D                     l8921:	
 19472                           
 19473                           ;doprnt.c: 1524: ((*sp++ = (c)));
 19474  049D  0854               	movf	sprintf@sp,w
 19475  049E  0086               	movwf	6
 19476  049F  3002               	movlw	2	; select bank4/5
 19477  04A0  0087               	movwf	7
 19478  04A1  0853               	movf	sprintf@c,w
 19479  04A2                     L35:	
 19480  04A2  0081               	movwf	1
 19481  04A3  0AD4               	incf	sprintf@sp,f
 19482  04A4                     l8925:	
 19483  04A4  03D0               	decf	sprintf@prec,f
 19484  04A5  0F50               	incfsz	sprintf@prec,w
 19485  04A6  2C8F               	goto	l8919
 19486                           
 19487                           ;doprnt.c: 1525: }
 19488                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 19489  04A7  1DD5               	btfss	sprintf@flag,3
 19490  04A8  2914               	goto	l8935
 19491  04A9  0852               	movf	sprintf@width+1,w
 19492  04AA  3A80               	xorlw	128
 19493  04AB  00BF               	movwf	??_sprintf
 19494  04AC  3080               	movlw	128
 19495  04AD  023F               	subwf	??_sprintf,w
 19496  04AE  1D03               	skipz
 19497  04AF  2CB2               	goto	u7925
 19498  04B0  3001               	movlw	1
 19499  04B1  0251               	subwf	sprintf@width,w
 19500  04B2                     u7925:	
 19501  04B2  1C03               	skipc
 19502  04B3  2914               	goto	l8935
 19503  04B4                     l8929:	
 19504                           
 19505                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 19506  04B4  0020               	movlb	0	; select bank0
 19507  04B5  0854               	movf	sprintf@sp,w
 19508  04B6  0086               	movwf	6
 19509  04B7  3002               	movlw	2	; select bank4/5
 19510  04B8  0087               	movwf	7
 19511  04B9  3020               	movlw	32
 19512  04BA  0081               	movwf	1
 19513  04BB  30FF               	movlw	-1
 19514  04BC  0AD4               	incf	sprintf@sp,f
 19515                           
 19516                           ;doprnt.c: 1531: while(--width);
 19517  04BD  07D1               	addwf	sprintf@width,f
 19518  04BE  1C03               	skipc
 19519  04BF  03D2               	decf	sprintf@width+1,f
 19520  04C0  0851               	movf	sprintf@width,w
 19521  04C1  0452               	iorwf	sprintf@width+1,w
 19522  04C2  1903               	btfsc	3,2
 19523  04C3  2914               	goto	l8935
 19524  04C4  2CB4               	goto	l8929
 19525  04C5                     l8937:	
 19526                           
 19527                           ;doprnt.c: 1538: *sp = 0;
 19528  04C5  0854               	movf	sprintf@sp,w
 19529  04C6  0086               	movwf	6
 19530  04C7  3002               	movlw	2	; select bank4/5
 19531  04C8  0087               	movwf	7
 19532  04C9  0181               	clrf	1
 19533  04CA  0008               	return
 19534  04CB                     __end_of_sprintf:	
 19535  04CB                     __ptext65:	
 19536 ;; *************** function ___lwdiv *****************
 19537 ;; Defined at:
 19538 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 19539 ;; Parameters:    Size  Location     Type
 19540 ;;  divisor         2    9[BANK0 ] unsigned int 
 19541 ;;  dividend        2   11[BANK0 ] unsigned int 
 19542 ;; Auto vars:     Size  Location     Type
 19543 ;;  quotient        2   14[BANK0 ] unsigned int 
 19544 ;;  counter         1   13[BANK0 ] unsigned char 
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  2    9[BANK0 ] unsigned int 
 19547 ;; Registers used:
 19548 ;;		wreg, status,2, status,0
 19549 ;; Tracked objects:
 19550 ;;		On entry : 1F/0
 19551 ;;		On exit  : 1F/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19555 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19557 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19558 ;;Total ram usage:        7 bytes
 19559 ;; Hardware stack levels used:    1
 19560 ;; Hardware stack levels required when called:    4
 19561 ;; This function calls:
 19562 ;;		Nothing
 19563 ;; This function is called by:
 19564 ;;		_sprintf
 19565 ;; This function uses a non-reentrant model
 19566 ;;
 19567                           
 19568                           
 19569                           ;psect for function ___lwdiv
 19570  04CB                     ___lwdiv:	
 19571                           
 19572                           ;incstack = 0
 19573                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 19574  04CB  01AE               	clrf	___lwdiv@quotient
 19575  04CC  01AF               	clrf	___lwdiv@quotient+1
 19576  04CD  0829               	movf	___lwdiv@divisor,w
 19577  04CE  042A               	iorwf	___lwdiv@divisor+1,w
 19578  04CF  1903               	btfsc	3,2
 19579  04D0  2CEB               	goto	l8255
 19580  04D1  01AD               	clrf	___lwdiv@counter
 19581  04D2                     L39:	
 19582  04D2  0AAD               	incf	___lwdiv@counter,f
 19583  04D3  1BAA               	btfsc	___lwdiv@divisor+1,7
 19584  04D4  2CD8               	goto	l8243
 19585  04D5  35A9               	lslf	___lwdiv@divisor,f
 19586  04D6  0DAA               	rlf	___lwdiv@divisor+1,f
 19587  04D7  2CD2               	goto	L39
 19588  04D8                     l8243:	
 19589  04D8  35AE               	lslf	___lwdiv@quotient,f
 19590  04D9  0DAF               	rlf	___lwdiv@quotient+1,f
 19591  04DA  082A               	movf	___lwdiv@divisor+1,w
 19592  04DB  022C               	subwf	___lwdiv@dividend+1,w
 19593  04DC  1D03               	skipz
 19594  04DD  2CE0               	goto	u6915
 19595  04DE  0829               	movf	___lwdiv@divisor,w
 19596  04DF  022B               	subwf	___lwdiv@dividend,w
 19597  04E0                     u6915:	
 19598  04E0  1C03               	skipc
 19599  04E1  2CE7               	goto	l8251
 19600  04E2  0829               	movf	___lwdiv@divisor,w
 19601  04E3  02AB               	subwf	___lwdiv@dividend,f
 19602  04E4  082A               	movf	___lwdiv@divisor+1,w
 19603  04E5  3BAC               	subwfb	___lwdiv@dividend+1,f
 19604  04E6  142E               	bsf	___lwdiv@quotient,0
 19605  04E7                     l8251:	
 19606  04E7  36AA               	lsrf	___lwdiv@divisor+1,f
 19607  04E8  0CA9               	rrf	___lwdiv@divisor,f
 19608  04E9  0BAD               	decfsz	___lwdiv@counter,f
 19609  04EA  2CD8               	goto	l8243
 19610  04EB                     l8255:	
 19611  04EB  082F               	movf	___lwdiv@quotient+1,w
 19612  04EC  00AA               	movwf	?___lwdiv+1
 19613  04ED  082E               	movf	___lwdiv@quotient,w
 19614  04EE  00A9               	movwf	?___lwdiv
 19615  04EF  0008               	return
 19616  04F0                     __end_of___lwdiv:	
 19617  04F0                     __ptext62:	
 19618 ;; *************** function _isdigit *****************
 19619 ;; Defined at:
 19620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;  c               1    wreg     unsigned char 
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;  c               1   10[BANK0 ] unsigned char 
 19625 ;; Return value:  Size  Location     Type
 19626 ;;		None               void
 19627 ;; Registers used:
 19628 ;;		wreg, status,2, status,0
 19629 ;; Tracked objects:
 19630 ;;		On entry : 1F/0
 19631 ;;		On exit  : 1F/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19635 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19638 ;;Total ram usage:        2 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    4
 19641 ;; This function calls:
 19642 ;;		Nothing
 19643 ;; This function is called by:
 19644 ;;		_sprintf
 19645 ;; This function uses a non-reentrant model
 19646 ;;
 19647                           
 19648                           
 19649                           ;psect for function _isdigit
 19650  04F0                     _isdigit:	
 19651                           
 19652                           ;incstack = 0
 19653                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19654                           ;isdigit@c stored from wreg
 19655  04F0  00AA               	movwf	isdigit@c
 19656  04F1  303A               	movlw	58
 19657  04F2  01A9               	clrf	_isdigit$2640
 19658  04F3  022A               	subwf	isdigit@c,w
 19659  04F4  1803               	skipnc
 19660  04F5  2CFC               	goto	l8229
 19661  04F6  3030               	movlw	48
 19662  04F7  022A               	subwf	isdigit@c,w
 19663  04F8  1C03               	skipc
 19664  04F9  2CFC               	goto	l8229
 19665  04FA  01A9               	clrf	_isdigit$2640
 19666  04FB  0AA9               	incf	_isdigit$2640,f
 19667  04FC                     l8229:	
 19668  04FC  0C29               	rrf	_isdigit$2640,w
 19669  04FD  0008               	return
 19670  04FE                     __end_of_isdigit:	
 19671                           
 19672                           	psect	swtext2
 19673  0500                     __pswtext2:	
 19674  0500                     S10185:	
 19675  0500  3184  2CC5         	ljmp	l8937
 19676  0502  3182  2A47         	ljmp	l8709
 19677  0504  3182  2A47         	ljmp	l8709
 19678  0506  3182  2A47         	ljmp	l8709
 19679  0508  3182  2A47         	ljmp	l8709
 19680  050A  3182  2A47         	ljmp	l8709
 19681  050C  3182  2A47         	ljmp	l8709
 19682  050E  3182  2A47         	ljmp	l8709
 19683  0510  3182  2A47         	ljmp	l8709
 19684  0512  3182  2A47         	ljmp	l8709
 19685  0514  3182  2A47         	ljmp	l8709
 19686  0516  3182  2A47         	ljmp	l8709
 19687  0518  3182  2A47         	ljmp	l8709
 19688  051A  3182  2A47         	ljmp	l8709
 19689  051C  3182  2A47         	ljmp	l8709
 19690  051E  3182  2A47         	ljmp	l8709
 19691  0520  3182  2A47         	ljmp	l8709
 19692  0522  3182  2A47         	ljmp	l8709
 19693  0524  3182  2A47         	ljmp	l8709
 19694  0526  3182  2A47         	ljmp	l8709
 19695  0528  3182  2A47         	ljmp	l8709
 19696  052A  3182  2A47         	ljmp	l8709
 19697  052C  3182  2A47         	ljmp	l8709
 19698  052E  3182  2A47         	ljmp	l8709
 19699  0530  3182  2A47         	ljmp	l8709
 19700  0532  3182  2A47         	ljmp	l8709
 19701  0534  3182  2A47         	ljmp	l8709
 19702  0536  3182  2A47         	ljmp	l8709
 19703  0538  3182  2A47         	ljmp	l8709
 19704  053A  3182  2A47         	ljmp	l8709
 19705  053C  3182  2A47         	ljmp	l8709
 19706  053E  3182  2A47         	ljmp	l8709
 19707  0540  3182  2A47         	ljmp	l8709
 19708  0542  3182  2A47         	ljmp	l8709
 19709  0544  3182  2A47         	ljmp	l8709
 19710  0546  3182  2A47         	ljmp	l8709
 19711  0548  3182  2A47         	ljmp	l8709
 19712  054A  3182  2A47         	ljmp	l8709
 19713  054C  3182  2A47         	ljmp	l8709
 19714  054E  3182  2A47         	ljmp	l8709
 19715  0550  3182  2A47         	ljmp	l8709
 19716  0552  3182  2A47         	ljmp	l8709
 19717  0554  3182  2A47         	ljmp	l8709
 19718  0556  3182  2A47         	ljmp	l8709
 19719  0558  3182  2A47         	ljmp	l8709
 19720  055A  3182  2A47         	ljmp	l8709
 19721  055C  3182  2A47         	ljmp	l8709
 19722  055E  3182  2A47         	ljmp	l8709
 19723  0560  3182  2A47         	ljmp	l8709
 19724  0562  3182  2A47         	ljmp	l8709
 19725  0564  3182  2A47         	ljmp	l8709
 19726  0566  3182  2A47         	ljmp	l8709
 19727  0568  3182  2A47         	ljmp	l8709
 19728  056A  3182  2A47         	ljmp	l8709
 19729  056C  3182  2A47         	ljmp	l8709
 19730  056E  3182  2A47         	ljmp	l8709
 19731  0570  3182  2A47         	ljmp	l8709
 19732  0572  3182  2A47         	ljmp	l8709
 19733  0574  3182  2A47         	ljmp	l8709
 19734  0576  3182  2A47         	ljmp	l8709
 19735  0578  3182  2A47         	ljmp	l8709
 19736  057A  3182  2A47         	ljmp	l8709
 19737  057C  3182  2A47         	ljmp	l8709
 19738  057E  3182  2A47         	ljmp	l8709
 19739  0580  3182  2A47         	ljmp	l8709
 19740  0582  3182  2A47         	ljmp	l8709
 19741  0584  3182  2A47         	ljmp	l8709
 19742  0586  3182  2A47         	ljmp	l8709
 19743  0588  3182  2A47         	ljmp	l8709
 19744  058A  3182  2A47         	ljmp	l8709
 19745  058C  3182  2A47         	ljmp	l8709
 19746  058E  3182  2A47         	ljmp	l8709
 19747  0590  3182  2A47         	ljmp	l8709
 19748  0592  3182  2A47         	ljmp	l8709
 19749  0594  3182  2A47         	ljmp	l8709
 19750  0596  3182  2A47         	ljmp	l8709
 19751  0598  3182  2A47         	ljmp	l8709
 19752  059A  3182  2A47         	ljmp	l8709
 19753  059C  3182  2A47         	ljmp	l8709
 19754  059E  3182  2A47         	ljmp	l8709
 19755  05A0  3182  2A47         	ljmp	l8709
 19756  05A2  3182  2A47         	ljmp	l8709
 19757  05A4  3182  2A47         	ljmp	l8709
 19758  05A6  3182  2A47         	ljmp	l8709
 19759  05A8  3182  2A47         	ljmp	l8709
 19760  05AA  3182  2A47         	ljmp	l8709
 19761  05AC  3182  2A47         	ljmp	l8709
 19762  05AE  3182  2A47         	ljmp	l8709
 19763  05B0  3181  29DD         	ljmp	l1109
 19764  05B2  3182  2A47         	ljmp	l8709
 19765  05B4  3182  2A47         	ljmp	l8709
 19766  05B6  3182  2A47         	ljmp	l8709
 19767  05B8  3182  2A47         	ljmp	l8709
 19768  05BA  3182  2A47         	ljmp	l8709
 19769  05BC  3182  2A47         	ljmp	l8709
 19770  05BE  3182  2A47         	ljmp	l8709
 19771  05C0  3182  2A47         	ljmp	l8709
 19772  05C2  3182  2A47         	ljmp	l8709
 19773  05C4  3182  2A47         	ljmp	l8709
 19774  05C6  3182  2A40         	ljmp	l8705
 19775  05C8  3182  2A65         	ljmp	l8719
 19776  05CA  3182  2A47         	ljmp	l8709
 19777  05CC  3182  2A47         	ljmp	l8709
 19778  05CE  3182  2A47         	ljmp	l8709
 19779  05D0  3182  2A47         	ljmp	l8709
 19780  05D2  3182  2A65         	ljmp	l8719
 19781  05D4  3182  2A47         	ljmp	l8709
 19782  05D6  3182  2A47         	ljmp	l8709
 19783  05D8  3182  2A47         	ljmp	l8709
 19784  05DA  3182  2A47         	ljmp	l8709
 19785  05DC  3182  2A47         	ljmp	l8709
 19786  05DE  3181  29DB         	ljmp	l1105
 19787  05E0  3182  2A47         	ljmp	l8709
 19788  05E2  3182  2A47         	ljmp	l8709
 19789  05E4  3182  2A47         	ljmp	l8709
 19790  05E6  3182  2A47         	ljmp	l8709
 19791  05E8  3182  2A47         	ljmp	l8709
 19792  05EA  3182  2A4D         	ljmp	l8713
 19793  05EC  3182  2A47         	ljmp	l8709
 19794  05EE  3182  2A47         	ljmp	l8709
 19795  05F0  3181  29DE         	ljmp	l1110
 19796                           
 19797                           	psect	text64
 19798  27BF                     __ptext64:	
 19799 ;; *************** function ___lwmod *****************
 19800 ;; Defined at:
 19801 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 19802 ;; Parameters:    Size  Location     Type
 19803 ;;  divisor         2   16[BANK0 ] unsigned int 
 19804 ;;  dividend        2   18[BANK0 ] unsigned int 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  counter         1   20[BANK0 ] unsigned char 
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  2   16[BANK0 ] unsigned int 
 19809 ;; Registers used:
 19810 ;;		wreg, status,2, status,0
 19811 ;; Tracked objects:
 19812 ;;		On entry : 1F/0
 19813 ;;		On exit  : 1F/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19820 ;;Total ram usage:        5 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:    4
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		_sprintf
 19827 ;; This function uses a non-reentrant model
 19828 ;;
 19829                           
 19830                           
 19831                           ;psect for function ___lwmod
 19832  27BF                     ___lwmod:	
 19833                           
 19834                           ;incstack = 0
 19835                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19836  27BF  0830               	movf	___lwmod@divisor,w
 19837  27C0  0431               	iorwf	___lwmod@divisor+1,w
 19838  27C1  1903               	btfsc	3,2
 19839  27C2  2FDA               	goto	l8275
 19840  27C3  01B4               	clrf	___lwmod@counter
 19841  27C4                     L38:	
 19842  27C4  0AB4               	incf	___lwmod@counter,f
 19843  27C5  1BB1               	btfsc	___lwmod@divisor+1,7
 19844  27C6  2FCA               	goto	l8267
 19845  27C7  35B0               	lslf	___lwmod@divisor,f
 19846  27C8  0DB1               	rlf	___lwmod@divisor+1,f
 19847  27C9  2FC4               	goto	L38
 19848  27CA                     l8267:	
 19849  27CA  0831               	movf	___lwmod@divisor+1,w
 19850  27CB  0233               	subwf	___lwmod@dividend+1,w
 19851  27CC  1D03               	skipz
 19852  27CD  2FD0               	goto	u6955
 19853  27CE  0830               	movf	___lwmod@divisor,w
 19854  27CF  0232               	subwf	___lwmod@dividend,w
 19855  27D0                     u6955:	
 19856  27D0  1C03               	skipc
 19857  27D1  2FD6               	goto	l8271
 19858  27D2  0830               	movf	___lwmod@divisor,w
 19859  27D3  02B2               	subwf	___lwmod@dividend,f
 19860  27D4  0831               	movf	___lwmod@divisor+1,w
 19861  27D5  3BB3               	subwfb	___lwmod@dividend+1,f
 19862  27D6                     l8271:	
 19863  27D6  36B1               	lsrf	___lwmod@divisor+1,f
 19864  27D7  0CB0               	rrf	___lwmod@divisor,f
 19865  27D8  0BB4               	decfsz	___lwmod@counter,f
 19866  27D9  2FCA               	goto	l8267
 19867  27DA                     l8275:	
 19868  27DA  0833               	movf	___lwmod@dividend+1,w
 19869  27DB  00B1               	movwf	?___lwmod+1
 19870  27DC  0832               	movf	___lwmod@dividend,w
 19871  27DD  00B0               	movwf	?___lwmod
 19872  27DE  0008               	return
 19873  27DF                     __end_of___lwmod:	
 19874                           
 19875                           	psect	text71
 19876  2761                     __ptext71:	
 19877 ;; *************** function _memset *****************
 19878 ;; Defined at:
 19879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;  p1              1    wreg     PTR void 
 19882 ;;		 -> LCDText(33), 
 19883 ;;  c               2    9[BANK0 ] int 
 19884 ;;  n               2   11[BANK0 ] unsigned int 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;  p1              1   13[BANK0 ] PTR void 
 19887 ;;		 -> LCDText(33), 
 19888 ;;  p               1   14[BANK0 ] PTR unsigned char 
 19889 ;;		 -> LCDText(33), 
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      PTR void 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19894 ;; Tracked objects:
 19895 ;;		On entry : 1F/0
 19896 ;;		On exit  : 1F/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19903 ;;Total ram usage:        6 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:    4
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		_LCD_Erase
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           
 19914                           ;psect for function _memset
 19915  2761                     _memset:	
 19916                           
 19917                           ;incstack = 0
 19918                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 19919                           ;memset@p1 stored from wreg
 19920  2761  00AD               	movwf	memset@p1
 19921  2762  00AE               	movwf	memset@p
 19922  2763                     l8219:	
 19923  2763  3001               	movlw	1
 19924  2764  02AB               	subwf	memset@n,f
 19925  2765  3000               	movlw	0
 19926  2766  3BAC               	subwfb	memset@n+1,f
 19927  2767  0F2B               	incfsz	memset@n,w
 19928  2768  2F6C               	goto	l8215
 19929  2769  0A2C               	incf	memset@n+1,w
 19930  276A  1903               	btfsc	3,2
 19931  276B  0008               	return
 19932  276C                     l8215:	
 19933  276C  082E               	movf	memset@p,w
 19934  276D  0086               	movwf	6
 19935  276E  3002               	movlw	2	; select bank4/5
 19936  276F  0087               	movwf	7
 19937  2770  0829               	movf	memset@c,w
 19938  2771  0081               	movwf	1
 19939  2772  0AAE               	incf	memset@p,f
 19940  2773  2F63               	goto	l8219
 19941  2774                     __end_of_memset:	
 19942                           
 19943                           	psect	intentry
 19944  0004                     __pintentry:	
 19945 ;; *************** function _high_isr *****************
 19946 ;; Defined at:
 19947 ;;		line 1852 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;		None
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  results         1    7[COMMON] struct _DRIVER_UINT8_UNI
 19952 ;;  RxBank          1   10[COMMON] unsigned char 
 19953 ;;  flags           2    8[COMMON] struct .
 19954 ;;  i               1   11[COMMON] unsigned char 
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      void 
 19957 ;; Registers used:
 19958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 1E/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19965 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19966 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19967 ;;      Totals:         5       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19968 ;;Total ram usage:       14 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; Hardware stack levels required when called:    3
 19971 ;; This function calls:
 19972 ;;		_UserInterruptHandler
 19973 ;;		i1_PHYGetLongRAMAddr
 19974 ;;		i1_PHYGetShortRAMAddr
 19975 ;;		i1_PHYSetShortRAMAddr
 19976 ;;		i1___wmul
 19977 ;; This function is called by:
 19978 ;;		Interrupt level 1
 19979 ;; This function uses a non-reentrant model
 19980 ;;
 19981                           
 19982  0004                     _high_isr:	
 19983                           
 19984                           ;incstack = 0
 19985  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19986                           
 19987                           ; Regs used in _high_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19988  0005  3180               	pagesel	$
 19989                           
 19990                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCONbits.IOCIE && IOCBFbits.IOCBF1)
 19991  0006  1D8B               	btfss	11,3	;volatile
 19992  0007  28FF               	goto	i1l7425
 19993  0008  0027               	movlb	7	; select bank7
 19994  0009  1C96               	btfss	22,1	;volatile
 19995  000A  28FF               	goto	i1l7425
 19996                           
 19997                           ;drv_mrf_miwi_24j40.c: 1868: {
 19998                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 19999                           ;drv_mrf_miwi_24j40.c: 1873: IOCBFbits.IOCBF1 = 0;
 20000  000B  1096               	bcf	22,1	;volatile
 20001                           
 20002                           ;drv_mrf_miwi_24j40.c: 1877: {
 20003                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 20004                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 20005  000C  3062               	movlw	98
 20006  000D  3187  2737  3180   	fcall	i1_PHYGetShortRAMAddr
 20007  0010  00F8               	movwf	high_isr@flags
 20008                           
 20009                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 20010  0011  1C78               	btfss	high_isr@flags,0
 20011  0012  2829               	goto	i1l209
 20012                           
 20013                           ;drv_mrf_miwi_24j40.c: 1884: {
 20014                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 20015  0013  0020               	movlb	0	; select bank0
 20016  0014  105E               	bcf	_MRF24J40Status,0	;volatile
 20017                           
 20018                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 20019  0015  1F5E               	btfss	_MRF24J40Status,6	;volatile
 20020  0016  2818               	goto	i1l7373
 20021                           
 20022                           ;drv_mrf_miwi_24j40.c: 1890: {
 20023                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 20024  0017  135E               	bcf	_MRF24J40Status,6	;volatile
 20025  0018                     i1l7373:	
 20026                           
 20027                           ;drv_mrf_miwi_24j40.c: 1892: }
 20028                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 20029  0018  0022               	movlb	2	; select bank2
 20030  0019  01B4               	clrf	_failureCounter^(0+256)	;volatile
 20031  001A  01B5               	clrf	(_failureCounter+1)^(0+256)	;volatile
 20032                           
 20033                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 20034  001B  0020               	movlb	0	; select bank0
 20035  001C  1CDE               	btfss	_MRF24J40Status,1	;volatile
 20036  001D  2829               	goto	i1l209
 20037                           
 20038                           ;drv_mrf_miwi_24j40.c: 1899: {
 20039                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 20040                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 20041  001E  3048               	movlw	72
 20042  001F  3187  2737  3180   	fcall	i1_PHYGetShortRAMAddr
 20043  0022  00F7               	movwf	high_isr@results
 20044                           
 20045                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 20046  0023  1C77               	btfss	high_isr@results,0
 20047  0024  2827               	goto	i1l212
 20048                           
 20049                           ;drv_mrf_miwi_24j40.c: 1906: {
 20050                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 20051  0025  0020               	movlb	0	; select bank0
 20052  0026  155E               	bsf	_MRF24J40Status,2	;volatile
 20053  0027                     i1l212:	
 20054                           
 20055                           ;drv_mrf_miwi_24j40.c: 1910: }
 20056                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 20057  0027  0020               	movlb	0	; select bank0
 20058  0028  10DE               	bcf	_MRF24J40Status,1	;volatile
 20059  0029                     i1l209:	
 20060                           
 20061                           ;drv_mrf_miwi_24j40.c: 1916: }
 20062                           ;drv_mrf_miwi_24j40.c: 1918: }
 20063                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 20064  0029  1DF8               	btfss	high_isr@flags,3
 20065  002A  28F7               	goto	i1l7421
 20066                           
 20067                           ;drv_mrf_miwi_24j40.c: 1921: {
 20068                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 20069  002B  30FF               	movlw	255
 20070  002C  00FA               	movwf	high_isr@RxBank
 20071                           
 20072                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 20073  002D  01FB               	clrf	high_isr@i
 20074  002E                     i1l7391:	
 20075                           
 20076                           ;drv_mrf_miwi_24j40.c: 1925: {
 20077                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 20078  002E  087B               	movf	high_isr@i,w
 20079  002F  00F0               	movwf	i1___wmul@multiplier
 20080  0030  3045               	movlw	69
 20081  0031  01F1               	clrf	i1___wmul@multiplier+1
 20082  0032  00F2               	movwf	i1___wmul@multiplicand
 20083  0033  01F3               	clrf	i1___wmul@multiplicand+1
 20084  0034  31A7  2774  3180   	fcall	i1___wmul
 20085  0037  3066               	movlw	102
 20086  0038  0020               	movlb	0	; select bank0
 20087  0039  00A0               	movwf	??_high_isr
 20088  003A  3023               	movlw	35
 20089  003B  00A1               	movwf	??_high_isr+1
 20090  003C  0870               	movf	?i1___wmul,w
 20091  003D  0720               	addwf	??_high_isr,w
 20092  003E  0086               	movwf	6
 20093  003F  0871               	movf	?i1___wmul+1,w
 20094  0040  3D21               	addwfc	??_high_isr+1,w
 20095  0041  0087               	movwf	7
 20096  0042  0801               	movf	1,w
 20097  0043  1D03               	btfss	3,2
 20098  0044  2848               	goto	i1l7395
 20099                           
 20100                           ;drv_mrf_miwi_24j40.c: 1927: {
 20101                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 20102  0045  087B               	movf	high_isr@i,w
 20103  0046  00FA               	movwf	high_isr@RxBank
 20104                           
 20105                           ;drv_mrf_miwi_24j40.c: 1929: break;
 20106  0047  284D               	goto	i1l7399
 20107  0048                     i1l7395:	
 20108  0048  3002               	movlw	2
 20109  0049  0AFB               	incf	high_isr@i,f
 20110  004A  027B               	subwf	high_isr@i,w
 20111  004B  1C03               	skipc
 20112  004C  282E               	goto	i1l7391
 20113  004D                     i1l7399:	
 20114                           
 20115                           ;drv_mrf_miwi_24j40.c: 1930: }
 20116                           ;drv_mrf_miwi_24j40.c: 1931: }
 20117                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 20118  004D  3002               	movlw	2
 20119  004E  027A               	subwf	high_isr@RxBank,w
 20120  004F  1803               	skipnc
 20121  0050  28F1               	goto	i1l7419
 20122                           
 20123                           ;drv_mrf_miwi_24j40.c: 1935: {
 20124                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 20125  0051  3004               	movlw	4
 20126  0052  00F1               	movwf	i1PHYSetShortRAMAddr@value
 20127  0053  3073               	movlw	115
 20128  0054  3187  274D  3180   	fcall	i1_PHYSetShortRAMAddr
 20129                           
 20130                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 20131  0057  3003               	movlw	3
 20132  0058  01F1               	clrf	i1PHYGetLongRAMAddr@address
 20133  0059  00F2               	movwf	i1PHYGetLongRAMAddr@address+1
 20134  005A  3187  2762  3180   	fcall	i1_PHYGetLongRAMAddr
 20135  005D  3E02               	addlw	2
 20136  005E  0020               	movlb	0	; select bank0
 20137  005F  00A0               	movwf	??_high_isr
 20138  0060  087A               	movf	high_isr@RxBank,w
 20139  0061  00F0               	movwf	i1___wmul@multiplier
 20140  0062  3045               	movlw	69
 20141  0063  01F1               	clrf	i1___wmul@multiplier+1
 20142  0064  00F2               	movwf	i1___wmul@multiplicand
 20143  0065  01F3               	clrf	i1___wmul@multiplicand+1
 20144  0066  31A7  2774  3180   	fcall	i1___wmul
 20145  0069  3066               	movlw	102
 20146  006A  0020               	movlb	0	; select bank0
 20147  006B  00A1               	movwf	??_high_isr+1
 20148  006C  3023               	movlw	35
 20149  006D  00A2               	movwf	??_high_isr+2
 20150  006E  0870               	movf	?i1___wmul,w
 20151  006F  0721               	addwf	??_high_isr+1,w
 20152  0070  00A3               	movwf	??_high_isr+3
 20153  0071  0871               	movf	?i1___wmul+1,w
 20154  0072  3D22               	addwfc	??_high_isr+2,w
 20155  0073  00A4               	movwf	??_high_isr+4
 20156  0074  0823               	movf	??_high_isr+3,w
 20157  0075  0086               	movwf	6
 20158  0076  0824               	movf	??_high_isr+4,w
 20159  0077  0087               	movwf	7
 20160  0078  0820               	movf	??_high_isr,w
 20161  0079  0081               	movwf	1
 20162                           
 20163                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 20164  007A  087A               	movf	high_isr@RxBank,w
 20165  007B  00F0               	movwf	i1___wmul@multiplier
 20166  007C  3045               	movlw	69
 20167  007D  01F1               	clrf	i1___wmul@multiplier+1
 20168  007E  00F2               	movwf	i1___wmul@multiplicand
 20169  007F  01F3               	clrf	i1___wmul@multiplicand+1
 20170  0080  31A7  2774  3180   	fcall	i1___wmul
 20171  0083  3066               	movlw	102
 20172  0084  0020               	movlb	0	; select bank0
 20173  0085  00A0               	movwf	??_high_isr
 20174  0086  3023               	movlw	35
 20175  0087  00A1               	movwf	??_high_isr+1
 20176  0088  0870               	movf	?i1___wmul,w
 20177  0089  0720               	addwf	??_high_isr,w
 20178  008A  0086               	movwf	6
 20179  008B  0871               	movf	?i1___wmul+1,w
 20180  008C  3D21               	addwfc	??_high_isr+1,w
 20181  008D  0087               	movwf	7
 20182  008E  3044               	movlw	68
 20183  008F  0201               	subwf	1,w
 20184  0090  1803               	skipnc
 20185  0091  28E8               	goto	i1l7417
 20186                           
 20187                           ;drv_mrf_miwi_24j40.c: 1947: {
 20188                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 20189  0092  16DE               	bsf	_MRF24J40Status,5	;volatile
 20190                           
 20191                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 20192  0093  01FB               	clrf	high_isr@i
 20193  0094                     i1l7411:	
 20194  0094  0AFB               	incf	high_isr@i,f
 20195  0095  087A               	movf	high_isr@RxBank,w
 20196  0096  00F0               	movwf	i1___wmul@multiplier
 20197  0097  3045               	movlw	69
 20198  0098  01F1               	clrf	i1___wmul@multiplier+1
 20199  0099  00F2               	movwf	i1___wmul@multiplicand
 20200  009A  01F3               	clrf	i1___wmul@multiplicand+1
 20201  009B  31A7  2774  3180   	fcall	i1___wmul
 20202  009E  3066               	movlw	102
 20203  009F  0020               	movlb	0	; select bank0
 20204  00A0  00A0               	movwf	??_high_isr
 20205  00A1  3023               	movlw	35
 20206  00A2  00A1               	movwf	??_high_isr+1
 20207  00A3  0870               	movf	?i1___wmul,w
 20208  00A4  0720               	addwf	??_high_isr,w
 20209  00A5  0086               	movwf	6
 20210  00A6  0871               	movf	?i1___wmul+1,w
 20211  00A7  3D21               	addwfc	??_high_isr+1,w
 20212  00A8  0087               	movwf	7
 20213  00A9  0801               	movf	1,w
 20214  00AA  3E02               	addlw	2
 20215  00AB  00A2               	movwf	??_high_isr+2
 20216  00AC  3000               	movlw	0
 20217  00AD  1803               	skipnc
 20218  00AE  3001               	movlw	1
 20219  00AF  00A3               	movwf	??_high_isr+3
 20220  00B0  3A80               	xorlw	128
 20221  00B1  00A4               	movwf	??_high_isr+4
 20222  00B2  3080               	movlw	128
 20223  00B3  0224               	subwf	??_high_isr+4,w
 20224  00B4  1D03               	skipz
 20225  00B5  28B8               	goto	u612_25
 20226  00B6  087B               	movf	high_isr@i,w
 20227  00B7  0222               	subwf	??_high_isr+2,w
 20228  00B8                     u612_25:	
 20229  00B8  1C03               	btfss	3,0
 20230  00B9  28E8               	goto	i1l7417
 20231                           
 20232                           ;drv_mrf_miwi_24j40.c: 1953: {
 20233                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 20234  00BA  087B               	movf	high_isr@i,w
 20235  00BB  00F1               	movwf	i1PHYGetLongRAMAddr@address
 20236  00BC  3003               	movlw	3
 20237  00BD  01F2               	clrf	i1PHYGetLongRAMAddr@address+1
 20238  00BE  07F2               	addwf	i1PHYGetLongRAMAddr@address+1,f
 20239  00BF  3187  2762  3180   	fcall	i1_PHYGetLongRAMAddr
 20240  00C2  0020               	movlb	0	; select bank0
 20241  00C3  00A0               	movwf	??_high_isr
 20242  00C4  087B               	movf	high_isr@i,w
 20243  00C5  00A1               	movwf	??_high_isr+1
 20244  00C6  01A2               	clrf	??_high_isr+2
 20245  00C7  087A               	movf	high_isr@RxBank,w
 20246  00C8  00F0               	movwf	i1___wmul@multiplier
 20247  00C9  3045               	movlw	69
 20248  00CA  01F1               	clrf	i1___wmul@multiplier+1
 20249  00CB  00F2               	movwf	i1___wmul@multiplicand
 20250  00CC  01F3               	clrf	i1___wmul@multiplicand+1
 20251  00CD  31A7  2774  3180   	fcall	i1___wmul
 20252  00D0  3066               	movlw	102
 20253  00D1  0020               	movlb	0	; select bank0
 20254  00D2  00A3               	movwf	??_high_isr+3
 20255  00D3  3023               	movlw	35
 20256  00D4  00A4               	movwf	??_high_isr+4
 20257  00D5  0870               	movf	?i1___wmul,w
 20258  00D6  0723               	addwf	??_high_isr+3,w
 20259  00D7  00A5               	movwf	??_high_isr+5
 20260  00D8  0871               	movf	?i1___wmul+1,w
 20261  00D9  3D24               	addwfc	??_high_isr+4,w
 20262  00DA  00A6               	movwf	??_high_isr+6
 20263  00DB  0821               	movf	??_high_isr+1,w
 20264  00DC  0725               	addwf	??_high_isr+5,w
 20265  00DD  00A7               	movwf	??_high_isr+7
 20266  00DE  0822               	movf	??_high_isr+2,w
 20267  00DF  3D26               	addwfc	??_high_isr+6,w
 20268  00E0  00A8               	movwf	??_high_isr+8
 20269  00E1  0827               	movf	??_high_isr+7,w
 20270  00E2  0086               	movwf	6
 20271  00E3  0828               	movf	??_high_isr+8,w
 20272  00E4  0087               	movwf	7
 20273  00E5  0820               	movf	??_high_isr,w
 20274  00E6  0081               	movwf	1
 20275  00E7  2894               	goto	i1l7411
 20276  00E8                     i1l7417:	
 20277                           ;drv_mrf_miwi_24j40.c: 1957: } else
 20278                           
 20279                           ;drv_mrf_miwi_24j40.c: 1955: }
 20280                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 20281                           
 20282  00E8  301B               	movlw	27
 20283                           
 20284                           ;drv_mrf_miwi_24j40.c: 1958: {
 20285                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 20286  00E9  01F1               	clrf	i1PHYSetShortRAMAddr@value
 20287  00EA  0AF1               	incf	i1PHYSetShortRAMAddr@value,f
 20288  00EB  3187  274D  3180   	fcall	i1_PHYSetShortRAMAddr
 20289  00EE  3073               	movlw	115
 20290                           
 20291                           ;drv_mrf_miwi_24j40.c: 1962: }
 20292                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 20293  00EF  01F1               	clrf	i1PHYSetShortRAMAddr@value
 20294  00F0  28F4               	goto	L42
 20295  00F1                     i1l7419:	
 20296                           ;drv_mrf_miwi_24j40.c: 1966: } else
 20297                           
 20298  00F1  301B               	movlw	27
 20299                           
 20300                           ;drv_mrf_miwi_24j40.c: 1967: {
 20301                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 20302  00F2  01F1               	clrf	i1PHYSetShortRAMAddr@value
 20303  00F3  0AF1               	incf	i1PHYSetShortRAMAddr@value,f
 20304  00F4                     L42:	
 20305  00F4  3187  274D  3180   	fcall	i1_PHYSetShortRAMAddr
 20306  00F7                     i1l7421:	
 20307                           
 20308                           ;drv_mrf_miwi_24j40.c: 1977: }
 20309                           ;drv_mrf_miwi_24j40.c: 1979: }
 20310                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 20311  00F7  1E78               	btfss	high_isr@flags,4
 20312  00F8  28FF               	goto	i1l7425
 20313                           
 20314                           ;drv_mrf_miwi_24j40.c: 1983: {
 20315                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 20316  00F9  3080               	movlw	128
 20317  00FA  00F1               	movwf	i1PHYSetShortRAMAddr@value
 20318  00FB  3059               	movlw	89
 20319  00FC  3187  274D  3180   	fcall	i1_PHYSetShortRAMAddr
 20320  00FF                     i1l7425:	
 20321                           
 20322                           ;drv_mrf_miwi_24j40.c: 1985: }
 20323                           ;drv_mrf_miwi_24j40.c: 1986: }
 20324                           ;drv_mrf_miwi_24j40.c: 1987: }
 20325                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 20326  00FF  0020               	movlb	0	; select bank0
 20327  0100  1C11               	btfss	17,0	;volatile
 20328  0101  290B               	goto	i1l7437
 20329                           
 20330                           ;drv_mrf_miwi_24j40.c: 1993: {
 20331                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 20332  0102  0021               	movlb	1	; select bank1
 20333  0103  1C11               	btfss	17,0	;volatile
 20334  0104  290B               	goto	i1l7437
 20335                           
 20336                           ;drv_mrf_miwi_24j40.c: 1995: {
 20337                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 20338  0105  0020               	movlb	0	; select bank0
 20339  0106  1011               	bcf	17,0	;volatile
 20340                           
 20341                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 20342  0107  0AFC               	incf	_timerExtension1,f	;volatile
 20343                           
 20344                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 20345  0108  087C               	movf	_timerExtension1,w	;volatile
 20346  0109  1903               	btfsc	3,2
 20347                           
 20348                           ;drv_mrf_miwi_24j40.c: 2000: {
 20349                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 20350  010A  0AFD               	incf	_timerExtension2,f	;volatile
 20351  010B                     i1l7437:	
 20352                           
 20353                           ;drv_mrf_miwi_24j40.c: 2002: }
 20354                           ;drv_mrf_miwi_24j40.c: 2003: }
 20355                           ;drv_mrf_miwi_24j40.c: 2004: }
 20356                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 20357  010B  3187  27FB         	fcall	_UserInterruptHandler
 20358  010D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20359  010E  0009               	retfie
 20360  010F                     __end_of_high_isr:	
 20361                           
 20362                           	psect	text82
 20363  2774                     __ptext82:	
 20364 ;; *************** function i1___wmul *****************
 20365 ;; Defined at:
 20366 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 20367 ;; Parameters:    Size  Location     Type
 20368 ;;  multiplier      2    0[COMMON] unsigned int 
 20369 ;;  multiplicand    2    2[COMMON] unsigned int 
 20370 ;; Auto vars:     Size  Location     Type
 20371 ;;  __wmul          2    4[COMMON] unsigned int 
 20372 ;; Return value:  Size  Location     Type
 20373 ;;                  2    0[COMMON] unsigned int 
 20374 ;; Registers used:
 20375 ;;		wreg, status,2, status,0
 20376 ;; Tracked objects:
 20377 ;;		On entry : 0/2
 20378 ;;		On exit  : 0/0
 20379 ;;		Unchanged: 0/0
 20380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20384 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20385 ;;Total ram usage:        6 bytes
 20386 ;; Hardware stack levels used:    1
 20387 ;; This function calls:
 20388 ;;		Nothing
 20389 ;; This function is called by:
 20390 ;;		_high_isr
 20391 ;; This function uses a non-reentrant model
 20392 ;;
 20393                           
 20394                           
 20395                           ;psect for function i1___wmul
 20396  2774                     i1___wmul:	
 20397                           
 20398                           ;incstack = 0
 20399                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 20400  2774  01F4               	clrf	i1___wmul@product
 20401  2775  01F5               	clrf	i1___wmul@product+1
 20402  2776                     i1l7345:	
 20403  2776  1C70               	btfss	i1___wmul@multiplier,0
 20404  2777  2F7C               	goto	i1l7349
 20405  2778  0872               	movf	i1___wmul@multiplicand,w
 20406  2779  07F4               	addwf	i1___wmul@product,f
 20407  277A  0873               	movf	i1___wmul@multiplicand+1,w
 20408  277B  3DF5               	addwfc	i1___wmul@product+1,f
 20409  277C                     i1l7349:	
 20410  277C  35F2               	lslf	i1___wmul@multiplicand,f
 20411  277D  0DF3               	rlf	i1___wmul@multiplicand+1,f
 20412  277E  36F1               	lsrf	i1___wmul@multiplier+1,f
 20413  277F  0CF0               	rrf	i1___wmul@multiplier,f
 20414  2780  0870               	movf	i1___wmul@multiplier,w
 20415  2781  0471               	iorwf	i1___wmul@multiplier+1,w
 20416  2782  1D03               	btfss	3,2
 20417  2783  2F76               	goto	i1l7345
 20418  2784  0875               	movf	i1___wmul@product+1,w
 20419  2785  00F1               	movwf	?i1___wmul+1
 20420  2786  0874               	movf	i1___wmul@product,w
 20421  2787  00F0               	movwf	?i1___wmul
 20422  2788  0008               	return
 20423  2789                     __end_ofi1___wmul:	
 20424                           
 20425                           	psect	text84
 20426  0737                     __ptext84:	
 20427 ;; *************** function i1_PHYGetShortRAMAddr *****************
 20428 ;; Defined at:
 20429 ;;		line 154 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20430 ;; Parameters:    Size  Location     Type
 20431 ;;  address         1    wreg     unsigned char 
 20432 ;; Auto vars:     Size  Location     Type
 20433 ;;  address         1    1[COMMON] unsigned char 
 20434 ;;  PHYGetShortR    1    3[COMMON] volatile unsigned char 
 20435 ;;  PHYGetShortR    1    2[COMMON] unsigned char 
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  1    wreg      unsigned char 
 20438 ;; Registers used:
 20439 ;;		wreg, status,2, status,0, pclath, cstack
 20440 ;; Tracked objects:
 20441 ;;		On entry : 18/7
 20442 ;;		On exit  : 1F/2
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20446 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20449 ;;Total ram usage:        3 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:    2
 20452 ;; This function calls:
 20453 ;;		i1_SPIGet
 20454 ;;		i1_SPIPut
 20455 ;; This function is called by:
 20456 ;;		_high_isr
 20457 ;; This function uses a non-reentrant model
 20458 ;;
 20459                           
 20460                           
 20461                           ;psect for function i1_PHYGetShortRAMAddr
 20462  0737                     i1_PHYGetShortRAMAddr:	
 20463                           
 20464                           ;incstack = 0
 20465                           ; Regs used in i1_PHYGetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20466                           ;i1PHYGetShortRAMAddr@address stored from wreg
 20467  0737  00F1               	movwf	i1PHYGetShortRAMAddr@address
 20468                           
 20469                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 20470                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20471  0738  3000               	movlw	0
 20472  0739  198B               	btfsc	11,3	;volatile
 20473  073A  3001               	movlw	1
 20474  073B  00F3               	movwf	i1PHYGetShortRAMAddr@tmpRFIE	;volatile
 20475                           
 20476                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.IOCIE = 0;
 20477  073C  118B               	bcf	11,3	;volatile
 20478                           
 20479                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 20480  073D  0022               	movlb	2	; select bank2
 20481  073E  118D               	bcf	13,3	;volatile
 20482                           
 20483                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
 20484  073F  0871               	movf	i1PHYGetShortRAMAddr@address,w
 20485  0740  278D  3187         	fcall	i1_SPIPut
 20486                           
 20487                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
 20488  0742  279C               	fcall	i1_SPIGet
 20489  0743  00F2               	movwf	i1PHYGetShortRAMAddr@toReturn
 20490                           
 20491                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 20492  0744  0022               	movlb	2	; select bank2
 20493  0745  158D               	bsf	13,3	;volatile
 20494                           
 20495                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.IOCIE = tmpRFIE;
 20496  0746  0C73               	rrf	i1PHYGetShortRAMAddr@tmpRFIE,w	;volatile
 20497  0747  1C03               	skipc
 20498  0748  118B               	bcf	11,3	;volatile
 20499  0749  1803               	skipnc
 20500  074A  158B               	bsf	11,3	;volatile
 20501                           
 20502                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 20503  074B  0872               	movf	i1PHYGetShortRAMAddr@toReturn,w
 20504  074C  0008               	return
 20505  074D                     __end_ofi1_PHYGetShortRAMAddr:	
 20506  074D                     __ptext83:	
 20507 ;; *************** function i1_PHYSetShortRAMAddr *****************
 20508 ;; Defined at:
 20509 ;;		line 124 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20510 ;; Parameters:    Size  Location     Type
 20511 ;;  address         1    wreg     unsigned char 
 20512 ;;  value           1    1[COMMON] unsigned char 
 20513 ;; Auto vars:     Size  Location     Type
 20514 ;;  address         1    2[COMMON] unsigned char 
 20515 ;;  PHYSetShortR    1    3[COMMON] volatile unsigned char 
 20516 ;; Return value:  Size  Location     Type
 20517 ;;                  1    wreg      void 
 20518 ;; Registers used:
 20519 ;;		wreg, status,2, status,0, pclath, cstack
 20520 ;; Tracked objects:
 20521 ;;		On entry : 0/0
 20522 ;;		On exit  : 1F/2
 20523 ;;		Unchanged: 0/0
 20524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20528 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20529 ;;Total ram usage:        3 bytes
 20530 ;; Hardware stack levels used:    1
 20531 ;; Hardware stack levels required when called:    1
 20532 ;; This function calls:
 20533 ;;		i1_SPIPut
 20534 ;; This function is called by:
 20535 ;;		_high_isr
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           
 20540                           ;psect for function i1_PHYSetShortRAMAddr
 20541  074D                     i1_PHYSetShortRAMAddr:	
 20542                           
 20543                           ;incstack = 0
 20544                           ; Regs used in i1_PHYSetShortRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20545                           ;i1PHYSetShortRAMAddr@address stored from wreg
 20546  074D  00F2               	movwf	i1PHYSetShortRAMAddr@address
 20547                           
 20548                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20549  074E  3000               	movlw	0
 20550  074F  198B               	btfsc	11,3	;volatile
 20551  0750  3001               	movlw	1
 20552  0751  00F3               	movwf	i1PHYSetShortRAMAddr@tmpRFIE	;volatile
 20553                           
 20554                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.IOCIE = 0;
 20555  0752  118B               	bcf	11,3	;volatile
 20556                           
 20557                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 20558  0753  0022               	movlb	2	; select bank2
 20559  0754  118D               	bcf	13,3	;volatile
 20560                           
 20561                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
 20562  0755  0872               	movf	i1PHYSetShortRAMAddr@address,w
 20563  0756  278D  3187         	fcall	i1_SPIPut
 20564                           
 20565                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
 20566  0758  0871               	movf	i1PHYSetShortRAMAddr@value,w
 20567  0759  278D               	fcall	i1_SPIPut
 20568                           
 20569                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 20570  075A  0022               	movlb	2	; select bank2
 20571  075B  158D               	bsf	13,3	;volatile
 20572                           
 20573                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.IOCIE = tmpRFIE;
 20574  075C  0C73               	rrf	i1PHYSetShortRAMAddr@tmpRFIE,w	;volatile
 20575  075D  1C03               	skipc
 20576  075E  118B               	bcf	11,3	;volatile
 20577  075F  1803               	skipnc
 20578  0760  158B               	bsf	11,3	;volatile
 20579  0761  0008               	return
 20580  0762                     __end_ofi1_PHYSetShortRAMAddr:	
 20581  0762                     __ptext85:	
 20582 ;; *************** function i1_PHYGetLongRAMAddr *****************
 20583 ;; Defined at:
 20584 ;;		line 185 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 20585 ;; Parameters:    Size  Location     Type
 20586 ;;  address         2    1[COMMON] unsigned int 
 20587 ;; Auto vars:     Size  Location     Type
 20588 ;;  PHYGetLongRA    1    6[COMMON] volatile unsigned char 
 20589 ;;  PHYGetLongRA    1    5[COMMON] unsigned char 
 20590 ;; Return value:  Size  Location     Type
 20591 ;;                  1    wreg      unsigned char 
 20592 ;; Registers used:
 20593 ;;		wreg, status,2, status,0, pclath, cstack
 20594 ;; Tracked objects:
 20595 ;;		On entry : 0/2
 20596 ;;		On exit  : 1F/2
 20597 ;;		Unchanged: 0/0
 20598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20603 ;;Total ram usage:        6 bytes
 20604 ;; Hardware stack levels used:    1
 20605 ;; Hardware stack levels required when called:    2
 20606 ;; This function calls:
 20607 ;;		i1_SPIGet
 20608 ;;		i1_SPIPut
 20609 ;; This function is called by:
 20610 ;;		_high_isr
 20611 ;; This function uses a non-reentrant model
 20612 ;;
 20613                           
 20614                           
 20615                           ;psect for function i1_PHYGetLongRAMAddr
 20616  0762                     i1_PHYGetLongRAMAddr:	
 20617                           
 20618                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 20619                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.IOCIE;
 20620                           
 20621                           ;incstack = 0
 20622                           ; Regs used in i1_PHYGetLongRAMAddr: [wreg+status,2+status,0+pclath+cstack]
 20623  0762  3000               	movlw	0
 20624  0763  198B               	btfsc	11,3	;volatile
 20625  0764  3001               	movlw	1
 20626  0765  00F6               	movwf	i1PHYGetLongRAMAddr@tmpRFIE	;volatile
 20627                           
 20628                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.IOCIE = 0;
 20629  0766  118B               	bcf	11,3	;volatile
 20630                           
 20631                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 20632  0767  0022               	movlb	2	; select bank2
 20633  0768  118D               	bcf	13,3	;volatile
 20634                           
 20635                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
 20636  0769  0872               	movf	i1PHYGetLongRAMAddr@address+1,w
 20637  076A  00F4               	movwf	??i1_PHYGetLongRAMAddr+1
 20638  076B  0871               	movf	i1PHYGetLongRAMAddr@address,w
 20639  076C  00F3               	movwf	??i1_PHYGetLongRAMAddr
 20640  076D  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 20641  076E  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 20642  076F  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 20643  0770  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 20644  0771  36F4               	lsrf	??i1_PHYGetLongRAMAddr+1,f
 20645  0772  0CF3               	rrf	??i1_PHYGetLongRAMAddr,f
 20646  0773  0873               	movf	??i1_PHYGetLongRAMAddr,w
 20647  0774  397F               	andlw	127
 20648  0775  3880               	iorlw	128
 20649  0776  278D  3187         	fcall	i1_SPIPut
 20650                           
 20651                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
 20652  0778  0871               	movf	i1PHYGetLongRAMAddr@address,w
 20653  0779  00F3               	movwf	??i1_PHYGetLongRAMAddr
 20654  077A  3005               	movlw	5
 20655  077B                     u598_25:	
 20656  077B  35F3               	lslf	??i1_PHYGetLongRAMAddr,f
 20657  077C  0B89               	decfsz	9,f
 20658  077D  2F7B               	goto	u598_25
 20659  077E  0873               	movf	??i1_PHYGetLongRAMAddr,w
 20660  077F  39E0               	andlw	224
 20661  0780  278D  3187         	fcall	i1_SPIPut
 20662                           
 20663                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
 20664  0782  279C               	fcall	i1_SPIGet
 20665  0783  00F5               	movwf	i1PHYGetLongRAMAddr@toReturn
 20666                           
 20667                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 20668  0784  0022               	movlb	2	; select bank2
 20669  0785  158D               	bsf	13,3	;volatile
 20670                           
 20671                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.IOCIE = tmpRFIE;
 20672  0786  0C76               	rrf	i1PHYGetLongRAMAddr@tmpRFIE,w	;volatile
 20673  0787  1C03               	skipc
 20674  0788  118B               	bcf	11,3	;volatile
 20675  0789  1803               	skipnc
 20676  078A  158B               	bsf	11,3	;volatile
 20677                           
 20678                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 20679  078B  0875               	movf	i1PHYGetLongRAMAddr@toReturn,w
 20680  078C  0008               	return
 20681  078D                     __end_ofi1_PHYGetLongRAMAddr:	
 20682  078D                     __ptext87:	
 20683 ;; *************** function i1_SPIPut *****************
 20684 ;; Defined at:
 20685 ;;		line 45 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 20686 ;; Parameters:    Size  Location     Type
 20687 ;;  v               1    wreg     unsigned char 
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  v               1    0[COMMON] unsigned char 
 20690 ;;  SPIPut          1    0        unsigned char 
 20691 ;; Return value:  Size  Location     Type
 20692 ;;                  1    wreg      void 
 20693 ;; Registers used:
 20694 ;;		wreg
 20695 ;; Tracked objects:
 20696 ;;		On entry : 1D/2
 20697 ;;		On exit  : 1F/0
 20698 ;;		Unchanged: 0/0
 20699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20704 ;;Total ram usage:        1 bytes
 20705 ;; Hardware stack levels used:    1
 20706 ;; This function calls:
 20707 ;;		Nothing
 20708 ;; This function is called by:
 20709 ;;		i1_PHYSetShortRAMAddr
 20710 ;;		i1_PHYGetShortRAMAddr
 20711 ;;		i1_PHYGetLongRAMAddr
 20712 ;;		i1_SPIGet
 20713 ;; This function uses a non-reentrant model
 20714 ;;
 20715                           
 20716                           
 20717                           ;psect for function i1_SPIPut
 20718  078D                     i1_SPIPut:	
 20719                           
 20720                           ;incstack = 0
 20721                           ; Regs used in i1_SPIPut: [wreg]
 20722                           ;i1SPIPut@v stored from wreg
 20723  078D  00F0               	movwf	i1SPIPut@v
 20724                           
 20725                           ;spi.c: 47: uint8_t i;
 20726                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 20727  078E  0020               	movlb	0	; select bank0
 20728  078F  1191               	bcf	17,3	;volatile
 20729                           
 20730                           ;spi.c: 64: i = SSP1BUF;
 20731  0790  0024               	movlb	4	; select bank4
 20732  0791  0811               	movf	17,w	;volatile
 20733  0792                     i1l6651:	
 20734                           
 20735                           ;spi.c: 67: {
 20736                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 20737  0792  1395               	bcf	21,7	;volatile
 20738                           
 20739                           ;spi.c: 69: SSP1BUF = v;
 20740  0793  0870               	movf	i1SPIPut@v,w
 20741  0794  0091               	movwf	17	;volatile
 20742                           
 20743                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 20744  0795  1B95               	btfsc	21,7	;volatile
 20745  0796  2F92               	goto	i1l6651
 20746  0797                     i1l738:	
 20747  0797  0020               	movlb	0	; select bank0
 20748  0798  1D91               	btfss	17,3	;volatile
 20749  0799  2F97               	goto	i1l738
 20750                           
 20751                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 20752  079A  1191               	bcf	17,3	;volatile
 20753  079B  0008               	return
 20754  079C                     __end_ofi1_SPIPut:	
 20755  079C                     __ptext86:	
 20756 ;; *************** function i1_SPIGet *****************
 20757 ;; Defined at:
 20758 ;;		line 94 in file "../src/system_config/pic18exp_pic16f1947_24j40/spi.c"
 20759 ;; Parameters:    Size  Location     Type
 20760 ;;		None
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;		None
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  1    wreg      unsigned char 
 20765 ;; Registers used:
 20766 ;;		wreg, status,2, status,0, pclath, cstack
 20767 ;; Tracked objects:
 20768 ;;		On entry : 1F/0
 20769 ;;		On exit  : 1F/4
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20776 ;;Total ram usage:        0 bytes
 20777 ;; Hardware stack levels used:    1
 20778 ;; Hardware stack levels required when called:    1
 20779 ;; This function calls:
 20780 ;;		i1_SPIPut
 20781 ;; This function is called by:
 20782 ;;		i1_PHYGetShortRAMAddr
 20783 ;;		i1_PHYGetLongRAMAddr
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           
 20788                           ;psect for function i1_SPIGet
 20789  079C                     i1_SPIGet:	
 20790                           
 20791                           ;spi.c: 115: SPIPut(0x00);
 20792                           
 20793                           ;incstack = 0
 20794                           ; Regs used in i1_SPIGet: [wreg+status,2+status,0+pclath+cstack]
 20795  079C  3000               	movlw	0
 20796  079D  278D               	fcall	i1_SPIPut
 20797                           
 20798                           ;spi.c: 116: return SSP1BUF;
 20799  079E  0024               	movlb	4	; select bank4
 20800  079F  0811               	movf	17,w	;volatile
 20801  07A0  0008               	return
 20802  07A1                     __end_ofi1_SPIGet:	
 20803                           
 20804                           	psect	text88
 20805  07FB                     __ptext88:	
 20806 ;; *************** function _UserInterruptHandler *****************
 20807 ;; Defined at:
 20808 ;;		line 235 in file "../src/system_config/pic18exp_pic16f1947_24j40/system.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;		None
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;		None
 20813 ;; Return value:  Size  Location     Type
 20814 ;;                  1    wreg      void 
 20815 ;; Registers used:
 20816 ;;		None
 20817 ;; Tracked objects:
 20818 ;;		On entry : 1E/0
 20819 ;;		On exit  : 1E/0
 20820 ;;		Unchanged: 1E/0
 20821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20826 ;;Total ram usage:        0 bytes
 20827 ;; Hardware stack levels used:    1
 20828 ;; This function calls:
 20829 ;;		Nothing
 20830 ;; This function is called by:
 20831 ;;		_high_isr
 20832 ;; This function uses a non-reentrant model
 20833 ;;
 20834                           
 20835                           
 20836                           ;psect for function _UserInterruptHandler
 20837  07FB                     _UserInterruptHandler:	
 20838                           
 20839                           ;incstack = 0
 20840                           ; Regs used in _UserInterruptHandler: []
 20841  07FB  0008               	return
 20842  07FC                     __end_of_UserInterruptHandler:	
 20843  007E                     btemp	set	126	;btemp
 20844  007E                     int$flags	set	126
 20845  007E                     wtemp	set	126
 20846  007E                     wtemp0	set	126
 20847  0080                     wtemp1	set	128
 20848  0082                     wtemp2	set	130
 20849  0084                     wtemp3	set	132
 20850  0086                     wtemp4	set	134
 20851  0088                     wtemp5	set	136
 20852  007F                     wtemp6	set	127
 20853  007E                     ttemp	set	126
 20854  007E                     ttemp0	set	126
 20855  0081                     ttemp1	set	129
 20856  0084                     ttemp2	set	132
 20857  0087                     ttemp3	set	135
 20858  007F                     ttemp4	set	127
 20859  007E                     ltemp	set	126
 20860  007E                     ltemp0	set	126
 20861  0082                     ltemp1	set	130
 20862  0086                     ltemp2	set	134
 20863  0080                     ltemp3	set	128


Data Sizes:
    Strings     1018
    Constant    222
    Data        28
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     62      71
    BANK1            80     39      76
    BANK2            80     12      64
    BANK3            80      0      50
    BANK4            80      0      73
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           70      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK4[33]), 

    memset@p	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK4[33]), 

    sprintf$2454	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_47(CODE[17]), STR_46(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_45(CODE[21]), STR_44(CODE[16]), STR_43(CODE[22]), STR_42(CODE[16]), 
		 -> STR_31(CODE[30]), STR_28(CODE[32]), STR_18(CODE[31]), STR_17(CODE[17]), 
		 -> STR_16(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 33
		 -> LCDText(BANK4[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_45(CODE[21]), STR_42(CODE[16]), STR_31(CODE[30]), STR_28(CODE[32]), 
		 -> STR_18(CODE[31]), 

    sp__memset	PTR void  size(1) Largest target is 33
		 -> LCDText(BANK4[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    CONSOLE_PutString@str	PTR unsigned char  size(2) Largest target is 66
		 -> STR_41(CODE[19]), STR_40(CODE[46]), STR_39(CODE[24]), STR_38(CODE[3]), 
		 -> STR_37(CODE[7]), STR_36(CODE[26]), STR_35(CODE[28]), STR_34(CODE[9]), 
		 -> STR_33(CODE[3]), STR_32(CODE[29]), STR_30(CODE[3]), STR_29(CODE[30]), 
		 -> STR_27(CODE[5]), STR_26(CODE[60]), STR_25(CODE[66]), STR_24(CODE[66]), 
		 -> STR_23(CODE[62]), STR_22(CODE[64]), STR_21(CODE[23]), STR_20(CODE[32]), 
		 -> STR_19(CODE[60]), STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[3]), 
		 -> STR_12(CODE[14]), STR_11(CODE[50]), STR_10(CODE[3]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_7(CODE[14]), STR_6(CODE[48]), STR_5(CODE[12]), 
		 -> STR_4(CODE[12]), STR_3(CODE[19]), STR_2(CODE[10]), STR_1(CODE[9]), 

    isSameAddress@Address2	PTR unsigned char  size(1) Largest target is 50
		 -> ConnectionTable(BANK3[50]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(1) Largest target is 50
		 -> ConnectionTable(BANK3[50]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK3[50]), RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK3[50]), RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    S746$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    S746$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmEdc(BANK2[2]), nvmOutFrameCounter(BANK2[2]), nvmConnectionTable(BANK0[2]), nvmConnMode(BANK1[2]), 
		 -> nvmCurrentChannel(BANK1[2]), nvmMyPANID(BANK1[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 50
		 -> conn_size(BANK0[1]), myPANID(BANK1[2]), ConnMode(BANK1[1]), currentChannel(BANK1[1]), 
		 -> ConnectionTable(BANK3[50]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 50
		 -> conn_size(BANK0[1]), myPANID(BANK1[2]), ConnMode(BANK1[1]), currentChannel(BANK1[1]), 
		 -> ConnectionTable(BANK3[50]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> myPANID(BANK1[2]), MAC_PANID(BANK0[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(1) Largest target is 2
		 -> MiApp_StartConnection@tmp(BANK0[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK1[2]), myNetworkAddress(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(1) Largest target is 40
		 -> TxBuffer(BANK4[40]), 

    S250$DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK3[50]), RxBuffer(BIGRAM[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 138
		 -> NULL(NULL[0]), ConnectionTable(BANK3[50]), RxBuffer(BIGRAM[138]), 

    S27$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    S206$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 

    S206$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BIGRAM[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BIGRAM[68]), RxBuffer(BIGRAM[138]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _high_isr in COMMON

    _high_isr->i1_PHYGetLongRAMAddr
    i1_PHYSetShortRAMAddr->i1_SPIPut
    i1_PHYGetShortRAMAddr->i1_SPIPut
    i1_PHYGetLongRAMAddr->i1_SPIPut
    i1_SPIGet->i1_SPIPut

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _DemoOutput_HandleMessage->_CONSOLE_PutString
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _MiApp_BroadcastPacket->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_DemoOutput_Channel
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMInit->_NVMalloc
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_NVMWrite
    _EEPROM_Read->_SPIPut
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_InitMRF24J40
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPIPut
    _PHYSetLongRAMAddr->_SPIPut
    _MiMAC_ReceivedPacket->_MiMAC_DiscardPacket
    _AddConnection->_NVMWrite
    _isSameAddress->___bmul
    _Total_Connections->___bmul
    _MiApp_DiscardMessage->_MiMAC_DiscardPacket
    _MiMAC_DiscardPacket->___wmul
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->___wmul
    _DumpConnection->_CONSOLE_PrintDec
    _CONSOLE_PrintHex->_CONSOLE_Put
    _DemoOutput_ChannelError->_CONSOLE_PrintDec
    _DemoOutput_Channel->_LCDDisplay
    _CONSOLE_PrintDec->___lbdiv
    ___lbdiv->___lbmod
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___wmul->___lbmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut
    _DELAY_ms->___lmul
    _CONSOLE_PutString->_CONSOLE_Put

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Initialize_Demo
    _Run_Demo->_run_p2p_demo
    _Process_RxMessage->_MiApp_MessageAvailable
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _MiApp_BroadcastPacket->_SendPacket
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_EstablishConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_SendPacket
    _SendPacket->_MiMAC_SendPacket

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Run_Demo->_run_p2p_demo
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  901523
                                             38 BANK1      1     1      0
                 _CONSOLE_Initialize
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     13    13      0   44565
                                              0 BANK1     13    13      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2727
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2727
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      65
                                             10 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      65
                                             10 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  446559
                       _run_p2p_demo
 ---------------------------------------------------------------------------------
 (2) _run_p2p_demo                                        14    14      0  446559
                                             31 BANK1      4     4      0
                                              0 BANK2     10    10      0
                      _ButtonPressed
                           _DELAY_ms
             _DemoOutput_Instruction
             _DemoOutput_UnicastFail
              _DemoOutput_UpdateTxRx
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
            _MiApp_UnicastConnection
                  _Process_RxMessage
                             ___bmul
                            ___lbmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    0     0      0  213694
                           _DELAY_ms
           _DemoOutput_HandleMessage
             _DemoOutput_Instruction
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   40297
                                             57 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   39923
                                             55 BANK0      2     1      1
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_HandleMessage                             3     3      0    4208
                                             15 BANK0      3     3      0
                   _CONSOLE_PrintHex
                        _CONSOLE_Put
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastConnection                              2     1      1   42598
                                             59 BANK0      1     1      0
                                             24 BANK1      1     0      1
               _MiApp_UnicastAddress
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_UnicastAddress                                 3     1      2   40470
                                             58 BANK0      1     1      0
                                             22 BANK1      2     0      2
                         _SendPacket
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   40192
                                             58 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UnicastFail                               0     0      0   45318
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     389
                                             19 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      2     2      0  362317
                                             36 BANK1      2     2      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                     _DumpConnection
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                8     3      5    3914
                                             19 BANK0      8     3      5
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   72637
                                             43 BANK0      7     7      0
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
                            _NVMRead
                           _NVMWrite
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    1167
                                              9 BANK0      6     0      6
                           _MacroNop
 ---------------------------------------------------------------------------------
 (4) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1147
                                             15 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1134
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           5     3      2   41993
                                             38 BANK0      5     3      2
                       _InitMRF24J40
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0   13686
                                             27 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          3     1      2     902
                                             10 BANK0      3     1      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (2) _MiApp_EstablishConnection                           18    17      1  207834
                                             31 BANK1      5     4      1
                                              0 BANK2     12    12      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               1     1      0  145693
                                             30 BANK1      1     1      0
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            22    22      0  145693
                                             58 BANK0      4     4      0
                                             22 BANK1      8     8      0
                      _AddConnection
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                           _NVMWrite
                         _SendPacket
                             ___bmul
                             ___wmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          16    10      6   40161
                                             51 BANK0      7     1      6
                                             13 BANK1      9     9      0
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    26    17      9   36511
                                             38 BANK0     13     4      9
                                              0 BANK1     13    13      0
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        10     6      4     318
                                              9 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SetAltAddress                                  2     1      1    3317
                                             13 BANK0      2     1      1
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (8) _InitMRF24J40                                        20    20      0   20541
                                             18 BANK0     20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _PHYGetShortRAMAddr                                   3     3      0     161
                                             10 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _PHYGetLongRAMAddr                                    6     4      2     434
                                             10 BANK0      6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      31
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _MiMAC_SetChannel                                     2     1      1    9935
                                             16 BANK0      2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (8) _PHYSetShortRAMAddr                                   3     2      1    2621
                                             10 BANK0      3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _PHYSetLongRAMAddr                                    6     3      3    6982
                                             10 BANK0      6     3      3
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                11    11      0   42733
                                             22 BANK0     11    11      0
                _MiMAC_DiscardPacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        8     8      0    9280
                                             27 BANK0      8     8      0
                           _NVMWrite
                  _Total_Connections
                             ___bmul
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     4      3     816
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0    2067
                                             12 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0   21218
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  2     2      0   21218
                                             20 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    3751
                                             27 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             7     1      6    3689
                                             20 BANK0      7     1      6
                             ___bmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DumpConnection                                       4     4      0    8210
                                             19 BANK0      4     4      0
                   _CONSOLE_PrintDec
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PrintHex                                     2     2      0     170
                                             10 BANK0      2     2      0
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_Instruction                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0    5205
                                             19 BANK0      1     1      0
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   47015
                                             60 BANK0      2     1      1
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _CONSOLE_PrintDec                                     1     1      0    1334
                                             18 BANK0      1     1      0
                        _CONSOLE_Put
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              5     4      1     732
                                              9 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     416
                                             14 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   45318
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   41478
                                             55 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             38    28     10   29332
                                             21 BANK0     34    24     10
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   21218
                                             14 BANK0      6     2      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             16 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1    1931
                                              9 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0    5262
                                             28 BANK0      1     1      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    2501
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    2501
                                             27 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2885
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               6     2      4     384
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     223
                                             12 BANK0      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0      96
                                             10 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0      96
                                             10 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                             6     4      2    2278
                                             21 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              9 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PutString                                    5     3      2    3840
                                             10 BANK0      5     3      2
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (6) _CONSOLE_Put                                          1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONSOLE_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0    1277
                                              7 COMMON     5     5      0
                                              0 BANK0      9     9      0
               _UserInterruptHandler
                i1_PHYGetLongRAMAddr
               i1_PHYGetShortRAMAddr
               i1_PHYSetShortRAMAddr
                           i1___wmul
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) i1_PHYSetShortRAMAddr                                3     2      1     245
                                              1 COMMON     3     2      1
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (13) i1_PHYGetShortRAMAddr                                3     3      0     112
                                              1 COMMON     3     3      0
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (13) i1_PHYGetLongRAMAddr                                 6     4      2     208
                                              1 COMMON     6     4      2
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_SPIGet                                            0     0      0      22
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_SPIPut                                            2     2      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONSOLE_Initialize
   _DemoOutput_Greeting
     _CONSOLE_PutString
       _CONSOLE_Put
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _CONSOLE_Put
       _LCDDisplay
         _DELAY_ms
           ___lmul
         _LCD_Erase
           _DELAY_ms
             ___lmul
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
               ___lmul
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___bmul
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lbmod (ARG)
           _isdigit
     _DemoOutput_ChannelError
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _CONSOLE_Put
     _DemoOutput_Instruction
     _DumpConnection
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
       ___bmul
     _MiApp_ConnectionMode
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
           ___wmul
             ___lbmod (ARG)
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _Total_Connections
               ___bmul
             ___bmul
             _isSameAddress
               ___bmul (ARG)
           _MiMAC_DiscardPacket
             ___wmul
               ___lbmod (ARG)
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             ___wmul
               ___lbmod (ARG)
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPIPut
           _MiWi_TickGet
           _NVMWrite
             ___bmul (ARG)
             ___wmul (ARG)
               ___lbmod (ARG)
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           ___bmul
           ___wmul
             ___lbmod (ARG)
           _isSameAddress
             ___bmul (ARG)
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _PHYGetLongRAMAddr
               _SPIGet
                 _SPIPut
               _SPIPut
             _PHYGetShortRAMAddr
               _SPIGet
                 _SPIPut
               _SPIPut
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPIPut
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
     _MiApp_ProtocolInit
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         _NVMWrite
           ___bmul (ARG)
           ___wmul (ARG)
             ___lbmod (ARG)
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
           _PHYGetLongRAMAddr
             _SPIGet
               _SPIPut
             _SPIPut
           _PHYGetShortRAMAddr
             _SPIGet
               _SPIPut
             _SPIPut
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         ___wmul
           ___lbmod (ARG)
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
       _NVMInit
         _NVMalloc
       _NVMRead
         _MacroNop
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
       ___bmul
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
       _NVMWrite
         ___bmul (ARG)
         ___wmul (ARG)
           ___lbmod (ARG)
     _MiApp_StartConnection
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
       _MiWi_TickGet
   _Run_Demo
     _run_p2p_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
         ___lmul
       _DemoOutput_Instruction
       _DemoOutput_UnicastFail
         _CONSOLE_PutString
           _CONSOLE_Put
         _LCDDisplay
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___lbmod (ARG)
             _isdigit
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _DELAY_ms
             ___lmul
           _LCD_Erase
             _DELAY_ms
               ___lmul
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
                 ___lmul
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
               ___lbmod (ARG)
             _isdigit
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           ___bmul (ARG)
         ___bmul
       _Process_RxMessage
         _DELAY_ms
           ___lmul
         _DemoOutput_HandleMessage
           _CONSOLE_PrintHex
             _CONSOLE_Put
           _CONSOLE_Put
           _CONSOLE_PutString
             _CONSOLE_Put
         _DemoOutput_Instruction
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _DELAY_ms
               ___lmul
             _LCD_Erase
               _DELAY_ms
                 ___lmul
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                   ___lmul
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___bmul
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___lbmod (ARG)
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
             ___wmul
               ___lbmod (ARG)
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 ___bmul (ARG)
                 ___wmul (ARG)
                   ___lbmod (ARG)
               _Total_Connections
                 ___bmul
               ___bmul
               _isSameAddress
                 ___bmul (ARG)
             _MiMAC_DiscardPacket
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
                 ___wmul
                   ___lbmod (ARG)
               ___wmul
                 ___lbmod (ARG)
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiWi_TickGet
             _NVMWrite
               ___bmul (ARG)
               ___wmul (ARG)
                 ___lbmod (ARG)
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             ___bmul
             ___wmul
               ___lbmod (ARG)
             _isSameAddress
               ___bmul (ARG)
       ___bmul
       ___lbmod
       ___wmul
         ___lbmod (ARG)
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
       ___lmul
     _LCDDisplay
       _DELAY_ms
         ___lmul
       _LCD_Erase
         _DELAY_ms
           ___lmul
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
             ___lmul
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___lbmod (ARG)
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i1_PHYGetLongRAMAddr
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_PHYGetShortRAMAddr
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut
   i1_PHYSetShortRAMAddr
     i1_SPIPut
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      C      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      32      11       62.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      49      13       91.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     15C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              46      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     15C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 23:30:11 2016

                     _PUSH_BUTTON_press_time 012A                                            _i 00DE  
                               _run_p2p_demo 0803                               _LCD_Initialize 1154  
                                          pc 0002                            _Process_RxMessage 0FDC  
                       ?_MiMAC_DiscardPacket 0070                               ___bmul@product 002A  
                             ?_isSameAddress 002C                                  __CFG_CP$OFF 0000  
                              ?_LCDInitPortA 0070                                ?_LCDInitPortB 0070  
                                         _DE 207E                                           l72 1BA7  
                                         l90 0A2C                                           l85 1C5F  
                                         l79 1BD8                                ?_LCDInitWrite 0070  
                                ?_LCD_Update 0070                          ___wmul@multiplicand 0030  
                        MiApp_ProtocolInit@i 0051                             i1___wmul@product 0074  
                         ?_Process_RxMessage 0070                                 NVMRead@count 002D  
                                 _MiMAC_Init 07CF                              _P2PCapacityInfo 00D6  
                                        l101 0ABF                                          l110 0CF2  
                                        l113 0DC8                                          l105 0B93  
                                        l108 0C67                                          l141 1CD8  
                                        l133 1CA2                                          l171 1E6C  
                                        l263 1755                                          l167 1E3F  
                                        l168 1E4A                                          l265 1786  
                                        l441 1711                                          l433 16AC  
                                        l604 1372                                          l445 172E  
                                        l464 112A                                          l650 1874  
                                        l395 14B2                                          l396 1723  
                                        l637 13C8                                          l638 13D7  
                                        l487 1F38                                          l488 1F49  
                                        l738 09D5                                          l499 1A96  
                                        l868 0FFB                                          l894 0F8B  
                                        l991 0855                                 __CFG_CPD$OFF 0000  
                                P2PTasks@tmp 00BA                  __size_of_PHYSetShortRAMAddr 0019  
                __end_of_MiMAC_SetAltAddress 1F6E                              ??_AddConnection 003B  
                                LCDDisplay@i 005B                                          wreg 0009  
                               __CFG_FOSC$HS 0000                          ??_Process_RxMessage 005E  
                              NVMInit@result 002F            __end_of_MiApp_EstablishConnection 1AA5  
             __size_of_MiApp_StartConnection 001D                __end_of_MiApp_StartConnection 1F4A  
                               ?_LCD_d_write 0070                            _Total_Connections 06B6  
                                       l1110 01DE                                         l1008 095A  
                                       l1105 01DB                                         l1140 02AB  
                                       l1109 01DD                                         l1302 13E4  
                                       l1054 18F8                                         l1135 028E  
                                       l1144 02C8                                         l1082 0135  
                                       l1058 1928                                         l1180 03E9  
                                       l1164 0391                                         l1084 0137  
                                       l1085 0139                                         l1086 013B  
                                       l1088 0151                                         l1563 19A9  
                                       l6421 19B4                                         l8021 1E0C  
                                       l6407 19A4                                         l8111 06B9  
                                       l8015 1E0A                                         l8007 1DF0  
                                       l6417 19B1                                         l8045 1E4F  
                                       l8037 1E25                                         l8029 1E24  
                                       l8215 276C                                         l8127 17D5  
                                       l8303 0A5B                                         l8063 1EA3  
                                       l8047 1E67                                         l9015 150A  
                                       l9121 1633                                         l9033 1524  
                                       l6481 1793                                         l7531 09CE  
                                       l8219 2763                                         l8251 04E7  
                                       l8243 04D8                                         l8403 0E98  
                                       l8411 0E9B                                         l8307 0A60  
                                       l8059 1E73                                         l9131 165F  
                                       l9107 15D6                                         l9043 152D  
                                       l9051 153C                                         l8229 04FC  
                                       l8421 0EC5                                         l8413 0EAF  
                                       l8333 0B2C                                         l7701 1AAA  
                                       l9117 162D                                         l9061 157E  
                                       l8255 04EB                                         l8271 27D6  
                                       l9231 0FFC                                         l8511 067B  
                                       l8423 0EC9                                         l8319 0A95  
                                       l7633 13EE                                         l9313 0A23  
                                       l9305 0A13                                         l8425 0ECF  
                                       l9129 1642                                         l8267 27CA  
                                       l8275 27DA                                         l9251 1392  
                                       l9235 137A                                         l8435 0ED3  
                                       l8347 0C00                                         l8291 0A3F  
                                       l7651 1B83                                         l9163 16BB  
                                       l9155 16B1                                         l9147 169F  
                                       l9139 1687                                         l9083 159E  
                                       l9331 07E1                                         l8437 0EF9  
                                       l8373 0D61                                         l7661 1BAF  
                                       l7717 1AC1                                         l7901 1CE9  
                                       l8541 1B08                                         l8533 1AEC  
                                       l9261 11DC                                         l8703 0236  
                                       l8623 0154                                         l8607 0130  
                                       l8471 0622                                         l8359 0CC8  
                                       l7663 1BD3                                         l7647 1B8F  
                                       l9095 15CB                                         l8801 0330  
                                       l8713 024D                                         l8705 0240  
                                       l8609 013C                                         l8393 0E3C  
                                       l8289 0A3C                                         l7673 1BE1  
                                       l7657 1BBB                                         l7913 1CF8  
                                       l9169 170A                                         l9177 1712  
                                       l9265 11E6                                         l8571 0969  
                                       l8803 0333                                         l8731 027C  
                                       l8643 019D                                         l8627 015F  
                                       l8635 0189                                         l8619 013F  
                                       l7851 17BB                                         l8483 062A  
                                       l8475 0627                                         l8467 061E  
                                       l8459 05F7                                         l8387 0E06  
                                       l8299 0A43                                         l9179 1725  
                                       l9347 1866                                         l9451 0FD2  
                                       l9443 0FA5                                         l9283 1211  
                                       l9197 1341                                         l8901 0426  
                                       l8821 0382                                         l8709 0247  
                                       l8717 0250                                         l9381 197B  
                                       l7685 1C05                                         l7941 1D45  
                                       l7933 1D39                                         l9621 1A47  
                                       l9525 106C                                         l9277 120F  
                                       l8567 095F                                         l8559 095B  
                                       l8911 0465                                         l8903 0446  
                                       l8823 0385                                         l8815 0364  
                                       l8735 0285                                         l8719 0265  
                                       l8663 01BD                                         l8399 0E66  
                                       l7871 1CB4                                         l9519 103F  
                                       l8585 097B                                         l7785 0F5D  
                                       l8921 049D                                         l8817 0367  
                                       l8809 0346                                         l8673 01F5  
                                       l8657 01BC                                         l8665 01D9  
                                       l9713 129F                                         l8489 0631  
                                       l7697 1AA5                                         l7881 1CC9  
                                       l9609 19F9                                         l9297 1231  
                                       l9289 1229                                         l8915 0475  
                                       l8835 0399                                         l8851 03BB  
                                       l8683 0207                                         l8667 01E0  
                                       l9731 12C7                                         l7875 1CC2  
                                       l7867 1CAD                                         l9635 1A5B  
                                       l9547 10E5                                         l9475 100A  
                                       l8589 0985                                         l7789 0F63  
                                       l8925 04A4                                         l8845 03B1  
                                       l8781 02F3                                         l8677 0202  
                                       l9717 12B4                                         l7957 1D5C  
                                       l7949 1D51                                         l7893 1CE0  
                                       l7885 1CCD                                         l8919 048F  
                                       l8863 03D0                                         l8687 020E  
                                       l8695 0223                                         l8679 0204  
                                       l8935 0114                                         l9719 12BA  
                                       l7991 1DC0                                         l7895 1CE3  
                                       l8951 1469                                         l9655 1A73  
                                       l8929 04B4                                         l8937 04C5  
                                       l8689 0218                                         l7985 1DBE  
                                       l7977 1D9C                                         l7889 1CD5  
                                       l9489 1023                                         l8859 03CB  
                                       l8795 0313                                         l8779 02E5  
                                       l8699 022F                                         l9843 194E  
                                       l9763 1310                                         l9747 12E5  
                                       l9739 12DE                                         l9683 1254  
                                       l8971 14A8                                         l8955 1479  
                                       l9667 1A15                                         l9931 091D  
                                       l8885 0405                                         l8869 03DF  
                                       l8789 0307                                         l9765 1316  
                                       l9669 1A9F                                         l9933 091F  
                                       l9917 08DD                                         l9941 0930  
                                       l8895 041D                                         l8879 03F2  
                                       l9759 12FB                                         l7999 1DD9  
                                       l8991 14E8                                         l8983 14DB  
                                       l8967 1497                                         l9951 08CA  
                                       l9863 080D                                         STR_1 24C3  
                                       STR_2 24B0                                         l9777 1323  
                                       l9785 133B                                         l9697 127E  
                                       l8985 14DE                                         l8969 14A2  
                                       l9953 085C                                         l9857 0803  
                                       STR_3 2413                                         STR_4 24A4  
                                       l8979 14D1                                         l9947 094D  
                                       STR_5 2498                                         STR_6 225A  
                                       l8997 14FA                                         l9949 094F  
                                       l9869 0810                                         l9957 0952  
                                       STR_7 248A                                         STR_8 2495  
                                       l9799 1154                                         STR_9 2493  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         _LATD 010F  
                     __size_of_ButtonPressed 0065                                         u6205 1EF7  
                                       u8000 14A0                                         u7310 1B24  
                                       u7230 1ADA                                         u7240 1ADB  
                                       u7250 1AEA                    DemoOutput_Channel@channel 005D  
                                       u6195 1EC6                                         u7270 1AFE  
                                       u6535 1CBB                                         u7280 1AFF  
                                       u7290 1B06                                         u7605 02C5  
                                       u8085 14F2                                         u7625 02E2  
                                       u7465 01EE                                         u8425 0A16  
                                       u6915 04E0                                         u7475 01FB  
                                       u7725 035C                                         u7735 0376  
                                       u7585 02A8                                         u6955 27D0  
                                       u7925 04B2                                         u7685 0324  
                                       u8905 0948                                 ?_LCD_i_write 0070  
                  CONSOLE_PrintHex@PRINT_VAR 002A                    freezer_feature@switch_val 00AC  
                                       _MiWi 2000                           ?_Total_Connections 0070  
                  MiApp_StartConnection@Mode 0038                   MiMAC_SetChannel@offsetFreq 0030  
                                       _main 18D0                              __end_of_NVMInit 0714  
                            __end_of_NVMRead 17BB                                         fsr0h 0005  
                                       fsr1h 0007                                         fsr0l 0004  
                                       indf0 0000                                         indf1 0001  
                                       fsr1l 0006                                         btemp 007E  
                         __size_of_LCD_Erase 000F                               ??_InitMRF24J40 0032  
                                       ltemp 007E                                         start 010F  
                                       ttemp 007E                                         wtemp 007E  
                              __CFG_IESO$OFF 0000                             __end_of_DELAY_ms 13E0  
                      MiApp_ProtocolInit@tmp 004C                                 _sprintf$2454 0047  
                               _sprintf$2447 0043                                 _sprintf$2448 0045  
                        ??_Total_Connections 002C                       __end_of_LCD_Initialize 1194  
                          ___bmul@multiplier 002B                    __end_of_Process_RxMessage 0FFB  
                              __CFG_MCLRE$ON 0000                              ?_DumpConnection 0070  
                          _PHYGetLongRAMAddr 1EDC                                        S10181 07A1  
                                      S10185 0500                        ??_MiMAC_DiscardPacket 0034  
                             ??_LCDInitPortA 002A                               ??_LCDInitPortB 002A  
                             ??_LCDInitWrite 002C                           ?_PHYGetLongRAMAddr 002A  
                           __end_of_P2PTasks 1731                 __end_of_MiApp_DiscardMessage 1000  
                                      l10109 18E0                                        l10077 1908  
                                      l10069 18F6                                        l10183 0EEE  
                                      l10087 191F                                        ?_main 0070  
                            __end_of___lbdiv 19B6                                        _EEADR 0191  
                                      STR_10 24D5                                        STR_11 2258  
                                      STR_12 248A                                        STR_20 22D8  
              MiApp_EstablishConnection@Mode 00BF                                        STR_13 2495  
                                      STR_21 23BE                                        STR_30 24D5  
                                      STR_14 2493                                        STR_22 2162  
                                      STR_15 24D5                                        STR_31 2335  
                                      STR_23 21A2                                        STR_16 2459  
                                      STR_32 2353                                        STR_40 228A  
                                      STR_24 2120                                        STR_33 24D5  
                                      STR_17 2448                                        STR_41 2400  
                                      STR_25 20DE                                __CFG_WDTE$OFF 0000  
                                      STR_34 24BA                                        STR_42 247A  
                                      STR_18 22F8                                        STR_26 21E0  
                                      STR_27 24D3                                        STR_43 23D5  
                                      STR_35 2370                                        STR_19 221C  
                                      STR_44 246A                                        STR_36 238C  
                                      STR_28 22B8                                        STR_37 24CC  
                                      STR_45 23EB                                        STR_29 2317  
                                      STR_38 24A1                                        STR_46 2426  
                                      STR_47 2437                                        STR_39 23A6  
                            __end_of___lbmod 0A27                                        _T1CON 0018  
                                LCD_Update@i 003C                                        _IOCBN 0395  
                                      _IOCBP 0394                      ?_DemoOutput_Instruction 0070  
                            __end_of___lwdiv 04F0                                        i1l212 0027  
                                      i1l209 0029                              __end_of___lwmod 27DF  
                                      i1l738 0797                                        _RCSTA 019D  
                   __size_of_InitSymbolTimer 000B                          ??_PHYGetLongRAMAddr 002C  
                                      _TMR1H 0017                                        _TMR1L 0016  
                                      _SPBRG 019B                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
                                      _TRISD 008F                                        _TXREG 019A  
                                      _TXSTA 019E                             __end_ofi1_SPIGet 07A1  
                           SendPacket@tParam 00AF                             __end_ofi1_SPIPut 079C  
                        ___lmul@multiplicand 002D                                _LCDWritePortA 09AF  
                              _LCDWritePortB 09F5                       ?_DemoOutput_UpdateTxRx 0059  
                             __CFG_FCMEN$OFF 0000                   __end_of_PHYGetShortRAMAddr 1F27  
                  __end_of_Total_Connections 06CC                                        _RxNum 00D9  
                                      _TxNum 00DB                          __size_of_LCDDisplay 0023  
              __size_of_MiApp_ConnectionMode 0026                         freezer_feature@tick1 00A4  
                       freezer_feature@tick2 00A8                              __end_of_dpowers 20D6  
                        __size_of_LCDInitSPI 0006                             SendPacket@status 00AD  
              __size_of_MiApp_UnicastAddress 0014                              __end_of_isdigit 04FE  
                           __end_of_NVMWrite 1793                             __end_of_NVMalloc 0737  
                           __end_ofi1___wmul 2789                                        ltemp0 007E  
                                      ltemp1 0082                                        ltemp2 0086  
                                      ltemp3 0080                                InitMRF24J40@i 0045  
                              InitMRF24J40@j 0043                               ButtonPressed@t 0033  
                        __size_of_LCD_Update 0038                                        ttemp0 007E  
                                      ttemp1 0081                                        ttemp2 0084  
                                      ttemp3 0087                                        ttemp4 007F  
                                      status 0003                          i1___wmul@multiplier 0070  
                                      wtemp0 007E                                        wtemp1 0080  
                                      wtemp2 0082                                        wtemp3 0084  
                                      wtemp4 0086                                        wtemp5 0088  
                                      wtemp6 007F                              __end_of_sprintf 04CB  
                            ___lbdiv@divisor 002E                         i1_PHYGetShortRAMAddr 0737  
                            ___lbdiv@counter 0030                    __end_of_PHYGetLongRAMAddr 1F0C  
                  __size_of_MiMAC_SetChannel 0021                         __size_of_EEPROM_Read 001C  
                __end_of_DemoOutput_Greeting 11D2            __size_of_DemoOutput_HandleMessage 0076  
                            ?_LCD_Initialize 0070                                 __end_of_MiWi 207E  
                            __initialization 1877                    ?_DemoOutput_HandleMessage 0070  
                            ??_isSameAddress 002F                    __size_of_MiMAC_SendPacket 0210  
                           __end_of_MacroNop 17FA                                 __end_of_main 18E3  
                           _CONSOLE_PrintDec 1969                             _CONSOLE_PrintHex 1355  
                              high_isr@flags 0078                                _ButtonPressed 0F70  
                          _MACCurrentChannel 00D4                    PHYGetShortRAMAddr@address 002A  
     MiApp_UnicastConnection@ConnectionIndex 005B               __end_of_DemoOutput_Instruction 0FFC  
                                     ??_main 005E                                  ?_MiMAC_Init 0046  
                    _DemoOutput_ChannelError 19B6                                 NVMWrite@addr 0036  
                          __end_of_LCD_Erase 1414                         __end_of_MiWi_TickGet 1AD1  
                             ?_LCDWritePortA 0070                               ?_LCDWritePortB 0070  
                    MiApp_SetChannel@channel 003B                    PHYGetShortRAMAddr@tmpRFIE 002C  
                           __end_of_Run_Demo 1F70            MiApp_ProtocolInit@bNetworkFreezer 004E  
                       __size_of_CONSOLE_Put 000A                         _MiMAC_ReceivedPacket 0A27  
                  PHYSetShortRAMAddr@address 002B                                   _SendPacket 1AD1  
                                  ??_NVMInit 002F                                    ??_NVMRead 002F  
                                     _EEADRH 0192                                       _EEDATA 0193  
                                     _EECON2 0196                                       _ANSELA 018C  
                   ?_MiApp_UnicastConnection 00B8                                       i1l7411 0094  
                                     i1l7421 00F7                                       i1l7345 2776  
                                     i1l7417 00E8                                       i1l7425 00FF  
                                     i1l6651 0792                                       i1l7419 00F1  
                                     i1l7349 277C                                       i1l7437 010B  
                                     i1l7373 0018                                       i1l7391 002E  
                                     i1l7395 0048                                       i1l7399 004D  
                                     u612_25 00B8                                       _OSCCON 0099  
                                     u598_25 077B                                       _SPIGet 1F27  
                                     _SPIPut 09C9                        ?i1_PHYGetShortRAMAddr 0070  
                          _run_p2p_demo$2996 0154                            _run_p2p_demo$2997 0156  
                          _run_p2p_demo$2998 0158                    PHYSetShortRAMAddr@tmpRFIE 002C  
            MiApp_StartConnection@ChannelMap 0034                         __size_of_LCDTRXCount 0021  
              __size_of_UserInterruptHandler 0001                      ?_DemoOutput_UnicastFail 0070  
                             __CFG_PWRTE$OFF 0000                                LCDInitWrite@v 002C  
                             P2PTasks@status 00BC                                       _TxData 00DA  
                 __size_of_Process_RxMessage 001F                   __end_of_CONSOLE_Initialize 18EE  
               __size_ofi1_PHYGetLongRAMAddr 002B                             __end_of_high_isr 010F  
                                     ___bmul 1731                 __end_ofi1_PHYSetShortRAMAddr 0762  
                                     ___lmul 13E0                         CONSOLE_PutString@str 002A  
                                     ___wmul 0F5B                      ??_MiApp_BroadcastPacket 005A  
                                  ??___lbdiv 002F                               ?_ButtonPressed 0070  
                                  ??___lbmod 002A                     __size_of_freezer_feature 0052  
                  __size_of_MiApp_SetChannel 001E                                    ??___lwdiv 002D  
                                  ??___lwmod 0034                                       _memset 2761  
                                     _nvmEdc 0138                                 NVMalloc@size 0029  
                       __end_of_InitMRF24J40 1C82                                    ??_isdigit 0029  
                             LCDDisplay@text 0057                        ?_MiMAC_ReceivedPacket 0070  
                __size_of_DemoOutput_Channel 003A                   __size_of_Total_Connections 0016  
                ??_MiApp_EstablishConnection 00C0                     MiApp_StartConnection@tmp 0039  
                                  ?_DELAY_ms 0035                                 LCD_d_write@v 003B  
                                 _TxSynCount 00DC                                    ??_sprintf 003F  
                i1PHYGetShortRAMAddr@address 0071                             ___lbdiv@dividend 002F  
                          ??_InitSymbolTimer 0029                         __end_of_LCDInitPortA 27A4  
                       __end_of_LCDInitPortB 27BF                         __end_of_LCDInitWrite 1431  
                          _SYSTEM_Initialize 1F70                                    ?_P2PTasks 0070  
                            ___lbmod@divisor 0029                         _MiApp_DiscardMessage 0FFC  
                        _PUSH_BUTTON_pressed 00D8                         __size_of_LCD_d_write 001C  
                    __end_of__initialization 18CD                              ___lbmod@counter 002C  
             __end_of_DemoOutput_UnicastFail 2761                                    P2PTasks@i 00BD  
                       __size_of_LCD_i_write 001B                                 LCD_i_write@v 003B  
                         ?_SYSTEM_Initialize 0070                          __size_of_MiMAC_Init 002C  
                             _chk_sel_status 00EA                             _LatestConnection 00D3  
                 __size_of_PHYGetLongRAMAddr 0030                  i1PHYGetShortRAMAddr@tmpRFIE 0073  
                            NVMWrite@oldGIEH 003A                          ___bmul@multiplicand 0029  
                               ??_LCDDisplay 005B                  i1PHYSetShortRAMAddr@address 0072  
                               ??_LCDInitSPI 0029                                    ?i1_SPIGet 0070  
                             __pcstackCOMMON 0070                MiMAC_ReceivedPacket@bIntraPAN 0040  
                                  ?i1_SPIPut 0070                      CONSOLE_PrintDec@toPrint 0032  
                             high_isr@RxBank 007A                                 __pidataBANK0 0000  
                               __pidataBANK1 0000                                 __pidataBANK2 1802  
                        ??_SYSTEM_Initialize 003B                     __size_of_Initialize_Demo 0041  
                  ??_DemoOutput_ChannelError 0033                                 ??_LCD_Update 003C  
                                 __end_of_DE 20C0                             ___lbdiv@quotient 0031  
                                  ?_NVMWrite 0034                                    ?_NVMalloc 0029  
                            ??_LCDWritePortA 002A                              ??_LCDWritePortB 002A  
                i1PHYSetShortRAMAddr@tmpRFIE 0073                   SendPacket@DestinationPANID 0053  
                                  ?i1___wmul 0070                            _CONSOLE_PutString 1341  
                            _ConnectionTable 01A0              __end_of_MiApp_UnicastConnection 1847  
                         ?_CONSOLE_PutString 002A                        InitMRF24J40@_dcnt_438 0037  
                                 ??_DELAY_ms 0037                                  ?_SendPacket 0053  
                         __end_of_LCDDisplay 139D                    __end_of_SYSTEM_Initialize 1FAE  
                               sprintf@width 0051                           __end_of_LCDInitSPI 1800  
                      isSameAddress@Address1 002C                        isSameAddress@Address2 002E  
                                  ?_MacroNop 0070                                   __pbssBANK0 005E  
                                 __pbssBANK1 00C7                                   __pbssBANK2 0120  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                      ?_MiApp_DiscardMessage 0070                          ??_CONSOLE_PutString 002C  
                                 ??_P2PTasks 005A                       ??i1_PHYGetShortRAMAddr 0071  
                __size_of_MiApp_ProtocolInit 014D                                NVMWrite@count 0038  
                           ??_DumpConnection 0033                                      ?_SPIGet 0070  
                                    ?_SPIPut 0070                           __end_of_LCD_Update 0993  
                  SendPacket@SecurityEnabled 0058                               isSameAddress@i 0032  
                 MiApp_BroadcastPacket@SecEn 005A                          InitMRF24J40@_ms_439 003F  
                           _MiMAC_SetChannel 1B5A                           MiMAC_SendPacket@t1 00A0  
                         MiMAC_SendPacket@t2 00A4                    _MiApp_EstablishConnection 19ED  
                   MiMAC_SetAltAddress@PANID 002D                   PHYGetShortRAMAddr@toReturn 002B  
                            ??_ButtonPressed 0033                                   __pmaintext 18D0  
                                 ??i1_SPIGet 0071                                   ??i1_SPIPut 0070  
                           _MiMAC_SendPacket 1C9B                                      ?___bmul 0029  
                                    ?___lmul 0029                                    ?_Run_Demo 0070  
                                    ?___wmul 002E                                   __pintentry 0004  
                      __size_of_MiWi_TickGet 002C                                      ?_memset 0029  
                             ___lmul@product 0031                    __end_of_CONSOLE_PutString 1355  
                                    SPIPut@v 0029                   __end_of_PHYSetShortRAMAddr 1C9B  
                                 ??_NVMWrite 003A                                   ??_NVMalloc 002D  
                    ??_DemoOutput_UpdateTxRx 005A                                   ??i1___wmul 0074  
                          ??_freezer_feature 00A0                       ??_MiMAC_ReceivedPacket 0036  
                                    _LCDText 0248                        __end_of_AddConnection 06B6  
                             _failureCounter 0134                                      _SSP1BUF 0211  
                                    _NVMInit 06CC                                      _NVMRead 1793  
                   __end_of_CONSOLE_PrintDec 199E             __end_of_DemoOutput_HandleMessage 1248  
                   __end_of_CONSOLE_PrintHex 1370                         i1_PHYSetShortRAMAddr 074D  
                                  ?_high_isr 0070                                   ??_MacroNop 0029  
               __size_of_MiMAC_SetAltAddress 0024                        _MiApp_StartConnection 1F2D  
                           ??_LCD_Initialize 003B                  AddConnection@connectionSlot 0041  
                            _timerExtension1 007C                              _timerExtension2 007D  
                   MiApp_ConnectionMode@Mode 003C                              __size_of_SPIGet 0006  
                           _AdditionalNodeID 00E9                              __size_of_SPIPut 0011  
                __end_of_MiMAC_DiscardPacket 17D4                              P2PTasks@tmpTick 00B6  
                         _PHYGetShortRAMAddr 1F0C                                   DELAY_ms@ms 0035  
                               _MiWi_TickGet 1AA5                 __end_of_MiApp_ConnectionMode 19ED  
               __end_of_MiApp_UnicastAddress 185B                                   ??_Run_Demo 005E  
                            __size_of___bmul 0024                                      ___lbdiv 199E  
                            __size_of___lmul 0025                                      ___lbmod 0A0E  
                        ?_PHYGetShortRAMAddr 0070                              __size_of___wmul 0015  
                           _MiApp_SetChannel 1B3C                          __size_of_SendPacket 0062  
                                    ___lwdiv 04CB                                      ___lwmod 27BF  
                      __size_of_InitMRF24J40 0107                              __size_of_memset 0013  
             DemoOutput_ChannelError@channel 0033                                      __ptext1 1FAE  
                               ??_MiMAC_Init 0048                                      __ptext2 1F70  
                                    __ptext3 1154                                      __ptext4 17FA  
                                    __ptext5 27A4                                      __ptext6 2789  
                                    __ptext7 1F6E                                      __ptext8 0803  
                                    __ptext9 0FDC                                      _myPANID 00E0  
                          __end_of_hexpowers 20DE                                    _T1CONbits 0018  
                                    _dpowers 20CC                Initialize_Demo@freezer_enable 00C4  
                   ??_MiApp_MessageAvailable 00BE                                      _isdigit 04F0  
                    CONSOLE_PrintHex@toPrint 002B                            ??_Initialize_Demo 005E  
                              _myLongAddress 014C                                    _MAC_PANID 005F  
                      __size_of_LCDInitPortA 001B                        __size_of_LCDInitPortB 001B  
                     DemoOutput_Channel@Step 005C                                    _IOCBFbits 0396  
                      __size_of_LCDInitWrite 001D                                    _IOCBNbits 0395  
                        i1_PHYGetLongRAMAddr 0762                         LCDWritePortA@preRFIE 002B  
                                  _P2PStatus 00D7                                    _LCD_Erase 1405  
                      ?i1_PHYSetShortRAMAddr 0071                                  _MyindexinPC 00D5  
                       LCDWritePortB@preRFIE 002B                         ??_PHYGetShortRAMAddr 002A  
                 __size_of_SYSTEM_Initialize 003E                                      _sprintf 0111  
                                    clrloop0 273A                       ??_MiApp_DiscardMessage 0036  
                                 ??_high_isr 0020                         end_of_initialization 18CD  
                          __end_of_octpowers 20CC                                    i1SPIPut@v 0070  
                              ??_EEPROM_Read 002C                                      init_ram 2745  
                                    memset@c 0029                                      memset@n 002B  
                                    memset@p 002E                MiMAC_SendPacket@MACPayloadLen 004E  
                                    initloop 2746                              LCDDisplay@delay 005A  
                                 _nvmMyPANID 00E6                              InitMRF24J40@_ms 003B  
                            LCDDisplay@value 0059                                 _InitMRF24J40 1B7B  
                         __end_of_MiMAC_Init 07FB                         ?i1_PHYGetLongRAMAddr 0071  
               MiApp_UnicastConnection@SecEn 00B8             __size_of_MiApp_UnicastConnection 001C  
                    MiMAC_SetChannel@channel 0031                                  _TxSynCount2 00DD  
                      __end_of_isSameAddress 17ED                                 __pstringtext 2000  
       DELAY_ms@cyclesRequiredForEntireDelay 0037                        i1___wmul@multiplicand 0072  
             __size_of_MiApp_BroadcastPacket 0011                                 _LCDInitPortA 2789  
                               _LCDInitPortB 27A4                __end_of_MiApp_BroadcastPacket 182B  
                               _LCDInitWrite 1414                   __size_of_CONSOLE_PutString 0014  
               __size_of_DemoOutput_Greeting 003E                                    _PORTAbits 000C  
                                  _PORTBbits 000D                              _InitSymbolTimer 17ED  
                           NVMalloc@location 002B                 __end_of_UserInterruptHandler 07FC  
                              ??_CONSOLE_Put 0029                           _CONSOLE_Initialize 18E3  
                           ___lbmod@dividend 002B                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISDbits 008F                                    _TRISFbits 030C  
                                 ?_LCD_Erase 0070                         MiWi_TickGet@IntFlag1 002E  
                       MiWi_TickGet@IntFlag2 002D                                  NVMRead@addr 002B  
                                NVMRead@dest 0029                          ?_CONSOLE_Initialize 0070  
                                  _BankIndex 0066                       ?_MiApp_StartConnection 0033  
                          __size_of_DELAY_ms 0043                                ??_LCDTRXCount 0058  
                                ___lbmod@rem 002D                   MiMAC_SendPacket@transParam 0046  
                 MiMAC_SetAltAddress@Address 002E                     _DemoOutput_HandleMessage 11D2  
                  MiApp_UnicastAddress@SecEn 00B7                                    _TXSTAbits 019E  
                          __size_of_P2PTasks 0300                 i1PHYGetShortRAMAddr@toReturn 0072  
                             __end_of_SPIGet 1F2D                               __end_of_SPIPut 09DA  
                      ??i1_PHYGetLongRAMAddr 0073                          __end_of_EEPROM_Read 1877  
                              ?_run_p2p_demo 0070                          DumpConnection@index 0034  
                       ??_CONSOLE_Initialize 0029                               __end_of___bmul 1755  
                          __size_ofi1_SPIGet 0005                               __end_of___lmul 1405  
                          __size_ofi1_SPIPut 000F                               __end_of___wmul 0F70  
                   PHYGetLongRAMAddr@address 002A           __size_of_MiApp_EstablishConnection 00B8  
                             __end_of_memset 2774                   __end_of_DemoOutput_Channel 1969  
                   PHYSetLongRAMAddr@address 002A                            __size_of_NVMWrite 003E  
            __size_of_MiApp_MessageAvailable 0009                     __end_of_MiMAC_SetChannel 1B7B  
                          __size_of_NVMalloc 0023                          start_initialization 1877  
                          __size_ofi1___wmul 0015                       ??i1_PHYSetShortRAMAddr 0072  
                   PHYGetLongRAMAddr@tmpRFIE 002F                     __end_of_MiMAC_SendPacket 1EAB  
                               ??_SendPacket 0059                         _MiApp_ConnectionMode 19C7  
                              ??_LCD_d_write 003B                 MiMAC_SendPacket@headerLength 00AA  
                       _MiApp_UnicastAddress 1847                          __end_of_CONSOLE_Put 137A  
                              ??_LCD_i_write 003B                     PHYSetLongRAMAddr@tmpRFIE 002F  
                            high_isr@results 0077                            __size_of_MacroNop 0002  
                                   ??_SPIGet 002A                                     ??_SPIPut 0029  
                             _currentChannel 00E8                   i1PHYGetLongRAMAddr@address 0071  
                        __end_of_LCDTRXCount 2800  MiApp_EstablishConnection@connectionInterval 015A  
                   ??_DemoOutput_Instruction 0029                               ??_run_p2p_demo 00BF  
                  run_p2p_demo@PressedButton 015A                              _freezer_feature 1FAE  
                                   ??___bmul 002A                      __end_of_InitSymbolTimer 17F8  
                                   ??___lmul 0031                                     ??___wmul 0032  
          MiApp_UnicastAddress@PermanentAddr 00B6                                  __pdataBANK0 0066  
                                __pdataBANK1 00E9                                  __pdataBANK2 013C  
                         __end_of_SendPacket 1B33                          _MiMAC_SetAltAddress 1F4A  
                                   ??_memset 002D                            __size_of_Run_Demo 0002  
                 i1PHYGetLongRAMAddr@tmpRFIE 0076               __size_of_DemoOutput_UpdateTxRx 0007  
                                __pbssBIGRAM 2366                        __end_of_LCDWritePortA 09C9  
                    MiWi_TickGet@currentTime 002F                        __end_of_LCDWritePortB 0A0E  
              __end_of_DemoOutput_UpdateTxRx 0FDC                                  __pbssCOMMON 007C  
                                  ___latbits 0003                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0154  
                      ?_MiApp_ConnectionMode 0070                          SendPacket@Broadcast 00AE  
                                ??_LCD_Erase 003B       MiApp_UnicastAddress@DestinationAddress 005A  
                      ?_MiApp_UnicastAddress 00B6                                 _isdigit$2640 0029  
                                   ?_NVMInit 0070                   __end_of_MiApp_ProtocolInit 1154  
                                   ?_NVMRead 0029                               NVMWrite@source 0034  
                         _PHYSetShortRAMAddr 1C82                   MiApp_EstablishConnection@i 015F  
                   __end_of_MiApp_SetChannel 1B5A                            ?_CONSOLE_PrintDec 0070  
                          ?_CONSOLE_PrintHex 0070                         ?_MiMAC_SetAltAddress 002D  
                     PHYSetLongRAMAddr@value 002C                                  MiMAC_Init@i 004A  
                    PHYSetShortRAMAddr@value 002A                            __size_of_high_isr 010B  
                         ??_CONSOLE_PrintDec 0032                                  sprintf@flag 0055  
                         ??_CONSOLE_PrintHex 002A                 MiMAC_ReceivedPacket@addrMode 003E  
                                _EEPROM_Read 185B                                  sprintf@prec 0050  
              __size_ofi1_PHYGetShortRAMAddr 0016                          __end_of_LCD_d_write 09AF  
                        ?_PHYSetShortRAMAddr 002A                          MiMAC_SendPacket@loc 00AC  
                     _MiApp_MessageAvailable 1B33                         _UserInterruptHandler 07FB  
                        __end_of_LCD_i_write 09F5                            MiMAC_SendPacket@i 00AB  
                           ___lwdiv@dividend 002B                      _MiApp_UnicastConnection 182B  
                   ?_DemoOutput_ChannelError 0070                              _Initialize_Demo 18EE  
                      __end_of_ButtonPressed 0FD5                                     ?___lbdiv 002E  
                                   ?___lbmod 0029                    i1PHYSetShortRAMAddr@value 0071  
                                   ?___lwdiv 0029                                     ?___lwmod 0030  
                                  __pswtext1 07A1                                    __pswtext2 0500  
                                  _conn_size 0065                         ??_PHYSetShortRAMAddr 002B  
                                _CONSOLE_Put 1370                            _PHYSetLongRAMAddr 1EAB  
                                   ?_isdigit 0070                __size_of_MiMAC_ReceivedPacket 0534  
                         ?_PHYSetLongRAMAddr 002A                                     _DELAY_ms 139D  
                        AddConnection@status 0040                                    _hexpowers 20D6  
                   ??_DemoOutput_UnicastFail 005C                             ___lwdiv@quotient 002E  
                                   ?_sprintf 0035                        ??_MiMAC_SetAltAddress 002E  
                                _LCDTRXCount 27DF                                     _P2PTasks 1431  
                        ??_PHYSetLongRAMAddr 002D                          _DemoOutput_Greeting 1194  
                    __end_of_freezer_feature 2000                               ___wmul@product 0032  
                                   _LATAbits 010C                                     _LATBbits 010D  
                                   _LATCbits 010E                                     _LATDbits 010F  
                                   _LATFbits 038C                        ?_UserInterruptHandler 0070  
                                  clear_ram0 2739                                    _octpowers 20C0  
                                   _PIE1bits 0091                    PHYGetLongRAMAddr@toReturn 002E  
                 DemoOutput_UpdateTxRx@RxNum 0059                   DemoOutput_UpdateTxRx@TxNum 005A  
                                   _PIR1bits 0011                                    _rxMessage 0120  
                         _nvmConnectionTable 0063                                     i1_SPIGet 079C  
               MiMAC_SendPacket@frameControl 00A9                                     i1_SPIPut 078D  
            __size_of_DemoOutput_Instruction 0001                             ?_InitSymbolTimer 0070  
                                   _SSP1CON1 0215                       __size_of_AddConnection 00C4  
                                   _SSP1STAT 0214                 __size_of_MiMAC_DiscardPacket 0019  
                    __size_of_DumpConnection 00F9     MiApp_EstablishConnection@ActiveScanIndex 0070  
          MiApp_StartConnection@ScanDuration 0033                                  _MACRxPacket 00C7  
                       ?_DemoOutput_Greeting 0070                                     _NVMWrite 1755  
                  __end_of_PHYSetLongRAMAddr 1EDC                                     _NVMalloc 0714  
                          ___wmul@multiplier 002E                                     i1___wmul 2774  
                             _CharacterArray 013C                                    high_isr@i 007B  
                     ??_MiApp_ConnectionMode 003B                           main@freezer_enable 00C6  
                     ??_MiApp_UnicastAddress 005A                      ??_MiApp_StartConnection 0038  
                        SendPacket@isCommand 0057                   ??_DemoOutput_HandleMessage 002F  
                       __end_of_run_p2p_demo 095B                               _nextEEPosition 0136  
                                   _ConnMode 00EB                            ___lmul@multiplier 0029  
             MiApp_EstablishConnection@retry 0155                                  _LCD_d_write 0993  
                __size_of_PHYGetShortRAMAddr 001B                                     _MacroNop 17F8  
                           __size_of_NVMInit 0048                             __size_of_NVMRead 0028  
                                _LCD_i_write 09DA                __size_of_MiApp_DiscardMessage 0004  
            __end_of_DemoOutput_ChannelError 19C7                    ??_MiApp_UnicastConnection 005B  
                    __end_of_Initialize_Demo 192F                                   _EECON1bits 0195  
                                   _RxBuffer 2366                                     _TxBuffer 0220  
                               _nvmDelayTick 012E                           CONSOLE_PutString@c 002E  
                                   _Run_Demo 1F6E                           Total_Connections@i 002D  
                    __size_of_LCD_Initialize 0040                        MiMAC_ReceivedPacket@i 003F  
                           __size_of___lbdiv 0018                             __size_of___lbmod 0019  
                      ??_DemoOutput_Greeting 005C                             __size_of___lwdiv 0025  
                           __size_of___lwmod 0020                       run_p2p_demo@switch_val 015C  
                      _MiApp_BroadcastPacket 181A                  i1PHYGetLongRAMAddr@toReturn 0075  
                                 sprintf@idx 004A                                   sprintf@len 004B  
                                 sprintf@val 004E                            InitMRF24J40@_dcnt 0033  
                           __size_of_isdigit 000E                            ?_MiMAC_SetChannel 0030  
                            ___lwdiv@divisor 0029                       _DemoOutput_Instruction 0FFB  
                                 _IEEESeqNum 00D2                              ___lwdiv@counter 002D  
                                   __ptext10 0FD5                                     __ptext11 27DF  
                                   __ptext20 1007                                     __ptext12 11D2  
                                   __ptext21 1793                                     __ptext13 182B  
                                   __ptext30 1B33                                     __ptext22 17F8  
                                   __ptext14 1847                                     __ptext31 1431  
                                   __ptext23 06CC                                     __ptext15 181A  
                                   __ptext40 1B5A                                     __ptext32 1AD1  
                                   __ptext24 0714                                     __ptext16 2751  
                                   __ptext41 1C82                                     __ptext33 1C9B  
                                   __ptext25 07CF                                     __ptext17 0F70  
                                   __ptext50 1755                                     __ptext42 1EAB  
                                   __ptext34 1AA5                                     __ptext26 1B3C  
                                   __ptext18 18EE                                     __ptext51 1248  
                                   __ptext43 0A27                                     __ptext35 1F4A  
                                   __ptext27 17ED                                     __ptext19 1F2D  
                                   __ptext60 137A                                     __ptext52 1355  
                                   __ptext44 05F2                                     __ptext36 1B7B  
                                   __ptext28 185B                                     __ptext61 0111  
                                   __ptext53 0FFB                                     __ptext45 17D4  
                                   __ptext37 1F0C                                     __ptext29 19ED  
                                   __ptext70 1405                                     __ptext62 04F0  
                                   __ptext54 19B6                                     __ptext46 06B6  
                                   __ptext38 1EDC                                     __ptext71 2761  
                                   __ptext63 0F5B                                     __ptext55 192F  
                                   __ptext47 0FFC                                     __ptext39 1F27  
                                   __ptext80 18E3                                     __ptext72 1414  
                                   __ptext64 27BF                                     __ptext56 1969  
                                   __ptext48 17BB                                     __ptext73 09F5  
                                   __ptext65 04CB                                     __ptext57 0A0E  
                                   __ptext49 19C7                                     __ptext82 2774  
                                   __ptext74 09AF                                     __ptext66 1731  
                                   __ptext58 199E                                     __ptext83 074D  
                                   __ptext75 09C9                                     __ptext67 095B  
                                   __ptext59 1194                                     __ptext84 0737  
                                   __ptext76 139D                                     __ptext68 09DA  
                                   __ptext85 0762                                     __ptext77 13E0  
                                   __ptext69 0993                                     __ptext86 079C  
                                   __ptext78 1341                                     __ptext87 078D  
                                   __ptext79 1370                                     __ptext88 07FB  
                               _SSP1CON1bits 0215                                _AddConnection 05F2  
                         ??_MiMAC_SetChannel 0031                            ?_MiMAC_SendPacket 0046  
            __size_of_DemoOutput_UnicastFail 0010                                     _high_isr 0004  
                           __size_of_sprintf 03BA                              DumpConnection@i 0036  
                            DumpConnection@j 0035                       __size_of_isSameAddress 0019  
                         ??_MiMAC_SendPacket 004F                             Initialize_Demo@i 00C5  
                         _DemoOutput_Channel 192F                  __end_ofi1_PHYGetLongRAMAddr 078D  
                     ??_UserInterruptHandler 0070                                __size_of_main 0013  
                           ?_freezer_feature 0070                          ?_DemoOutput_Channel 005C  
                                 _LCDDisplay 137A                                     _temp_bit 00DF  
                                 _LCDInitSPI 17FA                        run_p2p_demo@select_ed 015D  
                                   int$flags 007E                           LCDTRXCount@rxCount 0057  
                MiApp_EstablishConnection@t1 0156                  MiApp_EstablishConnection@t2 015B  
                         LCDTRXCount@txCount 0058                  __size_of_CONSOLE_Initialize 000B  
                                 _LCD_Update 095B                   __size_of_PHYSetLongRAMAddr 0031  
                 MiMAC_SendPacket@MACPayload 004D                        run_p2p_demo@update_ed 015B  
                                 _INTCONbits 000B                               AddConnection@i 0042  
                       ??_DemoOutput_Channel 005D                            __CFG_BOREN$SBODEN 0000  
                               CONSOLE_Put@c 0029                               ?_AddConnection 0070  
                ButtonPressed@tickDifference 0037                                     isdigit@c 002A  
                           _myNetworkAddress 0061                                     memset@p1 002D  
                        LCDInitPortA@preRFIE 002A                __size_ofi1_PHYSetShortRAMAddr 0015  
                                _nvmConnMode 00E2                       Total_Connections@count 002C  
                MiApp_ProtocolInit@initValue 004F                          LCDInitPortB@preRFIE 002A  
                                   intlevel1 0000                            ?_MiApp_SetChannel 0070  
                                  sprintf@ap 004D                                    sprintf@cp 0049  
                                  sprintf@sp 0054                      ?_MiApp_MessageAvailable 0070  
                           ___lwmod@dividend 0032                                 ?_EEPROM_Read 002A  
                         ??_MiApp_SetChannel 003B                            __CFG_CLKOUTEN$OFF 0000  
                           ?_Initialize_Demo 0070                                ?_MiWi_TickGet 0029  
                  DemoOutput_HandleMessage@i 0031                               LCDWritePortA@v 002A  
                             LCDWritePortB@v 002A                           _MiApp_ProtocolInit 1007  
               SendPacket@DestinationAddress 0055                       _DemoOutput_UnicastFail 2751  
                              _MACInitParams 0132                          MiMAC_Init@initValue 0046  
                  __size_of_CONSOLE_PrintDec 0035                    __size_of_CONSOLE_PrintHex 001B  
                             _DumpConnection 1248                               _MRF24J40Status 005E  
                              _isSameAddress 17D4                          ?_MiApp_ProtocolInit 0070  
                     ?_MiApp_BroadcastPacket 0070                 __end_ofi1_PHYGetShortRAMAddr 074D  
                                   sprintf@c 0053                                     sprintf@f 0035  
                      __size_of_run_p2p_demo 0158                                 ?_CONSOLE_Put 0070  
           __size_of_DemoOutput_ChannelError 0011                              ___lwmod@divisor 0030  
 MiApp_EstablishConnection@tmpConnectionMode 0154                              ___lwmod@counter 0034  
                 ?_MiApp_EstablishConnection 00BF                        _DemoOutput_UpdateTxRx 0FD5  
             __end_of_MiApp_MessageAvailable 1B3C                          _MiMAC_DiscardPacket 17BB  
                         _nvmOutFrameCounter 013A                            _nvmCurrentChannel 00E4  
                       ??_MiApp_ProtocolInit 004B                                 ?_LCDTRXCount 0057  
                           EEPROM_Read@count 002B                               ??_MiWi_TickGet 002D  
                            EEPROM_Read@addr 002A                              EEPROM_Read@dest 002C  
                              ?_InitMRF24J40 0070                     MiMAC_SendPacket@IntraPAN 00A8  
               __end_of_MiMAC_ReceivedPacket 0F5B                                  ?_LCDDisplay 0057  
                     __size_of_LCDWritePortA 001A                       __size_of_LCDWritePortB 0019  
                     __end_of_DumpConnection 1341                                  ?_LCDInitSPI 0070  
