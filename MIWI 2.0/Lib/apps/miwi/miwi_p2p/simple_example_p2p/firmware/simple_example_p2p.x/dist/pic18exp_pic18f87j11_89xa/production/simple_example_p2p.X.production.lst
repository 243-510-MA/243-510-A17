

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 22:52:56 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110  0000                     
   111                           	psect	idataBANK0
   112  012ACE                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _AdditionalNodeID
   116  012ACE  01                 	db	1
   117                           
   118                           ;initializer for _chk_sel_status
   119  012ACF  01                 	db	1
   120                           
   121                           ;initializer for _myLongAddress
   122  012AD0  FF                 	db	255
   123  012AD1  11                 	db	17
   124  012AD2  22                 	db	34
   125  012AD3  33                 	db	51
   126  012AD4  44                 	db	68
   127  012AD5  55                 	db	85
   128  012AD6  66                 	db	102
   129  012AD7  11                 	db	17
   130                           
   131                           ;initializer for _ConnMode
   132  012AD8  03                 	db	3
   133                           
   134                           	psect	idataBANK1
   135  012AA4                     __pidataBANK1:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _CharacterArray
   139  012AA4  30                 	db	48
   140  012AA5  31                 	db	49
   141  012AA6  32                 	db	50
   142  012AA7  33                 	db	51
   143  012AA8  34                 	db	52
   144  012AA9  35                 	db	53
   145  012AAA  36                 	db	54
   146  012AAB  37                 	db	55
   147  012AAC  38                 	db	56
   148  012AAD  39                 	db	57
   149  012AAE  41                 	db	65
   150  012AAF  42                 	db	66
   151  012AB0  43                 	db	67
   152  012AB1  44                 	db	68
   153  012AB2  45                 	db	69
   154  012AB3  46                 	db	70
   155                           
   156                           	psect	mediumconst
   157  00FABC                     __pmediumconst:
   158                           	opt stack 0
   159  00FABC  00                 	db	0
   160  00FABD                     _MiWi:
   161                           	opt stack 0
   162  00FABD  20                 	db	32
   163  00FABE  B2                 	db	178
   164  00FABF  20                 	db	32
   165  00FAC0  20                 	db	32
   166  00FAC1  20                 	db	32
   167  00FAC2  B2                 	db	178
   168  00FAC3  20                 	db	32
   169  00FAC4  20                 	db	32
   170  00FAC5  B2                 	db	178
   171  00FAC6  20                 	db	32
   172  00FAC7  B2                 	db	178
   173  00FAC8  20                 	db	32
   174  00FAC9  20                 	db	32
   175  00FACA  20                 	db	32
   176  00FACB  20                 	db	32
   177  00FACC  20                 	db	32
   178  00FACD  B2                 	db	178
   179  00FACE  20                 	db	32
   180  00FACF  B2                 	db	178
   181  00FAD0  0D                 	db	13
   182  00FAD1  0A                 	db	10
   183  00FAD2  B2                 	db	178
   184  00FAD3  20                 	db	32
   185  00FAD4  B2                 	db	178
   186  00FAD5  20                 	db	32
   187  00FAD6  B2                 	db	178
   188  00FAD7  20                 	db	32
   189  00FAD8  B2                 	db	178
   190  00FAD9  20                 	db	32
   191  00FADA  20                 	db	32
   192  00FADB  20                 	db	32
   193  00FADC  B2                 	db	178
   194  00FADD  20                 	db	32
   195  00FADE  20                 	db	32
   196  00FADF  B2                 	db	178
   197  00FAE0  20                 	db	32
   198  00FAE1  20                 	db	32
   199  00FAE2  B2                 	db	178
   200  00FAE3  20                 	db	32
   201  00FAE4  20                 	db	32
   202  00FAE5  0D                 	db	13
   203  00FAE6  0A                 	db	10
   204  00FAE7  B2                 	db	178
   205  00FAE8  20                 	db	32
   206  00FAE9  20                 	db	32
   207  00FAEA  B2                 	db	178
   208  00FAEB  20                 	db	32
   209  00FAEC  20                 	db	32
   210  00FAED  B2                 	db	178
   211  00FAEE  20                 	db	32
   212  00FAEF  B2                 	db	178
   213  00FAF0  20                 	db	32
   214  00FAF1  B2                 	db	178
   215  00FAF2  20                 	db	32
   216  00FAF3  20                 	db	32
   217  00FAF4  B2                 	db	178
   218  00FAF5  20                 	db	32
   219  00FAF6  20                 	db	32
   220  00FAF7  B2                 	db	178
   221  00FAF8  20                 	db	32
   222  00FAF9  B2                 	db	178
   223  00FAFA  0D                 	db	13
   224  00FAFB  0A                 	db	10
   225  00FAFC  B2                 	db	178
   226  00FAFD  20                 	db	32
   227  00FAFE  20                 	db	32
   228  00FAFF  B2                 	db	178
   229  00FB00  20                 	db	32
   230  00FB01  20                 	db	32
   231  00FB02  B2                 	db	178
   232  00FB03  20                 	db	32
   233  00FB04  B2                 	db	178
   234  00FB05  20                 	db	32
   235  00FB06  20                 	db	32
   236  00FB07  B2                 	db	178
   237  00FB08  20                 	db	32
   238  00FB09  B2                 	db	178
   239  00FB0A  20                 	db	32
   240  00FB0B  B2                 	db	178
   241  00FB0C  20                 	db	32
   242  00FB0D  20                 	db	32
   243  00FB0E  B2                 	db	178
   244  00FB0F  0D                 	db	13
   245  00FB10  0A                 	db	10
   246  00FB11  B2                 	db	178
   247  00FB12  20                 	db	32
   248  00FB13  20                 	db	32
   249  00FB14  B2                 	db	178
   250  00FB15  20                 	db	32
   251  00FB16  20                 	db	32
   252  00FB17  B2                 	db	178
   253  00FB18  20                 	db	32
   254  00FB19  B2                 	db	178
   255  00FB1A  20                 	db	32
   256  00FB1B  20                 	db	32
   257  00FB1C  20                 	db	32
   258  00FB1D  B2                 	db	178
   259  00FB1E  20                 	db	32
   260  00FB1F  B2                 	db	178
   261  00FB20  20                 	db	32
   262  00FB21  20                 	db	32
   263  00FB22  20                 	db	32
   264  00FB23  B2                 	db	178
   265  00FB24  0D                 	db	13
   266  00FB25  0A                 	db	10
   267  00FB26  20                 	db	32
   268  00FB27  20                 	db	32
   269  00FB28  20                 	db	32
   270  00FB29  20                 	db	32
   271  00FB2A  20                 	db	32
   272  00FB2B  20                 	db	32
   273  00FB2C  20                 	db	32
   274  00FB2D  20                 	db	32
   275  00FB2E  20                 	db	32
   276  00FB2F  20                 	db	32
   277  00FB30  20                 	db	32
   278  00FB31  20                 	db	32
   279  00FB32  20                 	db	32
   280  00FB33  20                 	db	32
   281  00FB34  20                 	db	32
   282  00FB35  20                 	db	32
   283  00FB36  20                 	db	32
   284  00FB37  20                 	db	32
   285  00FB38  20                 	db	32
   286  00FB39  0D                 	db	13
   287  00FB3A  0A                 	db	10
   288  00FB3B                     __end_of_MiWi:
   289                           	opt stack 0
   290  00FB3B                     _DE:
   291                           	opt stack 0
   292  00FB3B  B2                 	db	178
   293  00FB3C  B2                 	db	178
   294  00FB3D  B2                 	db	178
   295  00FB3E  20                 	db	32
   296  00FB3F  20                 	db	32
   297  00FB40  B2                 	db	178
   298  00FB41  B2                 	db	178
   299  00FB42  B2                 	db	178
   300  00FB43  B2                 	db	178
   301  00FB44  0D                 	db	13
   302  00FB45  0A                 	db	10
   303  00FB46  B2                 	db	178
   304  00FB47  20                 	db	32
   305  00FB48  20                 	db	32
   306  00FB49  B2                 	db	178
   307  00FB4A  20                 	db	32
   308  00FB4B  B2                 	db	178
   309  00FB4C  20                 	db	32
   310  00FB4D  20                 	db	32
   311  00FB4E  20                 	db	32
   312  00FB4F  0D                 	db	13
   313  00FB50  0A                 	db	10
   314  00FB51  B2                 	db	178
   315  00FB52  20                 	db	32
   316  00FB53  20                 	db	32
   317  00FB54  B2                 	db	178
   318  00FB55  20                 	db	32
   319  00FB56  B2                 	db	178
   320  00FB57  B2                 	db	178
   321  00FB58  B2                 	db	178
   322  00FB59  B2                 	db	178
   323  00FB5A  0D                 	db	13
   324  00FB5B  0A                 	db	10
   325  00FB5C  B2                 	db	178
   326  00FB5D  20                 	db	32
   327  00FB5E  20                 	db	32
   328  00FB5F  B2                 	db	178
   329  00FB60  20                 	db	32
   330  00FB61  B2                 	db	178
   331  00FB62  20                 	db	32
   332  00FB63  20                 	db	32
   333  00FB64  20                 	db	32
   334  00FB65  0D                 	db	13
   335  00FB66  0A                 	db	10
   336  00FB67  B2                 	db	178
   337  00FB68  B2                 	db	178
   338  00FB69  B2                 	db	178
   339  00FB6A  20                 	db	32
   340  00FB6B  20                 	db	32
   341  00FB6C  B2                 	db	178
   342  00FB6D  B2                 	db	178
   343  00FB6E  B2                 	db	178
   344  00FB6F  B2                 	db	178
   345  00FB70  0D                 	db	13
   346  00FB71  0A                 	db	10
   347  00FB72  20                 	db	32
   348  00FB73  20                 	db	32
   349  00FB74  20                 	db	32
   350  00FB75  20                 	db	32
   351  00FB76  20                 	db	32
   352  00FB77  20                 	db	32
   353  00FB78  20                 	db	32
   354  00FB79  20                 	db	32
   355  00FB7A  20                 	db	32
   356  00FB7B  0D                 	db	13
   357  00FB7C  0A                 	db	10
   358  00FB7D                     __end_of_DE:
   359                           	opt stack 0
   360  00FB7D                     _InitConfigRegs:
   361                           	opt stack 0
   362  00FB7D  002E               	dw	46
   363  00FB7F  0284               	dw	644
   364  00FB81  0409               	dw	1033
   365  00FB83  0609               	dw	1545
   366  00FB85  080C               	dw	2060
   367  00FB87  0AC1               	dw	2753
   368  00FB89  0C77               	dw	3191
   369  00FB8B  0E64               	dw	3684
   370  00FB8D  1032               	dw	4146
   371  00FB8F  1200               	dw	4608
   372  00FB91  1400               	dw	5120
   373  00FB93  1600               	dw	5632
   374  00FB95  1838               	dw	6200
   375  00FB97  1AC8               	dw	6856
   376  00FB99  1C0D               	dw	7181
   377  00FB9B  1E00               	dw	7680
   378  00FB9D  2072               	dw	8306
   379  00FB9F  2238               	dw	8760
   380  00FBA1  2438               	dw	9272
   381  00FBA3  2607               	dw	9735
   382  00FBA5  2800               	dw	10240
   383  00FBA7  2A00               	dw	10752
   384  00FBA9  2C69               	dw	11369
   385  00FBAB  2E81               	dw	11905
   386  00FBAD  307E               	dw	12414
   387  00FBAF  3296               	dw	12950
   388  00FBB1  34F8               	dw	13560
   389  00FBB3  3688               	dw	13960
   390  00FBB5  3840               	dw	14400
   391  00FBB7  3A00               	dw	14848
   392  00FBB9  3CE8               	dw	15592
   393  00FBBB  3E00               	dw	15872
   394  00FBBD                     __end_of_InitConfigRegs:
   395                           	opt stack 0
   396  00FBBD                     _PVALUE:
   397                           	opt stack 0
   398  00FBBD  54                 	db	84
   399  00FBBE  54                 	db	84
   400  00FBBF  54                 	db	84
   401  00FBC0  54                 	db	84
   402  00FBC1  54                 	db	84
   403  00FBC2  54                 	db	84
   404  00FBC3  54                 	db	84
   405  00FBC4  54                 	db	84
   406  00FBC5  54                 	db	84
   407  00FBC6  54                 	db	84
   408  00FBC7  54                 	db	84
   409  00FBC8  54                 	db	84
   410  00FBC9  54                 	db	84
   411  00FBCA  54                 	db	84
   412  00FBCB  55                 	db	85
   413  00FBCC  55                 	db	85
   414  00FBCD  55                 	db	85
   415  00FBCE  55                 	db	85
   416  00FBCF  55                 	db	85
   417  00FBD0  55                 	db	85
   418  00FBD1  55                 	db	85
   419  00FBD2  55                 	db	85
   420  00FBD3  55                 	db	85
   421  00FBD4  55                 	db	85
   422  00FBD5  55                 	db	85
   423  00FBD6  55                 	db	85
   424  00FBD7  55                 	db	85
   425  00FBD8  55                 	db	85
   426  00FBD9  55                 	db	85
   427  00FBDA  55                 	db	85
   428  00FBDB  55                 	db	85
   429  00FBDC  55                 	db	85
   430  00FBDD                     __end_of_PVALUE:
   431                           	opt stack 0
   432  00FBDD                     _SVALUE:
   433                           	opt stack 0
   434  00FBDD  2D                 	db	45
   435  00FBDE  30                 	db	48
   436  00FBDF  33                 	db	51
   437  00FBE0  35                 	db	53
   438  00FBE1  38                 	db	56
   439  00FBE2  3B                 	db	59
   440  00FBE3  3E                 	db	62
   441  00FBE4  41                 	db	65
   442  00FBE5  43                 	db	67
   443  00FBE6  46                 	db	70
   444  00FBE7  49                 	db	73
   445  00FBE8  4C                 	db	76
   446  00FBE9  4F                 	db	79
   447  00FBEA  51                 	db	81
   448  00FBEB  09                 	db	9
   449  00FBEC  0C                 	db	12
   450  00FBED  0F                 	db	15
   451  00FBEE  12                 	db	18
   452  00FBEF  15                 	db	21
   453  00FBF0  17                 	db	23
   454  00FBF1  1A                 	db	26
   455  00FBF2  1D                 	db	29
   456  00FBF3  20                 	db	32
   457  00FBF4  23                 	db	35
   458  00FBF5  25                 	db	37
   459  00FBF6  28                 	db	40
   460  00FBF7  2B                 	db	43
   461  00FBF8  2E                 	db	46
   462  00FBF9  31                 	db	49
   463  00FBFA  33                 	db	51
   464  00FBFB  36                 	db	54
   465  00FBFC  39                 	db	57
   466  00FBFD                     __end_of_SVALUE:
   467                           	opt stack 0
   468  00FBFD                     _octpowers:
   469                           	opt stack 0
   470  00FBFD  0001               	dw	1
   471  00FBFF  0008               	dw	8
   472  00FC01  0040               	dw	64
   473  00FC03  0200               	dw	512
   474  00FC05  1000               	dw	4096
   475  00FC07  8000               	dw	32768
   476  00FC09                     __end_of_octpowers:
   477                           	opt stack 0
   478  00FC09                     _dpowers:
   479                           	opt stack 0
   480  00FC09  0001               	dw	1
   481  00FC0B  000A               	dw	10
   482  00FC0D  0064               	dw	100
   483  00FC0F  03E8               	dw	1000
   484  00FC11  2710               	dw	10000
   485  00FC13                     __end_of_dpowers:
   486                           	opt stack 0
   487  00FC13                     _hexpowers:
   488                           	opt stack 0
   489  00FC13  0001               	dw	1
   490  00FC15  0010               	dw	16
   491  00FC17  0100               	dw	256
   492  00FC19  1000               	dw	4096
   493  00FC1B                     __end_of_hexpowers:
   494                           	opt stack 0
   495  0000                     _ANCON0	set	4033
   496  0000                     _ANCON1	set	4034
   497  0000                     _INTCON2bits	set	4081
   498  0000                     _INTCON3bits	set	4080
   499  0000                     _INTCONbits	set	4082
   500  0000                     _LATA	set	3977
   501  0000                     _LATAbits	set	3977
   502  0000                     _LATB	set	3978
   503  0000                     _LATC	set	3979
   504  0000                     _LATCbits	set	3979
   505  0000                     _LATD	set	3980
   506  0000                     _LATDbits	set	3980
   507  0000                     _LATEbits	set	3981
   508  0000                     _LATFbits	set	3982
   509  0000                     _OSCCON	set	4051
   510  0000                     _PIE1bits	set	3997
   511  0000                     _PIR1bits	set	3998
   512  0000                     _PORTAbits	set	3968
   513  0000                     _PORTBbits	set	3969
   514  0000                     _RCSTA	set	4012
   515  0000                     _SPBRG	set	4016
   516  0000                     _SSP1BUF	set	4041
   517  0000                     _SSP1CON1	set	4038
   518  0000                     _SSP1CON1bits	set	4038
   519  0000                     _SSP1STAT	set	4039
   520  0000                     _T1CON	set	4045
   521  0000                     _T1CONbits	set	4045
   522  0000                     _TMR0L	set	4054
   523  0000                     _TMR1H	set	4047
   524  0000                     _TMR1L	set	4046
   525  0000                     _TRISA	set	3986
   526  0000                     _TRISAbits	set	3986
   527  0000                     _TRISB	set	3987
   528  0000                     _TRISBbits	set	3987
   529  0000                     _TRISC	set	3988
   530  0000                     _TRISCbits	set	3988
   531  0000                     _TRISD	set	3989
   532  0000                     _TRISDbits	set	3989
   533  0000                     _TRISEbits	set	3990
   534  0000                     _TRISFbits	set	3991
   535  0000                     _TXREG	set	4014
   536  0000                     _TXSTA	set	4013
   537  0000                     _TXSTAbits	set	4013
   538  0000                     _WDTCONbits	set	4032
   539  00FC1B                     STR_23:
   540  00FC1B  0D                 	db	13
   541  00FC1C  0A                 	db	10
   542  00FC1D  20                 	db	32
   543  00FC1E  20                 	db	32
   544  00FC1F  20                 	db	32
   545  00FC20  20                 	db	32
   546  00FC21  20                 	db	32
   547  00FC22  20                 	db	32
   548  00FC23  20                 	db	32
   549  00FC24  20                 	db	32
   550  00FC25  20                 	db	32
   551  00FC26  20                 	db	32
   552  00FC27  20                 	db	32
   553  00FC28  20                 	db	32
   554  00FC29  20                 	db	32
   555  00FC2A  20                 	db	32
   556  00FC2B  20                 	db	32
   557  00FC2C  20                 	db	32
   558  00FC2D  20                 	db	32
   559  00FC2E  20                 	db	32
   560  00FC2F  20                 	db	32
   561  00FC30  20                 	db	32
   562  00FC31  20                 	db	32
   563  00FC32  32                 	db	50	;'2'
   564  00FC33  20                 	db	32
   565  00FC34  74                 	db	116	;'t'
   566  00FC35  6F                 	db	111	;'o'
   567  00FC36  20                 	db	32
   568  00FC37  75                 	db	117	;'u'
   569  00FC38  6E                 	db	110	;'n'
   570  00FC39  69                 	db	105	;'i'
   571  00FC3A  63                 	db	99	;'c'
   572  00FC3B  61                 	db	97	;'a'
   573  00FC3C  73                 	db	115	;'s'
   574  00FC3D  74                 	db	116	;'t'
   575  00FC3E  20                 	db	32
   576  00FC3F  65                 	db	101	;'e'
   577  00FC40  6E                 	db	110	;'n'
   578  00FC41  63                 	db	99	;'c'
   579  00FC42  72                 	db	114	;'r'
   580  00FC43  79                 	db	121	;'y'
   581  00FC44  70                 	db	112	;'p'
   582  00FC45  74                 	db	116	;'t'
   583  00FC46  65                 	db	101	;'e'
   584  00FC47  64                 	db	100	;'d'
   585  00FC48  20                 	db	32
   586  00FC49  6D                 	db	109	;'m'
   587  00FC4A  65                 	db	101	;'e'
   588  00FC4B  73                 	db	115	;'s'
   589  00FC4C  73                 	db	115	;'s'
   590  00FC4D  61                 	db	97	;'a'
   591  00FC4E  67                 	db	103	;'g'
   592  00FC4F  65                 	db	101	;'e'
   593  00FC50  2E                 	db	46
   594  00FC51  20                 	db	32
   595  00FC52  4C                 	db	76	;'L'
   596  00FC53  45                 	db	69	;'E'
   597  00FC54  44                 	db	68	;'D'
   598  00FC55  20                 	db	32
   599  00FC56  32                 	db	50	;'2'
   600  00FC57  20                 	db	32
   601  00FC58  77                 	db	119	;'w'
   602  00FC59  69                 	db	105	;'i'
   603  00FC5A  6C                 	db	108	;'l'
   604  00FC5B  6C                 	db	108	;'l'
   605  00FC5C  00                 	db	0
   606  00FC5D                     STR_22:
   607  00FC5D  0D                 	db	13
   608  00FC5E  0A                 	db	10
   609  00FC5F  20                 	db	32
   610  00FC60  20                 	db	32
   611  00FC61  20                 	db	32
   612  00FC62  20                 	db	32
   613  00FC63  20                 	db	32
   614  00FC64  20                 	db	32
   615  00FC65  20                 	db	32
   616  00FC66  20                 	db	32
   617  00FC67  20                 	db	32
   618  00FC68  20                 	db	32
   619  00FC69  20                 	db	32
   620  00FC6A  20                 	db	32
   621  00FC6B  20                 	db	32
   622  00FC6C  20                 	db	32
   623  00FC6D  20                 	db	32
   624  00FC6E  20                 	db	32
   625  00FC6F  20                 	db	32
   626  00FC70  20                 	db	32
   627  00FC71  20                 	db	32
   628  00FC72  20                 	db	32
   629  00FC73  20                 	db	32
   630  00FC74  42                 	db	66	;'B'
   631  00FC75  75                 	db	117	;'u'
   632  00FC76  74                 	db	116	;'t'
   633  00FC77  74                 	db	116	;'t'
   634  00FC78  6F                 	db	111	;'o'
   635  00FC79  6E                 	db	110	;'n'
   636  00FC7A  20                 	db	32
   637  00FC7B  31                 	db	49	;'1'
   638  00FC7C  20                 	db	32
   639  00FC7D  74                 	db	116	;'t'
   640  00FC7E  6F                 	db	111	;'o'
   641  00FC7F  20                 	db	32
   642  00FC80  62                 	db	98	;'b'
   643  00FC81  72                 	db	114	;'r'
   644  00FC82  6F                 	db	111	;'o'
   645  00FC83  61                 	db	97	;'a'
   646  00FC84  64                 	db	100	;'d'
   647  00FC85  63                 	db	99	;'c'
   648  00FC86  61                 	db	97	;'a'
   649  00FC87  73                 	db	115	;'s'
   650  00FC88  74                 	db	116	;'t'
   651  00FC89  20                 	db	32
   652  00FC8A  6D                 	db	109	;'m'
   653  00FC8B  65                 	db	101	;'e'
   654  00FC8C  73                 	db	115	;'s'
   655  00FC8D  73                 	db	115	;'s'
   656  00FC8E  61                 	db	97	;'a'
   657  00FC8F  67                 	db	103	;'g'
   658  00FC90  65                 	db	101	;'e'
   659  00FC91  2E                 	db	46
   660  00FC92  20                 	db	32
   661  00FC93  50                 	db	80	;'P'
   662  00FC94  75                 	db	117	;'u'
   663  00FC95  73                 	db	115	;'s'
   664  00FC96  68                 	db	104	;'h'
   665  00FC97  20                 	db	32
   666  00FC98  42                 	db	66	;'B'
   667  00FC99  75                 	db	117	;'u'
   668  00FC9A  74                 	db	116	;'t'
   669  00FC9B  74                 	db	116	;'t'
   670  00FC9C  6F                 	db	111	;'o'
   671  00FC9D  6E                 	db	110	;'n'
   672  00FC9E  00                 	db	0
   673  00FC9F                     STR_20:
   674  00FC9F  0D                 	db	13
   675  00FCA0  0A                 	db	10
   676  00FCA1  20                 	db	32
   677  00FCA2  20                 	db	32
   678  00FCA3  20                 	db	32
   679  00FCA4  20                 	db	32
   680  00FCA5  20                 	db	32
   681  00FCA6  20                 	db	32
   682  00FCA7  20                 	db	32
   683  00FCA8  20                 	db	32
   684  00FCA9  20                 	db	32
   685  00FCAA  20                 	db	32
   686  00FCAB  20                 	db	32
   687  00FCAC  20                 	db	32
   688  00FCAD  20                 	db	32
   689  00FCAE  20                 	db	32
   690  00FCAF  20                 	db	32
   691  00FCB0  20                 	db	32
   692  00FCB1  20                 	db	32
   693  00FCB2  20                 	db	32
   694  00FCB3  20                 	db	32
   695  00FCB4  20                 	db	32
   696  00FCB5  20                 	db	32
   697  00FCB6  50                 	db	80	;'P'
   698  00FCB7  6F                 	db	111	;'o'
   699  00FCB8  77                 	db	119	;'w'
   700  00FCB9  65                 	db	101	;'e'
   701  00FCBA  72                 	db	114	;'r'
   702  00FCBB  20                 	db	32
   703  00FCBC  6F                 	db	111	;'o'
   704  00FCBD  6E                 	db	110	;'n'
   705  00FCBE  20                 	db	32
   706  00FCBF  74                 	db	116	;'t'
   707  00FCC0  68                 	db	104	;'h'
   708  00FCC1  65                 	db	101	;'e'
   709  00FCC2  20                 	db	32
   710  00FCC3  62                 	db	98	;'b'
   711  00FCC4  6F                 	db	111	;'o'
   712  00FCC5  61                 	db	97	;'a'
   713  00FCC6  72                 	db	114	;'r'
   714  00FCC7  64                 	db	100	;'d'
   715  00FCC8  20                 	db	32
   716  00FCC9  75                 	db	117	;'u'
   717  00FCCA  6E                 	db	110	;'n'
   718  00FCCB  74                 	db	116	;'t'
   719  00FCCC  69                 	db	105	;'i'
   720  00FCCD  6C                 	db	108	;'l'
   721  00FCCE  20                 	db	32
   722  00FCCF  4C                 	db	76	;'L'
   723  00FCD0  45                 	db	69	;'E'
   724  00FCD1  44                 	db	68	;'D'
   725  00FCD2  20                 	db	32
   726  00FCD3  31                 	db	49	;'1'
   727  00FCD4  20                 	db	32
   728  00FCD5  6C                 	db	108	;'l'
   729  00FCD6  69                 	db	105	;'i'
   730  00FCD7  67                 	db	103	;'g'
   731  00FCD8  68                 	db	104	;'h'
   732  00FCD9  74                 	db	116	;'t'
   733  00FCDA  73                 	db	115	;'s'
   734  00FCDB  20                 	db	32
   735  00FCDC  75                 	db	117	;'u'
   736  00FCDD  70                 	db	112	;'p'
   737  00FCDE  00                 	db	0
   738  00FCDF                     STR_21:
   739  00FCDF  0D                 	db	13
   740  00FCE0  0A                 	db	10
   741  00FCE1  20                 	db	32
   742  00FCE2  20                 	db	32
   743  00FCE3  20                 	db	32
   744  00FCE4  20                 	db	32
   745  00FCE5  20                 	db	32
   746  00FCE6  20                 	db	32
   747  00FCE7  20                 	db	32
   748  00FCE8  20                 	db	32
   749  00FCE9  20                 	db	32
   750  00FCEA  20                 	db	32
   751  00FCEB  20                 	db	32
   752  00FCEC  20                 	db	32
   753  00FCED  20                 	db	32
   754  00FCEE  20                 	db	32
   755  00FCEF  20                 	db	32
   756  00FCF0  20                 	db	32
   757  00FCF1  20                 	db	32
   758  00FCF2  20                 	db	32
   759  00FCF3  20                 	db	32
   760  00FCF4  20                 	db	32
   761  00FCF5  20                 	db	32
   762  00FCF6  74                 	db	116	;'t'
   763  00FCF7  6F                 	db	111	;'o'
   764  00FCF8  20                 	db	32
   765  00FCF9  69                 	db	105	;'i'
   766  00FCFA  6E                 	db	110	;'n'
   767  00FCFB  64                 	db	100	;'d'
   768  00FCFC  69                 	db	105	;'i'
   769  00FCFD  63                 	db	99	;'c'
   770  00FCFE  61                 	db	97	;'a'
   771  00FCFF  74                 	db	116	;'t'
   772  00FD00  65                 	db	101	;'e'
   773  00FD01  20                 	db	32
   774  00FD02  63                 	db	99	;'c'
   775  00FD03  6F                 	db	111	;'o'
   776  00FD04  6E                 	db	110	;'n'
   777  00FD05  6E                 	db	110	;'n'
   778  00FD06  65                 	db	101	;'e'
   779  00FD07  63                 	db	99	;'c'
   780  00FD08  74                 	db	116	;'t'
   781  00FD09  69                 	db	105	;'i'
   782  00FD0A  6E                 	db	110	;'n'
   783  00FD0B  67                 	db	103	;'g'
   784  00FD0C  20                 	db	32
   785  00FD0D  77                 	db	119	;'w'
   786  00FD0E  69                 	db	105	;'i'
   787  00FD0F  74                 	db	116	;'t'
   788  00FD10  68                 	db	104	;'h'
   789  00FD11  20                 	db	32
   790  00FD12  70                 	db	112	;'p'
   791  00FD13  65                 	db	101	;'e'
   792  00FD14  65                 	db	101	;'e'
   793  00FD15  72                 	db	114	;'r'
   794  00FD16  2E                 	db	46
   795  00FD17  20                 	db	32
   796  00FD18  50                 	db	80	;'P'
   797  00FD19  75                 	db	117	;'u'
   798  00FD1A  73                 	db	115	;'s'
   799  00FD1B  68                 	db	104	;'h'
   800  00FD1C  00                 	db	0
   801  00FD1D                     STR_24:
   802  00FD1D  0D                 	db	13
   803  00FD1E  0A                 	db	10
   804  00FD1F  20                 	db	32
   805  00FD20  20                 	db	32
   806  00FD21  20                 	db	32
   807  00FD22  20                 	db	32
   808  00FD23  20                 	db	32
   809  00FD24  20                 	db	32
   810  00FD25  20                 	db	32
   811  00FD26  20                 	db	32
   812  00FD27  20                 	db	32
   813  00FD28  20                 	db	32
   814  00FD29  20                 	db	32
   815  00FD2A  20                 	db	32
   816  00FD2B  20                 	db	32
   817  00FD2C  20                 	db	32
   818  00FD2D  20                 	db	32
   819  00FD2E  20                 	db	32
   820  00FD2F  20                 	db	32
   821  00FD30  20                 	db	32
   822  00FD31  20                 	db	32
   823  00FD32  20                 	db	32
   824  00FD33  20                 	db	32
   825  00FD34  62                 	db	98	;'b'
   826  00FD35  65                 	db	101	;'e'
   827  00FD36  20                 	db	32
   828  00FD37  74                 	db	116	;'t'
   829  00FD38  6F                 	db	111	;'o'
   830  00FD39  67                 	db	103	;'g'
   831  00FD3A  67                 	db	103	;'g'
   832  00FD3B  6C                 	db	108	;'l'
   833  00FD3C  65                 	db	101	;'e'
   834  00FD3D  64                 	db	100	;'d'
   835  00FD3E  20                 	db	32
   836  00FD3F  75                 	db	117	;'u'
   837  00FD40  70                 	db	112	;'p'
   838  00FD41  6F                 	db	111	;'o'
   839  00FD42  6E                 	db	110	;'n'
   840  00FD43  20                 	db	32
   841  00FD44  72                 	db	114	;'r'
   842  00FD45  65                 	db	101	;'e'
   843  00FD46  63                 	db	99	;'c'
   844  00FD47  65                 	db	101	;'e'
   845  00FD48  69                 	db	105	;'i'
   846  00FD49  76                 	db	118	;'v'
   847  00FD4A  69                 	db	105	;'i'
   848  00FD4B  6E                 	db	110	;'n'
   849  00FD4C  67                 	db	103	;'g'
   850  00FD4D  20                 	db	32
   851  00FD4E  6D                 	db	109	;'m'
   852  00FD4F  65                 	db	101	;'e'
   853  00FD50  73                 	db	115	;'s'
   854  00FD51  73                 	db	115	;'s'
   855  00FD52  61                 	db	97	;'a'
   856  00FD53  67                 	db	103	;'g'
   857  00FD54  65                 	db	101	;'e'
   858  00FD55  73                 	db	115	;'s'
   859  00FD56  2E                 	db	46
   860  00FD57  20                 	db	32
   861  00FD58  00                 	db	0
   862  00FD59                     STR_17:
   863  00FD59  0D                 	db	13
   864  00FD5A  0A                 	db	10
   865  00FD5B  53                 	db	83	;'S'
   866  00FD5C  74                 	db	116	;'t'
   867  00FD5D  61                 	db	97	;'a'
   868  00FD5E  72                 	db	114	;'r'
   869  00FD5F  74                 	db	116	;'t'
   870  00FD60  69                 	db	105	;'i'
   871  00FD61  6E                 	db	110	;'n'
   872  00FD62  67                 	db	103	;'g'
   873  00FD63  20                 	db	32
   874  00FD64  4E                 	db	78	;'N'
   875  00FD65  6F                 	db	111	;'o'
   876  00FD66  64                 	db	100	;'d'
   877  00FD67  65                 	db	101	;'e'
   878  00FD68  20                 	db	32
   879  00FD69  31                 	db	49	;'1'
   880  00FD6A  20                 	db	32
   881  00FD6B  6F                 	db	111	;'o'
   882  00FD6C  66                 	db	102	;'f'
   883  00FD6D  20                 	db	32
   884  00FD6E  53                 	db	83	;'S'
   885  00FD6F  69                 	db	105	;'i'
   886  00FD70  6D                 	db	109	;'m'
   887  00FD71  70                 	db	112	;'p'
   888  00FD72  6C                 	db	108	;'l'
   889  00FD73  65                 	db	101	;'e'
   890  00FD74  20                 	db	32
   891  00FD75  44                 	db	68	;'D'
   892  00FD76  65                 	db	101	;'e'
   893  00FD77  6D                 	db	109	;'m'
   894  00FD78  6F                 	db	111	;'o'
   895  00FD79  20                 	db	32
   896  00FD7A  66                 	db	102	;'f'
   897  00FD7B  6F                 	db	111	;'o'
   898  00FD7C  72                 	db	114	;'r'
   899  00FD7D  20                 	db	32
   900  00FD7E  4D                 	db	77	;'M'
   901  00FD7F  69                 	db	105	;'i'
   902  00FD80  57                 	db	87	;'W'
   903  00FD81  69                 	db	105	;'i'
   904  00FD82  28                 	db	40
   905  00FD83  54                 	db	84	;'T'
   906  00FD84  4D                 	db	77	;'M'
   907  00FD85  29                 	db	41
   908  00FD86  20                 	db	32
   909  00FD87  50                 	db	80	;'P'
   910  00FD88  32                 	db	50	;'2'
   911  00FD89  50                 	db	80	;'P'
   912  00FD8A  20                 	db	32
   913  00FD8B  53                 	db	83	;'S'
   914  00FD8C  74                 	db	116	;'t'
   915  00FD8D  61                 	db	97	;'a'
   916  00FD8E  63                 	db	99	;'c'
   917  00FD8F  6B                 	db	107	;'k'
   918  00FD90  20                 	db	32
   919  00FD91  2E                 	db	46
   920  00FD92  2E                 	db	46
   921  00FD93  2E                 	db	46
   922  00FD94  00                 	db	0
   923  00FD95                     STR_9:
   924  00FD95  0D                 	db	13
   925  00FD96  0A                 	db	10
   926  00FD97  0D                 	db	13
   927  00FD98  0A                 	db	10
   928  00FD99  43                 	db	67	;'C'
   929  00FD9A  6F                 	db	111	;'o'
   930  00FD9B  6E                 	db	110	;'n'
   931  00FD9C  6E                 	db	110	;'n'
   932  00FD9D  65                 	db	101	;'e'
   933  00FD9E  63                 	db	99	;'c'
   934  00FD9F  74                 	db	116	;'t'
   935  00FDA0  69                 	db	105	;'i'
   936  00FDA1  6F                 	db	111	;'o'
   937  00FDA2  6E                 	db	110	;'n'
   938  00FDA3  20                 	db	32
   939  00FDA4  20                 	db	32
   940  00FDA5  20                 	db	32
   941  00FDA6  20                 	db	32
   942  00FDA7  20                 	db	32
   943  00FDA8  50                 	db	80	;'P'
   944  00FDA9  65                 	db	101	;'e'
   945  00FDAA  65                 	db	101	;'e'
   946  00FDAB  72                 	db	114	;'r'
   947  00FDAC  4C                 	db	76	;'L'
   948  00FDAD  6F                 	db	111	;'o'
   949  00FDAE  6E                 	db	110	;'n'
   950  00FDAF  67                 	db	103	;'g'
   951  00FDB0  41                 	db	65	;'A'
   952  00FDB1  64                 	db	100	;'d'
   953  00FDB2  64                 	db	100	;'d'
   954  00FDB3  72                 	db	114	;'r'
   955  00FDB4  65                 	db	101	;'e'
   956  00FDB5  73                 	db	115	;'s'
   957  00FDB6  73                 	db	115	;'s'
   958  00FDB7  20                 	db	32
   959  00FDB8  20                 	db	32
   960  00FDB9  20                 	db	32
   961  00FDBA  20                 	db	32
   962  00FDBB  20                 	db	32
   963  00FDBC  50                 	db	80	;'P'
   964  00FDBD  65                 	db	101	;'e'
   965  00FDBE  65                 	db	101	;'e'
   966  00FDBF  72                 	db	114	;'r'
   967  00FDC0  49                 	db	73	;'I'
   968  00FDC1  6E                 	db	110	;'n'
   969  00FDC2  66                 	db	102	;'f'
   970  00FDC3  6F                 	db	111	;'o'
   971  00FDC4  0D                 	db	13
   972  00FDC5  0A                 	db	10
   973  00FDC6  00                 	db	0
   974  00FDC7                     STR_38:
   975  00FDC7  20                 	db	32
   976  00FDC8  69                 	db	105	;'i'
   977  00FDC9  73                 	db	115	;'s'
   978  00FDCA  20                 	db	32
   979  00FDCB  6E                 	db	110	;'n'
   980  00FDCC  6F                 	db	111	;'o'
   981  00FDCD  74                 	db	116	;'t'
   982  00FDCE  20                 	db	32
   983  00FDCF  73                 	db	115	;'s'
   984  00FDD0  75                 	db	117	;'u'
   985  00FDD1  70                 	db	112	;'p'
   986  00FDD2  70                 	db	112	;'p'
   987  00FDD3  6F                 	db	111	;'o'
   988  00FDD4  72                 	db	114	;'r'
   989  00FDD5  74                 	db	116	;'t'
   990  00FDD6  65                 	db	101	;'e'
   991  00FDD7  64                 	db	100	;'d'
   992  00FDD8  20                 	db	32
   993  00FDD9  69                 	db	105	;'i'
   994  00FDDA  6E                 	db	110	;'n'
   995  00FDDB  20                 	db	32
   996  00FDDC  63                 	db	99	;'c'
   997  00FDDD  75                 	db	117	;'u'
   998  00FDDE  72                 	db	114	;'r'
   999  00FDDF  72                 	db	114	;'r'
  1000  00FDE0  65                 	db	101	;'e'
  1001  00FDE1  6E                 	db	110	;'n'
  1002  00FDE2  74                 	db	116	;'t'
  1003  00FDE3  20                 	db	32
  1004  00FDE4  63                 	db	99	;'c'
  1005  00FDE5  6F                 	db	111	;'o'
  1006  00FDE6  6E                 	db	110	;'n'
  1007  00FDE7  66                 	db	102	;'f'
  1008  00FDE8  69                 	db	105	;'i'
  1009  00FDE9  67                 	db	103	;'g'
  1010  00FDEA  75                 	db	117	;'u'
  1011  00FDEB  72                 	db	114	;'r'
  1012  00FDEC  61                 	db	97	;'a'
  1013  00FDED  74                 	db	116	;'t'
  1014  00FDEE  69                 	db	105	;'i'
  1015  00FDEF  6F                 	db	111	;'o'
  1016  00FDF0  6E                 	db	110	;'n'
  1017  00FDF1  2E                 	db	46
  1018  00FDF2  0D                 	db	13
  1019  00FDF3  0A                 	db	10
  1020  00FDF4  00                 	db	0
  1021  00FDF5                     STR_26:
  1022  00FDF5  43                 	db	67	;'C'
  1023  00FDF6  6F                 	db	111	;'o'
  1024  00FDF7  6E                 	db	110	;'n'
  1025  00FDF8  6E                 	db	110	;'n'
  1026  00FDF9  65                 	db	101	;'e'
  1027  00FDFA  63                 	db	99	;'c'
  1028  00FDFB  74                 	db	116	;'t'
  1029  00FDFC  69                 	db	105	;'i'
  1030  00FDFD  6E                 	db	110	;'n'
  1031  00FDFE  67                 	db	103	;'g'
  1032  00FDFF  20                 	db	32
  1033  00FE00  50                 	db	80	;'P'
  1034  00FE01  65                 	db	101	;'e'
  1035  00FE02  65                 	db	101	;'e'
  1036  00FE03  72                 	db	114	;'r'
  1037  00FE04  20                 	db	32
  1038  00FE05  20                 	db	32
  1039  00FE06  6F                 	db	111	;'o'
  1040  00FE07  6E                 	db	110	;'n'
  1041  00FE08  20                 	db	32
  1042  00FE09  43                 	db	67	;'C'
  1043  00FE0A  68                 	db	104	;'h'
  1044  00FE0B  61                 	db	97	;'a'
  1045  00FE0C  6E                 	db	110	;'n'
  1046  00FE0D  6E                 	db	110	;'n'
  1047  00FE0E  65                 	db	101	;'e'
  1048  00FE0F  6C                 	db	108	;'l'
  1049  00FE10  20                 	db	32
  1050  00FE11  25                 	db	37
  1051  00FE12  64                 	db	100	;'d'
  1052  00FE13  20                 	db	32
  1053  00FE14  00                 	db	0
  1054  00FE15                     STR_16:
  1055  00FE15  53                 	db	83	;'S'
  1056  00FE16  69                 	db	105	;'i'
  1057  00FE17  6D                 	db	109	;'m'
  1058  00FE18  70                 	db	112	;'p'
  1059  00FE19  6C                 	db	108	;'l'
  1060  00FE1A  65                 	db	101	;'e'
  1061  00FE1B  20                 	db	32
  1062  00FE1C  50                 	db	80	;'P'
  1063  00FE1D  32                 	db	50	;'2'
  1064  00FE1E  50                 	db	80	;'P'
  1065  00FE1F  20                 	db	32
  1066  00FE20  44                 	db	68	;'D'
  1067  00FE21  65                 	db	101	;'e'
  1068  00FE22  6D                 	db	109	;'m'
  1069  00FE23  6F                 	db	111	;'o'
  1070  00FE24  20                 	db	32
  1071  00FE25  20                 	db	32
  1072  00FE26  4D                 	db	77	;'M'
  1073  00FE27  52                 	db	82	;'R'
  1074  00FE28  46                 	db	70	;'F'
  1075  00FE29  38                 	db	56	;'8'
  1076  00FE2A  39                 	db	57	;'9'
  1077  00FE2B  58                 	db	88	;'X'
  1078  00FE2C  41                 	db	65	;'A'
  1079  00FE2D  20                 	db	32
  1080  00FE2E  4E                 	db	78	;'N'
  1081  00FE2F  6F                 	db	111	;'o'
  1082  00FE30  64                 	db	100	;'d'
  1083  00FE31  65                 	db	101	;'e'
  1084  00FE32  20                 	db	32
  1085  00FE33  00                 	db	0
  1086  00FE34                     STR_18:
  1087  00FE34  0D                 	db	13
  1088  00FE35  0A                 	db	10
  1089  00FE36  20                 	db	32
  1090  00FE37  20                 	db	32
  1091  00FE38  20                 	db	32
  1092  00FE39  20                 	db	32
  1093  00FE3A  20                 	db	32
  1094  00FE3B  52                 	db	82	;'R'
  1095  00FE3C  46                 	db	70	;'F'
  1096  00FE3D  20                 	db	32
  1097  00FE3E  54                 	db	84	;'T'
  1098  00FE3F  72                 	db	114	;'r'
  1099  00FE40  61                 	db	97	;'a'
  1100  00FE41  6E                 	db	110	;'n'
  1101  00FE42  73                 	db	115	;'s'
  1102  00FE43  63                 	db	99	;'c'
  1103  00FE44  65                 	db	101	;'e'
  1104  00FE45  69                 	db	105	;'i'
  1105  00FE46  76                 	db	118	;'v'
  1106  00FE47  65                 	db	101	;'e'
  1107  00FE48  72                 	db	114	;'r'
  1108  00FE49  3A                 	db	58	;':'
  1109  00FE4A  20                 	db	32
  1110  00FE4B  4D                 	db	77	;'M'
  1111  00FE4C  52                 	db	82	;'R'
  1112  00FE4D  46                 	db	70	;'F'
  1113  00FE4E  38                 	db	56	;'8'
  1114  00FE4F  39                 	db	57	;'9'
  1115  00FE50  58                 	db	88	;'X'
  1116  00FE51  41                 	db	65	;'A'
  1117  00FE52  00                 	db	0
  1118  00FE53                     STR_27:
  1119  00FE53  0D                 	db	13
  1120  00FE54  0A                 	db	10
  1121  00FE55  43                 	db	67	;'C'
  1122  00FE56  6F                 	db	111	;'o'
  1123  00FE57  6E                 	db	110	;'n'
  1124  00FE58  6E                 	db	110	;'n'
  1125  00FE59  65                 	db	101	;'e'
  1126  00FE5A  63                 	db	99	;'c'
  1127  00FE5B  74                 	db	116	;'t'
  1128  00FE5C  69                 	db	105	;'i'
  1129  00FE5D  6E                 	db	110	;'n'
  1130  00FE5E  67                 	db	103	;'g'
  1131  00FE5F  20                 	db	32
  1132  00FE60  50                 	db	80	;'P'
  1133  00FE61  65                 	db	101	;'e'
  1134  00FE62  65                 	db	101	;'e'
  1135  00FE63  72                 	db	114	;'r'
  1136  00FE64  20                 	db	32
  1137  00FE65  6F                 	db	111	;'o'
  1138  00FE66  6E                 	db	110	;'n'
  1139  00FE67  20                 	db	32
  1140  00FE68  43                 	db	67	;'C'
  1141  00FE69  68                 	db	104	;'h'
  1142  00FE6A  61                 	db	97	;'a'
  1143  00FE6B  6E                 	db	110	;'n'
  1144  00FE6C  6E                 	db	110	;'n'
  1145  00FE6D  65                 	db	101	;'e'
  1146  00FE6E  6C                 	db	108	;'l'
  1147  00FE6F  20                 	db	32
  1148  00FE70  00                 	db	0
  1149  00FE71                     STR_29:
  1150  00FE71  43                 	db	67	;'C'
  1151  00FE72  6F                 	db	111	;'o'
  1152  00FE73  6E                 	db	110	;'n'
  1153  00FE74  6E                 	db	110	;'n'
  1154  00FE75  65                 	db	101	;'e'
  1155  00FE76  63                 	db	99	;'c'
  1156  00FE77  74                 	db	116	;'t'
  1157  00FE78  65                 	db	101	;'e'
  1158  00FE79  64                 	db	100	;'d'
  1159  00FE7A  20                 	db	32
  1160  00FE7B  50                 	db	80	;'P'
  1161  00FE7C  65                 	db	101	;'e'
  1162  00FE7D  65                 	db	101	;'e'
  1163  00FE7E  72                 	db	114	;'r'
  1164  00FE7F  20                 	db	32
  1165  00FE80  20                 	db	32
  1166  00FE81  6F                 	db	111	;'o'
  1167  00FE82  6E                 	db	110	;'n'
  1168  00FE83  20                 	db	32
  1169  00FE84  43                 	db	67	;'C'
  1170  00FE85  68                 	db	104	;'h'
  1171  00FE86  61                 	db	97	;'a'
  1172  00FE87  6E                 	db	110	;'n'
  1173  00FE88  6E                 	db	110	;'n'
  1174  00FE89  65                 	db	101	;'e'
  1175  00FE8A  6C                 	db	108	;'l'
  1176  00FE8B  20                 	db	32
  1177  00FE8C  25                 	db	37
  1178  00FE8D  64                 	db	100	;'d'
  1179  00FE8E  00                 	db	0
  1180  00FE8F                     STR_30:
  1181  00FE8F  0D                 	db	13
  1182  00FE90  0A                 	db	10
  1183  00FE91  43                 	db	67	;'C'
  1184  00FE92  6F                 	db	111	;'o'
  1185  00FE93  6E                 	db	110	;'n'
  1186  00FE94  6E                 	db	110	;'n'
  1187  00FE95  65                 	db	101	;'e'
  1188  00FE96  63                 	db	99	;'c'
  1189  00FE97  74                 	db	116	;'t'
  1190  00FE98  65                 	db	101	;'e'
  1191  00FE99  64                 	db	100	;'d'
  1192  00FE9A  20                 	db	32
  1193  00FE9B  50                 	db	80	;'P'
  1194  00FE9C  65                 	db	101	;'e'
  1195  00FE9D  65                 	db	101	;'e'
  1196  00FE9E  72                 	db	114	;'r'
  1197  00FE9F  20                 	db	32
  1198  00FEA0  6F                 	db	111	;'o'
  1199  00FEA1  6E                 	db	110	;'n'
  1200  00FEA2  20                 	db	32
  1201  00FEA3  43                 	db	67	;'C'
  1202  00FEA4  68                 	db	104	;'h'
  1203  00FEA5  61                 	db	97	;'a'
  1204  00FEA6  6E                 	db	110	;'n'
  1205  00FEA7  6E                 	db	110	;'n'
  1206  00FEA8  65                 	db	101	;'e'
  1207  00FEA9  6C                 	db	108	;'l'
  1208  00FEAA  20                 	db	32
  1209  00FEAB  00                 	db	0
  1210  00FEAC                     STR_33:
  1211  00FEAC  42                 	db	66	;'B'
  1212  00FEAD  72                 	db	114	;'r'
  1213  00FEAE  6F                 	db	111	;'o'
  1214  00FEAF  61                 	db	97	;'a'
  1215  00FEB0  64                 	db	100	;'d'
  1216  00FEB1  63                 	db	99	;'c'
  1217  00FEB2  61                 	db	97	;'a'
  1218  00FEB3  73                 	db	115	;'s'
  1219  00FEB4  74                 	db	116	;'t'
  1220  00FEB5  20                 	db	32
  1221  00FEB6  50                 	db	80	;'P'
  1222  00FEB7  61                 	db	97	;'a'
  1223  00FEB8  63                 	db	99	;'c'
  1224  00FEB9  6B                 	db	107	;'k'
  1225  00FEBA  65                 	db	101	;'e'
  1226  00FEBB  74                 	db	116	;'t'
  1227  00FEBC  20                 	db	32
  1228  00FEBD  77                 	db	119	;'w'
  1229  00FEBE  69                 	db	105	;'i'
  1230  00FEBF  74                 	db	116	;'t'
  1231  00FEC0  68                 	db	104	;'h'
  1232  00FEC1  20                 	db	32
  1233  00FEC2  52                 	db	82	;'R'
  1234  00FEC3  53                 	db	83	;'S'
  1235  00FEC4  53                 	db	83	;'S'
  1236  00FEC5  49                 	db	73	;'I'
  1237  00FEC6  20                 	db	32
  1238  00FEC7  00                 	db	0
  1239  00FEC8                     STR_34:
  1240  00FEC8  55                 	db	85	;'U'
  1241  00FEC9  6E                 	db	110	;'n'
  1242  00FECA  69                 	db	105	;'i'
  1243  00FECB  63                 	db	99	;'c'
  1244  00FECC  61                 	db	97	;'a'
  1245  00FECD  73                 	db	115	;'s'
  1246  00FECE  74                 	db	116	;'t'
  1247  00FECF  20                 	db	32
  1248  00FED0  50                 	db	80	;'P'
  1249  00FED1  61                 	db	97	;'a'
  1250  00FED2  63                 	db	99	;'c'
  1251  00FED3  6B                 	db	107	;'k'
  1252  00FED4  65                 	db	101	;'e'
  1253  00FED5  74                 	db	116	;'t'
  1254  00FED6  20                 	db	32
  1255  00FED7  77                 	db	119	;'w'
  1256  00FED8  69                 	db	105	;'i'
  1257  00FED9  74                 	db	116	;'t'
  1258  00FEDA  68                 	db	104	;'h'
  1259  00FEDB  20                 	db	32
  1260  00FEDC  52                 	db	82	;'R'
  1261  00FEDD  53                 	db	83	;'S'
  1262  00FEDE  53                 	db	83	;'S'
  1263  00FEDF  49                 	db	73	;'I'
  1264  00FEE0  20                 	db	32
  1265  00FEE1  00                 	db	0
  1266  00FEE2                     STR_37:
  1267  00FEE2  0D                 	db	13
  1268  00FEE3  0A                 	db	10
  1269  00FEE4  53                 	db	83	;'S'
  1270  00FEE5  65                 	db	101	;'e'
  1271  00FEE6  6C                 	db	108	;'l'
  1272  00FEE7  65                 	db	101	;'e'
  1273  00FEE8  63                 	db	99	;'c'
  1274  00FEE9  74                 	db	116	;'t'
  1275  00FEEA  69                 	db	105	;'i'
  1276  00FEEB  6F                 	db	111	;'o'
  1277  00FEEC  6E                 	db	110	;'n'
  1278  00FEED  20                 	db	32
  1279  00FEEE  6F                 	db	111	;'o'
  1280  00FEEF  66                 	db	102	;'f'
  1281  00FEF0  20                 	db	32
  1282  00FEF1  63                 	db	99	;'c'
  1283  00FEF2  68                 	db	104	;'h'
  1284  00FEF3  61                 	db	97	;'a'
  1285  00FEF4  6E                 	db	110	;'n'
  1286  00FEF5  6E                 	db	110	;'n'
  1287  00FEF6  65                 	db	101	;'e'
  1288  00FEF7  6C                 	db	108	;'l'
  1289  00FEF8  20                 	db	32
  1290  00FEF9  00                 	db	0
  1291  00FEFA                     STR_19:
  1292  00FEFA  0D                 	db	13
  1293  00FEFB  0A                 	db	10
  1294  00FEFC  20                 	db	32
  1295  00FEFD  20                 	db	32
  1296  00FEFE  20                 	db	32
  1297  00FEFF  44                 	db	68	;'D'
  1298  00FF00  65                 	db	101	;'e'
  1299  00FF01  6D                 	db	109	;'m'
  1300  00FF02  6F                 	db	111	;'o'
  1301  00FF03  20                 	db	32
  1302  00FF04  49                 	db	73	;'I'
  1303  00FF05  6E                 	db	110	;'n'
  1304  00FF06  73                 	db	115	;'s'
  1305  00FF07  74                 	db	116	;'t'
  1306  00FF08  72                 	db	114	;'r'
  1307  00FF09  75                 	db	117	;'u'
  1308  00FF0A  63                 	db	99	;'c'
  1309  00FF0B  74                 	db	116	;'t'
  1310  00FF0C  69                 	db	105	;'i'
  1311  00FF0D  6F                 	db	111	;'o'
  1312  00FF0E  6E                 	db	110	;'n'
  1313  00FF0F  3A                 	db	58	;':'
  1314  00FF10  00                 	db	0
  1315  00FF11                     STR_41:
  1316  00FF11  52                 	db	82	;'R'
  1317  00FF12  42                 	db	66	;'B'
  1318  00FF13  30                 	db	48	;'0'
  1319  00FF14  3A                 	db	58	;':'
  1320  00FF15  25                 	db	37
  1321  00FF16  30                 	db	48	;'0'
  1322  00FF17  32                 	db	50	;'2'
  1323  00FF18  64                 	db	100	;'d'
  1324  00FF19  2D                 	db	45
  1325  00FF1A  25                 	db	37
  1326  00FF1B  30                 	db	48	;'0'
  1327  00FF1C  32                 	db	50	;'2'
  1328  00FF1D  78                 	db	120	;'x'
  1329  00FF1E  25                 	db	37
  1330  00FF1F  30                 	db	48	;'0'
  1331  00FF20  32                 	db	50	;'2'
  1332  00FF21  78                 	db	120	;'x'
  1333  00FF22  25                 	db	37
  1334  00FF23  30                 	db	48	;'0'
  1335  00FF24  32                 	db	50	;'2'
  1336  00FF25  78                 	db	120	;'x'
  1337  00FF26  00                 	db	0
  1338  00FF27                     STR_43:
  1339  00FF27  52                 	db	82	;'R'
  1340  00FF28  65                 	db	101	;'e'
  1341  00FF29  73                 	db	115	;'s'
  1342  00FF2A  74                 	db	116	;'t'
  1343  00FF2B  6F                 	db	111	;'o'
  1344  00FF2C  72                 	db	114	;'r'
  1345  00FF2D  69                 	db	105	;'i'
  1346  00FF2E  6E                 	db	110	;'n'
  1347  00FF2F  67                 	db	103	;'g'
  1348  00FF30  20                 	db	32
  1349  00FF31  4E                 	db	78	;'N'
  1350  00FF32  65                 	db	101	;'e'
  1351  00FF33  74                 	db	116	;'t'
  1352  00FF34  77                 	db	119	;'w'
  1353  00FF35  6F                 	db	111	;'o'
  1354  00FF36  72                 	db	114	;'r'
  1355  00FF37  6B                 	db	107	;'k'
  1356  00FF38  20                 	db	32
  1357  00FF39  21                 	db	33
  1358  00FF3A  21                 	db	33
  1359  00FF3B  00                 	db	0
  1360  00FF3C                     STR_39:
  1361  00FF3C  0D                 	db	13
  1362  00FF3D  0A                 	db	10
  1363  00FF3E  55                 	db	85	;'U'
  1364  00FF3F  6E                 	db	110	;'n'
  1365  00FF40  69                 	db	105	;'i'
  1366  00FF41  63                 	db	99	;'c'
  1367  00FF42  61                 	db	97	;'a'
  1368  00FF43  73                 	db	115	;'s'
  1369  00FF44  74                 	db	116	;'t'
  1370  00FF45  20                 	db	32
  1371  00FF46  46                 	db	70	;'F'
  1372  00FF47  61                 	db	97	;'a'
  1373  00FF48  69                 	db	105	;'i'
  1374  00FF49  6C                 	db	108	;'l'
  1375  00FF4A  65                 	db	101	;'e'
  1376  00FF4B  64                 	db	100	;'d'
  1377  00FF4C  0D                 	db	13
  1378  00FF4D  0A                 	db	10
  1379  00FF4E  00                 	db	0
  1380  00FF4F                     STR_2:
  1381  00FF4F  0D                 	db	13
  1382  00FF50  0A                 	db	10
  1383  00FF51  0D                 	db	13
  1384  00FF52  0A                 	db	10
  1385  00FF53  4D                 	db	77	;'M'
  1386  00FF54  79                 	db	121	;'y'
  1387  00FF55  20                 	db	32
  1388  00FF56  41                 	db	65	;'A'
  1389  00FF57  64                 	db	100	;'d'
  1390  00FF58  64                 	db	100	;'d'
  1391  00FF59  72                 	db	114	;'r'
  1392  00FF5A  65                 	db	101	;'e'
  1393  00FF5B  73                 	db	115	;'s'
  1394  00FF5C  73                 	db	115	;'s'
  1395  00FF5D  3A                 	db	58	;':'
  1396  00FF5E  20                 	db	32
  1397  00FF5F  30                 	db	48	;'0'
  1398  00FF60  78                 	db	120	;'x'
  1399  00FF61  00                 	db	0
  1400  00FF62                     STR_44:
  1401  00FF62  30                 	db	48	;'0'
  1402  00FF63  31                 	db	49	;'1'
  1403  00FF64  32                 	db	50	;'2'
  1404  00FF65  33                 	db	51	;'3'
  1405  00FF66  34                 	db	52	;'4'
  1406  00FF67  35                 	db	53	;'5'
  1407  00FF68  36                 	db	54	;'6'
  1408  00FF69  37                 	db	55	;'7'
  1409  00FF6A  38                 	db	56	;'8'
  1410  00FF6B  39                 	db	57	;'9'
  1411  00FF6C  41                 	db	65	;'A'
  1412  00FF6D  42                 	db	66	;'B'
  1413  00FF6E  43                 	db	67	;'C'
  1414  00FF6F  44                 	db	68	;'D'
  1415  00FF70  45                 	db	69	;'E'
  1416  00FF71  46                 	db	70	;'F'
  1417  00FF72  00                 	db	0
  1418  00FF73                     STR_45:
  1419  00FF73  30                 	db	48	;'0'
  1420  00FF74  31                 	db	49	;'1'
  1421  00FF75  32                 	db	50	;'2'
  1422  00FF76  33                 	db	51	;'3'
  1423  00FF77  34                 	db	52	;'4'
  1424  00FF78  35                 	db	53	;'5'
  1425  00FF79  36                 	db	54	;'6'
  1426  00FF7A  37                 	db	55	;'7'
  1427  00FF7B  38                 	db	56	;'8'
  1428  00FF7C  39                 	db	57	;'9'
  1429  00FF7D  61                 	db	97	;'a'
  1430  00FF7E  62                 	db	98	;'b'
  1431  00FF7F  63                 	db	99	;'c'
  1432  00FF80  64                 	db	100	;'d'
  1433  00FF81  65                 	db	101	;'e'
  1434  00FF82  66                 	db	102	;'f'
  1435  00FF83  00                 	db	0
  1436  00FF84                     STR_15:
  1437  00FF84  52                 	db	82	;'R'
  1438  00FF85  58                 	db	88	;'X'
  1439  00FF86  20                 	db	32
  1440  00FF87  4D                 	db	77	;'M'
  1441  00FF88  65                 	db	101	;'e'
  1442  00FF89  73                 	db	115	;'s'
  1443  00FF8A  73                 	db	115	;'s'
  1444  00FF8B  61                 	db	97	;'a'
  1445  00FF8C  67                 	db	103	;'g'
  1446  00FF8D  65                 	db	101	;'e'
  1447  00FF8E  73                 	db	115	;'s'
  1448  00FF8F  3A                 	db	58	;':'
  1449  00FF90  20                 	db	32
  1450  00FF91  25                 	db	37
  1451  00FF92  33                 	db	51	;'3'
  1452  00FF93  64                 	db	100	;'d'
  1453  00FF94  00                 	db	0
  1454  00FF95                     STR_14:
  1455  00FF95  54                 	db	84	;'T'
  1456  00FF96  58                 	db	88	;'X'
  1457  00FF97  20                 	db	32
  1458  00FF98  4D                 	db	77	;'M'
  1459  00FF99  65                 	db	101	;'e'
  1460  00FF9A  73                 	db	115	;'s'
  1461  00FF9B  73                 	db	115	;'s'
  1462  00FF9C  61                 	db	97	;'a'
  1463  00FF9D  67                 	db	103	;'g'
  1464  00FF9E  65                 	db	101	;'e'
  1465  00FF9F  73                 	db	115	;'s'
  1466  00FFA0  3A                 	db	58	;':'
  1467  00FFA1  20                 	db	32
  1468  00FFA2  25                 	db	37
  1469  00FFA3  33                 	db	51	;'3'
  1470  00FFA4  64                 	db	100	;'d'
  1471  00FFA5  00                 	db	0
  1472  00FFA6                     STR_42:
  1473  00FFA6  52                 	db	82	;'R'
  1474  00FFA7  42                 	db	66	;'B'
  1475  00FFA8  32                 	db	50	;'2'
  1476  00FFA9  3A                 	db	58	;':'
  1477  00FFAA  20                 	db	32
  1478  00FFAB  43                 	db	67	;'C'
  1479  00FFAC  68                 	db	104	;'h'
  1480  00FFAD  6E                 	db	110	;'n'
  1481  00FFAE  67                 	db	103	;'g'
  1482  00FFAF  65                 	db	101	;'e'
  1483  00FFB0  20                 	db	32
  1484  00FFB1  6E                 	db	110	;'n'
  1485  00FFB2  6F                 	db	111	;'o'
  1486  00FFB3  64                 	db	100	;'d'
  1487  00FFB4  65                 	db	101	;'e'
  1488  00FFB5  00                 	db	0
  1489  00FFB6                     STR_40:
  1490  00FFB6  20                 	db	32
  1491  00FFB7  55                 	db	85	;'U'
  1492  00FFB8  6E                 	db	110	;'n'
  1493  00FFB9  69                 	db	105	;'i'
  1494  00FFBA  63                 	db	99	;'c'
  1495  00FFBB  61                 	db	97	;'a'
  1496  00FFBC  73                 	db	115	;'s'
  1497  00FFBD  74                 	db	116	;'t'
  1498  00FFBE  20                 	db	32
  1499  00FFBF  46                 	db	70	;'F'
  1500  00FFC0  61                 	db	97	;'a'
  1501  00FFC1  69                 	db	105	;'i'
  1502  00FFC2  6C                 	db	108	;'l'
  1503  00FFC3  65                 	db	101	;'e'
  1504  00FFC4  64                 	db	100	;'d'
  1505  00FFC5  00                 	db	0
  1506  00FFC6                     STR_5:
  1507  00FFC6  20                 	db	32
  1508  00FFC7  20                 	db	32
  1509  00FFC8  20                 	db	32
  1510  00FFC9  20                 	db	32
  1511  00FFCA  20                 	db	32
  1512  00FFCB  20                 	db	32
  1513  00FFCC  20                 	db	32
  1514  00FFCD  20                 	db	32
  1515  00FFCE  20                 	db	32
  1516  00FFCF  20                 	db	32
  1517  00FFD0  20                 	db	32
  1518  00FFD1  20                 	db	32
  1519  00FFD2  20                 	db	32
  1520  00FFD3  00                 	db	0
  1521  00FFD4                     STR_3:
  1522  00FFD4  20                 	db	32
  1523  00FFD5  20                 	db	32
  1524  00FFD6  43                 	db	67	;'C'
  1525  00FFD7  68                 	db	104	;'h'
  1526  00FFD8  61                 	db	97	;'a'
  1527  00FFD9  6E                 	db	110	;'n'
  1528  00FFDA  6E                 	db	110	;'n'
  1529  00FFDB  65                 	db	101	;'e'
  1530  00FFDC  6C                 	db	108	;'l'
  1531  00FFDD  3A                 	db	58	;':'
  1532  00FFDE  20                 	db	32
  1533  00FFDF  00                 	db	0
  1534  00FFE0                     STR_1:
  1535  00FFE0  20                 	db	32
  1536  00FFE1  43                 	db	67	;'C'
  1537  00FFE2  68                 	db	104	;'h'
  1538  00FFE3  61                 	db	97	;'a'
  1539  00FFE4  6E                 	db	110	;'n'
  1540  00FFE5  6E                 	db	110	;'n'
  1541  00FFE6  65                 	db	101	;'e'
  1542  00FFE7  6C                 	db	108	;'l'
  1543  00FFE8  3A                 	db	58	;':'
  1544  00FFE9  00                 	db	0
  1545  00FFEA                     STR_32:
  1546  00FFEA  53                 	db	83	;'S'
  1547  00FFEB  65                 	db	101	;'e'
  1548  00FFEC  63                 	db	99	;'c'
  1549  00FFED  75                 	db	117	;'u'
  1550  00FFEE  72                 	db	114	;'r'
  1551  00FFEF  65                 	db	101	;'e'
  1552  00FFF0  64                 	db	100	;'d'
  1553  00FFF1  20                 	db	32
  1554  00FFF2  00                 	db	0
  1555  00FFF3                     STR_35:
  1556  00FFF3  20                 	db	32
  1557  00FFF4  66                 	db	102	;'f'
  1558  00FFF5  72                 	db	114	;'r'
  1559  00FFF6  6F                 	db	111	;'o'
  1560  00FFF7  6D                 	db	109	;'m'
  1561  00FFF8  20                 	db	32
  1562  00FFF9  00                 	db	0
  1563  00FFFA                     STR_25:
  1564  00FFFA  0D                 	db	13
  1565  00FFFB  0A                 	db	10
  1566  00FFFC  0D                 	db	13
  1567  00FFFD  0A                 	db	10
  1568  00FFFE  00                 	db	0
  1569  0000                     
  1570                           ; #config settings
  1571  00FFFF  00                 	db	0	; dummy byte at the end
  1572  0000                     
  1573                           	psect	cinit
  1574  011EE4                     __pcinit:
  1575                           	opt stack 0
  1576  011EE4                     start_initialization:
  1577                           	opt stack 0
  1578  011EE4                     __initialization:
  1579                           	opt stack 0
  1580                           
  1581                           ; Initialize objects allocated to BANK1 (16 bytes)
  1582                           ; load TBLPTR registers with __pidataBANK1
  1583  011EE4  0EA4               	movlw	low __pidataBANK1
  1584  011EE6  6EF6               	movwf	tblptrl,c
  1585  011EE8  0E2A               	movlw	high __pidataBANK1
  1586  011EEA  6EF7               	movwf	tblptrh,c
  1587  011EEC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1588  011EEE  6EF8               	movwf	tblptru,c
  1589  011EF0  EE01  F0A3         	lfsr	0,__pdataBANK1
  1590  011EF4  EE10 F010          	lfsr	1,16
  1591  011EF8                     copy_data0:
  1592  011EF8  0009               	tblrd		*+
  1593  011EFA  CFF5 FFEE          	movff	tablat,postinc0
  1594  011EFE  50E5               	movf	postdec1,w,c
  1595  011F00  50E1               	movf	fsr1l,w,c
  1596  011F02  E1FA               	bnz	copy_data0
  1597                           
  1598                           ; Initialize objects allocated to BANK0 (11 bytes)
  1599                           ; load TBLPTR registers with __pidataBANK0
  1600  011F04  0ECE               	movlw	low __pidataBANK0
  1601  011F06  6EF6               	movwf	tblptrl,c
  1602  011F08  0E2A               	movlw	high __pidataBANK0
  1603  011F0A  6EF7               	movwf	tblptrh,c
  1604  011F0C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1605  011F0E  6EF8               	movwf	tblptru,c
  1606  011F10  EE00  F0EC         	lfsr	0,__pdataBANK0
  1607  011F14  EE10 F00B          	lfsr	1,11
  1608  011F18                     copy_data1:
  1609  011F18  0009               	tblrd		*+
  1610  011F1A  CFF5 FFEE          	movff	tablat,postinc0
  1611  011F1E  50E5               	movf	postdec1,w,c
  1612  011F20  50E1               	movf	fsr1l,w,c
  1613  011F22  E1FA               	bnz	copy_data1
  1614                           
  1615                           ; Clear objects allocated to BANK2 (104 bytes)
  1616  011F24  EE02  F000         	lfsr	0,__pbssBANK2
  1617  011F28  0E68               	movlw	104
  1618  011F2A                     clear_0:
  1619  011F2A  6AEE               	clrf	postinc0,c
  1620  011F2C  06E8               	decf	wreg,f,c
  1621  011F2E  E1FD               	bnz	clear_0
  1622                           
  1623                           ; Clear objects allocated to BANK1 (163 bytes)
  1624  011F30  EE01  F000         	lfsr	0,__pbssBANK1
  1625  011F34  0EA3               	movlw	163
  1626  011F36                     clear_1:
  1627  011F36  6AEE               	clrf	postinc0,c
  1628  011F38  06E8               	decf	wreg,f,c
  1629  011F3A  E1FD               	bnz	clear_1
  1630                           
  1631                           ; Clear objects allocated to BANK0 (62 bytes)
  1632  011F3C  EE00  F0AE         	lfsr	0,__pbssBANK0
  1633  011F40  0E3E               	movlw	62
  1634  011F42                     clear_2:
  1635  011F42  6AEE               	clrf	postinc0,c
  1636  011F44  06E8               	decf	wreg,f,c
  1637  011F46  E1FD               	bnz	clear_2
  1638                           
  1639                           ; Clear objects allocated to COMRAM (34 bytes)
  1640  011F48  EE00  F036         	lfsr	0,__pbssCOMRAM
  1641  011F4C  0E22               	movlw	34
  1642  011F4E                     clear_3:
  1643  011F4E  6AEE               	clrf	postinc0,c
  1644  011F50  06E8               	decf	wreg,f,c
  1645  011F52  E1FD               	bnz	clear_3
  1646  011F54                     end_of_initialization:
  1647                           	opt stack 0
  1648  011F54                     __end_of__initialization:
  1649                           	opt stack 0
  1650  011F54  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1651  011F56  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1652  011F58  0100               	movlb	0
  1653  011F5A  EFB5  F094         	goto	_main	;jump to C main() function
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           postdec1	equ	0xFE5
  1661                           fsr1l	equ	0xFE1
  1662                           
  1663                           	psect	bssCOMRAM
  1664  000036                     __pbssCOMRAM:
  1665                           	opt stack 0
  1666  000036                     _RF_Mode:
  1667                           	opt stack 0
  1668  000036                     	ds	1
  1669  000037                     _RSSIVal:
  1670                           	opt stack 0
  1671  000037                     	ds	1
  1672  000038                     _TxMACSeq:
  1673                           	opt stack 0
  1674  000038                     	ds	1
  1675  000039                     _timerExtension1:
  1676                           	opt stack 0
  1677  000039                     	ds	1
  1678  00003A                     _TxBuffer:
  1679                           	opt stack 0
  1680  00003A                     	ds	30
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           fsr1l	equ	0xFE1
  1689                           
  1690                           	psect	bssBANK0
  1691  0000AE                     __pbssBANK0:
  1692                           	opt stack 0
  1693  0000AE                     _rxMessage:
  1694                           	opt stack 0
  1695  0000AE                     	ds	10
  1696  0000B8                     _MACRxPacket:
  1697                           	opt stack 0
  1698  0000B8                     	ds	8
  1699  0000C0                     _PUSH_BUTTON_press_time:
  1700                           	opt stack 0
  1701  0000C0                     	ds	4
  1702  0000C4                     _nvmDelayTick:
  1703                           	opt stack 0
  1704  0000C4                     	ds	4
  1705  0000C8                     _MACInitParams:
  1706                           	opt stack 0
  1707  0000C8                     	ds	2
  1708  0000CA                     _nextEEPosition:
  1709                           	opt stack 0
  1710  0000CA                     	ds	2
  1711  0000CC                     _IRQ1_Received:
  1712                           	opt stack 0
  1713  0000CC                     	ds	1
  1714  0000CD                     _LatestConnection:
  1715                           	opt stack 0
  1716  0000CD                     	ds	1
  1717  0000CE                     _MACSeq:
  1718                           	opt stack 0
  1719  0000CE                     	ds	1
  1720  0000CF                     _MyindexinPC:
  1721                           	opt stack 0
  1722  0000CF                     	ds	1
  1723  0000D0                     _P2PCapacityInfo:
  1724                           	opt stack 0
  1725  0000D0                     	ds	1
  1726  0000D1                     _P2PStatus:
  1727                           	opt stack 0
  1728  0000D1                     	ds	1
  1729  0000D2                     _PUSH_BUTTON_pressed:
  1730                           	opt stack 0
  1731  0000D2                     	ds	1
  1732  0000D3                     _RSSILock:
  1733                           	opt stack 0
  1734  0000D3                     	ds	1
  1735  0000D4                     _ReceivedBankIndex:
  1736                           	opt stack 0
  1737  0000D4                     	ds	1
  1738  0000D5                     _RxNum:
  1739                           	opt stack 0
  1740  0000D5                     	ds	1
  1741  0000D6                     _TxData:
  1742                           	opt stack 0
  1743  0000D6                     	ds	1
  1744  0000D7                     _TxNum:
  1745                           	opt stack 0
  1746  0000D7                     	ds	1
  1747  0000D8                     _TxSynCount:
  1748                           	opt stack 0
  1749  0000D8                     	ds	1
  1750  0000D9                     _TxSynCount2:
  1751                           	opt stack 0
  1752  0000D9                     	ds	1
  1753  0000DA                     _hasAck:
  1754                           	opt stack 0
  1755  0000DA                     	ds	1
  1756  0000DB                     _i:
  1757                           	opt stack 0
  1758  0000DB                     	ds	1
  1759  0000DC                     _temp_bit:
  1760                           	opt stack 0
  1761  0000DC                     	ds	1
  1762  0000DD                     _timerExtension2:
  1763                           	opt stack 0
  1764  0000DD                     	ds	1
  1765  0000DE                     _nvmConnMode:
  1766                           	opt stack 0
  1767  0000DE                     	ds	2
  1768  0000E0                     _nvmConnectionTable:
  1769                           	opt stack 0
  1770  0000E0                     	ds	2
  1771  0000E2                     _nvmCurrentChannel:
  1772                           	opt stack 0
  1773  0000E2                     	ds	2
  1774  0000E4                     _nvmEdc:
  1775                           	opt stack 0
  1776  0000E4                     	ds	2
  1777  0000E6                     _nvmMyPANID:
  1778                           	opt stack 0
  1779  0000E6                     	ds	2
  1780  0000E8                     _nvmOutFrameCounter:
  1781                           	opt stack 0
  1782  0000E8                     	ds	2
  1783  0000EA                     _conn_size:
  1784                           	opt stack 0
  1785  0000EA                     	ds	1
  1786  0000EB                     _currentChannel:
  1787                           	opt stack 0
  1788  0000EB                     	ds	1
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           
  1798                           	psect	dataBANK0
  1799  0000EC                     __pdataBANK0:
  1800                           	opt stack 0
  1801  0000EC                     _AdditionalNodeID:
  1802                           	opt stack 0
  1803  0000EC                     	ds	1
  1804  0000ED                     _chk_sel_status:
  1805                           	opt stack 0
  1806  0000ED                     	ds	1
  1807  0000EE                     _myLongAddress:
  1808                           	opt stack 0
  1809  0000EE                     	ds	8
  1810  0000F6                     _ConnMode:
  1811                           	opt stack 0
  1812  0000F6                     	ds	1
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           postdec1	equ	0xFE5
  1820                           fsr1l	equ	0xFE1
  1821                           
  1822                           	psect	bssBANK1
  1823  000100                     __pbssBANK1:
  1824                           	opt stack 0
  1825  000100                     _MACTxBuffer:
  1826                           	opt stack 0
  1827  000100                     	ds	50
  1828  000132                     _AckInfo:
  1829                           	opt stack 0
  1830  000132                     	ds	30
  1831  000150                     _ConnectionTable:
  1832                           	opt stack 0
  1833  000150                     	ds	50
  1834  000182                     _LCDText:
  1835                           	opt stack 0
  1836  000182                     	ds	33
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           postdec1	equ	0xFE5
  1844                           fsr1l	equ	0xFE1
  1845                           
  1846                           	psect	dataBANK1
  1847  0001A3                     __pdataBANK1:
  1848                           	opt stack 0
  1849  0001A3                     _CharacterArray:
  1850                           	opt stack 0
  1851  0001A3                     	ds	16
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           postdec1	equ	0xFE5
  1859                           fsr1l	equ	0xFE1
  1860                           
  1861                           	psect	bssBANK2
  1862  000200                     __pbssBANK2:
  1863                           	opt stack 0
  1864  000200                     _RxPacket:
  1865                           	opt stack 0
  1866  000200                     	ds	104
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           postdec1	equ	0xFE5
  1874                           fsr1l	equ	0xFE1
  1875                           
  1876                           	psect	cstackBANK0
  1877  000060                     __pcstackBANK0:
  1878                           	opt stack 0
  1879  000060                     ??_isdigit:
  1880  000060                     ?___wmul:
  1881                           	opt stack 0
  1882  000060                     ?___lwdiv:
  1883                           	opt stack 0
  1884  000060                     ?_MiWi_TickGet:
  1885                           	opt stack 0
  1886  000060                     Total_Connections@count:
  1887                           	opt stack 0
  1888  000060                     CONSOLE_Put@c:
  1889                           	opt stack 0
  1890  000060                     SPIPut@v:
  1891                           	opt stack 0
  1892  000060                     ___lbmod@divisor:
  1893                           	opt stack 0
  1894  000060                     NVMalloc@size:
  1895                           	opt stack 0
  1896  000060                     isSameAddress@Address1:
  1897                           	opt stack 0
  1898  000060                     DELAY_ms@ms:
  1899                           	opt stack 0
  1900  000060                     ___wmul@multiplier:
  1901                           	opt stack 0
  1902  000060                     ___lwdiv@dividend:
  1903                           	opt stack 0
  1904  000060                     memset@p1:
  1905                           	opt stack 0
  1906  000060                     DELAY_10us@tenMicroSecondCounter:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x0
  1910  000060                     	ds	1
  1911  000061                     RegisterRead@address:
  1912                           	opt stack 0
  1913  000061                     WriteFIFO@Data:
  1914                           	opt stack 0
  1915  000061                     Total_Connections@i:
  1916                           	opt stack 0
  1917  000061                     CONSOLE_PrintHex@PRINT_VAR:
  1918                           	opt stack 0
  1919  000061                     EEPROM_Read@dest:
  1920                           	opt stack 0
  1921  000061                     LCDInitPortA@preRFIE:
  1922                           	opt stack 0
  1923  000061                     LCDInitPortB@preRFIE:
  1924                           	opt stack 0
  1925  000061                     LCDWritePortA@v:
  1926                           	opt stack 0
  1927  000061                     LCDWritePortB@v:
  1928                           	opt stack 0
  1929  000061                     _isdigit$3476:
  1930                           	opt stack 0
  1931  000061                     ___lbmod@dividend:
  1932                           	opt stack 0
  1933  000061                     RegisterSet@setting:
  1934                           	opt stack 0
  1935  000061                     NVMRead@dest:
  1936                           	opt stack 0
  1937  000061                     NVMWrite@source:
  1938                           	opt stack 0
  1939  000061                     CONSOLE_PutString@str:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x1
  1943  000061                     	ds	1
  1944  000062                     ??_DELAY_ms:
  1945  000062                     RegisterRead@value:
  1946                           	opt stack 0
  1947  000062                     WriteFIFO@IRQ1select:
  1948                           	opt stack 0
  1949  000062                     NVMalloc@location:
  1950                           	opt stack 0
  1951  000062                     CONSOLE_PrintHex@toPrint:
  1952                           	opt stack 0
  1953  000062                     EEPROM_Read@addr:
  1954                           	opt stack 0
  1955  000062                     LCDWritePortA@preRFIE:
  1956                           	opt stack 0
  1957  000062                     LCDWritePortB@preRFIE:
  1958                           	opt stack 0
  1959  000062                     isdigit@c:
  1960                           	opt stack 0
  1961  000062                     ___lbmod@counter:
  1962                           	opt stack 0
  1963  000062                     isSameAddress@Address2:
  1964                           	opt stack 0
  1965  000062                     ___wmul@multiplicand:
  1966                           	opt stack 0
  1967  000062                     ___lwdiv@divisor:
  1968                           	opt stack 0
  1969  000062                     memset@c:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x2
  1973  000062                     	ds	1
  1974  000063                     ??_NVMalloc:
  1975  000063                     RegisterSet@IRQ1select:
  1976                           	opt stack 0
  1977  000063                     RegisterRead@IRQ1select:
  1978                           	opt stack 0
  1979  000063                     CONSOLE_PutString@c:
  1980                           	opt stack 0
  1981  000063                     EEPROM_Read@count:
  1982                           	opt stack 0
  1983  000063                     LCDInitWrite@v:
  1984                           	opt stack 0
  1985  000063                     ___lbmod@rem:
  1986                           	opt stack 0
  1987  000063                     NVMRead@addr:
  1988                           	opt stack 0
  1989  000063                     NVMWrite@addr:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x3
  1993  000063                     	ds	1
  1994  000064                     ??_DemoOutput_HandleMessage:
  1995  000064                     SetRFMode@mode:
  1996                           	opt stack 0
  1997  000064                     MiWi_TickGet@IntFlag2:
  1998                           	opt stack 0
  1999  000064                     ___lbdiv@divisor:
  2000                           	opt stack 0
  2001  000064                     ___wmul@product:
  2002                           	opt stack 0
  2003  000064                     ___lwdiv@quotient:
  2004                           	opt stack 0
  2005  000064                     memset@n:
  2006                           	opt stack 0
  2007  000064                     DELAY_10us@cyclesRequiredForEntireDelay:
  2008                           	opt stack 0
  2009                           
  2010                           ; 4 bytes @ 0x4
  2011  000064                     	ds	1
  2012  000065                     MiMAC_SetChannel@offsetFreq:
  2013                           	opt stack 0
  2014  000065                     NVMInit@result:
  2015                           	opt stack 0
  2016  000065                     MiWi_TickGet@IntFlag1:
  2017                           	opt stack 0
  2018  000065                     ___lbdiv@dividend:
  2019                           	opt stack 0
  2020  000065                     NVMRead@count:
  2021                           	opt stack 0
  2022  000065                     NVMWrite@count:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x5
  2026  000065                     	ds	1
  2027  000066                     ??_MiMAC_SetChannel:
  2028  000066                     isSameAddress@i:
  2029                           	opt stack 0
  2030  000066                     DemoOutput_HandleMessage@i:
  2031                           	opt stack 0
  2032  000066                     ___lbdiv@counter:
  2033                           	opt stack 0
  2034  000066                     ___lwdiv@counter:
  2035                           	opt stack 0
  2036  000066                     memset@p:
  2037                           	opt stack 0
  2038  000066                     MiWi_TickGet@currentTime:
  2039                           	opt stack 0
  2040                           
  2041                           ; 4 bytes @ 0x6
  2042  000066                     	ds	1
  2043  000067                     ??_NVMWrite:
  2044  000067                     ?___lwmod:
  2045                           	opt stack 0
  2046  000067                     MiMAC_SetChannel@channel:
  2047                           	opt stack 0
  2048  000067                     NVMRead@oldRFIE:
  2049                           	opt stack 0
  2050  000067                     ___lbdiv@quotient:
  2051                           	opt stack 0
  2052  000067                     ___lwmod@dividend:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x7
  2056  000067                     	ds	1
  2057  000068                     ??_CONSOLE_PrintDec:
  2058  000068                     NVMWrite@oldRFIE:
  2059                           	opt stack 0
  2060                           
  2061                           ; 1 bytes @ 0x8
  2062  000068                     	ds	1
  2063  000069                     NVMWrite@PageCounter:
  2064                           	opt stack 0
  2065  000069                     ___lwmod@divisor:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x9
  2069  000069                     	ds	1
  2070  00006A                     ??_AddConnection:
  2071  00006A                     ??_MiMAC_ReceivedPacket:
  2072  00006A                     ??_MiApp_ConnectionMode:
  2073  00006A                     TxPacket@CCA:
  2074                           	opt stack 0
  2075  00006A                     MiApp_StartConnection@ScanDuration:
  2076                           	opt stack 0
  2077  00006A                     MiApp_SetChannel@channel:
  2078                           	opt stack 0
  2079  00006A                     CONSOLE_PrintDec@toPrint:
  2080                           	opt stack 0
  2081  00006A                     DELAY_ms@cyclesRequiredForEntireDelay:
  2082                           	opt stack 0
  2083  00006A                     ButtonPressed@tickDifference:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0xA
  2087  00006A                     	ds	1
  2088  00006B                     ??_TxPacket:
  2089  00006B                     ??_DumpConnection:
  2090  00006B                     MiApp_ConnectionMode@Mode:
  2091                           	opt stack 0
  2092  00006B                     DemoOutput_ChannelError@channel:
  2093                           	opt stack 0
  2094  00006B                     ___lwmod@counter:
  2095                           	opt stack 0
  2096  00006B                     MiApp_StartConnection@ChannelMap:
  2097                           	opt stack 0
  2098                           
  2099                           ; 4 bytes @ 0xB
  2100  00006B                     	ds	1
  2101  00006C                     ?_sprintf:
  2102                           	opt stack 0
  2103  00006C                     sprintf@sp:
  2104                           	opt stack 0
  2105                           
  2106                           ; 2 bytes @ 0xC
  2107  00006C                     	ds	1
  2108  00006D                     DumpConnection@index:
  2109                           	opt stack 0
  2110                           
  2111                           ; 1 bytes @ 0xD
  2112  00006D                     	ds	1
  2113  00006E                     DumpConnection@j:
  2114                           	opt stack 0
  2115  00006E                     AddConnection@status:
  2116                           	opt stack 0
  2117  00006E                     LCD_i_write@v:
  2118                           	opt stack 0
  2119  00006E                     LCD_d_write@v:
  2120                           	opt stack 0
  2121  00006E                     MiMAC_Init@initValue:
  2122                           	opt stack 0
  2123  00006E                     sprintf@f:
  2124                           	opt stack 0
  2125  00006E                     ButtonPressed@t:
  2126                           	opt stack 0
  2127                           
  2128                           ; 4 bytes @ 0xE
  2129  00006E                     	ds	1
  2130  00006F                     MiApp_StartConnection@Mode:
  2131                           	opt stack 0
  2132  00006F                     DumpConnection@i:
  2133                           	opt stack 0
  2134  00006F                     AddConnection@connectionSlot:
  2135                           	opt stack 0
  2136  00006F                     LCD_Update@i:
  2137                           	opt stack 0
  2138  00006F                     TxPacket@t1:
  2139                           	opt stack 0
  2140                           
  2141                           ; 4 bytes @ 0xF
  2142  00006F                     	ds	1
  2143  000070                     MiMAC_Init@i:
  2144                           	opt stack 0
  2145  000070                     AddConnection@i:
  2146                           	opt stack 0
  2147                           
  2148                           ; 1 bytes @ 0x10
  2149  000070                     	ds	1
  2150  000071                     MiApp_ProtocolInit@bNetworkFreezer:
  2151                           	opt stack 0
  2152                           
  2153                           ; 1 bytes @ 0x11
  2154  000071                     	ds	1
  2155  000072                     MiApp_ProtocolInit@initValue:
  2156                           	opt stack 0
  2157  000072                     MiMAC_ReceivedPacket@currentTick:
  2158                           	opt stack 0
  2159                           
  2160                           ; 4 bytes @ 0x12
  2161  000072                     	ds	1
  2162  000073                     TxPacket@t2:
  2163                           	opt stack 0
  2164                           
  2165                           ; 4 bytes @ 0x13
  2166  000073                     	ds	1
  2167  000074                     MiApp_ProtocolInit@i:
  2168                           	opt stack 0
  2169                           
  2170                           ; 1 bytes @ 0x14
  2171  000074                     	ds	2
  2172  000076                     MiMAC_ReceivedPacket@PayloadIndex:
  2173                           	opt stack 0
  2174                           
  2175                           ; 1 bytes @ 0x16
  2176  000076                     	ds	1
  2177  000077                     TxPacket@CCARetries:
  2178                           	opt stack 0
  2179  000077                     MiMAC_ReceivedPacket@i:
  2180                           	opt stack 0
  2181                           
  2182                           ; 1 bytes @ 0x17
  2183  000077                     	ds	1
  2184  000078                     ??_sprintf:
  2185  000078                     TxPacket@reTry:
  2186                           	opt stack 0
  2187                           
  2188                           ; 1 bytes @ 0x18
  2189  000078                     	ds	1
  2190  000079                     TxPacket@allowedTxFailure:
  2191                           	opt stack 0
  2192                           
  2193                           ; 1 bytes @ 0x19
  2194  000079                     	ds	1
  2195  00007A                     TxPacket@rssival:
  2196                           	opt stack 0
  2197                           
  2198                           ; 1 bytes @ 0x1A
  2199  00007A                     	ds	1
  2200  00007B                     TxPacket@status:
  2201                           	opt stack 0
  2202                           
  2203                           ; 1 bytes @ 0x1B
  2204  00007B                     	ds	1
  2205  00007C                     TxPacket@TxPacketLen:
  2206                           	opt stack 0
  2207  00007C                     _sprintf$3245:
  2208                           	opt stack 0
  2209                           
  2210                           ; 2 bytes @ 0x1C
  2211  00007C                     	ds	1
  2212  00007D                     TxPacket@i:
  2213                           	opt stack 0
  2214                           
  2215                           ; 1 bytes @ 0x1D
  2216  00007D                     	ds	1
  2217  00007E                     _sprintf$3246:
  2218                           	opt stack 0
  2219  00007E                     MiMAC_SendPacket@transParam:
  2220                           	opt stack 0
  2221                           
  2222                           ; 3 bytes @ 0x1E
  2223  00007E                     	ds	2
  2224  000080                     _sprintf$3252:
  2225                           	opt stack 0
  2226                           
  2227                           ; 2 bytes @ 0x20
  2228  000080                     	ds	1
  2229  000081                     MiMAC_SendPacket@MACPayload:
  2230                           	opt stack 0
  2231                           
  2232                           ; 1 bytes @ 0x21
  2233  000081                     	ds	1
  2234  000082                     MiMAC_SendPacket@MACPayloadLen:
  2235                           	opt stack 0
  2236  000082                     sprintf@idx:
  2237                           	opt stack 0
  2238                           
  2239                           ; 1 bytes @ 0x22
  2240  000082                     	ds	1
  2241  000083                     ??_MiMAC_SendPacket:
  2242  000083                     sprintf@cp:
  2243                           	opt stack 0
  2244                           
  2245                           ; 1 bytes @ 0x23
  2246  000083                     	ds	1
  2247  000084                     MiMAC_SendPacket@TxIndex:
  2248                           	opt stack 0
  2249  000084                     sprintf@len:
  2250                           	opt stack 0
  2251                           
  2252                           ; 2 bytes @ 0x24
  2253  000084                     	ds	1
  2254  000085                     MiMAC_SendPacket@i:
  2255                           	opt stack 0
  2256                           
  2257                           ; 1 bytes @ 0x25
  2258  000085                     	ds	1
  2259  000086                     sprintf@ap:
  2260                           	opt stack 0
  2261  000086                     SendPacket@DestinationAddress:
  2262                           	opt stack 0
  2263                           
  2264                           ; 2 bytes @ 0x26
  2265  000086                     	ds	1
  2266  000087                     sprintf@val:
  2267                           	opt stack 0
  2268                           
  2269                           ; 2 bytes @ 0x27
  2270  000087                     	ds	1
  2271  000088                     SendPacket@isCommand:
  2272                           	opt stack 0
  2273                           
  2274                           ; 1 bytes @ 0x28
  2275  000088                     	ds	1
  2276  000089                     SendPacket@SecurityEnabled:
  2277                           	opt stack 0
  2278  000089                     sprintf@prec:
  2279                           	opt stack 0
  2280                           
  2281                           ; 1 bytes @ 0x29
  2282  000089                     	ds	1
  2283  00008A                     ??_SendPacket:
  2284  00008A                     sprintf@width:
  2285                           	opt stack 0
  2286                           
  2287                           ; 2 bytes @ 0x2A
  2288  00008A                     	ds	1
  2289  00008B                     SendPacket@status:
  2290                           	opt stack 0
  2291                           
  2292                           ; 1 bytes @ 0x2B
  2293  00008B                     	ds	1
  2294  00008C                     SendPacket@Broadcast:
  2295                           	opt stack 0
  2296  00008C                     sprintf@c:
  2297                           	opt stack 0
  2298                           
  2299                           ; 1 bytes @ 0x2C
  2300  00008C                     	ds	1
  2301  00008D                     sprintf@flag:
  2302                           	opt stack 0
  2303  00008D                     SendPacket@tParam:
  2304                           	opt stack 0
  2305                           
  2306                           ; 3 bytes @ 0x2D
  2307  00008D                     	ds	2
  2308  00008F                     LCDTRXCount@rxCount:
  2309                           	opt stack 0
  2310  00008F                     LCDDisplay@text:
  2311                           	opt stack 0
  2312                           
  2313                           ; 2 bytes @ 0x2F
  2314  00008F                     	ds	1
  2315  000090                     ??_P2PTasks:
  2316  000090                     MiApp_BroadcastPacket@SecEn:
  2317                           	opt stack 0
  2318  000090                     LCDTRXCount@txCount:
  2319                           	opt stack 0
  2320  000090                     MiApp_UnicastAddress@DestinationAddress:
  2321                           	opt stack 0
  2322                           
  2323                           ; 2 bytes @ 0x30
  2324  000090                     	ds	1
  2325  000091                     LCDDisplay@value:
  2326                           	opt stack 0
  2327  000091                     DemoOutput_UpdateTxRx@RxNum:
  2328                           	opt stack 0
  2329                           
  2330                           ; 1 bytes @ 0x31
  2331  000091                     	ds	1
  2332  000092                     MiApp_UnicastAddress@PermanentAddr:
  2333                           	opt stack 0
  2334  000092                     LCDDisplay@delay:
  2335                           	opt stack 0
  2336  000092                     DemoOutput_UpdateTxRx@TxNum:
  2337                           	opt stack 0
  2338                           
  2339                           ; 1 bytes @ 0x32
  2340  000092                     	ds	1
  2341  000093                     MiApp_UnicastAddress@SecEn:
  2342                           	opt stack 0
  2343  000093                     LCDDisplay@i:
  2344                           	opt stack 0
  2345                           
  2346                           ; 1 bytes @ 0x33
  2347  000093                     	ds	1
  2348  000094                     ??_freezer_feature:
  2349  000094                     MiApp_UnicastConnection@SecEn:
  2350                           	opt stack 0
  2351  000094                     DemoOutput_Channel@Step:
  2352                           	opt stack 0
  2353  000094                     P2PTasks@tmpTick:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0x34
  2357  000094                     	ds	1
  2358  000095                     MiApp_UnicastConnection@ConnectionIndex:
  2359                           	opt stack 0
  2360  000095                     DemoOutput_Channel@channel:
  2361                           	opt stack 0
  2362                           
  2363                           ; 1 bytes @ 0x35
  2364  000095                     	ds	3
  2365  000098                     P2PTasks@status:
  2366                           	opt stack 0
  2367  000098                     freezer_feature@tick1:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x38
  2371  000098                     	ds	1
  2372  000099                     P2PTasks@i:
  2373                           	opt stack 0
  2374                           
  2375                           ; 1 bytes @ 0x39
  2376  000099                     	ds	1
  2377  00009A                     ??_run_p2p_demo:
  2378  00009A                     MiApp_EstablishConnection@Mode:
  2379                           	opt stack 0
  2380                           
  2381                           ; 1 bytes @ 0x3A
  2382  00009A                     	ds	1
  2383  00009B                     ??_MiApp_EstablishConnection:
  2384                           
  2385                           ; 1 bytes @ 0x3B
  2386  00009B                     	ds	1
  2387  00009C                     freezer_feature@tick2:
  2388                           	opt stack 0
  2389                           
  2390                           ; 4 bytes @ 0x3C
  2391  00009C                     	ds	3
  2392  00009F                     MiApp_EstablishConnection@tmpConnectionMode:
  2393                           	opt stack 0
  2394                           
  2395                           ; 1 bytes @ 0x3F
  2396  00009F                     	ds	1
  2397  0000A0                     MiApp_EstablishConnection@retry:
  2398                           	opt stack 0
  2399  0000A0                     freezer_feature@switch_val:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x40
  2403  0000A0                     	ds	1
  2404  0000A1                     run_p2p_demo@PressedButton:
  2405                           	opt stack 0
  2406  0000A1                     MiApp_EstablishConnection@t1:
  2407                           	opt stack 0
  2408                           
  2409                           ; 4 bytes @ 0x41
  2410  0000A1                     	ds	1
  2411  0000A2                     run_p2p_demo@update_ed:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x42
  2415  0000A2                     	ds	1
  2416  0000A3                     run_p2p_demo@switch_val:
  2417                           	opt stack 0
  2418                           
  2419                           ; 1 bytes @ 0x43
  2420  0000A3                     	ds	1
  2421  0000A4                     run_p2p_demo@select_ed:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x44
  2425  0000A4                     	ds	1
  2426  0000A5                     MiApp_EstablishConnection@connectionInterval:
  2427                           	opt stack 0
  2428                           
  2429                           ; 1 bytes @ 0x45
  2430  0000A5                     	ds	1
  2431  0000A6                     MiApp_EstablishConnection@t2:
  2432                           	opt stack 0
  2433                           
  2434                           ; 4 bytes @ 0x46
  2435  0000A6                     	ds	4
  2436  0000AA                     MiApp_EstablishConnection@i:
  2437                           	opt stack 0
  2438                           
  2439                           ; 1 bytes @ 0x4A
  2440  0000AA                     	ds	1
  2441  0000AB                     Initialize_Demo@freezer_enable:
  2442                           	opt stack 0
  2443                           
  2444                           ; 1 bytes @ 0x4B
  2445  0000AB                     	ds	1
  2446  0000AC                     Initialize_Demo@i:
  2447                           	opt stack 0
  2448                           
  2449                           ; 1 bytes @ 0x4C
  2450  0000AC                     	ds	1
  2451  0000AD                     main@freezer_enable:
  2452                           	opt stack 0
  2453                           
  2454                           ; 1 bytes @ 0x4D
  2455  0000AD                     	ds	1
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           
  2465                           	psect	cstackCOMRAM
  2466  000001                     __pcstackCOMRAM:
  2467                           	opt stack 0
  2468  000001                     ?i2_MiWi_TickGet:
  2469                           	opt stack 0
  2470  000001                     i2SPIPut@v:
  2471                           	opt stack 0
  2472  000001                     i2DELAY_10us@tenMicroSecondCounter:
  2473                           	opt stack 0
  2474                           
  2475                           ; 4 bytes @ 0x0
  2476  000001                     	ds	1
  2477  000002                     i2RegisterRead@address:
  2478                           	opt stack 0
  2479  000002                     i2WriteFIFO@Data:
  2480                           	opt stack 0
  2481  000002                     i2RegisterSet@setting:
  2482                           	opt stack 0
  2483                           
  2484                           ; 2 bytes @ 0x1
  2485  000002                     	ds	1
  2486  000003                     i2RegisterRead@value:
  2487                           	opt stack 0
  2488  000003                     i2WriteFIFO@IRQ1select:
  2489                           	opt stack 0
  2490                           
  2491                           ; 1 bytes @ 0x2
  2492  000003                     	ds	1
  2493  000004                     i2RegisterSet@IRQ1select:
  2494                           	opt stack 0
  2495  000004                     i2RegisterRead@IRQ1select:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x3
  2499  000004                     	ds	1
  2500  000005                     i2SetRFMode@mode:
  2501                           	opt stack 0
  2502  000005                     i2MiWi_TickGet@IntFlag2:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0x4
  2506  000005                     	ds	1
  2507  000006                     i2MiWi_TickGet@IntFlag1:
  2508                           	opt stack 0
  2509                           
  2510                           ; 1 bytes @ 0x5
  2511  000006                     	ds	1
  2512  000007                     i2MiWi_TickGet@currentTime:
  2513                           	opt stack 0
  2514                           
  2515                           ; 4 bytes @ 0x6
  2516  000007                     	ds	4
  2517  00000B                     i2TxPacket@CCA:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0xA
  2521  00000B                     	ds	1
  2522  00000C                     ??i2_TxPacket:
  2523                           
  2524                           ; 1 bytes @ 0xB
  2525  00000C                     	ds	4
  2526  000010                     i2TxPacket@TxPacketLen:
  2527                           	opt stack 0
  2528                           
  2529                           ; 1 bytes @ 0xF
  2530  000010                     	ds	1
  2531  000011                     i2TxPacket@status:
  2532                           	opt stack 0
  2533                           
  2534                           ; 1 bytes @ 0x10
  2535  000011                     	ds	1
  2536  000012                     i2TxPacket@t1:
  2537                           	opt stack 0
  2538                           
  2539                           ; 4 bytes @ 0x11
  2540  000012                     	ds	4
  2541  000016                     i2TxPacket@t2:
  2542                           	opt stack 0
  2543                           
  2544                           ; 4 bytes @ 0x15
  2545  000016                     	ds	4
  2546  00001A                     i2TxPacket@CCARetries:
  2547                           	opt stack 0
  2548                           
  2549                           ; 1 bytes @ 0x19
  2550  00001A                     	ds	1
  2551  00001B                     i2TxPacket@reTry:
  2552                           	opt stack 0
  2553                           
  2554                           ; 1 bytes @ 0x1A
  2555  00001B                     	ds	1
  2556  00001C                     i2TxPacket@allowedTxFailure:
  2557                           	opt stack 0
  2558                           
  2559                           ; 1 bytes @ 0x1B
  2560  00001C                     	ds	1
  2561  00001D                     i2TxPacket@rssival:
  2562                           	opt stack 0
  2563                           
  2564                           ; 1 bytes @ 0x1C
  2565  00001D                     	ds	1
  2566  00001E                     i2TxPacket@i:
  2567                           	opt stack 0
  2568                           
  2569                           ; 1 bytes @ 0x1D
  2570  00001E                     	ds	1
  2571  00001F                     ??_high_isr:
  2572                           
  2573                           ; 1 bytes @ 0x1E
  2574  00001F                     	ds	10
  2575  000029                     high_isr@counter:
  2576                           	opt stack 0
  2577                           
  2578                           ; 2 bytes @ 0x28
  2579  000029                     	ds	2
  2580  00002B                     high_isr@fifo_stat:
  2581                           	opt stack 0
  2582                           
  2583                           ; 1 bytes @ 0x2A
  2584  00002B                     	ds	1
  2585  00002C                     high_isr@ackPacket:
  2586                           	opt stack 0
  2587                           
  2588                           ; 4 bytes @ 0x2B
  2589  00002C                     	ds	4
  2590  000030                     high_isr@bAck:
  2591                           	opt stack 0
  2592                           
  2593                           ; 1 bytes @ 0x2F
  2594  000030                     	ds	1
  2595  000031                     high_isr@RxPacketPtr:
  2596                           	opt stack 0
  2597                           
  2598                           ; 1 bytes @ 0x30
  2599  000031                     	ds	1
  2600  000032                     high_isr@ackInfoIndex:
  2601                           	opt stack 0
  2602                           
  2603                           ; 1 bytes @ 0x31
  2604  000032                     	ds	1
  2605  000033                     high_isr@PacketLen:
  2606                           	opt stack 0
  2607                           
  2608                           ; 1 bytes @ 0x32
  2609  000033                     	ds	1
  2610  000034                     high_isr@BankIndex:
  2611                           	opt stack 0
  2612                           
  2613                           ; 1 bytes @ 0x33
  2614  000034                     	ds	1
  2615  000035                     high_isr@i:
  2616                           	opt stack 0
  2617                           
  2618                           ; 1 bytes @ 0x34
  2619  000035                     	ds	1
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           
  2629 ;;
  2630 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2631 ;;
  2632 ;; *************** function _main *****************
  2633 ;; Defined at:
  2634 ;;		line 56 in file "../src/main.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  freezer_enab    1   77[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels required when called:   16
  2654 ;; This function calls:
  2655 ;;		_CONSOLE_Initialize
  2656 ;;		_DemoOutput_Greeting
  2657 ;;		_InitSymbolTimer
  2658 ;;		_Initialize_Demo
  2659 ;;		_Run_Demo
  2660 ;;		_SYSTEM_Initialize
  2661 ;;		_freezer_feature
  2662 ;; This function is called by:
  2663 ;;		Startup code after reset
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text0
  2668  01296A                     __ptext0:
  2669                           	opt stack 0
  2670  01296A                     _main:
  2671                           	opt stack 15
  2672                           
  2673                           ;main.c: 60: SYSTEM_Initialize();
  2674                           
  2675                           ;incstack = 0
  2676  01296A  ECF4  F090         	call	_SYSTEM_Initialize	;wreg free
  2677                           
  2678                           ;main.c: 63: CONSOLE_Initialize();
  2679  01296E  EC49  F095         	call	_CONSOLE_Initialize	;wreg free
  2680                           
  2681                           ;main.c: 66: InitSymbolTimer ();
  2682  012972  EC40  F095         	call	_InitSymbolTimer	;wreg free
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;main.c: 68: DemoOutput_Greeting();
  2686  012976  ECB4  F08E         	call	_DemoOutput_Greeting	;wreg free
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;main.c: 72: freezer_enable = freezer_feature();
  2690  01297A  EC30  F08E         	call	_freezer_feature	;wreg free
  2691  01297E  6FAD               	movwf	main@freezer_enable& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 76: Initialize_Demo(freezer_enable);
  2695  012980  51AD               	movf	main@freezer_enable& (0+255),w,b
  2696  012982  ECEC  F08F         	call	_Initialize_Demo
  2697  012986                     l7216:
  2698                           
  2699                           ;main.c: 78: {
  2700                           ;main.c: 80: Run_Demo();
  2701  012986  EC84  F095         	call	_Run_Demo	;wreg free
  2702  01298A  D7FD               	goto	l7216
  2703  01298C                     __end_of_main:
  2704                           	opt stack 0
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           postinc0	equ	0xFEE
  2710                           wreg	equ	0xFE8
  2711                           postdec1	equ	0xFE5
  2712                           fsr1l	equ	0xFE1
  2713                           
  2714 ;; *************** function _freezer_feature *****************
  2715 ;; Defined at:
  2716 ;;		line 69 in file "../src/task.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  tick2           4   60[BANK0 ] struct _MIWI_TICK
  2721 ;;  tick1           4   56[BANK0 ] struct _MIWI_TICK
  2722 ;;  switch_val      1   64[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      unsigned char 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : F/0
  2729 ;;		On exit  : F/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;Total ram usage:       13 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:   10
  2739 ;; This function calls:
  2740 ;;		_ButtonPressed
  2741 ;;		_DELAY_ms
  2742 ;;		_LCDDisplay
  2743 ;;		_MiWi_TickGet
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text1
  2750  011C60                     __ptext1:
  2751                           	opt stack 0
  2752  011C60                     _freezer_feature:
  2753                           	opt stack 20
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;task.c: 71: MIWI_TICK tick1, tick2;
  2757                           ;task.c: 72: uint8_t switch_val;
  2758                           ;task.c: 73: tick1 = MiWi_TickGet();
  2759                           
  2760                           ;incstack = 0
  2761  011C60  EC78  F091         	call	_MiWi_TickGet	;wreg free
  2762  011C64  C060  F098         	movff	?_MiWi_TickGet,freezer_feature@tick1
  2763  011C68  C061  F099         	movff	?_MiWi_TickGet+1,freezer_feature@tick1+1
  2764  011C6C  C062  F09A         	movff	?_MiWi_TickGet+2,freezer_feature@tick1+2
  2765  011C70  C063  F09B         	movff	?_MiWi_TickGet+3,freezer_feature@tick1+3
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;task.c: 75: {
  2769                           ;task.c: 76: tick2 = MiWi_TickGet();
  2770                           
  2771                           ;task.c: 74: while(1)
  2772  011C74  EC78  F091         	call	_MiWi_TickGet	;wreg free
  2773  011C78  C060  F09C         	movff	?_MiWi_TickGet,freezer_feature@tick2
  2774  011C7C  C061  F09D         	movff	?_MiWi_TickGet+1,freezer_feature@tick2+1
  2775  011C80  C062  F09E         	movff	?_MiWi_TickGet+2,freezer_feature@tick2+2
  2776  011C84  C063  F09F         	movff	?_MiWi_TickGet+3,freezer_feature@tick2+3
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;task.c: 77: if((tick2.Val - tick1.Val) > (((uint32_t)(10000000)/32) * 4))
  2780  011C88  5198               	movf	freezer_feature@tick1& (0+255),w,b
  2781  011C8A  5D9C               	subwf	freezer_feature@tick2& (0+255),w,b
  2782  011C8C  6F94               	movwf	??_freezer_feature& (0+255),b
  2783  011C8E  5199               	movf	(freezer_feature@tick1+1)& (0+255),w,b
  2784  011C90  599D               	subwfb	(freezer_feature@tick2+1)& (0+255),w,b
  2785  011C92  6F95               	movwf	(??_freezer_feature+1)& (0+255),b
  2786  011C94  519A               	movf	(freezer_feature@tick1+2)& (0+255),w,b
  2787  011C96  599E               	subwfb	(freezer_feature@tick2+2)& (0+255),w,b
  2788  011C98  6F96               	movwf	(??_freezer_feature+2)& (0+255),b
  2789  011C9A  519B               	movf	(freezer_feature@tick1+3)& (0+255),w,b
  2790  011C9C  599F               	subwfb	(freezer_feature@tick2+3)& (0+255),w,b
  2791  011C9E  6F97               	movwf	(??_freezer_feature+3)& (0+255),b
  2792  011CA0  5197               	movf	(??_freezer_feature+3)& (0+255),w,b
  2793  011CA2  E11F               	bnz	l1029
  2794  011CA4  0ED1               	movlw	209
  2795  011CA6  5D94               	subwf	??_freezer_feature& (0+255),w,b
  2796  011CA8  0E12               	movlw	18
  2797  011CAA  5995               	subwfb	(??_freezer_feature+1)& (0+255),w,b
  2798  011CAC  0E13               	movlw	19
  2799  011CAE  5996               	subwfb	(??_freezer_feature+2)& (0+255),w,b
  2800  011CB0  E301               	bnc	l6896
  2801  011CB2  0012               	return	
  2802  011CB4                     l6896:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;task.c: 79: switch_val = ButtonPressed ();
  2806  011CB4  EC72  F08E         	call	_ButtonPressed	;wreg free
  2807  011CB8  6FA0               	movwf	freezer_feature@switch_val& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;task.c: 80: if(switch_val == 2)
  2811  011CBA  0E02               	movlw	2
  2812  011CBC  19A0               	xorwf	freezer_feature@switch_val& (0+255),w,b
  2813  011CBE  E110               	bnz	l6910
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;task.c: 81: {
  2817                           ;task.c: 82: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  2818  011CC0  0E27               	movlw	low STR_43
  2819  011CC2  6F8F               	movwf	LCDDisplay@text& (0+255),b
  2820  011CC4  0EFF               	movlw	high STR_43
  2821  011CC6  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  2822  011CC8  0E00               	movlw	0
  2823  011CCA  6F91               	movwf	LCDDisplay@value& (0+255),b
  2824  011CCC  6F92               	movwf	LCDDisplay@delay& (0+255),b
  2825  011CCE  ECE4  F091         	call	_LCDDisplay	;wreg free
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;task.c: 83: DELAY_ms(1000);
  2829  011CD2  0E03               	movlw	3
  2830  011CD4  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  2831  011CD6  0EE8               	movlw	232
  2832  011CD8  6F60               	movwf	DELAY_ms@ms& (0+255),b
  2833  011CDA  EC2E  F08C         	call	_DELAY_ms	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;task.c: 84: return 1;
  2837  011CDE  0C01               	retlw	1
  2838  011CE0                     l6910:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;task.c: 86: else
  2842                           ;task.c: 87: {
  2843                           ;task.c: 88: return 0;
  2844  011CE0  0E00               	movlw	0
  2845  011CE2                     l1029:
  2846                           
  2847                           ; BSR set to: 0
  2848  011CE2  0012               	return		;funcret
  2849  011CE4                     __end_of_freezer_feature:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           postinc0	equ	0xFEE
  2856                           wreg	equ	0xFE8
  2857                           postdec1	equ	0xFE5
  2858                           fsr1l	equ	0xFE1
  2859                           
  2860 ;; *************** function _SYSTEM_Initialize *****************
  2861 ;; Defined at:
  2862 ;;		line 53 in file "../src/system_config/pic18exp_pic18f87j11_89xa/system.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    9
  2883 ;; This function calls:
  2884 ;;		_LCD_Initialize
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text2
  2891  0121E8                     __ptext2:
  2892                           	opt stack 0
  2893  0121E8                     _SYSTEM_Initialize:
  2894                           	opt stack 21
  2895                           
  2896                           ;system.c: 57: OSCCON = 0x70;
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;incstack = 0
  2900  0121E8  0E70               	movlw	112
  2901  0121EA  6ED3               	movwf	4051,c	;volatile
  2902                           
  2903                           ;system.c: 62: WDTCONbits.ADSHR = 1;
  2904  0121EC  88C0               	bsf	4032,4,c	;volatile
  2905                           
  2906                           ;system.c: 63: ANCON0 = 0b11011111;
  2907  0121EE  0EDF               	movlw	223
  2908  0121F0  6EC1               	movwf	4033,c	;volatile
  2909                           
  2910                           ;system.c: 64: ANCON1 = 0xFF;
  2911  0121F2  68C2               	setf	4034,c	;volatile
  2912                           
  2913                           ;system.c: 65: WDTCONbits.ADSHR = 0;
  2914  0121F4  98C0               	bcf	4032,4,c	;volatile
  2915                           
  2916                           ;system.c: 67: TRISA = 0xFF;
  2917  0121F6  6892               	setf	3986,c	;volatile
  2918                           
  2919                           ;system.c: 68: TRISB = 0xFF;
  2920  0121F8  6893               	setf	3987,c	;volatile
  2921                           
  2922                           ;system.c: 69: TRISC = 0xFF;
  2923  0121FA  6894               	setf	3988,c	;volatile
  2924                           
  2925                           ;system.c: 70: TRISD = 0x00;
  2926  0121FC  6A95               	clrf	3989,c	;volatile
  2927                           
  2928                           ;system.c: 72: LATA = 0;
  2929  0121FE  6A89               	clrf	3977,c	;volatile
  2930                           
  2931                           ;system.c: 73: LATB = 0;
  2932  012200  6A8A               	clrf	3978,c	;volatile
  2933                           
  2934                           ;system.c: 74: LATC = 0;
  2935  012202  6A8B               	clrf	3979,c	;volatile
  2936                           
  2937                           ;system.c: 75: LATD = 0;
  2938  012204  6A8C               	clrf	3980,c	;volatile
  2939                           
  2940                           ;system.c: 78: TRISBbits.TRISB0 = 1;
  2941  012206  8093               	bsf	3987,0,c	;volatile
  2942                           
  2943                           ;system.c: 79: TRISAbits.TRISA5 = 1;
  2944  012208  8A92               	bsf	3986,5,c	;volatile
  2945                           
  2946                           ;system.c: 80: TRISDbits.TRISD7 = 0;
  2947  01220A  9E95               	bcf	3989,7,c	;volatile
  2948                           
  2949                           ;system.c: 81: TRISDbits.TRISD6 = 0;
  2950  01220C  9C95               	bcf	3989,6,c	;volatile
  2951                           
  2952                           ;system.c: 86: TRISBbits.TRISB5 = 1;
  2953  01220E  8A93               	bsf	3987,5,c	;volatile
  2954                           
  2955                           ;system.c: 89: TRISCbits.TRISC4 = 1;
  2956  012210  8894               	bsf	3988,4,c	;volatile
  2957                           
  2958                           ;system.c: 90: TRISCbits.TRISC5 = 0;
  2959  012212  9A94               	bcf	3988,5,c	;volatile
  2960                           
  2961                           ;system.c: 91: TRISCbits.TRISC3 = 0;
  2962  012214  9694               	bcf	3988,3,c	;volatile
  2963                           
  2964                           ;system.c: 97: SSP1STAT = 0xC0;
  2965  012216  0EC0               	movlw	192
  2966  012218  6EC7               	movwf	4039,c	;volatile
  2967                           
  2968                           ;system.c: 98: SSP1CON1 = 0x21;
  2969  01221A  0E21               	movlw	33
  2970  01221C  6EC6               	movwf	4038,c	;volatile
  2971                           
  2972                           ;system.c: 109: TRISEbits.TRISE3 = 0;
  2973  01221E  9696               	bcf	3990,3,c	;volatile
  2974                           
  2975                           ;system.c: 110: TRISCbits.TRISC2 = 0;
  2976  012220  9494               	bcf	3988,2,c	;volatile
  2977                           
  2978                           ;system.c: 111: TRISDbits.TRISD7 = 0;
  2979  012222  9E95               	bcf	3989,7,c	;volatile
  2980                           
  2981                           ;system.c: 112: TRISDbits.TRISD6 = 0;
  2982  012224  9C95               	bcf	3989,6,c	;volatile
  2983                           
  2984                           ;system.c: 113: INTCON3bits.INT3IF = 0;
  2985  012226  94F0               	bcf	intcon3,2,c	;volatile
  2986                           
  2987                           ;system.c: 114: INTCON3bits.INT3IE = 1;
  2988  012228  8AF0               	bsf	intcon3,5,c	;volatile
  2989                           
  2990                           ;system.c: 120: LATEbits.LATE3 = 1;
  2991  01222A  868D               	bsf	3981,3,c	;volatile
  2992                           
  2993                           ;system.c: 121: LATCbits.LATC2 = 1;
  2994  01222C  848B               	bsf	3979,2,c	;volatile
  2995                           
  2996                           ;system.c: 123: INTCONbits.GIEH = 1;
  2997  01222E  8EF2               	bsf	intcon,7,c	;volatile
  2998                           
  2999                           ;system.c: 125: SSP1STAT = 0x40;
  3000  012230  0E40               	movlw	64
  3001  012232  6EC7               	movwf	4039,c	;volatile
  3002                           
  3003                           ;system.c: 126: SSP1CON1 = 0x21;
  3004  012234  0E21               	movlw	33
  3005  012236  6EC6               	movwf	4038,c	;volatile
  3006                           
  3007                           ;system.c: 129: INTCON2bits.INTEDG3 = 1;
  3008  012238  86F1               	bsf	intcon2,3,c	;volatile
  3009                           
  3010                           ;system.c: 135: TRISAbits.TRISA3 = 0;
  3011  01223A  9692               	bcf	3986,3,c	;volatile
  3012                           
  3013                           ;system.c: 136: LATAbits.LATA3 = 1;
  3014  01223C  8689               	bsf	3977,3,c	;volatile
  3015                           
  3016                           ;system.c: 142: TRISEbits.TRISE2 = 0;
  3017  01223E  9496               	bcf	3990,2,c	;volatile
  3018                           
  3019                           ;system.c: 143: LATEbits.LATE2 = 1;
  3020  012240  848D               	bsf	3981,2,c	;volatile
  3021                           
  3022                           ;system.c: 148: INTCONbits.GIEH = 1;
  3023  012242  8EF2               	bsf	intcon,7,c	;volatile
  3024                           
  3025                           ;system.c: 149: INTCON3bits.INT3IE = 1;
  3026  012244  8AF0               	bsf	intcon3,5,c	;volatile
  3027                           
  3028                           ;system.c: 152: LCD_Initialize();
  3029  012246  EFAF  F08F         	goto	_LCD_Initialize	;wreg free
  3030  01224A                     __end_of_SYSTEM_Initialize:
  3031                           	opt stack 0
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           intcon	equ	0xFF2
  3037                           intcon2	equ	0xFF1
  3038                           intcon3	equ	0xFF0
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postdec1	equ	0xFE5
  3042                           fsr1l	equ	0xFE1
  3043                           
  3044 ;; *************** function _LCD_Initialize *****************
  3045 ;; Defined at:
  3046 ;;		line 175 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    8
  3067 ;; This function calls:
  3068 ;;		_DELAY_ms
  3069 ;;		_LCDInitPortA
  3070 ;;		_LCDInitPortB
  3071 ;;		_LCDInitSPI
  3072 ;;		_LCDInitWrite
  3073 ;;		_LCDWritePortA
  3074 ;; This function is called by:
  3075 ;;		_SYSTEM_Initialize
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text3
  3080  011F5E                     __ptext3:
  3081                           	opt stack 0
  3082  011F5E                     _LCD_Initialize:
  3083                           	opt stack 21
  3084                           
  3085                           ;lcd.c: 178: (TRISAbits.TRISA2) = 0;
  3086                           
  3087                           ;incstack = 0
  3088  011F5E  9492               	bcf	3986,2,c	;volatile
  3089                           
  3090                           ;lcd.c: 179: (LATAbits.LATA2) = 1;
  3091  011F60  8489               	bsf	3977,2,c	;volatile
  3092                           
  3093                           ;lcd.c: 180: DELAY_ms(10);
  3094  011F62  0100               	movlb	0	; () banked
  3095  011F64  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3096  011F66  0E0A               	movlw	10
  3097  011F68  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3098  011F6A  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;lcd.c: 182: (TRISFbits.TRISF6) = 0;
  3102  011F6E  9C97               	bcf	3991,6,c	;volatile
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;lcd.c: 183: (LATFbits.LATF6) = 0;
  3106  011F70  9C8E               	bcf	3982,6,c	;volatile
  3107                           
  3108                           ;lcd.c: 184: DELAY_ms(10);
  3109  011F72  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3110  011F74  0E0A               	movlw	10
  3111  011F76  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3112  011F78  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;lcd.c: 185: (LATFbits.LATF6) = 1;
  3116  011F7C  8C8E               	bsf	3982,6,c	;volatile
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;lcd.c: 188: LCDInitSPI();
  3120  011F7E  EC7C  F095         	call	_LCDInitSPI	;wreg free
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;lcd.c: 191: LCDInitPortA();
  3124  011F82  EC7F  F093         	call	_LCDInitPortA	;wreg free
  3125                           
  3126                           ;lcd.c: 194: LCDInitPortB();
  3127  011F86  EC4F  F093         	call	_LCDInitPortB	;wreg free
  3128                           
  3129                           ;lcd.c: 196: LCDWritePortA(0);
  3130  011F8A  0E00               	movlw	0
  3131  011F8C  EC03  F093         	call	_LCDWritePortA
  3132                           
  3133                           ;lcd.c: 199: DELAY_ms(10);
  3134  011F90  0100               	movlb	0	; () banked
  3135  011F92  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3136  011F94  0E0A               	movlw	10
  3137  011F96  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3138  011F98  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;lcd.c: 200: LCDInitWrite(0x3C);
  3142  011F9C  0E3C               	movlw	60
  3143  011F9E  ECCE  F092         	call	_LCDInitWrite
  3144                           
  3145                           ;lcd.c: 202: DELAY_ms(10);
  3146  011FA2  0100               	movlb	0	; () banked
  3147  011FA4  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3148  011FA6  0E0A               	movlw	10
  3149  011FA8  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3150  011FAA  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;lcd.c: 203: LCDInitWrite(0x0C);
  3154  011FAE  0E0C               	movlw	12
  3155  011FB0  ECCE  F092         	call	_LCDInitWrite
  3156                           
  3157                           ;lcd.c: 205: DELAY_ms(10);
  3158  011FB4  0100               	movlb	0	; () banked
  3159  011FB6  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3160  011FB8  0E0A               	movlw	10
  3161  011FBA  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3162  011FBC  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;lcd.c: 206: LCDInitWrite(0x01);
  3166  011FC0  0E01               	movlw	1
  3167  011FC2  ECCE  F092         	call	_LCDInitWrite
  3168                           
  3169                           ;lcd.c: 208: DELAY_ms(10);
  3170  011FC6  0100               	movlb	0	; () banked
  3171  011FC8  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3172  011FCA  0E0A               	movlw	10
  3173  011FCC  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3174  011FCE  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;lcd.c: 209: LCDInitWrite(0x0C);
  3178  011FD2  0E0C               	movlw	12
  3179  011FD4  EFCE  F092         	goto	_LCDInitWrite
  3180  011FD8                     __end_of_LCD_Initialize:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           intcon	equ	0xFF2
  3187                           intcon2	equ	0xFF1
  3188                           intcon3	equ	0xFF0
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec1	equ	0xFE5
  3192                           fsr1l	equ	0xFE1
  3193                           
  3194 ;; *************** function _LCDInitSPI *****************
  3195 ;; Defined at:
  3196 ;;		line 41 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		None
  3205 ;; Tracked objects:
  3206 ;;		On entry : F/0
  3207 ;;		On exit  : F/0
  3208 ;;		Unchanged: F/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    5
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_LCD_Initialize
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text4
  3225  012AF8                     __ptext4:
  3226                           	opt stack 0
  3227  012AF8                     _LCDInitSPI:
  3228                           	opt stack 23
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;lcd.c: 43: TRISCbits.TRISC5 = 0;
  3232                           
  3233                           ;incstack = 0
  3234  012AF8  9A94               	bcf	3988,5,c	;volatile
  3235                           
  3236                           ;lcd.c: 44: TRISCbits.TRISC3 = 0;
  3237  012AFA  9694               	bcf	3988,3,c	;volatile
  3238                           
  3239                           ;lcd.c: 45: PIR1bits.SSPIF = 0;
  3240  012AFC  969E               	bcf	3998,3,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243  012AFE  0012               	return		;funcret
  3244  012B00                     __end_of_LCDInitSPI:
  3245                           	opt stack 0
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           intcon	equ	0xFF2
  3251                           intcon2	equ	0xFF1
  3252                           intcon3	equ	0xFF0
  3253                           postinc0	equ	0xFEE
  3254                           wreg	equ	0xFE8
  3255                           postdec1	equ	0xFE5
  3256                           fsr1l	equ	0xFE1
  3257                           
  3258 ;; *************** function _LCDInitPortB *****************
  3259 ;; Defined at:
  3260 ;;		line 60 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  preRFIE         1    1[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        1 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    6
  3281 ;; This function calls:
  3282 ;;		_SPIPut
  3283 ;; This function is called by:
  3284 ;;		_LCD_Initialize
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text5
  3289  01269E                     __ptext5:
  3290                           	opt stack 0
  3291  01269E                     _LCDInitPortB:
  3292                           	opt stack 22
  3293                           
  3294                           ;lcd.c: 62: uint8_t preRFIE = INTCON3bits.INT3IE;
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;incstack = 0
  3298  01269E  0E00               	movlw	0
  3299  0126A0  BAF0               	btfsc	intcon3,5,c	;volatile
  3300  0126A2  0E01               	movlw	1
  3301  0126A4  0100               	movlb	0	; () banked
  3302  0126A6  6F61               	movwf	LCDInitPortB@preRFIE& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;lcd.c: 63: INTCON3bits.INT3IE = 0;
  3306  0126A8  9AF0               	bcf	intcon3,5,c	;volatile
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;lcd.c: 64: (LATAbits.LATA2) = 0;
  3310  0126AA  9489               	bcf	3977,2,c	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;lcd.c: 65: SPIPut(0x40);
  3314  0126AC  0E40               	movlw	64
  3315  0126AE  EC13  F095         	call	_SPIPut
  3316                           
  3317                           ;lcd.c: 66: SPIPut(0x01);
  3318  0126B2  0E01               	movlw	1
  3319  0126B4  EC13  F095         	call	_SPIPut
  3320                           
  3321                           ;lcd.c: 67: SPIPut(0x00);
  3322  0126B8  0E00               	movlw	0
  3323  0126BA  EC13  F095         	call	_SPIPut
  3324                           
  3325                           ;lcd.c: 68: (LATAbits.LATA2) = 1;
  3326  0126BE  8489               	bsf	3977,2,c	;volatile
  3327                           
  3328                           ;lcd.c: 69: INTCON3bits.INT3IE = preRFIE;
  3329  0126C0  0100               	movlb	0	; () banked
  3330  0126C2  B161               	btfsc	LCDInitPortB@preRFIE& (0+255),0,b
  3331  0126C4  D002               	bra	u5015
  3332  0126C6  9AF0               	bcf	intcon3,5,c	;volatile
  3333  0126C8  D001               	bra	u5016
  3334  0126CA                     u5015:
  3335  0126CA  8AF0               	bsf	intcon3,5,c	;volatile
  3336  0126CC                     u5016:
  3337  0126CC  0012               	return		;funcret
  3338  0126CE                     __end_of_LCDInitPortB:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           intcon3	equ	0xFF0
  3347                           postinc0	equ	0xFEE
  3348                           wreg	equ	0xFE8
  3349                           postdec1	equ	0xFE5
  3350                           fsr1l	equ	0xFE1
  3351                           
  3352 ;; *************** function _LCDInitPortA *****************
  3353 ;; Defined at:
  3354 ;;		line 48 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  preRFIE         1    1[BANK0 ] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : F/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;Total ram usage:        1 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    6
  3375 ;; This function calls:
  3376 ;;		_SPIPut
  3377 ;; This function is called by:
  3378 ;;		_LCD_Initialize
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text6
  3383  0126FE                     __ptext6:
  3384                           	opt stack 0
  3385  0126FE                     _LCDInitPortA:
  3386                           	opt stack 22
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;lcd.c: 50: uint8_t preRFIE = INTCON3bits.INT3IE;
  3390                           
  3391                           ;incstack = 0
  3392  0126FE  0E00               	movlw	0
  3393  012700  BAF0               	btfsc	intcon3,5,c	;volatile
  3394  012702  0E01               	movlw	1
  3395  012704  6F61               	movwf	LCDInitPortA@preRFIE& (0+255),b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;lcd.c: 51: INTCON3bits.INT3IE = 0;
  3399  012706  9AF0               	bcf	intcon3,5,c	;volatile
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;lcd.c: 52: (LATAbits.LATA2) = 0;
  3403  012708  9489               	bcf	3977,2,c	;volatile
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;lcd.c: 53: SPIPut(0x40);
  3407  01270A  0E40               	movlw	64
  3408  01270C  EC13  F095         	call	_SPIPut
  3409                           
  3410                           ;lcd.c: 54: SPIPut(0x00);
  3411  012710  0E00               	movlw	0
  3412  012712  EC13  F095         	call	_SPIPut
  3413                           
  3414                           ;lcd.c: 55: SPIPut(0x00);
  3415  012716  0E00               	movlw	0
  3416  012718  EC13  F095         	call	_SPIPut
  3417                           
  3418                           ;lcd.c: 56: (LATAbits.LATA2) = 1;
  3419  01271C  8489               	bsf	3977,2,c	;volatile
  3420                           
  3421                           ;lcd.c: 57: INTCON3bits.INT3IE = preRFIE;
  3422  01271E  0100               	movlb	0	; () banked
  3423  012720  B161               	btfsc	LCDInitPortA@preRFIE& (0+255),0,b
  3424  012722  D002               	bra	u5005
  3425  012724  9AF0               	bcf	intcon3,5,c	;volatile
  3426  012726  D001               	bra	u5006
  3427  012728                     u5005:
  3428  012728  8AF0               	bsf	intcon3,5,c	;volatile
  3429  01272A                     u5006:
  3430  01272A  0012               	return		;funcret
  3431  01272C                     __end_of_LCDInitPortA:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           intcon	equ	0xFF2
  3438                           intcon2	equ	0xFF1
  3439                           intcon3	equ	0xFF0
  3440                           postinc0	equ	0xFEE
  3441                           wreg	equ	0xFE8
  3442                           postdec1	equ	0xFE5
  3443                           fsr1l	equ	0xFE1
  3444                           
  3445 ;; *************** function _Run_Demo *****************
  3446 ;; Defined at:
  3447 ;;		line 245 in file "../src/task.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:   15
  3468 ;; This function calls:
  3469 ;;		_run_p2p_demo
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text7
  3476  012B08                     __ptext7:
  3477                           	opt stack 0
  3478  012B08                     _Run_Demo:
  3479                           	opt stack 15
  3480                           
  3481                           ;task.c: 249: run_p2p_demo();
  3482                           
  3483                           ;incstack = 0
  3484  012B08  EFC5  F086         	goto	_run_p2p_demo	;wreg free
  3485  012B0C                     __end_of_Run_Demo:
  3486                           	opt stack 0
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           intcon	equ	0xFF2
  3492                           intcon2	equ	0xFF1
  3493                           intcon3	equ	0xFF0
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           
  3499 ;; *************** function _run_p2p_demo *****************
  3500 ;; Defined at:
  3501 ;;		line 72 in file "../src/p2p_demo.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  switch_val      1   67[BANK0 ] unsigned char 
  3506 ;;  select_ed       1   68[BANK0 ] unsigned char 
  3507 ;;  update_ed       1   66[BANK0 ] unsigned char 
  3508 ;;  PressedButto    1   65[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;Total ram usage:       11 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:   14
  3525 ;; This function calls:
  3526 ;;		_ButtonPressed
  3527 ;;		_DELAY_ms
  3528 ;;		_DemoOutput_Instruction
  3529 ;;		_DemoOutput_UnicastFail
  3530 ;;		_DemoOutput_UpdateTxRx
  3531 ;;		_LCD_Erase
  3532 ;;		_LCD_Update
  3533 ;;		_MiApp_BroadcastPacket
  3534 ;;		_MiApp_UnicastConnection
  3535 ;;		_Process_RxMessage
  3536 ;;		___lbmod
  3537 ;;		_sprintf
  3538 ;; This function is called by:
  3539 ;;		_Run_Demo
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text8
  3544  010D8A                     __ptext8:
  3545                           	opt stack 0
  3546  010D8A                     _run_p2p_demo:
  3547                           	opt stack 15
  3548                           
  3549                           ;p2p_demo.c: 75: if (Process_RxMessage())
  3550                           
  3551                           ;incstack = 0
  3552  010D8A  EC67  F093         	call	_Process_RxMessage	;wreg free
  3553  010D8E  0900               	iorlw	0
  3554  010D90  E001               	bz	l6604
  3555  010D92  0012               	return	
  3556  010D94                     l6604:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;p2p_demo.c: 79: else
  3560                           ;p2p_demo.c: 80: {
  3561                           ;p2p_demo.c: 87: uint8_t PressedButton = ButtonPressed();
  3562  010D94  EC72  F08E         	call	_ButtonPressed	;wreg free
  3563  010D98  6FA1               	movwf	run_p2p_demo@PressedButton& (0+255),b
  3564                           
  3565                           ;p2p_demo.c: 88: switch( PressedButton )
  3566  010D9A  D0EE               	goto	l6698
  3567  010D9C                     l967:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;p2p_demo.c: 97: {TxData = 0;};
  3571  010D9C  6BD6               	clrf	_TxData& (0+255),b
  3572                           
  3573                           ;p2p_demo.c: 98: for(i = 0; i < 21; i++)
  3574  010D9E  6BDB               	clrf	_i& (0+255),b
  3575  010DA0                     l6610:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;p2p_demo.c: 99: {
  3579                           ;p2p_demo.c: 101: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3580  010DA0  0E06               	movlw	6
  3581  010DA2  6F60               	movwf	___lbmod@divisor& (0+255),b
  3582  010DA4  51D8               	movf	_TxSynCount& (0+255),w,b
  3583  010DA6  EC2F  F094         	call	___lbmod
  3584  010DAA  0D15               	mullw	21
  3585  010DAC  0EBD               	movlw	low _MiWi
  3586  010DAE  6F9A               	movwf	??_run_p2p_demo& (0+255),b
  3587  010DB0  0EFA               	movlw	high _MiWi
  3588  010DB2  6F9B               	movwf	(??_run_p2p_demo+1)& (0+255),b
  3589  010DB4  50F3               	movf	prodl,w,c
  3590  010DB6  279A               	addwf	??_run_p2p_demo& (0+255),f,b
  3591  010DB8  50F4               	movf	prodh,w,c
  3592  010DBA  239B               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3593  010DBC  51DB               	movf	_i& (0+255),w,b
  3594  010DBE  279A               	addwf	??_run_p2p_demo& (0+255),f,b
  3595  010DC0  0E00               	movlw	0
  3596  010DC2  239B               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3597  010DC4  C09A  FFF6         	movff	??_run_p2p_demo,tblptrl
  3598  010DC8  C09B  FFF7         	movff	??_run_p2p_demo+1,tblptrh
  3599  010DCC                     	if	0	;tblptru may be non-zero
  3600  010DCC                     	endif
  3601  010DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3602  010DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  3603  010DCE  6EF8               	movwf	tblptru,c
  3604  010DD0                     	endif
  3605  010DD0  51D6               	movf	_TxData& (0+255),w,b
  3606  010DD2  0F3A               	addlw	low _TxBuffer
  3607  010DD4  6ED9               	movwf	fsr2l,c
  3608  010DD6  6ADA               	clrf	fsr2h,c
  3609  010DD8  0008               	tblrd		*
  3610  010DDA  CFF5 FFDF          	movff	tablat,indf2
  3611                           
  3612                           ; BSR set to: 0
  3613  010DDE  2BD6               	incf	_TxData& (0+255),f,b
  3614                           
  3615                           ; BSR set to: 0
  3616  010DE0  2BDB               	incf	_i& (0+255),f,b
  3617                           
  3618                           ; BSR set to: 0
  3619  010DE2  0E14               	movlw	20
  3620  010DE4  65DB               	cpfsgt	_i& (0+255),b
  3621  010DE6  D7DC               	goto	l6610
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;p2p_demo.c: 102: }
  3625                           ;p2p_demo.c: 103: TxSynCount++;
  3626  010DE8  2BD8               	incf	_TxSynCount& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;p2p_demo.c: 112: MiApp_BroadcastPacket(0);
  3630  010DEA  0E00               	movlw	0
  3631  010DEC  EC36  F095         	call	_MiApp_BroadcastPacket
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;p2p_demo.c: 121: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  3635  010DF0  C0D5  F091         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3636  010DF4  2BD7               	incf	_TxNum& (0+255),f,b
  3637  010DF6  51D7               	movf	_TxNum& (0+255),w,b
  3638  010DF8  EC5A  F095         	call	_DemoOutput_UpdateTxRx
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;p2p_demo.c: 122: DELAY_ms(1000);
  3642  010DFC  0E03               	movlw	3
  3643  010DFE  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3644  010E00  0EE8               	movlw	232
  3645  010E02  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3646  010E04  EF2E  F08C         	goto	_DELAY_ms	;wreg free
  3647  010E08                     l6628:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;p2p_demo.c: 127: chk_sel_status = 1;
  3651  010E08  0E01               	movlw	1
  3652  010E0A  6FED               	movwf	_chk_sel_status& (0+255),b
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;p2p_demo.c: 128: uint8_t select_ed =0;
  3656  010E0C  6BA4               	clrf	run_p2p_demo@select_ed& (0+255),b
  3657                           
  3658                           ;p2p_demo.c: 129: bool update_ed = 1;
  3659  010E0E  0E01               	movlw	1
  3660  010E10  6FA2               	movwf	run_p2p_demo@update_ed& (0+255),b
  3661                           
  3662                           ;p2p_demo.c: 130: while(update_ed == 1)
  3663  010E12  D0AD               	goto	l6694
  3664  010E14                     l6632:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;p2p_demo.c: 131: {
  3668                           ;p2p_demo.c: 134: LCD_Erase();
  3669  010E14  EC43  F094         	call	_LCD_Erase	;wreg free
  3670                           
  3671                           ;p2p_demo.c: 135: LCD_Erase();
  3672  010E18  EC43  F094         	call	_LCD_Erase	;wreg free
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  3676                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  3677  010E1C  0E82               	movlw	low _LCDText
  3678  010E1E  6F6C               	movwf	sprintf@sp& (0+255),b
  3679  010E20  0E01               	movlw	high _LCDText
  3680  010E22  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3681  010E24  0E11               	movlw	low STR_41
  3682  010E26  6F6E               	movwf	sprintf@f& (0+255),b
  3683  010E28  0EFF               	movlw	high STR_41
  3684  010E2A  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3685  010E2C  C0A4  F070         	movff	run_p2p_demo@select_ed,?_sprintf+4
  3686  010E30  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3687  010E32  51A4               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3688  010E34  0D0A               	mullw	10
  3689  010E36  0E50               	movlw	low _ConnectionTable
  3690  010E38  24F3               	addwf	prodl,w,c
  3691  010E3A  6ED9               	movwf	fsr2l,c
  3692  010E3C  0E01               	movlw	high _ConnectionTable
  3693  010E3E  20F4               	addwfc	prodh,w,c
  3694  010E40  6EDA               	movwf	fsr2h,c
  3695  010E42  50DF               	movf	indf2,w,c
  3696  010E44  6F72               	movwf	(?_sprintf+6)& (0+255),b
  3697  010E46  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3698  010E48  51A4               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3699  010E4A  0D0A               	mullw	10
  3700  010E4C  0E51               	movlw	low (_ConnectionTable+1)
  3701  010E4E  24F3               	addwf	prodl,w,c
  3702  010E50  6ED9               	movwf	fsr2l,c
  3703  010E52  0E01               	movlw	high (_ConnectionTable+1)
  3704  010E54  20F4               	addwfc	prodh,w,c
  3705  010E56  6EDA               	movwf	fsr2h,c
  3706  010E58  50DF               	movf	indf2,w,c
  3707  010E5A  6F74               	movwf	(?_sprintf+8)& (0+255),b
  3708  010E5C  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3709  010E5E  51A4               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3710  010E60  0D0A               	mullw	10
  3711  010E62  0E52               	movlw	low (_ConnectionTable+2)
  3712  010E64  24F3               	addwf	prodl,w,c
  3713  010E66  6ED9               	movwf	fsr2l,c
  3714  010E68  0E01               	movlw	high (_ConnectionTable+2)
  3715  010E6A  20F4               	addwfc	prodh,w,c
  3716  010E6C  6EDA               	movwf	fsr2h,c
  3717  010E6E  50DF               	movf	indf2,w,c
  3718  010E70  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3719  010E72  6B77               	clrf	(?_sprintf+11)& (0+255),b
  3720  010E74  EC00  F080         	call	_sprintf	;wreg free
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;p2p_demo.c: 138: sprintf((char *)&(LCDText[16]), (char*)"RB2: Chnge node");
  3724  010E78  0E92               	movlw	low (_LCDText+16)
  3725  010E7A  6F6C               	movwf	sprintf@sp& (0+255),b
  3726  010E7C  0E01               	movlw	high (_LCDText+16)
  3727  010E7E  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3728  010E80  0EA6               	movlw	low STR_42
  3729  010E82  6F6E               	movwf	sprintf@f& (0+255),b
  3730  010E84  0EFF               	movlw	high STR_42
  3731  010E86  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3732  010E88  EC00  F080         	call	_sprintf	;wreg free
  3733                           
  3734                           ;p2p_demo.c: 139: LCD_Update();
  3735  010E8C  ECF4  F08E         	call	_LCD_Update	;wreg free
  3736                           
  3737                           ;p2p_demo.c: 140: LCD_Update();
  3738  010E90  ECF4  F08E         	call	_LCD_Update	;wreg free
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;p2p_demo.c: 142: chk_sel_status = 1;
  3742  010E94  0E01               	movlw	1
  3743  010E96  6FED               	movwf	_chk_sel_status& (0+255),b
  3744                           
  3745                           ;p2p_demo.c: 144: while(chk_sel_status)
  3746  010E98  D068               	goto	l6692
  3747  010E9A                     l6640:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;p2p_demo.c: 145: {
  3751                           ;p2p_demo.c: 146: uint8_t switch_val = ButtonPressed();
  3752  010E9A  EC72  F08E         	call	_ButtonPressed	;wreg free
  3753  010E9E  6FA3               	movwf	run_p2p_demo@switch_val& (0+255),b
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;p2p_demo.c: 148: Process_RxMessage();
  3757  010EA0  EC67  F093         	call	_Process_RxMessage	;wreg free
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;p2p_demo.c: 149: if(switch_val == 1)
  3761  010EA4  05A3               	decf	run_p2p_demo@switch_val& (0+255),w,b
  3762  010EA6  E144               	bnz	l6682
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;p2p_demo.c: 150: {
  3766                           ;p2p_demo.c: 151: update_ed = 0;
  3767  010EA8  6BA2               	clrf	run_p2p_demo@update_ed& (0+255),b
  3768                           
  3769                           ;p2p_demo.c: 152: chk_sel_status = 0;
  3770  010EAA  6BED               	clrf	_chk_sel_status& (0+255),b
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;p2p_demo.c: 154: TxSynCount2++;
  3774  010EAC  2BD9               	incf	_TxSynCount2& (0+255),f,b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;p2p_demo.c: 155: {TxData = 0;};
  3778  010EAE  6BD6               	clrf	_TxData& (0+255),b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;p2p_demo.c: 156: for(i = 0; i < 11; i++)
  3782  010EB0  6BDB               	clrf	_i& (0+255),b
  3783  010EB2                     l6658:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;p2p_demo.c: 157: {
  3787                           ;p2p_demo.c: 159: TxBuffer[TxData++] = DE[(TxSynCount2%6)][i];
  3788  010EB2  0E06               	movlw	6
  3789  010EB4  6F60               	movwf	___lbmod@divisor& (0+255),b
  3790  010EB6  51D9               	movf	_TxSynCount2& (0+255),w,b
  3791  010EB8  EC2F  F094         	call	___lbmod
  3792  010EBC  0D0B               	mullw	11
  3793  010EBE  0E3B               	movlw	low _DE
  3794  010EC0  6F9A               	movwf	??_run_p2p_demo& (0+255),b
  3795  010EC2  0EFB               	movlw	high _DE
  3796  010EC4  6F9B               	movwf	(??_run_p2p_demo+1)& (0+255),b
  3797  010EC6  50F3               	movf	prodl,w,c
  3798  010EC8  279A               	addwf	??_run_p2p_demo& (0+255),f,b
  3799  010ECA  50F4               	movf	prodh,w,c
  3800  010ECC  239B               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3801  010ECE  51DB               	movf	_i& (0+255),w,b
  3802  010ED0  279A               	addwf	??_run_p2p_demo& (0+255),f,b
  3803  010ED2  0E00               	movlw	0
  3804  010ED4  239B               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3805  010ED6  C09A  FFF6         	movff	??_run_p2p_demo,tblptrl
  3806  010EDA  C09B  FFF7         	movff	??_run_p2p_demo+1,tblptrh
  3807  010EDE                     	if	0	;tblptru may be non-zero
  3808  010EDE                     	endif
  3809  010EDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3810  010EDE  0E00               	movlw	low (__mediumconst shr (0+16))
  3811  010EE0  6EF8               	movwf	tblptru,c
  3812  010EE2                     	endif
  3813  010EE2  51D6               	movf	_TxData& (0+255),w,b
  3814  010EE4  0F3A               	addlw	low _TxBuffer
  3815  010EE6  6ED9               	movwf	fsr2l,c
  3816  010EE8  6ADA               	clrf	fsr2h,c
  3817  010EEA  0008               	tblrd		*
  3818  010EEC  CFF5 FFDF          	movff	tablat,indf2
  3819                           
  3820                           ; BSR set to: 0
  3821  010EF0  2BD6               	incf	_TxData& (0+255),f,b
  3822                           
  3823                           ; BSR set to: 0
  3824  010EF2  2BDB               	incf	_i& (0+255),f,b
  3825                           
  3826                           ; BSR set to: 0
  3827  010EF4  0E0A               	movlw	10
  3828  010EF6  65DB               	cpfsgt	_i& (0+255),b
  3829  010EF8  D7DC               	goto	l6658
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;p2p_demo.c: 160: }
  3833                           ;p2p_demo.c: 161: TxSynCount2++;
  3834  010EFA  2BD9               	incf	_TxSynCount2& (0+255),f,b
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;p2p_demo.c: 162: if( MiApp_UnicastConnection(select_ed, 1) == 0 )
  3838  010EFC  0E01               	movlw	1
  3839  010EFE  6F94               	movwf	MiApp_UnicastConnection@SecEn& (0+255),b
  3840  010F00  51A4               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3841  010F02  EC97  F092         	call	_MiApp_UnicastConnection
  3842  010F06  0900               	iorlw	0
  3843  010F08  E103               	bnz	l6672
  3844                           
  3845                           ;p2p_demo.c: 163: {
  3846                           ;p2p_demo.c: 164: DemoOutput_UnicastFail();
  3847  010F0A  ECD7  F094         	call	_DemoOutput_UnicastFail	;wreg free
  3848                           
  3849                           ;p2p_demo.c: 165: }
  3850  010F0E  D002               	goto	l6674
  3851  010F10                     l6672:
  3852                           
  3853                           ;p2p_demo.c: 166: else
  3854                           ;p2p_demo.c: 167: {
  3855                           ;p2p_demo.c: 169: TxNum++;
  3856  010F10  0100               	movlb	0	; () banked
  3857  010F12  2BD7               	incf	_TxNum& (0+255),f,b
  3858  010F14                     l6674:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;p2p_demo.c: 170: }
  3862                           ;p2p_demo.c: 172: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3863  010F14  C0D5  F091         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3864  010F18  51D7               	movf	_TxNum& (0+255),w,b
  3865  010F1A  EC5A  F095         	call	_DemoOutput_UpdateTxRx
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;p2p_demo.c: 173: DELAY_ms(1000);
  3869  010F1E  0E03               	movlw	3
  3870  010F20  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3871  010F22  0EE8               	movlw	232
  3872  010F24  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3873  010F26  EC2E  F08C         	call	_DELAY_ms	;wreg free
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;p2p_demo.c: 174: DemoOutput_Instruction();
  3877  010F2A  EC89  F095         	call	_DemoOutput_Instruction	;wreg free
  3878                           
  3879                           ;p2p_demo.c: 176: break;
  3880  010F2E  D01F               	goto	l6694
  3881  010F30                     l6682:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;p2p_demo.c: 179: else if(switch_val == 2)
  3885  010F30  0E02               	movlw	2
  3886  010F32  19A3               	xorwf	run_p2p_demo@switch_val& (0+255),w,b
  3887  010F34  E11A               	bnz	l6692
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;p2p_demo.c: 180: {
  3891                           ;p2p_demo.c: 181: if (select_ed > conn_size-2)
  3892  010F36  51A4               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3893  010F38  6F9A               	movwf	??_run_p2p_demo& (0+255),b
  3894  010F3A  6B9B               	clrf	(??_run_p2p_demo+1)& (0+255),b
  3895  010F3C  0EFE               	movlw	254
  3896  010F3E  6F9C               	movwf	(??_run_p2p_demo+2)& (0+255),b
  3897  010F40  699D               	setf	(??_run_p2p_demo+3)& (0+255),b
  3898  010F42  51EA               	movf	_conn_size& (0+255),w,b
  3899  010F44  6F9E               	movwf	(??_run_p2p_demo+4)& (0+255),b
  3900  010F46  6B9F               	clrf	(??_run_p2p_demo+5)& (0+255),b
  3901  010F48  519C               	movf	(??_run_p2p_demo+2)& (0+255),w,b
  3902  010F4A  279E               	addwf	(??_run_p2p_demo+4)& (0+255),f,b
  3903  010F4C  519D               	movf	(??_run_p2p_demo+3)& (0+255),w,b
  3904  010F4E  239F               	addwfc	(??_run_p2p_demo+5)& (0+255),f,b
  3905  010F50  519A               	movf	??_run_p2p_demo& (0+255),w,b
  3906  010F52  5D9E               	subwf	(??_run_p2p_demo+4)& (0+255),w,b
  3907  010F54  519F               	movf	(??_run_p2p_demo+5)& (0+255),w,b
  3908  010F56  0A80               	xorlw	128
  3909  010F58  6FA0               	movwf	(??_run_p2p_demo+6)& (0+255),b
  3910  010F5A  519B               	movf	(??_run_p2p_demo+1)& (0+255),w,b
  3911  010F5C  0A80               	xorlw	128
  3912  010F5E  59A0               	subwfb	(??_run_p2p_demo+6)& (0+255),w,b
  3913  010F60  E202               	bc	l6688
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;p2p_demo.c: 182: {
  3917                           ;p2p_demo.c: 184: select_ed = 0;
  3918  010F62  6BA4               	clrf	run_p2p_demo@select_ed& (0+255),b
  3919                           
  3920                           ;p2p_demo.c: 185: }
  3921  010F64  D001               	goto	l6690
  3922  010F66                     l6688:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;p2p_demo.c: 186: else
  3926                           ;p2p_demo.c: 187: {
  3927                           ;p2p_demo.c: 189: select_ed = select_ed+1;
  3928  010F66  2BA4               	incf	run_p2p_demo@select_ed& (0+255),f,b
  3929  010F68                     l6690:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;p2p_demo.c: 190: }
  3933                           ;p2p_demo.c: 191: chk_sel_status = 0;
  3934  010F68  6BED               	clrf	_chk_sel_status& (0+255),b
  3935  010F6A                     l6692:
  3936                           
  3937                           ; BSR set to: 0
  3938  010F6A  51ED               	movf	_chk_sel_status& (0+255),w,b
  3939  010F6C  E196               	bnz	l6640
  3940  010F6E                     l6694:
  3941  010F6E  0100               	movlb	0	; () banked
  3942  010F70  05A2               	decf	run_p2p_demo@update_ed& (0+255),w,b
  3943  010F72  E101 D74F          	bz	l6632
  3944  010F76  0012               	return	
  3945  010F78                     l6698:
  3946                           
  3947                           ; BSR set to: 0
  3948  010F78  51A1               	movf	run_p2p_demo@PressedButton& (0+255),w,b
  3949                           
  3950                           ; Switch size 1, requested type "speed"
  3951                           ; Number of cases is 2, Range of values is 1 to 2
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            7     4 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956  010F7A  0A01               	xorlw	1	; case 1
  3957  010F7C  E101 D70E          	bz	l967
  3958  010F80  0A03               	xorlw	3	; case 2
  3959  010F82  E101 D741          	bz	l6628
  3960  010F86  0012               	return		;funcret
  3961  010F88                     __end_of_run_p2p_demo:
  3962                           	opt stack 0
  3963                           tblptru	equ	0xFF8
  3964                           tblptrh	equ	0xFF7
  3965                           tblptrl	equ	0xFF6
  3966                           tablat	equ	0xFF5
  3967                           prodh	equ	0xFF4
  3968                           prodl	equ	0xFF3
  3969                           intcon	equ	0xFF2
  3970                           intcon2	equ	0xFF1
  3971                           intcon3	equ	0xFF0
  3972                           postinc0	equ	0xFEE
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1l	equ	0xFE1
  3976                           indf2	equ	0xFDF
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           
  3980 ;; *************** function _Process_RxMessage *****************
  3981 ;; Defined at:
  3982 ;;		line 39 in file "../src/p2p_demo.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : F/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        0 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:   13
  4003 ;; This function calls:
  4004 ;;		_DELAY_ms
  4005 ;;		_DemoOutput_HandleMessage
  4006 ;;		_DemoOutput_Instruction
  4007 ;;		_DemoOutput_UpdateTxRx
  4008 ;;		_MiApp_DiscardMessage
  4009 ;;		_MiApp_MessageAvailable
  4010 ;; This function is called by:
  4011 ;;		_run_p2p_demo
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text9
  4016  0126CE                     __ptext9:
  4017                           	opt stack 0
  4018  0126CE                     _Process_RxMessage:
  4019                           	opt stack 15
  4020                           
  4021                           ;p2p_demo.c: 47: if( MiApp_MessageAvailable() )
  4022                           
  4023                           ;incstack = 0
  4024  0126CE  EC6D  F095         	call	_MiApp_MessageAvailable	;wreg free
  4025  0126D2  0900               	iorlw	0
  4026  0126D4  B4D8               	btfsc	status,2,c
  4027  0126D6  0012               	return	
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;p2p_demo.c: 48: {
  4031                           ;p2p_demo.c: 55: DemoOutput_HandleMessage();
  4032  0126D8  EC96  F08C         	call	_DemoOutput_HandleMessage	;wreg free
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;p2p_demo.c: 57: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  4036  0126DC  2BD5               	incf	_RxNum& (0+255),f,b
  4037  0126DE  C0D5  F091         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  4038  0126E2  51D7               	movf	_TxNum& (0+255),w,b
  4039  0126E4  EC5A  F095         	call	_DemoOutput_UpdateTxRx
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;p2p_demo.c: 59: LATDbits.LATD6 ^= 1;
  4043  0126E8  7C8C               	btg	3980,6,c	;volatile
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;p2p_demo.c: 60: DELAY_ms(2000);
  4047  0126EA  0E07               	movlw	7
  4048  0126EC  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4049  0126EE  0ED0               	movlw	208
  4050  0126F0  6F60               	movwf	DELAY_ms@ms& (0+255),b
  4051  0126F2  EC2E  F08C         	call	_DELAY_ms	;wreg free
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;p2p_demo.c: 61: DemoOutput_Instruction();
  4055  0126F6  EC89  F095         	call	_DemoOutput_Instruction	;wreg free
  4056                           
  4057                           ;p2p_demo.c: 68: MiApp_DiscardMessage();
  4058  0126FA  EF80  F095         	goto	_MiApp_DiscardMessage	;wreg free
  4059  0126FE                     __end_of_Process_RxMessage:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           intcon	equ	0xFF2
  4068                           intcon2	equ	0xFF1
  4069                           intcon3	equ	0xFF0
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           postdec1	equ	0xFE5
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           fsr2h	equ	0xFDA
  4076                           fsr2l	equ	0xFD9
  4077                           status	equ	0xFD8
  4078                           
  4079 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4080 ;; Defined at:
  4081 ;;		line 280 in file "../src/demo_ouput.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  TxNum           1    wreg     unsigned char 
  4084 ;;  RxNum           1   49[BANK0 ] unsigned char 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  TxNum           1   50[BANK0 ] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : F/0
  4093 ;;		On exit  : F/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:   10
  4103 ;; This function calls:
  4104 ;;		_LCDTRXCount
  4105 ;; This function is called by:
  4106 ;;		_Process_RxMessage
  4107 ;;		_run_p2p_demo
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text10
  4112  012AB4                     __ptext10:
  4113                           	opt stack 0
  4114  012AB4                     _DemoOutput_UpdateTxRx:
  4115                           	opt stack 17
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;incstack = 0
  4119                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4120  012AB4  6F92               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4121                           
  4122                           ;demo_ouput.c: 282: LCDTRXCount(TxNum, RxNum);
  4123  012AB6  C091  F08F         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4124  012ABA  0100               	movlb	0	; () banked
  4125  012ABC  5192               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4126  012ABE  EFC5  F091         	goto	_LCDTRXCount
  4127  012AC2                     __end_of_DemoOutput_UpdateTxRx:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           intcon2	equ	0xFF1
  4137                           intcon3	equ	0xFF0
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           postdec1	equ	0xFE5
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _LCDTRXCount *****************
  4148 ;; Defined at:
  4149 ;;		line 307 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  txCount         1    wreg     unsigned char 
  4152 ;;  rxCount         1   47[BANK0 ] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  txCount         1   48[BANK0 ] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : F/0
  4161 ;;		On exit  : F/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4164 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    9
  4171 ;; This function calls:
  4172 ;;		_LCD_Erase
  4173 ;;		_LCD_Update
  4174 ;;		_sprintf
  4175 ;; This function is called by:
  4176 ;;		_DemoOutput_UpdateTxRx
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text11
  4181  01238A                     __ptext11:
  4182                           	opt stack 0
  4183  01238A                     _LCDTRXCount:
  4184                           	opt stack 17
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;incstack = 0
  4188                           ;LCDTRXCount@txCount stored from wreg
  4189  01238A  6F90               	movwf	LCDTRXCount@txCount& (0+255),b
  4190                           
  4191                           ;lcd.c: 310: LCD_Erase();
  4192  01238C  EC43  F094         	call	_LCD_Erase	;wreg free
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;lcd.c: 311: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  4196  012390  0E82               	movlw	low _LCDText
  4197  012392  6F6C               	movwf	sprintf@sp& (0+255),b
  4198  012394  0E01               	movlw	high _LCDText
  4199  012396  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4200  012398  0E95               	movlw	low STR_14
  4201  01239A  6F6E               	movwf	sprintf@f& (0+255),b
  4202  01239C  0EFF               	movlw	high STR_14
  4203  01239E  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4204  0123A0  C090  F070         	movff	LCDTRXCount@txCount,?_sprintf+4
  4205  0123A4  6B71               	clrf	(?_sprintf+5)& (0+255),b
  4206  0123A6  EC00  F080         	call	_sprintf	;wreg free
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;lcd.c: 312: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  4210  0123AA  0E92               	movlw	low (_LCDText+16)
  4211  0123AC  6F6C               	movwf	sprintf@sp& (0+255),b
  4212  0123AE  0E01               	movlw	high (_LCDText+16)
  4213  0123B0  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4214  0123B2  0E84               	movlw	low STR_15
  4215  0123B4  6F6E               	movwf	sprintf@f& (0+255),b
  4216  0123B6  0EFF               	movlw	high STR_15
  4217  0123B8  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4218  0123BA  C08F  F070         	movff	LCDTRXCount@rxCount,?_sprintf+4
  4219  0123BE  6B71               	clrf	(?_sprintf+5)& (0+255),b
  4220  0123C0  EC00  F080         	call	_sprintf	;wreg free
  4221                           
  4222                           ;lcd.c: 313: LCD_Update();
  4223  0123C4  EFF4  F08E         	goto	_LCD_Update	;wreg free
  4224  0123C8                     __end_of_LCDTRXCount:
  4225                           	opt stack 0
  4226                           tblptru	equ	0xFF8
  4227                           tblptrh	equ	0xFF7
  4228                           tblptrl	equ	0xFF6
  4229                           tablat	equ	0xFF5
  4230                           prodh	equ	0xFF4
  4231                           prodl	equ	0xFF3
  4232                           intcon	equ	0xFF2
  4233                           intcon2	equ	0xFF1
  4234                           intcon3	equ	0xFF0
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           postdec1	equ	0xFE5
  4238                           fsr1l	equ	0xFE1
  4239                           indf2	equ	0xFDF
  4240                           fsr2h	equ	0xFDA
  4241                           fsr2l	equ	0xFD9
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _DemoOutput_HandleMessage *****************
  4245 ;; Defined at:
  4246 ;;		line 238 in file "../src/demo_ouput.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  i               1    6[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : F/0
  4257 ;;		On exit  : F/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        3 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    7
  4267 ;; This function calls:
  4268 ;;		_CONSOLE_PrintHex
  4269 ;;		_CONSOLE_Put
  4270 ;;		_CONSOLE_PutString
  4271 ;; This function is called by:
  4272 ;;		_Process_RxMessage
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text12
  4277  01192C                     __ptext12:
  4278                           	opt stack 0
  4279  01192C                     _DemoOutput_HandleMessage:
  4280                           	opt stack 20
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;demo_ouput.c: 240: uint8_t i;
  4284                           ;demo_ouput.c: 242: if( rxMessage.flags.bits.secEn )
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;incstack = 0
  4288  01192C  A7AE               	btfss	_rxMessage& (0+255),3,b
  4289  01192E  D006               	goto	l5894
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;demo_ouput.c: 243: {
  4293                           ;demo_ouput.c: 244: CONSOLE_PutString((char *)"Secured ");
  4294  011930  0EEA               	movlw	low STR_32
  4295  011932  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4296  011934  0EFF               	movlw	high STR_32
  4297  011936  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4298  011938  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4299  01193C                     l5894:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;demo_ouput.c: 245: }
  4303                           ;demo_ouput.c: 247: if( rxMessage.flags.bits.broadcast )
  4304  01193C  51AE               	movf	_rxMessage& (0+255),w,b
  4305  01193E  0B03               	andlw	3
  4306  011940  E007               	bz	l5898
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;demo_ouput.c: 248: {
  4310                           ;demo_ouput.c: 249: CONSOLE_PutString((char *)"Broadcast Packet with RSSI ");
  4311  011942  0EAC               	movlw	low STR_33
  4312  011944  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4313  011946  0EFE               	movlw	high STR_33
  4314  011948  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4315  01194A  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4316                           
  4317                           ;demo_ouput.c: 250: }
  4318  01194E  D006               	goto	l5900
  4319  011950                     l5898:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;demo_ouput.c: 251: else
  4323                           ;demo_ouput.c: 252: {
  4324                           ;demo_ouput.c: 253: CONSOLE_PutString((char *)"Unicast Packet with RSSI ");
  4325  011950  0EC8               	movlw	low STR_34
  4326  011952  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4327  011954  0EFE               	movlw	high STR_34
  4328  011956  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4329  011958  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4330  01195C                     l5900:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;demo_ouput.c: 254: }
  4334                           ;demo_ouput.c: 255: CONSOLE_PrintHex(rxMessage.PacketRSSI);
  4335  01195C  51B6               	movf	(_rxMessage+8)& (0+255),w,b
  4336  01195E  EC5D  F092         	call	_CONSOLE_PrintHex
  4337                           
  4338                           ;demo_ouput.c: 256: if( rxMessage.flags.bits.srcPrsnt )
  4339  011962  0100               	movlb	0	; () banked
  4340  011964  ADAE               	btfss	_rxMessage& (0+255),6,b
  4341  011966  D02E               	goto	l5920
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;demo_ouput.c: 257: {
  4345                           ;demo_ouput.c: 258: CONSOLE_PutString((char *)" from ");
  4346  011968  0EF3               	movlw	low STR_35
  4347  01196A  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4348  01196C  0EFF               	movlw	high STR_35
  4349  01196E  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4350  011970  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;demo_ouput.c: 259: if( rxMessage.flags.bits.altSrcAddr )
  4354  011974  AFAE               	btfss	_rxMessage& (0+255),7,b
  4355  011976  D011               	goto	l855
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;demo_ouput.c: 260: {
  4359                           ;demo_ouput.c: 261: CONSOLE_PrintHex( rxMessage.SourceAddress[1]);
  4360  011978  EE20 F001          	lfsr	2,1
  4361  01197C  51B1               	movf	(_rxMessage+3)& (0+255),w,b
  4362  01197E  26D9               	addwf	fsr2l,f,c
  4363  011980  51B2               	movf	(_rxMessage+4)& (0+255),w,b
  4364  011982  22DA               	addwfc	fsr2h,f,c
  4365  011984  50DF               	movf	indf2,w,c
  4366  011986  EC5D  F092         	call	_CONSOLE_PrintHex
  4367                           
  4368                           ;demo_ouput.c: 262: CONSOLE_PrintHex( rxMessage.SourceAddress[0]);
  4369  01198A  C0B1  FFD9         	movff	_rxMessage+3,fsr2l
  4370  01198E  C0B2  FFDA         	movff	_rxMessage+4,fsr2h
  4371  011992  50DF               	movf	indf2,w,c
  4372  011994  EC5D  F092         	call	_CONSOLE_PrintHex
  4373                           
  4374                           ;demo_ouput.c: 263: }
  4375  011998  D015               	goto	l5920
  4376  01199A                     l855:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;demo_ouput.c: 264: else
  4380                           ;demo_ouput.c: 265: {
  4381                           ;demo_ouput.c: 266: for(i = 0; i < 8; i++)
  4382  01199A  6B66               	clrf	DemoOutput_HandleMessage@i& (0+255),b
  4383  01199C                     l5914:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;demo_ouput.c: 267: {
  4387                           ;demo_ouput.c: 268: CONSOLE_PrintHex(rxMessage.SourceAddress[8-1-i]);
  4388  01199C  5166               	movf	DemoOutput_HandleMessage@i& (0+255),w,b
  4389  01199E  5DB1               	subwf	(_rxMessage+3)& (0+255),w,b
  4390  0119A0  6F64               	movwf	??_DemoOutput_HandleMessage& (0+255),b
  4391  0119A2  0E00               	movlw	0
  4392  0119A4  59B2               	subwfb	(_rxMessage+4)& (0+255),w,b
  4393  0119A6  6F65               	movwf	(??_DemoOutput_HandleMessage+1)& (0+255),b
  4394  0119A8  0E07               	movlw	7
  4395  0119AA  2564               	addwf	??_DemoOutput_HandleMessage& (0+255),w,b
  4396  0119AC  6ED9               	movwf	fsr2l,c
  4397  0119AE  0E00               	movlw	0
  4398  0119B0  2165               	addwfc	(??_DemoOutput_HandleMessage+1)& (0+255),w,b
  4399  0119B2  6EDA               	movwf	fsr2h,c
  4400  0119B4  50DF               	movf	indf2,w,c
  4401  0119B6  EC5D  F092         	call	_CONSOLE_PrintHex
  4402  0119BA  0100               	movlb	0	; () banked
  4403  0119BC  2B66               	incf	DemoOutput_HandleMessage@i& (0+255),f,b
  4404                           
  4405                           ; BSR set to: 0
  4406  0119BE  0E07               	movlw	7
  4407  0119C0  6566               	cpfsgt	DemoOutput_HandleMessage@i& (0+255),b
  4408  0119C2  D7EC               	goto	l5914
  4409  0119C4                     l5920:
  4410                           
  4411                           ;demo_ouput.c: 269: }
  4412                           ;demo_ouput.c: 270: }
  4413                           ;demo_ouput.c: 271: }
  4414                           ;demo_ouput.c: 272: CONSOLE_PutString((char *)": ");
  4415  0119C4  0EDD               	movlw	low (STR_3+9)
  4416  0119C6  0100               	movlb	0	; () banked
  4417  0119C8  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4418  0119CA  0EFF               	movlw	high (STR_3+9)
  4419  0119CC  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4420  0119CE  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;demo_ouput.c: 274: for(i = 0; i < rxMessage.PayloadSize; i++)
  4424  0119D2  6B66               	clrf	DemoOutput_HandleMessage@i& (0+255),b
  4425  0119D4  D00B               	goto	l5928
  4426  0119D6                     l5924:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;demo_ouput.c: 275: {
  4430                           ;demo_ouput.c: 276: CONSOLE_Put(rxMessage.Payload[i]);
  4431  0119D6  5166               	movf	DemoOutput_HandleMessage@i& (0+255),w,b
  4432  0119D8  25B3               	addwf	(_rxMessage+5)& (0+255),w,b
  4433  0119DA  6ED9               	movwf	fsr2l,c
  4434  0119DC  0E00               	movlw	0
  4435  0119DE  21B4               	addwfc	(_rxMessage+6)& (0+255),w,b
  4436  0119E0  6EDA               	movwf	fsr2h,c
  4437  0119E2  50DF               	movf	indf2,w,c
  4438  0119E4  EC61  F095         	call	_CONSOLE_Put
  4439  0119E8  0100               	movlb	0	; () banked
  4440  0119EA  2B66               	incf	DemoOutput_HandleMessage@i& (0+255),f,b
  4441  0119EC                     l5928:
  4442                           
  4443                           ; BSR set to: 0
  4444  0119EC  51B5               	movf	(_rxMessage+7)& (0+255),w,b
  4445  0119EE  5D66               	subwf	DemoOutput_HandleMessage@i& (0+255),w,b
  4446  0119F0  E3F2               	bnc	l5924
  4447                           
  4448                           ; BSR set to: 0
  4449  0119F2  0012               	return		;funcret
  4450  0119F4                     __end_of_DemoOutput_HandleMessage:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodh	equ	0xFF4
  4457                           prodl	equ	0xFF3
  4458                           intcon	equ	0xFF2
  4459                           intcon2	equ	0xFF1
  4460                           intcon3	equ	0xFF0
  4461                           postinc0	equ	0xFEE
  4462                           wreg	equ	0xFE8
  4463                           postdec1	equ	0xFE5
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _MiApp_UnicastConnection *****************
  4471 ;; Defined at:
  4472 ;;		line 1780 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  ConnectionIn    1    wreg     unsigned char 
  4475 ;;  SecEn           1   52[BANK0 ] unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  ConnectionIn    1   53[BANK0 ] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      unsigned char 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : F/0
  4484 ;;		On exit  : E/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        2 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:   12
  4494 ;; This function calls:
  4495 ;;		_MiApp_UnicastAddress
  4496 ;; This function is called by:
  4497 ;;		_run_p2p_demo
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text13
  4502  01252E                     __ptext13:
  4503                           	opt stack 0
  4504  01252E                     _MiApp_UnicastConnection:
  4505                           	opt stack 16
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;incstack = 0
  4509                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  4510  01252E  6F95               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  4511                           
  4512                           ;miwi_p2p.c: 1783: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  4513  012530  0100               	movlb	0	; () banked
  4514  012532  5195               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  4515  012534  0D0A               	mullw	10
  4516  012536  0E58               	movlw	low (_ConnectionTable+8)
  4517  012538  24F3               	addwf	prodl,w,c
  4518  01253A  6ED9               	movwf	fsr2l,c
  4519  01253C  0E01               	movlw	high (_ConnectionTable+8)
  4520  01253E  20F4               	addwfc	prodh,w,c
  4521  012540  6EDA               	movwf	fsr2h,c
  4522  012542  0101               	movlb	1	; () banked
  4523  012544  AEDF               	btfss	indf2,7,c
  4524  012546  0C00               	retlw	0
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;miwi_p2p.c: 1784: {
  4528                           ;miwi_p2p.c: 1817: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  4529  012548  0100               	movlb	0	; () banked
  4530  01254A  5195               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  4531  01254C  0D0A               	mullw	10
  4532  01254E  0E50               	movlw	low _ConnectionTable
  4533  012550  24F3               	addwf	prodl,w,c
  4534  012552  6F90               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  4535  012554  0E01               	movlw	high _ConnectionTable
  4536  012556  20F4               	addwfc	prodh,w,c
  4537  012558  6F91               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  4538  01255A  0E01               	movlw	1
  4539  01255C  6F92               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4540  01255E  C094  F093         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  4541  012562  EF2C  F095         	goto	_MiApp_UnicastAddress	;wreg free
  4542  012566                     __end_of_MiApp_UnicastConnection:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           intcon	equ	0xFF2
  4551                           intcon2	equ	0xFF1
  4552                           intcon3	equ	0xFF0
  4553                           postinc0	equ	0xFEE
  4554                           wreg	equ	0xFE8
  4555                           postdec1	equ	0xFE5
  4556                           fsr1l	equ	0xFE1
  4557                           indf2	equ	0xFDF
  4558                           fsr2h	equ	0xFDA
  4559                           fsr2l	equ	0xFD9
  4560                           status	equ	0xFD8
  4561                           
  4562 ;; *************** function _MiApp_UnicastAddress *****************
  4563 ;; Defined at:
  4564 ;;		line 1859 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  DestinationA    2   48[BANK0 ] PTR unsigned char 
  4567 ;;		 -> ConnectionTable(50), 
  4568 ;;  PermanentAdd    1   50[BANK0 ] unsigned char 
  4569 ;;  SecEn           1   51[BANK0 ] unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : F/0
  4578 ;;		On exit  : F/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        4 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:   11
  4588 ;; This function calls:
  4589 ;;		_SendPacket
  4590 ;; This function is called by:
  4591 ;;		_MiApp_UnicastConnection
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text14
  4596  012A58                     __ptext14:
  4597                           	opt stack 0
  4598  012A58                     _MiApp_UnicastAddress:
  4599                           	opt stack 16
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;miwi_p2p.c: 1892: return SendPacket(0, DestinationAddress, 0, SecEn);
  4603                           
  4604                           ;incstack = 0
  4605  012A58  C090  F086         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  4606  012A5C  C091  F087         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  4607  012A60  0E00               	movlw	0
  4608  012A62  6B88               	clrf	SendPacket@isCommand& (0+255),b
  4609  012A64  C093  F089         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  4610  012A68  EF96  F08D         	goto	_SendPacket
  4611  012A6C                     __end_of_MiApp_UnicastAddress:
  4612                           	opt stack 0
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           prodh	equ	0xFF4
  4618                           prodl	equ	0xFF3
  4619                           intcon	equ	0xFF2
  4620                           intcon2	equ	0xFF1
  4621                           intcon3	equ	0xFF0
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           postdec1	equ	0xFE5
  4625                           fsr1l	equ	0xFE1
  4626                           indf2	equ	0xFDF
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _MiApp_BroadcastPacket *****************
  4632 ;; Defined at:
  4633 ;;		line 1709 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  SecEn           1    wreg     unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  SecEn           1   48[BANK0 ] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      unsigned char 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : F/0
  4644 ;;		On exit  : F/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:   11
  4654 ;; This function calls:
  4655 ;;		_SendPacket
  4656 ;; This function is called by:
  4657 ;;		_run_p2p_demo
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text15
  4662  012A6C                     __ptext15:
  4663                           	opt stack 0
  4664  012A6C                     _MiApp_BroadcastPacket:
  4665                           	opt stack 17
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;incstack = 0
  4669                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  4670  012A6C  6F90               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  4671                           
  4672                           ;miwi_p2p.c: 1739: return SendPacket(1, (0), 0, SecEn);
  4673                           ;	Return value of _MiApp_BroadcastPacket is never used
  4674  012A6E  0100               	movlb	0	; () banked
  4675  012A70  6B86               	clrf	SendPacket@DestinationAddress& (0+255),b
  4676  012A72  6B87               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  4677  012A74  6B88               	clrf	SendPacket@isCommand& (0+255),b
  4678  012A76  C090  F089         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  4679  012A7A  0E01               	movlw	1
  4680  012A7C  EF96  F08D         	goto	_SendPacket
  4681  012A80                     __end_of_MiApp_BroadcastPacket:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           intcon	equ	0xFF2
  4690                           intcon2	equ	0xFF1
  4691                           intcon3	equ	0xFF0
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           postdec1	equ	0xFE5
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           fsr2h	equ	0xFDA
  4698                           fsr2l	equ	0xFD9
  4699                           status	equ	0xFD8
  4700                           
  4701 ;; *************** function _DemoOutput_UnicastFail *****************
  4702 ;; Defined at:
  4703 ;;		line 294 in file "../src/demo_ouput.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : E/0
  4714 ;;		On exit  : F/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:   10
  4724 ;; This function calls:
  4725 ;;		_CONSOLE_PutString
  4726 ;;		_LCDDisplay
  4727 ;; This function is called by:
  4728 ;;		_run_p2p_demo
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text16
  4733  0129AE                     __ptext16:
  4734                           	opt stack 0
  4735  0129AE                     _DemoOutput_UnicastFail:
  4736                           	opt stack 18
  4737                           
  4738                           ;demo_ouput.c: 297: CONSOLE_PutString((char*)"\r\nUnicast Failed\r\n");
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;incstack = 0
  4742  0129AE  0E3C               	movlw	low STR_39
  4743  0129B0  0100               	movlb	0	; () banked
  4744  0129B2  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  4745  0129B4  0EFF               	movlw	high STR_39
  4746  0129B6  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  4747  0129B8  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;demo_ouput.c: 299: LCDDisplay((char *)" Unicast Failed", 0, 1);
  4751  0129BC  0EB6               	movlw	low STR_40
  4752  0129BE  6F8F               	movwf	LCDDisplay@text& (0+255),b
  4753  0129C0  0EFF               	movlw	high STR_40
  4754  0129C2  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  4755  0129C4  6B91               	clrf	LCDDisplay@value& (0+255),b
  4756  0129C6  0E01               	movlw	1
  4757  0129C8  6F92               	movwf	LCDDisplay@delay& (0+255),b
  4758  0129CA  EFE4  F091         	goto	_LCDDisplay	;wreg free
  4759  0129CE                     __end_of_DemoOutput_UnicastFail:
  4760                           	opt stack 0
  4761                           tblptru	equ	0xFF8
  4762                           tblptrh	equ	0xFF7
  4763                           tblptrl	equ	0xFF6
  4764                           tablat	equ	0xFF5
  4765                           prodh	equ	0xFF4
  4766                           prodl	equ	0xFF3
  4767                           intcon	equ	0xFF2
  4768                           intcon2	equ	0xFF1
  4769                           intcon3	equ	0xFF0
  4770                           postinc0	equ	0xFEE
  4771                           wreg	equ	0xFE8
  4772                           postdec1	equ	0xFE5
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _ButtonPressed *****************
  4780 ;; Defined at:
  4781 ;;		line 359 in file "../src/demo_ouput.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  t               4   14[BANK0 ] struct _MIWI_TICK
  4786 ;;  tickDifferen    4   10[BANK0 ] struct _MIWI_TICK
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      unsigned char 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : F/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;Total ram usage:        8 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    6
  4803 ;; This function calls:
  4804 ;;		_MiWi_TickGet
  4805 ;; This function is called by:
  4806 ;;		_run_p2p_demo
  4807 ;;		_freezer_feature
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text17
  4812  011CE4                     __ptext17:
  4813                           	opt stack 0
  4814  011CE4                     _ButtonPressed:
  4815                           	opt stack 23
  4816                           
  4817                           ;demo_ouput.c: 361: MIWI_TICK tickDifference;
  4818                           ;demo_ouput.c: 363: if(PORTBbits.RB0 == 0)
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;incstack = 0
  4822  011CE4  B081               	btfsc	3969,0,c	;volatile
  4823  011CE6  D010               	goto	l874
  4824                           
  4825                           ;demo_ouput.c: 364: {
  4826                           ;demo_ouput.c: 366: if(PUSH_BUTTON_pressed == 0)
  4827  011CE8  0100               	movlb	0	; () banked
  4828  011CEA  51D2               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4829  011CEC  E13C               	bnz	l6198
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;demo_ouput.c: 367: {
  4833                           ;demo_ouput.c: 368: PUSH_BUTTON_pressed = 1;
  4834  011CEE  0E01               	movlw	1
  4835  011CF0  6FD2               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;demo_ouput.c: 369: PUSH_BUTTON_press_time = MiWi_TickGet();
  4839  011CF2  EC78  F091         	call	_MiWi_TickGet	;wreg free
  4840  011CF6  C060  F0C0         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4841  011CFA  C061  F0C1         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4842  011CFE  C062  F0C2         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4843  011D02  C063  F0C3         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;demo_ouput.c: 370: return 1;
  4847  011D06  0C01               	retlw	1
  4848  011D08                     l874:
  4849                           
  4850                           ;demo_ouput.c: 373: else if(PORTAbits.RA5 == 0)
  4851  011D08  BA80               	btfsc	3968,5,c	;volatile
  4852  011D0A  D010               	goto	l6190
  4853                           
  4854                           ;demo_ouput.c: 374: {
  4855                           ;demo_ouput.c: 376: if(PUSH_BUTTON_pressed == 0)
  4856  011D0C  0100               	movlb	0	; () banked
  4857  011D0E  51D2               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4858  011D10  E12A               	bnz	l6198
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;demo_ouput.c: 377: {
  4862                           ;demo_ouput.c: 378: PUSH_BUTTON_pressed = 1;
  4863  011D12  0E01               	movlw	1
  4864  011D14  6FD2               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;demo_ouput.c: 379: PUSH_BUTTON_press_time = MiWi_TickGet();
  4868  011D16  EC78  F091         	call	_MiWi_TickGet	;wreg free
  4869  011D1A  C060  F0C0         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4870  011D1E  C061  F0C1         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4871  011D22  C062  F0C2         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4872  011D26  C063  F0C3         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;demo_ouput.c: 380: return 2;
  4876  011D2A  0C02               	retlw	2
  4877  011D2C                     l6190:
  4878                           
  4879                           ;demo_ouput.c: 383: else
  4880                           ;demo_ouput.c: 384: {
  4881                           ;demo_ouput.c: 386: MIWI_TICK t = MiWi_TickGet();
  4882  011D2C  EC78  F091         	call	_MiWi_TickGet	;wreg free
  4883  011D30  C060  F06E         	movff	?_MiWi_TickGet,ButtonPressed@t
  4884  011D34  C061  F06F         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4885  011D38  C062  F070         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4886  011D3C  C063  F071         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;demo_ouput.c: 389: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4890  011D40  51C0               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4891  011D42  5D6E               	subwf	ButtonPressed@t& (0+255),w,b
  4892  011D44  6F6A               	movwf	ButtonPressed@tickDifference& (0+255),b
  4893  011D46  51C1               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4894  011D48  596F               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  4895  011D4A  6F6B               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  4896  011D4C  51C2               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4897  011D4E  5970               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  4898  011D50  6F6C               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  4899  011D52  51C3               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4900  011D54  5971               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  4901  011D56  6F6D               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;demo_ouput.c: 392: if(tickDifference.Val > 0x00003FFF)
  4905  011D58  516D               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  4906  011D5A  116C               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  4907  011D5C  E103               	bnz	u5060
  4908  011D5E  0E40               	movlw	64
  4909  011D60  5D6B               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  4910  011D62  E301               	bnc	l6198
  4911  011D64                     u5060:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;demo_ouput.c: 393: {
  4915                           ;demo_ouput.c: 394: PUSH_BUTTON_pressed = 0;
  4916  011D64  6BD2               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  4917  011D66                     l6198:
  4918                           
  4919                           ; BSR set to: 0
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;demo_ouput.c: 395: }
  4923                           ;demo_ouput.c: 396: }
  4924                           ;demo_ouput.c: 398: return 0;
  4925  011D66  0C00               	retlw	0	;funcret
  4926  011D68                     __end_of_ButtonPressed:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           intcon2	equ	0xFF1
  4936                           intcon3	equ	0xFF0
  4937                           postinc0	equ	0xFEE
  4938                           wreg	equ	0xFE8
  4939                           postdec1	equ	0xFE5
  4940                           fsr1l	equ	0xFE1
  4941                           indf2	equ	0xFDF
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _Initialize_Demo *****************
  4947 ;; Defined at:
  4948 ;;		line 96 in file "../src/task.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  freezer_enab    1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  freezer_enab    1   75[BANK0 ] unsigned char 
  4953 ;;  i               1   76[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : F/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:   14
  4970 ;; This function calls:
  4971 ;;		_DemoOutput_Channel
  4972 ;;		_DemoOutput_ChannelError
  4973 ;;		_DemoOutput_Instruction
  4974 ;;		_DumpConnection
  4975 ;;		_MiApp_ConnectionMode
  4976 ;;		_MiApp_EstablishConnection
  4977 ;;		_MiApp_ProtocolInit
  4978 ;;		_MiApp_SetChannel
  4979 ;;		_MiApp_StartConnection
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text18
  4986  011FD8                     __ptext18:
  4987                           	opt stack 0
  4988  011FD8                     _Initialize_Demo:
  4989                           	opt stack 16
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;incstack = 0
  4993                           ;Initialize_Demo@freezer_enable stored from wreg
  4994  011FD8  6FAB               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  4995                           
  4996                           ;task.c: 98: uint8_t i;
  4997                           ;task.c: 100: if (freezer_enable)
  4998  011FDA  0100               	movlb	0	; () banked
  4999  011FDC  51AB               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5000  011FDE  E003               	bz	l1034
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;task.c: 101: {
  5004                           ;task.c: 112: MiApp_ProtocolInit(1);
  5005  011FE0  0E01               	movlw	1
  5006  011FE2  EFC4  F087         	goto	_MiApp_ProtocolInit
  5007  011FE6                     l1034:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;task.c: 120: else
  5011                           ;task.c: 121: {
  5012                           ;task.c: 122: LATDbits.LATD7 = 0;
  5013  011FE6  9E8C               	bcf	3980,7,c	;volatile
  5014                           
  5015                           ;task.c: 123: LATDbits.LATD6 = 0;
  5016  011FE8  9C8C               	bcf	3980,6,c	;volatile
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;task.c: 135: MiApp_ProtocolInit(0);
  5020  011FEA  0E00               	movlw	0
  5021  011FEC  ECC4  F087         	call	_MiApp_ProtocolInit
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;task.c: 138: if( MiApp_SetChannel(myChannel) == 0 )
  5025  011FF0  0E19               	movlw	25
  5026  011FF2  EC1D  F093         	call	_MiApp_SetChannel
  5027  011FF6  0900               	iorlw	0
  5028  011FF8  E103               	bnz	l6926
  5029                           
  5030                           ;task.c: 139: {
  5031                           ;task.c: 140: DemoOutput_ChannelError(myChannel);
  5032  011FFA  0E19               	movlw	25
  5033  011FFC  ECA3  F094         	call	_DemoOutput_ChannelError
  5034  012000                     l6926:
  5035                           
  5036                           ;task.c: 141: }
  5037                           ;task.c: 152: MiApp_ConnectionMode(0x00);
  5038  012000  0E00               	movlw	0
  5039  012002  EC40  F092         	call	_MiApp_ConnectionMode
  5040                           
  5041                           ;task.c: 153: DemoOutput_Channel(myChannel, 0);
  5042  012006  0E00               	movlw	0
  5043  012008  0100               	movlb	0	; () banked
  5044  01200A  6F94               	movwf	DemoOutput_Channel@Step& (0+255),b
  5045  01200C  0E19               	movlw	25
  5046  01200E  ECC2  F090         	call	_DemoOutput_Channel
  5047                           
  5048                           ;task.c: 167: i = MiApp_EstablishConnection(0xFF, 0x00);
  5049  012012  6B9A               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5050  012014  EC36  F08B         	call	_MiApp_EstablishConnection
  5051  012018  6FAC               	movwf	Initialize_Demo@i& (0+255),b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;task.c: 172: if( i != 0xFF )
  5055  01201A  29AC               	incf	Initialize_Demo@i& (0+255),w,b
  5056  01201C  E006               	bz	l6934
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;task.c: 173: {
  5060                           ;task.c: 174: DemoOutput_Channel(myChannel, 1);
  5061  01201E  0E01               	movlw	1
  5062  012020  6F94               	movwf	DemoOutput_Channel@Step& (0+255),b
  5063  012022  0E19               	movlw	25
  5064  012024  ECC2  F090         	call	_DemoOutput_Channel
  5065                           
  5066                           ;task.c: 178: }
  5067  012028  D009               	goto	l6936
  5068  01202A                     l6934:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;task.c: 179: else
  5072                           ;task.c: 180: {
  5073                           ;task.c: 211: MiApp_StartConnection(0x00, 10, 0);
  5074  01202A  0E0A               	movlw	10
  5075  01202C  6F6A               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  5076  01202E  0E00               	movlw	0
  5077  012030  6B6B               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  5078  012032  6B6C               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  5079  012034  6B6D               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  5080  012036  6B6E               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  5081  012038  EC06  F095         	call	_MiApp_StartConnection
  5082  01203C                     l6936:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;task.c: 215: }
  5086                           ;task.c: 229: DumpConnection(0xFF);
  5087  01203C  0EFF               	movlw	255
  5088  01203E  ECC2  F085         	call	_DumpConnection
  5089                           
  5090                           ;task.c: 234: LATDbits.LATD7 = 1;
  5091  012042  8E8C               	bsf	3980,7,c	;volatile
  5092  012044  0012               	return	
  5093  012046                     __end_of_Initialize_Demo:
  5094                           	opt stack 0
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           prodh	equ	0xFF4
  5100                           prodl	equ	0xFF3
  5101                           intcon	equ	0xFF2
  5102                           intcon2	equ	0xFF1
  5103                           intcon3	equ	0xFF0
  5104                           postinc0	equ	0xFEE
  5105                           wreg	equ	0xFE8
  5106                           postdec1	equ	0xFE5
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8
  5112                           
  5113 ;; *************** function _MiApp_StartConnection *****************
  5114 ;; Defined at:
  5115 ;;		line 2160 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  Mode            1    wreg     unsigned char 
  5118 ;;  ScanDuration    1   10[BANK0 ] unsigned char 
  5119 ;;  ChannelMap      4   11[BANK0 ] unsigned long 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  Mode            1   15[BANK0 ] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      unsigned char 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : F/0
  5128 ;;		On exit  : F/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5131 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;Total ram usage:        6 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    6
  5138 ;; This function calls:
  5139 ;;		_MiWi_TickGet
  5140 ;; This function is called by:
  5141 ;;		_Initialize_Demo
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text19
  5146  012A0C                     __ptext19:
  5147                           	opt stack 0
  5148  012A0C                     _MiApp_StartConnection:
  5149                           	opt stack 23
  5150                           
  5151                           ;incstack = 0
  5152                           ;MiApp_StartConnection@Mode stored from wreg
  5153  012A0C  6F6F               	movwf	MiApp_StartConnection@Mode& (0+255),b
  5154                           
  5155                           ;miwi_p2p.c: 2162: switch(Mode)
  5156  012A0E  D004               	goto	l6342
  5157  012A10                     l6336:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;miwi_p2p.c: 2180: tick1 = MiWi_TickGet();
  5161  012A10  EC78  F091         	call	_MiWi_TickGet	;wreg free
  5162                           
  5163                           ;miwi_p2p.c: 2181: tick4 = MiWi_TickGet();
  5164  012A14  EF78  F091         	goto	_MiWi_TickGet	;wreg free
  5165  012A18                     l6342:
  5166  012A18  0100               	movlb	0	; () banked
  5167  012A1A  516F               	movf	MiApp_StartConnection@Mode& (0+255),w,b
  5168                           
  5169                           ; Switch size 1, requested type "speed"
  5170                           ; Number of cases is 3, Range of values is 0 to 2
  5171                           ; switch strategies available:
  5172                           ; Name         Instructions Cycles
  5173                           ; simple_byte           10     6 (average)
  5174                           ;	Chosen strategy is simple_byte
  5175  012A1C  E0F9               	bz	l6336
  5176  012A1E  0A01               	xorlw	1	; case 1
  5177  012A20  A4D8               	btfss	status,2,c
  5178  012A22  0A03               	xorlw	3	; case 2
  5179  012A24  0012               	return	
  5180  012A26                     __end_of_MiApp_StartConnection:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           postdec1	equ	0xFE5
  5194                           fsr1l	equ	0xFE1
  5195                           indf2	equ	0xFDF
  5196                           fsr2h	equ	0xFDA
  5197                           fsr2l	equ	0xFD9
  5198                           status	equ	0xFD8
  5199                           
  5200 ;; *************** function _MiApp_ProtocolInit *****************
  5201 ;; Defined at:
  5202 ;;		line 1122 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  bNetworkFree    1    wreg     unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  bNetworkFree    1   17[BANK0 ] unsigned char 
  5207 ;;  initValue       2   18[BANK0 ] struct .
  5208 ;;  i               1   20[BANK0 ] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      unsigned char 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : F/0
  5215 ;;		On exit  : F/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;Total ram usage:        4 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:   10
  5225 ;; This function calls:
  5226 ;;		_CONSOLE_PrintHex
  5227 ;;		_CONSOLE_PutString
  5228 ;;		_EEPROM_Read
  5229 ;;		_InitSymbolTimer
  5230 ;;		_MiApp_SetChannel
  5231 ;;		_MiMAC_Init
  5232 ;;		_NVMInit
  5233 ;;		_NVMRead
  5234 ;;		_NVMWrite
  5235 ;; This function is called by:
  5236 ;;		_Initialize_Demo
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text20
  5241  010F88                     __ptext20:
  5242                           	opt stack 0
  5243  010F88                     _MiApp_ProtocolInit:
  5244                           	opt stack 19
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;incstack = 0
  5248                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5249  010F88  6F71               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5250                           
  5251                           ;miwi_p2p.c: 1131: {
  5252                           ;miwi_p2p.c: 1132: for(i = 0; i < 3; i++)
  5253  010F8A  0100               	movlb	0	; () banked
  5254  010F8C  6B74               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5255  010F8E                     l6242:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;miwi_p2p.c: 1133: {
  5259                           ;miwi_p2p.c: 1134: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  5260  010F8E  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5261  010F90  08F5               	sublw	low (_myLongAddress+7)
  5262  010F92  6F61               	movwf	EEPROM_Read@dest& (0+255),b
  5263  010F94  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5264  010F96  0FFA               	addlw	250
  5265  010F98  6F62               	movwf	EEPROM_Read@addr& (0+255),b
  5266  010F9A  0E01               	movlw	1
  5267  010F9C  6F63               	movwf	EEPROM_Read@count& (0+255),b
  5268  010F9E  ECAD  F093         	call	_EEPROM_Read	;wreg free
  5269                           
  5270                           ; BSR set to: 0
  5271  010FA2  2B74               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5272                           
  5273                           ; BSR set to: 0
  5274  010FA4  0E02               	movlw	2
  5275  010FA6  6574               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5276  010FA8  D7F2               	goto	l6242
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;miwi_p2p.c: 1137: if( 8 > 7 )
  5280  010FAA  69F2               	setf	(_myLongAddress+4)& (0+255),b
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;miwi_p2p.c: 1138: {
  5284                           ;miwi_p2p.c: 1139: myLongAddress[3] = 0xFE;
  5285  010FAC  0EFE               	movlw	254
  5286  010FAE  6FF1               	movwf	(_myLongAddress+3)& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;miwi_p2p.c: 1140: }
  5290                           ;miwi_p2p.c: 1141: for(i = 0; i < 3; i++)
  5291  010FB0  6B74               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5292  010FB2                     l6256:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;miwi_p2p.c: 1142: {
  5296                           ;miwi_p2p.c: 1143: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
  5297  010FB2  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5298  010FB4  08F0               	sublw	low (_myLongAddress+2)
  5299  010FB6  6F61               	movwf	EEPROM_Read@dest& (0+255),b
  5300  010FB8  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5301  010FBA  0FFD               	addlw	253
  5302  010FBC  6F62               	movwf	EEPROM_Read@addr& (0+255),b
  5303  010FBE  0E01               	movlw	1
  5304  010FC0  6F63               	movwf	EEPROM_Read@count& (0+255),b
  5305  010FC2  ECAD  F093         	call	_EEPROM_Read	;wreg free
  5306                           
  5307                           ; BSR set to: 0
  5308  010FC6  2B74               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5309                           
  5310                           ; BSR set to: 0
  5311  010FC8  0E02               	movlw	2
  5312  010FCA  6574               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5313  010FCC  D7F2               	goto	l6256
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;miwi_p2p.c: 1151: }
  5317                           ;miwi_p2p.c: 1152: }
  5318                           ;miwi_p2p.c: 1158: NVMInit();
  5319  010FCE  EC59  F090         	call	_NVMInit	;wreg free
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;miwi_p2p.c: 1162: P2PStatus.Val = 0;
  5323  010FD2  6BD1               	clrf	_P2PStatus& (0+255),b	;volatile
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;miwi_p2p.c: 1164: if (!bNetworkFreezer)
  5327  010FD4  5171               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5328  010FD6  E129               	bnz	l6290
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;miwi_p2p.c: 1165: {
  5332                           ;miwi_p2p.c: 1166: for(i = 0; i < 5; i++)
  5333  010FD8  6B74               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5334  010FDA                     l6284:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;miwi_p2p.c: 1167: {
  5338                           ;miwi_p2p.c: 1168: ConnectionTable[i].status.Val = 0;
  5339  010FDA  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5340  010FDC  0D0A               	mullw	10
  5341  010FDE  0E58               	movlw	low (_ConnectionTable+8)
  5342  010FE0  24F3               	addwf	prodl,w,c
  5343  010FE2  6ED9               	movwf	fsr2l,c
  5344  010FE4  0E01               	movlw	high (_ConnectionTable+8)
  5345  010FE6  20F4               	addwfc	prodh,w,c
  5346  010FE8  6EDA               	movwf	fsr2h,c
  5347  010FEA  6ADF               	clrf	indf2,c
  5348                           
  5349                           ;miwi_p2p.c: 1169: ConnectionTable[i].Address[0] = 0x00;
  5350  010FEC  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5351  010FEE  0D0A               	mullw	10
  5352  010FF0  0E50               	movlw	low _ConnectionTable
  5353  010FF2  24F3               	addwf	prodl,w,c
  5354  010FF4  6ED9               	movwf	fsr2l,c
  5355  010FF6  0E01               	movlw	high _ConnectionTable
  5356  010FF8  20F4               	addwfc	prodh,w,c
  5357  010FFA  6EDA               	movwf	fsr2h,c
  5358  010FFC  6ADF               	clrf	indf2,c
  5359                           
  5360                           ;miwi_p2p.c: 1170: ConnectionTable[i].Address[1] = 0x00;
  5361  010FFE  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5362  011000  0D0A               	mullw	10
  5363  011002  0E51               	movlw	low (_ConnectionTable+1)
  5364  011004  24F3               	addwf	prodl,w,c
  5365  011006  6ED9               	movwf	fsr2l,c
  5366  011008  0E01               	movlw	high (_ConnectionTable+1)
  5367  01100A  20F4               	addwfc	prodh,w,c
  5368  01100C  6EDA               	movwf	fsr2h,c
  5369  01100E  6ADF               	clrf	indf2,c
  5370                           
  5371                           ;miwi_p2p.c: 1171: ConnectionTable[i].Address[2] = 0x00;
  5372  011010  5174               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5373  011012  0D0A               	mullw	10
  5374  011014  0E52               	movlw	low (_ConnectionTable+2)
  5375  011016  24F3               	addwf	prodl,w,c
  5376  011018  6ED9               	movwf	fsr2l,c
  5377  01101A  0E01               	movlw	high (_ConnectionTable+2)
  5378  01101C  20F4               	addwfc	prodh,w,c
  5379  01101E  6EDA               	movwf	fsr2h,c
  5380  011020  6ADF               	clrf	indf2,c
  5381                           
  5382                           ; BSR set to: 0
  5383  011022  2B74               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5384                           
  5385                           ; BSR set to: 0
  5386  011024  0E04               	movlw	4
  5387  011026  6574               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5388  011028  D7D8               	goto	l6284
  5389  01102A                     l6290:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;miwi_p2p.c: 1176: }
  5393                           ;miwi_p2p.c: 1177: }
  5394                           ;miwi_p2p.c: 1179: InitSymbolTimer();
  5395  01102A  EC40  F095         	call	_InitSymbolTimer	;wreg free
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;miwi_p2p.c: 1181: TxData = 0;
  5399  01102E  6BD6               	clrf	_TxData& (0+255),b
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;miwi_p2p.c: 1198: if( bNetworkFreezer )
  5403  011030  5171               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5404  011032  E043               	bz	l6308
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;miwi_p2p.c: 1199: {
  5408                           ;miwi_p2p.c: 1200: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5409  011034  0EEB               	movlw	low _currentChannel
  5410  011036  6F61               	movwf	NVMRead@dest& (0+255),b
  5411  011038  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  5412  01103A  C0E2  F063         	movff	_nvmCurrentChannel,NVMRead@addr
  5413  01103E  C0E3  F064         	movff	_nvmCurrentChannel+1,NVMRead@addr+1
  5414  011042  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  5415  011044  0E01               	movlw	1
  5416  011046  6F65               	movwf	NVMRead@count& (0+255),b
  5417  011048  EC25  F091         	call	_NVMRead	;wreg free
  5418                           
  5419                           ;miwi_p2p.c: 1201: if( currentChannel >= 32 )
  5420  01104C  0E1F               	movlw	31
  5421  01104E  0100               	movlb	0	; () banked
  5422  011050  65EB               	cpfsgt	_currentChannel& (0+255),b
  5423  011052  D001               	goto	l6302
  5424  011054  0C1F               	retlw	31
  5425  011056                     l6302:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;miwi_p2p.c: 1204: }
  5429                           ;miwi_p2p.c: 1209: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  5430  011056  0EF6               	movlw	low _ConnMode
  5431  011058  6F61               	movwf	NVMRead@dest& (0+255),b
  5432  01105A  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  5433  01105C  C0DE  F063         	movff	_nvmConnMode,NVMRead@addr
  5434  011060  C0DF  F064         	movff	_nvmConnMode+1,NVMRead@addr+1
  5435  011064  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  5436  011066  0E01               	movlw	1
  5437  011068  6F65               	movwf	NVMRead@count& (0+255),b
  5438  01106A  EC25  F091         	call	_NVMRead	;wreg free
  5439                           
  5440                           ;miwi_p2p.c: 1210: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
  5441  01106E  0E50               	movlw	low _ConnectionTable
  5442  011070  0100               	movlb	0	; () banked
  5443  011072  6F61               	movwf	NVMRead@dest& (0+255),b
  5444  011074  0E01               	movlw	high _ConnectionTable
  5445  011076  6F62               	movwf	(NVMRead@dest+1)& (0+255),b
  5446  011078  C0E0  F063         	movff	_nvmConnectionTable,NVMRead@addr
  5447  01107C  C0E1  F064         	movff	_nvmConnectionTable+1,NVMRead@addr+1
  5448  011080  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  5449  011082  0E32               	movlw	50
  5450  011084  6F65               	movwf	NVMRead@count& (0+255),b
  5451  011086  EC25  F091         	call	_NVMRead	;wreg free
  5452                           
  5453                           ;miwi_p2p.c: 1216: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  5454  01108A  0EEA               	movlw	low _conn_size
  5455  01108C  0100               	movlb	0	; () banked
  5456  01108E  6F61               	movwf	NVMRead@dest& (0+255),b
  5457  011090  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  5458  011092  C0E4  F063         	movff	_nvmEdc,NVMRead@addr
  5459  011096  C0E5  F064         	movff	_nvmEdc+1,NVMRead@addr+1
  5460  01109A  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  5461  01109C  0E01               	movlw	1
  5462  01109E  6F65               	movwf	NVMRead@count& (0+255),b
  5463  0110A0  EC25  F091         	call	_NVMRead	;wreg free
  5464                           
  5465                           ;miwi_p2p.c: 1224: CONSOLE_PutString((char*)" Channel:");
  5466  0110A4  0EE0               	movlw	low STR_1
  5467  0110A6  0100               	movlb	0	; () banked
  5468  0110A8  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  5469  0110AA  0EFF               	movlw	high STR_1
  5470  0110AC  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  5471  0110AE  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;miwi_p2p.c: 1225: CONSOLE_PrintHex(currentChannel);
  5475  0110B2  51EB               	movf	_currentChannel& (0+255),w,b
  5476  0110B4  EC5D  F092         	call	_CONSOLE_PrintHex
  5477                           
  5478                           ;miwi_p2p.c: 1227: }
  5479  0110B8  D027               	goto	l6310
  5480  0110BA                     l6308:
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;miwi_p2p.c: 1228: else
  5484                           ;miwi_p2p.c: 1229: {
  5485                           ;miwi_p2p.c: 1234: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5486  0110BA  0EEB               	movlw	low _currentChannel
  5487  0110BC  6F61               	movwf	NVMWrite@source& (0+255),b
  5488  0110BE  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  5489  0110C0  C0E2  F063         	movff	_nvmCurrentChannel,NVMWrite@addr
  5490  0110C4  C0E3  F064         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  5491  0110C8  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  5492  0110CA  0E01               	movlw	1
  5493  0110CC  6F65               	movwf	NVMWrite@count& (0+255),b
  5494  0110CE  ECE3  F08D         	call	_NVMWrite	;wreg free
  5495                           
  5496                           ;miwi_p2p.c: 1235: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  5497  0110D2  0EF6               	movlw	low _ConnMode
  5498  0110D4  0100               	movlb	0	; () banked
  5499  0110D6  6F61               	movwf	NVMWrite@source& (0+255),b
  5500  0110D8  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  5501  0110DA  C0DE  F063         	movff	_nvmConnMode,NVMWrite@addr
  5502  0110DE  C0DF  F064         	movff	_nvmConnMode+1,NVMWrite@addr+1
  5503  0110E2  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  5504  0110E4  0E01               	movlw	1
  5505  0110E6  6F65               	movwf	NVMWrite@count& (0+255),b
  5506  0110E8  ECE3  F08D         	call	_NVMWrite	;wreg free
  5507                           
  5508                           ;miwi_p2p.c: 1236: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 
      +                          * sizeof(CONNECTION_ENTRY));
  5509  0110EC  0E50               	movlw	low _ConnectionTable
  5510  0110EE  0100               	movlb	0	; () banked
  5511  0110F0  6F61               	movwf	NVMWrite@source& (0+255),b
  5512  0110F2  0E01               	movlw	high _ConnectionTable
  5513  0110F4  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  5514  0110F6  C0E0  F063         	movff	_nvmConnectionTable,NVMWrite@addr
  5515  0110FA  C0E1  F064         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  5516  0110FE  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  5517  011100  0E32               	movlw	50
  5518  011102  6F65               	movwf	NVMWrite@count& (0+255),b
  5519  011104  ECE3  F08D         	call	_NVMWrite	;wreg free
  5520  011108                     l6310:
  5521                           
  5522                           ;miwi_p2p.c: 1237: }
  5523                           ;miwi_p2p.c: 1244: initValue.PAddress = myLongAddress;
  5524  011108  0EEE               	movlw	low _myLongAddress
  5525  01110A  0100               	movlb	0	; () banked
  5526  01110C  6F73               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;miwi_p2p.c: 1245: initValue.actionFlags.bits.CCAEnable = 1;
  5530  01110E  8372               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;miwi_p2p.c: 1246: initValue.actionFlags.bits.PAddrLength = 8;
  5534  011110  5172               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5535  011112  0B87               	andlw	-121
  5536  011114  0940               	iorlw	64
  5537  011116  6F72               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;miwi_p2p.c: 1247: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5541  011118  B171               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5542  01111A  D002               	bra	u5155
  5543  01111C  9572               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5544  01111E  D002               	bra	u5156
  5545  011120                     u5155:
  5546  011120  0100               	movlb	0	; () banked
  5547  011122  8572               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5548  011124                     u5156:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;miwi_p2p.c: 1248: initValue.actionFlags.bits.RepeaterMode = 0;
  5552  011124  9172               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;miwi_p2p.c: 1250: MiMAC_Init(initValue);
  5556  011126  C072  F06E         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5557  01112A  C073  F06F         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5558  01112E  ECFA  F08C         	call	_MiMAC_Init	;wreg free
  5559                           
  5560                           ;miwi_p2p.c: 1259: MiApp_SetChannel(currentChannel);
  5561  011132  0100               	movlb	0	; () banked
  5562  011134  51EB               	movf	_currentChannel& (0+255),w,b
  5563  011136  EC1D  F093         	call	_MiApp_SetChannel
  5564                           
  5565                           ;miwi_p2p.c: 1270: P2PCapacityInfo = 0;
  5566  01113A  0100               	movlb	0	; () banked
  5567  01113C  6BD0               	clrf	_P2PCapacityInfo& (0+255),b
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;miwi_p2p.c: 1272: P2PCapacityInfo |= 0x01;
  5571  01113E  81D0               	bsf	_P2PCapacityInfo& (0+255),0,b
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;miwi_p2p.c: 1277: P2PCapacityInfo |= (ConnMode << 4);
  5575  011140  39F6               	swapf	_ConnMode& (0+255),w,b
  5576  011142  0BF0               	andlw	240
  5577  011144  13D0               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;miwi_p2p.c: 1279: INTCON3bits.INT3IE = 1;
  5581  011146  8AF0               	bsf	intcon3,5,c	;volatile
  5582                           
  5583                           ; BSR set to: 0
  5584  011148  0012               	return		;funcret
  5585  01114A                     __end_of_MiApp_ProtocolInit:
  5586                           	opt stack 0
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           intcon2	equ	0xFF1
  5595                           intcon3	equ	0xFF0
  5596                           postinc0	equ	0xFEE
  5597                           wreg	equ	0xFE8
  5598                           postdec1	equ	0xFE5
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function _NVMRead *****************
  5606 ;; Defined at:
  5607 ;;		line 208 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  dest            2    1[BANK0 ] PTR unsigned char 
  5610 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
  5611 ;;  addr            2    3[BANK0 ] unsigned int 
  5612 ;;  count           2    5[BANK0 ] unsigned int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  oldRFIE         1    7[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : F/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:        7 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    7
  5631 ;; This function calls:
  5632 ;;		_SPIGet
  5633 ;;		_SPIPut
  5634 ;; This function is called by:
  5635 ;;		_MiApp_ProtocolInit
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text21
  5640  01224A                     __ptext21:
  5641                           	opt stack 0
  5642  01224A                     _NVMRead:
  5643                           	opt stack 21
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;miwi_nvm.c: 215: uint8_t oldRFIE = INTCON3bits.INT3IE;
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;incstack = 0
  5650  01224A  0E00               	movlw	0
  5651  01224C  BAF0               	btfsc	intcon3,5,c	;volatile
  5652  01224E  0E01               	movlw	1
  5653  012250  6F67               	movwf	NVMRead@oldRFIE& (0+255),b
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;miwi_nvm.c: 217: INTCON3bits.INT3IE = 0;
  5657  012252  9AF0               	bcf	intcon3,5,c	;volatile
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;miwi_nvm.c: 220: LATAbits.LATA3 = 0;
  5661  012254  9689               	bcf	3977,3,c	;volatile
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;miwi_nvm.c: 236: SPIPut( 0x03 );
  5665  012256  0E03               	movlw	3
  5666  012258  EC13  F095         	call	_SPIPut
  5667                           
  5668                           ;miwi_nvm.c: 237: SPIPut( addr>>8 );
  5669  01225C  0100               	movlb	0	; () banked
  5670  01225E  5164               	movf	(NVMRead@addr+1)& (0+255),w,b
  5671  012260  EC13  F095         	call	_SPIPut
  5672                           
  5673                           ;miwi_nvm.c: 238: SPIPut( addr );
  5674  012264  0100               	movlb	0	; () banked
  5675  012266  5163               	movf	NVMRead@addr& (0+255),w,b
  5676  012268  EC13  F095         	call	_SPIPut
  5677                           
  5678                           ;miwi_nvm.c: 241: while( count > 0 )
  5679  01226C  D00D               	goto	l6048
  5680  01226E                     l6042:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;miwi_nvm.c: 242: {
  5684                           ;miwi_nvm.c: 243: *dest++ = SPIGet();
  5685  01226E  EC72  F095         	call	_SPIGet	;wreg free
  5686  012272  C061  FFD9         	movff	NVMRead@dest,fsr2l
  5687  012276  C062  FFDA         	movff	NVMRead@dest+1,fsr2h
  5688  01227A  6EDF               	movwf	indf2,c
  5689  01227C  0100               	movlb	0	; () banked
  5690  01227E  4B61               	infsnz	NVMRead@dest& (0+255),f,b
  5691  012280  2B62               	incf	(NVMRead@dest+1)& (0+255),f,b
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;miwi_nvm.c: 244: count--;
  5695  012282  0765               	decf	NVMRead@count& (0+255),f,b
  5696  012284  A0D8               	btfss	status,0,c
  5697  012286  0766               	decf	(NVMRead@count+1)& (0+255),f,b
  5698  012288                     l6048:
  5699  012288  0100               	movlb	0	; () banked
  5700  01228A  5165               	movf	NVMRead@count& (0+255),w,b
  5701  01228C  1166               	iorwf	(NVMRead@count+1)& (0+255),w,b
  5702  01228E  E1EF               	bnz	l6042
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;miwi_nvm.c: 245: }
  5706                           ;miwi_nvm.c: 246: LATAbits.LATA3 = 1;
  5707  012290  8689               	bsf	3977,3,c	;volatile
  5708                           
  5709                           ;miwi_nvm.c: 251: INTCON3bits.INT3IE = oldRFIE;
  5710  012292  B167               	btfsc	NVMRead@oldRFIE& (0+255),0,b
  5711  012294  D002               	bra	u4945
  5712  012296  9AF0               	bcf	intcon3,5,c	;volatile
  5713  012298  D001               	bra	u4946
  5714  01229A                     u4945:
  5715  01229A  8AF0               	bsf	intcon3,5,c	;volatile
  5716  01229C                     u4946:
  5717  01229C  0012               	return		;funcret
  5718  01229E                     __end_of_NVMRead:
  5719                           	opt stack 0
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           intcon2	equ	0xFF1
  5728                           intcon3	equ	0xFF0
  5729                           postinc0	equ	0xFEE
  5730                           wreg	equ	0xFE8
  5731                           postdec1	equ	0xFE5
  5732                           fsr1l	equ	0xFE1
  5733                           indf2	equ	0xFDF
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           
  5738 ;; *************** function _NVMInit *****************
  5739 ;; Defined at:
  5740 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  result          1    5[BANK0 ] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      unsigned char 
  5747 ;; Registers used:
  5748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : F/0
  5751 ;;		On exit  : F/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;Total ram usage:        1 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    6
  5761 ;; This function calls:
  5762 ;;		_NVMalloc
  5763 ;; This function is called by:
  5764 ;;		_MiApp_ProtocolInit
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text22
  5769  0120B2                     __ptext22:
  5770                           	opt stack 0
  5771  0120B2                     _NVMInit:
  5772                           	opt stack 22
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;miwi_nvm.c: 709: bool result = 1;
  5776                           
  5777                           ;incstack = 0
  5778  0120B2  0E01               	movlw	1
  5779  0120B4  6F65               	movwf	NVMInit@result& (0+255),b
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;miwi_nvm.c: 711: nextEEPosition = 0;
  5783  0120B6  6BCA               	clrf	_nextEEPosition& (0+255),b
  5784  0120B8  6BCB               	clrf	(_nextEEPosition+1)& (0+255),b
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
  5788  0120BA  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5789  0120BC  0E02               	movlw	2
  5790  0120BE  6F60               	movwf	NVMalloc@size& (0+255),b
  5791  0120C0  0EE6               	movlw	low _nvmMyPANID
  5792  0120C2  6F62               	movwf	NVMalloc@location& (0+255),b
  5793  0120C4  EC96  F093         	call	_NVMalloc	;wreg free
  5794  0120C8  1765               	andwf	NVMInit@result& (0+255),f,b
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
  5798  0120CA  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5799  0120CC  0E01               	movlw	1
  5800  0120CE  6F60               	movwf	NVMalloc@size& (0+255),b
  5801  0120D0  0EE2               	movlw	low _nvmCurrentChannel
  5802  0120D2  6F62               	movwf	NVMalloc@location& (0+255),b
  5803  0120D4  EC96  F093         	call	_NVMalloc	;wreg free
  5804  0120D8  1765               	andwf	NVMInit@result& (0+255),f,b
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
  5808  0120DA  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5809  0120DC  0E01               	movlw	1
  5810  0120DE  6F60               	movwf	NVMalloc@size& (0+255),b
  5811  0120E0  0EDE               	movlw	low _nvmConnMode
  5812  0120E2  6F62               	movwf	NVMalloc@location& (0+255),b
  5813  0120E4  EC96  F093         	call	_NVMalloc	;wreg free
  5814  0120E8  1765               	andwf	NVMInit@result& (0+255),f,b
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 5, &nvmConnectionTable);
  5818  0120EA  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5819  0120EC  0E32               	movlw	50
  5820  0120EE  6F60               	movwf	NVMalloc@size& (0+255),b
  5821  0120F0  0EE0               	movlw	low _nvmConnectionTable
  5822  0120F2  6F62               	movwf	NVMalloc@location& (0+255),b
  5823  0120F4  EC96  F093         	call	_NVMalloc	;wreg free
  5824  0120F8  1765               	andwf	NVMInit@result& (0+255),f,b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
  5828  0120FA  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5829  0120FC  0E04               	movlw	4
  5830  0120FE  6F60               	movwf	NVMalloc@size& (0+255),b
  5831  012100  0EE8               	movlw	low _nvmOutFrameCounter
  5832  012102  6F62               	movwf	NVMalloc@location& (0+255),b
  5833  012104  EC96  F093         	call	_NVMalloc	;wreg free
  5834  012108  1765               	andwf	NVMInit@result& (0+255),f,b
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
  5838  01210A  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  5839  01210C  0E01               	movlw	1
  5840  01210E  6F60               	movwf	NVMalloc@size& (0+255),b
  5841  012110  0EE4               	movlw	low _nvmEdc
  5842  012112  6F62               	movwf	NVMalloc@location& (0+255),b
  5843  012114  EC96  F093         	call	_NVMalloc	;wreg free
  5844  012118  1765               	andwf	NVMInit@result& (0+255),f,b
  5845                           
  5846                           ; BSR set to: 0
  5847  01211A  0012               	return		;funcret
  5848  01211C                     __end_of_NVMInit:
  5849                           	opt stack 0
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           intcon	equ	0xFF2
  5857                           intcon2	equ	0xFF1
  5858                           intcon3	equ	0xFF0
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postdec1	equ	0xFE5
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8
  5867                           
  5868 ;; *************** function _NVMalloc *****************
  5869 ;; Defined at:
  5870 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  size            2    0[BANK0 ] unsigned int 
  5873 ;;  location        1    2[BANK0 ] PTR unsigned int 
  5874 ;;		 -> nvmEdc(2), nvmOutFrameCounter(2), nvmConnectionTable(2), nvmConnMode(2), 
  5875 ;;		 -> nvmCurrentChannel(2), nvmMyPANID(2), 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      unsigned char 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : F/0
  5884 ;;		On exit  : F/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:        5 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    5
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_NVMInit
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text23
  5902  01272C                     __ptext23:
  5903                           	opt stack 0
  5904  01272C                     _NVMalloc:
  5905                           	opt stack 22
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 32768)
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;incstack = 0
  5912  01272C  5160               	movf	NVMalloc@size& (0+255),w,b
  5913  01272E  25CA               	addwf	_nextEEPosition& (0+255),w,b
  5914  012730  6F63               	movwf	??_NVMalloc& (0+255),b
  5915  012732  5161               	movf	(NVMalloc@size+1)& (0+255),w,b
  5916  012734  21CB               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  5917  012736  6F64               	movwf	(??_NVMalloc+1)& (0+255),b
  5918  012738  0563               	decf	??_NVMalloc& (0+255),w,b
  5919  01273A  0E80               	movlw	128
  5920  01273C  5964               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  5921  01273E  E301               	bnc	l5848
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;miwi_nvm.c: 697: {
  5925                           ;miwi_nvm.c: 698: return 0;
  5926  012740  0C00               	retlw	0
  5927  012742                     l5848:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;miwi_nvm.c: 699: }
  5931                           ;miwi_nvm.c: 701: *location = nextEEPosition;
  5932  012742  5162               	movf	NVMalloc@location& (0+255),w,b
  5933  012744  6ED9               	movwf	fsr2l,c
  5934  012746  6ADA               	clrf	fsr2h,c
  5935  012748  C0CA  FFDE         	movff	_nextEEPosition,postinc2
  5936  01274C  C0CB  FFDD         	movff	_nextEEPosition+1,postdec2
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;miwi_nvm.c: 702: nextEEPosition += size;
  5940  012750  5160               	movf	NVMalloc@size& (0+255),w,b
  5941  012752  27CA               	addwf	_nextEEPosition& (0+255),f,b
  5942  012754  5161               	movf	(NVMalloc@size+1)& (0+255),w,b
  5943  012756  23CB               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;miwi_nvm.c: 703: return 1;
  5949  012758  0C01               	retlw	1	;funcret
  5950  01275A                     __end_of_NVMalloc:
  5951                           	opt stack 0
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           intcon	equ	0xFF2
  5959                           intcon2	equ	0xFF1
  5960                           intcon3	equ	0xFF0
  5961                           postinc0	equ	0xFEE
  5962                           wreg	equ	0xFE8
  5963                           postdec1	equ	0xFE5
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function _MiMAC_Init *****************
  5973 ;; Defined at:
  5974 ;;		line 579 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  initValue       2   14[BANK0 ] struct .
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  i               1   16[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : F/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;Total ram usage:        3 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    8
  5995 ;; This function calls:
  5996 ;;		_DELAY_ms
  5997 ;;		_RegisterSet
  5998 ;;		_SetRFMode
  5999 ;; This function is called by:
  6000 ;;		_MiApp_ProtocolInit
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text24
  6005  0119F4                     __ptext24:
  6006                           	opt stack 0
  6007  0119F4                     _MiMAC_Init:
  6008                           	opt stack 20
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  6012                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;incstack = 0
  6016  0119F4  C06E  F0C8         	movff	MiMAC_Init@initValue,_MACInitParams
  6017  0119F8  C06F  F0C9         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  6021  0119FC  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  6022  0119FE  0E14               	movlw	20
  6023  011A00  6F60               	movwf	DELAY_ms@ms& (0+255),b
  6024  011A02  EC2E  F08C         	call	_DELAY_ms	;wreg free
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;drv_mrf_miwi_89xa.c: 586: LATEbits.LATE3 = 1;
  6028  011A06  868D               	bsf	3981,3,c	;volatile
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;drv_mrf_miwi_89xa.c: 587: LATCbits.LATC2 = 1;
  6032  011A08  848B               	bsf	3979,2,c	;volatile
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  6036  011A0A  CFD6 F0CE          	movff	4054,_MACSeq	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  6040  011A0E  69D4               	setf	_ReceivedBankIndex& (0+255),b
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  6044  011A10  6B70               	clrf	MiMAC_Init@i& (0+255),b
  6045  011A12                     l6000:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;drv_mrf_miwi_89xa.c: 594: {
  6049                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  6050  011A12  5170               	movf	MiMAC_Init@i& (0+255),w,b
  6051  011A14  0D34               	mullw	52
  6052  011A16  0E00               	movlw	low _RxPacket
  6053  011A18  24F3               	addwf	prodl,w,c
  6054  011A1A  6ED9               	movwf	fsr2l,c
  6055  011A1C  0E02               	movlw	high _RxPacket
  6056  011A1E  20F4               	addwfc	prodh,w,c
  6057  011A20  6EDA               	movwf	fsr2h,c
  6058  011A22  6ADF               	clrf	indf2,c
  6059                           
  6060                           ; BSR set to: 0
  6061  011A24  2B70               	incf	MiMAC_Init@i& (0+255),f,b
  6062                           
  6063                           ; BSR set to: 0
  6064  011A26  0E01               	movlw	1
  6065  011A28  6570               	cpfsgt	MiMAC_Init@i& (0+255),b
  6066  011A2A  D7F3               	goto	l6000
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;drv_mrf_miwi_89xa.c: 596: }
  6070                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  6071  011A2C  6B70               	clrf	MiMAC_Init@i& (0+255),b
  6072  011A2E                     l6010:
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;drv_mrf_miwi_89xa.c: 631: {
  6076                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  6077  011A2E  5170               	movf	MiMAC_Init@i& (0+255),w,b
  6078  011A30  0D02               	mullw	2
  6079  011A32  0E7D               	movlw	low _InitConfigRegs
  6080  011A34  24F3               	addwf	prodl,w,c
  6081  011A36  6EF6               	movwf	tblptrl,c
  6082  011A38  0EFB               	movlw	high _InitConfigRegs
  6083  011A3A  20F4               	addwfc	prodh,w,c
  6084  011A3C  6EF7               	movwf	tblptrh,c
  6085  011A3E                     	if	1	;There are 3 active tblptr bytes
  6086  011A3E  6AF8               	clrf	tblptru,c
  6087  011A40  0E00               	movlw	low (__mediumconst shr (0+16))
  6088  011A42  22F8               	addwfc	tblptru,f,c
  6089  011A44                     	endif
  6090  011A44  0009               	tblrd		*+
  6091  011A46  CFF5 F061          	movff	tablat,RegisterSet@setting
  6092  011A4A  000A               	tblrd		*-
  6093  011A4C  CFF5 F062          	movff	tablat,RegisterSet@setting+1
  6094  011A50  ECF0  F093         	call	_RegisterSet	;wreg free
  6095  011A54  0100               	movlb	0	; () banked
  6096  011A56  2B70               	incf	MiMAC_Init@i& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099  011A58  0E1F               	movlw	31
  6100  011A5A  6570               	cpfsgt	MiMAC_Init@i& (0+255),b
  6101  011A5C  D7E8               	goto	l6010
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;drv_mrf_miwi_89xa.c: 633: }
  6105                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  6106  011A5E  0E20               	movlw	32
  6107  011A60  EC23  F090         	call	_SetRFMode
  6108                           
  6109                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  6110  011A64  0100               	movlb	0	; () banked
  6111  011A66  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  6112  011A68  0E4E               	movlw	78
  6113  011A6A  6F61               	movwf	RegisterSet@setting& (0+255),b
  6114  011A6C  ECF0  F093         	call	_RegisterSet	;wreg free
  6115                           
  6116                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  6117  011A70  0E40               	movlw	64
  6118  011A72  EC23  F090         	call	_SetRFMode
  6119                           
  6120                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6121  011A76  0E1C               	movlw	28
  6122  011A78  0100               	movlb	0	; () banked
  6123  011A7A  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  6124  011A7C  0E0F               	movlw	15
  6125  011A7E  6F61               	movwf	RegisterSet@setting& (0+255),b
  6126  011A80  ECF0  F093         	call	_RegisterSet	;wreg free
  6127                           
  6128                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  6129  011A84  0E60               	movlw	96
  6130  011A86  EC23  F090         	call	_SetRFMode
  6131                           
  6132                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT3IF = 0;
  6133  011A8A  94F0               	bcf	intcon3,2,c	;volatile
  6134                           
  6135                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT3IE = 1;
  6136  011A8C  8AF0               	bsf	intcon3,5,c	;volatile
  6137  011A8E  0012               	return		;funcret
  6138  011A90                     __end_of_MiMAC_Init:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodh	equ	0xFF4
  6145                           prodl	equ	0xFF3
  6146                           intcon	equ	0xFF2
  6147                           intcon2	equ	0xFF1
  6148                           intcon3	equ	0xFF0
  6149                           postinc0	equ	0xFEE
  6150                           wreg	equ	0xFE8
  6151                           postdec1	equ	0xFE5
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _MiApp_SetChannel *****************
  6161 ;; Defined at:
  6162 ;;		line 2392 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  channel         1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  channel         1   10[BANK0 ] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      unsigned char 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : F/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;Total ram usage:        1 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    9
  6183 ;; This function calls:
  6184 ;;		_MiMAC_SetChannel
  6185 ;;		_NVMWrite
  6186 ;; This function is called by:
  6187 ;;		_MiApp_ProtocolInit
  6188 ;;		_Initialize_Demo
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text25
  6193  01263A                     __ptext25:
  6194                           	opt stack 0
  6195  01263A                     _MiApp_SetChannel:
  6196                           	opt stack 20
  6197                           
  6198                           ;incstack = 0
  6199                           ;MiApp_SetChannel@channel stored from wreg
  6200  01263A  6F6A               	movwf	MiApp_SetChannel@channel& (0+255),b
  6201                           
  6202                           ;miwi_p2p.c: 2394: if( MiMAC_SetChannel(channel, 0) )
  6203  01263C  0100               	movlb	0	; () banked
  6204  01263E  6B65               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  6205  012640  516A               	movf	MiApp_SetChannel@channel& (0+255),w,b
  6206  012642  EC48  F08D         	call	_MiMAC_SetChannel
  6207  012646  0900               	iorlw	0
  6208  012648  E010               	bz	l6104
  6209                           
  6210                           ;miwi_p2p.c: 2395: {
  6211                           ;miwi_p2p.c: 2396: currentChannel = channel;
  6212  01264A  C06A  F0EB         	movff	MiApp_SetChannel@channel,_currentChannel
  6213                           
  6214                           ;miwi_p2p.c: 2398: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6215  01264E  0EEB               	movlw	low _currentChannel
  6216  012650  0100               	movlb	0	; () banked
  6217  012652  6F61               	movwf	NVMWrite@source& (0+255),b
  6218  012654  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  6219  012656  C0E2  F063         	movff	_nvmCurrentChannel,NVMWrite@addr
  6220  01265A  C0E3  F064         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  6221  01265E  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  6222  012660  0E01               	movlw	1
  6223  012662  6F65               	movwf	NVMWrite@count& (0+255),b
  6224  012664  ECE3  F08D         	call	_NVMWrite	;wreg free
  6225                           
  6226                           ;miwi_p2p.c: 2400: return 1;
  6227  012668  0C01               	retlw	1
  6228  01266A                     l6104:
  6229                           
  6230                           ;miwi_p2p.c: 2401: }
  6231                           ;miwi_p2p.c: 2402: return 0;
  6232  01266A  0C00               	retlw	0	;funcret
  6233  01266C                     __end_of_MiApp_SetChannel:
  6234                           	opt stack 0
  6235                           tblptru	equ	0xFF8
  6236                           tblptrh	equ	0xFF7
  6237                           tblptrl	equ	0xFF6
  6238                           tablat	equ	0xFF5
  6239                           prodh	equ	0xFF4
  6240                           prodl	equ	0xFF3
  6241                           intcon	equ	0xFF2
  6242                           intcon2	equ	0xFF1
  6243                           intcon3	equ	0xFF0
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           postdec1	equ	0xFE5
  6247                           fsr1l	equ	0xFE1
  6248                           indf2	equ	0xFDF
  6249                           postinc2	equ	0xFDE
  6250                           postdec2	equ	0xFDD
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function _MiMAC_SetChannel *****************
  6256 ;; Defined at:
  6257 ;;		line 484 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  channel         1    wreg     unsigned char 
  6260 ;;  offsetFreq      1    5[BANK0 ] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  channel         1    7[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      unsigned char 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : F/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6272 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;Total ram usage:        3 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    8
  6279 ;; This function calls:
  6280 ;;		_RegisterSet
  6281 ;;		_SetRFMode
  6282 ;; This function is called by:
  6283 ;;		_MiApp_SetChannel
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text26
  6288  011A90                     __ptext26:
  6289                           	opt stack 0
  6290  011A90                     _MiMAC_SetChannel:
  6291                           	opt stack 20
  6292                           
  6293                           ;incstack = 0
  6294                           ;MiMAC_SetChannel@channel stored from wreg
  6295  011A90  6F67               	movwf	MiMAC_SetChannel@channel& (0+255),b
  6296                           
  6297                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  6298  011A92  0E1F               	movlw	31
  6299  011A94  0100               	movlb	0	; () banked
  6300  011A96  6567               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  6301  011A98  D001               	goto	l5822
  6302  011A9A  0C00               	retlw	0
  6303  011A9C                     l5822:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;drv_mrf_miwi_89xa.c: 489: }
  6307                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  6308  011A9C  0E0C               	movlw	12
  6309  011A9E  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  6310  011AA0  0E64               	movlw	100
  6311  011AA2  6F61               	movwf	RegisterSet@setting& (0+255),b
  6312  011AA4  ECF0  F093         	call	_RegisterSet	;wreg free
  6313                           
  6314                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  6315  011AA8  0EBD               	movlw	low _PVALUE
  6316  011AAA  0100               	movlb	0	; () banked
  6317  011AAC  2567               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6318  011AAE  6EF6               	movwf	tblptrl,c
  6319  011AB0  6AF7               	clrf	tblptrh,c
  6320  011AB2  0EFB               	movlw	high _PVALUE
  6321  011AB4  22F7               	addwfc	tblptrh,f,c
  6322  011AB6                     	if	1	;There are 3 active tblptr bytes
  6323  011AB6  6AF8               	clrf	tblptru,c
  6324  011AB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6325  011ABA  22F8               	addwfc	tblptru,f,c
  6326  011ABC                     	endif
  6327  011ABC  0008               	tblrd		*
  6328  011ABE  CFF5 F066          	movff	tablat,??_MiMAC_SetChannel
  6329  011AC2  0E00               	movlw	0
  6330  011AC4  1166               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6331  011AC6  6F61               	movwf	RegisterSet@setting& (0+255),b
  6332  011AC8  0E0E               	movlw	14
  6333  011ACA  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  6334  011ACC  ECF0  F093         	call	_RegisterSet	;wreg free
  6335                           
  6336                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  6337  011AD0  0EDD               	movlw	low _SVALUE
  6338  011AD2  0100               	movlb	0	; () banked
  6339  011AD4  2567               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6340  011AD6  6EF6               	movwf	tblptrl,c
  6341  011AD8  6AF7               	clrf	tblptrh,c
  6342  011ADA  0EFB               	movlw	high _SVALUE
  6343  011ADC  22F7               	addwfc	tblptrh,f,c
  6344  011ADE                     	if	1	;There are 3 active tblptr bytes
  6345  011ADE  6AF8               	clrf	tblptru,c
  6346  011AE0  0E00               	movlw	low (__mediumconst shr (0+16))
  6347  011AE2  22F8               	addwfc	tblptru,f,c
  6348  011AE4                     	endif
  6349  011AE4  0008               	tblrd		*
  6350  011AE6  CFF5 F066          	movff	tablat,??_MiMAC_SetChannel
  6351  011AEA  0E00               	movlw	0
  6352  011AEC  1166               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6353  011AEE  6F61               	movwf	RegisterSet@setting& (0+255),b
  6354  011AF0  0E10               	movlw	16
  6355  011AF2  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  6356  011AF4  ECF0  F093         	call	_RegisterSet	;wreg free
  6357                           
  6358                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  6359  011AF8  0E20               	movlw	32
  6360  011AFA  EC23  F090         	call	_SetRFMode
  6361                           
  6362                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  6363  011AFE  0100               	movlb	0	; () banked
  6364  011B00  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  6365  011B02  0E4E               	movlw	78
  6366  011B04  6F61               	movwf	RegisterSet@setting& (0+255),b
  6367  011B06  ECF0  F093         	call	_RegisterSet	;wreg free
  6368                           
  6369                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  6370  011B0A  0E40               	movlw	64
  6371  011B0C  EC23  F090         	call	_SetRFMode
  6372                           
  6373                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6374  011B10  0E1C               	movlw	28
  6375  011B12  0100               	movlb	0	; () banked
  6376  011B14  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  6377  011B16  0E0F               	movlw	15
  6378  011B18  6F61               	movwf	RegisterSet@setting& (0+255),b
  6379  011B1A  ECF0  F093         	call	_RegisterSet	;wreg free
  6380                           
  6381                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  6382  011B1E  0E20               	movlw	32
  6383  011B20  EC23  F090         	call	_SetRFMode
  6384                           
  6385                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  6386  011B24  0E60               	movlw	96
  6387  011B26  EC23  F090         	call	_SetRFMode
  6388                           
  6389                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  6390  011B2A  0C01               	retlw	1	;funcret
  6391  011B2C                     __end_of_MiMAC_SetChannel:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           prodh	equ	0xFF4
  6398                           prodl	equ	0xFF3
  6399                           intcon	equ	0xFF2
  6400                           intcon2	equ	0xFF1
  6401                           intcon3	equ	0xFF0
  6402                           postinc0	equ	0xFEE
  6403                           wreg	equ	0xFE8
  6404                           postdec1	equ	0xFE5
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function _InitSymbolTimer *****************
  6414 ;; Defined at:
  6415 ;;		line 60 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : F/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    5
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_MiApp_ProtocolInit
  6440 ;;		_main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text27
  6445  012A80                     __ptext27:
  6446                           	opt stack 0
  6447  012A80                     _InitSymbolTimer:
  6448                           	opt stack 23
  6449                           
  6450                           ;symbol.c: 70: T1CON = 0b00111000;
  6451                           
  6452                           ;incstack = 0
  6453  012A80  0E38               	movlw	56
  6454  012A82  6ECD               	movwf	4045,c	;volatile
  6455                           
  6456                           ;symbol.c: 71: PIR1bits.TMR1IF = 0;
  6457  012A84  909E               	bcf	3998,0,c	;volatile
  6458                           
  6459                           ;symbol.c: 72: PIE1bits.TMR1IE = 1;
  6460  012A86  809D               	bsf	3997,0,c	;volatile
  6461                           
  6462                           ;symbol.c: 73: T1CONbits.TMR1ON = 1;
  6463  012A88  80CD               	bsf	4045,0,c	;volatile
  6464                           
  6465                           ;symbol.c: 75: timerExtension1 = 0;
  6466  012A8A  6A39               	clrf	_timerExtension1,c	;volatile
  6467                           
  6468                           ;symbol.c: 76: timerExtension2 = 0;
  6469  012A8C  0100               	movlb	0	; () banked
  6470  012A8E  6BDD               	clrf	_timerExtension2& (0+255),b	;volatile
  6471                           
  6472                           ; BSR set to: 0
  6473  012A90  0012               	return		;funcret
  6474  012A92                     __end_of_InitSymbolTimer:
  6475                           	opt stack 0
  6476                           tblptru	equ	0xFF8
  6477                           tblptrh	equ	0xFF7
  6478                           tblptrl	equ	0xFF6
  6479                           tablat	equ	0xFF5
  6480                           prodh	equ	0xFF4
  6481                           prodl	equ	0xFF3
  6482                           intcon	equ	0xFF2
  6483                           intcon2	equ	0xFF1
  6484                           intcon3	equ	0xFF0
  6485                           postinc0	equ	0xFEE
  6486                           wreg	equ	0xFE8
  6487                           postdec1	equ	0xFE5
  6488                           fsr1l	equ	0xFE1
  6489                           indf2	equ	0xFDF
  6490                           postinc2	equ	0xFDE
  6491                           postdec2	equ	0xFDD
  6492                           fsr2h	equ	0xFDA
  6493                           fsr2l	equ	0xFD9
  6494                           status	equ	0xFD8
  6495                           
  6496 ;; *************** function _EEPROM_Read *****************
  6497 ;; Defined at:
  6498 ;;		line 26 in file "../src/system_config/pic18exp_pic18f87j11_89xa/eeprom.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  dest            1    1[BANK0 ] PTR unsigned char 
  6501 ;;		 -> myLongAddress(8), 
  6502 ;;  addr            1    2[BANK0 ] unsigned char 
  6503 ;;  count           1    3[BANK0 ] unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : F/0
  6512 ;;		On exit  : F/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:        3 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    7
  6522 ;; This function calls:
  6523 ;;		_SPIGet
  6524 ;;		_SPIPut
  6525 ;; This function is called by:
  6526 ;;		_MiApp_ProtocolInit
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text28
  6531  01275A                     __ptext28:
  6532                           	opt stack 0
  6533  01275A                     _EEPROM_Read:
  6534                           	opt stack 21
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;eeprom.c: 34: LATEbits.LATE2 = 0;
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;incstack = 0
  6541  01275A  948D               	bcf	3981,2,c	;volatile
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;eeprom.c: 35: SPIPut(0x03);
  6545  01275C  0E03               	movlw	3
  6546  01275E  EC13  F095         	call	_SPIPut
  6547                           
  6548                           ;eeprom.c: 36: SPIPut(addr);
  6549  012762  0100               	movlb	0	; () banked
  6550  012764  5162               	movf	EEPROM_Read@addr& (0+255),w,b
  6551  012766  EC13  F095         	call	_SPIPut
  6552                           
  6553                           ;eeprom.c: 37: while( count )
  6554  01276A  D009               	goto	l6080
  6555  01276C                     l6074:
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;eeprom.c: 38: {
  6559                           ;eeprom.c: 39: *dest++ = SPIGet();
  6560  01276C  5161               	movf	EEPROM_Read@dest& (0+255),w,b
  6561  01276E  6ED9               	movwf	fsr2l,c
  6562  012770  6ADA               	clrf	fsr2h,c
  6563  012772  EC72  F095         	call	_SPIGet	;wreg free
  6564  012776  6EDF               	movwf	indf2,c
  6565  012778  0100               	movlb	0	; () banked
  6566  01277A  2B61               	incf	EEPROM_Read@dest& (0+255),f,b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;eeprom.c: 40: count--;
  6570  01277C  0763               	decf	EEPROM_Read@count& (0+255),f,b
  6571  01277E                     l6080:
  6572  01277E  0100               	movlb	0	; () banked
  6573  012780  5163               	movf	EEPROM_Read@count& (0+255),w,b
  6574  012782  E1F4               	bnz	l6074
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;eeprom.c: 41: }
  6578                           ;eeprom.c: 42: LATEbits.LATE2 = 1;
  6579  012784  848D               	bsf	3981,2,c	;volatile
  6580                           
  6581                           ; BSR set to: 0
  6582  012786  0012               	return		;funcret
  6583  012788                     __end_of_EEPROM_Read:
  6584                           	opt stack 0
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           intcon	equ	0xFF2
  6592                           intcon2	equ	0xFF1
  6593                           intcon3	equ	0xFF0
  6594                           postinc0	equ	0xFEE
  6595                           wreg	equ	0xFE8
  6596                           postdec1	equ	0xFE5
  6597                           fsr1l	equ	0xFE1
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function _MiApp_EstablishConnection *****************
  6606 ;; Defined at:
  6607 ;;		line 2276 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  ActiveScanIn    1    wreg     unsigned char 
  6610 ;;  Mode            1   58[BANK0 ] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6613 ;;  i               1   74[BANK0 ] unsigned char 
  6614 ;;  t2              4   70[BANK0 ] struct _MIWI_TICK
  6615 ;;  t1              4   65[BANK0 ] struct _MIWI_TICK
  6616 ;;  connectionIn    1   69[BANK0 ] unsigned char 
  6617 ;;  retry           1   64[BANK0 ] unsigned char 
  6618 ;;  tmpConnectio    1   63[BANK0 ] unsigned char 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      unsigned char 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : F/0
  6625 ;;		On exit  : F/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6628 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6629 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;Total ram usage:       17 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:   13
  6635 ;; This function calls:
  6636 ;;		_MiApp_DiscardMessage
  6637 ;;		_MiApp_MessageAvailable
  6638 ;;		_MiWi_TickGet
  6639 ;;		_SendPacket
  6640 ;; This function is called by:
  6641 ;;		_Initialize_Demo
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text29
  6646  01166C                     __ptext29:
  6647                           	opt stack 0
  6648  01166C                     _MiApp_EstablishConnection:
  6649                           	opt stack 16
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;miwi_p2p.c: 2278: uint8_t tmpConnectionMode = ConnMode;
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;incstack = 0
  6656  01166C  C0F6  F09F         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;miwi_p2p.c: 2279: uint8_t retry = 3;
  6660  011670  0E03               	movlw	3
  6661  011672  6FA0               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;miwi_p2p.c: 2280: uint8_t connectionInterval = 0;
  6665  011674  6BA5               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;miwi_p2p.c: 2281: MIWI_TICK t1, t2;
  6669                           ;miwi_p2p.c: 2282: tick1 = MiWi_TickGet();
  6670  011676  EC78  F091         	call	_MiWi_TickGet	;wreg free
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;miwi_p2p.c: 2283: if( Mode == 0x01 )
  6674  01167A  059A               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6675  01167C  E101               	bnz	l6358
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;miwi_p2p.c: 2284: {
  6679                           ;miwi_p2p.c: 2285: return 0xFF;
  6680  01167E  0CFF               	retlw	255
  6681  011680                     l6358:
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;miwi_p2p.c: 2286: }
  6685                           ;miwi_p2p.c: 2288: t1 = MiWi_TickGet();
  6686  011680  EC78  F091         	call	_MiWi_TickGet	;wreg free
  6687  011684  C060  F0A1         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6688  011688  C061  F0A2         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6689  01168C  C062  F0A3         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6690  011690  C063  F0A4         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;miwi_p2p.c: 2290: t1.Val -= (((uint32_t)(10000000)/32));
  6694  011694  0EB4               	movlw	180
  6695  011696  5FA1               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6696  011698  0EC4               	movlw	196
  6697  01169A  5BA2               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6698  01169C  0E04               	movlw	4
  6699  01169E  5BA3               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6700  0116A0  0E00               	movlw	0
  6701  0116A2  5BA4               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;miwi_p2p.c: 2291: ConnMode = 0x00;
  6705  0116A4  6BF6               	clrf	_ConnMode& (0+255),b
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 1;
  6709  0116A6  89D1               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6710                           
  6711                           ;miwi_p2p.c: 2293: while( P2PStatus.bits.SearchConnection )
  6712  0116A8  D063               	goto	l6416
  6713  0116AA                     l6366:
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;miwi_p2p.c: 2294: {
  6717                           ;miwi_p2p.c: 2295: t2 = MiWi_TickGet();
  6718  0116AA  EC78  F091         	call	_MiWi_TickGet	;wreg free
  6719  0116AE  C060  F0A6         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6720  0116B2  C061  F0A7         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6721  0116B6  C062  F0A8         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6722  0116BA  C063  F0A9         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;miwi_p2p.c: 2296: if( (t2.Val - t1.Val) > (((uint32_t)(10000000)/32)) )
  6726  0116BE  51A1               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6727  0116C0  5DA6               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6728  0116C2  6F9B               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6729  0116C4  51A2               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6730  0116C6  59A7               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6731  0116C8  6F9C               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6732  0116CA  51A3               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6733  0116CC  59A8               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6734  0116CE  6F9D               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6735  0116D0  51A4               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6736  0116D2  59A9               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6737  0116D4  6F9E               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6738  0116D6  519E               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6739  0116D8  E107               	bnz	u5170
  6740  0116DA  0EB5               	movlw	181
  6741  0116DC  5D9B               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6742  0116DE  0EC4               	movlw	196
  6743  0116E0  599C               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6744  0116E2  0E04               	movlw	4
  6745  0116E4  599D               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6746  0116E6  E33E               	bnc	l6412
  6747  0116E8                     u5170:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;miwi_p2p.c: 2297: {
  6751                           ;miwi_p2p.c: 2298: t1.Val = t2.Val;
  6752  0116E8  C0A6  F0A1         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6753  0116EC  C0A7  F0A2         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6754  0116F0  C0A8  F0A3         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6755  0116F4  C0A9  F0A4         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;miwi_p2p.c: 2300: if( connectionInterval-- > 0 )
  6759  0116F8  07A5               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6760  0116FA  29A5               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6761  0116FC  E139               	bnz	l6416
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;miwi_p2p.c: 2303: }
  6765                           ;miwi_p2p.c: 2304: connectionInterval = 2-1;
  6766  0116FE  0E01               	movlw	1
  6767  011700  6FA5               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;miwi_p2p.c: 2305: if( retry-- == 0 )
  6771  011702  07A0               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6772  011704  29A0               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6773  011706  E102               	bnz	l479
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;miwi_p2p.c: 2306: {
  6777                           ;miwi_p2p.c: 2308: P2PStatus.bits.SearchConnection = 0;
  6778  011708  99D1               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6779  01170A  0CFF               	retlw	255
  6780  01170C                     l479:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;miwi_p2p.c: 2310: }
  6784                           ;miwi_p2p.c: 2311: {TxData = 0;};
  6785  01170C  6BD6               	clrf	_TxData& (0+255),b
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;miwi_p2p.c: 2312: TxBuffer[TxData++] = 0x81;
  6789  01170E  51D6               	movf	_TxData& (0+255),w,b
  6790  011710  0F3A               	addlw	low _TxBuffer
  6791  011712  6ED9               	movwf	fsr2l,c
  6792  011714  6ADA               	clrf	fsr2h,c
  6793  011716  0E81               	movlw	129
  6794  011718  6EDF               	movwf	indf2,c
  6795                           
  6796                           ; BSR set to: 0
  6797  01171A  2BD6               	incf	_TxData& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;miwi_p2p.c: 2313: TxBuffer[TxData++] = currentChannel;
  6801  01171C  51D6               	movf	_TxData& (0+255),w,b
  6802  01171E  0F3A               	addlw	low _TxBuffer
  6803  011720  6ED9               	movwf	fsr2l,c
  6804  011722  6ADA               	clrf	fsr2h,c
  6805  011724  C0EB  FFDF         	movff	_currentChannel,indf2
  6806  011728  2BD6               	incf	_TxData& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;miwi_p2p.c: 2314: TxBuffer[TxData++] = P2PCapacityInfo;
  6810  01172A  51D6               	movf	_TxData& (0+255),w,b
  6811  01172C  0F3A               	addlw	low _TxBuffer
  6812  01172E  6ED9               	movwf	fsr2l,c
  6813  011730  6ADA               	clrf	fsr2h,c
  6814  011732  C0D0  FFDF         	movff	_P2PCapacityInfo,indf2
  6815                           
  6816                           ; BSR set to: 0
  6817  011736  2BD6               	incf	_TxData& (0+255),f,b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;miwi_p2p.c: 2321: {
  6821                           ;miwi_p2p.c: 2322: uint8_t i;
  6822                           ;miwi_p2p.c: 2324: for(i = 0; i < 1; i++)
  6823  011738  6BAA               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6824  01173A                     l6402:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;miwi_p2p.c: 2325: {
  6828                           ;miwi_p2p.c: 2326: TxBuffer[TxData++] = AdditionalNodeID[i];
  6829  01173A  51AA               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6830  01173C  0FEC               	addlw	low _AdditionalNodeID
  6831  01173E  6ED9               	movwf	fsr2l,c
  6832  011740  6ADA               	clrf	fsr2h,c
  6833  011742  51D6               	movf	_TxData& (0+255),w,b
  6834  011744  0F3A               	addlw	low _TxBuffer
  6835  011746  6EE1               	movwf	fsr1l,c
  6836  011748  6AE2               	clrf	fsr1h,c
  6837  01174A  CFDF FFE7          	movff	indf2,indf1
  6838                           
  6839                           ; BSR set to: 0
  6840  01174E  2BD6               	incf	_TxData& (0+255),f,b
  6841                           
  6842                           ; BSR set to: 0
  6843  011750  2BAA               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6844                           
  6845                           ; BSR set to: 0
  6846  011752  51AA               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6847  011754  E0F2               	bz	l6402
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;miwi_p2p.c: 2327: }
  6851                           ;miwi_p2p.c: 2328: }
  6852                           ;miwi_p2p.c: 2357: SendPacket(1, (0), 1, 0);
  6853  011756  6B86               	clrf	SendPacket@DestinationAddress& (0+255),b
  6854  011758  6B87               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6855  01175A  0E01               	movlw	1
  6856  01175C  6F88               	movwf	SendPacket@isCommand& (0+255),b
  6857  01175E  6B89               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6858  011760  EC96  F08D         	call	_SendPacket
  6859  011764                     l6412:
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;miwi_p2p.c: 2360: }
  6863                           ;miwi_p2p.c: 2362: if( MiApp_MessageAvailable())
  6864  011764  EC6D  F095         	call	_MiApp_MessageAvailable	;wreg free
  6865  011768  0900               	iorlw	0
  6866  01176A  E002               	bz	l6416
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;miwi_p2p.c: 2363: {
  6870                           ;miwi_p2p.c: 2364: MiApp_DiscardMessage();
  6871  01176C  EC80  F095         	call	_MiApp_DiscardMessage	;wreg free
  6872  011770                     l6416:
  6873                           
  6874                           ; BSR set to: 0
  6875  011770  B9D1               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6876  011772  D79B               	goto	l6366
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;miwi_p2p.c: 2365: }
  6880                           ;miwi_p2p.c: 2367: }
  6881                           ;miwi_p2p.c: 2369: ConnMode = tmpConnectionMode;
  6882  011774  C09F  F0F6         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;miwi_p2p.c: 2374: return LatestConnection;
  6886  011778  51CD               	movf	_LatestConnection& (0+255),w,b
  6887                           
  6888                           ; BSR set to: 0
  6889  01177A  0012               	return		;funcret
  6890  01177C                     __end_of_MiApp_EstablishConnection:
  6891                           	opt stack 0
  6892                           tblptru	equ	0xFF8
  6893                           tblptrh	equ	0xFF7
  6894                           tblptrl	equ	0xFF6
  6895                           tablat	equ	0xFF5
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           intcon	equ	0xFF2
  6899                           intcon2	equ	0xFF1
  6900                           intcon3	equ	0xFF0
  6901                           postinc0	equ	0xFEE
  6902                           wreg	equ	0xFE8
  6903                           indf1	equ	0xFE7
  6904                           postdec1	equ	0xFE5
  6905                           fsr1h	equ	0xFE2
  6906                           fsr1l	equ	0xFE1
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           fsr2h	equ	0xFDA
  6911                           fsr2l	equ	0xFD9
  6912                           status	equ	0xFD8
  6913                           
  6914 ;; *************** function _MiApp_MessageAvailable *****************
  6915 ;; Defined at:
  6916 ;;		line 2406 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      unsigned char 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : F/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;Total ram usage:        0 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:   12
  6937 ;; This function calls:
  6938 ;;		_P2PTasks
  6939 ;; This function is called by:
  6940 ;;		_MiApp_EstablishConnection
  6941 ;;		_Process_RxMessage
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text30
  6946  012ADA                     __ptext30:
  6947                           	opt stack 0
  6948  012ADA                     _MiApp_MessageAvailable:
  6949                           	opt stack 15
  6950                           
  6951                           ;miwi_p2p.c: 2408: P2PTasks();
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;incstack = 0
  6955  012ADA  ECB7  F083         	call	_P2PTasks	;wreg free
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;miwi_p2p.c: 2410: return P2PStatus.bits.RxHasUserData;
  6959  012ADE  B7D1               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6960  012AE0  0C01               	retlw	1
  6961                           
  6962                           ; BSR set to: 0
  6963  012AE2  0C00               	retlw	0	;funcret
  6964  012AE4                     __end_of_MiApp_MessageAvailable:
  6965                           	opt stack 0
  6966                           tblptru	equ	0xFF8
  6967                           tblptrh	equ	0xFF7
  6968                           tblptrl	equ	0xFF6
  6969                           tablat	equ	0xFF5
  6970                           prodh	equ	0xFF4
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           intcon2	equ	0xFF1
  6974                           intcon3	equ	0xFF0
  6975                           postinc0	equ	0xFEE
  6976                           wreg	equ	0xFE8
  6977                           indf1	equ	0xFE7
  6978                           postdec1	equ	0xFE5
  6979                           fsr1h	equ	0xFE2
  6980                           fsr1l	equ	0xFE1
  6981                           indf2	equ	0xFDF
  6982                           postinc2	equ	0xFDE
  6983                           postdec2	equ	0xFDD
  6984                           fsr2h	equ	0xFDA
  6985                           fsr2l	equ	0xFD9
  6986                           status	equ	0xFD8
  6987                           
  6988 ;; *************** function _P2PTasks *****************
  6989 ;; Defined at:
  6990 ;;		line 350 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  status          1   56[BANK0 ] unsigned char 
  6995 ;;  FW_Stat         1    0        unsigned char 
  6996 ;;  tmpTick         4   52[BANK0 ] struct _MIWI_TICK
  6997 ;;  tick3           4    0        struct _MIWI_TICK
  6998 ;;  tick2           4    0        struct _MIWI_TICK
  6999 ;;  i               1   57[BANK0 ] unsigned char 
  7000 ;;  broadcast_st    1    0        unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : F/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;Total ram usage:       10 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:   11
  7017 ;; This function calls:
  7018 ;;		_AddConnection
  7019 ;;		_MiMAC_DiscardPacket
  7020 ;;		_MiMAC_ReceivedPacket
  7021 ;;		_MiWi_TickGet
  7022 ;;		_NVMWrite
  7023 ;;		_SendPacket
  7024 ;;		_isSameAddress
  7025 ;; This function is called by:
  7026 ;;		_MiApp_MessageAvailable
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text31
  7031  01076E                     __ptext31:
  7032                           	opt stack 0
  7033  01076E                     _P2PTasks:
  7034                           	opt stack 15
  7035                           
  7036                           ;miwi_p2p.c: 352: uint8_t i;
  7037                           ;miwi_p2p.c: 353: MIWI_TICK tmpTick ,tick2 , tick3 ;
  7038                           ;miwi_p2p.c: 354: bool broadcast_status;
  7039                           ;miwi_p2p.c: 427: if( P2PStatus.bits.SaveConnection )
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;incstack = 0
  7043  01076E  0100               	movlb	0	; () banked
  7044  010770  A3D1               	btfss	_P2PStatus& (0+255),1,b	;volatile
  7045  010772  D02D               	goto	l5574
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;miwi_p2p.c: 428: {
  7049                           ;miwi_p2p.c: 429: tmpTick = MiWi_TickGet();
  7050  010774  EC78  F091         	call	_MiWi_TickGet	;wreg free
  7051  010778  C060  F094         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7052  01077C  C061  F095         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7053  010780  C062  F096         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7054  010784  C063  F097         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;miwi_p2p.c: 430: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(10000000)/32)) )
  7058  010788  51C4               	movf	_nvmDelayTick& (0+255),w,b
  7059  01078A  5D94               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7060  01078C  6F90               	movwf	??_P2PTasks& (0+255),b
  7061  01078E  51C5               	movf	(_nvmDelayTick+1)& (0+255),w,b
  7062  010790  5995               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7063  010792  6F91               	movwf	(??_P2PTasks+1)& (0+255),b
  7064  010794  51C6               	movf	(_nvmDelayTick+2)& (0+255),w,b
  7065  010796  5996               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7066  010798  6F92               	movwf	(??_P2PTasks+2)& (0+255),b
  7067  01079A  51C7               	movf	(_nvmDelayTick+3)& (0+255),w,b
  7068  01079C  5997               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7069  01079E  6F93               	movwf	(??_P2PTasks+3)& (0+255),b
  7070  0107A0  5193               	movf	(??_P2PTasks+3)& (0+255),w,b
  7071  0107A2  E107               	bnz	u4400
  7072  0107A4  0EB5               	movlw	181
  7073  0107A6  5D90               	subwf	??_P2PTasks& (0+255),w,b
  7074  0107A8  0EC4               	movlw	196
  7075  0107AA  5991               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7076  0107AC  0E04               	movlw	4
  7077  0107AE  5992               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7078  0107B0  E30E               	bnc	l5574
  7079  0107B2                     u4400:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;miwi_p2p.c: 431: {
  7083                           ;miwi_p2p.c: 432: P2PStatus.bits.SaveConnection = 0;
  7084  0107B2  93D1               	bcf	_P2PStatus& (0+255),1,b	;volatile
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;miwi_p2p.c: 433: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)5 *
      +                           sizeof(CONNECTION_ENTRY));
  7088  0107B4  0E50               	movlw	low _ConnectionTable
  7089  0107B6  6F61               	movwf	NVMWrite@source& (0+255),b
  7090  0107B8  0E01               	movlw	high _ConnectionTable
  7091  0107BA  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  7092  0107BC  C0E0  F063         	movff	_nvmConnectionTable,NVMWrite@addr
  7093  0107C0  C0E1  F064         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  7094  0107C4  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  7095  0107C6  0E32               	movlw	50
  7096  0107C8  6F65               	movwf	NVMWrite@count& (0+255),b
  7097  0107CA  ECE3  F08D         	call	_NVMWrite	;wreg free
  7098  0107CE                     l5574:
  7099                           
  7100                           ;miwi_p2p.c: 435: }
  7101                           ;miwi_p2p.c: 436: }
  7102                           ;miwi_p2p.c: 453: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  7103  0107CE  0100               	movlb	0	; () banked
  7104  0107D0  B7D1               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7105  0107D2  0012               	return	
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;miwi_p2p.c: 454: {
  7109                           ;miwi_p2p.c: 455: bool FW_Stat = 0;
  7110  0107D4  ECA5  F088         	call	_MiMAC_ReceivedPacket	;wreg free
  7111  0107D8  0900               	iorlw	0
  7112  0107DA  B4D8               	btfsc	status,2,c
  7113  0107DC  0012               	return	
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;miwi_p2p.c: 456: rxMessage.flags.Val = 0;
  7117  0107DE  6BAE               	clrf	_rxMessage& (0+255),b
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;miwi_p2p.c: 459: temp_bit = MACRxPacket.flags.bits.broadcast;
  7121  0107E0  0E00               	movlw	0
  7122  0107E2  B5B8               	btfsc	_MACRxPacket& (0+255),2,b
  7123  0107E4  0E01               	movlw	1
  7124  0107E6  6FDC               	movwf	_temp_bit& (0+255),b
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;miwi_p2p.c: 460: rxMessage.flags.bits.broadcast = temp_bit;
  7128  0107E8  19AE               	xorwf	_rxMessage& (0+255),w,b
  7129  0107EA  0BFC               	andlw	-4
  7130  0107EC  19DC               	xorwf	_temp_bit& (0+255),w,b
  7131  0107EE  6FAE               	movwf	_rxMessage& (0+255),b
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7135  0107F0  A7B8               	btfss	_MACRxPacket& (0+255),3,b
  7136  0107F2  D002               	bra	u4435
  7137  0107F4  87AE               	bsf	_rxMessage& (0+255),3,b
  7138  0107F6  D002               	bra	u4437
  7139  0107F8                     u4435:
  7140  0107F8  0100               	movlb	0	; () banked
  7141  0107FA  97AE               	bcf	_rxMessage& (0+255),3,b
  7142  0107FC                     u4437:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7146  0107FC  51B8               	movf	_MACRxPacket& (0+255),w,b
  7147  0107FE  0B03               	andlw	3
  7148  010800  06E8               	decf	wreg,f,c
  7149  010802  E103               	bnz	u4440
  7150  010804  6B90               	clrf	??_P2PTasks& (0+255),b
  7151  010806  2B90               	incf	??_P2PTasks& (0+255),f,b
  7152  010808  D002               	goto	u4458
  7153  01080A                     u4440:
  7154  01080A  0100               	movlb	0	; () banked
  7155  01080C  6B90               	clrf	??_P2PTasks& (0+255),b
  7156  01080E                     u4458:
  7157  01080E  3B90               	swapf	??_P2PTasks& (0+255),f,b
  7158  010810  4790               	rlncf	??_P2PTasks& (0+255),f,b
  7159  010812  51AE               	movf	_rxMessage& (0+255),w,b
  7160  010814  1990               	xorwf	??_P2PTasks& (0+255),w,b
  7161  010816  0BDF               	andlw	-33
  7162  010818  1990               	xorwf	??_P2PTasks& (0+255),w,b
  7163  01081A  6FAE               	movwf	_rxMessage& (0+255),b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7167  01081C  AFB8               	btfss	_MACRxPacket& (0+255),7,b
  7168  01081E  D002               	bra	u4465
  7169  010820  8DAE               	bsf	_rxMessage& (0+255),6,b
  7170  010822  D002               	bra	u4467
  7171  010824                     u4465:
  7172  010824  0100               	movlb	0	; () banked
  7173  010826  9DAE               	bcf	_rxMessage& (0+255),6,b
  7174  010828                     u4467:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7178  010828  AFB8               	btfss	_MACRxPacket& (0+255),7,b
  7179  01082A  D004               	goto	l5594
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;miwi_p2p.c: 466: {
  7183                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7184  01082C  C0B9  F0B1         	movff	_MACRxPacket+1,_rxMessage+3
  7185  010830  C0BA  F0B2         	movff	_MACRxPacket+2,_rxMessage+4
  7186  010834                     l5594:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;miwi_p2p.c: 468: }
  7190                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7191  010834  C0BD  F0B5         	movff	_MACRxPacket+5,_rxMessage+7
  7192                           
  7193                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7194  010838  C0BB  F0B3         	movff	_MACRxPacket+3,_rxMessage+5
  7195  01083C  C0BC  F0B4         	movff	_MACRxPacket+4,_rxMessage+6
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7199  010840  C0BF  F0B7         	movff	_MACRxPacket+7,_rxMessage+9
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7203  010844  C0BE  F0B6         	movff	_MACRxPacket+6,_rxMessage+8
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7207  010848  ABAE               	btfss	_rxMessage& (0+255),5,b
  7208  01084A  D191               	goto	l377
  7209  01084C  D17C               	goto	l5782
  7210  01084E                     
  7211                           ; BSR set to: 0
  7212                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
  7213  01084E  EE20 F001          	lfsr	2,1
  7214  010852  51B3               	movf	(_rxMessage+5)& (0+255),w,b
  7215  010854  26D9               	addwf	fsr2l,f,c
  7216  010856  51B4               	movf	(_rxMessage+6)& (0+255),w,b
  7217  010858  22DA               	addwfc	fsr2h,f,c
  7218  01085A  51EB               	movf	_currentChannel& (0+255),w,b
  7219  01085C  18DE               	xorwf	postinc2,w,c
  7220  01085E  E003               	bz	l5608
  7221  010860                     l5606:
  7222                           
  7223                           ;miwi_p2p.c: 514: {
  7224                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
  7225  010860  ECE7  F094         	call	_MiMAC_DiscardPacket	;wreg free
  7226                           
  7227                           ;miwi_p2p.c: 516: break;
  7228  010864  D185               	goto	l5784
  7229  010866                     l5608:
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;miwi_p2p.c: 517: }
  7233                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
  7234  010866  0E03               	movlw	3
  7235  010868  19F6               	xorwf	_ConnMode& (0+255),w,b
  7236  01086A  E0FA               	bz	l5606
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;miwi_p2p.c: 525: }
  7240                           ;miwi_p2p.c: 537: {
  7241                           ;miwi_p2p.c: 540: status = AddConnection();
  7242  01086C  EC66  F089         	call	_AddConnection	;wreg free
  7243  010870  6F98               	movwf	P2PTasks@status& (0+255),b
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;miwi_p2p.c: 541: }
  7247                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  7248  010872  05F6               	decf	_ConnMode& (0+255),w,b
  7249  010874  E107               	bnz	l5628
  7250                           
  7251                           ; BSR set to: 0
  7252  010876  0598               	decf	P2PTasks@status& (0+255),w,b
  7253  010878  E005               	bz	l5628
  7254                           
  7255                           ; BSR set to: 0
  7256  01087A  0E02               	movlw	2
  7257  01087C  1998               	xorwf	P2PTasks@status& (0+255),w,b
  7258  01087E  E002               	bz	l5628
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;miwi_p2p.c: 559: {
  7262                           ;miwi_p2p.c: 560: status = 0xF3;
  7263  010880  0EF3               	movlw	243
  7264  010882  6F98               	movwf	P2PTasks@status& (0+255),b
  7265  010884                     l5628:
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;miwi_p2p.c: 568: }
  7269                           ;miwi_p2p.c: 572: {TxData = 0;};
  7270  010884  6BD6               	clrf	_TxData& (0+255),b
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
  7274  010886  51D6               	movf	_TxData& (0+255),w,b
  7275  010888  0F3A               	addlw	low _TxBuffer
  7276  01088A  6ED9               	movwf	fsr2l,c
  7277  01088C  6ADA               	clrf	fsr2h,c
  7278  01088E  0E91               	movlw	145
  7279  010890  6EDF               	movwf	indf2,c
  7280                           
  7281                           ; BSR set to: 0
  7282  010892  2BD6               	incf	_TxData& (0+255),f,b
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
  7286  010894  51D6               	movf	_TxData& (0+255),w,b
  7287  010896  0F3A               	addlw	low _TxBuffer
  7288  010898  6ED9               	movwf	fsr2l,c
  7289  01089A  6ADA               	clrf	fsr2h,c
  7290  01089C  C098  FFDF         	movff	P2PTasks@status,indf2
  7291                           
  7292                           ; BSR set to: 0
  7293  0108A0  2BD6               	incf	_TxData& (0+255),f,b
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
  7297  0108A2  51D6               	movf	_TxData& (0+255),w,b
  7298  0108A4  0F3A               	addlw	low _TxBuffer
  7299  0108A6  6ED9               	movwf	fsr2l,c
  7300  0108A8  6ADA               	clrf	fsr2h,c
  7301  0108AA  C0CF  FFDF         	movff	_MyindexinPC,indf2
  7302                           
  7303                           ; BSR set to: 0
  7304  0108AE  2BD6               	incf	_TxData& (0+255),f,b
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;miwi_p2p.c: 576: if( status == 0x00 ||
  7308                           ;miwi_p2p.c: 577: status == 0x01 )
  7309  0108B0  5198               	movf	P2PTasks@status& (0+255),w,b
  7310  0108B2  E002               	bz	l5646
  7311                           
  7312                           ; BSR set to: 0
  7313  0108B4  0598               	decf	P2PTasks@status& (0+255),w,b
  7314  0108B6  E116               	bnz	l5664
  7315  0108B8                     l5646:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;miwi_p2p.c: 578: {
  7319                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
  7320  0108B8  51D6               	movf	_TxData& (0+255),w,b
  7321  0108BA  0F3A               	addlw	low _TxBuffer
  7322  0108BC  6ED9               	movwf	fsr2l,c
  7323  0108BE  6ADA               	clrf	fsr2h,c
  7324  0108C0  C0D0  FFDF         	movff	_P2PCapacityInfo,indf2
  7325                           
  7326                           ; BSR set to: 0
  7327  0108C4  2BD6               	incf	_TxData& (0+255),f,b
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
  7331  0108C6  6B99               	clrf	P2PTasks@i& (0+255),b
  7332  0108C8                     l5656:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;miwi_p2p.c: 582: {
  7336                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
  7337  0108C8  5199               	movf	P2PTasks@i& (0+255),w,b
  7338  0108CA  0FEC               	addlw	low _AdditionalNodeID
  7339  0108CC  6ED9               	movwf	fsr2l,c
  7340  0108CE  6ADA               	clrf	fsr2h,c
  7341  0108D0  51D6               	movf	_TxData& (0+255),w,b
  7342  0108D2  0F3A               	addlw	low _TxBuffer
  7343  0108D4  6EE1               	movwf	fsr1l,c
  7344  0108D6  6AE2               	clrf	fsr1h,c
  7345  0108D8  CFDF FFE7          	movff	indf2,indf1
  7346                           
  7347                           ; BSR set to: 0
  7348  0108DC  2BD6               	incf	_TxData& (0+255),f,b
  7349                           
  7350                           ; BSR set to: 0
  7351  0108DE  2B99               	incf	P2PTasks@i& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354  0108E0  5199               	movf	P2PTasks@i& (0+255),w,b
  7355  0108E2  E0F2               	bz	l5656
  7356  0108E4                     l5664:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;miwi_p2p.c: 584: }
  7360                           ;miwi_p2p.c: 586: }
  7361                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
  7362  0108E4  ECE7  F094         	call	_MiMAC_DiscardPacket	;wreg free
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;miwi_p2p.c: 602: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7366  0108E8  C0B1  F086         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7367  0108EC  C0B2  F087         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7368  0108F0  0E01               	movlw	1
  7369  0108F2  6F88               	movwf	SendPacket@isCommand& (0+255),b
  7370  0108F4  0E00               	movlw	0
  7371  0108F6  B7AE               	btfsc	_rxMessage& (0+255),3,b
  7372  0108F8  0E01               	movlw	1
  7373  0108FA  6F89               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7374  0108FC  0E00               	movlw	0
  7375  0108FE  EC96  F08D         	call	_SendPacket
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;miwi_p2p.c: 610: if( status == 0x00 )
  7379  010902  5198               	movf	P2PTasks@status& (0+255),w,b
  7380  010904  E1AD               	bnz	l5606
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;miwi_p2p.c: 611: {
  7384                           ;miwi_p2p.c: 612: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
  7385  010906  51CD               	movf	_LatestConnection& (0+255),w,b
  7386  010908  0D0A               	mullw	10
  7387  01090A  0E50               	movlw	low _ConnectionTable
  7388  01090C  24F3               	addwf	prodl,w,c
  7389  01090E  6F61               	movwf	NVMWrite@source& (0+255),b
  7390  010910  0E01               	movlw	high _ConnectionTable
  7391  010912  20F4               	addwfc	prodh,w,c
  7392  010914  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  7393  010916  51CD               	movf	_LatestConnection& (0+255),w,b
  7394  010918  0D0A               	mullw	10
  7395  01091A  51E0               	movf	_nvmConnectionTable& (0+255),w,b
  7396  01091C  24F3               	addwf	prodl,w,c
  7397  01091E  6F63               	movwf	NVMWrite@addr& (0+255),b
  7398  010920  51E1               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  7399  010922  20F4               	addwfc	prodh,w,c
  7400  010924  6F64               	movwf	(NVMWrite@addr+1)& (0+255),b
  7401  010926  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  7402  010928  0E0A               	movlw	10
  7403  01092A  6F65               	movwf	NVMWrite@count& (0+255),b
  7404  01092C  ECE3  F08D         	call	_NVMWrite	;wreg free
  7405                           
  7406                           ;miwi_p2p.c: 613: }
  7407  010930  D11F               	goto	l5784
  7408  010932                     l5674:
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;miwi_p2p.c: 631: {
  7412                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7413  010932  0E02               	movlw	2
  7414  010934  65F6               	cpfsgt	_ConnMode& (0+255),b
  7415  010936  D001               	goto	l5678
  7416  010938  D793               	goto	l5606
  7417  01093A                     l5678:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;miwi_p2p.c: 636: }
  7421                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7422  01093A  EE20 F001          	lfsr	2,1
  7423  01093E  51B3               	movf	(_rxMessage+5)& (0+255),w,b
  7424  010940  26D9               	addwf	fsr2l,f,c
  7425  010942  51B4               	movf	(_rxMessage+6)& (0+255),w,b
  7426  010944  22DA               	addwfc	fsr2h,f,c
  7427  010946  51EB               	movf	_currentChannel& (0+255),w,b
  7428  010948  18DE               	xorwf	postinc2,w,c
  7429  01094A  E18A               	bnz	l5606
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;miwi_p2p.c: 641: }
  7433                           ;miwi_p2p.c: 643: {TxData = 0;};
  7434  01094C  6BD6               	clrf	_TxData& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7438  01094E  51D6               	movf	_TxData& (0+255),w,b
  7439  010950  0F3A               	addlw	low _TxBuffer
  7440  010952  6ED9               	movwf	fsr2l,c
  7441  010954  6ADA               	clrf	fsr2h,c
  7442  010956  0E97               	movlw	151
  7443  010958  6EDF               	movwf	indf2,c
  7444                           
  7445                           ; BSR set to: 0
  7446  01095A  2BD6               	incf	_TxData& (0+255),f,b
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7450  01095C  51D6               	movf	_TxData& (0+255),w,b
  7451  01095E  0F3A               	addlw	low _TxBuffer
  7452  010960  6ED9               	movwf	fsr2l,c
  7453  010962  6ADA               	clrf	fsr2h,c
  7454  010964  C0D0  FFDF         	movff	_P2PCapacityInfo,indf2
  7455  010968  2BD6               	incf	_TxData& (0+255),f,b
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7459  01096A  6B99               	clrf	P2PTasks@i& (0+255),b
  7460  01096C                     l5694:
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;miwi_p2p.c: 648: {
  7464                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7465  01096C  5199               	movf	P2PTasks@i& (0+255),w,b
  7466  01096E  0FEC               	addlw	low _AdditionalNodeID
  7467  010970  6ED9               	movwf	fsr2l,c
  7468  010972  6ADA               	clrf	fsr2h,c
  7469  010974  51D6               	movf	_TxData& (0+255),w,b
  7470  010976  0F3A               	addlw	low _TxBuffer
  7471  010978  6EE1               	movwf	fsr1l,c
  7472  01097A  6AE2               	clrf	fsr1h,c
  7473  01097C  CFDF FFE7          	movff	indf2,indf1
  7474                           
  7475                           ; BSR set to: 0
  7476  010980  2BD6               	incf	_TxData& (0+255),f,b
  7477                           
  7478                           ; BSR set to: 0
  7479  010982  2B99               	incf	P2PTasks@i& (0+255),f,b
  7480                           
  7481                           ; BSR set to: 0
  7482  010984  5199               	movf	P2PTasks@i& (0+255),w,b
  7483  010986  E0F2               	bz	l5694
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;miwi_p2p.c: 650: }
  7487                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7488  010988  ECE7  F094         	call	_MiMAC_DiscardPacket	;wreg free
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;miwi_p2p.c: 665: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7492  01098C  C0B1  F086         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7493  010990  C0B2  F087         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7494  010994  0E01               	movlw	1
  7495  010996  6F88               	movwf	SendPacket@isCommand& (0+255),b
  7496  010998  0E00               	movlw	0
  7497  01099A  B7AE               	btfsc	_rxMessage& (0+255),3,b
  7498  01099C  0E01               	movlw	1
  7499  01099E  6F89               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7500  0109A0  0E00               	movlw	0
  7501  0109A2  EC96  F08D         	call	_SendPacket
  7502                           
  7503                           ;miwi_p2p.c: 668: }
  7504                           ;miwi_p2p.c: 669: break;
  7505  0109A6  D0E4               	goto	l5784
  7506  0109A8                     l399:
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;miwi_p2p.c: 677: {
  7510                           ;miwi_p2p.c: 678: {TxData = 0;};
  7511  0109A8  6BD6               	clrf	_TxData& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7515  0109AA  51D6               	movf	_TxData& (0+255),w,b
  7516  0109AC  0F3A               	addlw	low _TxBuffer
  7517  0109AE  6ED9               	movwf	fsr2l,c
  7518  0109B0  6ADA               	clrf	fsr2h,c
  7519  0109B2  0E92               	movlw	146
  7520  0109B4  6EDF               	movwf	indf2,c
  7521                           
  7522                           ; BSR set to: 0
  7523  0109B6  2BD6               	incf	_TxData& (0+255),f,b
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;miwi_p2p.c: 681: for(i = 0; i < 5; i++)
  7527  0109B8  6B99               	clrf	P2PTasks@i& (0+255),b
  7528  0109BA                     l5716:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;miwi_p2p.c: 682: {
  7532                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7533  0109BA  5199               	movf	P2PTasks@i& (0+255),w,b
  7534  0109BC  0D0A               	mullw	10
  7535  0109BE  0E58               	movlw	low (_ConnectionTable+8)
  7536  0109C0  24F3               	addwf	prodl,w,c
  7537  0109C2  6ED9               	movwf	fsr2l,c
  7538  0109C4  0E01               	movlw	high (_ConnectionTable+8)
  7539  0109C6  20F4               	addwfc	prodh,w,c
  7540  0109C8  6EDA               	movwf	fsr2h,c
  7541  0109CA  AEDF               	btfss	indf2,7,c
  7542  0109CC  D037               	goto	l5728
  7543                           
  7544                           ; BSR set to: 1
  7545                           ;miwi_p2p.c: 685: {
  7546                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7547  0109CE  C0B1  F060         	movff	_rxMessage+3,isSameAddress@Address1
  7548  0109D2  C0B2  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
  7549  0109D6  0100               	movlb	0	; () banked
  7550  0109D8  5199               	movf	P2PTasks@i& (0+255),w,b
  7551  0109DA  0D0A               	mullw	10
  7552  0109DC  0E50               	movlw	low _ConnectionTable
  7553  0109DE  24F3               	addwf	prodl,w,c
  7554  0109E0  6F62               	movwf	isSameAddress@Address2& (0+255),b
  7555  0109E2  0E01               	movlw	high _ConnectionTable
  7556  0109E4  20F4               	addwfc	prodh,w,c
  7557  0109E6  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7558  0109E8  ECC4  F093         	call	_isSameAddress	;wreg free
  7559  0109EC  0900               	iorlw	0
  7560  0109EE  E026               	bz	l5728
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;miwi_p2p.c: 688: {
  7564                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7565  0109F0  5199               	movf	P2PTasks@i& (0+255),w,b
  7566  0109F2  0D0A               	mullw	10
  7567  0109F4  0E58               	movlw	low (_ConnectionTable+8)
  7568  0109F6  24F3               	addwf	prodl,w,c
  7569  0109F8  6ED9               	movwf	fsr2l,c
  7570  0109FA  0E01               	movlw	high (_ConnectionTable+8)
  7571  0109FC  20F4               	addwfc	prodh,w,c
  7572  0109FE  6EDA               	movwf	fsr2h,c
  7573  010A00  6ADF               	clrf	indf2,c
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7577  010A02  5199               	movf	P2PTasks@i& (0+255),w,b
  7578  010A04  0D0A               	mullw	10
  7579  010A06  0E50               	movlw	low _ConnectionTable
  7580  010A08  24F3               	addwf	prodl,w,c
  7581  010A0A  6F61               	movwf	NVMWrite@source& (0+255),b
  7582  010A0C  0E01               	movlw	high _ConnectionTable
  7583  010A0E  20F4               	addwfc	prodh,w,c
  7584  010A10  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  7585  010A12  5199               	movf	P2PTasks@i& (0+255),w,b
  7586  010A14  0D0A               	mullw	10
  7587  010A16  51E0               	movf	_nvmConnectionTable& (0+255),w,b
  7588  010A18  24F3               	addwf	prodl,w,c
  7589  010A1A  6F63               	movwf	NVMWrite@addr& (0+255),b
  7590  010A1C  51E1               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  7591  010A1E  20F4               	addwfc	prodh,w,c
  7592  010A20  6F64               	movwf	(NVMWrite@addr+1)& (0+255),b
  7593  010A22  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  7594  010A24  0E0A               	movlw	10
  7595  010A26  6F65               	movwf	NVMWrite@count& (0+255),b
  7596  010A28  ECE3  F08D         	call	_NVMWrite	;wreg free
  7597                           
  7598                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7599  010A2C  0100               	movlb	0	; () banked
  7600  010A2E  51D6               	movf	_TxData& (0+255),w,b
  7601  010A30  0F3A               	addlw	low _TxBuffer
  7602  010A32  6ED9               	movwf	fsr2l,c
  7603  010A34  6ADA               	clrf	fsr2h,c
  7604  010A36  6ADF               	clrf	indf2,c
  7605                           
  7606                           ; BSR set to: 0
  7607  010A38  2BD6               	incf	_TxData& (0+255),f,b
  7608                           
  7609                           ;miwi_p2p.c: 697: break;
  7610  010A3A  D005               	goto	l5732
  7611  010A3C                     l5728:
  7612  010A3C  0100               	movlb	0	; () banked
  7613  010A3E  2B99               	incf	P2PTasks@i& (0+255),f,b
  7614                           
  7615                           ; BSR set to: 0
  7616  010A40  0E04               	movlw	4
  7617  010A42  6599               	cpfsgt	P2PTasks@i& (0+255),b
  7618  010A44  D7BA               	goto	l5716
  7619  010A46                     l5732:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;miwi_p2p.c: 698: }
  7623                           ;miwi_p2p.c: 699: }
  7624                           ;miwi_p2p.c: 700: }
  7625                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7626  010A46  ECE7  F094         	call	_MiMAC_DiscardPacket	;wreg free
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;miwi_p2p.c: 704: if( i == 5 )
  7630  010A4A  0E05               	movlw	5
  7631  010A4C  1999               	xorwf	P2PTasks@i& (0+255),w,b
  7632  010A4E  E107               	bnz	l5740
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;miwi_p2p.c: 705: {
  7636                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7637  010A50  51D6               	movf	_TxData& (0+255),w,b
  7638  010A52  0F3A               	addlw	low _TxBuffer
  7639  010A54  6ED9               	movwf	fsr2l,c
  7640  010A56  6ADA               	clrf	fsr2h,c
  7641  010A58  0EF0               	movlw	240
  7642  010A5A  6EDF               	movwf	indf2,c
  7643                           
  7644                           ; BSR set to: 0
  7645  010A5C  2BD6               	incf	_TxData& (0+255),f,b
  7646  010A5E                     l5740:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;miwi_p2p.c: 708: }
  7650                           ;miwi_p2p.c: 719: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7651  010A5E  C0B1  F086         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7652  010A62  C0B2  F087         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7653  010A66  0E01               	movlw	1
  7654  010A68  6F88               	movwf	SendPacket@isCommand& (0+255),b
  7655  010A6A  0E00               	movlw	0
  7656  010A6C  B7AE               	btfsc	_rxMessage& (0+255),3,b
  7657  010A6E  0E01               	movlw	1
  7658  010A70  6F89               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7659  010A72  0E00               	movlw	0
  7660  010A74  EC96  F08D         	call	_SendPacket
  7661                           
  7662                           ;miwi_p2p.c: 723: }
  7663                           ;miwi_p2p.c: 724: break;
  7664  010A78  D07B               	goto	l5784
  7665  010A7A                     l5742:
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;miwi_p2p.c: 732: case 0x01:
  7669                           ;miwi_p2p.c: 746: AddConnection();
  7670  010A7A  EC66  F089         	call	_AddConnection	;wreg free
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7674  010A7E  83D1               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7678  010A80  EC78  F091         	call	_MiWi_TickGet	;wreg free
  7679  010A84  C060  F0C4         	movff	?_MiWi_TickGet,_nvmDelayTick
  7680  010A88  C061  F0C5         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7681  010A8C  C062  F0C6         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7682  010A90  C063  F0C7         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7683                           
  7684                           ;miwi_p2p.c: 756: break;
  7685  010A94  D6E5               	goto	l5606
  7686  010A96                     l5750:
  7687                           
  7688                           ; BSR set to: 0
  7689  010A96  EE20 F001          	lfsr	2,1
  7690  010A9A  51B3               	movf	(_rxMessage+5)& (0+255),w,b
  7691  010A9C  26D9               	addwf	fsr2l,f,c
  7692  010A9E  51B4               	movf	(_rxMessage+6)& (0+255),w,b
  7693  010AA0  22DA               	addwfc	fsr2h,f,c
  7694  010AA2  50DF               	movf	indf2,w,c
  7695                           
  7696                           ; Switch size 1, requested type "speed"
  7697                           ; Number of cases is 2, Range of values is 0 to 1
  7698                           ; switch strategies available:
  7699                           ; Name         Instructions Cycles
  7700                           ; simple_byte            7     4 (average)
  7701                           ;	Chosen strategy is simple_byte
  7702  010AA4  E0EA               	bz	l5742
  7703  010AA6  0A01               	xorlw	1	; case 1
  7704  010AA8  E0E8               	bz	l5742
  7705  010AAA  D6DA               	goto	l5606
  7706  010AAC                     l411:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;miwi_p2p.c: 766: {
  7710                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7711  010AAC  BBD1               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;miwi_p2p.c: 768: {
  7715                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7716  010AAE  9BD1               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7717  010AB0  D6D7               	goto	l5606
  7718  010AB2                     l5758:
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;miwi_p2p.c: 817: {
  7722                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7723  010AB2  EE20 F001          	lfsr	2,1
  7724  010AB6  51B3               	movf	(_rxMessage+5)& (0+255),w,b
  7725  010AB8  26D9               	addwf	fsr2l,f,c
  7726  010ABA  51B4               	movf	(_rxMessage+6)& (0+255),w,b
  7727  010ABC  22DA               	addwfc	fsr2h,f,c
  7728  010ABE  50DF               	movf	indf2,w,c
  7729  010AC0  E001 D6CE          	bnz	l5606
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;miwi_p2p.c: 819: {
  7733                           ;miwi_p2p.c: 820: for(i = 0; i < 5; i++)
  7734  010AC4  6B99               	clrf	P2PTasks@i& (0+255),b
  7735  010AC6                     l5766:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;miwi_p2p.c: 821: {
  7739                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7740  010AC6  5199               	movf	P2PTasks@i& (0+255),w,b
  7741  010AC8  0D0A               	mullw	10
  7742  010ACA  0E58               	movlw	low (_ConnectionTable+8)
  7743  010ACC  24F3               	addwf	prodl,w,c
  7744  010ACE  6ED9               	movwf	fsr2l,c
  7745  010AD0  0E01               	movlw	high (_ConnectionTable+8)
  7746  010AD2  20F4               	addwfc	prodh,w,c
  7747  010AD4  6EDA               	movwf	fsr2h,c
  7748  010AD6  AEDF               	btfss	indf2,7,c
  7749  010AD8  D030               	goto	l5774
  7750                           
  7751                           ; BSR set to: 1
  7752                           ;miwi_p2p.c: 824: {
  7753                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7754  010ADA  C0B1  F060         	movff	_rxMessage+3,isSameAddress@Address1
  7755  010ADE  C0B2  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
  7756  010AE2  0100               	movlb	0	; () banked
  7757  010AE4  5199               	movf	P2PTasks@i& (0+255),w,b
  7758  010AE6  0D0A               	mullw	10
  7759  010AE8  0E50               	movlw	low _ConnectionTable
  7760  010AEA  24F3               	addwf	prodl,w,c
  7761  010AEC  6F62               	movwf	isSameAddress@Address2& (0+255),b
  7762  010AEE  0E01               	movlw	high _ConnectionTable
  7763  010AF0  20F4               	addwfc	prodh,w,c
  7764  010AF2  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7765  010AF4  ECC4  F093         	call	_isSameAddress	;wreg free
  7766  010AF8  0900               	iorlw	0
  7767  010AFA  E01F               	bz	l5774
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;miwi_p2p.c: 827: {
  7771                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7772  010AFC  5199               	movf	P2PTasks@i& (0+255),w,b
  7773  010AFE  0D0A               	mullw	10
  7774  010B00  0E58               	movlw	low (_ConnectionTable+8)
  7775  010B02  24F3               	addwf	prodl,w,c
  7776  010B04  6ED9               	movwf	fsr2l,c
  7777  010B06  0E01               	movlw	high (_ConnectionTable+8)
  7778  010B08  20F4               	addwfc	prodh,w,c
  7779  010B0A  6EDA               	movwf	fsr2h,c
  7780  010B0C  6ADF               	clrf	indf2,c
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7784  010B0E  5199               	movf	P2PTasks@i& (0+255),w,b
  7785  010B10  0D0A               	mullw	10
  7786  010B12  0E50               	movlw	low _ConnectionTable
  7787  010B14  24F3               	addwf	prodl,w,c
  7788  010B16  6F61               	movwf	NVMWrite@source& (0+255),b
  7789  010B18  0E01               	movlw	high _ConnectionTable
  7790  010B1A  20F4               	addwfc	prodh,w,c
  7791  010B1C  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  7792  010B1E  5199               	movf	P2PTasks@i& (0+255),w,b
  7793  010B20  0D0A               	mullw	10
  7794  010B22  51E0               	movf	_nvmConnectionTable& (0+255),w,b
  7795  010B24  24F3               	addwf	prodl,w,c
  7796  010B26  6F63               	movwf	NVMWrite@addr& (0+255),b
  7797  010B28  51E1               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  7798  010B2A  20F4               	addwfc	prodh,w,c
  7799  010B2C  6F64               	movwf	(NVMWrite@addr+1)& (0+255),b
  7800  010B2E  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  7801  010B30  0E0A               	movlw	10
  7802  010B32  6F65               	movwf	NVMWrite@count& (0+255),b
  7803  010B34  ECE3  F08D         	call	_NVMWrite	;wreg free
  7804                           
  7805                           ;miwi_p2p.c: 833: break;
  7806  010B38  D693               	goto	l5606
  7807  010B3A                     l5774:
  7808  010B3A  0100               	movlb	0	; () banked
  7809  010B3C  2B99               	incf	P2PTasks@i& (0+255),f,b
  7810                           
  7811                           ; BSR set to: 0
  7812  010B3E  0E04               	movlw	4
  7813  010B40  6599               	cpfsgt	P2PTasks@i& (0+255),b
  7814  010B42  D7C1               	goto	l5766
  7815  010B44  D68D               	goto	l5606
  7816  010B46                     l5782:
  7817                           
  7818                           ; BSR set to: 0
  7819  010B46  C0B3  FFD9         	movff	_rxMessage+5,fsr2l
  7820  010B4A  C0B4  FFDA         	movff	_rxMessage+6,fsr2h
  7821  010B4E  50DF               	movf	indf2,w,c
  7822                           
  7823                           ; Switch size 1, requested type "speed"
  7824                           ; Number of cases is 6, Range of values is 129 to 151
  7825                           ; switch strategies available:
  7826                           ; Name         Instructions Cycles
  7827                           ; simple_byte           19    10 (average)
  7828                           ;	Chosen strategy is simple_byte
  7829  010B50  0A81               	xorlw	129	; case 129
  7830  010B52  E101 D67C          	bz	l5604
  7831  010B56  0A03               	xorlw	3	; case 130
  7832  010B58  E101 D726          	bz	l399
  7833  010B5C  0A05               	xorlw	5	; case 135
  7834  010B5E  E101 D6E8          	bz	l5674
  7835  010B62  0A16               	xorlw	22	; case 145
  7836  010B64  E098               	bz	l5750
  7837  010B66  0A03               	xorlw	3	; case 146
  7838  010B68  E0A4               	bz	l5758
  7839  010B6A  0A05               	xorlw	5	; case 151
  7840  010B6C  E09F               	bz	l411
  7841  010B6E                     l377:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;miwi_p2p.c: 1101: else
  7845                           ;miwi_p2p.c: 1102: {
  7846                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  7847  010B6E  87D1               	bsf	_P2PStatus& (0+255),3,b	;volatile
  7848  010B70                     l5784:
  7849                           
  7850                           ;miwi_p2p.c: 1104: }
  7851                           ;miwi_p2p.c: 1112: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  7852  010B70  0100               	movlb	0	; () banked
  7853  010B72  51B5               	movf	(_rxMessage+7)& (0+255),w,b
  7854  010B74  E004               	bz	l423
  7855                           
  7856                           ; BSR set to: 0
  7857  010B76  B9D1               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7858  010B78  D002               	goto	l423
  7859                           
  7860                           ; BSR set to: 0
  7861  010B7A  ABD1               	btfss	_P2PStatus& (0+255),5,b	;volatile
  7862  010B7C  0012               	return	
  7863  010B7E                     l423:
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;miwi_p2p.c: 1113: {
  7867                           ;miwi_p2p.c: 1114: P2PStatus.bits.RxHasUserData = 0;
  7868  010B7E  97D1               	bcf	_P2PStatus& (0+255),3,b	;volatile
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;miwi_p2p.c: 1115: MiMAC_DiscardPacket();
  7872  010B80  EFE7  F094         	goto	_MiMAC_DiscardPacket	;wreg free
  7873  010B84                     __end_of_P2PTasks:
  7874                           	opt stack 0
  7875                           tblptru	equ	0xFF8
  7876                           tblptrh	equ	0xFF7
  7877                           tblptrl	equ	0xFF6
  7878                           tablat	equ	0xFF5
  7879                           prodh	equ	0xFF4
  7880                           prodl	equ	0xFF3
  7881                           intcon	equ	0xFF2
  7882                           intcon2	equ	0xFF1
  7883                           intcon3	equ	0xFF0
  7884                           postinc0	equ	0xFEE
  7885                           wreg	equ	0xFE8
  7886                           indf1	equ	0xFE7
  7887                           postdec1	equ	0xFE5
  7888                           fsr1h	equ	0xFE2
  7889                           fsr1l	equ	0xFE1
  7890                           indf2	equ	0xFDF
  7891                           postinc2	equ	0xFDE
  7892                           postdec2	equ	0xFDD
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function _SendPacket *****************
  7898 ;; Defined at:
  7899 ;;		line 1627 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  Broadcast       1    wreg     unsigned char 
  7902 ;;  DestinationA    2   38[BANK0 ] PTR unsigned char 
  7903 ;;		 -> ConnectionTable(50), NULL(0), RxPacket.Payload(50), RxPacket(104), 
  7904 ;;  isCommand       1   40[BANK0 ] unsigned char 
  7905 ;;  SecurityEnab    1   41[BANK0 ] unsigned char 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  Broadcast       1   44[BANK0 ] unsigned char 
  7908 ;;  tParam          3   45[BANK0 ] struct .
  7909 ;;  status          1   43[BANK0 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      unsigned char 
  7912 ;; Registers used:
  7913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : F/0
  7916 ;;		On exit  : F/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7919 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;Total ram usage:       10 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:   10
  7926 ;; This function calls:
  7927 ;;		_MiMAC_SendPacket
  7928 ;; This function is called by:
  7929 ;;		_P2PTasks
  7930 ;;		_MiApp_BroadcastPacket
  7931 ;;		_MiApp_UnicastAddress
  7932 ;;		_MiApp_EstablishConnection
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text32
  7937  011B2C                     __ptext32:
  7938                           	opt stack 0
  7939  011B2C                     _SendPacket:
  7940                           	opt stack 15
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;incstack = 0
  7944                           ;SendPacket@Broadcast stored from wreg
  7945  011B2C  6F8C               	movwf	SendPacket@Broadcast& (0+255),b
  7946                           
  7947                           ;miwi_p2p.c: 1633: MAC_TRANS_PARAM tParam;
  7948                           ;miwi_p2p.c: 1634: bool status;
  7949                           ;miwi_p2p.c: 1636: tParam.flags.Val = 0;
  7950  011B2E  0100               	movlb	0	; () banked
  7951  011B30  6B8D               	clrf	SendPacket@tParam& (0+255),b
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;miwi_p2p.c: 1637: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  7955  011B32  5188               	movf	SendPacket@isCommand& (0+255),w,b
  7956  011B34  E003               	bz	u3680
  7957  011B36  6B8A               	clrf	??_SendPacket& (0+255),b
  7958  011B38  2B8A               	incf	??_SendPacket& (0+255),f,b
  7959  011B3A  D002               	goto	u3698
  7960  011B3C                     u3680:
  7961  011B3C  0100               	movlb	0	; () banked
  7962  011B3E  6B8A               	clrf	??_SendPacket& (0+255),b
  7963  011B40                     u3698:
  7964  011B40  518D               	movf	SendPacket@tParam& (0+255),w,b
  7965  011B42  198A               	xorwf	??_SendPacket& (0+255),w,b
  7966  011B44  0BFC               	andlw	-4
  7967  011B46  198A               	xorwf	??_SendPacket& (0+255),w,b
  7968  011B48  6F8D               	movwf	SendPacket@tParam& (0+255),b
  7969                           
  7970                           ;miwi_p2p.c: 1638: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  7971  011B4A  518C               	movf	SendPacket@Broadcast& (0+255),w,b
  7972  011B4C  E103               	bnz	u3700
  7973  011B4E  6B8A               	clrf	??_SendPacket& (0+255),b
  7974  011B50  2B8A               	incf	??_SendPacket& (0+255),f,b
  7975  011B52  D002               	goto	u3718
  7976  011B54                     u3700:
  7977  011B54  0100               	movlb	0	; () banked
  7978  011B56  6B8A               	clrf	??_SendPacket& (0+255),b
  7979  011B58                     u3718:
  7980  011B58  3B8A               	swapf	??_SendPacket& (0+255),f,b
  7981  011B5A  478A               	rlncf	??_SendPacket& (0+255),f,b
  7982  011B5C  518D               	movf	SendPacket@tParam& (0+255),w,b
  7983  011B5E  198A               	xorwf	??_SendPacket& (0+255),w,b
  7984  011B60  0BDF               	andlw	-33
  7985  011B62  198A               	xorwf	??_SendPacket& (0+255),w,b
  7986  011B64  6F8D               	movwf	SendPacket@tParam& (0+255),b
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;miwi_p2p.c: 1639: tParam.flags.bits.broadcast = Broadcast;
  7990  011B66  B18C               	btfsc	SendPacket@Broadcast& (0+255),0,b
  7991  011B68  D002               	bra	u3725
  7992  011B6A  958D               	bcf	SendPacket@tParam& (0+255),2,b
  7993  011B6C  D002               	bra	u3726
  7994  011B6E                     u3725:
  7995  011B6E  0100               	movlb	0	; () banked
  7996  011B70  858D               	bsf	SendPacket@tParam& (0+255),2,b
  7997  011B72                     u3726:
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;miwi_p2p.c: 1640: tParam.flags.bits.secEn = SecurityEnabled;
  8001  011B72  B189               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
  8002  011B74  D002               	bra	u3735
  8003  011B76  978D               	bcf	SendPacket@tParam& (0+255),3,b
  8004  011B78  D002               	bra	u3736
  8005  011B7A                     u3735:
  8006  011B7A  0100               	movlb	0	; () banked
  8007  011B7C  878D               	bsf	SendPacket@tParam& (0+255),3,b
  8008  011B7E                     u3736:
  8009                           
  8010                           ;miwi_p2p.c: 1649: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
  8011  011B7E  518C               	movf	SendPacket@Broadcast& (0+255),w,b
  8012  011B80  E103               	bnz	u3740
  8013  011B82  6B8A               	clrf	??_SendPacket& (0+255),b
  8014  011B84  2B8A               	incf	??_SendPacket& (0+255),f,b
  8015  011B86  D002               	goto	u3758
  8016  011B88                     u3740:
  8017  011B88  0100               	movlb	0	; () banked
  8018  011B8A  6B8A               	clrf	??_SendPacket& (0+255),b
  8019  011B8C                     u3758:
  8020  011B8C  3B8A               	swapf	??_SendPacket& (0+255),f,b
  8021  011B8E  478A               	rlncf	??_SendPacket& (0+255),f,b
  8022  011B90  478A               	rlncf	??_SendPacket& (0+255),f,b
  8023  011B92  518D               	movf	SendPacket@tParam& (0+255),w,b
  8024  011B94  198A               	xorwf	??_SendPacket& (0+255),w,b
  8025  011B96  0BBF               	andlw	-65
  8026  011B98  198A               	xorwf	??_SendPacket& (0+255),w,b
  8027  011B9A  6F8D               	movwf	SendPacket@tParam& (0+255),b
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;miwi_p2p.c: 1662: tParam.flags.bits.sourcePrsnt = 1;
  8031  011B9C  8F8D               	bsf	SendPacket@tParam& (0+255),7,b
  8032                           
  8033                           ;miwi_p2p.c: 1665: tParam.DestAddress = DestinationAddress;
  8034  011B9E  C086  F08E         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
  8035  011BA2  C087  F08F         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;miwi_p2p.c: 1671: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
  8039  011BA6  C08D  F07E         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
  8040  011BAA  C08E  F07F         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
  8041  011BAE  C08F  F080         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
  8042  011BB2  0E3A               	movlw	low _TxBuffer
  8043  011BB4  6F81               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
  8044  011BB6  C0D6  F082         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
  8045  011BBA  ECBE  F08B         	call	_MiMAC_SendPacket	;wreg free
  8046  011BBE  6F8B               	movwf	SendPacket@status& (0+255),b
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;miwi_p2p.c: 1672: TxData = 0;
  8050  011BC0  6BD6               	clrf	_TxData& (0+255),b
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;miwi_p2p.c: 1674: return status;
  8054  011BC2  518B               	movf	SendPacket@status& (0+255),w,b
  8055                           
  8056                           ; BSR set to: 0
  8057  011BC4  0012               	return		;funcret
  8058  011BC6                     __end_of_SendPacket:
  8059                           	opt stack 0
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           intcon2	equ	0xFF1
  8068                           intcon3	equ	0xFF0
  8069                           postinc0	equ	0xFEE
  8070                           wreg	equ	0xFE8
  8071                           indf1	equ	0xFE7
  8072                           postdec1	equ	0xFE5
  8073                           fsr1h	equ	0xFE2
  8074                           fsr1l	equ	0xFE1
  8075                           indf2	equ	0xFDF
  8076                           postinc2	equ	0xFDE
  8077                           postdec2	equ	0xFDD
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function _MiMAC_SendPacket *****************
  8083 ;; Defined at:
  8084 ;;		line 728 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  transParam      3   30[BANK0 ] struct .
  8087 ;;  MACPayload      1   33[BANK0 ] PTR unsigned char 
  8088 ;;		 -> TxBuffer(30), 
  8089 ;;  MACPayloadLe    1   34[BANK0 ] unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  i               1   37[BANK0 ] unsigned char 
  8092 ;;  TxIndex         1   36[BANK0 ] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      unsigned char 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : F/0
  8099 ;;		On exit  : F/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8102 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;Total ram usage:        8 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    9
  8109 ;; This function calls:
  8110 ;;		_TxPacket
  8111 ;; This function is called by:
  8112 ;;		_SendPacket
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text33
  8117  01177C                     __ptext33:
  8118                           	opt stack 0
  8119  01177C                     _MiMAC_SendPacket:
  8120                           	opt stack 15
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
  8124                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
  8125                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 30 )
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;incstack = 0
  8129  01177C  0E1E               	movlw	30
  8130  01177E  6582               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
  8131  011780  D001               	goto	l4748
  8132  011782  0C00               	retlw	0
  8133  011784                     l4748:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;drv_mrf_miwi_89xa.c: 738: }
  8137                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
  8138  011784  B57E               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
  8139  011786  D003               	goto	u3250
  8140  011788  6B83               	clrf	??_MiMAC_SendPacket& (0+255),b
  8141  01178A  2B83               	incf	??_MiMAC_SendPacket& (0+255),f,b
  8142  01178C  D002               	goto	u3268
  8143  01178E                     u3250:
  8144  01178E  0100               	movlb	0	; () banked
  8145  011790  6B83               	clrf	??_MiMAC_SendPacket& (0+255),b
  8146  011792                     u3268:
  8147  011792  3B83               	swapf	??_MiMAC_SendPacket& (0+255),f,b
  8148  011794  4783               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  8149  011796  4783               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  8150  011798  517E               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  8151  01179A  1983               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  8152  01179C  0BBF               	andlw	-65
  8153  01179E  1983               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  8154  0117A0  6F7E               	movwf	MiMAC_SendPacket@transParam& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
  8158  0117A2  8F7E               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  8159                           
  8160                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
  8161  0117A4  517E               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  8162  0117A6  0B03               	andlw	3
  8163  0117A8  06E8               	decf	wreg,f,c
  8164  0117AA  E101               	bnz	l139
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;drv_mrf_miwi_89xa.c: 751: {
  8168                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
  8169  0117AC  8F7E               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  8170  0117AE                     l139:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;drv_mrf_miwi_89xa.c: 753: }
  8174                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
  8175  0117AE  C07E  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
  8176                           
  8177                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
  8178  0117B2  C0CE  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
  8179                           
  8180                           ; BSR set to: 0
  8181  0117B6  2BCE               	incf	_MACSeq& (0+255),f,b
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
  8185  0117B8  0E02               	movlw	2
  8186  0117BA  6F84               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
  8190  0117BC  AD7E               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
  8191  0117BE  D01A               	goto	l144
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;drv_mrf_miwi_89xa.c: 762: {
  8195                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  8196  0117C0  6B85               	clrf	MiMAC_SendPacket@i& (0+255),b
  8197  0117C2  D010               	goto	l4768
  8198  0117C4                     l4762:
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;drv_mrf_miwi_89xa.c: 764: {
  8202                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
  8203  0117C4  5185               	movf	MiMAC_SendPacket@i& (0+255),w,b
  8204  0117C6  257F               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
  8205  0117C8  6ED9               	movwf	fsr2l,c
  8206  0117CA  0E00               	movlw	0
  8207  0117CC  2180               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
  8208  0117CE  6EDA               	movwf	fsr2h,c
  8209  0117D0  0E00               	movlw	low _MACTxBuffer
  8210  0117D2  2584               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  8211  0117D4  6EE1               	movwf	fsr1l,c
  8212  0117D6  6AE2               	clrf	fsr1h,c
  8213  0117D8  0E01               	movlw	high _MACTxBuffer
  8214  0117DA  22E2               	addwfc	fsr1h,f,c
  8215  0117DC  CFDF FFE7          	movff	indf2,indf1
  8216                           
  8217                           ; BSR set to: 0
  8218  0117E0  2B84               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  8219                           
  8220                           ; BSR set to: 0
  8221  0117E2  2B85               	incf	MiMAC_SendPacket@i& (0+255),f,b
  8222  0117E4                     l4768:
  8223                           
  8224                           ; BSR set to: 0
  8225  0117E4  31C8               	rrcf	_MACInitParams& (0+255),w,b
  8226  0117E6  32E8               	rrcf	wreg,f,c
  8227  0117E8  32E8               	rrcf	wreg,f,c
  8228  0117EA  0B0F               	andlw	15
  8229  0117EC  6F83               	movwf	??_MiMAC_SendPacket& (0+255),b
  8230  0117EE  5183               	movf	??_MiMAC_SendPacket& (0+255),w,b
  8231  0117F0  5D85               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  8232  0117F2  E3E8               	bnc	l4762
  8233  0117F4                     l144:
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;drv_mrf_miwi_89xa.c: 771: }
  8237                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
  8238  0117F4  AF7E               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
  8239  0117F6  D018               	goto	l145
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;drv_mrf_miwi_89xa.c: 774: {
  8243                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  8244  0117F8  6B85               	clrf	MiMAC_SendPacket@i& (0+255),b
  8245  0117FA  D00E               	goto	l4778
  8246  0117FC                     l4772:
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;drv_mrf_miwi_89xa.c: 776: {
  8250                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
  8251  0117FC  51C9               	movf	(_MACInitParams+1)& (0+255),w,b
  8252  0117FE  2585               	addwf	MiMAC_SendPacket@i& (0+255),w,b
  8253  011800  6ED9               	movwf	fsr2l,c
  8254  011802  6ADA               	clrf	fsr2h,c
  8255  011804  0E00               	movlw	low _MACTxBuffer
  8256  011806  2584               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  8257  011808  6EE1               	movwf	fsr1l,c
  8258  01180A  6AE2               	clrf	fsr1h,c
  8259  01180C  0E01               	movlw	high _MACTxBuffer
  8260  01180E  22E2               	addwfc	fsr1h,f,c
  8261  011810  CFDF FFE7          	movff	indf2,indf1
  8262                           
  8263                           ; BSR set to: 0
  8264  011814  2B84               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  8265                           
  8266                           ; BSR set to: 0
  8267  011816  2B85               	incf	MiMAC_SendPacket@i& (0+255),f,b
  8268  011818                     l4778:
  8269                           
  8270                           ; BSR set to: 0
  8271  011818  31C8               	rrcf	_MACInitParams& (0+255),w,b
  8272  01181A  32E8               	rrcf	wreg,f,c
  8273  01181C  32E8               	rrcf	wreg,f,c
  8274  01181E  0B0F               	andlw	15
  8275  011820  6F83               	movwf	??_MiMAC_SendPacket& (0+255),b
  8276  011822  5183               	movf	??_MiMAC_SendPacket& (0+255),w,b
  8277  011824  5D85               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  8278  011826  E3EA               	bnc	l4772
  8279  011828                     l145:
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;drv_mrf_miwi_89xa.c: 778: }
  8283                           ;drv_mrf_miwi_89xa.c: 780: }
  8284                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
  8285  011828  6B85               	clrf	MiMAC_SendPacket@i& (0+255),b
  8286  01182A  D00E               	goto	l4786
  8287  01182C                     l4780:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;drv_mrf_miwi_89xa.c: 842: {
  8291                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
  8292  01182C  5181               	movf	MiMAC_SendPacket@MACPayload& (0+255),w,b
  8293  01182E  2585               	addwf	MiMAC_SendPacket@i& (0+255),w,b
  8294  011830  6ED9               	movwf	fsr2l,c
  8295  011832  6ADA               	clrf	fsr2h,c
  8296  011834  0E00               	movlw	low _MACTxBuffer
  8297  011836  2584               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  8298  011838  6EE1               	movwf	fsr1l,c
  8299  01183A  6AE2               	clrf	fsr1h,c
  8300  01183C  0E01               	movlw	high _MACTxBuffer
  8301  01183E  22E2               	addwfc	fsr1h,f,c
  8302  011840  CFDF FFE7          	movff	indf2,indf1
  8303                           
  8304                           ; BSR set to: 0
  8305  011844  2B84               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  8306                           
  8307                           ; BSR set to: 0
  8308  011846  2B85               	incf	MiMAC_SendPacket@i& (0+255),f,b
  8309  011848                     l4786:
  8310                           
  8311                           ; BSR set to: 0
  8312  011848  5182               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
  8313  01184A  5D85               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  8314  01184C  E3EF               	bnc	l4780
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;drv_mrf_miwi_89xa.c: 844: }
  8318                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
  8319  01184E  0E00               	movlw	0
  8320  011850  B3C8               	btfsc	_MACInitParams& (0+255),1,b
  8321  011852  0E01               	movlw	1
  8322  011854  6F6A               	movwf	TxPacket@CCA& (0+255),b
  8323  011856  5184               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  8324  011858  EF14  F08A         	goto	_TxPacket
  8325  01185C                     __end_of_MiMAC_SendPacket:
  8326                           	opt stack 0
  8327                           tblptru	equ	0xFF8
  8328                           tblptrh	equ	0xFF7
  8329                           tblptrl	equ	0xFF6
  8330                           tablat	equ	0xFF5
  8331                           prodh	equ	0xFF4
  8332                           prodl	equ	0xFF3
  8333                           intcon	equ	0xFF2
  8334                           intcon2	equ	0xFF1
  8335                           intcon3	equ	0xFF0
  8336                           postinc0	equ	0xFEE
  8337                           wreg	equ	0xFE8
  8338                           indf1	equ	0xFE7
  8339                           postdec1	equ	0xFE5
  8340                           fsr1h	equ	0xFE2
  8341                           fsr1l	equ	0xFE1
  8342                           indf2	equ	0xFDF
  8343                           postinc2	equ	0xFDE
  8344                           postdec2	equ	0xFDD
  8345                           fsr2h	equ	0xFDA
  8346                           fsr2l	equ	0xFD9
  8347                           status	equ	0xFD8
  8348                           
  8349 ;; *************** function _TxPacket *****************
  8350 ;; Defined at:
  8351 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;  TxPacketLen     1    wreg     unsigned char 
  8354 ;;  CCA             1   10[BANK0 ] unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  TxPacketLen     1   28[BANK0 ] unsigned char 
  8357 ;;  allowedTxFai    1   25[BANK0 ] unsigned char 
  8358 ;;  t2              4   19[BANK0 ] struct _MIWI_TICK
  8359 ;;  t1              4   15[BANK0 ] struct _MIWI_TICK
  8360 ;;  i               1   29[BANK0 ] unsigned char 
  8361 ;;  status          1   27[BANK0 ] unsigned char 
  8362 ;;  rssival         1   26[BANK0 ] unsigned char 
  8363 ;;  reTry           1   24[BANK0 ] unsigned char 
  8364 ;;  CCARetries      1   23[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      unsigned char 
  8367 ;; Registers used:
  8368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : F/0
  8371 ;;		On exit  : F/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8374 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;Total ram usage:       20 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    8
  8381 ;; This function calls:
  8382 ;;		_DELAY_10us
  8383 ;;		_MiWi_TickGet
  8384 ;;		_RegisterRead
  8385 ;;		_RegisterSet
  8386 ;;		_SetRFMode
  8387 ;;		_WriteFIFO
  8388 ;; This function is called by:
  8389 ;;		_MiMAC_SendPacket
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text34
  8394  011428                     __ptext34:
  8395                           	opt stack 0
  8396  011428                     _TxPacket:
  8397                           	opt stack 15
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;incstack = 0
  8401                           ;TxPacket@TxPacketLen stored from wreg
  8402  011428  6F7C               	movwf	TxPacket@TxPacketLen& (0+255),b
  8403                           
  8404                           ;drv_mrf_miwi_89xa.c: 290: bool status;
  8405                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
  8406                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
  8407                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
  8408                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
  8409                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
  8410  01142A  0E03               	movlw	3
  8411  01142C  0100               	movlb	0	; () banked
  8412  01142E  6F78               	movwf	TxPacket@reTry& (0+255),b
  8413                           
  8414                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
  8415  011430  D088               	goto	l4702
  8416  011432                     l82:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;drv_mrf_miwi_89xa.c: 305: {
  8420                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
  8421                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
  8422  011432  6B79               	clrf	TxPacket@allowedTxFailure& (0+255),b
  8423  011434                     l83:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
  8427  011434  6BDA               	clrf	_hasAck& (0+255),b	;volatile
  8428                           
  8429                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
  8430  011436  6B77               	clrf	TxPacket@CCARetries& (0+255),b
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
  8434  011438  516A               	movf	TxPacket@CCA& (0+255),w,b
  8435  01143A  E019               	bz	l84
  8436  01143C                     l4642:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
  8440  01143C  0E28               	movlw	40
  8441  01143E  EC36  F093         	call	_RegisterRead
  8442  011442  6F7A               	movwf	TxPacket@rssival& (0+255),b
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
  8446  011444  90D8               	bcf	status,0,c
  8447  011446  337A               	rrcf	TxPacket@rssival& (0+255),f,b
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
  8451  011448  0E41               	movlw	65
  8452  01144A  657A               	cpfsgt	TxPacket@rssival& (0+255),b
  8453  01144C  D010               	goto	l84
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;drv_mrf_miwi_89xa.c: 326: {
  8457                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
  8458  01144E  2B77               	incf	TxPacket@CCARetries& (0+255),f,b
  8459  011450  0577               	decf	TxPacket@CCARetries& (0+255),w,b
  8460  011452  6F6B               	movwf	??_TxPacket& (0+255),b
  8461  011454  0E04               	movlw	4
  8462  011456  656B               	cpfsgt	??_TxPacket& (0+255),b
  8463  011458  D001               	goto	l4654
  8464  01145A  0C00               	retlw	0
  8465  01145C                     l4654:
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;drv_mrf_miwi_89xa.c: 331: }
  8469                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
  8470  01145C  0E01               	movlw	1
  8471  01145E  6F60               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
  8472  011460  0E00               	movlw	0
  8473  011462  6B61               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
  8474  011464  6B62               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
  8475  011466  6B63               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
  8476  011468  EC88  F095         	call	_DELAY_10us	;wreg free
  8477                           
  8478                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
  8479  01146C  D7E7               	goto	l4642
  8480  01146E                     l84:
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;drv_mrf_miwi_89xa.c: 334: }
  8484                           ;drv_mrf_miwi_89xa.c: 335: }
  8485                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
  8486  01146E  9AF0               	bcf	intcon3,5,c	;volatile
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
  8490  011470  0E20               	movlw	32
  8491  011472  EC23  F090         	call	_SetRFMode
  8492                           
  8493                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
  8494  011476  0E1A               	movlw	26
  8495  011478  0100               	movlb	0	; () banked
  8496  01147A  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  8497  01147C  0EC9               	movlw	201
  8498  01147E  6F61               	movwf	RegisterSet@setting& (0+255),b
  8499  011480  ECF0  F093         	call	_RegisterSet	;wreg free
  8500                           
  8501                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
  8502  011484  0100               	movlb	0	; () banked
  8503  011486  517C               	movf	TxPacket@TxPacketLen& (0+255),w,b
  8504  011488  EC57  F094         	call	_WriteFIFO
  8505                           
  8506                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
  8507  01148C  0100               	movlb	0	; () banked
  8508  01148E  6B7D               	clrf	TxPacket@i& (0+255),b
  8509  011490  D00B               	goto	l4668
  8510  011492                     l4664:
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;drv_mrf_miwi_89xa.c: 347: {
  8514                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
  8515  011492  0E00               	movlw	low _MACTxBuffer
  8516  011494  257D               	addwf	TxPacket@i& (0+255),w,b
  8517  011496  6ED9               	movwf	fsr2l,c
  8518  011498  6ADA               	clrf	fsr2h,c
  8519  01149A  0E01               	movlw	high _MACTxBuffer
  8520  01149C  22DA               	addwfc	fsr2h,f,c
  8521  01149E  50DF               	movf	indf2,w,c
  8522  0114A0  EC57  F094         	call	_WriteFIFO
  8523  0114A4  0100               	movlb	0	; () banked
  8524  0114A6  2B7D               	incf	TxPacket@i& (0+255),f,b
  8525  0114A8                     l4668:
  8526                           
  8527                           ; BSR set to: 0
  8528  0114A8  517C               	movf	TxPacket@TxPacketLen& (0+255),w,b
  8529  0114AA  5D7D               	subwf	TxPacket@i& (0+255),w,b
  8530  0114AC  E3F2               	bnc	l4664
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;drv_mrf_miwi_89xa.c: 349: }
  8534                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
  8535  0114AE  0E80               	movlw	128
  8536  0114B0  EC23  F090         	call	_SetRFMode
  8537                           
  8538                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
  8539  0114B4  8AF0               	bsf	intcon3,5,c	;volatile
  8540  0114B6                     l4674:
  8541  0114B6  0100               	movlb	0	; () banked
  8542  0114B8  51CC               	movf	_IRQ1_Received& (0+255),w,b	;volatile
  8543  0114BA  E102               	bnz	l96
  8544                           
  8545                           ; BSR set to: 0
  8546  0114BC  A4F0               	btfss	intcon3,2,c	;volatile
  8547  0114BE  D7FB               	goto	l4674
  8548  0114C0                     l96:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;drv_mrf_miwi_89xa.c: 358: };
  8552                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
  8553  0114C0  6BCC               	clrf	_IRQ1_Received& (0+255),b	;volatile
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
  8557  0114C2  0E20               	movlw	32
  8558  0114C4  EC23  F090         	call	_SetRFMode
  8559                           
  8560                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
  8561  0114C8  0E60               	movlw	96
  8562  0114CA  EC23  F090         	call	_SetRFMode
  8563                           
  8564                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
  8565  0114CE  0101               	movlb	1	; () banked
  8566  0114D0  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
  8567  0114D2  D00E               	goto	l4688
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;drv_mrf_miwi_89xa.c: 368: {
  8571                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
  8572  0114D4  C101  F038         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
  8576  0114D8  EC78  F091         	call	_MiWi_TickGet	;wreg free
  8577  0114DC  C060  F06F         	movff	?_MiWi_TickGet,TxPacket@t1
  8578  0114E0  C061  F070         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
  8579  0114E4  C062  F071         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
  8580  0114E8  C063  F072         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
  8581  0114EC                     l4686:
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;drv_mrf_miwi_89xa.c: 372: {
  8585                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
  8586  0114EC  51DA               	movf	_hasAck& (0+255),w,b	;volatile
  8587  0114EE  E004               	bz	l4690
  8588  0114F0                     l4688:
  8589                           
  8590                           ;drv_mrf_miwi_89xa.c: 374: {
  8591                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
  8592  0114F0  0E01               	movlw	1
  8593  0114F2  0100               	movlb	0	; () banked
  8594  0114F4  6F7B               	movwf	TxPacket@status& (0+255),b
  8595                           
  8596                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
  8597  0114F6  D02A               	goto	l4704
  8598  0114F8                     l4690:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;drv_mrf_miwi_89xa.c: 377: }
  8602                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
  8603  0114F8  EC78  F091         	call	_MiWi_TickGet	;wreg free
  8604  0114FC  C060  F073         	movff	?_MiWi_TickGet,TxPacket@t2
  8605  011500  C061  F074         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
  8606  011504  C062  F075         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
  8607  011508  C063  F076         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
  8611  01150C  516F               	movf	TxPacket@t1& (0+255),w,b
  8612  01150E  5D73               	subwf	TxPacket@t2& (0+255),w,b
  8613  011510  6F6B               	movwf	??_TxPacket& (0+255),b
  8614  011512  5170               	movf	(TxPacket@t1+1)& (0+255),w,b
  8615  011514  5974               	subwfb	(TxPacket@t2+1)& (0+255),w,b
  8616  011516  6F6C               	movwf	(??_TxPacket+1)& (0+255),b
  8617  011518  5171               	movf	(TxPacket@t1+2)& (0+255),w,b
  8618  01151A  5975               	subwfb	(TxPacket@t2+2)& (0+255),w,b
  8619  01151C  6F6D               	movwf	(??_TxPacket+2)& (0+255),b
  8620  01151E  5172               	movf	(TxPacket@t1+3)& (0+255),w,b
  8621  011520  5976               	subwfb	(TxPacket@t2+3)& (0+255),w,b
  8622  011522  6F6E               	movwf	(??_TxPacket+3)& (0+255),b
  8623  011524  516E               	movf	(??_TxPacket+3)& (0+255),w,b
  8624  011526  116D               	iorwf	(??_TxPacket+2)& (0+255),w,b
  8625  011528  E105               	bnz	u3170
  8626  01152A  0E0A               	movlw	10
  8627  01152C  5D6B               	subwf	??_TxPacket& (0+255),w,b
  8628  01152E  0E3D               	movlw	61
  8629  011530  596C               	subwfb	(??_TxPacket+1)& (0+255),w,b
  8630  011532  E3DC               	bnc	l4686
  8631  011534                     u3170:
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;drv_mrf_miwi_89xa.c: 382: }
  8635                           ;drv_mrf_miwi_89xa.c: 383: }
  8636                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
  8637  011534  2B79               	incf	TxPacket@allowedTxFailure& (0+255),f,b
  8638  011536  0579               	decf	TxPacket@allowedTxFailure& (0+255),w,b
  8639  011538  6F6B               	movwf	??_TxPacket& (0+255),b
  8640  01153A  0E04               	movlw	4
  8641  01153C  616B               	cpfslt	??_TxPacket& (0+255),b
  8642  01153E  D001               	goto	l4702
  8643  011540  D779               	goto	l83
  8644  011542                     l4702:
  8645                           
  8646                           ; BSR set to: 0
  8647  011542  0778               	decf	TxPacket@reTry& (0+255),f,b
  8648  011544  2978               	incf	TxPacket@reTry& (0+255),w,b
  8649  011546  E001 D774          	bnz	l82
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;drv_mrf_miwi_89xa.c: 394: }
  8653                           ;drv_mrf_miwi_89xa.c: 395: }
  8654                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
  8655  01154A  6B7B               	clrf	TxPacket@status& (0+255),b
  8656  01154C                     l4704:
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;drv_mrf_miwi_89xa.c: 399: return status;
  8660  01154C  517B               	movf	TxPacket@status& (0+255),w,b
  8661                           
  8662                           ; BSR set to: 0
  8663  01154E  0012               	return		;funcret
  8664  011550                     __end_of_TxPacket:
  8665                           	opt stack 0
  8666                           tblptru	equ	0xFF8
  8667                           tblptrh	equ	0xFF7
  8668                           tblptrl	equ	0xFF6
  8669                           tablat	equ	0xFF5
  8670                           prodh	equ	0xFF4
  8671                           prodl	equ	0xFF3
  8672                           intcon	equ	0xFF2
  8673                           intcon2	equ	0xFF1
  8674                           intcon3	equ	0xFF0
  8675                           postinc0	equ	0xFEE
  8676                           wreg	equ	0xFE8
  8677                           indf1	equ	0xFE7
  8678                           postdec1	equ	0xFE5
  8679                           fsr1h	equ	0xFE2
  8680                           fsr1l	equ	0xFE1
  8681                           indf2	equ	0xFDF
  8682                           postinc2	equ	0xFDE
  8683                           postdec2	equ	0xFDD
  8684                           fsr2h	equ	0xFDA
  8685                           fsr2l	equ	0xFD9
  8686                           status	equ	0xFD8
  8687                           
  8688 ;; *************** function _WriteFIFO *****************
  8689 ;; Defined at:
  8690 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  Data            1    wreg     unsigned char 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;  Data            1    1[BANK0 ] unsigned char 
  8695 ;;  IRQ1select      1    2[BANK0 ] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : F/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;Total ram usage:        2 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    6
  8712 ;; This function calls:
  8713 ;;		_SPIPut
  8714 ;; This function is called by:
  8715 ;;		_TxPacket
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text35
  8720  0128AE                     __ptext35:
  8721                           	opt stack 0
  8722  0128AE                     _WriteFIFO:
  8723                           	opt stack 16
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;incstack = 0
  8727                           ;WriteFIFO@Data stored from wreg
  8728  0128AE  6F61               	movwf	WriteFIFO@Data& (0+255),b
  8729                           
  8730                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
  8731  0128B0  0E00               	movlw	0
  8732  0128B2  BAF0               	btfsc	intcon3,5,c	;volatile
  8733  0128B4  0E01               	movlw	1
  8734  0128B6  0100               	movlb	0	; () banked
  8735  0128B8  6F62               	movwf	WriteFIFO@IRQ1select& (0+255),b
  8736                           
  8737                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
  8738  0128BA  9AF0               	bcf	intcon3,5,c	;volatile
  8739                           
  8740                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
  8741  0128BC  948B               	bcf	3979,2,c	;volatile
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
  8745  0128BE  5161               	movf	WriteFIFO@Data& (0+255),w,b
  8746  0128C0  EC13  F095         	call	_SPIPut
  8747                           
  8748                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
  8749  0128C4  848B               	bsf	3979,2,c	;volatile
  8750                           
  8751                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
  8752  0128C6  0100               	movlb	0	; () banked
  8753  0128C8  B162               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
  8754  0128CA  D002               	bra	u3055
  8755  0128CC  9AF0               	bcf	intcon3,5,c	;volatile
  8756  0128CE  D001               	bra	u3056
  8757  0128D0                     u3055:
  8758  0128D0  8AF0               	bsf	intcon3,5,c	;volatile
  8759  0128D2                     u3056:
  8760  0128D2  0012               	return		;funcret
  8761  0128D4                     __end_of_WriteFIFO:
  8762                           	opt stack 0
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           intcon2	equ	0xFF1
  8771                           intcon3	equ	0xFF0
  8772                           postinc0	equ	0xFEE
  8773                           wreg	equ	0xFE8
  8774                           indf1	equ	0xFE7
  8775                           postdec1	equ	0xFE5
  8776                           fsr1h	equ	0xFE2
  8777                           fsr1l	equ	0xFE1
  8778                           indf2	equ	0xFDF
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function _SetRFMode *****************
  8786 ;; Defined at:
  8787 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  mode            1    wreg     unsigned char 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  mode            1    4[BANK0 ] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;Total ram usage:        1 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    7
  8808 ;; This function calls:
  8809 ;;		_RegisterSet
  8810 ;; This function is called by:
  8811 ;;		_TxPacket
  8812 ;;		_MiMAC_SetChannel
  8813 ;;		_MiMAC_Init
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text36
  8818  012046                     __ptext36:
  8819                           	opt stack 0
  8820  012046                     _SetRFMode:
  8821                           	opt stack 15
  8822                           
  8823                           ;incstack = 0
  8824                           ;SetRFMode@mode stored from wreg
  8825  012046  0100               	movlb	0	; () banked
  8826  012048  6F64               	movwf	SetRFMode@mode& (0+255),b
  8827                           
  8828                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
  8829  01204A  D027               	goto	l4606
  8830  01204C                     l4584:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
  8834  01204C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  8835  01204E  0E8E               	movlw	142
  8836  012050  6F61               	movwf	RegisterSet@setting& (0+255),b
  8837  012052  ECF0  F093         	call	_RegisterSet	;wreg free
  8838                           
  8839                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
  8840  012056  0E80               	movlw	128
  8841  012058  6E36               	movwf	_RF_Mode,c
  8842                           
  8843                           ;drv_mrf_miwi_89xa.c: 673: break;
  8844  01205A  0C80               	retlw	128
  8845  01205C                     l4588:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
  8849  01205C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  8850  01205E  0E6E               	movlw	110
  8851  012060  6F61               	movwf	RegisterSet@setting& (0+255),b
  8852  012062  ECF0  F093         	call	_RegisterSet	;wreg free
  8853                           
  8854                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
  8855  012066  0E60               	movlw	96
  8856  012068  6E36               	movwf	_RF_Mode,c
  8857                           
  8858                           ;drv_mrf_miwi_89xa.c: 677: break;
  8859  01206A  0C60               	retlw	96
  8860  01206C                     l4592:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  8864  01206C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  8865  01206E  0E4E               	movlw	78
  8866  012070  6F61               	movwf	RegisterSet@setting& (0+255),b
  8867  012072  ECF0  F093         	call	_RegisterSet	;wreg free
  8868                           
  8869                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
  8870  012076  0E40               	movlw	64
  8871  012078  6E36               	movwf	_RF_Mode,c
  8872                           
  8873                           ;drv_mrf_miwi_89xa.c: 681: break;
  8874  01207A  0C40               	retlw	64
  8875  01207C                     l4596:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
  8879  01207C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  8880  01207E  0E2E               	movlw	46
  8881  012080  6F61               	movwf	RegisterSet@setting& (0+255),b
  8882  012082  ECF0  F093         	call	_RegisterSet	;wreg free
  8883                           
  8884                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
  8885  012086  0E20               	movlw	32
  8886  012088  6E36               	movwf	_RF_Mode,c
  8887                           
  8888                           ;drv_mrf_miwi_89xa.c: 685: break;
  8889  01208A  0C20               	retlw	32
  8890  01208C                     l4600:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
  8894  01208C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  8895  01208E  0E0E               	movlw	14
  8896  012090  6F61               	movwf	RegisterSet@setting& (0+255),b
  8897  012092  ECF0  F093         	call	_RegisterSet	;wreg free
  8898                           
  8899                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
  8900  012096  6A36               	clrf	_RF_Mode,c
  8901                           
  8902                           ;drv_mrf_miwi_89xa.c: 689: break;
  8903  012098  0012               	return	
  8904  01209A                     l4606:
  8905  01209A  0100               	movlb	0	; () banked
  8906  01209C  5164               	movf	SetRFMode@mode& (0+255),w,b
  8907                           
  8908                           ; Switch size 1, requested type "speed"
  8909                           ; Number of cases is 5, Range of values is 0 to 128
  8910                           ; switch strategies available:
  8911                           ; Name         Instructions Cycles
  8912                           ; simple_byte           16     9 (average)
  8913                           ;	Chosen strategy is simple_byte
  8914  01209E  E0F6               	bz	l4600
  8915  0120A0  0A20               	xorlw	32	; case 32
  8916  0120A2  E0EC               	bz	l4596
  8917  0120A4  0A60               	xorlw	96	; case 64
  8918  0120A6  E0E2               	bz	l4592
  8919  0120A8  0A20               	xorlw	32	; case 96
  8920  0120AA  E0D8               	bz	l4588
  8921  0120AC  0AE0               	xorlw	224	; case 128
  8922  0120AE  E0CE               	bz	l4584
  8923  0120B0  0012               	return		;funcret
  8924  0120B2                     __end_of_SetRFMode:
  8925                           	opt stack 0
  8926                           tblptru	equ	0xFF8
  8927                           tblptrh	equ	0xFF7
  8928                           tblptrl	equ	0xFF6
  8929                           tablat	equ	0xFF5
  8930                           prodh	equ	0xFF4
  8931                           prodl	equ	0xFF3
  8932                           intcon	equ	0xFF2
  8933                           intcon2	equ	0xFF1
  8934                           intcon3	equ	0xFF0
  8935                           postinc0	equ	0xFEE
  8936                           wreg	equ	0xFE8
  8937                           indf1	equ	0xFE7
  8938                           postdec1	equ	0xFE5
  8939                           fsr1h	equ	0xFE2
  8940                           fsr1l	equ	0xFE1
  8941                           indf2	equ	0xFDF
  8942                           postinc2	equ	0xFDE
  8943                           postdec2	equ	0xFDD
  8944                           fsr2h	equ	0xFDA
  8945                           fsr2l	equ	0xFD9
  8946                           status	equ	0xFD8
  8947                           
  8948 ;; *************** function _RegisterSet *****************
  8949 ;; Defined at:
  8950 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  setting         2    1[BANK0 ] unsigned int 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  IRQ1select      1    3[BANK0 ] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : F/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;Total ram usage:        3 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    6
  8971 ;; This function calls:
  8972 ;;		_SPIPut
  8973 ;; This function is called by:
  8974 ;;		_TxPacket
  8975 ;;		_MiMAC_SetChannel
  8976 ;;		_MiMAC_Init
  8977 ;;		_SetRFMode
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text37
  8982  0127E0                     __ptext37:
  8983                           	opt stack 0
  8984  0127E0                     _RegisterSet:
  8985                           	opt stack 15
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
  8989                           
  8990                           ;incstack = 0
  8991  0127E0  0E00               	movlw	0
  8992  0127E2  BAF0               	btfsc	intcon3,5,c	;volatile
  8993  0127E4  0E01               	movlw	1
  8994  0127E6  6F63               	movwf	RegisterSet@IRQ1select& (0+255),b
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
  8998  0127E8  9AF0               	bcf	intcon3,5,c	;volatile
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
  9002  0127EA  968D               	bcf	3981,3,c	;volatile
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
  9006  0127EC  5162               	movf	(RegisterSet@setting+1)& (0+255),w,b
  9007  0127EE  EC13  F095         	call	_SPIPut
  9008                           
  9009                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
  9010  0127F2  0100               	movlb	0	; () banked
  9011  0127F4  5161               	movf	RegisterSet@setting& (0+255),w,b
  9012  0127F6  EC13  F095         	call	_SPIPut
  9013                           
  9014                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
  9015  0127FA  868D               	bsf	3981,3,c	;volatile
  9016                           
  9017                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
  9018  0127FC  0100               	movlb	0	; () banked
  9019  0127FE  B163               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
  9020  012800  D002               	bra	u3035
  9021  012802  9AF0               	bcf	intcon3,5,c	;volatile
  9022  012804  D001               	bra	u3036
  9023  012806                     u3035:
  9024  012806  8AF0               	bsf	intcon3,5,c	;volatile
  9025  012808                     u3036:
  9026  012808  0012               	return		;funcret
  9027  01280A                     __end_of_RegisterSet:
  9028                           	opt stack 0
  9029                           tblptru	equ	0xFF8
  9030                           tblptrh	equ	0xFF7
  9031                           tblptrl	equ	0xFF6
  9032                           tablat	equ	0xFF5
  9033                           prodh	equ	0xFF4
  9034                           prodl	equ	0xFF3
  9035                           intcon	equ	0xFF2
  9036                           intcon2	equ	0xFF1
  9037                           intcon3	equ	0xFF0
  9038                           postinc0	equ	0xFEE
  9039                           wreg	equ	0xFE8
  9040                           indf1	equ	0xFE7
  9041                           postdec1	equ	0xFE5
  9042                           fsr1h	equ	0xFE2
  9043                           fsr1l	equ	0xFE1
  9044                           indf2	equ	0xFDF
  9045                           postinc2	equ	0xFDE
  9046                           postdec2	equ	0xFDD
  9047                           fsr2h	equ	0xFDA
  9048                           fsr2l	equ	0xFD9
  9049                           status	equ	0xFD8
  9050                           
  9051 ;; *************** function _RegisterRead *****************
  9052 ;; Defined at:
  9053 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;  address         1    wreg     unsigned char 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  address         1    1[BANK0 ] unsigned char 
  9058 ;;  IRQ1select      1    3[BANK0 ] unsigned char 
  9059 ;;  value           1    2[BANK0 ] unsigned char 
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      unsigned char 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : F/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9072 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;Total ram usage:        3 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; Hardware stack levels required when called:    7
  9076 ;; This function calls:
  9077 ;;		_SPIGet
  9078 ;;		_SPIPut
  9079 ;; This function is called by:
  9080 ;;		_TxPacket
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text38
  9085  01266C                     __ptext38:
  9086                           	opt stack 0
  9087  01266C                     _RegisterRead:
  9088                           	opt stack 15
  9089                           
  9090                           ;incstack = 0
  9091                           ;RegisterRead@address stored from wreg
  9092  01266C  0100               	movlb	0	; () banked
  9093  01266E  6F61               	movwf	RegisterRead@address& (0+255),b
  9094                           
  9095                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
  9096                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
  9097  012670  0E00               	movlw	0
  9098  012672  BAF0               	btfsc	intcon3,5,c	;volatile
  9099  012674  0E01               	movlw	1
  9100  012676  6F63               	movwf	RegisterRead@IRQ1select& (0+255),b
  9101                           
  9102                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
  9103  012678  9AF0               	bcf	intcon3,5,c	;volatile
  9104                           
  9105                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
  9106  01267A  968D               	bcf	3981,3,c	;volatile
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
  9110  01267C  8D61               	bsf	RegisterRead@address& (0+255),6,b
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
  9114  01267E  5161               	movf	RegisterRead@address& (0+255),w,b
  9115  012680  EC13  F095         	call	_SPIPut
  9116                           
  9117                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
  9118  012684  EC72  F095         	call	_SPIGet	;wreg free
  9119  012688  0100               	movlb	0	; () banked
  9120  01268A  6F62               	movwf	RegisterRead@value& (0+255),b
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
  9124  01268C  868D               	bsf	3981,3,c	;volatile
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
  9128  01268E  B163               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
  9129  012690  D002               	bra	u3045
  9130  012692  9AF0               	bcf	intcon3,5,c	;volatile
  9131  012694  D001               	bra	u3046
  9132  012696                     u3045:
  9133  012696  8AF0               	bsf	intcon3,5,c	;volatile
  9134  012698                     u3046:
  9135                           
  9136                           ;drv_mrf_miwi_89xa.c: 222: return value;
  9137  012698  0100               	movlb	0	; () banked
  9138  01269A  5162               	movf	RegisterRead@value& (0+255),w,b
  9139                           
  9140                           ; BSR set to: 0
  9141  01269C  0012               	return		;funcret
  9142  01269E                     __end_of_RegisterRead:
  9143                           	opt stack 0
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           intcon2	equ	0xFF1
  9152                           intcon3	equ	0xFF0
  9153                           postinc0	equ	0xFEE
  9154                           wreg	equ	0xFE8
  9155                           indf1	equ	0xFE7
  9156                           postdec1	equ	0xFE5
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function _DELAY_10us *****************
  9167 ;; Defined at:
  9168 ;;		line 46 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  tenMicroSeco    4    0[BANK0 ] unsigned long 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  cyclesRequir    4    4[BANK0 ] volatile long 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		None
  9177 ;; Tracked objects:
  9178 ;;		On entry : F/0
  9179 ;;		On exit  : F/0
  9180 ;;		Unchanged: F/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;Total ram usage:        8 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    5
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_TxPacket
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text39
  9197  012B10                     __ptext39:
  9198                           	opt stack 0
  9199  012B10                     _DELAY_10us:
  9200                           	opt stack 17
  9201                           
  9202                           ; BSR set to: 0
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;delay.c: 52: {
  9206                           ;delay.c: 58: }
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;incstack = 0
  9210  012B10  0012               	return		;funcret
  9211  012B12                     __end_of_DELAY_10us:
  9212                           	opt stack 0
  9213                           tblptru	equ	0xFF8
  9214                           tblptrh	equ	0xFF7
  9215                           tblptrl	equ	0xFF6
  9216                           tablat	equ	0xFF5
  9217                           prodh	equ	0xFF4
  9218                           prodl	equ	0xFF3
  9219                           intcon	equ	0xFF2
  9220                           intcon2	equ	0xFF1
  9221                           intcon3	equ	0xFF0
  9222                           postinc0	equ	0xFEE
  9223                           wreg	equ	0xFE8
  9224                           indf1	equ	0xFE7
  9225                           postdec1	equ	0xFE5
  9226                           fsr1h	equ	0xFE2
  9227                           fsr1l	equ	0xFE1
  9228                           indf2	equ	0xFDF
  9229                           postinc2	equ	0xFDE
  9230                           postdec2	equ	0xFDD
  9231                           fsr2h	equ	0xFDA
  9232                           fsr2l	equ	0xFD9
  9233                           status	equ	0xFD8
  9234                           
  9235 ;; *************** function _MiMAC_ReceivedPacket *****************
  9236 ;; Defined at:
  9237 ;;		line 851 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  PayloadIndex    1   22[BANK0 ] unsigned char 
  9242 ;;  j               1    0        unsigned char 
  9243 ;;  currentTick     4   18[BANK0 ] struct _MIWI_TICK
  9244 ;;  i               1   23[BANK0 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      unsigned char 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : F/0
  9251 ;;		On exit  : F/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:       14 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    6
  9261 ;; This function calls:
  9262 ;;		_MiWi_TickGet
  9263 ;; This function is called by:
  9264 ;;		_P2PTasks
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text40
  9269  01114A                     __ptext40:
  9270                           	opt stack 0
  9271  01114A                     _MiMAC_ReceivedPacket:
  9272                           	opt stack 19
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
  9276                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
  9277                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;incstack = 0
  9281  01114A  6B77               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9282  01114C                     l5036:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;drv_mrf_miwi_89xa.c: 859: {
  9286                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
  9287  01114C  EC78  F091         	call	_MiWi_TickGet	;wreg free
  9288  011150  C060  F072         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
  9289  011154  C061  F073         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
  9290  011158  C062  F074         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
  9291  01115C  C063  F075         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
  9295                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          0000000)/32)) )
  9296  011160  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9297  011162  0D06               	mullw	6
  9298  011164  0E32               	movlw	low _AckInfo
  9299  011166  24F3               	addwf	prodl,w,c
  9300  011168  6ED9               	movwf	fsr2l,c
  9301  01116A  0E01               	movlw	high _AckInfo
  9302  01116C  20F4               	addwfc	prodh,w,c
  9303  01116E  6EDA               	movwf	fsr2h,c
  9304  011170  50DF               	movf	indf2,w,c
  9305  011172  E03F               	bz	l5046
  9306                           
  9307                           ; BSR set to: 0
  9308  011174  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9309  011176  0D06               	mullw	6
  9310  011178  0E34               	movlw	low (_AckInfo+2)
  9311  01117A  24F3               	addwf	prodl,w,c
  9312  01117C  6ED9               	movwf	fsr2l,c
  9313  01117E  0E01               	movlw	high (_AckInfo+2)
  9314  011180  20F4               	addwfc	prodh,w,c
  9315  011182  6EDA               	movwf	fsr2h,c
  9316  011184  5172               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9317  011186  5CDE               	subwf	postinc2,w,c
  9318  011188  5173               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9319  01118A  58DE               	subwfb	postinc2,w,c
  9320  01118C  5174               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9321  01118E  58DE               	subwfb	postinc2,w,c
  9322  011190  5175               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9323  011192  58DE               	subwfb	postinc2,w,c
  9324  011194  E22E               	bc	l5046
  9325                           
  9326                           ; BSR set to: 0
  9327  011196  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9328  011198  0D06               	mullw	6
  9329  01119A  0E34               	movlw	low (_AckInfo+2)
  9330  01119C  24F3               	addwf	prodl,w,c
  9331  01119E  6ED9               	movwf	fsr2l,c
  9332  0111A0  0E01               	movlw	high (_AckInfo+2)
  9333  0111A2  20F4               	addwfc	prodh,w,c
  9334  0111A4  6EDA               	movwf	fsr2h,c
  9335  0111A6  CFDE F06A          	movff	postinc2,??_MiMAC_ReceivedPacket
  9336  0111AA  CFDE F06B          	movff	postinc2,??_MiMAC_ReceivedPacket+1
  9337  0111AE  CFDE F06C          	movff	postinc2,??_MiMAC_ReceivedPacket+2
  9338  0111B2  CFDE F06D          	movff	postinc2,??_MiMAC_ReceivedPacket+3
  9339  0111B6  516A               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9340  0111B8  5D72               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9341  0111BA  6F6E               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
  9342  0111BC  516B               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9343  0111BE  5973               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9344  0111C0  6F6F               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
  9345  0111C2  516C               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
  9346  0111C4  5974               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9347  0111C6  6F70               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
  9348  0111C8  516D               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
  9349  0111CA  5975               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9350  0111CC  6F71               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
  9351  0111CE  5171               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
  9352  0111D0  E107               	bnz	u3520
  9353  0111D2  0EB5               	movlw	181
  9354  0111D4  5D6E               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
  9355  0111D6  0EC4               	movlw	196
  9356  0111D8  596F               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
  9357  0111DA  0E04               	movlw	4
  9358  0111DC  5970               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
  9359  0111DE  E309               	bnc	l5046
  9360  0111E0                     u3520:
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;drv_mrf_miwi_89xa.c: 863: {
  9364                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
  9365  0111E0  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9366  0111E2  0D06               	mullw	6
  9367  0111E4  0E32               	movlw	low _AckInfo
  9368  0111E6  24F3               	addwf	prodl,w,c
  9369  0111E8  6ED9               	movwf	fsr2l,c
  9370  0111EA  0E01               	movlw	high _AckInfo
  9371  0111EC  20F4               	addwfc	prodh,w,c
  9372  0111EE  6EDA               	movwf	fsr2h,c
  9373  0111F0  6ADF               	clrf	indf2,c
  9374  0111F2                     l5046:
  9375                           
  9376                           ; BSR set to: 0
  9377  0111F2  2B77               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9378                           
  9379                           ; BSR set to: 0
  9380  0111F4  0E04               	movlw	4
  9381  0111F6  6577               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9382  0111F8  D7A9               	goto	l5036
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;drv_mrf_miwi_89xa.c: 865: }
  9386                           ;drv_mrf_miwi_89xa.c: 866: }
  9387                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
  9388  0111FA  29D4               	incf	_ReceivedBankIndex& (0+255),w,b
  9389  0111FC  E001               	bz	l157
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;drv_mrf_miwi_89xa.c: 870: {
  9393                           ;drv_mrf_miwi_89xa.c: 871: return 0;
  9394  0111FE  0C00               	retlw	0
  9395  011200                     l157:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;drv_mrf_miwi_89xa.c: 872: }
  9399                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
  9400  011200  6B77               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9401  011202                     l5060:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;drv_mrf_miwi_89xa.c: 875: {
  9405                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
  9406  011202  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9407  011204  0D34               	mullw	52
  9408  011206  0E00               	movlw	low _RxPacket
  9409  011208  24F3               	addwf	prodl,w,c
  9410  01120A  6ED9               	movwf	fsr2l,c
  9411  01120C  0E02               	movlw	high _RxPacket
  9412  01120E  20F4               	addwfc	prodh,w,c
  9413  011210  6EDA               	movwf	fsr2h,c
  9414  011212  A0DF               	btfss	indf2,0,c
  9415  011214  D055               	goto	l5088
  9416                           
  9417                           ; BSR set to: 2
  9418                           ;drv_mrf_miwi_89xa.c: 877: {
  9419                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
  9420                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
  9421                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
  9422  011216  0100               	movlb	0	; () banked
  9423  011218  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9424  01121A  0D34               	mullw	52
  9425  01121C  0E01               	movlw	low (_RxPacket+1)
  9426  01121E  24F3               	addwf	prodl,w,c
  9427  011220  6ED9               	movwf	fsr2l,c
  9428  011222  0E02               	movlw	high (_RxPacket+1)
  9429  011224  20F4               	addwfc	prodh,w,c
  9430  011226  6EDA               	movwf	fsr2h,c
  9431  011228  50DF               	movf	indf2,w,c
  9432  01122A  6FB8               	movwf	_MACRxPacket& (0+255),b
  9433                           
  9434                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
  9435  01122C  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9436  01122E  0D34               	mullw	52
  9437  011230  0E33               	movlw	low (_RxPacket+51)
  9438  011232  24F3               	addwf	prodl,w,c
  9439  011234  6ED9               	movwf	fsr2l,c
  9440  011236  0E02               	movlw	high (_RxPacket+51)
  9441  011238  20F4               	addwfc	prodh,w,c
  9442  01123A  6EDA               	movwf	fsr2h,c
  9443  01123C  50DF               	movf	indf2,w,c
  9444  01123E  6FBD               	movwf	(_MACRxPacket+5)& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
  9448  011240  0E02               	movlw	2
  9449  011242  6F76               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
  9453  011244  ADB8               	btfss	_MACRxPacket& (0+255),6,b
  9454  011246  D005               	goto	l5070
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;drv_mrf_miwi_89xa.c: 886: {
  9458                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9459  011248  31C8               	rrcf	_MACInitParams& (0+255),w,b
  9460  01124A  32E8               	rrcf	wreg,f,c
  9461  01124C  32E8               	rrcf	wreg,f,c
  9462  01124E  0B0F               	andlw	15
  9463  011250  2776               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9464  011252                     l5070:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;drv_mrf_miwi_89xa.c: 888: }
  9468                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
  9469  011252  AFB8               	btfss	_MACRxPacket& (0+255),7,b
  9470  011254  D019               	goto	l163
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;drv_mrf_miwi_89xa.c: 891: {
  9474                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
  9475  011256  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9476  011258  0D34               	mullw	52
  9477  01125A  0E00               	movlw	low _RxPacket
  9478  01125C  6F6A               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9479  01125E  0E02               	movlw	high _RxPacket
  9480  011260  6F6B               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9481  011262  2B6A               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9482  011264  0E00               	movlw	0
  9483  011266  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9484  011268  50F3               	movf	prodl,w,c
  9485  01126A  276A               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9486  01126C  50F4               	movf	prodh,w,c
  9487  01126E  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9488  011270  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9489  011272  256A               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9490  011274  6FB9               	movwf	(_MACRxPacket+1)& (0+255),b
  9491  011276  0E00               	movlw	0
  9492  011278  216B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9493  01127A  6FBA               	movwf	(_MACRxPacket+2)& (0+255),b
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9497  01127C  31C8               	rrcf	_MACInitParams& (0+255),w,b
  9498  01127E  32E8               	rrcf	wreg,f,c
  9499  011280  32E8               	rrcf	wreg,f,c
  9500  011282  0B0F               	andlw	15
  9501  011284  2776               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9502                           
  9503                           ;drv_mrf_miwi_89xa.c: 894: }
  9504  011286  D002               	goto	l5076
  9505  011288                     l163:
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;drv_mrf_miwi_89xa.c: 895: else
  9509                           ;drv_mrf_miwi_89xa.c: 896: {
  9510                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
  9511  011288  6BB9               	clrf	(_MACRxPacket+1)& (0+255),b
  9512  01128A  6BBA               	clrf	(_MACRxPacket+2)& (0+255),b
  9513  01128C                     l5076:
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;drv_mrf_miwi_89xa.c: 898: }
  9517                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
  9518  01128C  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9519  01128E  5FBD               	subwf	(_MACRxPacket+5)& (0+255),f,b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
  9523  011290  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9524  011292  0D34               	mullw	52
  9525  011294  0E00               	movlw	low _RxPacket
  9526  011296  6F6A               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9527  011298  0E02               	movlw	high _RxPacket
  9528  01129A  6F6B               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9529  01129C  2B6A               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9530  01129E  0E00               	movlw	0
  9531  0112A0  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9532  0112A2  50F3               	movf	prodl,w,c
  9533  0112A4  276A               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9534  0112A6  50F4               	movf	prodh,w,c
  9535  0112A8  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9536  0112AA  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9537  0112AC  256A               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9538  0112AE  6FBB               	movwf	(_MACRxPacket+3)& (0+255),b
  9539  0112B0  0E00               	movlw	0
  9540  0112B2  216B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9541  0112B4  6FBC               	movwf	(_MACRxPacket+4)& (0+255),b
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
  9545  0112B6  C0D3  F0BE         	movff	_RSSILock,_MACRxPacket+6
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
  9549  0112BA  C077  F0D4         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
  9553  0112BE  0C01               	retlw	1
  9554  0112C0                     l5088:
  9555                           
  9556                           ; BSR set to: 2
  9557  0112C0  0100               	movlb	0	; () banked
  9558  0112C2  2B77               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9559                           
  9560                           ; BSR set to: 0
  9561  0112C4  0E01               	movlw	1
  9562  0112C6  6577               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9563  0112C8  D79C               	goto	l5060
  9564  0112CA  0C00               	retlw	0
  9565  0112CC                     __end_of_MiMAC_ReceivedPacket:
  9566                           	opt stack 0
  9567                           tblptru	equ	0xFF8
  9568                           tblptrh	equ	0xFF7
  9569                           tblptrl	equ	0xFF6
  9570                           tablat	equ	0xFF5
  9571                           prodh	equ	0xFF4
  9572                           prodl	equ	0xFF3
  9573                           intcon	equ	0xFF2
  9574                           intcon2	equ	0xFF1
  9575                           intcon3	equ	0xFF0
  9576                           postinc0	equ	0xFEE
  9577                           wreg	equ	0xFE8
  9578                           indf1	equ	0xFE7
  9579                           postdec1	equ	0xFE5
  9580                           fsr1h	equ	0xFE2
  9581                           fsr1l	equ	0xFE1
  9582                           indf2	equ	0xFDF
  9583                           postinc2	equ	0xFDE
  9584                           postdec2	equ	0xFDD
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function _MiWi_TickGet *****************
  9590 ;; Defined at:
  9591 ;;		line 106 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;		None
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;  currentTime     4    6[BANK0 ] struct _MIWI_TICK
  9596 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
  9597 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  4    0[BANK0 ] struct _MIWI_TICK
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : F/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;Total ram usage:       10 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; Hardware stack levels required when called:    5
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_TxPacket
  9618 ;;		_MiMAC_ReceivedPacket
  9619 ;;		_P2PTasks
  9620 ;;		_MiApp_StartConnection
  9621 ;;		_MiApp_EstablishConnection
  9622 ;;		_ButtonPressed
  9623 ;;		_freezer_feature
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text41
  9628  0122F0                     __ptext41:
  9629                           	opt stack 0
  9630  0122F0                     _MiWi_TickGet:
  9631                           	opt stack 24
  9632                           
  9633                           ;symbol.c: 108: MIWI_TICK currentTime;
  9634                           ;symbol.c: 109: uint8_t IntFlag1;
  9635                           ;symbol.c: 110: uint8_t IntFlag2;
  9636                           ;symbol.c: 113: currentTime.byte.b2 = 0;
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;incstack = 0
  9640  0122F0  0100               	movlb	0	; () banked
  9641  0122F2  6B68               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
  9642                           
  9643                           ;symbol.c: 114: currentTime.byte.b3 = 0;
  9644  0122F4  6B69               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
  9645                           
  9646                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
  9647  0122F6  909D               	bcf	3997,0,c	;volatile
  9648  0122F8                     l4610:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;symbol.c: 120: {
  9652                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
  9653  0122F8  0E00               	movlw	0
  9654  0122FA  B09E               	btfsc	3998,0,c	;volatile
  9655  0122FC  0E01               	movlw	1
  9656  0122FE  6F65               	movwf	MiWi_TickGet@IntFlag1& (0+255),b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
  9660  012300  CFCE F066          	movff	4046,MiWi_TickGet@currentTime	;volatile
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
  9664  012304  CFCF F067          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
  9665                           
  9666                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
  9667  012308  0E00               	movlw	0
  9668  01230A  B09E               	btfsc	3998,0,c	;volatile
  9669  01230C  0E01               	movlw	1
  9670  01230E  6F64               	movwf	MiWi_TickGet@IntFlag2& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
  9674  012310  5164               	movf	MiWi_TickGet@IntFlag2& (0+255),w,b
  9675  012312  1965               	xorwf	MiWi_TickGet@IntFlag1& (0+255),w,b
  9676  012314  E1F1               	bnz	l4610
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;symbol.c: 127: if( IntFlag1 > 0 )
  9680  012316  5165               	movf	MiWi_TickGet@IntFlag1& (0+255),w,b
  9681  012318  E005               	bz	l4628
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;symbol.c: 128: {
  9685                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
  9686  01231A  909E               	bcf	3998,0,c	;volatile
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;symbol.c: 130: timerExtension1++;
  9690  01231C  2A39               	incf	_timerExtension1,f,c	;volatile
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;symbol.c: 131: if(timerExtension1 == 0)
  9694  01231E  5039               	movf	_timerExtension1,w,c	;volatile
  9695  012320  E101               	bnz	l4628
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;symbol.c: 132: {
  9699                           ;symbol.c: 133: timerExtension2++;
  9700  012322  2BDD               	incf	_timerExtension2& (0+255),f,b	;volatile
  9701  012324                     l4628:
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;symbol.c: 134: }
  9705                           ;symbol.c: 135: }
  9706                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
  9707  012324  5039               	movf	_timerExtension1,w,c	;volatile
  9708  012326  2768               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
  9712  012328  51DD               	movf	_timerExtension2& (0+255),w,b	;volatile
  9713  01232A  2769               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
  9717  01232C  809D               	bsf	3997,0,c	;volatile
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;symbol.c: 143: return currentTime;
  9721  01232E  C066  F060         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
  9722  012332  C067  F061         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
  9723  012336  C068  F062         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
  9724  01233A  C069  F063         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
  9725                           
  9726                           ; BSR set to: 0
  9727  01233E  0012               	return		;funcret
  9728  012340                     __end_of_MiWi_TickGet:
  9729                           	opt stack 0
  9730                           tblptru	equ	0xFF8
  9731                           tblptrh	equ	0xFF7
  9732                           tblptrl	equ	0xFF6
  9733                           tablat	equ	0xFF5
  9734                           prodh	equ	0xFF4
  9735                           prodl	equ	0xFF3
  9736                           intcon	equ	0xFF2
  9737                           intcon2	equ	0xFF1
  9738                           intcon3	equ	0xFF0
  9739                           postinc0	equ	0xFEE
  9740                           wreg	equ	0xFE8
  9741                           indf1	equ	0xFE7
  9742                           postdec1	equ	0xFE5
  9743                           fsr1h	equ	0xFE2
  9744                           fsr1l	equ	0xFE1
  9745                           indf2	equ	0xFDF
  9746                           postinc2	equ	0xFDE
  9747                           postdec2	equ	0xFDD
  9748                           fsr2h	equ	0xFDA
  9749                           fsr2l	equ	0xFD9
  9750                           status	equ	0xFD8
  9751                           
  9752 ;; *************** function _AddConnection *****************
  9753 ;; Defined at:
  9754 ;;		line 2535 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  i               1   16[BANK0 ] unsigned char 
  9759 ;;  connectionSl    1   15[BANK0 ] unsigned char 
  9760 ;;  status          1   14[BANK0 ] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      unsigned char 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : F/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;Total ram usage:        7 bytes
  9775 ;; Hardware stack levels used:    1
  9776 ;; Hardware stack levels required when called:    8
  9777 ;; This function calls:
  9778 ;;		_NVMWrite
  9779 ;;		_Total_Connections
  9780 ;;		_isSameAddress
  9781 ;; This function is called by:
  9782 ;;		_P2PTasks
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text42
  9787  0112CC                     __ptext42:
  9788                           	opt stack 0
  9789  0112CC                     _AddConnection:
  9790                           	opt stack 17
  9791                           
  9792                           ;miwi_p2p.c: 2537: uint8_t i;
  9793                           ;miwi_p2p.c: 2538: uint8_t status = 0x00;
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;incstack = 0
  9797  0112CC  0100               	movlb	0	; () banked
  9798  0112CE  6B6E               	clrf	AddConnection@status& (0+255),b
  9799                           
  9800                           ;miwi_p2p.c: 2539: uint8_t connectionSlot = 0xFF;
  9801  0112D0  696F               	setf	AddConnection@connectionSlot& (0+255),b
  9802                           
  9803                           ;miwi_p2p.c: 2551: for(i = 0; i < 5; i++)
  9804  0112D2  6B70               	clrf	AddConnection@i& (0+255),b
  9805  0112D4                     l5108:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;miwi_p2p.c: 2552: {
  9809                           ;miwi_p2p.c: 2554: if( ConnectionTable[i].status.bits.isValid )
  9810  0112D4  5170               	movf	AddConnection@i& (0+255),w,b
  9811  0112D6  0D0A               	mullw	10
  9812  0112D8  0E58               	movlw	low (_ConnectionTable+8)
  9813  0112DA  24F3               	addwf	prodl,w,c
  9814  0112DC  6ED9               	movwf	fsr2l,c
  9815  0112DE  0E01               	movlw	high (_ConnectionTable+8)
  9816  0112E0  20F4               	addwfc	prodh,w,c
  9817  0112E2  6EDA               	movwf	fsr2h,c
  9818  0112E4  AEDF               	btfss	indf2,7,c
  9819  0112E6  D016               	goto	l5116
  9820                           
  9821                           ; BSR set to: 1
  9822                           ;miwi_p2p.c: 2555: {
  9823                           ;miwi_p2p.c: 2557: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
  9824  0112E8  C0B1  F060         	movff	_rxMessage+3,isSameAddress@Address1
  9825  0112EC  C0B2  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
  9826  0112F0  0100               	movlb	0	; () banked
  9827  0112F2  5170               	movf	AddConnection@i& (0+255),w,b
  9828  0112F4  0D0A               	mullw	10
  9829  0112F6  0E50               	movlw	low _ConnectionTable
  9830  0112F8  24F3               	addwf	prodl,w,c
  9831  0112FA  6F62               	movwf	isSameAddress@Address2& (0+255),b
  9832  0112FC  0E01               	movlw	high _ConnectionTable
  9833  0112FE  20F4               	addwfc	prodh,w,c
  9834  011300  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
  9835  011302  ECC4  F093         	call	_isSameAddress	;wreg free
  9836  011306  0900               	iorlw	0
  9837  011308  E00A               	bz	l5120
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;miwi_p2p.c: 2558: {
  9841                           ;miwi_p2p.c: 2559: connectionSlot = i;
  9842  01130A  C070  F06F         	movff	AddConnection@i,AddConnection@connectionSlot
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;miwi_p2p.c: 2560: status = 0x01;
  9846  01130E  0E01               	movlw	1
  9847  011310  6F6E               	movwf	AddConnection@status& (0+255),b
  9848                           
  9849                           ;miwi_p2p.c: 2561: break;
  9850  011312  D009               	goto	l5124
  9851  011314                     l5116:
  9852                           
  9853                           ; BSR set to: 1
  9854                           ;miwi_p2p.c: 2564: else if( connectionSlot == 0xFF )
  9855  011314  0100               	movlb	0	; () banked
  9856  011316  296F               	incf	AddConnection@connectionSlot& (0+255),w,b
  9857  011318  E102               	bnz	l5120
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;miwi_p2p.c: 2565: {
  9861                           ;miwi_p2p.c: 2567: connectionSlot = i;
  9862  01131A  C070  F06F         	movff	AddConnection@i,AddConnection@connectionSlot
  9863  01131E                     l5120:
  9864                           
  9865                           ; BSR set to: 0
  9866  01131E  2B70               	incf	AddConnection@i& (0+255),f,b
  9867                           
  9868                           ; BSR set to: 0
  9869  011320  0E04               	movlw	4
  9870  011322  6570               	cpfsgt	AddConnection@i& (0+255),b
  9871  011324  D7D7               	goto	l5108
  9872  011326                     l5124:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;miwi_p2p.c: 2568: }
  9876                           ;miwi_p2p.c: 2569: }
  9877                           ;miwi_p2p.c: 2571: if( connectionSlot == 0xFF )
  9878  011326  296F               	incf	AddConnection@connectionSlot& (0+255),w,b
  9879  011328  E101               	bnz	l5132
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;miwi_p2p.c: 2572: {
  9883                           ;miwi_p2p.c: 2573: return 0xF1;
  9884  01132A  0CF1               	retlw	241
  9885  01132C                     l5132:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;miwi_p2p.c: 2575: else
  9889                           ;miwi_p2p.c: 2576: {
  9890                           ;miwi_p2p.c: 2577: if( ConnMode >= 0x01 )
  9891  01132C  51F6               	movf	_ConnMode& (0+255),w,b
  9892  01132E  E003               	bz	l529
  9893  011330                     l5134:
  9894                           
  9895                           ;miwi_p2p.c: 2578: {
  9896                           ;miwi_p2p.c: 2579: return status;
  9897  011330  0100               	movlb	0	; () banked
  9898  011332  516E               	movf	AddConnection@status& (0+255),w,b
  9899  011334  0012               	return	
  9900  011336                     l529:
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;miwi_p2p.c: 2580: }
  9904                           ;miwi_p2p.c: 2581: MyindexinPC = connectionSlot;
  9905  011336  C06F  F0CF         	movff	AddConnection@connectionSlot,_MyindexinPC
  9906                           
  9907                           ;miwi_p2p.c: 2583: for(i = 0; i < 8; i++)
  9908  01133A  6B70               	clrf	AddConnection@i& (0+255),b
  9909  01133C                     l5142:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;miwi_p2p.c: 2584: {
  9913                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
  9914  01133C  5170               	movf	AddConnection@i& (0+255),w,b
  9915  01133E  25B1               	addwf	(_rxMessage+3)& (0+255),w,b
  9916  011340  6ED9               	movwf	fsr2l,c
  9917  011342  0E00               	movlw	0
  9918  011344  21B2               	addwfc	(_rxMessage+4)& (0+255),w,b
  9919  011346  6EDA               	movwf	fsr2h,c
  9920  011348  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
  9921  01134A  0D0A               	mullw	10
  9922  01134C  0E50               	movlw	low _ConnectionTable
  9923  01134E  6F6A               	movwf	??_AddConnection& (0+255),b
  9924  011350  0E01               	movlw	high _ConnectionTable
  9925  011352  6F6B               	movwf	(??_AddConnection+1)& (0+255),b
  9926  011354  50F3               	movf	prodl,w,c
  9927  011356  276A               	addwf	??_AddConnection& (0+255),f,b
  9928  011358  50F4               	movf	prodh,w,c
  9929  01135A  236B               	addwfc	(??_AddConnection+1)& (0+255),f,b
  9930  01135C  5170               	movf	AddConnection@i& (0+255),w,b
  9931  01135E  256A               	addwf	??_AddConnection& (0+255),w,b
  9932  011360  6EE1               	movwf	fsr1l,c
  9933  011362  0E00               	movlw	0
  9934  011364  216B               	addwfc	(??_AddConnection+1)& (0+255),w,b
  9935  011366  6EE2               	movwf	fsr1h,c
  9936  011368  CFDF FFE7          	movff	indf2,indf1
  9937                           
  9938                           ; BSR set to: 0
  9939  01136C  2B70               	incf	AddConnection@i& (0+255),f,b
  9940                           
  9941                           ; BSR set to: 0
  9942  01136E  0E07               	movlw	7
  9943  011370  6570               	cpfsgt	AddConnection@i& (0+255),b
  9944  011372  D7E4               	goto	l5142
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;miwi_p2p.c: 2586: }
  9948                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.isValid = 1;
  9949  011374  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
  9950  011376  0D0A               	mullw	10
  9951  011378  0E58               	movlw	low (_ConnectionTable+8)
  9952  01137A  24F3               	addwf	prodl,w,c
  9953  01137C  6ED9               	movwf	fsr2l,c
  9954  01137E  0E01               	movlw	high (_ConnectionTable+8)
  9955  011380  20F4               	addwfc	prodh,w,c
  9956  011382  6EDA               	movwf	fsr2h,c
  9957  011384  8EDF               	bsf	indf2,7,c
  9958                           
  9959                           ;miwi_p2p.c: 2590: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
  9960  011386  0100               	movlb	0	; () banked
  9961  011388  EE20 F002          	lfsr	2,2
  9962  01138C  51B3               	movf	(_rxMessage+5)& (0+255),w,b
  9963  01138E  26D9               	addwf	fsr2l,f,c
  9964  011390  51B4               	movf	(_rxMessage+6)& (0+255),w,b
  9965  011392  22DA               	addwfc	fsr2h,f,c
  9966  011394  50DF               	movf	indf2,w,c
  9967  011396  6F6A               	movwf	??_AddConnection& (0+255),b
  9968  011398  0E01               	movlw	1
  9969  01139A  176A               	andwf	??_AddConnection& (0+255),f,b
  9970  01139C  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
  9971  01139E  0D0A               	mullw	10
  9972  0113A0  0E58               	movlw	low (_ConnectionTable+8)
  9973  0113A2  24F3               	addwf	prodl,w,c
  9974  0113A4  6ED9               	movwf	fsr2l,c
  9975  0113A6  0E01               	movlw	high (_ConnectionTable+8)
  9976  0113A8  20F4               	addwfc	prodh,w,c
  9977  0113AA  6EDA               	movwf	fsr2h,c
  9978  0113AC  50DF               	movf	223,w,c
  9979  0113AE  196A               	xorwf	??_AddConnection& (0+255),w,b
  9980  0113B0  0BFE               	andlw	-2
  9981  0113B2  196A               	xorwf	??_AddConnection& (0+255),w,b
  9982  0113B4  6EDF               	movwf	223,c
  9983                           
  9984                           ; BSR set to: 1
  9985                           ;miwi_p2p.c: 2594: for(i = 0; i < 1; i++)
  9986  0113B6  6B70               	clrf	AddConnection@i& (0+255),b
  9987  0113B8                     l5156:
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;miwi_p2p.c: 2595: {
  9991                           ;miwi_p2p.c: 2596: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
  9992  0113B8  5170               	movf	AddConnection@i& (0+255),w,b
  9993  0113BA  25B3               	addwf	(_rxMessage+5)& (0+255),w,b
  9994  0113BC  6F6A               	movwf	??_AddConnection& (0+255),b
  9995  0113BE  0E00               	movlw	0
  9996  0113C0  21B4               	addwfc	(_rxMessage+6)& (0+255),w,b
  9997  0113C2  6F6B               	movwf	(??_AddConnection+1)& (0+255),b
  9998  0113C4  0E03               	movlw	3
  9999  0113C6  256A               	addwf	??_AddConnection& (0+255),w,b
 10000  0113C8  6ED9               	movwf	fsr2l,c
 10001  0113CA  0E00               	movlw	0
 10002  0113CC  216B               	addwfc	(??_AddConnection+1)& (0+255),w,b
 10003  0113CE  6EDA               	movwf	fsr2h,c
 10004  0113D0  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
 10005  0113D2  0D0A               	mullw	10
 10006  0113D4  0E50               	movlw	low _ConnectionTable
 10007  0113D6  6F6C               	movwf	(??_AddConnection+2)& (0+255),b
 10008  0113D8  0E01               	movlw	high _ConnectionTable
 10009  0113DA  6F6D               	movwf	(??_AddConnection+3)& (0+255),b
 10010  0113DC  0E09               	movlw	9
 10011  0113DE  276C               	addwf	(??_AddConnection+2)& (0+255),f,b
 10012  0113E0  0E00               	movlw	0
 10013  0113E2  236D               	addwfc	(??_AddConnection+3)& (0+255),f,b
 10014  0113E4  50F3               	movf	prodl,w,c
 10015  0113E6  276C               	addwf	(??_AddConnection+2)& (0+255),f,b
 10016  0113E8  50F4               	movf	prodh,w,c
 10017  0113EA  236D               	addwfc	(??_AddConnection+3)& (0+255),f,b
 10018  0113EC  5170               	movf	AddConnection@i& (0+255),w,b
 10019  0113EE  256C               	addwf	(??_AddConnection+2)& (0+255),w,b
 10020  0113F0  6EE1               	movwf	fsr1l,c
 10021  0113F2  0E00               	movlw	0
 10022  0113F4  216D               	addwfc	(??_AddConnection+3)& (0+255),w,b
 10023  0113F6  6EE2               	movwf	fsr1h,c
 10024  0113F8  CFDF FFE7          	movff	indf2,indf1
 10025                           
 10026                           ; BSR set to: 0
 10027  0113FC  2B70               	incf	AddConnection@i& (0+255),f,b
 10028                           
 10029                           ; BSR set to: 0
 10030  0113FE  5170               	movf	AddConnection@i& (0+255),w,b
 10031  011400  E0DB               	bz	l5156
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;miwi_p2p.c: 2597: }
 10035                           ;miwi_p2p.c: 2604: LatestConnection = connectionSlot;
 10036  011402  C06F  F0CD         	movff	AddConnection@connectionSlot,_LatestConnection
 10037                           
 10038                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 10039  011406  99D1               	bcf	_P2PStatus& (0+255),4,b	;volatile
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;miwi_p2p.c: 2606: }
 10043                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 10044  011408  EC05  F094         	call	_Total_Connections	;wreg free
 10045  01140C  6FEA               	movwf	_conn_size& (0+255),b
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;miwi_p2p.c: 2609: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 10049  01140E  0EEA               	movlw	low _conn_size
 10050  011410  6F61               	movwf	NVMWrite@source& (0+255),b
 10051  011412  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
 10052  011414  C0E4  F063         	movff	_nvmEdc,NVMWrite@addr
 10053  011418  C0E5  F064         	movff	_nvmEdc+1,NVMWrite@addr+1
 10054  01141C  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
 10055  01141E  0E01               	movlw	1
 10056  011420  6F65               	movwf	NVMWrite@count& (0+255),b
 10057  011422  ECE3  F08D         	call	_NVMWrite	;wreg free
 10058  011426  D784               	goto	l5134
 10059  011428                     __end_of_AddConnection:
 10060                           	opt stack 0
 10061                           tblptru	equ	0xFF8
 10062                           tblptrh	equ	0xFF7
 10063                           tblptrl	equ	0xFF6
 10064                           tablat	equ	0xFF5
 10065                           prodh	equ	0xFF4
 10066                           prodl	equ	0xFF3
 10067                           intcon	equ	0xFF2
 10068                           intcon2	equ	0xFF1
 10069                           intcon3	equ	0xFF0
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           indf1	equ	0xFE7
 10073                           postdec1	equ	0xFE5
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           indf2	equ	0xFDF
 10077                           postinc2	equ	0xFDE
 10078                           postdec2	equ	0xFDD
 10079                           fsr2h	equ	0xFDA
 10080                           fsr2l	equ	0xFD9
 10081                           status	equ	0xFD8
 10082                           
 10083 ;; *************** function _isSameAddress *****************
 10084 ;; Defined at:
 10085 ;;		line 2144 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  Address1        2    0[BANK0 ] PTR unsigned char 
 10088 ;;		 -> NULL(0), RxPacket.Payload(50), RxPacket(104), 
 10089 ;;  Address2        2    2[BANK0 ] PTR unsigned char 
 10090 ;;		 -> ConnectionTable(50), 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  i               1    6[BANK0 ] unsigned char 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      unsigned char 
 10095 ;; Registers used:
 10096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10097 ;; Tracked objects:
 10098 ;;		On entry : F/0
 10099 ;;		On exit  : F/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;Total ram usage:        7 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:    5
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		_P2PTasks
 10113 ;;		_AddConnection
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text43
 10118  012788                     __ptext43:
 10119                           	opt stack 0
 10120  012788                     _isSameAddress:
 10121                           	opt stack 20
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;miwi_p2p.c: 2146: uint8_t i;
 10125                           ;miwi_p2p.c: 2148: for(i = 0; i < 8; i++)
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;incstack = 0
 10129  012788  6B66               	clrf	isSameAddress@i& (0+255),b
 10130  01278A                     l4864:
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;miwi_p2p.c: 2149: {
 10134                           ;miwi_p2p.c: 2150: if( Address1[i] != Address2[i] )
 10135  01278A  5166               	movf	isSameAddress@i& (0+255),w,b
 10136  01278C  2562               	addwf	isSameAddress@Address2& (0+255),w,b
 10137  01278E  6ED9               	movwf	fsr2l,c
 10138  012790  0E00               	movlw	0
 10139  012792  2163               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 10140  012794  6EDA               	movwf	fsr2h,c
 10141  012796  5166               	movf	isSameAddress@i& (0+255),w,b
 10142  012798  2560               	addwf	isSameAddress@Address1& (0+255),w,b
 10143  01279A  6EE1               	movwf	fsr1l,c
 10144  01279C  0E00               	movlw	0
 10145  01279E  2161               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 10146  0127A0  6EE2               	movwf	fsr1h,c
 10147  0127A2  50DE               	movf	postinc2,w,c
 10148  0127A4  18E6               	xorwf	postinc1,w,c
 10149  0127A6  E001               	bz	l4870
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;miwi_p2p.c: 2151: {
 10153                           ;miwi_p2p.c: 2152: return 0;
 10154  0127A8  0C00               	retlw	0
 10155  0127AA                     l4870:
 10156                           
 10157                           ; BSR set to: 0
 10158  0127AA  2B66               	incf	isSameAddress@i& (0+255),f,b
 10159                           
 10160                           ; BSR set to: 0
 10161  0127AC  0E07               	movlw	7
 10162  0127AE  6566               	cpfsgt	isSameAddress@i& (0+255),b
 10163  0127B0  D7EC               	goto	l4864
 10164  0127B2  0C01               	retlw	1
 10165  0127B4                     __end_of_isSameAddress:
 10166                           	opt stack 0
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           intcon3	equ	0xFF0
 10176                           postinc0	equ	0xFEE
 10177                           wreg	equ	0xFE8
 10178                           indf1	equ	0xFE7
 10179                           postinc1	equ	0xFE6
 10180                           postdec1	equ	0xFE5
 10181                           fsr1h	equ	0xFE2
 10182                           fsr1l	equ	0xFE1
 10183                           indf2	equ	0xFDF
 10184                           postinc2	equ	0xFDE
 10185                           postdec2	equ	0xFDD
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function _Total_Connections *****************
 10191 ;; Defined at:
 10192 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;		None
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  i               1    1[BANK0 ] unsigned char 
 10197 ;;  count           1    0[BANK0 ] unsigned char 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      unsigned char 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10202 ;; Tracked objects:
 10203 ;;		On entry : F/0
 10204 ;;		On exit  : F/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;Total ram usage:        2 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    5
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_AddConnection
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text44
 10222  01280A                     __ptext44:
 10223                           	opt stack 0
 10224  01280A                     _Total_Connections:
 10225                           	opt stack 19
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;incstack = 0
 10232  01280A  6B60               	clrf	Total_Connections@count& (0+255),b
 10233                           
 10234                           ;miwi_p2p.c: 69: for (i=0;i<5;i++)
 10235  01280C  6B61               	clrf	Total_Connections@i& (0+255),b
 10236  01280E                     l4848:
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;miwi_p2p.c: 70: {
 10240                           ;miwi_p2p.c: 77: if (ConnectionTable[i].status.bits.isValid)
 10241  01280E  5161               	movf	Total_Connections@i& (0+255),w,b
 10242  012810  0D0A               	mullw	10
 10243  012812  0E58               	movlw	low (_ConnectionTable+8)
 10244  012814  24F3               	addwf	prodl,w,c
 10245  012816  6ED9               	movwf	fsr2l,c
 10246  012818  0E01               	movlw	high (_ConnectionTable+8)
 10247  01281A  20F4               	addwfc	prodh,w,c
 10248  01281C  6EDA               	movwf	fsr2h,c
 10249  01281E  AEDF               	btfss	indf2,7,c
 10250  012820  D002               	goto	l344
 10251                           
 10252                           ; BSR set to: 1
 10253                           ;miwi_p2p.c: 78: {
 10254                           ;miwi_p2p.c: 79: count++;
 10255  012822  0100               	movlb	0	; () banked
 10256  012824  2B60               	incf	Total_Connections@count& (0+255),f,b
 10257  012826                     l344:
 10258  012826  0100               	movlb	0	; () banked
 10259  012828  2B61               	incf	Total_Connections@i& (0+255),f,b
 10260                           
 10261                           ; BSR set to: 0
 10262  01282A  0E04               	movlw	4
 10263  01282C  6561               	cpfsgt	Total_Connections@i& (0+255),b
 10264  01282E  D7EF               	goto	l4848
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;miwi_p2p.c: 80: }
 10268                           ;miwi_p2p.c: 82: }
 10269                           ;miwi_p2p.c: 83: return count;
 10270  012830  5160               	movf	Total_Connections@count& (0+255),w,b
 10271                           
 10272                           ; BSR set to: 0
 10273  012832  0012               	return		;funcret
 10274  012834                     __end_of_Total_Connections:
 10275                           	opt stack 0
 10276                           tblptru	equ	0xFF8
 10277                           tblptrh	equ	0xFF7
 10278                           tblptrl	equ	0xFF6
 10279                           tablat	equ	0xFF5
 10280                           prodh	equ	0xFF4
 10281                           prodl	equ	0xFF3
 10282                           intcon	equ	0xFF2
 10283                           intcon2	equ	0xFF1
 10284                           intcon3	equ	0xFF0
 10285                           postinc0	equ	0xFEE
 10286                           wreg	equ	0xFE8
 10287                           indf1	equ	0xFE7
 10288                           postinc1	equ	0xFE6
 10289                           postdec1	equ	0xFE5
 10290                           fsr1h	equ	0xFE2
 10291                           fsr1l	equ	0xFE1
 10292                           indf2	equ	0xFDF
 10293                           postinc2	equ	0xFDE
 10294                           postdec2	equ	0xFDD
 10295                           fsr2h	equ	0xFDA
 10296                           fsr2l	equ	0xFD9
 10297                           status	equ	0xFD8
 10298                           
 10299 ;; *************** function _MiApp_DiscardMessage *****************
 10300 ;; Defined at:
 10301 ;;		line 2384 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;		None
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;		None
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  1    wreg      void 
 10308 ;; Registers used:
 10309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : F/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;Total ram usage:        0 bytes
 10320 ;; Hardware stack levels used:    1
 10321 ;; Hardware stack levels required when called:    6
 10322 ;; This function calls:
 10323 ;;		_MiMAC_DiscardPacket
 10324 ;; This function is called by:
 10325 ;;		_MiApp_EstablishConnection
 10326 ;;		_Process_RxMessage
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text45
 10331  012B00                     __ptext45:
 10332                           	opt stack 0
 10333  012B00                     _MiApp_DiscardMessage:
 10334                           	opt stack 21
 10335                           
 10336                           ;miwi_p2p.c: 2386: P2PStatus.bits.RxHasUserData = 0;
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;incstack = 0
 10340  012B00  0100               	movlb	0	; () banked
 10341  012B02  97D1               	bcf	_P2PStatus& (0+255),3,b	;volatile
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;miwi_p2p.c: 2387: MiMAC_DiscardPacket();
 10345  012B04  EFE7  F094         	goto	_MiMAC_DiscardPacket	;wreg free
 10346  012B08                     __end_of_MiApp_DiscardMessage:
 10347                           	opt stack 0
 10348                           tblptru	equ	0xFF8
 10349                           tblptrh	equ	0xFF7
 10350                           tblptrl	equ	0xFF6
 10351                           tablat	equ	0xFF5
 10352                           prodh	equ	0xFF4
 10353                           prodl	equ	0xFF3
 10354                           intcon	equ	0xFF2
 10355                           intcon2	equ	0xFF1
 10356                           intcon3	equ	0xFF0
 10357                           postinc0	equ	0xFEE
 10358                           wreg	equ	0xFE8
 10359                           indf1	equ	0xFE7
 10360                           postinc1	equ	0xFE6
 10361                           postdec1	equ	0xFE5
 10362                           fsr1h	equ	0xFE2
 10363                           fsr1l	equ	0xFE1
 10364                           indf2	equ	0xFDF
 10365                           postinc2	equ	0xFDE
 10366                           postdec2	equ	0xFDD
 10367                           fsr2h	equ	0xFDA
 10368                           fsr2l	equ	0xFD9
 10369                           status	equ	0xFD8
 10370                           
 10371 ;; *************** function _MiMAC_DiscardPacket *****************
 10372 ;; Defined at:
 10373 ;;		line 1050 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;		None
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;		None
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  1    wreg      void 
 10380 ;; Registers used:
 10381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : F/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;Total ram usage:        0 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    5
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_P2PTasks
 10398 ;;		_MiApp_DiscardMessage
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           	psect	text46
 10403  0129CE                     __ptext46:
 10404                           	opt stack 0
 10405  0129CE                     _MiMAC_DiscardPacket:
 10406                           	opt stack 20
 10407                           
 10408                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;incstack = 0
 10412  0129CE  0E02               	movlw	2
 10413  0129D0  0100               	movlb	0	; () banked
 10414  0129D2  61D4               	cpfslt	_ReceivedBankIndex& (0+255),b
 10415  0129D4  0C02               	retlw	2
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;drv_mrf_miwi_89xa.c: 1053: {
 10419                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 10420  0129D6  51D4               	movf	_ReceivedBankIndex& (0+255),w,b
 10421  0129D8  0D34               	mullw	52
 10422  0129DA  0E00               	movlw	low _RxPacket
 10423  0129DC  24F3               	addwf	prodl,w,c
 10424  0129DE  6ED9               	movwf	fsr2l,c
 10425  0129E0  0E02               	movlw	high _RxPacket
 10426  0129E2  20F4               	addwfc	prodh,w,c
 10427  0129E4  6EDA               	movwf	fsr2h,c
 10428  0129E6  0E00               	movlw	0
 10429  0129E8  6ADF               	clrf	indf2,c
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 10433  0129EA  69D4               	setf	_ReceivedBankIndex& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436  0129EC  0012               	return		;funcret
 10437  0129EE                     __end_of_MiMAC_DiscardPacket:
 10438                           	opt stack 0
 10439                           tblptru	equ	0xFF8
 10440                           tblptrh	equ	0xFF7
 10441                           tblptrl	equ	0xFF6
 10442                           tablat	equ	0xFF5
 10443                           prodh	equ	0xFF4
 10444                           prodl	equ	0xFF3
 10445                           intcon	equ	0xFF2
 10446                           intcon2	equ	0xFF1
 10447                           intcon3	equ	0xFF0
 10448                           postinc0	equ	0xFEE
 10449                           wreg	equ	0xFE8
 10450                           indf1	equ	0xFE7
 10451                           postinc1	equ	0xFE6
 10452                           postdec1	equ	0xFE5
 10453                           fsr1h	equ	0xFE2
 10454                           fsr1l	equ	0xFE1
 10455                           indf2	equ	0xFDF
 10456                           postinc2	equ	0xFDE
 10457                           postdec2	equ	0xFDD
 10458                           fsr2h	equ	0xFDA
 10459                           fsr2l	equ	0xFD9
 10460                           status	equ	0xFD8
 10461                           
 10462 ;; *************** function _MiApp_ConnectionMode *****************
 10463 ;; Defined at:
 10464 ;;		line 3189 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  Mode            1    wreg     unsigned char 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  Mode            1   11[BANK0 ] unsigned char 
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      void 
 10471 ;; Registers used:
 10472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;Total ram usage:        2 bytes
 10483 ;; Hardware stack levels used:    1
 10484 ;; Hardware stack levels required when called:    8
 10485 ;; This function calls:
 10486 ;;		_NVMWrite
 10487 ;; This function is called by:
 10488 ;;		_Initialize_Demo
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text47
 10493  012480                     __ptext47:
 10494                           	opt stack 0
 10495  012480                     _MiApp_ConnectionMode:
 10496                           	opt stack 21
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;incstack = 0
 10500                           ;MiApp_ConnectionMode@Mode stored from wreg
 10501  012480  0100               	movlb	0	; () banked
 10502  012482  6F6B               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 10503                           
 10504                           ;miwi_p2p.c: 3191: if( Mode > 3 )
 10505  012484  0E03               	movlw	3
 10506  012486  656B               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 10507  012488  D001               	goto	l549
 10508  01248A  0C03               	retlw	3
 10509  01248C                     l549:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;miwi_p2p.c: 3194: }
 10513                           ;miwi_p2p.c: 3195: ConnMode = Mode;
 10514  01248C  C06B  F0F6         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;miwi_p2p.c: 3196: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 10518  012490  C0F6  F06A         	movff	_ConnMode,??_MiApp_ConnectionMode
 10519  012494  3B6A               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 10520  012496  0EF0               	movlw	240
 10521  012498  176A               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 10522  01249A  51D0               	movf	_P2PCapacityInfo& (0+255),w,b
 10523  01249C  0B0F               	andlw	15
 10524  01249E  116A               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 10525  0124A0  6FD0               	movwf	_P2PCapacityInfo& (0+255),b
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;miwi_p2p.c: 3199: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 10529  0124A2  0EF6               	movlw	low _ConnMode
 10530  0124A4  6F61               	movwf	NVMWrite@source& (0+255),b
 10531  0124A6  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
 10532  0124A8  C0DE  F063         	movff	_nvmConnMode,NVMWrite@addr
 10533  0124AC  C0DF  F064         	movff	_nvmConnMode+1,NVMWrite@addr+1
 10534  0124B0  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
 10535  0124B2  0E01               	movlw	1
 10536  0124B4  6F65               	movwf	NVMWrite@count& (0+255),b
 10537  0124B6  EFE3  F08D         	goto	_NVMWrite	;wreg free
 10538  0124BA                     __end_of_MiApp_ConnectionMode:
 10539                           	opt stack 0
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           intcon	equ	0xFF2
 10547                           intcon2	equ	0xFF1
 10548                           intcon3	equ	0xFF0
 10549                           postinc0	equ	0xFEE
 10550                           wreg	equ	0xFE8
 10551                           indf1	equ	0xFE7
 10552                           postinc1	equ	0xFE6
 10553                           postdec1	equ	0xFE5
 10554                           fsr1h	equ	0xFE2
 10555                           fsr1l	equ	0xFE1
 10556                           indf2	equ	0xFDF
 10557                           postinc2	equ	0xFDE
 10558                           postdec2	equ	0xFDD
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8
 10562                           
 10563 ;; *************** function _NVMWrite *****************
 10564 ;; Defined at:
 10565 ;;		line 255 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  source          2    1[BANK0 ] PTR unsigned char 
 10568 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(50), 
 10569 ;;  addr            2    3[BANK0 ] unsigned int 
 10570 ;;  count           2    5[BANK0 ] unsigned int 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  PageCounter     1    9[BANK0 ] unsigned char 
 10573 ;;  oldRFIE         1    8[BANK0 ] unsigned char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : F/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10583 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;Total ram usage:        9 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    7
 10590 ;; This function calls:
 10591 ;;		_MacroNop
 10592 ;;		_SPIGet
 10593 ;;		_SPIPut
 10594 ;; This function is called by:
 10595 ;;		_P2PTasks
 10596 ;;		_MiApp_ProtocolInit
 10597 ;;		_MiApp_SetChannel
 10598 ;;		_AddConnection
 10599 ;;		_MiApp_ConnectionMode
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text48
 10604  011BC6                     __ptext48:
 10605                           	opt stack 0
 10606  011BC6                     _NVMWrite:
 10607                           	opt stack 18
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;miwi_nvm.c: 263: uint8_t oldRFIE = INTCON3bits.INT3IE;
 10611                           
 10612                           ; BSR set to: 0
 10613                           
 10614                           ;incstack = 0
 10615  011BC6  0E00               	movlw	0
 10616  011BC8  BAF0               	btfsc	intcon3,5,c	;volatile
 10617  011BCA  0E01               	movlw	1
 10618  011BCC  6F68               	movwf	NVMWrite@oldRFIE& (0+255),b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;miwi_nvm.c: 264: INTCON3bits.INT3IE = 0;
 10622  011BCE  9AF0               	bcf	intcon3,5,c	;volatile
 10623  011BD0                     l4798:
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;miwi_nvm.c: 270: {
 10627                           ;miwi_nvm.c: 271: LATAbits.LATA3 = 0;
 10628  011BD0  9689               	bcf	3977,3,c	;volatile
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;miwi_nvm.c: 272: SPIPut( 0x05 );
 10632  011BD2  0E05               	movlw	5
 10633  011BD4  EC13  F095         	call	_SPIPut
 10634                           
 10635                           ;miwi_nvm.c: 273: PageCounter = SPIGet();
 10636  011BD8  EC72  F095         	call	_SPIGet	;wreg free
 10637  011BDC  0100               	movlb	0	; () banked
 10638  011BDE  6F69               	movwf	NVMWrite@PageCounter& (0+255),b
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;miwi_nvm.c: 274: LATAbits.LATA3 = 1;
 10642  011BE0  8689               	bsf	3977,3,c	;volatile
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;miwi_nvm.c: 275: MacroNop();
 10646  011BE2  EC86  F095         	call	_MacroNop	;wreg free
 10647                           
 10648                           ;miwi_nvm.c: 276: } while(PageCounter & 0x01 );
 10649  011BE6  0100               	movlb	0	; () banked
 10650  011BE8  B169               	btfsc	NVMWrite@PageCounter& (0+255),0,b
 10651  011BEA  D7F2               	goto	l4798
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;miwi_nvm.c: 278: LATAbits.LATA3 = 0;
 10655  011BEC  9689               	bcf	3977,3,c	;volatile
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;miwi_nvm.c: 279: SPIPut( 0x06 );
 10659  011BEE  0E06               	movlw	6
 10660  011BF0  EC13  F095         	call	_SPIPut
 10661                           
 10662                           ;miwi_nvm.c: 280: LATAbits.LATA3 = 1;
 10663  011BF4  8689               	bsf	3977,3,c	;volatile
 10664                           
 10665                           ;miwi_nvm.c: 281: MacroNop();
 10666  011BF6  EC86  F095         	call	_MacroNop	;wreg free
 10667                           
 10668                           ;miwi_nvm.c: 282: LATAbits.LATA3 = 0;
 10669  011BFA  9689               	bcf	3977,3,c	;volatile
 10670                           
 10671                           ;miwi_nvm.c: 297: SPIPut( 0x02 );
 10672  011BFC  0E02               	movlw	2
 10673  011BFE  EC13  F095         	call	_SPIPut
 10674                           
 10675                           ;miwi_nvm.c: 298: SPIPut( addr>>8 );
 10676  011C02  0100               	movlb	0	; () banked
 10677  011C04  5164               	movf	(NVMWrite@addr+1)& (0+255),w,b
 10678  011C06  EC13  F095         	call	_SPIPut
 10679                           
 10680                           ;miwi_nvm.c: 299: SPIPut( addr );
 10681  011C0A  0100               	movlb	0	; () banked
 10682  011C0C  5163               	movf	NVMWrite@addr& (0+255),w,b
 10683  011C0E  EC13  F095         	call	_SPIPut
 10684                           
 10685                           ;miwi_nvm.c: 301: PageCounter = 0;
 10686  011C12  0100               	movlb	0	; () banked
 10687  011C14  6B69               	clrf	NVMWrite@PageCounter& (0+255),b
 10688                           
 10689                           ;miwi_nvm.c: 302: while( count > 0 )
 10690  011C16  D01A               	goto	l4840
 10691  011C18                     l4826:
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;miwi_nvm.c: 303: {
 10695                           ;miwi_nvm.c: 304: SPIPut( *source++ );
 10696  011C18  C061  FFD9         	movff	NVMWrite@source,fsr2l
 10697  011C1C  C062  FFDA         	movff	NVMWrite@source+1,fsr2h
 10698  011C20  50DF               	movf	indf2,w,c
 10699  011C22  EC13  F095         	call	_SPIPut
 10700  011C26  0100               	movlb	0	; () banked
 10701  011C28  4B61               	infsnz	NVMWrite@source& (0+255),f,b
 10702  011C2A  2B62               	incf	(NVMWrite@source+1)& (0+255),f,b
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;miwi_nvm.c: 305: count--;
 10706  011C2C  0765               	decf	NVMWrite@count& (0+255),f,b
 10707  011C2E  A0D8               	btfss	status,0,c
 10708  011C30  0766               	decf	(NVMWrite@count+1)& (0+255),f,b
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;miwi_nvm.c: 306: PageCounter++;
 10712  011C32  2B69               	incf	NVMWrite@PageCounter& (0+255),f,b
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;miwi_nvm.c: 307: if( ((addr + PageCounter) & (64-1)) == 0 )
 10716  011C34  5169               	movf	NVMWrite@PageCounter& (0+255),w,b
 10717  011C36  2563               	addwf	NVMWrite@addr& (0+255),w,b
 10718  011C38  6F67               	movwf	??_NVMWrite& (0+255),b
 10719  011C3A  0E3F               	movlw	63
 10720  011C3C  1767               	andwf	??_NVMWrite& (0+255),f,b
 10721  011C3E  E106               	bnz	l4840
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;miwi_nvm.c: 308: {
 10725                           ;miwi_nvm.c: 309: LATAbits.LATA3 = 1;
 10726  011C40  8689               	bsf	3977,3,c	;volatile
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;miwi_nvm.c: 310: addr += PageCounter;
 10730  011C42  5169               	movf	NVMWrite@PageCounter& (0+255),w,b
 10731  011C44  2763               	addwf	NVMWrite@addr& (0+255),f,b
 10732  011C46  0E00               	movlw	0
 10733  011C48  2364               	addwfc	(NVMWrite@addr+1)& (0+255),f,b
 10734                           
 10735                           ;miwi_nvm.c: 311: goto EEPROM_NEXT_PAGE;
 10736  011C4A  D7C2               	goto	l4798
 10737  011C4C                     l4840:
 10738                           
 10739                           ; BSR set to: 0
 10740  011C4C  5165               	movf	NVMWrite@count& (0+255),w,b
 10741  011C4E  1166               	iorwf	(NVMWrite@count+1)& (0+255),w,b
 10742  011C50  E1E3               	bnz	l4826
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;miwi_nvm.c: 312: }
 10746                           ;miwi_nvm.c: 313: }
 10747                           ;miwi_nvm.c: 314: LATAbits.LATA3 = 1;
 10748  011C52  8689               	bsf	3977,3,c	;volatile
 10749                           
 10750                           ;miwi_nvm.c: 319: INTCON3bits.INT3IE = oldRFIE;
 10751  011C54  B168               	btfsc	NVMWrite@oldRFIE& (0+255),0,b
 10752  011C56  D002               	bra	u3365
 10753  011C58  9AF0               	bcf	intcon3,5,c	;volatile
 10754  011C5A  D001               	bra	u3366
 10755  011C5C                     u3365:
 10756  011C5C  8AF0               	bsf	intcon3,5,c	;volatile
 10757  011C5E                     u3366:
 10758  011C5E  0012               	return		;funcret
 10759  011C60                     __end_of_NVMWrite:
 10760                           	opt stack 0
 10761                           tblptru	equ	0xFF8
 10762                           tblptrh	equ	0xFF7
 10763                           tblptrl	equ	0xFF6
 10764                           tablat	equ	0xFF5
 10765                           prodh	equ	0xFF4
 10766                           prodl	equ	0xFF3
 10767                           intcon	equ	0xFF2
 10768                           intcon2	equ	0xFF1
 10769                           intcon3	equ	0xFF0
 10770                           postinc0	equ	0xFEE
 10771                           wreg	equ	0xFE8
 10772                           indf1	equ	0xFE7
 10773                           postinc1	equ	0xFE6
 10774                           postdec1	equ	0xFE5
 10775                           fsr1h	equ	0xFE2
 10776                           fsr1l	equ	0xFE1
 10777                           indf2	equ	0xFDF
 10778                           postinc2	equ	0xFDE
 10779                           postdec2	equ	0xFDD
 10780                           fsr2h	equ	0xFDA
 10781                           fsr2l	equ	0xFD9
 10782                           status	equ	0xFD8
 10783                           
 10784 ;; *************** function _SPIGet *****************
 10785 ;; Defined at:
 10786 ;;		line 94 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      unsigned char 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2, cstack
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    6
 10807 ;; This function calls:
 10808 ;;		_SPIPut
 10809 ;; This function is called by:
 10810 ;;		_RegisterRead
 10811 ;;		_NVMRead
 10812 ;;		_NVMWrite
 10813 ;;		_EEPROM_Read
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text49
 10818  012AE4                     __ptext49:
 10819                           	opt stack 0
 10820  012AE4                     _SPIGet:
 10821                           	opt stack 15
 10822                           
 10823                           ;spi.c: 115: SPIPut(0x00);
 10824                           
 10825                           ;incstack = 0
 10826  012AE4  0E00               	movlw	0
 10827  012AE6  EC13  F095         	call	_SPIPut
 10828                           
 10829                           ;spi.c: 116: return SSP1BUF;
 10830  012AEA  50C9               	movf	4041,w,c	;volatile
 10831  012AEC  0012               	return		;funcret
 10832  012AEE                     __end_of_SPIGet:
 10833                           	opt stack 0
 10834                           tblptru	equ	0xFF8
 10835                           tblptrh	equ	0xFF7
 10836                           tblptrl	equ	0xFF6
 10837                           tablat	equ	0xFF5
 10838                           prodh	equ	0xFF4
 10839                           prodl	equ	0xFF3
 10840                           intcon	equ	0xFF2
 10841                           intcon2	equ	0xFF1
 10842                           intcon3	equ	0xFF0
 10843                           postinc0	equ	0xFEE
 10844                           wreg	equ	0xFE8
 10845                           indf1	equ	0xFE7
 10846                           postinc1	equ	0xFE6
 10847                           postdec1	equ	0xFE5
 10848                           fsr1h	equ	0xFE2
 10849                           fsr1l	equ	0xFE1
 10850                           indf2	equ	0xFDF
 10851                           postinc2	equ	0xFDE
 10852                           postdec2	equ	0xFDD
 10853                           fsr2h	equ	0xFDA
 10854                           fsr2l	equ	0xFD9
 10855                           status	equ	0xFD8
 10856                           
 10857 ;; *************** function _MacroNop *****************
 10858 ;; Defined at:
 10859 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;		None
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		None
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;Total ram usage:        0 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    5
 10880 ;; This function calls:
 10881 ;;		Nothing
 10882 ;; This function is called by:
 10883 ;;		_NVMWrite
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text50
 10888  012B0C                     __ptext50:
 10889                           	opt stack 0
 10890  012B0C                     _MacroNop:
 10891                           	opt stack 19
 10892                           
 10893                           ;miwi_p2p.c: 329: __nop();
 10894                           
 10895                           ;incstack = 0
 10896  012B0C  F000               	nop	
 10897  012B0E  0012               	return		;funcret
 10898  012B10                     __end_of_MacroNop:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           prodh	equ	0xFF4
 10905                           prodl	equ	0xFF3
 10906                           intcon	equ	0xFF2
 10907                           intcon2	equ	0xFF1
 10908                           intcon3	equ	0xFF0
 10909                           postinc0	equ	0xFEE
 10910                           wreg	equ	0xFE8
 10911                           indf1	equ	0xFE7
 10912                           postinc1	equ	0xFE6
 10913                           postdec1	equ	0xFE5
 10914                           fsr1h	equ	0xFE2
 10915                           fsr1l	equ	0xFE1
 10916                           indf2	equ	0xFDF
 10917                           postinc2	equ	0xFDE
 10918                           postdec2	equ	0xFDD
 10919                           fsr2h	equ	0xFDA
 10920                           fsr2l	equ	0xFD9
 10921                           status	equ	0xFD8
 10922                           
 10923 ;; *************** function _DumpConnection *****************
 10924 ;; Defined at:
 10925 ;;		line 2431 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10926 ;; Parameters:    Size  Location     Type
 10927 ;;  index           1    wreg     unsigned char 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  index           1   13[BANK0 ] unsigned char 
 10930 ;;  i               1   15[BANK0 ] unsigned char 
 10931 ;;  j               1   14[BANK0 ] unsigned char 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : F/0
 10938 ;;		On exit  : E/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;Total ram usage:        5 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    7
 10948 ;; This function calls:
 10949 ;;		_CONSOLE_PrintDec
 10950 ;;		_CONSOLE_PrintHex
 10951 ;;		_CONSOLE_PutString
 10952 ;; This function is called by:
 10953 ;;		_Initialize_Demo
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text51
 10958  010B84                     __ptext51:
 10959                           	opt stack 0
 10960  010B84                     _DumpConnection:
 10961                           	opt stack 22
 10962                           
 10963                           ;incstack = 0
 10964                           ;DumpConnection@index stored from wreg
 10965  010B84  6F6D               	movwf	DumpConnection@index& (0+255),b
 10966                           
 10967                           ;miwi_p2p.c: 2433: uint8_t i, j;
 10968                           ;miwi_p2p.c: 2435: if( index > 5 )
 10969  010B86  0E05               	movlw	5
 10970  010B88  0100               	movlb	0	; () banked
 10971  010B8A  656D               	cpfsgt	DumpConnection@index& (0+255),b
 10972  010B8C  D01C               	goto	l6442
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;miwi_p2p.c: 2436: {
 10976                           ;miwi_p2p.c: 2437: CONSOLE_PutString((char*)"\r\n\r\nMy Address: 0x");
 10977  010B8E  0E4F               	movlw	low STR_2
 10978  010B90  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 10979  010B92  0EFF               	movlw	high STR_2
 10980  010B94  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 10981  010B96  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;miwi_p2p.c: 2438: for(i = 0; i < 8; i++)
 10985  010B9A  6B6F               	clrf	DumpConnection@i& (0+255),b
 10986  010B9C                     l6432:
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;miwi_p2p.c: 2439: {
 10990                           ;miwi_p2p.c: 2440: CONSOLE_PrintHex(myLongAddress[8-1-i]);
 10991  010B9C  516F               	movf	DumpConnection@i& (0+255),w,b
 10992  010B9E  08F5               	sublw	low (_myLongAddress+7)
 10993  010BA0  6ED9               	movwf	fsr2l,c
 10994  010BA2  6ADA               	clrf	fsr2h,c
 10995  010BA4  50DF               	movf	indf2,w,c
 10996  010BA6  EC5D  F092         	call	_CONSOLE_PrintHex
 10997  010BAA  0100               	movlb	0	; () banked
 10998  010BAC  2B6F               	incf	DumpConnection@i& (0+255),f,b
 10999                           
 11000                           ; BSR set to: 0
 11001  010BAE  0E07               	movlw	7
 11002  010BB0  656F               	cpfsgt	DumpConnection@i& (0+255),b
 11003  010BB2  D7F4               	goto	l6432
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;miwi_p2p.c: 2441: }
 11007                           ;miwi_p2p.c: 2447: CONSOLE_PutString((char*)"  Channel: ");
 11008  010BB4  0ED4               	movlw	low STR_3
 11009  010BB6  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11010  010BB8  0EFF               	movlw	high STR_3
 11011  010BBA  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11012  010BBC  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;miwi_p2p.c: 2448: CONSOLE_PrintDec(currentChannel);
 11016  010BC0  51EB               	movf	_currentChannel& (0+255),w,b
 11017  010BC2  EC34  F08F         	call	_CONSOLE_PrintDec
 11018  010BC6                     l6442:
 11019                           
 11020                           ;miwi_p2p.c: 2449: }
 11021                           ;miwi_p2p.c: 2451: if( index < 5 )
 11022  010BC6  0E05               	movlw	5
 11023  010BC8  0100               	movlb	0	; () banked
 11024  010BCA  616D               	cpfslt	DumpConnection@index& (0+255),b
 11025  010BCC  D06C               	goto	l6484
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;miwi_p2p.c: 2452: {
 11029                           ;miwi_p2p.c: 2453: CONSOLE_PutString((char*)"\r\nConnection     PeerLongAddress     Peer
      +                          Info\r\n");
 11030  010BCE  0E97               	movlw	low (STR_9+2)
 11031  010BD0  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11032  010BD2  0EFD               	movlw	high (STR_9+2)
 11033  010BD4  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11034  010BD6  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;miwi_p2p.c: 2454: if( ConnectionTable[index].status.bits.isValid )
 11038  010BDA  516D               	movf	DumpConnection@index& (0+255),w,b
 11039  010BDC  0D0A               	mullw	10
 11040  010BDE  0E58               	movlw	low (_ConnectionTable+8)
 11041  010BE0  24F3               	addwf	prodl,w,c
 11042  010BE2  6ED9               	movwf	fsr2l,c
 11043  010BE4  0E01               	movlw	high (_ConnectionTable+8)
 11044  010BE6  20F4               	addwfc	prodh,w,c
 11045  010BE8  6EDA               	movwf	fsr2h,c
 11046  010BEA  0101               	movlb	1	; () banked
 11047  010BEC  AEDF               	btfss	indf2,7,c
 11048  010BEE  0012               	return	
 11049                           
 11050                           ; BSR set to: 1
 11051                           ;miwi_p2p.c: 2455: {
 11052                           ;miwi_p2p.c: 2456: CONSOLE_PrintHex(index);
 11053  010BF0  0100               	movlb	0	; () banked
 11054  010BF2  516D               	movf	DumpConnection@index& (0+255),w,b
 11055  010BF4  EC5D  F092         	call	_CONSOLE_PrintHex
 11056                           
 11057                           ;miwi_p2p.c: 2457: CONSOLE_PutString((char*)"             ");
 11058  010BF8  0EC6               	movlw	low STR_5
 11059  010BFA  0100               	movlb	0	; () banked
 11060  010BFC  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11061  010BFE  0EFF               	movlw	high STR_5
 11062  010C00  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11063  010C02  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;miwi_p2p.c: 2458: for(i = 0; i < 8; i++)
 11067  010C06  6B6F               	clrf	DumpConnection@i& (0+255),b
 11068  010C08                     l6458:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;miwi_p2p.c: 2459: {
 11072                           ;miwi_p2p.c: 2460: if(i < 8)
 11073  010C08  0E08               	movlw	8
 11074  010C0A  616F               	cpfslt	DumpConnection@i& (0+255),b
 11075  010C0C  D019               	goto	l6462
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;miwi_p2p.c: 2461: {
 11079                           ;miwi_p2p.c: 2462: CONSOLE_PrintHex( ConnectionTable[index].Address[8-1-i] );
 11080  010C0E  516D               	movf	DumpConnection@index& (0+255),w,b
 11081  010C10  0D0A               	mullw	10
 11082  010C12  0E50               	movlw	low _ConnectionTable
 11083  010C14  6F6B               	movwf	??_DumpConnection& (0+255),b
 11084  010C16  0E01               	movlw	high _ConnectionTable
 11085  010C18  6F6C               	movwf	(??_DumpConnection+1)& (0+255),b
 11086  010C1A  0E07               	movlw	7
 11087  010C1C  276B               	addwf	??_DumpConnection& (0+255),f,b
 11088  010C1E  0E00               	movlw	0
 11089  010C20  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11090  010C22  50F3               	movf	prodl,w,c
 11091  010C24  276B               	addwf	??_DumpConnection& (0+255),f,b
 11092  010C26  50F4               	movf	prodh,w,c
 11093  010C28  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11094  010C2A  516F               	movf	DumpConnection@i& (0+255),w,b
 11095  010C2C  5D6B               	subwf	??_DumpConnection& (0+255),w,b
 11096  010C2E  6ED9               	movwf	fsr2l,c
 11097  010C30  516C               	movf	(??_DumpConnection+1)& (0+255),w,b
 11098  010C32  A0D8               	btfss	status,0,c
 11099  010C34  056C               	decf	(??_DumpConnection+1)& (0+255),w,b
 11100  010C36  6EDA               	movwf	fsr2h,c
 11101  010C38  50DF               	movf	indf2,w,c
 11102  010C3A  EC5D  F092         	call	_CONSOLE_PrintHex
 11103                           
 11104                           ;miwi_p2p.c: 2463: }
 11105  010C3E  D006               	goto	l6464
 11106  010C40                     l6462:
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;miwi_p2p.c: 2464: else
 11110                           ;miwi_p2p.c: 2465: {
 11111                           ;miwi_p2p.c: 2466: CONSOLE_PutString((char*)"  ");
 11112  010C40  0ED1               	movlw	low (STR_5+11)
 11113  010C42  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11114  010C44  0EFF               	movlw	high (STR_5+11)
 11115  010C46  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11116  010C48  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11117  010C4C                     l6464:
 11118  010C4C  0100               	movlb	0	; () banked
 11119  010C4E  2B6F               	incf	DumpConnection@i& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122  010C50  0E07               	movlw	7
 11123  010C52  656F               	cpfsgt	DumpConnection@i& (0+255),b
 11124  010C54  D7D9               	goto	l6458
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;miwi_p2p.c: 2467: }
 11128                           ;miwi_p2p.c: 2468: }
 11129                           ;miwi_p2p.c: 2469: CONSOLE_PutString((char*)"    ");
 11130  010C56  0ECF               	movlw	low (STR_5+9)
 11131  010C58  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11132  010C5A  0EFF               	movlw	high (STR_5+9)
 11133  010C5C  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11134  010C5E  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;miwi_p2p.c: 2471: for(i = 0; i < 1; i++)
 11138  010C62  6B6F               	clrf	DumpConnection@i& (0+255),b
 11139  010C64                     l6476:
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;miwi_p2p.c: 2472: {
 11143                           ;miwi_p2p.c: 2473: CONSOLE_PrintHex( ConnectionTable[index].PeerInfo[i] );
 11144  010C64  516D               	movf	DumpConnection@index& (0+255),w,b
 11145  010C66  0D0A               	mullw	10
 11146  010C68  0E50               	movlw	low _ConnectionTable
 11147  010C6A  6F6B               	movwf	??_DumpConnection& (0+255),b
 11148  010C6C  0E01               	movlw	high _ConnectionTable
 11149  010C6E  6F6C               	movwf	(??_DumpConnection+1)& (0+255),b
 11150  010C70  0E09               	movlw	9
 11151  010C72  276B               	addwf	??_DumpConnection& (0+255),f,b
 11152  010C74  0E00               	movlw	0
 11153  010C76  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11154  010C78  50F3               	movf	prodl,w,c
 11155  010C7A  276B               	addwf	??_DumpConnection& (0+255),f,b
 11156  010C7C  50F4               	movf	prodh,w,c
 11157  010C7E  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11158  010C80  516F               	movf	DumpConnection@i& (0+255),w,b
 11159  010C82  256B               	addwf	??_DumpConnection& (0+255),w,b
 11160  010C84  6ED9               	movwf	fsr2l,c
 11161  010C86  0E00               	movlw	0
 11162  010C88  216C               	addwfc	(??_DumpConnection+1)& (0+255),w,b
 11163  010C8A  6EDA               	movwf	fsr2h,c
 11164  010C8C  50DF               	movf	indf2,w,c
 11165  010C8E  EC5D  F092         	call	_CONSOLE_PrintHex
 11166  010C92  0100               	movlb	0	; () banked
 11167  010C94  2B6F               	incf	DumpConnection@i& (0+255),f,b
 11168                           
 11169                           ; BSR set to: 0
 11170  010C96  516F               	movf	DumpConnection@i& (0+255),w,b
 11171  010C98  E0E5               	bz	l6476
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;miwi_p2p.c: 2474: }
 11175                           ;miwi_p2p.c: 2476: CONSOLE_PutString((char*)"\r\n");
 11176  010C9A  0EFC               	movlw	low (STR_25+2)
 11177  010C9C  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11178  010C9E  0EFF               	movlw	high (STR_25+2)
 11179  010CA0  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11180  010CA2  EF7D  F094         	goto	_CONSOLE_PutString	;wreg free
 11181  010CA6                     l6484:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;miwi_p2p.c: 2479: else
 11185                           ;miwi_p2p.c: 2480: {
 11186                           ;miwi_p2p.c: 2481: CONSOLE_PutString((char*)"\r\n\r\nConnection     PeerLongAddress     
      +                          PeerInfo\r\n");
 11187  010CA6  0E95               	movlw	low STR_9
 11188  010CA8  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11189  010CAA  0EFD               	movlw	high STR_9
 11190  010CAC  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11191  010CAE  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;miwi_p2p.c: 2482: for(i = 0; i < 5; i++)
 11195  010CB2  6B6F               	clrf	DumpConnection@i& (0+255),b
 11196  010CB4                     l6492:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;miwi_p2p.c: 2483: {
 11200                           ;miwi_p2p.c: 2485: if( ConnectionTable[i].status.bits.isValid )
 11201  010CB4  516F               	movf	DumpConnection@i& (0+255),w,b
 11202  010CB6  0D0A               	mullw	10
 11203  010CB8  0E58               	movlw	low (_ConnectionTable+8)
 11204  010CBA  24F3               	addwf	prodl,w,c
 11205  010CBC  6ED9               	movwf	fsr2l,c
 11206  010CBE  0E01               	movlw	high (_ConnectionTable+8)
 11207  010CC0  20F4               	addwfc	prodh,w,c
 11208  010CC2  6EDA               	movwf	fsr2h,c
 11209  010CC4  AEDF               	btfss	indf2,7,c
 11210  010CC6  D05B               	goto	l6530
 11211                           
 11212                           ; BSR set to: 1
 11213                           ;miwi_p2p.c: 2486: {
 11214                           ;miwi_p2p.c: 2487: CONSOLE_PrintHex(i);
 11215  010CC8  0100               	movlb	0	; () banked
 11216  010CCA  516F               	movf	DumpConnection@i& (0+255),w,b
 11217  010CCC  EC5D  F092         	call	_CONSOLE_PrintHex
 11218                           
 11219                           ;miwi_p2p.c: 2488: CONSOLE_PutString((char*)"             ");
 11220  010CD0  0EC6               	movlw	low STR_5
 11221  010CD2  0100               	movlb	0	; () banked
 11222  010CD4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11223  010CD6  0EFF               	movlw	high STR_5
 11224  010CD8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11225  010CDA  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;miwi_p2p.c: 2489: for(j = 0; j < 8; j++)
 11229  010CDE  6B6E               	clrf	DumpConnection@j& (0+255),b
 11230  010CE0                     l6504:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;miwi_p2p.c: 2490: {
 11234                           ;miwi_p2p.c: 2491: if( j < 8 )
 11235  010CE0  0E08               	movlw	8
 11236  010CE2  616E               	cpfslt	DumpConnection@j& (0+255),b
 11237  010CE4  D019               	goto	l6508
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;miwi_p2p.c: 2492: {
 11241                           ;miwi_p2p.c: 2493: CONSOLE_PrintHex( ConnectionTable[i].Address[8-1-j] );
 11242  010CE6  516F               	movf	DumpConnection@i& (0+255),w,b
 11243  010CE8  0D0A               	mullw	10
 11244  010CEA  0E50               	movlw	low _ConnectionTable
 11245  010CEC  6F6B               	movwf	??_DumpConnection& (0+255),b
 11246  010CEE  0E01               	movlw	high _ConnectionTable
 11247  010CF0  6F6C               	movwf	(??_DumpConnection+1)& (0+255),b
 11248  010CF2  0E07               	movlw	7
 11249  010CF4  276B               	addwf	??_DumpConnection& (0+255),f,b
 11250  010CF6  0E00               	movlw	0
 11251  010CF8  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11252  010CFA  50F3               	movf	prodl,w,c
 11253  010CFC  276B               	addwf	??_DumpConnection& (0+255),f,b
 11254  010CFE  50F4               	movf	prodh,w,c
 11255  010D00  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11256  010D02  516E               	movf	DumpConnection@j& (0+255),w,b
 11257  010D04  5D6B               	subwf	??_DumpConnection& (0+255),w,b
 11258  010D06  6ED9               	movwf	fsr2l,c
 11259  010D08  516C               	movf	(??_DumpConnection+1)& (0+255),w,b
 11260  010D0A  A0D8               	btfss	status,0,c
 11261  010D0C  056C               	decf	(??_DumpConnection+1)& (0+255),w,b
 11262  010D0E  6EDA               	movwf	fsr2h,c
 11263  010D10  50DF               	movf	indf2,w,c
 11264  010D12  EC5D  F092         	call	_CONSOLE_PrintHex
 11265                           
 11266                           ;miwi_p2p.c: 2494: }
 11267  010D16  D006               	goto	l6510
 11268  010D18                     l6508:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;miwi_p2p.c: 2495: else
 11272                           ;miwi_p2p.c: 2496: {
 11273                           ;miwi_p2p.c: 2497: CONSOLE_PutString((char*)"  ");
 11274  010D18  0ED1               	movlw	low (STR_5+11)
 11275  010D1A  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11276  010D1C  0EFF               	movlw	high (STR_5+11)
 11277  010D1E  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11278  010D20  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11279  010D24                     l6510:
 11280  010D24  0100               	movlb	0	; () banked
 11281  010D26  2B6E               	incf	DumpConnection@j& (0+255),f,b
 11282                           
 11283                           ; BSR set to: 0
 11284  010D28  0E07               	movlw	7
 11285  010D2A  656E               	cpfsgt	DumpConnection@j& (0+255),b
 11286  010D2C  D7D9               	goto	l6504
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;miwi_p2p.c: 2498: }
 11290                           ;miwi_p2p.c: 2499: }
 11291                           ;miwi_p2p.c: 2500: CONSOLE_PutString((char*)"    ");
 11292  010D2E  0ECF               	movlw	low (STR_5+9)
 11293  010D30  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11294  010D32  0EFF               	movlw	high (STR_5+9)
 11295  010D34  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11296  010D36  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;miwi_p2p.c: 2502: for(j = 0; j < 1; j++)
 11300  010D3A  6B6E               	clrf	DumpConnection@j& (0+255),b
 11301  010D3C                     l6522:
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;miwi_p2p.c: 2503: {
 11305                           ;miwi_p2p.c: 2504: CONSOLE_PrintHex( ConnectionTable[i].PeerInfo[j] );
 11306  010D3C  516F               	movf	DumpConnection@i& (0+255),w,b
 11307  010D3E  0D0A               	mullw	10
 11308  010D40  0E50               	movlw	low _ConnectionTable
 11309  010D42  6F6B               	movwf	??_DumpConnection& (0+255),b
 11310  010D44  0E01               	movlw	high _ConnectionTable
 11311  010D46  6F6C               	movwf	(??_DumpConnection+1)& (0+255),b
 11312  010D48  0E09               	movlw	9
 11313  010D4A  276B               	addwf	??_DumpConnection& (0+255),f,b
 11314  010D4C  0E00               	movlw	0
 11315  010D4E  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11316  010D50  50F3               	movf	prodl,w,c
 11317  010D52  276B               	addwf	??_DumpConnection& (0+255),f,b
 11318  010D54  50F4               	movf	prodh,w,c
 11319  010D56  236C               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 11320  010D58  516E               	movf	DumpConnection@j& (0+255),w,b
 11321  010D5A  256B               	addwf	??_DumpConnection& (0+255),w,b
 11322  010D5C  6ED9               	movwf	fsr2l,c
 11323  010D5E  0E00               	movlw	0
 11324  010D60  216C               	addwfc	(??_DumpConnection+1)& (0+255),w,b
 11325  010D62  6EDA               	movwf	fsr2h,c
 11326  010D64  50DF               	movf	indf2,w,c
 11327  010D66  EC5D  F092         	call	_CONSOLE_PrintHex
 11328  010D6A  0100               	movlb	0	; () banked
 11329  010D6C  2B6E               	incf	DumpConnection@j& (0+255),f,b
 11330                           
 11331                           ; BSR set to: 0
 11332  010D6E  516E               	movf	DumpConnection@j& (0+255),w,b
 11333  010D70  E0E5               	bz	l6522
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;miwi_p2p.c: 2505: }
 11337                           ;miwi_p2p.c: 2507: CONSOLE_PutString((char*)"\r\n");
 11338  010D72  0EFC               	movlw	low (STR_25+2)
 11339  010D74  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11340  010D76  0EFF               	movlw	high (STR_25+2)
 11341  010D78  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11342  010D7A  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11343  010D7E                     l6530:
 11344  010D7E  0100               	movlb	0	; () banked
 11345  010D80  2B6F               	incf	DumpConnection@i& (0+255),f,b
 11346                           
 11347                           ; BSR set to: 0
 11348  010D82  0E04               	movlw	4
 11349  010D84  656F               	cpfsgt	DumpConnection@i& (0+255),b
 11350  010D86  D796               	goto	l6492
 11351  010D88  0C04               	retlw	4
 11352  010D8A                     __end_of_DumpConnection:
 11353                           	opt stack 0
 11354                           tblptru	equ	0xFF8
 11355                           tblptrh	equ	0xFF7
 11356                           tblptrl	equ	0xFF6
 11357                           tablat	equ	0xFF5
 11358                           prodh	equ	0xFF4
 11359                           prodl	equ	0xFF3
 11360                           intcon	equ	0xFF2
 11361                           intcon2	equ	0xFF1
 11362                           intcon3	equ	0xFF0
 11363                           postinc0	equ	0xFEE
 11364                           wreg	equ	0xFE8
 11365                           indf1	equ	0xFE7
 11366                           postinc1	equ	0xFE6
 11367                           postdec1	equ	0xFE5
 11368                           fsr1h	equ	0xFE2
 11369                           fsr1l	equ	0xFE1
 11370                           indf2	equ	0xFDF
 11371                           postinc2	equ	0xFDE
 11372                           postdec2	equ	0xFDD
 11373                           fsr2h	equ	0xFDA
 11374                           fsr2l	equ	0xFD9
 11375                           status	equ	0xFD8
 11376                           
 11377 ;; *************** function _CONSOLE_PrintHex *****************
 11378 ;; Defined at:
 11379 ;;		line 184 in file "../src/system_config/pic18exp_pic18f87j11_89xa/console.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  toPrint         1    wreg     unsigned char 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  toPrint         1    2[BANK0 ] unsigned char 
 11384 ;;  PRINT_VAR       1    1[BANK0 ] unsigned char 
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;Total ram usage:        2 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    6
 11401 ;; This function calls:
 11402 ;;		_CONSOLE_Put
 11403 ;; This function is called by:
 11404 ;;		_MiApp_ProtocolInit
 11405 ;;		_DumpConnection
 11406 ;;		_DemoOutput_HandleMessage
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text52
 11411  0124BA                     __ptext52:
 11412                           	opt stack 0
 11413  0124BA                     _CONSOLE_PrintHex:
 11414                           	opt stack 20
 11415                           
 11416                           ;incstack = 0
 11417                           ;CONSOLE_PrintHex@toPrint stored from wreg
 11418  0124BA  0100               	movlb	0	; () banked
 11419  0124BC  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 11420                           
 11421                           ;console.c: 186: uint8_t PRINT_VAR;
 11422                           ;console.c: 187: PRINT_VAR = toPrint;
 11423  0124BE  C062  F061         	movff	CONSOLE_PrintHex@toPrint,CONSOLE_PrintHex@PRINT_VAR
 11424                           
 11425                           ;console.c: 188: toPrint = (toPrint>>4)&0x0F;
 11426  0124C2  3962               	swapf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 11427  0124C4  0B0F               	andlw	15
 11428  0124C6  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;console.c: 189: CONSOLE_Put(CharacterArray[toPrint]);
 11432  0124C8  0EA3               	movlw	low _CharacterArray
 11433  0124CA  2562               	addwf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 11434  0124CC  6ED9               	movwf	fsr2l,c
 11435  0124CE  6ADA               	clrf	fsr2h,c
 11436  0124D0  0E01               	movlw	high _CharacterArray
 11437  0124D2  22DA               	addwfc	fsr2h,f,c
 11438  0124D4  50DF               	movf	indf2,w,c
 11439  0124D6  EC61  F095         	call	_CONSOLE_Put
 11440                           
 11441                           ;console.c: 190: toPrint = (PRINT_VAR)&0x0F;
 11442  0124DA  0100               	movlb	0	; () banked
 11443  0124DC  5161               	movf	CONSOLE_PrintHex@PRINT_VAR& (0+255),w,b
 11444  0124DE  0B0F               	andlw	15
 11445  0124E0  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;console.c: 191: CONSOLE_Put(CharacterArray[toPrint]);
 11449  0124E2  0EA3               	movlw	low _CharacterArray
 11450  0124E4  2562               	addwf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 11451  0124E6  6ED9               	movwf	fsr2l,c
 11452  0124E8  6ADA               	clrf	fsr2h,c
 11453  0124EA  0E01               	movlw	high _CharacterArray
 11454  0124EC  22DA               	addwfc	fsr2h,f,c
 11455  0124EE  50DF               	movf	indf2,w,c
 11456  0124F0  EF61  F095         	goto	_CONSOLE_Put
 11457  0124F4                     __end_of_CONSOLE_PrintHex:
 11458                           	opt stack 0
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           intcon	equ	0xFF2
 11466                           intcon2	equ	0xFF1
 11467                           intcon3	equ	0xFF0
 11468                           postinc0	equ	0xFEE
 11469                           wreg	equ	0xFE8
 11470                           indf1	equ	0xFE7
 11471                           postinc1	equ	0xFE6
 11472                           postdec1	equ	0xFE5
 11473                           fsr1h	equ	0xFE2
 11474                           fsr1l	equ	0xFE1
 11475                           indf2	equ	0xFDF
 11476                           postinc2	equ	0xFDE
 11477                           postdec2	equ	0xFDD
 11478                           fsr2h	equ	0xFDA
 11479                           fsr2l	equ	0xFD9
 11480                           status	equ	0xFD8
 11481                           
 11482 ;; *************** function _DemoOutput_Instruction *****************
 11483 ;; Defined at:
 11484 ;;		line 224 in file "../src/demo_ouput.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;		None
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		None
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;Total ram usage:        0 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    5
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_Process_RxMessage
 11509 ;;		_run_p2p_demo
 11510 ;;		_Initialize_Demo
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text53
 11515  012B12                     __ptext53:
 11516                           	opt stack 0
 11517  012B12                     _DemoOutput_Instruction:
 11518                           	opt stack 22
 11519                           
 11520                           ;incstack = 0
 11521  012B12  0012               	return		;funcret
 11522  012B14                     __end_of_DemoOutput_Instruction:
 11523                           	opt stack 0
 11524                           tblptru	equ	0xFF8
 11525                           tblptrh	equ	0xFF7
 11526                           tblptrl	equ	0xFF6
 11527                           tablat	equ	0xFF5
 11528                           prodh	equ	0xFF4
 11529                           prodl	equ	0xFF3
 11530                           intcon	equ	0xFF2
 11531                           intcon2	equ	0xFF1
 11532                           intcon3	equ	0xFF0
 11533                           postinc0	equ	0xFEE
 11534                           wreg	equ	0xFE8
 11535                           indf1	equ	0xFE7
 11536                           postinc1	equ	0xFE6
 11537                           postdec1	equ	0xFE5
 11538                           fsr1h	equ	0xFE2
 11539                           fsr1l	equ	0xFE1
 11540                           indf2	equ	0xFDF
 11541                           postinc2	equ	0xFDE
 11542                           postdec2	equ	0xFDD
 11543                           fsr2h	equ	0xFDA
 11544                           fsr2l	equ	0xFD9
 11545                           status	equ	0xFD8
 11546                           
 11547 ;; *************** function _DemoOutput_ChannelError *****************
 11548 ;; Defined at:
 11549 ;;		line 285 in file "../src/demo_ouput.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  channel         1    wreg     unsigned char 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  channel         1   11[BANK0 ] unsigned char 
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : F/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11567 ;;Total ram usage:        1 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    7
 11570 ;; This function calls:
 11571 ;;		_CONSOLE_PrintDec
 11572 ;;		_CONSOLE_PutString
 11573 ;; This function is called by:
 11574 ;;		_Initialize_Demo
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           	psect	text54
 11579  012946                     __ptext54:
 11580                           	opt stack 0
 11581  012946                     _DemoOutput_ChannelError:
 11582                           	opt stack 22
 11583                           
 11584                           ;incstack = 0
 11585                           ;DemoOutput_ChannelError@channel stored from wreg
 11586  012946  0100               	movlb	0	; () banked
 11587  012948  6F6B               	movwf	DemoOutput_ChannelError@channel& (0+255),b
 11588                           
 11589                           ;demo_ouput.c: 288: CONSOLE_PutString((char*)"\r\nSelection of channel ");
 11590  01294A  0EE2               	movlw	low STR_37
 11591  01294C  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11592  01294E  0EFE               	movlw	high STR_37
 11593  012950  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11594  012952  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;demo_ouput.c: 289: CONSOLE_PrintDec(channel);
 11598  012956  516B               	movf	DemoOutput_ChannelError@channel& (0+255),w,b
 11599  012958  EC34  F08F         	call	_CONSOLE_PrintDec
 11600                           
 11601                           ;demo_ouput.c: 290: CONSOLE_PutString((char*)" is not supported in current configuration
      +                          .\r\n");
 11602  01295C  0EC7               	movlw	low STR_38
 11603  01295E  0100               	movlb	0	; () banked
 11604  012960  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11605  012962  0EFD               	movlw	high STR_38
 11606  012964  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11607  012966  EF7D  F094         	goto	_CONSOLE_PutString	;wreg free
 11608  01296A                     __end_of_DemoOutput_ChannelError:
 11609                           	opt stack 0
 11610                           tblptru	equ	0xFF8
 11611                           tblptrh	equ	0xFF7
 11612                           tblptrl	equ	0xFF6
 11613                           tablat	equ	0xFF5
 11614                           prodh	equ	0xFF4
 11615                           prodl	equ	0xFF3
 11616                           intcon	equ	0xFF2
 11617                           intcon2	equ	0xFF1
 11618                           intcon3	equ	0xFF0
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           indf1	equ	0xFE7
 11622                           postinc1	equ	0xFE6
 11623                           postdec1	equ	0xFE5
 11624                           fsr1h	equ	0xFE2
 11625                           fsr1l	equ	0xFE1
 11626                           indf2	equ	0xFDF
 11627                           postinc2	equ	0xFDE
 11628                           postdec2	equ	0xFDD
 11629                           fsr2h	equ	0xFDA
 11630                           fsr2l	equ	0xFD9
 11631                           status	equ	0xFD8
 11632                           
 11633 ;; *************** function _DemoOutput_Channel *****************
 11634 ;; Defined at:
 11635 ;;		line 200 in file "../src/demo_ouput.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;  channel         1    wreg     unsigned char 
 11638 ;;  Step            1   52[BANK0 ] unsigned char 
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;  channel         1   53[BANK0 ] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  1    wreg      void 
 11643 ;; Registers used:
 11644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : F/0
 11647 ;;		On exit  : F/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11650 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:        2 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:   10
 11657 ;; This function calls:
 11658 ;;		_CONSOLE_PrintDec
 11659 ;;		_CONSOLE_PutString
 11660 ;;		_LCDDisplay
 11661 ;; This function is called by:
 11662 ;;		_Initialize_Demo
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text55
 11667  012184                     __ptext55:
 11668                           	opt stack 0
 11669  012184                     _DemoOutput_Channel:
 11670                           	opt stack 19
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;incstack = 0
 11674                           ;DemoOutput_Channel@channel stored from wreg
 11675  012184  6F95               	movwf	DemoOutput_Channel@channel& (0+255),b
 11676                           
 11677                           ;demo_ouput.c: 202: if( Step == 0 )
 11678  012186  0100               	movlb	0	; () banked
 11679  012188  5194               	movf	DemoOutput_Channel@Step& (0+255),w,b
 11680  01218A  E114               	bnz	l6586
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;demo_ouput.c: 203: {
 11684                           ;demo_ouput.c: 205: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 11685  01218C  0EF5               	movlw	low STR_26
 11686  01218E  6F8F               	movwf	LCDDisplay@text& (0+255),b
 11687  012190  0EFD               	movlw	high STR_26
 11688  012192  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 11689  012194  C095  F091         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 11690  012198  0E01               	movlw	1
 11691  01219A  6F92               	movwf	LCDDisplay@delay& (0+255),b
 11692  01219C  ECE4  F091         	call	_LCDDisplay	;wreg free
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;demo_ouput.c: 207: CONSOLE_PutString((char*)"\r\nConnecting Peer on Channel ");
 11696  0121A0  0E53               	movlw	low STR_27
 11697  0121A2  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11698  0121A4  0EFE               	movlw	high STR_27
 11699  0121A6  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11700  0121A8  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;demo_ouput.c: 208: CONSOLE_PrintDec(channel);
 11704  0121AC  5195               	movf	DemoOutput_Channel@channel& (0+255),w,b
 11705  0121AE  EC34  F08F         	call	_CONSOLE_PrintDec
 11706  0121B2  D013               	goto	L9
 11707  0121B4                     l6586:
 11708                           
 11709                           ; BSR set to: 0
 11710                           ;demo_ouput.c: 212: else
 11711                           ;demo_ouput.c: 213: {
 11712                           ;demo_ouput.c: 215: LCDDisplay((char *)"Connected Peer  on Channel %d", channel, 1);
 11713  0121B4  0E71               	movlw	low STR_29
 11714  0121B6  6F8F               	movwf	LCDDisplay@text& (0+255),b
 11715  0121B8  0EFE               	movlw	high STR_29
 11716  0121BA  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 11717  0121BC  C095  F091         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 11718  0121C0  0E01               	movlw	1
 11719  0121C2  6F92               	movwf	LCDDisplay@delay& (0+255),b
 11720  0121C4  ECE4  F091         	call	_LCDDisplay	;wreg free
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;demo_ouput.c: 217: CONSOLE_PutString((char*)"\r\nConnected Peer on Channel ");
 11724  0121C8  0E8F               	movlw	low STR_30
 11725  0121CA  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11726  0121CC  0EFE               	movlw	high STR_30
 11727  0121CE  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11728  0121D0  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;demo_ouput.c: 218: CONSOLE_PrintDec(channel);
 11732  0121D4  5195               	movf	DemoOutput_Channel@channel& (0+255),w,b
 11733  0121D6  EC34  F08F         	call	_CONSOLE_PrintDec
 11734  0121DA                     L9:
 11735                           
 11736                           ;demo_ouput.c: 219: CONSOLE_PutString((char*)"\r\n");
 11737  0121DA  0EFC               	movlw	low (STR_25+2)
 11738  0121DC  0100               	movlb	0	; () banked
 11739  0121DE  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11740  0121E0  0EFF               	movlw	high (STR_25+2)
 11741  0121E2  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11742  0121E4  EF7D  F094         	goto	_CONSOLE_PutString	;wreg free
 11743  0121E8                     __end_of_DemoOutput_Channel:
 11744                           	opt stack 0
 11745                           tblptru	equ	0xFF8
 11746                           tblptrh	equ	0xFF7
 11747                           tblptrl	equ	0xFF6
 11748                           tablat	equ	0xFF5
 11749                           prodh	equ	0xFF4
 11750                           prodl	equ	0xFF3
 11751                           intcon	equ	0xFF2
 11752                           intcon2	equ	0xFF1
 11753                           intcon3	equ	0xFF0
 11754                           postinc0	equ	0xFEE
 11755                           wreg	equ	0xFE8
 11756                           indf1	equ	0xFE7
 11757                           postinc1	equ	0xFE6
 11758                           postdec1	equ	0xFE5
 11759                           fsr1h	equ	0xFE2
 11760                           fsr1l	equ	0xFE1
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           fsr2h	equ	0xFDA
 11765                           fsr2l	equ	0xFD9
 11766                           status	equ	0xFD8
 11767                           
 11768 ;; *************** function _CONSOLE_PrintDec *****************
 11769 ;; Defined at:
 11770 ;;		line 214 in file "../src/system_config/pic18exp_pic18f87j11_89xa/console.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  toPrint         1    wreg     unsigned char 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  toPrint         1   10[BANK0 ] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : F/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;Total ram usage:        3 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    6
 11791 ;; This function calls:
 11792 ;;		_CONSOLE_Put
 11793 ;;		___lbdiv
 11794 ;;		___lbmod
 11795 ;; This function is called by:
 11796 ;;		_DumpConnection
 11797 ;;		_DemoOutput_Channel
 11798 ;;		_DemoOutput_ChannelError
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text56
 11803  011E68                     __ptext56:
 11804                           	opt stack 0
 11805  011E68                     _CONSOLE_PrintDec:
 11806                           	opt stack 22
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;incstack = 0
 11810                           ;CONSOLE_PrintDec@toPrint stored from wreg
 11811  011E68  6F6A               	movwf	CONSOLE_PrintDec@toPrint& (0+255),b
 11812                           
 11813                           ;console.c: 216: if( toPrint >= 100 )
 11814  011E6A  0E63               	movlw	99
 11815  011E6C  0100               	movlb	0	; () banked
 11816  011E6E  656A               	cpfsgt	CONSOLE_PrintDec@toPrint& (0+255),b
 11817  011E70  D010               	goto	l6126
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;console.c: 217: CONSOLE_Put(CharacterArray[toPrint/100]);
 11821  011E72  0E64               	movlw	100
 11822  011E74  6F64               	movwf	___lbdiv@divisor& (0+255),b
 11823  011E76  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 11824  011E78  ECB3  F092         	call	___lbdiv
 11825  011E7C  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 11826  011E7E  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 11827  011E80  0EA3               	movlw	low _CharacterArray
 11828  011E82  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 11829  011E84  6ED9               	movwf	fsr2l,c
 11830  011E86  0E01               	movlw	high _CharacterArray
 11831  011E88  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 11832  011E8A  6EDA               	movwf	fsr2h,c
 11833  011E8C  50DF               	movf	indf2,w,c
 11834  011E8E  EC61  F095         	call	_CONSOLE_Put
 11835  011E92                     l6126:
 11836                           
 11837                           ;console.c: 218: if( toPrint >= 10 )
 11838  011E92  0E09               	movlw	9
 11839  011E94  0100               	movlb	0	; () banked
 11840  011E96  656A               	cpfsgt	CONSOLE_PrintDec@toPrint& (0+255),b
 11841  011E98  D014               	goto	l596
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;console.c: 219: CONSOLE_Put(CharacterArray[(toPrint%100)/10]);
 11845  011E9A  0E0A               	movlw	10
 11846  011E9C  6F64               	movwf	___lbdiv@divisor& (0+255),b
 11847  011E9E  0E64               	movlw	100
 11848  011EA0  6F60               	movwf	___lbmod@divisor& (0+255),b
 11849  011EA2  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 11850  011EA4  EC2F  F094         	call	___lbmod
 11851  011EA8  ECB3  F092         	call	___lbdiv
 11852  011EAC  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 11853  011EAE  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 11854  011EB0  0EA3               	movlw	low _CharacterArray
 11855  011EB2  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 11856  011EB4  6ED9               	movwf	fsr2l,c
 11857  011EB6  0E01               	movlw	high _CharacterArray
 11858  011EB8  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 11859  011EBA  6EDA               	movwf	fsr2h,c
 11860  011EBC  50DF               	movf	indf2,w,c
 11861  011EBE  EC61  F095         	call	_CONSOLE_Put
 11862  011EC2                     l596:
 11863                           
 11864                           ;console.c: 220: CONSOLE_Put(CharacterArray[toPrint%10]);
 11865  011EC2  0E0A               	movlw	10
 11866  011EC4  0100               	movlb	0	; () banked
 11867  011EC6  6F60               	movwf	___lbmod@divisor& (0+255),b
 11868  011EC8  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 11869  011ECA  EC2F  F094         	call	___lbmod
 11870  011ECE  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 11871  011ED0  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 11872  011ED2  0EA3               	movlw	low _CharacterArray
 11873  011ED4  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 11874  011ED6  6ED9               	movwf	fsr2l,c
 11875  011ED8  0E01               	movlw	high _CharacterArray
 11876  011EDA  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 11877  011EDC  6EDA               	movwf	fsr2h,c
 11878  011EDE  50DF               	movf	indf2,w,c
 11879  011EE0  EF61  F095         	goto	_CONSOLE_Put
 11880  011EE4                     __end_of_CONSOLE_PrintDec:
 11881                           	opt stack 0
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           intcon	equ	0xFF2
 11889                           intcon2	equ	0xFF1
 11890                           intcon3	equ	0xFF0
 11891                           postinc0	equ	0xFEE
 11892                           wreg	equ	0xFE8
 11893                           indf1	equ	0xFE7
 11894                           postinc1	equ	0xFE6
 11895                           postdec1	equ	0xFE5
 11896                           fsr1h	equ	0xFE2
 11897                           fsr1l	equ	0xFE1
 11898                           indf2	equ	0xFDF
 11899                           postinc2	equ	0xFDE
 11900                           postdec2	equ	0xFDD
 11901                           fsr2h	equ	0xFDA
 11902                           fsr2l	equ	0xFD9
 11903                           status	equ	0xFD8
 11904                           
 11905 ;; *************** function ___lbmod *****************
 11906 ;; Defined at:
 11907 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  dividend        1    wreg     unsigned char 
 11910 ;;  divisor         1    0[BANK0 ] unsigned char 
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;  dividend        1    1[BANK0 ] unsigned char 
 11913 ;;  rem             1    3[BANK0 ] unsigned char 
 11914 ;;  counter         1    2[BANK0 ] unsigned char 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      unsigned char 
 11917 ;; Registers used:
 11918 ;;		wreg, status,2, status,0
 11919 ;; Tracked objects:
 11920 ;;		On entry : F/0
 11921 ;;		On exit  : F/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11924 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;Total ram usage:        4 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    5
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_CONSOLE_PrintDec
 11935 ;;		_run_p2p_demo
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text57
 11940  01285E                     __ptext57:
 11941                           	opt stack 0
 11942  01285E                     ___lbmod:
 11943                           	opt stack 23
 11944                           
 11945                           ;incstack = 0
 11946                           ;___lbmod@dividend stored from wreg
 11947  01285E  6F61               	movwf	___lbmod@dividend& (0+255),b
 11948  012860  0E08               	movlw	8
 11949  012862  0100               	movlb	0	; () banked
 11950  012864  6F62               	movwf	___lbmod@counter& (0+255),b
 11951                           
 11952                           ; BSR set to: 0
 11953  012866  6B63               	clrf	___lbmod@rem& (0+255),b
 11954  012868                     l5962:
 11955                           
 11956                           ; BSR set to: 0
 11957  012868  90D8               	bcf	status,0,c
 11958  01286A  3561               	rlcf	___lbmod@dividend& (0+255),w,b
 11959  01286C  3563               	rlcf	___lbmod@rem& (0+255),w,b
 11960  01286E  6F63               	movwf	___lbmod@rem& (0+255),b
 11961                           
 11962                           ; BSR set to: 0
 11963  012870  90D8               	bcf	status,0,c
 11964  012872  3761               	rlcf	___lbmod@dividend& (0+255),f,b
 11965                           
 11966                           ; BSR set to: 0
 11967  012874  5160               	movf	___lbmod@divisor& (0+255),w,b
 11968  012876  5D63               	subwf	___lbmod@rem& (0+255),w,b
 11969  012878  E302               	bnc	l5970
 11970                           
 11971                           ; BSR set to: 0
 11972  01287A  5160               	movf	___lbmod@divisor& (0+255),w,b
 11973  01287C  5F63               	subwf	___lbmod@rem& (0+255),f,b
 11974  01287E                     l5970:
 11975                           
 11976                           ; BSR set to: 0
 11977  01287E  2F62               	decfsz	___lbmod@counter& (0+255),f,b
 11978  012880  D7F3               	goto	l5962
 11979                           
 11980                           ; BSR set to: 0
 11981  012882  5163               	movf	___lbmod@rem& (0+255),w,b
 11982                           
 11983                           ; BSR set to: 0
 11984  012884  0012               	return		;funcret
 11985  012886                     __end_of___lbmod:
 11986                           	opt stack 0
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodh	equ	0xFF4
 11992                           prodl	equ	0xFF3
 11993                           intcon	equ	0xFF2
 11994                           intcon2	equ	0xFF1
 11995                           intcon3	equ	0xFF0
 11996                           postinc0	equ	0xFEE
 11997                           wreg	equ	0xFE8
 11998                           indf1	equ	0xFE7
 11999                           postinc1	equ	0xFE6
 12000                           postdec1	equ	0xFE5
 12001                           fsr1h	equ	0xFE2
 12002                           fsr1l	equ	0xFE1
 12003                           indf2	equ	0xFDF
 12004                           postinc2	equ	0xFDE
 12005                           postdec2	equ	0xFDD
 12006                           fsr2h	equ	0xFDA
 12007                           fsr2l	equ	0xFD9
 12008                           status	equ	0xFD8
 12009                           
 12010 ;; *************** function ___lbdiv *****************
 12011 ;; Defined at:
 12012 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  dividend        1    wreg     unsigned char 
 12015 ;;  divisor         1    4[BANK0 ] unsigned char 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;  dividend        1    5[BANK0 ] unsigned char 
 12018 ;;  quotient        1    7[BANK0 ] unsigned char 
 12019 ;;  counter         1    6[BANK0 ] unsigned char 
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      unsigned char 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0
 12024 ;; Tracked objects:
 12025 ;;		On entry : F/0
 12026 ;;		On exit  : F/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12033 ;;Total ram usage:        4 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    5
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_CONSOLE_PrintDec
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text58
 12044  012566                     __ptext58:
 12045                           	opt stack 0
 12046  012566                     ___lbdiv:
 12047                           	opt stack 22
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;incstack = 0
 12051                           ;___lbdiv@dividend stored from wreg
 12052  012566  6F65               	movwf	___lbdiv@dividend& (0+255),b
 12053  012568  0100               	movlb	0	; () banked
 12054  01256A  6B67               	clrf	___lbdiv@quotient& (0+255),b
 12055                           
 12056                           ; BSR set to: 0
 12057  01256C  5164               	movf	___lbdiv@divisor& (0+255),w,b
 12058  01256E  E014               	bz	l5954
 12059                           
 12060                           ; BSR set to: 0
 12061  012570  0E01               	movlw	1
 12062  012572  6F66               	movwf	___lbdiv@counter& (0+255),b
 12063  012574  D003               	goto	l5942
 12064  012576                     l5938:
 12065                           
 12066                           ; BSR set to: 0
 12067  012576  90D8               	bcf	status,0,c
 12068  012578  3764               	rlcf	___lbdiv@divisor& (0+255),f,b
 12069                           
 12070                           ; BSR set to: 0
 12071  01257A  2B66               	incf	___lbdiv@counter& (0+255),f,b
 12072  01257C                     l5942:
 12073                           
 12074                           ; BSR set to: 0
 12075  01257C  AF64               	btfss	___lbdiv@divisor& (0+255),7,b
 12076  01257E  D7FB               	goto	l5938
 12077  012580                     l5944:
 12078                           
 12079                           ; BSR set to: 0
 12080  012580  90D8               	bcf	status,0,c
 12081  012582  3767               	rlcf	___lbdiv@quotient& (0+255),f,b
 12082  012584  5164               	movf	___lbdiv@divisor& (0+255),w,b
 12083  012586  5D65               	subwf	___lbdiv@dividend& (0+255),w,b
 12084  012588  E303               	bnc	l5950
 12085                           
 12086                           ; BSR set to: 0
 12087  01258A  5164               	movf	___lbdiv@divisor& (0+255),w,b
 12088  01258C  5F65               	subwf	___lbdiv@dividend& (0+255),f,b
 12089                           
 12090                           ; BSR set to: 0
 12091  01258E  8167               	bsf	___lbdiv@quotient& (0+255),0,b
 12092  012590                     l5950:
 12093                           
 12094                           ; BSR set to: 0
 12095  012590  90D8               	bcf	status,0,c
 12096  012592  3364               	rrcf	___lbdiv@divisor& (0+255),f,b
 12097                           
 12098                           ; BSR set to: 0
 12099  012594  2F66               	decfsz	___lbdiv@counter& (0+255),f,b
 12100  012596  D7F4               	goto	l5944
 12101  012598                     l5954:
 12102                           
 12103                           ; BSR set to: 0
 12104  012598  5167               	movf	___lbdiv@quotient& (0+255),w,b
 12105                           
 12106                           ; BSR set to: 0
 12107  01259A  0012               	return		;funcret
 12108  01259C                     __end_of___lbdiv:
 12109                           	opt stack 0
 12110                           tblptru	equ	0xFF8
 12111                           tblptrh	equ	0xFF7
 12112                           tblptrl	equ	0xFF6
 12113                           tablat	equ	0xFF5
 12114                           prodh	equ	0xFF4
 12115                           prodl	equ	0xFF3
 12116                           intcon	equ	0xFF2
 12117                           intcon2	equ	0xFF1
 12118                           intcon3	equ	0xFF0
 12119                           postinc0	equ	0xFEE
 12120                           wreg	equ	0xFE8
 12121                           indf1	equ	0xFE7
 12122                           postinc1	equ	0xFE6
 12123                           postdec1	equ	0xFE5
 12124                           fsr1h	equ	0xFE2
 12125                           fsr1l	equ	0xFE1
 12126                           indf2	equ	0xFDF
 12127                           postinc2	equ	0xFDE
 12128                           postdec2	equ	0xFDD
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function _DemoOutput_Greeting *****************
 12134 ;; Defined at:
 12135 ;;		line 63 in file "../src/demo_ouput.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;		None
 12138 ;; Auto vars:     Size  Location     Type
 12139 ;;		None
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  1    wreg      void 
 12142 ;; Registers used:
 12143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12144 ;; Tracked objects:
 12145 ;;		On entry : F/0
 12146 ;;		On exit  : F/0
 12147 ;;		Unchanged: 0/0
 12148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;Total ram usage:        0 bytes
 12154 ;; Hardware stack levels used:    1
 12155 ;; Hardware stack levels required when called:   10
 12156 ;; This function calls:
 12157 ;;		_CONSOLE_PutString
 12158 ;;		_LCDDisplay
 12159 ;; This function is called by:
 12160 ;;		_main
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text59
 12165  011D68                     __ptext59:
 12166                           	opt stack 0
 12167  011D68                     _DemoOutput_Greeting:
 12168                           	opt stack 20
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;demo_ouput.c: 106: LCDDisplay((char *)"Simple P2P Demo  MRF89XA Node ", 0, 1);
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;incstack = 0
 12175  011D68  0E15               	movlw	low STR_16
 12176  011D6A  6F8F               	movwf	LCDDisplay@text& (0+255),b
 12177  011D6C  0EFE               	movlw	high STR_16
 12178  011D6E  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 12179  011D70  0E00               	movlw	0
 12180  011D72  6F91               	movwf	LCDDisplay@value& (0+255),b
 12181  011D74  0E01               	movlw	1
 12182  011D76  6F92               	movwf	LCDDisplay@delay& (0+255),b
 12183  011D78  ECE4  F091         	call	_LCDDisplay	;wreg free
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;demo_ouput.c: 120: CONSOLE_PutString((char*)"\r\nStarting Node 1 of Simple Demo for MiW
      +                          i(TM) P2P Stack ...");
 12187  011D7C  0E59               	movlw	low STR_17
 12188  011D7E  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12189  011D80  0EFD               	movlw	high STR_17
 12190  011D82  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12191  011D84  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;demo_ouput.c: 176: CONSOLE_PutString((char*)"\r\n     RF Transceiver: MRF89XA");
 12195  011D88  0E34               	movlw	low STR_18
 12196  011D8A  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12197  011D8C  0EFE               	movlw	high STR_18
 12198  011D8E  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12199  011D90  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;demo_ouput.c: 178: CONSOLE_PutString((char*)"\r\n   Demo Instruction:");
 12203  011D94  0EFA               	movlw	low STR_19
 12204  011D96  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12205  011D98  0EFE               	movlw	high STR_19
 12206  011D9A  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12207  011D9C  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;demo_ouput.c: 179: CONSOLE_PutString((char*)"\r\n                     Power on the boar
      +                          d until LED 1 lights up");
 12211  011DA0  0E9F               	movlw	low STR_20
 12212  011DA2  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12213  011DA4  0EFC               	movlw	high STR_20
 12214  011DA6  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12215  011DA8  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;demo_ouput.c: 180: CONSOLE_PutString((char*)"\r\n                     to indicate conne
      +                          cting with peer. Push");
 12219  011DAC  0EDF               	movlw	low STR_21
 12220  011DAE  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12221  011DB0  0EFC               	movlw	high STR_21
 12222  011DB2  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12223  011DB4  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;demo_ouput.c: 181: CONSOLE_PutString((char*)"\r\n                     Button 1 to broad
      +                          cast message. Push Button");
 12227  011DB8  0E5D               	movlw	low STR_22
 12228  011DBA  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12229  011DBC  0EFC               	movlw	high STR_22
 12230  011DBE  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12231  011DC0  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;demo_ouput.c: 182: CONSOLE_PutString((char*)"\r\n                     2 to unicast encr
      +                          ypted message. LED 2 will");
 12235  011DC4  0E1B               	movlw	low STR_23
 12236  011DC6  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12237  011DC8  0EFC               	movlw	high STR_23
 12238  011DCA  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12239  011DCC  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;demo_ouput.c: 183: CONSOLE_PutString((char*)"\r\n                     be toggled upon r
      +                          eceiving messages. ");
 12243  011DD0  0E1D               	movlw	low STR_24
 12244  011DD2  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12245  011DD4  0EFD               	movlw	high STR_24
 12246  011DD6  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12247  011DD8  EC7D  F094         	call	_CONSOLE_PutString	;wreg free
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;demo_ouput.c: 184: CONSOLE_PutString((char*)"\r\n\r\n");
 12251  011DDC  0EFA               	movlw	low STR_25
 12252  011DDE  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12253  011DE0  0EFF               	movlw	high STR_25
 12254  011DE2  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12255  011DE4  EF7D  F094         	goto	_CONSOLE_PutString	;wreg free
 12256  011DE8                     __end_of_DemoOutput_Greeting:
 12257                           	opt stack 0
 12258                           tblptru	equ	0xFF8
 12259                           tblptrh	equ	0xFF7
 12260                           tblptrl	equ	0xFF6
 12261                           tablat	equ	0xFF5
 12262                           prodh	equ	0xFF4
 12263                           prodl	equ	0xFF3
 12264                           intcon	equ	0xFF2
 12265                           intcon2	equ	0xFF1
 12266                           intcon3	equ	0xFF0
 12267                           postinc0	equ	0xFEE
 12268                           wreg	equ	0xFE8
 12269                           indf1	equ	0xFE7
 12270                           postinc1	equ	0xFE6
 12271                           postdec1	equ	0xFE5
 12272                           fsr1h	equ	0xFE2
 12273                           fsr1l	equ	0xFE1
 12274                           indf2	equ	0xFDF
 12275                           postinc2	equ	0xFDE
 12276                           postdec2	equ	0xFDD
 12277                           fsr2h	equ	0xFDA
 12278                           fsr2l	equ	0xFD9
 12279                           status	equ	0xFD8
 12280                           
 12281 ;; *************** function _LCDDisplay *****************
 12282 ;; Defined at:
 12283 ;;		line 340 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  text            2   47[BANK0 ] PTR unsigned char 
 12286 ;;		 -> STR_43(21), STR_40(16), STR_29(30), STR_26(32), 
 12287 ;;		 -> STR_16(31), 
 12288 ;;  value           1   49[BANK0 ] unsigned char 
 12289 ;;  delay           1   50[BANK0 ] unsigned char 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;  i               1   51[BANK0 ] unsigned char 
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  1    wreg      void 
 12294 ;; Registers used:
 12295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12296 ;; Tracked objects:
 12297 ;;		On entry : F/0
 12298 ;;		On exit  : F/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;Total ram usage:        5 bytes
 12306 ;; Hardware stack levels used:    1
 12307 ;; Hardware stack levels required when called:    9
 12308 ;; This function calls:
 12309 ;;		_DELAY_ms
 12310 ;;		_LCD_Erase
 12311 ;;		_LCD_Update
 12312 ;;		_sprintf
 12313 ;; This function is called by:
 12314 ;;		_DemoOutput_Greeting
 12315 ;;		_DemoOutput_Channel
 12316 ;;		_DemoOutput_UnicastFail
 12317 ;;		_freezer_feature
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text60
 12322  0123C8                     __ptext60:
 12323                           	opt stack 0
 12324  0123C8                     _LCDDisplay:
 12325                           	opt stack 20
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;lcd.c: 343: LCD_Erase();
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;incstack = 0
 12332  0123C8  EC43  F094         	call	_LCD_Erase	;wreg free
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;lcd.c: 344: sprintf((char *)LCDText, (char*)text, value);
 12336  0123CC  0E82               	movlw	low _LCDText
 12337  0123CE  6F6C               	movwf	sprintf@sp& (0+255),b
 12338  0123D0  0E01               	movlw	high _LCDText
 12339  0123D2  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
 12340  0123D4  C08F  F06E         	movff	LCDDisplay@text,sprintf@f
 12341  0123D8  C090  F06F         	movff	LCDDisplay@text+1,sprintf@f+1
 12342  0123DC  C091  F070         	movff	LCDDisplay@value,?_sprintf+4
 12343  0123E0  6B71               	clrf	(?_sprintf+5)& (0+255),b
 12344  0123E2  EC00  F080         	call	_sprintf	;wreg free
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;lcd.c: 345: LCD_Update();
 12348  0123E6  ECF4  F08E         	call	_LCD_Update	;wreg free
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;lcd.c: 348: if( delay )
 12352  0123EA  5192               	movf	LCDDisplay@delay& (0+255),w,b
 12353  0123EC  B4D8               	btfsc	status,2,c
 12354  0123EE  0012               	return	
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;lcd.c: 349: {
 12358                           ;lcd.c: 350: uint8_t i;
 12359                           ;lcd.c: 351: for(i = 0; i < 8; i++)
 12360  0123F0  6B93               	clrf	LCDDisplay@i& (0+255),b
 12361  0123F2                     l5884:
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;lcd.c: 352: {
 12365                           ;lcd.c: 353: DELAY_ms(250);
 12366  0123F2  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
 12367  0123F4  0EFA               	movlw	250
 12368  0123F6  6F60               	movwf	DELAY_ms@ms& (0+255),b
 12369  0123F8  EC2E  F08C         	call	_DELAY_ms	;wreg free
 12370                           
 12371                           ; BSR set to: 0
 12372  0123FC  2B93               	incf	LCDDisplay@i& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 0
 12375  0123FE  0E07               	movlw	7
 12376  012400  6593               	cpfsgt	LCDDisplay@i& (0+255),b
 12377  012402  D7F7               	goto	l5884
 12378  012404  0C07               	retlw	7
 12379  012406                     __end_of_LCDDisplay:
 12380                           	opt stack 0
 12381                           tblptru	equ	0xFF8
 12382                           tblptrh	equ	0xFF7
 12383                           tblptrl	equ	0xFF6
 12384                           tablat	equ	0xFF5
 12385                           prodh	equ	0xFF4
 12386                           prodl	equ	0xFF3
 12387                           intcon	equ	0xFF2
 12388                           intcon2	equ	0xFF1
 12389                           intcon3	equ	0xFF0
 12390                           postinc0	equ	0xFEE
 12391                           wreg	equ	0xFE8
 12392                           indf1	equ	0xFE7
 12393                           postinc1	equ	0xFE6
 12394                           postdec1	equ	0xFE5
 12395                           fsr1h	equ	0xFE2
 12396                           fsr1l	equ	0xFE1
 12397                           indf2	equ	0xFDF
 12398                           postinc2	equ	0xFDE
 12399                           postdec2	equ	0xFDD
 12400                           fsr2h	equ	0xFDA
 12401                           fsr2l	equ	0xFD9
 12402                           status	equ	0xFD8
 12403                           
 12404 ;; *************** function _sprintf *****************
 12405 ;; Defined at:
 12406 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  sp              2   12[BANK0 ] PTR unsigned char 
 12409 ;;		 -> LCDText(33), 
 12410 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 12411 ;;		 -> STR_43(21), STR_42(16), STR_41(22), STR_40(16), 
 12412 ;;		 -> STR_29(30), STR_26(32), STR_16(31), STR_15(17), 
 12413 ;;		 -> STR_14(17), 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;  idx             1   34[BANK0 ] unsigned char 
 12416 ;;  tmpval          4    0        struct .
 12417 ;;  flag            2   45[BANK0 ] unsigned short 
 12418 ;;  width           2   42[BANK0 ] int 
 12419 ;;  val             2   39[BANK0 ] unsigned int 
 12420 ;;  len             2   36[BANK0 ] unsigned int 
 12421 ;;  c               1   44[BANK0 ] char 
 12422 ;;  prec            1   41[BANK0 ] char 
 12423 ;;  ap              1   38[BANK0 ] PTR void [1]
 12424 ;;		 -> ?_sprintf(2), 
 12425 ;;  cp              1   35[BANK0 ] PTR const unsigned char 
 12426 ;;		 -> sprintf@c(1), 
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  2   12[BANK0 ] int 
 12429 ;; Registers used:
 12430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : F/0
 12433 ;;		On exit  : F/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12436 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12437 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12439 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;Total ram usage:       35 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    6
 12443 ;; This function calls:
 12444 ;;		___lwdiv
 12445 ;;		___lwmod
 12446 ;;		___wmul
 12447 ;;		_isdigit
 12448 ;; This function is called by:
 12449 ;;		_LCDTRXCount
 12450 ;;		_LCDDisplay
 12451 ;;		_run_p2p_demo
 12452 ;; This function uses a non-reentrant model
 12453 ;;
 12454                           
 12455                           	psect	text61
 12456  010000                     __ptext61:
 12457                           	opt stack 0
 12458  010000                     _sprintf:
 12459                           	opt stack 22
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;doprnt.c: 494: va_list ap;
 12463                           ;doprnt.c: 499: signed char c;
 12464                           ;doprnt.c: 501: int width;
 12465                           ;doprnt.c: 506: signed char prec;
 12466                           ;doprnt.c: 508: unsigned short flag;
 12467                           ;doprnt.c: 523: union {
 12468                           ;doprnt.c: 524: unsigned long vd;
 12469                           ;doprnt.c: 525: double integ;
 12470                           ;doprnt.c: 526: } tmpval;
 12471                           ;doprnt.c: 528: unsigned int val;
 12472                           ;doprnt.c: 529: unsigned len;
 12473                           ;doprnt.c: 530: const char * cp;
 12474                           ;doprnt.c: 533: *ap = __va_start();
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;incstack = 0
 12478  010000  0E70               	movlw	low (?_sprintf+4)
 12479  010002  6F86               	movwf	sprintf@ap& (0+255),b
 12480                           
 12481                           ;doprnt.c: 536: while(c = *f++) {
 12482  010004  D3A0               	goto	l5558
 12483  010006                     l5236:
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;doprnt.c: 538: if(c != '%')
 12487  010006  0E25               	movlw	37
 12488  010008  198C               	xorwf	sprintf@c& (0+255),w,b
 12489  01000A  E009               	bz	l1059
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;doprnt.c: 540: {
 12493                           ;doprnt.c: 541: ((*sp++ = (c)));
 12494  01000C  C06C  FFD9         	movff	sprintf@sp,fsr2l
 12495  010010  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 12496  010014  C08C  FFDF         	movff	sprintf@c,indf2
 12497                           
 12498                           ; BSR set to: 0
 12499  010018  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 12500  01001A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 12501                           
 12502                           ;doprnt.c: 542: continue;
 12503  01001C  D394               	goto	l5558
 12504  01001E                     l1059:
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;doprnt.c: 543: }
 12508                           ;doprnt.c: 546: width = 0;
 12509  01001E  6B8A               	clrf	sprintf@width& (0+255),b
 12510  010020  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 12511                           
 12512                           ;doprnt.c: 548: flag = 0;
 12513  010022  6B8D               	clrf	sprintf@flag& (0+255),b
 12514  010024  6B8E               	clrf	(sprintf@flag+1)& (0+255),b
 12515  010026  D009               	goto	l5252
 12516  010028                     l5242:
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;doprnt.c: 554: flag |= 0x08;
 12520  010028  878D               	bsf	sprintf@flag& (0+255),3,b
 12521  01002A  D005               	goto	L1
 12522  01002C                     l5244:
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;doprnt.c: 561: flag |= 0x01;
 12526  01002C  818D               	bsf	sprintf@flag& (0+255),0,b
 12527  01002E  D003               	goto	L1
 12528  010030                     l5246:
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;doprnt.c: 574: flag |= 0x800;
 12532  010030  878E               	bsf	(sprintf@flag+1)& (0+255),3,b
 12533  010032  D001               	goto	L1
 12534  010034                     l5248:
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;doprnt.c: 580: flag |= 0x04;
 12538  010034  858D               	bsf	sprintf@flag& (0+255),2,b
 12539  010036                     L1:
 12540                           
 12541                           ;doprnt.c: 581: f++;
 12542  010036  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12543  010038  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12544  01003A                     l5252:
 12545                           
 12546                           ; BSR set to: 0
 12547  01003A  C06E  FFF6         	movff	sprintf@f,tblptrl
 12548  01003E  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12549  010042                     	if	0	;tblptru may be non-zero
 12550  010042                     	endif
 12551  010042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12552  010042  0E00               	movlw	low (__mediumconst shr (0+16))
 12553  010044  6EF8               	movwf	tblptru,c
 12554  010046                     	endif
 12555  010046  0008               	tblrd		*
 12556  010048  50F5               	movf	tablat,w,c
 12557                           
 12558                           ; Switch size 1, requested type "speed"
 12559                           ; Number of cases is 4, Range of values is 32 to 48
 12560                           ; switch strategies available:
 12561                           ; Name         Instructions Cycles
 12562                           ; simple_byte           13     7 (average)
 12563                           ;	Chosen strategy is simple_byte
 12564  01004A  0A20               	xorlw	32	; case 32
 12565  01004C  E0EF               	bz	l5244
 12566  01004E  0A03               	xorlw	3	; case 35
 12567  010050  E0EF               	bz	l5246
 12568  010052  0A0E               	xorlw	14	; case 45
 12569  010054  E0E9               	bz	l5242
 12570  010056  0A1D               	xorlw	29	; case 48
 12571  010058  E0ED               	bz	l5248
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;doprnt.c: 593: if(flag & 0x08)
 12575  01005A  B78D               	btfsc	sprintf@flag& (0+255),3,b
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;doprnt.c: 594: flag &= ~0x04;
 12579  01005C  958D               	bcf	sprintf@flag& (0+255),2,b
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 12583  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
 12584  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12585  010066                     	if	0	;tblptru may be non-zero
 12586  010066                     	endif
 12587  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12588  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 12589  010068  6EF8               	movwf	tblptru,c
 12590  01006A                     	endif
 12591  01006A  0008               	tblrd		*
 12592  01006C  50F5               	movf	tablat,w,c
 12593  01006E  ECF7  F094         	call	_isdigit
 12594  010072  E332               	bnc	l5268
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;doprnt.c: 598: width = 0;
 12598  010074  6B8A               	clrf	sprintf@width& (0+255),b
 12599  010076  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 12600  010078                     l5260:
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;doprnt.c: 600: width *= 10;
 12604  010078  C08A  F060         	movff	sprintf@width,___wmul@multiplier
 12605  01007C  C08B  F061         	movff	sprintf@width+1,___wmul@multiplier+1
 12606  010080  6B63               	clrf	(___wmul@multiplicand+1)& (0+255),b
 12607  010082  0E0A               	movlw	10
 12608  010084  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12609  010086  EC6A  F094         	call	___wmul	;wreg free
 12610  01008A  C060  F08A         	movff	?___wmul,sprintf@width
 12611  01008E  C061  F08B         	movff	?___wmul+1,sprintf@width+1
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;doprnt.c: 601: width += *f++ - '0';
 12615  010092  0ED0               	movlw	208
 12616  010094  6F78               	movwf	??_sprintf& (0+255),b
 12617  010096  6979               	setf	(??_sprintf+1)& (0+255),b
 12618  010098  C06E  FFF6         	movff	sprintf@f,tblptrl
 12619  01009C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12620  0100A0                     	if	0	;tblptru may be non-zero
 12621  0100A0                     	endif
 12622  0100A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12623  0100A0  0E00               	movlw	low (__mediumconst shr (0+16))
 12624  0100A2  6EF8               	movwf	tblptru,c
 12625  0100A4                     	endif
 12626  0100A4  0008               	tblrd		*
 12627  0100A6  50F5               	movf	tablat,w,c
 12628  0100A8  6F7A               	movwf	(??_sprintf+2)& (0+255),b
 12629  0100AA  6B7B               	clrf	(??_sprintf+3)& (0+255),b
 12630  0100AC  5178               	movf	??_sprintf& (0+255),w,b
 12631  0100AE  277A               	addwf	(??_sprintf+2)& (0+255),f,b
 12632  0100B0  5179               	movf	(??_sprintf+1)& (0+255),w,b
 12633  0100B2  237B               	addwfc	(??_sprintf+3)& (0+255),f,b
 12634  0100B4  517A               	movf	(??_sprintf+2)& (0+255),w,b
 12635  0100B6  278A               	addwf	sprintf@width& (0+255),f,b
 12636  0100B8  517B               	movf	(??_sprintf+3)& (0+255),w,b
 12637  0100BA  238B               	addwfc	(sprintf@width+1)& (0+255),f,b
 12638                           
 12639                           ; BSR set to: 0
 12640  0100BC  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12641  0100BE  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 12645  0100C0  C06E  FFF6         	movff	sprintf@f,tblptrl
 12646  0100C4  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12647  0100C8                     	if	0	;tblptru may be non-zero
 12648  0100C8                     	endif
 12649  0100C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12650  0100C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12651  0100CA  6EF8               	movwf	tblptru,c
 12652  0100CC                     	endif
 12653  0100CC  0008               	tblrd		*
 12654  0100CE  50F5               	movf	tablat,w,c
 12655  0100D0  ECF7  F094         	call	_isdigit
 12656  0100D4  E316               	bnc	l5276
 12657  0100D6  D7D0               	goto	l5260
 12658  0100D8                     l5268:
 12659                           
 12660                           ; BSR set to: 0
 12661  0100D8  C06E  FFF6         	movff	sprintf@f,tblptrl
 12662  0100DC  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12663  0100E0                     	if	0	;tblptru may be non-zero
 12664  0100E0                     	endif
 12665  0100E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12666  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12667  0100E2  6EF8               	movwf	tblptru,c
 12668  0100E4                     	endif
 12669  0100E4  0008               	tblrd		*
 12670  0100E6  50F5               	movf	tablat,w,c
 12671  0100E8  0A2A               	xorlw	42
 12672  0100EA  E10B               	bnz	l5276
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 12676  0100EC  5186               	movf	sprintf@ap& (0+255),w,b
 12677  0100EE  6ED9               	movwf	fsr2l,c
 12678  0100F0  6ADA               	clrf	fsr2h,c
 12679  0100F2  CFDE F08A          	movff	postinc2,sprintf@width
 12680  0100F6  CFDD F08B          	movff	postdec2,sprintf@width+1
 12681                           
 12682                           ; BSR set to: 0
 12683  0100FA  0E02               	movlw	2
 12684  0100FC  2786               	addwf	sprintf@ap& (0+255),f,b
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;doprnt.c: 606: f++;
 12688  0100FE  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12689  010100  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12690  010102                     l5276:
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;doprnt.c: 608: }
 12694                           ;doprnt.c: 611: if(*f == '.') {
 12695  010102  C06E  FFF6         	movff	sprintf@f,tblptrl
 12696  010106  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12697  01010A                     	if	0	;tblptru may be non-zero
 12698  01010A                     	endif
 12699  01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12700  01010A  0E00               	movlw	low (__mediumconst shr (0+16))
 12701  01010C  6EF8               	movwf	tblptru,c
 12702  01010E                     	endif
 12703  01010E  0008               	tblrd		*
 12704  010110  50F5               	movf	tablat,w,c
 12705  010112  0A2E               	xorlw	46
 12706  010114  E136               	bnz	l1075
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;doprnt.c: 612: flag |= 0x4000;
 12710  010116  8D8E               	bsf	(sprintf@flag+1)& (0+255),6,b
 12711                           
 12712                           ;doprnt.c: 613: f++;
 12713  010118  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12714  01011A  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;doprnt.c: 615: if(*f == '*') {
 12718  01011C  C06E  FFF6         	movff	sprintf@f,tblptrl
 12719  010120  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12720  010124                     	if	0	;tblptru may be non-zero
 12721  010124                     	endif
 12722  010124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12723  010124  0E00               	movlw	low (__mediumconst shr (0+16))
 12724  010126  6EF8               	movwf	tblptru,c
 12725  010128                     	endif
 12726  010128  0008               	tblrd		*
 12727  01012A  50F5               	movf	tablat,w,c
 12728  01012C  0A2A               	xorlw	42
 12729  01012E  E10A               	bnz	l1076
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 12733  010130  5186               	movf	sprintf@ap& (0+255),w,b
 12734  010132  6ED9               	movwf	fsr2l,c
 12735  010134  6ADA               	clrf	fsr2h,c
 12736  010136  50DF               	movf	indf2,w,c
 12737  010138  6F89               	movwf	sprintf@prec& (0+255),b
 12738                           
 12739                           ; BSR set to: 0
 12740  01013A  0E02               	movlw	2
 12741  01013C  2786               	addwf	sprintf@ap& (0+255),f,b
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;doprnt.c: 617: f++;
 12745  01013E  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12746  010140  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12747                           
 12748                           ;doprnt.c: 618: } else
 12749  010142  D08E               	goto	l5344
 12750  010144                     l1076:
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;doprnt.c: 620: {
 12754                           ;doprnt.c: 621: prec = 0;
 12755  010144  6B89               	clrf	sprintf@prec& (0+255),b
 12756                           
 12757                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 12758  010146  D011               	goto	l5292
 12759  010148                     l5288:
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12763  010148  C06E  FFF6         	movff	sprintf@f,tblptrl
 12764  01014C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12765  010150                     	if	0	;tblptru may be non-zero
 12766  010150                     	endif
 12767  010150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12768  010150  0E00               	movlw	low (__mediumconst shr (0+16))
 12769  010152  6EF8               	movwf	tblptru,c
 12770  010154                     	endif
 12771  010154  0008               	tblrd		*
 12772  010156  CFF5 F078          	movff	tablat,??_sprintf
 12773  01015A  5189               	movf	sprintf@prec& (0+255),w,b
 12774  01015C  0D0A               	mullw	10
 12775  01015E  50F3               	movf	prodl,w,c
 12776  010160  2578               	addwf	??_sprintf& (0+255),w,b
 12777  010162  0FD0               	addlw	208
 12778  010164  6F89               	movwf	sprintf@prec& (0+255),b
 12779                           
 12780                           ; BSR set to: 0
 12781  010166  4B6E               	infsnz	sprintf@f& (0+255),f,b
 12782  010168  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 12783  01016A                     l5292:
 12784                           
 12785                           ; BSR set to: 0
 12786  01016A  C06E  FFF6         	movff	sprintf@f,tblptrl
 12787  01016E  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 12788  010172                     	if	0	;tblptru may be non-zero
 12789  010172                     	endif
 12790  010172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12791  010172  0E00               	movlw	low (__mediumconst shr (0+16))
 12792  010174  6EF8               	movwf	tblptru,c
 12793  010176                     	endif
 12794  010176  0008               	tblrd		*
 12795  010178  50F5               	movf	tablat,w,c
 12796  01017A  ECF7  F094         	call	_isdigit
 12797  01017E  E370               	bnc	l5344
 12798  010180  D7E3               	goto	l5288
 12799  010182                     l1075:
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;doprnt.c: 626: prec = 0;
 12803  010182  6B89               	clrf	sprintf@prec& (0+255),b
 12804  010184  D06D               	goto	l5344
 12805  010186                     l5294:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;doprnt.c: 691: flag |= 0x40;
 12809  010186  8D8D               	bsf	sprintf@flag& (0+255),6,b
 12810                           
 12811                           ;doprnt.c: 693: break;
 12812  010188  D08A               	goto	l5346
 12813  01018A                     l5296:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;doprnt.c: 714: flag |= 0x20;
 12817  01018A  8B8D               	bsf	sprintf@flag& (0+255),5,b
 12818  01018C                     l1090:
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;doprnt.c: 721: flag |= 0x80;
 12822  01018C  8F8D               	bsf	sprintf@flag& (0+255),7,b
 12823                           
 12824                           ;doprnt.c: 723: break;
 12825  01018E  D087               	goto	l5346
 12826  010190                     l5298:
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;doprnt.c: 753: if(prec && prec < len)
 12830  010190  5189               	movf	sprintf@prec& (0+255),w,b
 12831  010192  E00F               	bz	l5304
 12832                           
 12833                           ; BSR set to: 0
 12834  010194  C089  F078         	movff	sprintf@prec,??_sprintf
 12835  010198  6B79               	clrf	(??_sprintf+1)& (0+255),b
 12836  01019A  BF78               	btfsc	??_sprintf& (0+255),7,b
 12837  01019C  0779               	decf	(??_sprintf+1)& (0+255),f,b
 12838  01019E  5184               	movf	sprintf@len& (0+255),w,b
 12839  0101A0  5D78               	subwf	??_sprintf& (0+255),w,b
 12840  0101A2  5185               	movf	(sprintf@len+1)& (0+255),w,b
 12841  0101A4  5979               	subwfb	(??_sprintf+1)& (0+255),w,b
 12842  0101A6  E205               	bc	l5304
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;doprnt.c: 754: len = prec;
 12846  0101A8  5189               	movf	sprintf@prec& (0+255),w,b
 12847  0101AA  6F84               	movwf	sprintf@len& (0+255),b
 12848  0101AC  6B85               	clrf	(sprintf@len+1)& (0+255),b
 12849  0101AE  BF84               	btfsc	sprintf@len& (0+255),7,b
 12850  0101B0  0785               	decf	(sprintf@len+1)& (0+255),f,b
 12851  0101B2                     l5304:
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;doprnt.c: 757: if(width > len)
 12855  0101B2  518A               	movf	sprintf@width& (0+255),w,b
 12856  0101B4  5D84               	subwf	sprintf@len& (0+255),w,b
 12857  0101B6  518B               	movf	(sprintf@width+1)& (0+255),w,b
 12858  0101B8  5985               	subwfb	(sprintf@len+1)& (0+255),w,b
 12859  0101BA  E205               	bc	l1093
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;doprnt.c: 758: width -= len;
 12863  0101BC  5184               	movf	sprintf@len& (0+255),w,b
 12864  0101BE  5F8A               	subwf	sprintf@width& (0+255),f,b
 12865  0101C0  5185               	movf	(sprintf@len+1)& (0+255),w,b
 12866  0101C2  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 12867  0101C4  D002               	goto	l1094
 12868  0101C6                     l1093:
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;doprnt.c: 759: else
 12872                           ;doprnt.c: 760: width = 0;
 12873  0101C6  6B8A               	clrf	sprintf@width& (0+255),b
 12874  0101C8  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 12875  0101CA                     l1094:
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;doprnt.c: 762: if(!(flag & 0x08))
 12879  0101CA  B78D               	btfsc	sprintf@flag& (0+255),3,b
 12880  0101CC  D01D               	goto	l5322
 12881  0101CE  D008               	goto	l5314
 12882  0101D0                     l5310:
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;doprnt.c: 765: ((*sp++ = (' ')));
 12886  0101D0  C06C  FFD9         	movff	sprintf@sp,fsr2l
 12887  0101D4  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 12888  0101D8  0E20               	movlw	32
 12889  0101DA  6EDF               	movwf	indf2,c
 12890                           
 12891                           ; BSR set to: 0
 12892  0101DC  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 12893  0101DE  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 12894  0101E0                     l5314:
 12895                           
 12896                           ; BSR set to: 0
 12897  0101E0  078A               	decf	sprintf@width& (0+255),f,b
 12898  0101E2  A0D8               	btfss	status,0,c
 12899  0101E4  078B               	decf	(sprintf@width+1)& (0+255),f,b
 12900  0101E6  298A               	incf	sprintf@width& (0+255),w,b
 12901  0101E8  E1F3               	bnz	l5310
 12902  0101EA  298B               	incf	(sprintf@width+1)& (0+255),w,b
 12903  0101EC  E00D               	bz	l5322
 12904  0101EE  D7F0               	goto	l5310
 12905  0101F0                     l5316:
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 12909  0101F0  5183               	movf	sprintf@cp& (0+255),w,b
 12910  0101F2  6ED9               	movwf	fsr2l,c
 12911  0101F4  6ADA               	clrf	fsr2h,c
 12912  0101F6  C06C  FFE1         	movff	sprintf@sp,fsr1l
 12913  0101FA  C06D  FFE2         	movff	sprintf@sp+1,fsr1h
 12914  0101FE  CFDF FFE7          	movff	indf2,indf1
 12915                           
 12916                           ; BSR set to: 0
 12917  010202  2B83               	incf	sprintf@cp& (0+255),f,b
 12918                           
 12919                           ; BSR set to: 0
 12920  010204  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 12921  010206  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 12922  010208                     l5322:
 12923                           
 12924                           ; BSR set to: 0
 12925  010208  0784               	decf	sprintf@len& (0+255),f,b
 12926  01020A  A0D8               	btfss	status,0,c
 12927  01020C  0785               	decf	(sprintf@len+1)& (0+255),f,b
 12928  01020E  2984               	incf	sprintf@len& (0+255),w,b
 12929  010210  E1EF               	bnz	l5316
 12930  010212  2985               	incf	(sprintf@len+1)& (0+255),w,b
 12931  010214  E1ED               	bnz	l5316
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;doprnt.c: 770: if(flag & 0x08)
 12935  010216  A78D               	btfss	sprintf@flag& (0+255),3,b
 12936  010218  D296               	goto	l5558
 12937  01021A  D008               	goto	l5330
 12938  01021C                     l5326:
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;doprnt.c: 772: ((*sp++ = (' ')));
 12942  01021C  C06C  FFD9         	movff	sprintf@sp,fsr2l
 12943  010220  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 12944  010224  0E20               	movlw	32
 12945  010226  6EDF               	movwf	indf2,c
 12946                           
 12947                           ; BSR set to: 0
 12948  010228  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 12949  01022A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 12950  01022C                     l5330:
 12951                           
 12952                           ; BSR set to: 0
 12953  01022C  078A               	decf	sprintf@width& (0+255),f,b
 12954  01022E  A0D8               	btfss	status,0,c
 12955  010230  078B               	decf	(sprintf@width+1)& (0+255),f,b
 12956  010232  298A               	incf	sprintf@width& (0+255),w,b
 12957  010234  E1F3               	bnz	l5326
 12958  010236  298B               	incf	(sprintf@width+1)& (0+255),w,b
 12959  010238  E101 D285          	bz	l5558
 12960  01023C  D7EF               	goto	l5326
 12961  01023E                     l5332:
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 12965  01023E  5186               	movf	sprintf@ap& (0+255),w,b
 12966  010240  6ED9               	movwf	fsr2l,c
 12967  010242  6ADA               	clrf	fsr2h,c
 12968  010244  50DF               	movf	indf2,w,c
 12969  010246  6F8C               	movwf	sprintf@c& (0+255),b
 12970                           
 12971                           ; BSR set to: 0
 12972  010248  0E02               	movlw	2
 12973  01024A  2786               	addwf	sprintf@ap& (0+255),f,b
 12974  01024C                     l5336:
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;doprnt.c: 805: cp = (char *)&c;
 12978  01024C  0E8C               	movlw	low sprintf@c
 12979  01024E  6F83               	movwf	sprintf@cp& (0+255),b
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;doprnt.c: 806: len = 1;
 12983  010250  0E00               	movlw	0
 12984  010252  6F85               	movwf	(sprintf@len+1)& (0+255),b
 12985  010254  0E01               	movlw	1
 12986  010256  6F84               	movwf	sprintf@len& (0+255),b
 12987                           
 12988                           ;doprnt.c: 807: goto dostring;
 12989  010258  D79B               	goto	l5298
 12990  01025A                     l5340:
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;doprnt.c: 818: flag |= 0xC0;
 12994  01025A  0EC0               	movlw	192
 12995  01025C  138D               	iorwf	sprintf@flag& (0+255),f,b
 12996                           
 12997                           ;doprnt.c: 819: break;
 12998  01025E  D01F               	goto	l5346
 12999  010260                     l5344:
 13000                           
 13001                           ; BSR set to: 0
 13002  010260  C06E  FFF6         	movff	sprintf@f,tblptrl
 13003  010264  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 13004  010268  4B6E               	infsnz	sprintf@f& (0+255),f,b
 13005  01026A  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 13006  01026C                     	if	0	;tblptru may be non-zero
 13007  01026C                     	endif
 13008  01026C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13009  01026C  0E00               	movlw	low (__mediumconst shr (0+16))
 13010  01026E  6EF8               	movwf	tblptru,c
 13011  010270                     	endif
 13012  010270  0008               	tblrd		*
 13013  010272  CFF5 F08C          	movff	tablat,sprintf@c
 13014  010276  518C               	movf	sprintf@c& (0+255),w,b
 13015                           
 13016                           ; Switch size 1, requested type "speed"
 13017                           ; Number of cases is 8, Range of values is 0 to 120
 13018                           ; switch strategies available:
 13019                           ; Name         Instructions Cycles
 13020                           ; simple_byte           25    13 (average)
 13021                           ;	Chosen strategy is simple_byte
 13022  010278  E101 D273          	bz	l5560
 13023  01027C  0A58               	xorlw	88	; case 88
 13024  01027E  E085               	bz	l5296
 13025  010280  0A3B               	xorlw	59	; case 99
 13026  010282  E0DD               	bz	l5332
 13027  010284  0A07               	xorlw	7	; case 100
 13028  010286  E00B               	bz	l5346
 13029  010288  0A0D               	xorlw	13	; case 105
 13030  01028A  E009               	bz	l5346
 13031  01028C  0A06               	xorlw	6	; case 111
 13032  01028E  E101 D77A          	bz	l5294
 13033  010292  0A1A               	xorlw	26	; case 117
 13034  010294  E0E2               	bz	l5340
 13035  010296  0A0D               	xorlw	13	; case 120
 13036  010298  E101 D778          	bz	l1090
 13037  01029C  D7D7               	goto	l5336
 13038  01029E                     l5346:
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 13042  01029E  C08D  F078         	movff	sprintf@flag,??_sprintf
 13043  0102A2  0EC0               	movlw	192
 13044  0102A4  1778               	andwf	??_sprintf& (0+255),f,b
 13045  0102A6  E112               	bnz	l5358
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;doprnt.c: 1253: {
 13049                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 13050  0102A8  5186               	movf	sprintf@ap& (0+255),w,b
 13051  0102AA  6ED9               	movwf	fsr2l,c
 13052  0102AC  6ADA               	clrf	fsr2h,c
 13053  0102AE  CFDE F087          	movff	postinc2,sprintf@val
 13054  0102B2  CFDD F088          	movff	postdec2,sprintf@val+1
 13055                           
 13056                           ; BSR set to: 0
 13057  0102B6  0E02               	movlw	2
 13058  0102B8  2786               	addwf	sprintf@ap& (0+255),f,b
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;doprnt.c: 1261: if((int)val < 0) {
 13062  0102BA  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
 13063  0102BC  D010               	goto	l5362
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;doprnt.c: 1262: flag |= 0x03;
 13067  0102BE  0E03               	movlw	3
 13068  0102C0  138D               	iorwf	sprintf@flag& (0+255),f,b
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;doprnt.c: 1263: val = -val;
 13072  0102C2  6D87               	negf	sprintf@val& (0+255),b
 13073  0102C4  1F88               	comf	(sprintf@val+1)& (0+255),f,b
 13074  0102C6  B0D8               	btfsc	status,0,c
 13075  0102C8  2B88               	incf	(sprintf@val+1)& (0+255),f,b
 13076  0102CA  D009               	goto	l5362
 13077  0102CC                     l5358:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;doprnt.c: 1268: else
 13081                           ;doprnt.c: 1273: {
 13082                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13083  0102CC  5186               	movf	sprintf@ap& (0+255),w,b
 13084  0102CE  6ED9               	movwf	fsr2l,c
 13085  0102D0  6ADA               	clrf	fsr2h,c
 13086  0102D2  CFDE F087          	movff	postinc2,sprintf@val
 13087  0102D6  CFDD F088          	movff	postdec2,sprintf@val+1
 13088                           
 13089                           ; BSR set to: 0
 13090  0102DA  0E02               	movlw	2
 13091  0102DC  2786               	addwf	sprintf@ap& (0+255),f,b
 13092  0102DE                     l5362:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;doprnt.c: 1287: }
 13096                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13097  0102DE  5189               	movf	sprintf@prec& (0+255),w,b
 13098  0102E0  E150               	bnz	l5412
 13099                           
 13100                           ; BSR set to: 0
 13101  0102E2  5187               	movf	sprintf@val& (0+255),w,b
 13102  0102E4  1188               	iorwf	(sprintf@val+1)& (0+255),w,b
 13103  0102E6  E14D               	bnz	l5412
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;doprnt.c: 1291: prec++;
 13107  0102E8  2B89               	incf	sprintf@prec& (0+255),f,b
 13108  0102EA  D04B               	goto	l5412
 13109  0102EC                     l5368:
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;doprnt.c: 1302: case 0xC0:
 13113                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13114  0102EC  0E01               	movlw	1
 13115  0102EE  6F8C               	movwf	sprintf@c& (0+255),b
 13116  0102F0                     l5370:
 13117                           
 13118                           ; BSR set to: 0
 13119  0102F0  0E05               	movlw	5
 13120  0102F2  198C               	xorwf	sprintf@c& (0+255),w,b
 13121  0102F4  E04F               	bz	l5414
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;doprnt.c: 1306: if(val < dpowers[c])
 13125  0102F6  518C               	movf	sprintf@c& (0+255),w,b
 13126  0102F8  0D02               	mullw	2
 13127  0102FA  0E09               	movlw	low _dpowers
 13128  0102FC  24F3               	addwf	prodl,w,c
 13129  0102FE  6EF6               	movwf	tblptrl,c
 13130  010300  0EFC               	movlw	high _dpowers
 13131  010302  20F4               	addwfc	prodh,w,c
 13132  010304  6EF7               	movwf	tblptrh,c
 13133  010306                     	if	1	;There are 3 active tblptr bytes
 13134  010306  6AF8               	clrf	tblptru,c
 13135  010308  0E00               	movlw	low (__mediumconst shr (0+16))
 13136  01030A  22F8               	addwfc	tblptru,f,c
 13137  01030C                     	endif
 13138  01030C  0009               	tblrd		*+
 13139  01030E  50F5               	movf	tablat,w,c
 13140  010310  5D87               	subwf	sprintf@val& (0+255),w,b
 13141  010312  0009               	tblrd		*+
 13142  010314  50F5               	movf	tablat,w,c
 13143  010316  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 13144  010318  E33D               	bnc	l5414
 13145                           
 13146                           ; BSR set to: 0
 13147  01031A  2B8C               	incf	sprintf@c& (0+255),f,b
 13148  01031C  D7E9               	goto	l5370
 13149  01031E                     l5382:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 13153  01031E  0E01               	movlw	1
 13154  010320  6F8C               	movwf	sprintf@c& (0+255),b
 13155  010322                     l5384:
 13156                           
 13157                           ; BSR set to: 0
 13158  010322  0E04               	movlw	4
 13159  010324  198C               	xorwf	sprintf@c& (0+255),w,b
 13160  010326  E036               	bz	l5414
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;doprnt.c: 1317: if(val < hexpowers[c])
 13164  010328  518C               	movf	sprintf@c& (0+255),w,b
 13165  01032A  0D02               	mullw	2
 13166  01032C  0E13               	movlw	low _hexpowers
 13167  01032E  24F3               	addwf	prodl,w,c
 13168  010330  6EF6               	movwf	tblptrl,c
 13169  010332  0EFC               	movlw	high _hexpowers
 13170  010334  20F4               	addwfc	prodh,w,c
 13171  010336  6EF7               	movwf	tblptrh,c
 13172  010338                     	if	1	;There are 3 active tblptr bytes
 13173  010338  6AF8               	clrf	tblptru,c
 13174  01033A  0E00               	movlw	low (__mediumconst shr (0+16))
 13175  01033C  22F8               	addwfc	tblptru,f,c
 13176  01033E                     	endif
 13177  01033E  0009               	tblrd		*+
 13178  010340  50F5               	movf	tablat,w,c
 13179  010342  5D87               	subwf	sprintf@val& (0+255),w,b
 13180  010344  0009               	tblrd		*+
 13181  010346  50F5               	movf	tablat,w,c
 13182  010348  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 13183  01034A  E324               	bnc	l5414
 13184                           
 13185                           ; BSR set to: 0
 13186  01034C  2B8C               	incf	sprintf@c& (0+255),f,b
 13187  01034E  D7E9               	goto	l5384
 13188  010350                     l5396:
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 13192  010350  0E01               	movlw	1
 13193  010352  6F8C               	movwf	sprintf@c& (0+255),b
 13194  010354                     l5398:
 13195                           
 13196                           ; BSR set to: 0
 13197  010354  0E06               	movlw	6
 13198  010356  198C               	xorwf	sprintf@c& (0+255),w,b
 13199  010358  E01D               	bz	l5414
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;doprnt.c: 1329: if(val < octpowers[c])
 13203  01035A  518C               	movf	sprintf@c& (0+255),w,b
 13204  01035C  0D02               	mullw	2
 13205  01035E  0EFD               	movlw	low _octpowers
 13206  010360  24F3               	addwf	prodl,w,c
 13207  010362  6EF6               	movwf	tblptrl,c
 13208  010364  0EFB               	movlw	high _octpowers
 13209  010366  20F4               	addwfc	prodh,w,c
 13210  010368  6EF7               	movwf	tblptrh,c
 13211  01036A                     	if	1	;There are 3 active tblptr bytes
 13212  01036A  6AF8               	clrf	tblptru,c
 13213  01036C  0E00               	movlw	low (__mediumconst shr (0+16))
 13214  01036E  22F8               	addwfc	tblptru,f,c
 13215  010370                     	endif
 13216  010370  0009               	tblrd		*+
 13217  010372  50F5               	movf	tablat,w,c
 13218  010374  5D87               	subwf	sprintf@val& (0+255),w,b
 13219  010376  0009               	tblrd		*+
 13220  010378  50F5               	movf	tablat,w,c
 13221  01037A  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 13222  01037C  E30B               	bnc	l5414
 13223                           
 13224                           ; BSR set to: 0
 13225  01037E  2B8C               	incf	sprintf@c& (0+255),f,b
 13226  010380  D7E9               	goto	l5398
 13227  010382                     l5412:
 13228                           
 13229                           ; BSR set to: 0
 13230  010382  518D               	movf	sprintf@flag& (0+255),w,b
 13231  010384  0BC0               	andlw	192
 13232                           
 13233                           ; Switch size 1, requested type "speed"
 13234                           ; Number of cases is 4, Range of values is 0 to 192
 13235                           ; switch strategies available:
 13236                           ; Name         Instructions Cycles
 13237                           ; simple_byte           13     7 (average)
 13238                           ;	Chosen strategy is simple_byte
 13239  010386  E0B2               	bz	l5368
 13240  010388  0A40               	xorlw	64	; case 64
 13241  01038A  E0E2               	bz	l5396
 13242  01038C  0AC0               	xorlw	192	; case 128
 13243  01038E  E0C7               	bz	l5382
 13244  010390  0A40               	xorlw	64	; case 192
 13245  010392  E0AC               	bz	l5368
 13246  010394                     l5414:
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;doprnt.c: 1339: if(c < prec)
 13250  010394  518C               	movf	sprintf@c& (0+255),w,b
 13251  010396  0A80               	xorlw	128
 13252  010398  6F78               	movwf	??_sprintf& (0+255),b
 13253  01039A  5189               	movf	sprintf@prec& (0+255),w,b
 13254  01039C  0A80               	xorlw	128
 13255  01039E  5D78               	subwf	??_sprintf& (0+255),w,b
 13256  0103A0  E203               	bc	l5418
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;doprnt.c: 1340: c = prec;
 13260  0103A2  C089  F08C         	movff	sprintf@prec,sprintf@c
 13261  0103A6  D009               	goto	l5422
 13262  0103A8                     l5418:
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;doprnt.c: 1341: else if(prec < c)
 13266  0103A8  5189               	movf	sprintf@prec& (0+255),w,b
 13267  0103AA  0A80               	xorlw	128
 13268  0103AC  6F78               	movwf	??_sprintf& (0+255),b
 13269  0103AE  518C               	movf	sprintf@c& (0+255),w,b
 13270  0103B0  0A80               	xorlw	128
 13271  0103B2  5D78               	subwf	??_sprintf& (0+255),w,b
 13272  0103B4  E202               	bc	l5422
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;doprnt.c: 1342: prec = c;
 13276  0103B6  C08C  F089         	movff	sprintf@c,sprintf@prec
 13277  0103BA                     l5422:
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13281  0103BA  518A               	movf	sprintf@width& (0+255),w,b
 13282  0103BC  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13283  0103BE  E008               	bz	l5428
 13284                           
 13285                           ; BSR set to: 0
 13286  0103C0  C08D  F078         	movff	sprintf@flag,??_sprintf
 13287  0103C4  0E03               	movlw	3
 13288  0103C6  1778               	andwf	??_sprintf& (0+255),f,b
 13289  0103C8  E003               	bz	l5428
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;doprnt.c: 1346: width--;
 13293  0103CA  078A               	decf	sprintf@width& (0+255),f,b
 13294  0103CC  A0D8               	btfss	status,0,c
 13295  0103CE  078B               	decf	(sprintf@width+1)& (0+255),f,b
 13296  0103D0                     l5428:
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;doprnt.c: 1348: if(flag & 0x4000) {
 13300  0103D0  AD8E               	btfss	(sprintf@flag+1)& (0+255),6,b
 13301  0103D2  D013               	goto	l5434
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;doprnt.c: 1349: if(width > prec)
 13305  0103D4  0E80               	movlw	128
 13306  0103D6  BF89               	btfsc	sprintf@prec& (0+255),7,b
 13307  0103D8  0E7F               	movlw	127
 13308  0103DA  6F78               	movwf	??_sprintf& (0+255),b
 13309  0103DC  518A               	movf	sprintf@width& (0+255),w,b
 13310  0103DE  5D89               	subwf	sprintf@prec& (0+255),w,b
 13311  0103E0  518B               	movf	(sprintf@width+1)& (0+255),w,b
 13312  0103E2  0A80               	xorlw	128
 13313  0103E4  5978               	subwfb	??_sprintf& (0+255),w,b
 13314  0103E6  E207               	bc	l1133
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;doprnt.c: 1350: width -= prec;
 13318  0103E8  5189               	movf	sprintf@prec& (0+255),w,b
 13319  0103EA  5F8A               	subwf	sprintf@width& (0+255),f,b
 13320  0103EC  0E00               	movlw	0
 13321  0103EE  BF89               	btfsc	sprintf@prec& (0+255),7,b
 13322  0103F0  0EFF               	movlw	255
 13323  0103F2  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 13324  0103F4  D002               	goto	l5434
 13325  0103F6                     l1133:
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;doprnt.c: 1351: else
 13329                           ;doprnt.c: 1352: width = 0;
 13330  0103F6  6B8A               	clrf	sprintf@width& (0+255),b
 13331  0103F8  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 13332  0103FA                     l5434:
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;doprnt.c: 1353: }
 13336                           ;doprnt.c: 1357: if((flag & (
 13337                           ;doprnt.c: 1359: 0x04|
 13338                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 13339  0103FA  0EC4               	movlw	196
 13340  0103FC  6F78               	movwf	??_sprintf& (0+255),b
 13341  0103FE  0E08               	movlw	8
 13342  010400  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13343  010402  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 13344  010406  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 13345  01040A  5178               	movf	??_sprintf& (0+255),w,b
 13346  01040C  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 13347  01040E  5179               	movf	(??_sprintf+1)& (0+255),w,b
 13348  010410  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 13349  010412  0E40               	movlw	64
 13350  010414  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 13351  010416  E10A               	bnz	l5440
 13352  010418  0E08               	movlw	8
 13353  01041A  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 13354  01041C  E107               	bnz	l5440
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;doprnt.c: 1362: if(width)
 13358  01041E  518A               	movf	sprintf@width& (0+255),w,b
 13359  010420  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13360  010422  E024               	bz	l5446
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;doprnt.c: 1363: width--;
 13364  010424  078A               	decf	sprintf@width& (0+255),f,b
 13365  010426  A0D8               	btfss	status,0,c
 13366  010428  078B               	decf	(sprintf@width+1)& (0+255),f,b
 13367  01042A  D020               	goto	l5446
 13368  01042C                     l5440:
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 13372  01042C  0EC0               	movlw	192
 13373  01042E  6F78               	movwf	??_sprintf& (0+255),b
 13374  010430  0E08               	movlw	8
 13375  010432  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13376  010434  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 13377  010438  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 13378  01043C  5178               	movf	??_sprintf& (0+255),w,b
 13379  01043E  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 13380  010440  5179               	movf	(??_sprintf+1)& (0+255),w,b
 13381  010442  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 13382  010444  0E80               	movlw	128
 13383  010446  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 13384  010448  E111               	bnz	l5446
 13385  01044A  0E08               	movlw	8
 13386  01044C  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 13387  01044E  E10E               	bnz	l5446
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;doprnt.c: 1372: if(width > 2)
 13391  010450  BF8B               	btfsc	(sprintf@width+1)& (0+255),7,b
 13392  010452  D00A               	goto	l1139
 13393  010454  518B               	movf	(sprintf@width+1)& (0+255),w,b
 13394  010456  E103               	bnz	u4160
 13395  010458  0E03               	movlw	3
 13396  01045A  5D8A               	subwf	sprintf@width& (0+255),w,b
 13397  01045C  E305               	bnc	l1139
 13398  01045E                     u4160:
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;doprnt.c: 1373: width -= 2;
 13402  01045E  0EFE               	movlw	254
 13403  010460  278A               	addwf	sprintf@width& (0+255),f,b
 13404  010462  0EFF               	movlw	255
 13405  010464  238B               	addwfc	(sprintf@width+1)& (0+255),f,b
 13406  010466  D002               	goto	l5446
 13407  010468                     l1139:
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;doprnt.c: 1374: else
 13411                           ;doprnt.c: 1375: width = 0;
 13412  010468  6B8A               	clrf	sprintf@width& (0+255),b
 13413  01046A  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 13414  01046C                     l5446:
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;doprnt.c: 1376: }
 13418                           ;doprnt.c: 1381: if(width > c)
 13419  01046C  0E80               	movlw	128
 13420  01046E  BF8C               	btfsc	sprintf@c& (0+255),7,b
 13421  010470  0E7F               	movlw	127
 13422  010472  6F78               	movwf	??_sprintf& (0+255),b
 13423  010474  518A               	movf	sprintf@width& (0+255),w,b
 13424  010476  5D8C               	subwf	sprintf@c& (0+255),w,b
 13425  010478  518B               	movf	(sprintf@width+1)& (0+255),w,b
 13426  01047A  0A80               	xorlw	128
 13427  01047C  5978               	subwfb	??_sprintf& (0+255),w,b
 13428  01047E  E207               	bc	l1141
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;doprnt.c: 1382: width -= c;
 13432  010480  518C               	movf	sprintf@c& (0+255),w,b
 13433  010482  5F8A               	subwf	sprintf@width& (0+255),f,b
 13434  010484  0E00               	movlw	0
 13435  010486  BF8C               	btfsc	sprintf@c& (0+255),7,b
 13436  010488  0EFF               	movlw	255
 13437  01048A  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 13438  01048C  D002               	goto	l1142
 13439  01048E                     l1141:
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;doprnt.c: 1383: else
 13443                           ;doprnt.c: 1384: width = 0;
 13444  01048E  6B8A               	clrf	sprintf@width& (0+255),b
 13445  010490  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 13446  010492                     l1142:
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;doprnt.c: 1387: if(flag & 0x04) {
 13450  010492  A58D               	btfss	sprintf@flag& (0+255),2,b
 13451  010494  D04F               	goto	l5484
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;doprnt.c: 1392: if(flag & 0x03)
 13455  010496  C08D  F078         	movff	sprintf@flag,??_sprintf
 13456  01049A  0E03               	movlw	3
 13457  01049C  1778               	andwf	??_sprintf& (0+255),f,b
 13458  01049E  E009               	bz	l1144
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 13462  0104A0  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13463  0104A4  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13464  0104A8  0E2D               	movlw	45
 13465  0104AA  6EDF               	movwf	indf2,c
 13466  0104AC                     l5454:
 13467                           
 13468                           ; BSR set to: 0
 13469  0104AC  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13470  0104AE  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13471  0104B0  D031               	goto	l5476
 13472  0104B2                     l1144:
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;doprnt.c: 1396: else
 13476                           ;doprnt.c: 1399: if(flag & 0x01)
 13477  0104B2  A18D               	btfss	sprintf@flag& (0+255),0,b
 13478  0104B4  D006               	goto	l5460
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 13482  0104B6  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13483  0104BA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13484  0104BE  0E20               	movlw	32
 13485  0104C0  D7F4               	goto	L2
 13486  0104C2                     l5460:
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 13490  0104C2  0EC0               	movlw	192
 13491  0104C4  6F78               	movwf	??_sprintf& (0+255),b
 13492  0104C6  0E08               	movlw	8
 13493  0104C8  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13494  0104CA  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 13495  0104CE  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 13496  0104D2  5178               	movf	??_sprintf& (0+255),w,b
 13497  0104D4  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 13498  0104D6  5179               	movf	(??_sprintf+1)& (0+255),w,b
 13499  0104D8  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 13500  0104DA  0E80               	movlw	128
 13501  0104DC  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 13502  0104DE  E11A               	bnz	l5476
 13503  0104E0  0E08               	movlw	8
 13504  0104E2  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 13505  0104E4  E117               	bnz	l5476
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 13509  0104E6  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13510  0104EA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13511  0104EE  0E30               	movlw	48
 13512  0104F0  6EDF               	movwf	indf2,c
 13513                           
 13514                           ; BSR set to: 0
 13515  0104F2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13516  0104F4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 13520  0104F6  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 13521  0104F8  D003               	goto	l5470
 13522                           
 13523                           ; BSR set to: 0
 13524  0104FA  6B7D               	clrf	(_sprintf$3245+1)& (0+255),b
 13525  0104FC  0E78               	movlw	120
 13526  0104FE  D002               	goto	L3
 13527  010500                     l5470:
 13528                           
 13529                           ; BSR set to: 0
 13530  010500  6B7D               	clrf	(_sprintf$3245+1)& (0+255),b
 13531  010502  0E58               	movlw	88
 13532  010504                     L3:
 13533  010504  6F7C               	movwf	_sprintf$3245& (0+255),b
 13534                           
 13535                           ; BSR set to: 0
 13536  010506  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13537  01050A  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13538  01050E  C07C  FFDF         	movff	_sprintf$3245,indf2
 13539  010512  D7CC               	goto	l5454
 13540  010514                     l5476:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;doprnt.c: 1412: }
 13544                           ;doprnt.c: 1415: if(width)
 13545  010514  518A               	movf	sprintf@width& (0+255),w,b
 13546  010516  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13547  010518  E101 D0FD          	bz	l5548
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 13551  01051C  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13552  010520  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13553  010524  0E30               	movlw	48
 13554  010526  6EDF               	movwf	indf2,c
 13555                           
 13556                           ; BSR set to: 0
 13557  010528  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13558  01052A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;doprnt.c: 1418: while(--width);
 13562  01052C  078A               	decf	sprintf@width& (0+255),f,b
 13563  01052E  A0D8               	btfss	status,0,c
 13564  010530  078B               	decf	(sprintf@width+1)& (0+255),f,b
 13565  010532  D7F0               	goto	l5476
 13566  010534                     l5484:
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;doprnt.c: 1422: {
 13570                           ;doprnt.c: 1424: if(width
 13571                           ;doprnt.c: 1426: && !(flag & 0x08)
 13572                           ;doprnt.c: 1428: )
 13573  010534  518A               	movf	sprintf@width& (0+255),w,b
 13574  010536  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13575  010538  E010               	bz	l5494
 13576                           
 13577                           ; BSR set to: 0
 13578  01053A  B78D               	btfsc	sprintf@flag& (0+255),3,b
 13579  01053C  D00E               	goto	l5494
 13580  01053E                     l5488:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 13584  01053E  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13585  010542  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13586  010546  0E20               	movlw	32
 13587  010548  6EDF               	movwf	indf2,c
 13588                           
 13589                           ; BSR set to: 0
 13590  01054A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13591  01054C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;doprnt.c: 1431: while(--width);
 13595  01054E  078A               	decf	sprintf@width& (0+255),f,b
 13596  010550  A0D8               	btfss	status,0,c
 13597  010552  078B               	decf	(sprintf@width+1)& (0+255),f,b
 13598  010554  518A               	movf	sprintf@width& (0+255),w,b
 13599  010556  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13600  010558  E1F2               	bnz	l5488
 13601  01055A                     l5494:
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;doprnt.c: 1438: if(flag & 0x03)
 13605  01055A  C08D  F078         	movff	sprintf@flag,??_sprintf
 13606  01055E  0E03               	movlw	3
 13607  010560  1778               	andwf	??_sprintf& (0+255),f,b
 13608  010562  E009               	bz	l1160
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 13612  010564  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13613  010568  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13614  01056C  0E2D               	movlw	45
 13615  01056E  6EDF               	movwf	indf2,c
 13616                           
 13617                           ; BSR set to: 0
 13618  010570  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13619  010572  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13620  010574  D008               	goto	l5504
 13621  010576                     l1160:
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;doprnt.c: 1443: else if(flag & 0x01)
 13625  010576  A18D               	btfss	sprintf@flag& (0+255),0,b
 13626  010578  D006               	goto	l5504
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 13630  01057A  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13631  01057E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13632  010582  0E20               	movlw	32
 13633  010584  D7F4               	goto	L4
 13634  010586                     l5504:
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 13638  010586  0EC0               	movlw	192
 13639  010588  6F78               	movwf	??_sprintf& (0+255),b
 13640  01058A  0E08               	movlw	8
 13641  01058C  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13642  01058E  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 13643  010592  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 13644  010596  5178               	movf	??_sprintf& (0+255),w,b
 13645  010598  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 13646  01059A  5179               	movf	(??_sprintf+1)& (0+255),w,b
 13647  01059C  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 13648  01059E  0E40               	movlw	64
 13649  0105A0  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 13650  0105A2  E10C               	bnz	l5510
 13651  0105A4  0E08               	movlw	8
 13652  0105A6  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 13653  0105A8  E109               	bnz	l5510
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 13657  0105AA  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13658  0105AE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13659  0105B2  0E30               	movlw	48
 13660  0105B4  6EDF               	movwf	indf2,c
 13661  0105B6                     l5508:
 13662                           
 13663                           ; BSR set to: 0
 13664  0105B6  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13665  0105B8  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13666  0105BA  D0AD               	goto	l5548
 13667  0105BC                     l5510:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;doprnt.c: 1450: else
 13671                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 13672  0105BC  0EC0               	movlw	192
 13673  0105BE  6F78               	movwf	??_sprintf& (0+255),b
 13674  0105C0  0E08               	movlw	8
 13675  0105C2  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13676  0105C4  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 13677  0105C8  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 13678  0105CC  5178               	movf	??_sprintf& (0+255),w,b
 13679  0105CE  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 13680  0105D0  5179               	movf	(??_sprintf+1)& (0+255),w,b
 13681  0105D2  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 13682  0105D4  0E80               	movlw	128
 13683  0105D6  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 13684  0105D8  E11B               	bnz	l1156
 13685  0105DA  0E08               	movlw	8
 13686  0105DC  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 13687  0105DE  E001 D09A          	bnz	l5548
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 13691  0105E2  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13692  0105E6  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13693  0105EA  0E30               	movlw	48
 13694  0105EC  6EDF               	movwf	indf2,c
 13695                           
 13696                           ; BSR set to: 0
 13697  0105EE  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13698  0105F0  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 13702  0105F2  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 13703  0105F4  D003               	goto	l5520
 13704                           
 13705                           ; BSR set to: 0
 13706  0105F6  6B7F               	clrf	(_sprintf$3246+1)& (0+255),b
 13707  0105F8  0E78               	movlw	120
 13708  0105FA  D002               	goto	L5
 13709  0105FC                     l5520:
 13710                           
 13711                           ; BSR set to: 0
 13712  0105FC  6B7F               	clrf	(_sprintf$3246+1)& (0+255),b
 13713  0105FE  0E58               	movlw	88
 13714  010600                     L5:
 13715  010600  6F7E               	movwf	_sprintf$3246& (0+255),b
 13716                           
 13717                           ; BSR set to: 0
 13718  010602  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13719  010606  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13720  01060A  C07E  FFDF         	movff	_sprintf$3246,indf2
 13721  01060E  D7D3               	goto	l5508
 13722  010610                     l1156:
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;doprnt.c: 1466: }
 13726                           ;doprnt.c: 1469: }
 13727                           ;doprnt.c: 1474: while(prec--) {
 13728  010610  D082               	goto	l5548
 13729  010612                     l5526:
 13730                           
 13731                           ; BSR set to: 0
 13732                           ;doprnt.c: 1486: case 0xC0:
 13733                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13734  010612  5189               	movf	sprintf@prec& (0+255),w,b
 13735  010614  0D02               	mullw	2
 13736  010616  0E09               	movlw	low _dpowers
 13737  010618  24F3               	addwf	prodl,w,c
 13738  01061A  6EF6               	movwf	tblptrl,c
 13739  01061C  0EFC               	movlw	high _dpowers
 13740  01061E  20F4               	addwfc	prodh,w,c
 13741  010620  6EF7               	movwf	tblptrh,c
 13742  010622                     	if	1	;There are 3 active tblptr bytes
 13743  010622  6AF8               	clrf	tblptru,c
 13744  010624  0E00               	movlw	low (__mediumconst shr (0+16))
 13745  010626  22F8               	addwfc	tblptru,f,c
 13746  010628                     	endif
 13747  010628  0009               	tblrd		*+
 13748  01062A  CFF5 F062          	movff	tablat,___lwdiv@divisor
 13749  01062E  000A               	tblrd		*-
 13750  010630  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 13751  010634  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 13752  010638  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 13753  01063C  ECA0  F091         	call	___lwdiv	;wreg free
 13754  010640  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 13755  010644  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 13756  010648  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 13757  01064A  0E0A               	movlw	10
 13758  01064C  6F69               	movwf	___lwmod@divisor& (0+255),b
 13759  01064E  EC03  F092         	call	___lwmod	;wreg free
 13760  010652  5167               	movf	?___lwmod& (0+255),w,b
 13761  010654  D04D               	goto	L6
 13762  010656                     l5528:
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;doprnt.c: 1499: {
 13766                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 13767  010656  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 13768  01065A  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 13769  01065E  5189               	movf	sprintf@prec& (0+255),w,b
 13770  010660  0D02               	mullw	2
 13771  010662  0E13               	movlw	low _hexpowers
 13772  010664  24F3               	addwf	prodl,w,c
 13773  010666  6EF6               	movwf	tblptrl,c
 13774  010668  0EFC               	movlw	high _hexpowers
 13775  01066A  20F4               	addwfc	prodh,w,c
 13776  01066C  6EF7               	movwf	tblptrh,c
 13777  01066E                     	if	1	;There are 3 active tblptr bytes
 13778  01066E  6AF8               	clrf	tblptru,c
 13779  010670  0E00               	movlw	low (__mediumconst shr (0+16))
 13780  010672  22F8               	addwfc	tblptru,f,c
 13781  010674                     	endif
 13782  010674  0009               	tblrd		*+
 13783  010676  CFF5 F062          	movff	tablat,___lwdiv@divisor
 13784  01067A  000A               	tblrd		*-
 13785  01067C  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 13786  010680  ECA0  F091         	call	___lwdiv	;wreg free
 13787  010684  5160               	movf	?___lwdiv& (0+255),w,b
 13788  010686  0B0F               	andlw	15
 13789  010688  6F82               	movwf	sprintf@idx& (0+255),b
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 13793  01068A  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 13794  01068C  D004               	goto	l5534
 13795                           
 13796                           ; BSR set to: 0
 13797  01068E  0E73               	movlw	low STR_45
 13798  010690  6F80               	movwf	_sprintf$3252& (0+255),b
 13799  010692  0EFF               	movlw	high STR_45
 13800  010694  D003               	goto	L7
 13801  010696                     l5534:
 13802                           
 13803                           ; BSR set to: 0
 13804  010696  0E62               	movlw	low STR_44
 13805  010698  6F80               	movwf	_sprintf$3252& (0+255),b
 13806  01069A  0EFF               	movlw	high STR_44
 13807  01069C                     L7:
 13808  01069C  6F81               	movwf	(_sprintf$3252+1)& (0+255),b
 13809                           
 13810                           ; BSR set to: 0
 13811  01069E  5182               	movf	sprintf@idx& (0+255),w,b
 13812  0106A0  2580               	addwf	_sprintf$3252& (0+255),w,b
 13813  0106A2  6F78               	movwf	??_sprintf& (0+255),b
 13814  0106A4  0E00               	movlw	0
 13815  0106A6  2181               	addwfc	(_sprintf$3252+1)& (0+255),w,b
 13816  0106A8  6F79               	movwf	(??_sprintf+1)& (0+255),b
 13817  0106AA  C078  FFF6         	movff	??_sprintf,tblptrl
 13818  0106AE  C079  FFF7         	movff	??_sprintf+1,tblptrh
 13819  0106B2                     	if	0	;tblptru may be non-zero
 13820  0106B2                     	endif
 13821  0106B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13822  0106B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13823  0106B4  6EF8               	movwf	tblptru,c
 13824  0106B6                     	endif
 13825  0106B6  0008               	tblrd		*
 13826  0106B8  CFF5 F08C          	movff	tablat,sprintf@c
 13827                           
 13828                           ;doprnt.c: 1508: }
 13829                           ;doprnt.c: 1510: break;
 13830  0106BC  D025               	goto	l5544
 13831  0106BE                     l5538:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 13835  0106BE  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 13836  0106C2  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 13837  0106C6  5189               	movf	sprintf@prec& (0+255),w,b
 13838  0106C8  0D02               	mullw	2
 13839  0106CA  0EFD               	movlw	low _octpowers
 13840  0106CC  24F3               	addwf	prodl,w,c
 13841  0106CE  6EF6               	movwf	tblptrl,c
 13842  0106D0  0EFB               	movlw	high _octpowers
 13843  0106D2  20F4               	addwfc	prodh,w,c
 13844  0106D4  6EF7               	movwf	tblptrh,c
 13845  0106D6                     	if	1	;There are 3 active tblptr bytes
 13846  0106D6  6AF8               	clrf	tblptru,c
 13847  0106D8  0E00               	movlw	low (__mediumconst shr (0+16))
 13848  0106DA  22F8               	addwfc	tblptru,f,c
 13849  0106DC                     	endif
 13850  0106DC  0009               	tblrd		*+
 13851  0106DE  CFF5 F062          	movff	tablat,___lwdiv@divisor
 13852  0106E2  000A               	tblrd		*-
 13853  0106E4  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 13854  0106E8  ECA0  F091         	call	___lwdiv	;wreg free
 13855  0106EC  5160               	movf	?___lwdiv& (0+255),w,b
 13856  0106EE  0B07               	andlw	7
 13857  0106F0                     L6:
 13858  0106F0  0F30               	addlw	48
 13859  0106F2  6F8C               	movwf	sprintf@c& (0+255),b
 13860                           
 13861                           ;doprnt.c: 1520: break;
 13862  0106F4  D009               	goto	l5544
 13863  0106F6                     l5542:
 13864                           
 13865                           ; BSR set to: 0
 13866  0106F6  518D               	movf	sprintf@flag& (0+255),w,b
 13867  0106F8  0BC0               	andlw	192
 13868                           
 13869                           ; Switch size 1, requested type "speed"
 13870                           ; Number of cases is 4, Range of values is 0 to 192
 13871                           ; switch strategies available:
 13872                           ; Name         Instructions Cycles
 13873                           ; simple_byte           13     7 (average)
 13874                           ;	Chosen strategy is simple_byte
 13875  0106FA  E08B               	bz	l5526
 13876  0106FC  0A40               	xorlw	64	; case 64
 13877  0106FE  E0DF               	bz	l5538
 13878  010700  0AC0               	xorlw	192	; case 128
 13879  010702  E0A9               	bz	l5528
 13880  010704  0A40               	xorlw	64	; case 192
 13881  010706  E085               	bz	l5526
 13882  010708                     l5544:
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;doprnt.c: 1524: ((*sp++ = (c)));
 13886  010708  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13887  01070C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13888  010710  C08C  FFDF         	movff	sprintf@c,indf2
 13889  010714  D750               	goto	l5508
 13890  010716                     l5548:
 13891                           
 13892                           ; BSR set to: 0
 13893  010716  0789               	decf	sprintf@prec& (0+255),f,b
 13894  010718  2989               	incf	sprintf@prec& (0+255),w,b
 13895  01071A  E1ED               	bnz	l5542
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;doprnt.c: 1525: }
 13899                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 13900  01071C  B78D               	btfsc	sprintf@flag& (0+255),3,b
 13901                           
 13902                           ; BSR set to: 0
 13903  01071E  BF8B               	btfsc	(sprintf@width+1)& (0+255),7,b
 13904  010720  D012               	goto	l5558
 13905  010722  518B               	movf	(sprintf@width+1)& (0+255),w,b
 13906  010724  E102               	bnz	u4360
 13907  010726  058A               	decf	sprintf@width& (0+255),w,b
 13908  010728  E30E               	bnc	l5558
 13909  01072A                     u4360:
 13910  01072A                     l5552:
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 13914  01072A  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13915  01072E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13916  010732  0E20               	movlw	32
 13917  010734  6EDF               	movwf	indf2,c
 13918                           
 13919                           ; BSR set to: 0
 13920  010736  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 13921  010738  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;doprnt.c: 1531: while(--width);
 13925  01073A  078A               	decf	sprintf@width& (0+255),f,b
 13926  01073C  A0D8               	btfss	status,0,c
 13927  01073E  078B               	decf	(sprintf@width+1)& (0+255),f,b
 13928  010740  518A               	movf	sprintf@width& (0+255),w,b
 13929  010742  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 13930  010744  E1F2               	bnz	l5552
 13931  010746                     l5558:
 13932                           
 13933                           ; BSR set to: 0
 13934  010746  C06E  FFF6         	movff	sprintf@f,tblptrl
 13935  01074A  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 13936  01074E  4B6E               	infsnz	sprintf@f& (0+255),f,b
 13937  010750  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 13938  010752                     	if	0	;tblptru may be non-zero
 13939  010752                     	endif
 13940  010752                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13941  010752  0E00               	movlw	low (__mediumconst shr (0+16))
 13942  010754  6EF8               	movwf	tblptru,c
 13943  010756                     	endif
 13944  010756  0008               	tblrd		*
 13945  010758  CFF5 F08C          	movff	tablat,sprintf@c
 13946  01075C  518C               	movf	sprintf@c& (0+255),w,b
 13947  01075E  E001 D452          	bnz	l5236
 13948  010762                     l5560:
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;doprnt.c: 1538: *sp = 0;
 13952  010762  C06C  FFD9         	movff	sprintf@sp,fsr2l
 13953  010766  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 13954  01076A  6ADF               	clrf	indf2,c
 13955                           
 13956                           ; BSR set to: 0
 13957  01076C  0C00               	retlw	0	;funcret
 13958  01076E                     __end_of_sprintf:
 13959                           	opt stack 0
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           intcon	equ	0xFF2
 13967                           intcon2	equ	0xFF1
 13968                           intcon3	equ	0xFF0
 13969                           postinc0	equ	0xFEE
 13970                           wreg	equ	0xFE8
 13971                           indf1	equ	0xFE7
 13972                           postinc1	equ	0xFE6
 13973                           postdec1	equ	0xFE5
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           postdec2	equ	0xFDD
 13979                           fsr2h	equ	0xFDA
 13980                           fsr2l	equ	0xFD9
 13981                           status	equ	0xFD8
 13982                           
 13983 ;; *************** function _isdigit *****************
 13984 ;; Defined at:
 13985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;  c               1    wreg     unsigned char 
 13988 ;; Auto vars:     Size  Location     Type
 13989 ;;  c               1    2[BANK0 ] unsigned char 
 13990 ;; Return value:  Size  Location     Type
 13991 ;;		None               void
 13992 ;; Registers used:
 13993 ;;		wreg, status,2, status,0
 13994 ;; Tracked objects:
 13995 ;;		On entry : F/0
 13996 ;;		On exit  : F/0
 13997 ;;		Unchanged: 0/0
 13998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14002 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14003 ;;Total ram usage:        3 bytes
 14004 ;; Hardware stack levels used:    1
 14005 ;; Hardware stack levels required when called:    5
 14006 ;; This function calls:
 14007 ;;		Nothing
 14008 ;; This function is called by:
 14009 ;;		_sprintf
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           	psect	text62
 14014  0129EE                     __ptext62:
 14015                           	opt stack 0
 14016  0129EE                     _isdigit:
 14017                           	opt stack 22
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;incstack = 0
 14021                           ;isdigit@c stored from wreg
 14022  0129EE  6F62               	movwf	isdigit@c& (0+255),b
 14023  0129F0  0100               	movlb	0	; () banked
 14024  0129F2  6B61               	clrf	_isdigit$3476& (0+255),b
 14025                           
 14026                           ; BSR set to: 0
 14027  0129F4  0E3A               	movlw	58
 14028  0129F6  6162               	cpfslt	isdigit@c& (0+255),b
 14029  0129F8  D005               	goto	l4982
 14030                           
 14031                           ; BSR set to: 0
 14032  0129FA  0E2F               	movlw	47
 14033  0129FC  6562               	cpfsgt	isdigit@c& (0+255),b
 14034  0129FE  D002               	goto	l4982
 14035                           
 14036                           ; BSR set to: 0
 14037  012A00  0E01               	movlw	1
 14038  012A02  6F61               	movwf	_isdigit$3476& (0+255),b
 14039  012A04                     l4982:
 14040                           
 14041                           ; BSR set to: 0
 14042  012A04  C061  F060         	movff	_isdigit$3476,??_isdigit
 14043  012A08  3160               	rrcf	??_isdigit& (0+255),w,b
 14044                           
 14045                           ; BSR set to: 0
 14046  012A0A  0012               	return		;funcret
 14047  012A0C                     __end_of_isdigit:
 14048                           	opt stack 0
 14049                           tblptru	equ	0xFF8
 14050                           tblptrh	equ	0xFF7
 14051                           tblptrl	equ	0xFF6
 14052                           tablat	equ	0xFF5
 14053                           prodh	equ	0xFF4
 14054                           prodl	equ	0xFF3
 14055                           intcon	equ	0xFF2
 14056                           intcon2	equ	0xFF1
 14057                           intcon3	equ	0xFF0
 14058                           postinc0	equ	0xFEE
 14059                           wreg	equ	0xFE8
 14060                           indf1	equ	0xFE7
 14061                           postinc1	equ	0xFE6
 14062                           postdec1	equ	0xFE5
 14063                           fsr1h	equ	0xFE2
 14064                           fsr1l	equ	0xFE1
 14065                           indf2	equ	0xFDF
 14066                           postinc2	equ	0xFDE
 14067                           postdec2	equ	0xFDD
 14068                           fsr2h	equ	0xFDA
 14069                           fsr2l	equ	0xFD9
 14070                           status	equ	0xFD8
 14071                           
 14072 ;; *************** function ___wmul *****************
 14073 ;; Defined at:
 14074 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14077 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;  product         2    4[BANK0 ] unsigned int 
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  2    0[BANK0 ] unsigned int 
 14082 ;; Registers used:
 14083 ;;		wreg, status,2, status,0, prodl, prodh
 14084 ;; Tracked objects:
 14085 ;;		On entry : F/0
 14086 ;;		On exit  : F/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14089 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14092 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14093 ;;Total ram usage:        6 bytes
 14094 ;; Hardware stack levels used:    1
 14095 ;; Hardware stack levels required when called:    5
 14096 ;; This function calls:
 14097 ;;		Nothing
 14098 ;; This function is called by:
 14099 ;;		_sprintf
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           	psect	text63
 14104  0128D4                     __ptext63:
 14105                           	opt stack 0
 14106  0128D4                     ___wmul:
 14107                           	opt stack 22
 14108                           
 14109                           ; BSR set to: 0
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;incstack = 0
 14113  0128D4  5160               	movf	___wmul@multiplier& (0+255),w,b
 14114  0128D6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14115  0128D8  CFF3 F064          	movff	prodl,___wmul@product
 14116  0128DC  CFF4 F065          	movff	prodh,___wmul@product+1
 14117  0128E0  5160               	movf	___wmul@multiplier& (0+255),w,b
 14118  0128E2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14119  0128E4  50F3               	movf	prodl,w,c
 14120  0128E6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14121  0128E8  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14122  0128EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14123  0128EC  50F3               	movf	prodl,w,c
 14124  0128EE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14125                           
 14126                           ; BSR set to: 0
 14127  0128F0  C064  F060         	movff	___wmul@product,?___wmul
 14128  0128F4  C065  F061         	movff	___wmul@product+1,?___wmul+1
 14129                           
 14130                           ; BSR set to: 0
 14131  0128F8  0012               	return		;funcret
 14132  0128FA                     __end_of___wmul:
 14133                           	opt stack 0
 14134                           tblptru	equ	0xFF8
 14135                           tblptrh	equ	0xFF7
 14136                           tblptrl	equ	0xFF6
 14137                           tablat	equ	0xFF5
 14138                           prodh	equ	0xFF4
 14139                           prodl	equ	0xFF3
 14140                           intcon	equ	0xFF2
 14141                           intcon2	equ	0xFF1
 14142                           intcon3	equ	0xFF0
 14143                           postinc0	equ	0xFEE
 14144                           wreg	equ	0xFE8
 14145                           indf1	equ	0xFE7
 14146                           postinc1	equ	0xFE6
 14147                           postdec1	equ	0xFE5
 14148                           fsr1h	equ	0xFE2
 14149                           fsr1l	equ	0xFE1
 14150                           indf2	equ	0xFDF
 14151                           postinc2	equ	0xFDE
 14152                           postdec2	equ	0xFDD
 14153                           fsr2h	equ	0xFDA
 14154                           fsr2l	equ	0xFD9
 14155                           status	equ	0xFD8
 14156                           
 14157 ;; *************** function ___lwmod *****************
 14158 ;; Defined at:
 14159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  dividend        2    7[BANK0 ] unsigned int 
 14162 ;;  divisor         2    9[BANK0 ] unsigned int 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;  counter         1   11[BANK0 ] unsigned char 
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  2    7[BANK0 ] unsigned int 
 14167 ;; Registers used:
 14168 ;;		wreg, status,2, status,0
 14169 ;; Tracked objects:
 14170 ;;		On entry : F/0
 14171 ;;		On exit  : F/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;Total ram usage:        5 bytes
 14179 ;; Hardware stack levels used:    1
 14180 ;; Hardware stack levels required when called:    5
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		_sprintf
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text64
 14189  012406                     __ptext64:
 14190                           	opt stack 0
 14191  012406                     ___lwmod:
 14192                           	opt stack 22
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;incstack = 0
 14198  012406  5169               	movf	___lwmod@divisor& (0+255),w,b
 14199  012408  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14200  01240A  E017               	bz	l1599
 14201                           
 14202                           ; BSR set to: 0
 14203  01240C  0E01               	movlw	1
 14204  01240E  6F6B               	movwf	___lwmod@counter& (0+255),b
 14205  012410  D004               	goto	l5020
 14206  012412                     l5018:
 14207                           
 14208                           ; BSR set to: 0
 14209  012412  90D8               	bcf	status,0,c
 14210  012414  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 14211  012416  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14212  012418  2B6B               	incf	___lwmod@counter& (0+255),f,b
 14213  01241A                     l5020:
 14214                           
 14215                           ; BSR set to: 0
 14216  01241A  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14217  01241C  D7FA               	goto	l5018
 14218  01241E                     l5022:
 14219                           
 14220                           ; BSR set to: 0
 14221  01241E  5169               	movf	___lwmod@divisor& (0+255),w,b
 14222  012420  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 14223  012422  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14224  012424  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14225  012426  E304               	bnc	l5026
 14226                           
 14227                           ; BSR set to: 0
 14228  012428  5169               	movf	___lwmod@divisor& (0+255),w,b
 14229  01242A  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 14230  01242C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14231  01242E  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14232  012430                     l5026:
 14233                           
 14234                           ; BSR set to: 0
 14235  012430  90D8               	bcf	status,0,c
 14236  012432  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14237  012434  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 14238                           
 14239                           ; BSR set to: 0
 14240  012436  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 14241  012438  D7F2               	goto	l5022
 14242  01243A                     l1599:
 14243                           
 14244                           ; BSR set to: 0
 14245  01243A  C067  F067         	movff	___lwmod@dividend,?___lwmod
 14246  01243E  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 14247                           
 14248                           ; BSR set to: 0
 14249  012442  0012               	return		;funcret
 14250  012444                     __end_of___lwmod:
 14251                           	opt stack 0
 14252                           tblptru	equ	0xFF8
 14253                           tblptrh	equ	0xFF7
 14254                           tblptrl	equ	0xFF6
 14255                           tablat	equ	0xFF5
 14256                           prodh	equ	0xFF4
 14257                           prodl	equ	0xFF3
 14258                           intcon	equ	0xFF2
 14259                           intcon2	equ	0xFF1
 14260                           intcon3	equ	0xFF0
 14261                           postinc0	equ	0xFEE
 14262                           wreg	equ	0xFE8
 14263                           indf1	equ	0xFE7
 14264                           postinc1	equ	0xFE6
 14265                           postdec1	equ	0xFE5
 14266                           fsr1h	equ	0xFE2
 14267                           fsr1l	equ	0xFE1
 14268                           indf2	equ	0xFDF
 14269                           postinc2	equ	0xFDE
 14270                           postdec2	equ	0xFDD
 14271                           fsr2h	equ	0xFDA
 14272                           fsr2l	equ	0xFD9
 14273                           status	equ	0xFD8
 14274                           
 14275 ;; *************** function ___lwdiv *****************
 14276 ;; Defined at:
 14277 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 14278 ;; Parameters:    Size  Location     Type
 14279 ;;  dividend        2    0[BANK0 ] unsigned int 
 14280 ;;  divisor         2    2[BANK0 ] unsigned int 
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;  quotient        2    4[BANK0 ] unsigned int 
 14283 ;;  counter         1    6[BANK0 ] unsigned char 
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  2    0[BANK0 ] unsigned int 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2, status,0
 14288 ;; Tracked objects:
 14289 ;;		On entry : F/0
 14290 ;;		On exit  : F/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14294 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;Total ram usage:        7 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    5
 14300 ;; This function calls:
 14301 ;;		Nothing
 14302 ;; This function is called by:
 14303 ;;		_sprintf
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           	psect	text65
 14308  012340                     __ptext65:
 14309                           	opt stack 0
 14310  012340                     ___lwdiv:
 14311                           	opt stack 22
 14312                           
 14313                           ; BSR set to: 0
 14314                           
 14315                           ; BSR set to: 0
 14316                           ;incstack = 0
 14317  012340  6B64               	clrf	___lwdiv@quotient& (0+255),b
 14318  012342  6B65               	clrf	(___lwdiv@quotient+1)& (0+255),b
 14319                           
 14320                           ; BSR set to: 0
 14321  012344  5162               	movf	___lwdiv@divisor& (0+255),w,b
 14322  012346  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14323  012348  E01B               	bz	l1589
 14324                           
 14325                           ; BSR set to: 0
 14326  01234A  0E01               	movlw	1
 14327  01234C  6F66               	movwf	___lwdiv@counter& (0+255),b
 14328  01234E  D004               	goto	l5000
 14329  012350                     l4998:
 14330                           
 14331                           ; BSR set to: 0
 14332  012350  90D8               	bcf	status,0,c
 14333  012352  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 14334  012354  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14335  012356  2B66               	incf	___lwdiv@counter& (0+255),f,b
 14336  012358                     l5000:
 14337                           
 14338                           ; BSR set to: 0
 14339  012358  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14340  01235A  D7FA               	goto	l4998
 14341  01235C                     l5002:
 14342                           
 14343                           ; BSR set to: 0
 14344  01235C  90D8               	bcf	status,0,c
 14345  01235E  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 14346  012360  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14347                           
 14348                           ; BSR set to: 0
 14349  012362  5162               	movf	___lwdiv@divisor& (0+255),w,b
 14350  012364  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 14351  012366  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14352  012368  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14353  01236A  E305               	bnc	l5010
 14354                           
 14355                           ; BSR set to: 0
 14356  01236C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 14357  01236E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 14358  012370  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14359  012372  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14360                           
 14361                           ; BSR set to: 0
 14362  012374  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 14363  012376                     l5010:
 14364                           
 14365                           ; BSR set to: 0
 14366  012376  90D8               	bcf	status,0,c
 14367  012378  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14368  01237A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 14369                           
 14370                           ; BSR set to: 0
 14371  01237C  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 14372  01237E  D7EE               	goto	l5002
 14373  012380                     l1589:
 14374                           
 14375                           ; BSR set to: 0
 14376  012380  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 14377  012384  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14378                           
 14379                           ; BSR set to: 0
 14380  012388  0012               	return		;funcret
 14381  01238A                     __end_of___lwdiv:
 14382                           	opt stack 0
 14383                           tblptru	equ	0xFF8
 14384                           tblptrh	equ	0xFF7
 14385                           tblptrl	equ	0xFF6
 14386                           tablat	equ	0xFF5
 14387                           prodh	equ	0xFF4
 14388                           prodl	equ	0xFF3
 14389                           intcon	equ	0xFF2
 14390                           intcon2	equ	0xFF1
 14391                           intcon3	equ	0xFF0
 14392                           postinc0	equ	0xFEE
 14393                           wreg	equ	0xFE8
 14394                           indf1	equ	0xFE7
 14395                           postinc1	equ	0xFE6
 14396                           postdec1	equ	0xFE5
 14397                           fsr1h	equ	0xFE2
 14398                           fsr1l	equ	0xFE1
 14399                           indf2	equ	0xFDF
 14400                           postinc2	equ	0xFDE
 14401                           postdec2	equ	0xFDD
 14402                           fsr2h	equ	0xFDA
 14403                           fsr2l	equ	0xFD9
 14404                           status	equ	0xFD8
 14405                           
 14406 ;; *************** function _LCD_Update *****************
 14407 ;; Defined at:
 14408 ;;		line 232 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;		None
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;  i               1   15[BANK0 ] unsigned char 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  1    wreg      void 
 14415 ;; Registers used:
 14416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14417 ;; Tracked objects:
 14418 ;;		On entry : F/0
 14419 ;;		On exit  : F/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14426 ;;Total ram usage:        1 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:    8
 14429 ;; This function calls:
 14430 ;;		_LCD_d_write
 14431 ;;		_LCD_i_write
 14432 ;; This function is called by:
 14433 ;;		_LCDTRXCount
 14434 ;;		_LCDDisplay
 14435 ;;		_run_p2p_demo
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text66
 14440  011DE8                     __ptext66:
 14441                           	opt stack 0
 14442  011DE8                     _LCD_Update:
 14443                           	opt stack 20
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;lcd.c: 234: uint8_t i;
 14447                           ;lcd.c: 236: LCD_i_write(0x80);
 14448                           
 14449                           ; BSR set to: 0
 14450                           ;incstack = 0
 14451  011DE8  0E80               	movlw	128
 14452  011DEA  EC7A  F092         	call	_LCD_i_write
 14453                           
 14454                           ;lcd.c: 237: for(i = 0; i < 16; i++)
 14455  011DEE  0100               	movlb	0	; () banked
 14456  011DF0  6B6F               	clrf	LCD_Update@i& (0+255),b
 14457  011DF2                     l5200:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;lcd.c: 238: {
 14461                           ;lcd.c: 239: if( LCDText[i] == 0 )
 14462  011DF2  0E82               	movlw	low _LCDText
 14463  011DF4  256F               	addwf	LCD_Update@i& (0+255),w,b
 14464  011DF6  6ED9               	movwf	fsr2l,c
 14465  011DF8  6ADA               	clrf	fsr2h,c
 14466  011DFA  0E01               	movlw	high _LCDText
 14467  011DFC  22DA               	addwfc	fsr2h,f,c
 14468  011DFE  50DF               	movf	indf2,w,c
 14469  011E00  E104               	bnz	l5204
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;lcd.c: 240: {
 14473                           ;lcd.c: 241: LCD_d_write(' ');
 14474  011E02  0E20               	movlw	32
 14475  011E04  EC22  F092         	call	_LCD_d_write
 14476                           
 14477                           ;lcd.c: 242: }
 14478  011E08  D009               	goto	l5206
 14479  011E0A                     l5204:
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;lcd.c: 243: else
 14483                           ;lcd.c: 244: {
 14484                           ;lcd.c: 245: LCD_d_write(LCDText[i]);
 14485  011E0A  0E82               	movlw	low _LCDText
 14486  011E0C  256F               	addwf	LCD_Update@i& (0+255),w,b
 14487  011E0E  6ED9               	movwf	fsr2l,c
 14488  011E10  6ADA               	clrf	fsr2h,c
 14489  011E12  0E01               	movlw	high _LCDText
 14490  011E14  22DA               	addwfc	fsr2h,f,c
 14491  011E16  50DF               	movf	indf2,w,c
 14492  011E18  EC22  F092         	call	_LCD_d_write
 14493  011E1C                     l5206:
 14494  011E1C  0100               	movlb	0	; () banked
 14495  011E1E  2B6F               	incf	LCD_Update@i& (0+255),f,b
 14496                           
 14497                           ; BSR set to: 0
 14498  011E20  0E0F               	movlw	15
 14499  011E22  656F               	cpfsgt	LCD_Update@i& (0+255),b
 14500  011E24  D7E6               	goto	l5200
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;lcd.c: 246: }
 14504                           ;lcd.c: 247: }
 14505                           ;lcd.c: 248: LCD_i_write(0xC0);
 14506  011E26  0EC0               	movlw	192
 14507  011E28  EC7A  F092         	call	_LCD_i_write
 14508                           
 14509                           ;lcd.c: 249: for(i = 16; i < 32; i++)
 14510  011E2C  0E10               	movlw	16
 14511  011E2E  0100               	movlb	0	; () banked
 14512  011E30  6F6F               	movwf	LCD_Update@i& (0+255),b
 14513  011E32                     l5218:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;lcd.c: 250: {
 14517                           ;lcd.c: 251: if( LCDText[i] == 0 )
 14518  011E32  0E82               	movlw	low _LCDText
 14519  011E34  256F               	addwf	LCD_Update@i& (0+255),w,b
 14520  011E36  6ED9               	movwf	fsr2l,c
 14521  011E38  6ADA               	clrf	fsr2h,c
 14522  011E3A  0E01               	movlw	high _LCDText
 14523  011E3C  22DA               	addwfc	fsr2h,f,c
 14524  011E3E  50DF               	movf	indf2,w,c
 14525  011E40  E104               	bnz	l5222
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;lcd.c: 252: {
 14529                           ;lcd.c: 253: LCD_d_write(' ');
 14530  011E42  0E20               	movlw	32
 14531  011E44  EC22  F092         	call	_LCD_d_write
 14532                           
 14533                           ;lcd.c: 254: }
 14534  011E48  D009               	goto	l5224
 14535  011E4A                     l5222:
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;lcd.c: 255: else
 14539                           ;lcd.c: 256: {
 14540                           ;lcd.c: 257: LCD_d_write(LCDText[i]);
 14541  011E4A  0E82               	movlw	low _LCDText
 14542  011E4C  256F               	addwf	LCD_Update@i& (0+255),w,b
 14543  011E4E  6ED9               	movwf	fsr2l,c
 14544  011E50  6ADA               	clrf	fsr2h,c
 14545  011E52  0E01               	movlw	high _LCDText
 14546  011E54  22DA               	addwfc	fsr2h,f,c
 14547  011E56  50DF               	movf	indf2,w,c
 14548  011E58  EC22  F092         	call	_LCD_d_write
 14549  011E5C                     l5224:
 14550  011E5C  0100               	movlb	0	; () banked
 14551  011E5E  2B6F               	incf	LCD_Update@i& (0+255),f,b
 14552                           
 14553                           ; BSR set to: 0
 14554  011E60  0E1F               	movlw	31
 14555  011E62  656F               	cpfsgt	LCD_Update@i& (0+255),b
 14556  011E64  D7E6               	goto	l5218
 14557  011E66  0C1F               	retlw	31
 14558  011E68                     __end_of_LCD_Update:
 14559                           	opt stack 0
 14560                           tblptru	equ	0xFF8
 14561                           tblptrh	equ	0xFF7
 14562                           tblptrl	equ	0xFF6
 14563                           tablat	equ	0xFF5
 14564                           prodh	equ	0xFF4
 14565                           prodl	equ	0xFF3
 14566                           intcon	equ	0xFF2
 14567                           intcon2	equ	0xFF1
 14568                           intcon3	equ	0xFF0
 14569                           postinc0	equ	0xFEE
 14570                           wreg	equ	0xFE8
 14571                           indf1	equ	0xFE7
 14572                           postinc1	equ	0xFE6
 14573                           postdec1	equ	0xFE5
 14574                           fsr1h	equ	0xFE2
 14575                           fsr1l	equ	0xFE1
 14576                           indf2	equ	0xFDF
 14577                           postinc2	equ	0xFDE
 14578                           postdec2	equ	0xFDD
 14579                           fsr2h	equ	0xFDA
 14580                           fsr2l	equ	0xFD9
 14581                           status	equ	0xFD8
 14582                           
 14583 ;; *************** function _LCD_i_write *****************
 14584 ;; Defined at:
 14585 ;;		line 117 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  v               1    wreg     unsigned char 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  v               1   14[BANK0 ] unsigned char 
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14594 ;; Tracked objects:
 14595 ;;		On entry : F/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;Total ram usage:        1 bytes
 14604 ;; Hardware stack levels used:    1
 14605 ;; Hardware stack levels required when called:    7
 14606 ;; This function calls:
 14607 ;;		_DELAY_ms
 14608 ;;		_LCDWritePortA
 14609 ;;		_LCDWritePortB
 14610 ;; This function is called by:
 14611 ;;		_LCD_Update
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           	psect	text67
 14616  0124F4                     __ptext67:
 14617                           	opt stack 0
 14618  0124F4                     _LCD_i_write:
 14619                           	opt stack 20
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;incstack = 0
 14623                           ;LCD_i_write@v stored from wreg
 14624  0124F4  6F6E               	movwf	LCD_i_write@v& (0+255),b
 14625                           
 14626                           ;lcd.c: 119: LCDWritePortA(0);
 14627  0124F6  0E00               	movlw	0
 14628  0124F8  EC03  F093         	call	_LCDWritePortA
 14629                           
 14630                           ;lcd.c: 120: DELAY_ms(1);
 14631  0124FC  0100               	movlb	0	; () banked
 14632  0124FE  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
 14633  012500  0E01               	movlw	1
 14634  012502  6F60               	movwf	DELAY_ms@ms& (0+255),b
 14635  012504  EC2E  F08C         	call	_DELAY_ms	;wreg free
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;lcd.c: 121: LCDWritePortB(v);
 14639  012508  516E               	movf	LCD_i_write@v& (0+255),w,b
 14640  01250A  ECE9  F092         	call	_LCDWritePortB
 14641                           
 14642                           ;lcd.c: 122: __nop();
 14643  01250E  F000               	nop	
 14644                           
 14645                           ;lcd.c: 123: __nop();
 14646  012510  F000               	nop	
 14647                           
 14648                           ;lcd.c: 124: __nop();
 14649  012512  F000               	nop	
 14650                           
 14651                           ;lcd.c: 125: __nop();
 14652  012514  F000               	nop	
 14653                           
 14654                           ;lcd.c: 126: LCDWritePortA(0x40);
 14655  012516  0E40               	movlw	64
 14656  012518  EC03  F093         	call	_LCDWritePortA
 14657                           
 14658                           ;lcd.c: 127: __nop();
 14659  01251C  F000               	nop	
 14660                           
 14661                           ;lcd.c: 128: __nop();
 14662  01251E  F000               	nop	
 14663                           
 14664                           ;lcd.c: 129: __nop();
 14665  012520  F000               	nop	
 14666                           
 14667                           ;lcd.c: 130: __nop();
 14668  012522  F000               	nop	
 14669                           
 14670                           ;lcd.c: 131: __nop();
 14671  012524  F000               	nop	
 14672                           
 14673                           ;lcd.c: 132: __nop();
 14674  012526  F000               	nop	
 14675                           
 14676                           ;lcd.c: 133: LCDWritePortA(0x00);
 14677  012528  0E00               	movlw	0
 14678  01252A  EF03  F093         	goto	_LCDWritePortA
 14679  01252E                     __end_of_LCD_i_write:
 14680                           	opt stack 0
 14681                           tblptru	equ	0xFF8
 14682                           tblptrh	equ	0xFF7
 14683                           tblptrl	equ	0xFF6
 14684                           tablat	equ	0xFF5
 14685                           prodh	equ	0xFF4
 14686                           prodl	equ	0xFF3
 14687                           intcon	equ	0xFF2
 14688                           intcon2	equ	0xFF1
 14689                           intcon3	equ	0xFF0
 14690                           postinc0	equ	0xFEE
 14691                           wreg	equ	0xFE8
 14692                           indf1	equ	0xFE7
 14693                           postinc1	equ	0xFE6
 14694                           postdec1	equ	0xFE5
 14695                           fsr1h	equ	0xFE2
 14696                           fsr1l	equ	0xFE1
 14697                           indf2	equ	0xFDF
 14698                           postinc2	equ	0xFDE
 14699                           postdec2	equ	0xFDD
 14700                           fsr2h	equ	0xFDA
 14701                           fsr2l	equ	0xFD9
 14702                           status	equ	0xFD8
 14703                           
 14704 ;; *************** function _LCD_d_write *****************
 14705 ;; Defined at:
 14706 ;;		line 137 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;  v               1    wreg     unsigned char 
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;  v               1   14[BANK0 ] unsigned char 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : F/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;Total ram usage:        1 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:    7
 14727 ;; This function calls:
 14728 ;;		_DELAY_ms
 14729 ;;		_LCDWritePortA
 14730 ;;		_LCDWritePortB
 14731 ;; This function is called by:
 14732 ;;		_LCD_Update
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text68
 14737  012444                     __ptext68:
 14738                           	opt stack 0
 14739  012444                     _LCD_d_write:
 14740                           	opt stack 20
 14741                           
 14742                           ;incstack = 0
 14743                           ;LCD_d_write@v stored from wreg
 14744  012444  6F6E               	movwf	LCD_d_write@v& (0+255),b
 14745                           
 14746                           ;lcd.c: 139: DELAY_ms(1);
 14747  012446  0100               	movlb	0	; () banked
 14748  012448  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
 14749  01244A  0E01               	movlw	1
 14750  01244C  6F60               	movwf	DELAY_ms@ms& (0+255),b
 14751  01244E  EC2E  F08C         	call	_DELAY_ms	;wreg free
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;lcd.c: 140: LCDWritePortA(0x80);
 14755  012452  0E80               	movlw	128
 14756  012454  EC03  F093         	call	_LCDWritePortA
 14757                           
 14758                           ;lcd.c: 141: LCDWritePortB(v);
 14759  012458  0100               	movlb	0	; () banked
 14760  01245A  516E               	movf	LCD_d_write@v& (0+255),w,b
 14761  01245C  ECE9  F092         	call	_LCDWritePortB
 14762                           
 14763                           ;lcd.c: 142: __nop();
 14764  012460  F000               	nop	
 14765                           
 14766                           ;lcd.c: 143: __nop();
 14767  012462  F000               	nop	
 14768                           
 14769                           ;lcd.c: 144: __nop();
 14770  012464  F000               	nop	
 14771                           
 14772                           ;lcd.c: 145: __nop();
 14773  012466  F000               	nop	
 14774                           
 14775                           ;lcd.c: 146: LCDWritePortA(0xC0);
 14776  012468  0EC0               	movlw	192
 14777  01246A  EC03  F093         	call	_LCDWritePortA
 14778                           
 14779                           ;lcd.c: 147: __nop();
 14780  01246E  F000               	nop	
 14781                           
 14782                           ;lcd.c: 148: __nop();
 14783  012470  F000               	nop	
 14784                           
 14785                           ;lcd.c: 149: __nop();
 14786  012472  F000               	nop	
 14787                           
 14788                           ;lcd.c: 150: __nop();
 14789  012474  F000               	nop	
 14790                           
 14791                           ;lcd.c: 151: __nop();
 14792  012476  F000               	nop	
 14793                           
 14794                           ;lcd.c: 152: __nop();
 14795  012478  F000               	nop	
 14796                           
 14797                           ;lcd.c: 153: LCDWritePortA(0);
 14798  01247A  0E00               	movlw	0
 14799  01247C  EF03  F093         	goto	_LCDWritePortA
 14800  012480                     __end_of_LCD_d_write:
 14801                           	opt stack 0
 14802                           tblptru	equ	0xFF8
 14803                           tblptrh	equ	0xFF7
 14804                           tblptrl	equ	0xFF6
 14805                           tablat	equ	0xFF5
 14806                           prodh	equ	0xFF4
 14807                           prodl	equ	0xFF3
 14808                           intcon	equ	0xFF2
 14809                           intcon2	equ	0xFF1
 14810                           intcon3	equ	0xFF0
 14811                           postinc0	equ	0xFEE
 14812                           wreg	equ	0xFE8
 14813                           indf1	equ	0xFE7
 14814                           postinc1	equ	0xFE6
 14815                           postdec1	equ	0xFE5
 14816                           fsr1h	equ	0xFE2
 14817                           fsr1l	equ	0xFE1
 14818                           indf2	equ	0xFDF
 14819                           postinc2	equ	0xFDE
 14820                           postdec2	equ	0xFDD
 14821                           fsr2h	equ	0xFDA
 14822                           fsr2l	equ	0xFD9
 14823                           status	equ	0xFD8
 14824                           
 14825 ;; *************** function _LCD_Erase *****************
 14826 ;; Defined at:
 14827 ;;		line 278 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;		None
 14830 ;; Auto vars:     Size  Location     Type
 14831 ;;		None
 14832 ;; Return value:  Size  Location     Type
 14833 ;;                  1    wreg      void 
 14834 ;; Registers used:
 14835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14836 ;; Tracked objects:
 14837 ;;		On entry : 0/0
 14838 ;;		On exit  : F/0
 14839 ;;		Unchanged: 0/0
 14840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14845 ;;Total ram usage:        0 bytes
 14846 ;; Hardware stack levels used:    1
 14847 ;; Hardware stack levels required when called:    8
 14848 ;; This function calls:
 14849 ;;		_DELAY_ms
 14850 ;;		_LCDInitWrite
 14851 ;;		_memset
 14852 ;; This function is called by:
 14853 ;;		_LCDTRXCount
 14854 ;;		_LCDDisplay
 14855 ;;		_run_p2p_demo
 14856 ;; This function uses a non-reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text69
 14860  012886                     __ptext69:
 14861                           	opt stack 0
 14862  012886                     _LCD_Erase:
 14863                           	opt stack 20
 14864                           
 14865                           ;lcd.c: 281: LCDInitWrite(0x01);
 14866                           
 14867                           ;incstack = 0
 14868  012886  0E01               	movlw	1
 14869  012888  ECCE  F092         	call	_LCDInitWrite
 14870                           
 14871                           ;lcd.c: 282: DELAY_ms(2);
 14872  01288C  0100               	movlb	0	; () banked
 14873  01288E  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
 14874  012890  0E02               	movlw	2
 14875  012892  6F60               	movwf	DELAY_ms@ms& (0+255),b
 14876  012894  EC2E  F08C         	call	_DELAY_ms	;wreg free
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;lcd.c: 285: memset(LCDText, ' ', 32);
 14880  012898  0E82               	movlw	low _LCDText
 14881  01289A  6F60               	movwf	memset@p1& (0+255),b
 14882  01289C  0E01               	movlw	high _LCDText
 14883  01289E  6F61               	movwf	(memset@p1+1)& (0+255),b
 14884  0128A0  6B63               	clrf	(memset@c+1)& (0+255),b
 14885  0128A2  0E20               	movlw	32
 14886  0128A4  6F62               	movwf	memset@c& (0+255),b
 14887  0128A6  6B65               	clrf	(memset@n+1)& (0+255),b
 14888  0128A8  6F64               	movwf	memset@n& (0+255),b
 14889  0128AA  EF1A  F094         	goto	_memset	;wreg free
 14890  0128AE                     __end_of_LCD_Erase:
 14891                           	opt stack 0
 14892                           tblptru	equ	0xFF8
 14893                           tblptrh	equ	0xFF7
 14894                           tblptrl	equ	0xFF6
 14895                           tablat	equ	0xFF5
 14896                           prodh	equ	0xFF4
 14897                           prodl	equ	0xFF3
 14898                           intcon	equ	0xFF2
 14899                           intcon2	equ	0xFF1
 14900                           intcon3	equ	0xFF0
 14901                           postinc0	equ	0xFEE
 14902                           wreg	equ	0xFE8
 14903                           indf1	equ	0xFE7
 14904                           postinc1	equ	0xFE6
 14905                           postdec1	equ	0xFE5
 14906                           fsr1h	equ	0xFE2
 14907                           fsr1l	equ	0xFE1
 14908                           indf2	equ	0xFDF
 14909                           postinc2	equ	0xFDE
 14910                           postdec2	equ	0xFDD
 14911                           fsr2h	equ	0xFDA
 14912                           fsr2l	equ	0xFD9
 14913                           status	equ	0xFD8
 14914                           
 14915 ;; *************** function _memset *****************
 14916 ;; Defined at:
 14917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;  p1              2    0[BANK0 ] PTR void 
 14920 ;;		 -> LCDText(33), 
 14921 ;;  c               2    2[BANK0 ] int 
 14922 ;;  n               2    4[BANK0 ] unsigned int 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14925 ;;		 -> LCDText(33), 
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  2    0[BANK0 ] PTR void 
 14928 ;; Registers used:
 14929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14930 ;; Tracked objects:
 14931 ;;		On entry : F/0
 14932 ;;		On exit  : F/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14935 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14938 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14939 ;;Total ram usage:        8 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    5
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_LCD_Erase
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text70
 14950  012834                     __ptext70:
 14951                           	opt stack 0
 14952  012834                     _memset:
 14953                           	opt stack 22
 14954                           
 14955                           ; BSR set to: 0
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;incstack = 0
 14959  012834  C060  F066         	movff	memset@p1,memset@p
 14960  012838  C061  F067         	movff	memset@p1+1,memset@p+1
 14961  01283C  D008               	goto	l4972
 14962  01283E                     l4968:
 14963                           
 14964                           ; BSR set to: 0
 14965  01283E  C066  FFD9         	movff	memset@p,fsr2l
 14966  012842  C067  FFDA         	movff	memset@p+1,fsr2h
 14967  012846  C062  FFDF         	movff	memset@c,indf2
 14968                           
 14969                           ; BSR set to: 0
 14970  01284A  4B66               	infsnz	memset@p& (0+255),f,b
 14971  01284C  2B67               	incf	(memset@p+1)& (0+255),f,b
 14972  01284E                     l4972:
 14973                           
 14974                           ; BSR set to: 0
 14975  01284E  0764               	decf	memset@n& (0+255),f,b
 14976  012850  A0D8               	btfss	status,0,c
 14977  012852  0765               	decf	(memset@n+1)& (0+255),f,b
 14978  012854  2964               	incf	memset@n& (0+255),w,b
 14979  012856  E1F3               	bnz	l4968
 14980  012858  2965               	incf	(memset@n+1)& (0+255),w,b
 14981  01285A  E1F1               	bnz	l4968
 14982                           
 14983                           ; BSR set to: 0
 14984  01285C  0012               	return		;funcret
 14985  01285E                     __end_of_memset:
 14986                           	opt stack 0
 14987                           tblptru	equ	0xFF8
 14988                           tblptrh	equ	0xFF7
 14989                           tblptrl	equ	0xFF6
 14990                           tablat	equ	0xFF5
 14991                           prodh	equ	0xFF4
 14992                           prodl	equ	0xFF3
 14993                           intcon	equ	0xFF2
 14994                           intcon2	equ	0xFF1
 14995                           intcon3	equ	0xFF0
 14996                           postinc0	equ	0xFEE
 14997                           wreg	equ	0xFE8
 14998                           indf1	equ	0xFE7
 14999                           postinc1	equ	0xFE6
 15000                           postdec1	equ	0xFE5
 15001                           fsr1h	equ	0xFE2
 15002                           fsr1l	equ	0xFE1
 15003                           indf2	equ	0xFDF
 15004                           postinc2	equ	0xFDE
 15005                           postdec2	equ	0xFDD
 15006                           fsr2h	equ	0xFDA
 15007                           fsr2l	equ	0xFD9
 15008                           status	equ	0xFD8
 15009                           
 15010 ;; *************** function _LCDInitWrite *****************
 15011 ;; Defined at:
 15012 ;;		line 96 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;  v               1    wreg     unsigned char 
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;  v               1    3[BANK0 ] unsigned char 
 15017 ;; Return value:  Size  Location     Type
 15018 ;;                  1    wreg      void 
 15019 ;; Registers used:
 15020 ;;		wreg, status,2, cstack
 15021 ;; Tracked objects:
 15022 ;;		On entry : 0/0
 15023 ;;		On exit  : 0/0
 15024 ;;		Unchanged: 0/0
 15025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;Total ram usage:        1 bytes
 15031 ;; Hardware stack levels used:    1
 15032 ;; Hardware stack levels required when called:    7
 15033 ;; This function calls:
 15034 ;;		_LCDWritePortA
 15035 ;;		_LCDWritePortB
 15036 ;; This function is called by:
 15037 ;;		_LCD_Initialize
 15038 ;;		_LCD_Erase
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text71
 15043  01259C                     __ptext71:
 15044                           	opt stack 0
 15045  01259C                     _LCDInitWrite:
 15046                           	opt stack 20
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;incstack = 0
 15050                           ;LCDInitWrite@v stored from wreg
 15051  01259C  0100               	movlb	0	; () banked
 15052  01259E  6F63               	movwf	LCDInitWrite@v& (0+255),b
 15053                           
 15054                           ;lcd.c: 98: LCDWritePortA(0);
 15055  0125A0  0E00               	movlw	0
 15056  0125A2  EC03  F093         	call	_LCDWritePortA
 15057                           
 15058                           ;lcd.c: 99: LCDWritePortB(v);
 15059  0125A6  0100               	movlb	0	; () banked
 15060  0125A8  5163               	movf	LCDInitWrite@v& (0+255),w,b
 15061  0125AA  ECE9  F092         	call	_LCDWritePortB
 15062                           
 15063                           ;lcd.c: 100: __nop();
 15064  0125AE  F000               	nop	
 15065                           
 15066                           ;lcd.c: 101: __nop();
 15067  0125B0  F000               	nop	
 15068                           
 15069                           ;lcd.c: 102: __nop();
 15070  0125B2  F000               	nop	
 15071                           
 15072                           ;lcd.c: 104: LCDWritePortA(0x40);
 15073  0125B4  0E40               	movlw	64
 15074  0125B6  EC03  F093         	call	_LCDWritePortA
 15075                           
 15076                           ;lcd.c: 105: __nop();
 15077  0125BA  F000               	nop	
 15078                           
 15079                           ;lcd.c: 106: __nop();
 15080  0125BC  F000               	nop	
 15081                           
 15082                           ;lcd.c: 107: __nop();
 15083  0125BE  F000               	nop	
 15084                           
 15085                           ;lcd.c: 108: __nop();
 15086  0125C0  F000               	nop	
 15087                           
 15088                           ;lcd.c: 109: __nop();
 15089  0125C2  F000               	nop	
 15090                           
 15091                           ;lcd.c: 110: __nop();
 15092  0125C4  F000               	nop	
 15093                           
 15094                           ;lcd.c: 111: __nop();
 15095  0125C6  F000               	nop	
 15096                           
 15097                           ;lcd.c: 112: __nop();
 15098  0125C8  F000               	nop	
 15099                           
 15100                           ;lcd.c: 113: __nop();
 15101  0125CA  F000               	nop	
 15102                           
 15103                           ;lcd.c: 114: LCDWritePortA(0);
 15104  0125CC  0E00               	movlw	0
 15105  0125CE  EF03  F093         	goto	_LCDWritePortA
 15106  0125D2                     __end_of_LCDInitWrite:
 15107                           	opt stack 0
 15108                           tblptru	equ	0xFF8
 15109                           tblptrh	equ	0xFF7
 15110                           tblptrl	equ	0xFF6
 15111                           tablat	equ	0xFF5
 15112                           prodh	equ	0xFF4
 15113                           prodl	equ	0xFF3
 15114                           intcon	equ	0xFF2
 15115                           intcon2	equ	0xFF1
 15116                           intcon3	equ	0xFF0
 15117                           postinc0	equ	0xFEE
 15118                           wreg	equ	0xFE8
 15119                           indf1	equ	0xFE7
 15120                           postinc1	equ	0xFE6
 15121                           postdec1	equ	0xFE5
 15122                           fsr1h	equ	0xFE2
 15123                           fsr1l	equ	0xFE1
 15124                           indf2	equ	0xFDF
 15125                           postinc2	equ	0xFDE
 15126                           postdec2	equ	0xFDD
 15127                           fsr2h	equ	0xFDA
 15128                           fsr2l	equ	0xFD9
 15129                           status	equ	0xFD8
 15130                           
 15131 ;; *************** function _LCDWritePortB *****************
 15132 ;; Defined at:
 15133 ;;		line 84 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;  v               1    wreg     unsigned char 
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;  v               1    1[BANK0 ] unsigned char 
 15138 ;;  preRFIE         1    2[BANK0 ] unsigned char 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		wreg, status,2, cstack
 15143 ;; Tracked objects:
 15144 ;;		On entry : F/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15152 ;;Total ram usage:        2 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    6
 15155 ;; This function calls:
 15156 ;;		_SPIPut
 15157 ;; This function is called by:
 15158 ;;		_LCDInitWrite
 15159 ;;		_LCD_i_write
 15160 ;;		_LCD_d_write
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164                           	psect	text72
 15165  0125D2                     __ptext72:
 15166                           	opt stack 0
 15167  0125D2                     _LCDWritePortB:
 15168                           	opt stack 20
 15169                           
 15170                           ;incstack = 0
 15171                           ;LCDWritePortB@v stored from wreg
 15172  0125D2  6F61               	movwf	LCDWritePortB@v& (0+255),b
 15173                           
 15174                           ;lcd.c: 86: uint8_t preRFIE = INTCON3bits.INT3IE;
 15175  0125D4  0E00               	movlw	0
 15176  0125D6  BAF0               	btfsc	intcon3,5,c	;volatile
 15177  0125D8  0E01               	movlw	1
 15178  0125DA  0100               	movlb	0	; () banked
 15179  0125DC  6F62               	movwf	LCDWritePortB@preRFIE& (0+255),b
 15180                           
 15181                           ;lcd.c: 87: INTCON3bits.INT3IE = 0;
 15182  0125DE  9AF0               	bcf	intcon3,5,c	;volatile
 15183                           
 15184                           ;lcd.c: 88: (LATAbits.LATA2) = 0;
 15185  0125E0  9489               	bcf	3977,2,c	;volatile
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;lcd.c: 89: SPIPut(0x40);
 15189  0125E2  0E40               	movlw	64
 15190  0125E4  EC13  F095         	call	_SPIPut
 15191                           
 15192                           ;lcd.c: 90: SPIPut(0x13);
 15193  0125E8  0E13               	movlw	19
 15194  0125EA  EC13  F095         	call	_SPIPut
 15195                           
 15196                           ;lcd.c: 91: SPIPut(v);
 15197  0125EE  0100               	movlb	0	; () banked
 15198  0125F0  5161               	movf	LCDWritePortB@v& (0+255),w,b
 15199  0125F2  EC13  F095         	call	_SPIPut
 15200                           
 15201                           ;lcd.c: 92: (LATAbits.LATA2) = 1;
 15202  0125F6  8489               	bsf	3977,2,c	;volatile
 15203                           
 15204                           ;lcd.c: 93: INTCON3bits.INT3IE = preRFIE;
 15205  0125F8  0100               	movlb	0	; () banked
 15206  0125FA  B162               	btfsc	LCDWritePortB@preRFIE& (0+255),0,b
 15207  0125FC  D002               	bra	u3235
 15208  0125FE  9AF0               	bcf	intcon3,5,c	;volatile
 15209  012600  D001               	bra	u3236
 15210  012602                     u3235:
 15211  012602  8AF0               	bsf	intcon3,5,c	;volatile
 15212  012604                     u3236:
 15213  012604  0012               	return		;funcret
 15214  012606                     __end_of_LCDWritePortB:
 15215                           	opt stack 0
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           intcon2	equ	0xFF1
 15224                           intcon3	equ	0xFF0
 15225                           postinc0	equ	0xFEE
 15226                           wreg	equ	0xFE8
 15227                           indf1	equ	0xFE7
 15228                           postinc1	equ	0xFE6
 15229                           postdec1	equ	0xFE5
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function _LCDWritePortA *****************
 15240 ;; Defined at:
 15241 ;;		line 72 in file "../src/system_config/pic18exp_pic18f87j11_89xa/lcd.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  v               1    wreg     unsigned char 
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;  v               1    1[BANK0 ] unsigned char 
 15246 ;;  preRFIE         1    2[BANK0 ] unsigned char 
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2, cstack
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15259 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;Total ram usage:        2 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:    6
 15263 ;; This function calls:
 15264 ;;		_SPIPut
 15265 ;; This function is called by:
 15266 ;;		_LCDInitWrite
 15267 ;;		_LCD_i_write
 15268 ;;		_LCD_d_write
 15269 ;;		_LCD_Initialize
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text73
 15274  012606                     __ptext73:
 15275                           	opt stack 0
 15276  012606                     _LCDWritePortA:
 15277                           	opt stack 20
 15278                           
 15279                           ;incstack = 0
 15280                           ;LCDWritePortA@v stored from wreg
 15281  012606  0100               	movlb	0	; () banked
 15282  012608  6F61               	movwf	LCDWritePortA@v& (0+255),b
 15283                           
 15284                           ;lcd.c: 74: uint8_t preRFIE = INTCON3bits.INT3IE;
 15285  01260A  0E00               	movlw	0
 15286  01260C  BAF0               	btfsc	intcon3,5,c	;volatile
 15287  01260E  0E01               	movlw	1
 15288  012610  6F62               	movwf	LCDWritePortA@preRFIE& (0+255),b
 15289                           
 15290                           ;lcd.c: 75: INTCON3bits.INT3IE = 0;
 15291  012612  9AF0               	bcf	intcon3,5,c	;volatile
 15292                           
 15293                           ;lcd.c: 76: (LATAbits.LATA2) = 0;
 15294  012614  9489               	bcf	3977,2,c	;volatile
 15295                           
 15296                           ; BSR set to: 0
 15297                           ;lcd.c: 77: SPIPut(0x40);
 15298  012616  0E40               	movlw	64
 15299  012618  EC13  F095         	call	_SPIPut
 15300                           
 15301                           ;lcd.c: 78: SPIPut(0x12);
 15302  01261C  0E12               	movlw	18
 15303  01261E  EC13  F095         	call	_SPIPut
 15304                           
 15305                           ;lcd.c: 79: SPIPut(v);
 15306  012622  0100               	movlb	0	; () banked
 15307  012624  5161               	movf	LCDWritePortA@v& (0+255),w,b
 15308  012626  EC13  F095         	call	_SPIPut
 15309                           
 15310                           ;lcd.c: 80: (LATAbits.LATA2) = 1;
 15311  01262A  8489               	bsf	3977,2,c	;volatile
 15312                           
 15313                           ;lcd.c: 81: INTCON3bits.INT3IE = preRFIE;
 15314  01262C  0100               	movlb	0	; () banked
 15315  01262E  B162               	btfsc	LCDWritePortA@preRFIE& (0+255),0,b
 15316  012630  D002               	bra	u3225
 15317  012632  9AF0               	bcf	intcon3,5,c	;volatile
 15318  012634  D001               	bra	u3226
 15319  012636                     u3225:
 15320  012636  8AF0               	bsf	intcon3,5,c	;volatile
 15321  012638                     u3226:
 15322  012638  0012               	return		;funcret
 15323  01263A                     __end_of_LCDWritePortA:
 15324                           	opt stack 0
 15325                           tblptru	equ	0xFF8
 15326                           tblptrh	equ	0xFF7
 15327                           tblptrl	equ	0xFF6
 15328                           tablat	equ	0xFF5
 15329                           prodh	equ	0xFF4
 15330                           prodl	equ	0xFF3
 15331                           intcon	equ	0xFF2
 15332                           intcon2	equ	0xFF1
 15333                           intcon3	equ	0xFF0
 15334                           postinc0	equ	0xFEE
 15335                           wreg	equ	0xFE8
 15336                           indf1	equ	0xFE7
 15337                           postinc1	equ	0xFE6
 15338                           postdec1	equ	0xFE5
 15339                           fsr1h	equ	0xFE2
 15340                           fsr1l	equ	0xFE1
 15341                           indf2	equ	0xFDF
 15342                           postinc2	equ	0xFDE
 15343                           postdec2	equ	0xFDD
 15344                           fsr2h	equ	0xFDA
 15345                           fsr2l	equ	0xFD9
 15346                           status	equ	0xFD8
 15347                           
 15348 ;; *************** function _SPIPut *****************
 15349 ;; Defined at:
 15350 ;;		line 45 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 15351 ;; Parameters:    Size  Location     Type
 15352 ;;  v               1    wreg     unsigned char 
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;  v               1    0[BANK0 ] unsigned char 
 15355 ;;  i               1    0        unsigned char 
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		wreg
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;Total ram usage:        1 bytes
 15370 ;; Hardware stack levels used:    1
 15371 ;; Hardware stack levels required when called:    5
 15372 ;; This function calls:
 15373 ;;		Nothing
 15374 ;; This function is called by:
 15375 ;;		_RegisterSet
 15376 ;;		_RegisterRead
 15377 ;;		_WriteFIFO
 15378 ;;		_NVMRead
 15379 ;;		_NVMWrite
 15380 ;;		_EEPROM_Read
 15381 ;;		_LCDInitPortA
 15382 ;;		_LCDInitPortB
 15383 ;;		_LCDWritePortA
 15384 ;;		_LCDWritePortB
 15385 ;;		_SPIGet
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text74
 15390  012A26                     __ptext74:
 15391                           	opt stack 0
 15392  012A26                     _SPIPut:
 15393                           	opt stack 20
 15394                           
 15395                           ;incstack = 0
 15396                           ;SPIPut@v stored from wreg
 15397  012A26  0100               	movlb	0	; () banked
 15398  012A28  6F60               	movwf	SPIPut@v& (0+255),b
 15399                           
 15400                           ;spi.c: 47: uint8_t i;
 15401                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 15402  012A2A  969E               	bcf	3998,3,c	;volatile
 15403                           
 15404                           ;spi.c: 64: i = SSP1BUF;
 15405  012A2C  50C9               	movf	4041,w,c	;volatile
 15406  012A2E                     l714:
 15407                           
 15408                           ;spi.c: 67: {
 15409                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 15410  012A2E  9EC6               	bcf	4038,7,c	;volatile
 15411                           
 15412                           ;spi.c: 69: SSP1BUF = v;
 15413  012A30  C060  FFC9         	movff	SPIPut@v,4041	;volatile
 15414                           
 15415                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 15416  012A34  BEC6               	btfsc	4038,7,c	;volatile
 15417  012A36  D7FB               	goto	l714
 15418  012A38                     l716:
 15419  012A38  A69E               	btfss	3998,3,c	;volatile
 15420  012A3A  D7FE               	goto	l716
 15421                           
 15422                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 15423  012A3C  969E               	bcf	3998,3,c	;volatile
 15424  012A3E  0012               	return		;funcret
 15425  012A40                     __end_of_SPIPut:
 15426                           	opt stack 0
 15427                           tblptru	equ	0xFF8
 15428                           tblptrh	equ	0xFF7
 15429                           tblptrl	equ	0xFF6
 15430                           tablat	equ	0xFF5
 15431                           prodh	equ	0xFF4
 15432                           prodl	equ	0xFF3
 15433                           intcon	equ	0xFF2
 15434                           intcon2	equ	0xFF1
 15435                           intcon3	equ	0xFF0
 15436                           postinc0	equ	0xFEE
 15437                           wreg	equ	0xFE8
 15438                           indf1	equ	0xFE7
 15439                           postinc1	equ	0xFE6
 15440                           postdec1	equ	0xFE5
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           indf2	equ	0xFDF
 15444                           postinc2	equ	0xFDE
 15445                           postdec2	equ	0xFDD
 15446                           fsr2h	equ	0xFDA
 15447                           fsr2l	equ	0xFD9
 15448                           status	equ	0xFD8
 15449                           
 15450 ;; *************** function _DELAY_ms *****************
 15451 ;; Defined at:
 15452 ;;		line 108 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  ms              2    0[BANK0 ] unsigned int 
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  cyclesRequir    4   10[BANK0 ] long 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, status,2, status,0, prodl, prodh
 15461 ;; Tracked objects:
 15462 ;;		On entry : F/0
 15463 ;;		On exit  : F/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15469 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;Total ram usage:       14 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    5
 15473 ;; This function calls:
 15474 ;;		Nothing
 15475 ;; This function is called by:
 15476 ;;		_MiMAC_Init
 15477 ;;		_LCD_i_write
 15478 ;;		_LCD_d_write
 15479 ;;		_LCD_Initialize
 15480 ;;		_LCD_Erase
 15481 ;;		_LCDDisplay
 15482 ;;		_Process_RxMessage
 15483 ;;		_run_p2p_demo
 15484 ;;		_freezer_feature
 15485 ;; This function uses a non-reentrant model
 15486 ;;
 15487                           
 15488                           	psect	text75
 15489  01185C                     __ptext75:
 15490                           	opt stack 0
 15491  01185C                     _DELAY_ms:
 15492                           	opt stack 21
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay;
 15496                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((10000000)/4)/1000) * ms;
 15497                           
 15498                           ;incstack = 0
 15499  01185C  5160               	movf	DELAY_ms@ms& (0+255),w,b
 15500  01185E  6F62               	movwf	??_DELAY_ms& (0+255),b
 15501  011860  5161               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 15502  011862  6F63               	movwf	(??_DELAY_ms+1)& (0+255),b
 15503  011864  6B64               	clrf	(??_DELAY_ms+2)& (0+255),b
 15504  011866  6B65               	clrf	(??_DELAY_ms+3)& (0+255),b
 15505  011868  0EC4               	movlw	196
 15506  01186A  0362               	mulwf	??_DELAY_ms& (0+255),b
 15507  01186C  CFF3 F066          	movff	prodl,??_DELAY_ms+4
 15508  011870  CFF4 F067          	movff	prodh,??_DELAY_ms+5
 15509  011874  6B68               	clrf	(??_DELAY_ms+6)& (0+255),b
 15510  011876  6B69               	clrf	(??_DELAY_ms+7)& (0+255),b
 15511  011878  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15512  01187A  50F3               	movf	prodl,w,c
 15513  01187C  2767               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 15514  01187E  50F4               	movf	prodh,w,c
 15515  011880  2368               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 15516  011882  0E00               	movlw	0
 15517  011884  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15518  011886  0E09               	movlw	9
 15519  011888  0362               	mulwf	??_DELAY_ms& (0+255),b
 15520  01188A  50F3               	movf	prodl,w,c
 15521  01188C  2767               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 15522  01188E  50F4               	movf	prodh,w,c
 15523  011890  2368               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 15524  011892  0E00               	movlw	0
 15525  011894  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15526  011896  0EC4               	movlw	196
 15527  011898  0364               	mulwf	(??_DELAY_ms+2)& (0+255),b
 15528  01189A  50F3               	movf	prodl,w,c
 15529  01189C  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15530  01189E  50F4               	movf	prodh,w,c
 15531  0118A0  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15532  0118A2  0E09               	movlw	9
 15533  0118A4  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15534  0118A6  50F3               	movf	prodl,w,c
 15535  0118A8  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15536  0118AA  50F4               	movf	prodh,w,c
 15537  0118AC  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15538  0118AE  0E00               	movlw	0
 15539  0118B0  0362               	mulwf	??_DELAY_ms& (0+255),b
 15540  0118B2  50F3               	movf	prodl,w,c
 15541  0118B4  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15542  0118B6  50F4               	movf	prodh,w,c
 15543  0118B8  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15544  0118BA  0EC4               	movlw	196
 15545  0118BC  0365               	mulwf	(??_DELAY_ms+3)& (0+255),b
 15546  0118BE  50F3               	movf	prodl,w,c
 15547  0118C0  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15548  0118C2  0E09               	movlw	9
 15549  0118C4  0364               	mulwf	(??_DELAY_ms+2)& (0+255),b
 15550  0118C6  50F3               	movf	prodl,w,c
 15551  0118C8  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15552  0118CA  0E00               	movlw	0
 15553  0118CC  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15554  0118CE  50F3               	movf	prodl,w,c
 15555  0118D0  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15556  0118D2  0E00               	movlw	0
 15557  0118D4  0362               	mulwf	??_DELAY_ms& (0+255),b
 15558  0118D6  50F3               	movf	prodl,w,c
 15559  0118D8  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15560  0118DA  C066  F06A         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 15561  0118DE  C067  F06B         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 15562  0118E2  C068  F06C         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 15563  0118E6  C069  F06D         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 15567  0118EA  0E56               	movlw	86
 15568  0118EC  276A               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 15569  0118EE  0EFF               	movlw	255
 15570  0118F0  236B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 15571  0118F2  236C               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 15572  0118F4  236D               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 15576  0118F6  BF6D               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 15577  0118F8  0CFF               	retlw	255
 15578  0118FA  516D               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 15579  0118FC  116C               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 15580  0118FE  116B               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 15581  011900  E10C               	bnz	l615
 15582  011902  0EC4               	movlw	196
 15583  011904  5D6A               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 15584  011906  E209               	bc	l615
 15585  011908  0012               	return	
 15586  01190A                     l616:
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;delay.c: 128: {
 15590                           ;delay.c: 129: __nop();
 15591  01190A  F000               	nop	
 15592                           
 15593                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 15594  01190C  0ED9               	movlw	217
 15595  01190E  0100               	movlb	0	; () banked
 15596  011910  276A               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 15597  011912  0EFF               	movlw	255
 15598  011914  236B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 15599  011916  236C               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 15600  011918  236D               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 15601  01191A                     l615:
 15602                           
 15603                           ; BSR set to: 0
 15604  01191A  BF6D               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 15605  01191C  0012               	return	
 15606  01191E  516D               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 15607  011920  116C               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 15608  011922  116B               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 15609  011924  E1F2               	bnz	l616
 15610  011926  056A               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 15611  011928  E2F0               	bc	l616
 15612                           
 15613                           ; BSR set to: 0
 15614  01192A  0012               	return		;funcret
 15615  01192C                     __end_of_DELAY_ms:
 15616                           	opt stack 0
 15617                           tblptru	equ	0xFF8
 15618                           tblptrh	equ	0xFF7
 15619                           tblptrl	equ	0xFF6
 15620                           tablat	equ	0xFF5
 15621                           prodh	equ	0xFF4
 15622                           prodl	equ	0xFF3
 15623                           intcon	equ	0xFF2
 15624                           intcon2	equ	0xFF1
 15625                           intcon3	equ	0xFF0
 15626                           postinc0	equ	0xFEE
 15627                           wreg	equ	0xFE8
 15628                           indf1	equ	0xFE7
 15629                           postinc1	equ	0xFE6
 15630                           postdec1	equ	0xFE5
 15631                           fsr1h	equ	0xFE2
 15632                           fsr1l	equ	0xFE1
 15633                           indf2	equ	0xFDF
 15634                           postinc2	equ	0xFDE
 15635                           postdec2	equ	0xFDD
 15636                           fsr2h	equ	0xFDA
 15637                           fsr2l	equ	0xFD9
 15638                           status	equ	0xFD8
 15639                           
 15640 ;; *************** function _CONSOLE_PutString *****************
 15641 ;; Defined at:
 15642 ;;		line 99 in file "../src/system_config/pic18exp_pic18f87j11_89xa/console.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  str             2    1[BANK0 ] PTR unsigned char 
 15645 ;;		 -> STR_39(19), STR_38(46), STR_37(24), STR_36(3), 
 15646 ;;		 -> STR_35(7), STR_34(26), STR_33(28), STR_32(9), 
 15647 ;;		 -> STR_31(3), STR_30(29), STR_28(3), STR_27(30), 
 15648 ;;		 -> STR_25(5), STR_24(60), STR_23(66), STR_22(66), 
 15649 ;;		 -> STR_21(62), STR_20(64), STR_19(23), STR_18(31), 
 15650 ;;		 -> STR_17(60), STR_13(3), STR_12(5), STR_11(3), 
 15651 ;;		 -> STR_10(14), STR_9(50), STR_8(3), STR_7(5), 
 15652 ;;		 -> STR_6(3), STR_5(14), STR_4(48), STR_3(12), 
 15653 ;;		 -> STR_2(19), STR_1(10), 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;  c               1    3[BANK0 ] unsigned char 
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  1    wreg      void 
 15658 ;; Registers used:
 15659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15660 ;; Tracked objects:
 15661 ;;		On entry : F/0
 15662 ;;		On exit  : F/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15668 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15669 ;;Total ram usage:        3 bytes
 15670 ;; Hardware stack levels used:    1
 15671 ;; Hardware stack levels required when called:    6
 15672 ;; This function calls:
 15673 ;;		_CONSOLE_Put
 15674 ;; This function is called by:
 15675 ;;		_MiApp_ProtocolInit
 15676 ;;		_DumpConnection
 15677 ;;		_DemoOutput_Greeting
 15678 ;;		_DemoOutput_Channel
 15679 ;;		_DemoOutput_HandleMessage
 15680 ;;		_DemoOutput_ChannelError
 15681 ;;		_DemoOutput_UnicastFail
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text76
 15686  0128FA                     __ptext76:
 15687                           	opt stack 0
 15688  0128FA                     _CONSOLE_PutString:
 15689                           	opt stack 20
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;console.c: 101: uint8_t c;
 15693                           ;console.c: 103: while( c = *str++ )
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;incstack = 0
 15697  0128FA  D003               	goto	l5796
 15698  0128FC                     l5794:
 15699                           
 15700                           ; BSR set to: 0
 15701                           ;console.c: 104: CONSOLE_Put(c);
 15702  0128FC  5163               	movf	CONSOLE_PutString@c& (0+255),w,b
 15703  0128FE  EC61  F095         	call	_CONSOLE_Put
 15704  012902                     l5796:
 15705  012902  C061  FFF6         	movff	CONSOLE_PutString@str,tblptrl
 15706  012906  C062  FFF7         	movff	CONSOLE_PutString@str+1,tblptrh
 15707  01290A  0100               	movlb	0	; () banked
 15708  01290C  4B61               	infsnz	CONSOLE_PutString@str& (0+255),f,b
 15709  01290E  2B62               	incf	(CONSOLE_PutString@str+1)& (0+255),f,b
 15710  012910                     	if	0	;tblptru may be non-zero
 15711  012910                     	endif
 15712  012910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15713  012910  0E00               	movlw	low (__mediumconst shr (0+16))
 15714  012912  6EF8               	movwf	tblptru,c
 15715  012914                     	endif
 15716  012914  0008               	tblrd		*
 15717  012916  CFF5 F063          	movff	tablat,CONSOLE_PutString@c
 15718  01291A  5163               	movf	CONSOLE_PutString@c& (0+255),w,b
 15719  01291C  E1EF               	bnz	l5794
 15720                           
 15721                           ; BSR set to: 0
 15722  01291E  0012               	return		;funcret
 15723  012920                     __end_of_CONSOLE_PutString:
 15724                           	opt stack 0
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           intcon	equ	0xFF2
 15732                           intcon2	equ	0xFF1
 15733                           intcon3	equ	0xFF0
 15734                           postinc0	equ	0xFEE
 15735                           wreg	equ	0xFE8
 15736                           indf1	equ	0xFE7
 15737                           postinc1	equ	0xFE6
 15738                           postdec1	equ	0xFE5
 15739                           fsr1h	equ	0xFE2
 15740                           fsr1l	equ	0xFE1
 15741                           indf2	equ	0xFDF
 15742                           postinc2	equ	0xFDE
 15743                           postdec2	equ	0xFDD
 15744                           fsr2h	equ	0xFDA
 15745                           fsr2l	equ	0xFD9
 15746                           status	equ	0xFD8
 15747                           
 15748 ;; *************** function _CONSOLE_Put *****************
 15749 ;; Defined at:
 15750 ;;		line 124 in file "../src/system_config/pic18exp_pic18f87j11_89xa/console.c"
 15751 ;; Parameters:    Size  Location     Type
 15752 ;;  c               1    wreg     unsigned char 
 15753 ;; Auto vars:     Size  Location     Type
 15754 ;;  c               1    0[BANK0 ] unsigned char 
 15755 ;; Return value:  Size  Location     Type
 15756 ;;                  1    wreg      void 
 15757 ;; Registers used:
 15758 ;;		wreg
 15759 ;; Tracked objects:
 15760 ;;		On entry : F/0
 15761 ;;		On exit  : 0/0
 15762 ;;		Unchanged: 0/0
 15763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;Total ram usage:        1 bytes
 15769 ;; Hardware stack levels used:    1
 15770 ;; Hardware stack levels required when called:    5
 15771 ;; This function calls:
 15772 ;;		Nothing
 15773 ;; This function is called by:
 15774 ;;		_CONSOLE_PutString
 15775 ;;		_CONSOLE_PrintHex
 15776 ;;		_CONSOLE_PrintDec
 15777 ;;		_DemoOutput_HandleMessage
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text77
 15782  012AC2                     __ptext77:
 15783                           	opt stack 0
 15784  012AC2                     _CONSOLE_Put:
 15785                           	opt stack 20
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;incstack = 0
 15789                           ;CONSOLE_Put@c stored from wreg
 15790  012AC2  6F60               	movwf	CONSOLE_Put@c& (0+255),b
 15791  012AC4                     l582:
 15792  012AC4  A2AD               	btfss	4013,1,c	;volatile
 15793  012AC6  D7FE               	goto	l582
 15794                           
 15795                           ;console.c: 128: TXREG = c;
 15796  012AC8  C060  FFAE         	movff	CONSOLE_Put@c,4014	;volatile
 15797  012ACC  0012               	return		;funcret
 15798  012ACE                     __end_of_CONSOLE_Put:
 15799                           	opt stack 0
 15800                           tblptru	equ	0xFF8
 15801                           tblptrh	equ	0xFF7
 15802                           tblptrl	equ	0xFF6
 15803                           tablat	equ	0xFF5
 15804                           prodh	equ	0xFF4
 15805                           prodl	equ	0xFF3
 15806                           intcon	equ	0xFF2
 15807                           intcon2	equ	0xFF1
 15808                           intcon3	equ	0xFF0
 15809                           postinc0	equ	0xFEE
 15810                           wreg	equ	0xFE8
 15811                           indf1	equ	0xFE7
 15812                           postinc1	equ	0xFE6
 15813                           postdec1	equ	0xFE5
 15814                           fsr1h	equ	0xFE2
 15815                           fsr1l	equ	0xFE1
 15816                           indf2	equ	0xFDF
 15817                           postinc2	equ	0xFDE
 15818                           postdec2	equ	0xFDD
 15819                           fsr2h	equ	0xFDA
 15820                           fsr2l	equ	0xFD9
 15821                           status	equ	0xFD8
 15822                           
 15823 ;; *************** function _CONSOLE_Initialize *****************
 15824 ;; Defined at:
 15825 ;;		line 67 in file "../src/system_config/pic18exp_pic18f87j11_89xa/console.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		wreg, status,2
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15843 ;;Total ram usage:        0 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; Hardware stack levels required when called:    5
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_main
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text78
 15854  012A92                     __ptext78:
 15855                           	opt stack 0
 15856  012A92                     _CONSOLE_Initialize:
 15857                           	opt stack 25
 15858                           
 15859                           ;console.c: 70: TRISCbits.TRISC7 = 1;
 15860                           
 15861                           ;incstack = 0
 15862  012A92  8E94               	bsf	3988,7,c	;volatile
 15863                           
 15864                           ;console.c: 71: TRISCbits.TRISC6 = 0;
 15865  012A94  9C94               	bcf	3988,6,c	;volatile
 15866                           
 15867                           ;console.c: 73: TXSTA = 0x24;
 15868  012A96  0E24               	movlw	36
 15869  012A98  6EAD               	movwf	4013,c	;volatile
 15870                           
 15871                           ;console.c: 77: RCSTA = 0x90;
 15872  012A9A  0E90               	movlw	144
 15873  012A9C  6EAC               	movwf	4012,c	;volatile
 15874                           
 15875                           ;console.c: 78: SPBRG = ( (((10000000)/19200)/16) - 1);
 15876  012A9E  0E1F               	movlw	31
 15877  012AA0  6EB0               	movwf	4016,c	;volatile
 15878  012AA2  0C1F               	retlw	31	;funcret
 15879  012AA4                     __end_of_CONSOLE_Initialize:
 15880                           	opt stack 0
 15881                           tblptru	equ	0xFF8
 15882                           tblptrh	equ	0xFF7
 15883                           tblptrl	equ	0xFF6
 15884                           tablat	equ	0xFF5
 15885                           prodh	equ	0xFF4
 15886                           prodl	equ	0xFF3
 15887                           intcon	equ	0xFF2
 15888                           intcon2	equ	0xFF1
 15889                           intcon3	equ	0xFF0
 15890                           postinc0	equ	0xFEE
 15891                           wreg	equ	0xFE8
 15892                           indf1	equ	0xFE7
 15893                           postinc1	equ	0xFE6
 15894                           postdec1	equ	0xFE5
 15895                           fsr1h	equ	0xFE2
 15896                           fsr1l	equ	0xFE1
 15897                           indf2	equ	0xFDF
 15898                           postinc2	equ	0xFDE
 15899                           postdec2	equ	0xFDD
 15900                           fsr2h	equ	0xFDA
 15901                           fsr2l	equ	0xFD9
 15902                           status	equ	0xFD8
 15903                           
 15904 ;; *************** function _high_isr *****************
 15905 ;; Defined at:
 15906 ;;		line 1240 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;  ackInfoIndex    1   49[COMRAM] unsigned char 
 15911 ;;  i               1   52[COMRAM] unsigned char 
 15912 ;;  fifo_stat       1   42[COMRAM] unsigned char 
 15913 ;;  ackPacket       4   43[COMRAM] unsigned char [4]
 15914 ;;  counter         2   40[COMRAM] unsigned int 
 15915 ;;  BankIndex       1   51[COMRAM] unsigned char 
 15916 ;;  PacketLen       1   50[COMRAM] unsigned char 
 15917 ;;  RxPacketPtr     1   48[COMRAM] unsigned char 
 15918 ;;  bAck            1   47[COMRAM] unsigned char 
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 0/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15929 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15930 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15931 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15932 ;;Total ram usage:       23 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; Hardware stack levels required when called:    4
 15935 ;; This function calls:
 15936 ;;		_UserInterruptHandler
 15937 ;;		i2_MiWi_TickGet
 15938 ;;		i2_RegisterRead
 15939 ;;		i2_SPIGet
 15940 ;;		i2_TxPacket
 15941 ;; This function is called by:
 15942 ;;		Interrupt level 2
 15943 ;; This function uses a non-reentrant model
 15944 ;;
 15945                           
 15946                           	psect	intcode
 15947  000008                     __pintcode:
 15948                           	opt stack 0
 15949  000008                     _high_isr:
 15950                           	opt stack 15
 15951                           
 15952                           ;incstack = 0
 15953  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15954  00000A  CFE1 F023          	movff	fsr1l,??_high_isr+4
 15955  00000E  CFE2 F024          	movff	fsr1h,??_high_isr+5
 15956  000012  CFD9 F025          	movff	fsr2l,??_high_isr+6
 15957  000016  CFDA F026          	movff	fsr2h,??_high_isr+7
 15958  00001A  CFF3 F027          	movff	prodl,??_high_isr+8
 15959  00001E  CFF4 F028          	movff	prodh,??_high_isr+9
 15960                           
 15961                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT3IF && INTCON3bits.INT3IE )
 15962  000022  B4F0               	btfsc	intcon3,2,c	;volatile
 15963  000024  AAF0               	btfss	intcon3,5,c	;volatile
 15964  000026  D1A7               	goto	i2l7186
 15965                           
 15966                           ;drv_mrf_miwi_89xa.c: 1256: {
 15967                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 15968  000028  0E60               	movlw	96
 15969  00002A  1836               	xorwf	_RF_Mode,w,c
 15970  00002C  E001 D19E          	bnz	i2l7180
 15971                           
 15972                           ;drv_mrf_miwi_89xa.c: 1258: {
 15973                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 15974                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 15975                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 15976                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 15977                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 15978                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 15979                           ;drv_mrf_miwi_89xa.c: 1267: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 15980  000030  0E28               	movlw	40
 15981  000032  ECDA  F093         	call	i2_RegisterRead
 15982  000036  6E1F               	movwf	??_high_isr& (0+255),c
 15983  000038  90D8               	bcf	status,0,c
 15984  00003A  301F               	rrcf	??_high_isr,w,c
 15985  00003C  6E37               	movwf	_RSSIVal,c
 15986                           
 15987                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 15988  00003E  C037  F0D3         	movff	_RSSIVal,_RSSILock
 15989                           
 15990                           ;drv_mrf_miwi_89xa.c: 1272: LATCbits.LATC2 = 0;
 15991  000042  948B               	bcf	3979,2,c	;volatile
 15992                           
 15993                           ;drv_mrf_miwi_89xa.c: 1273: PacketLen = SPIGet();
 15994  000044  EC77  F095         	call	i2_SPIGet	;wreg free
 15995  000048  6E33               	movwf	high_isr@PacketLen,c
 15996                           
 15997                           ;drv_mrf_miwi_89xa.c: 1274: LATCbits.LATC2 = 1;
 15998  00004A  848B               	bsf	3979,2,c	;volatile
 15999                           
 16000                           ;drv_mrf_miwi_89xa.c: 1277: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 16001  00004C  6A34               	clrf	high_isr@BankIndex,c
 16002  00004E                     i2l7030:
 16003                           
 16004                           ;drv_mrf_miwi_89xa.c: 1278: {
 16005                           ;drv_mrf_miwi_89xa.c: 1279: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 16006  00004E  5034               	movf	high_isr@BankIndex,w,c
 16007  000050  0D34               	mullw	52
 16008  000052  0E00               	movlw	low _RxPacket
 16009  000054  24F3               	addwf	prodl,w,c
 16010  000056  6ED9               	movwf	fsr2l,c
 16011  000058  0E02               	movlw	high _RxPacket
 16012  00005A  20F4               	addwfc	prodh,w,c
 16013  00005C  6EDA               	movwf	fsr2h,c
 16014  00005E  0102               	movlb	2	; () banked
 16015  000060  A0DF               	btfss	indf2,0,c
 16016  000062  D004               	goto	i2l7038
 16017                           
 16018                           ; BSR set to: 2
 16019  000064  2A34               	incf	high_isr@BankIndex,f,c
 16020                           
 16021                           ; BSR set to: 2
 16022  000066  0E01               	movlw	1
 16023  000068  6434               	cpfsgt	high_isr@BankIndex,c
 16024  00006A  D7F1               	goto	i2l7030
 16025  00006C                     i2l7038:
 16026                           
 16027                           ; BSR set to: 2
 16028                           ;drv_mrf_miwi_89xa.c: 1282: }
 16029                           ;drv_mrf_miwi_89xa.c: 1283: }
 16030                           ;drv_mrf_miwi_89xa.c: 1286: if( PacketLen == 2 )
 16031  00006C  0E02               	movlw	2
 16032  00006E  1833               	xorwf	high_isr@PacketLen,w,c
 16033  000070  E103               	bnz	i2l176
 16034                           
 16035                           ; BSR set to: 2
 16036                           ;drv_mrf_miwi_89xa.c: 1287: {
 16037                           ;drv_mrf_miwi_89xa.c: 1288: bAck = 1;
 16038  000072  0E01               	movlw	1
 16039  000074  6E30               	movwf	high_isr@bAck,c
 16040                           
 16041                           ;drv_mrf_miwi_89xa.c: 1289: }
 16042  000076  D001               	goto	i2l7042
 16043  000078                     i2l176:
 16044                           
 16045                           ; BSR set to: 2
 16046                           ;drv_mrf_miwi_89xa.c: 1290: else
 16047                           ;drv_mrf_miwi_89xa.c: 1291: {
 16048                           ;drv_mrf_miwi_89xa.c: 1292: bAck = 0;
 16049  000078  6A30               	clrf	high_isr@bAck,c
 16050  00007A                     i2l7042:
 16051                           
 16052                           ; BSR set to: 2
 16053                           ;drv_mrf_miwi_89xa.c: 1293: }
 16054                           ;drv_mrf_miwi_89xa.c: 1296: if( PacketLen >= (30+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 16055  00007A  0E32               	movlw	50
 16056  00007C  6033               	cpfslt	high_isr@PacketLen,c
 16057  00007E  D007               	goto	i2l7050
 16058                           
 16059                           ; BSR set to: 2
 16060  000080  5033               	movf	high_isr@PacketLen,w,c
 16061  000082  E005               	bz	i2l7050
 16062                           
 16063                           ; BSR set to: 2
 16064  000084  0E01               	movlw	1
 16065  000086  6434               	cpfsgt	high_isr@BankIndex,c
 16066  000088  D011               	goto	i2l178
 16067                           
 16068                           ; BSR set to: 2
 16069  00008A  5030               	movf	high_isr@bAck,w,c
 16070  00008C  E10F               	bnz	i2l178
 16071  00008E                     i2l7050:
 16072                           
 16073                           ;drv_mrf_miwi_89xa.c: 1299: {
 16074                           ;drv_mrf_miwi_89xa.c: 1300: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 16075  00008E  0E1A               	movlw	26
 16076  000090  ECDA  F093         	call	i2_RegisterRead
 16077  000094  D007               	goto	L8
 16078  000096                     i2l183:
 16079                           
 16080                           ;drv_mrf_miwi_89xa.c: 1302: {
 16081                           ;drv_mrf_miwi_89xa.c: 1303: LATCbits.LATC2 = 0;
 16082  000096  948B               	bcf	3979,2,c	;volatile
 16083                           
 16084                           ;drv_mrf_miwi_89xa.c: 1304: SPIGet();
 16085  000098  EC77  F095         	call	i2_SPIGet	;wreg free
 16086                           
 16087                           ;drv_mrf_miwi_89xa.c: 1305: LATCbits.LATC2 = 1;
 16088  00009C  848B               	bsf	3979,2,c	;volatile
 16089                           
 16090                           ;drv_mrf_miwi_89xa.c: 1306: fifo_stat = RegisterRead(0x1A00>>8);
 16091  00009E  0E1A               	movlw	26
 16092  0000A0  ECDA  F093         	call	i2_RegisterRead
 16093  0000A4                     L8:
 16094  0000A4  6E2B               	movwf	high_isr@fifo_stat,c
 16095  0000A6  B22B               	btfsc	high_isr@fifo_stat,1,c
 16096  0000A8  D7F6               	goto	i2l183
 16097  0000AA  D163               	goto	i2l7182
 16098  0000AC                     i2l178:
 16099                           
 16100                           ; BSR set to: 2
 16101                           ;drv_mrf_miwi_89xa.c: 1310: }
 16102                           ;drv_mrf_miwi_89xa.c: 1312: RxPacketPtr = 0;
 16103  0000AC  6A31               	clrf	high_isr@RxPacketPtr,c
 16104                           
 16105                           ;drv_mrf_miwi_89xa.c: 1313: counter = PacketLen;
 16106  0000AE  C033  F029         	movff	high_isr@PacketLen,high_isr@counter
 16107  0000B2  6A2A               	clrf	high_isr@counter+1,c
 16108                           
 16109                           ;drv_mrf_miwi_89xa.c: 1315: while(counter >= 1)
 16110  0000B4  D157               	goto	i2l7178
 16111  0000B6                     i2l7060:
 16112                           
 16113                           ;drv_mrf_miwi_89xa.c: 1318: if(1)
 16114  0000B6  0629               	decf	high_isr@counter,f,c
 16115  0000B8  A0D8               	btfss	status,0,c
 16116  0000BA  062A               	decf	high_isr@counter+1,f,c
 16117                           
 16118                           ;drv_mrf_miwi_89xa.c: 1319: {
 16119                           ;drv_mrf_miwi_89xa.c: 1321: if( bAck )
 16120  0000BC  5030               	movf	high_isr@bAck,w,c
 16121  0000BE  E008               	bz	i2l189
 16122                           
 16123                           ;drv_mrf_miwi_89xa.c: 1322: {
 16124                           ;drv_mrf_miwi_89xa.c: 1323: LATCbits.LATC2 = 0;
 16125  0000C0  948B               	bcf	3979,2,c	;volatile
 16126                           
 16127                           ;drv_mrf_miwi_89xa.c: 1324: ackPacket[RxPacketPtr++] = SPIGet();
 16128  0000C2  5031               	movf	high_isr@RxPacketPtr,w,c
 16129  0000C4  0F2C               	addlw	low high_isr@ackPacket
 16130  0000C6  6ED9               	movwf	fsr2l,c
 16131  0000C8  6ADA               	clrf	fsr2h,c
 16132  0000CA  EC77  F095         	call	i2_SPIGet	;wreg free
 16133  0000CE  D016               	goto	L10
 16134  0000D0                     i2l189:
 16135                           
 16136                           ;drv_mrf_miwi_89xa.c: 1328: else
 16137                           ;drv_mrf_miwi_89xa.c: 1329: {
 16138                           ;drv_mrf_miwi_89xa.c: 1330: LATCbits.LATC2 = 0;
 16139  0000D0  948B               	bcf	3979,2,c	;volatile
 16140                           
 16141                           ;drv_mrf_miwi_89xa.c: 1331: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 16142  0000D2  5034               	movf	high_isr@BankIndex,w,c
 16143  0000D4  0D34               	mullw	52
 16144  0000D6  0E00               	movlw	low _RxPacket
 16145  0000D8  6E1F               	movwf	??_high_isr& (0+255),c
 16146  0000DA  0E02               	movlw	high _RxPacket
 16147  0000DC  6E20               	movwf	(??_high_isr+1)& (0+255),c
 16148  0000DE  2A1F               	incf	??_high_isr,f,c
 16149  0000E0  0E00               	movlw	0
 16150  0000E2  2220               	addwfc	??_high_isr+1,f,c
 16151  0000E4  50F3               	movf	prodl,w,c
 16152  0000E6  261F               	addwf	??_high_isr,f,c
 16153  0000E8  50F4               	movf	prodh,w,c
 16154  0000EA  2220               	addwfc	??_high_isr+1,f,c
 16155  0000EC  5031               	movf	high_isr@RxPacketPtr,w,c
 16156  0000EE  241F               	addwf	??_high_isr,w,c
 16157  0000F0  6ED9               	movwf	fsr2l,c
 16158  0000F2  0E00               	movlw	0
 16159  0000F4  2020               	addwfc	??_high_isr+1,w,c
 16160  0000F6  6EDA               	movwf	fsr2h,c
 16161  0000F8  EC77  F095         	call	i2_SPIGet	;wreg free
 16162  0000FC                     L10:
 16163  0000FC  6EDF               	movwf	indf2,c
 16164  0000FE  2A31               	incf	high_isr@RxPacketPtr,f,c
 16165                           
 16166                           ;drv_mrf_miwi_89xa.c: 1332: LATCbits.LATC2 = 1;
 16167  000100  848B               	bsf	3979,2,c	;volatile
 16168                           
 16169                           ;drv_mrf_miwi_89xa.c: 1333: }
 16170                           ;drv_mrf_miwi_89xa.c: 1336: if( RxPacketPtr >= PacketLen )
 16171  000102  5033               	movf	high_isr@PacketLen,w,c
 16172  000104  5C31               	subwf	high_isr@RxPacketPtr,w,c
 16173  000106  E201 D12D          	bnc	i2l7178
 16174                           
 16175                           ;drv_mrf_miwi_89xa.c: 1337: {
 16176                           ;drv_mrf_miwi_89xa.c: 1338: uint8_t i;
 16177                           ;drv_mrf_miwi_89xa.c: 1340: if( bAck )
 16178  00010A  5030               	movf	high_isr@bAck,w,c
 16179  00010C  E024               	bz	i2l192
 16180                           
 16181                           ;drv_mrf_miwi_89xa.c: 1341: {
 16182                           ;drv_mrf_miwi_89xa.c: 1343: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 16183  00010E  502C               	movf	high_isr@ackPacket,w,c
 16184  000110  0B03               	andlw	3
 16185  000112  0A02               	xorlw	2
 16186  000114  E108               	bnz	i2l7092
 16187                           
 16188                           ;drv_mrf_miwi_89xa.c: 1344: {
 16189                           ;drv_mrf_miwi_89xa.c: 1345: if( ackPacket[1] == TxMACSeq )
 16190  000116  5038               	movf	_TxMACSeq,w,c
 16191  000118  182D               	xorwf	high_isr@ackPacket+1,w,c
 16192  00011A  E001 D12A          	bnz	i2l7182
 16193                           
 16194                           ;drv_mrf_miwi_89xa.c: 1346: {
 16195                           ;drv_mrf_miwi_89xa.c: 1347: hasAck = 1;
 16196  00011E  0E01               	movlw	1
 16197  000120  0100               	movlb	0	; () banked
 16198  000122  6FDA               	movwf	_hasAck& (0+255),b	;volatile
 16199                           
 16200                           ;drv_mrf_miwi_89xa.c: 1350: goto RETURN_HERE;
 16201  000124  D126               	goto	i2l7182
 16202  000126                     i2l7092:
 16203                           
 16204                           ;drv_mrf_miwi_89xa.c: 1352: else
 16205                           ;drv_mrf_miwi_89xa.c: 1354: if( BankIndex >= 2 )
 16206  000126  0E01               	movlw	1
 16207  000128  6434               	cpfsgt	high_isr@BankIndex,c
 16208  00012A  D001               	goto	i2l7096
 16209  00012C  D7B0               	goto	i2l7050
 16210  00012E                     i2l7096:
 16211                           
 16212                           ;drv_mrf_miwi_89xa.c: 1358: }
 16213                           ;drv_mrf_miwi_89xa.c: 1359: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 16214  00012E  5034               	movf	high_isr@BankIndex,w,c
 16215  000130  0D34               	mullw	52
 16216  000132  0E01               	movlw	low (_RxPacket+1)
 16217  000134  24F3               	addwf	prodl,w,c
 16218  000136  6ED9               	movwf	fsr2l,c
 16219  000138  0E02               	movlw	high (_RxPacket+1)
 16220  00013A  20F4               	addwfc	prodh,w,c
 16221  00013C  6EDA               	movwf	fsr2h,c
 16222  00013E  C02C  FFDF         	movff	high_isr@ackPacket,indf2
 16223                           
 16224                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 16225  000142  5034               	movf	high_isr@BankIndex,w,c
 16226  000144  0D34               	mullw	52
 16227  000146  0E02               	movlw	low (_RxPacket+2)
 16228  000148  24F3               	addwf	prodl,w,c
 16229  00014A  6ED9               	movwf	fsr2l,c
 16230  00014C  0E02               	movlw	high (_RxPacket+2)
 16231  00014E  20F4               	addwfc	prodh,w,c
 16232  000150  6EDA               	movwf	fsr2h,c
 16233  000152  C02D  FFDF         	movff	high_isr@ackPacket+1,indf2
 16234  000156                     i2l192:
 16235                           
 16236                           ;drv_mrf_miwi_89xa.c: 1362: }
 16237                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].PayloadLen = PacketLen;
 16238  000156  5034               	movf	high_isr@BankIndex,w,c
 16239  000158  0D34               	mullw	52
 16240  00015A  0E33               	movlw	low (_RxPacket+51)
 16241  00015C  24F3               	addwf	prodl,w,c
 16242  00015E  6ED9               	movwf	fsr2l,c
 16243  000160  0E02               	movlw	high (_RxPacket+51)
 16244  000162  20F4               	addwfc	prodh,w,c
 16245  000164  6EDA               	movwf	fsr2h,c
 16246  000166  C033  FFDF         	movff	high_isr@PacketLen,indf2
 16247                           
 16248                           ;drv_mrf_miwi_89xa.c: 1381: {
 16249                           ;drv_mrf_miwi_89xa.c: 1382: uint8_t ackInfoIndex = 0xFF;
 16250  00016A  6832               	setf	high_isr@ackInfoIndex,c
 16251                           
 16252                           ;drv_mrf_miwi_89xa.c: 1384: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 16253  00016C  5034               	movf	high_isr@BankIndex,w,c
 16254  00016E  0D34               	mullw	52
 16255  000170  0E01               	movlw	low (_RxPacket+1)
 16256  000172  24F3               	addwf	prodl,w,c
 16257  000174  6ED9               	movwf	fsr2l,c
 16258  000176  0E02               	movlw	high (_RxPacket+1)
 16259  000178  20F4               	addwfc	prodh,w,c
 16260  00017A  6EDA               	movwf	fsr2h,c
 16261  00017C  ACDF               	btfss	indf2,6,c
 16262  00017E  D031               	goto	i2l7112
 16263                           
 16264                           ; BSR set to: 2
 16265                           ;drv_mrf_miwi_89xa.c: 1385: {
 16266                           ;drv_mrf_miwi_89xa.c: 1386: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 16267  000180  6A35               	clrf	high_isr@i,c
 16268  000182  D026               	goto	i2l7110
 16269  000184                     i2l7102:
 16270                           
 16271                           ; BSR set to: 0
 16272                           ;drv_mrf_miwi_89xa.c: 1387: {
 16273                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 16274  000184  51C9               	movf	(_MACInitParams+1)& (0+255),w,b
 16275  000186  2435               	addwf	high_isr@i,w,c
 16276  000188  6ED9               	movwf	fsr2l,c
 16277  00018A  6ADA               	clrf	fsr2h,c
 16278  00018C  5034               	movf	high_isr@BankIndex,w,c
 16279  00018E  0D34               	mullw	52
 16280  000190  0E00               	movlw	low _RxPacket
 16281  000192  6E20               	movwf	(??_high_isr+1)& (0+255),c
 16282  000194  0E02               	movlw	high _RxPacket
 16283  000196  6E21               	movwf	(??_high_isr+2)& (0+255),c
 16284  000198  0E03               	movlw	3
 16285  00019A  2620               	addwf	??_high_isr+1,f,c
 16286  00019C  0E00               	movlw	0
 16287  00019E  2221               	addwfc	??_high_isr+2,f,c
 16288  0001A0  50F3               	movf	prodl,w,c
 16289  0001A2  2620               	addwf	??_high_isr+1,f,c
 16290  0001A4  50F4               	movf	prodh,w,c
 16291  0001A6  2221               	addwfc	??_high_isr+2,f,c
 16292  0001A8  5035               	movf	high_isr@i,w,c
 16293  0001AA  2420               	addwf	??_high_isr+1,w,c
 16294  0001AC  6EE1               	movwf	fsr1l,c
 16295  0001AE  0E00               	movlw	0
 16296  0001B0  2021               	addwfc	??_high_isr+2,w,c
 16297  0001B2  6EE2               	movwf	fsr1h,c
 16298  0001B4  50DE               	movf	postinc2,w,c
 16299  0001B6  18E6               	xorwf	postinc1,w,c
 16300  0001B8  E00A               	bz	i2l7108
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;drv_mrf_miwi_89xa.c: 1391: RxPacket[BankIndex].PayloadLen = 0;
 16304                           
 16305                           ; BSR set to: 0
 16306  0001BA  5034               	movf	high_isr@BankIndex,w,c
 16307  0001BC  0D34               	mullw	52
 16308  0001BE  0E33               	movlw	low (_RxPacket+51)
 16309  0001C0  24F3               	addwf	prodl,w,c
 16310  0001C2  6ED9               	movwf	fsr2l,c
 16311  0001C4  0E02               	movlw	high (_RxPacket+51)
 16312  0001C6  20F4               	addwfc	prodh,w,c
 16313  0001C8  6EDA               	movwf	fsr2h,c
 16314  0001CA  6ADF               	clrf	indf2,c
 16315                           
 16316                           ;drv_mrf_miwi_89xa.c: 1392: goto IGNORE_HERE;
 16317  0001CC  D760               	goto	i2l7050
 16318  0001CE                     i2l7108:
 16319                           
 16320                           ; BSR set to: 0
 16321  0001CE  2A35               	incf	high_isr@i,f,c
 16322  0001D0                     i2l7110:
 16323  0001D0  0100               	movlb	0	; () banked
 16324  0001D2  31C8               	rrcf	_MACInitParams& (0+255),w,b
 16325  0001D4  32E8               	rrcf	wreg,f,c
 16326  0001D6  32E8               	rrcf	wreg,f,c
 16327  0001D8  0B0F               	andlw	15
 16328  0001DA  6E1F               	movwf	??_high_isr& (0+255),c
 16329  0001DC  501F               	movf	??_high_isr,w,c
 16330  0001DE  5C35               	subwf	high_isr@i,w,c
 16331  0001E0  E3D1               	bnc	i2l7102
 16332  0001E2                     i2l7112:
 16333                           
 16334                           ;drv_mrf_miwi_89xa.c: 1393: }
 16335                           ;drv_mrf_miwi_89xa.c: 1394: }
 16336                           ;drv_mrf_miwi_89xa.c: 1395: }
 16337                           ;drv_mrf_miwi_89xa.c: 1398: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 16338  0001E2  5034               	movf	high_isr@BankIndex,w,c
 16339  0001E4  0D34               	mullw	52
 16340  0001E6  0E01               	movlw	low (_RxPacket+1)
 16341  0001E8  24F3               	addwf	prodl,w,c
 16342  0001EA  6ED9               	movwf	fsr2l,c
 16343  0001EC  0E02               	movlw	high (_RxPacket+1)
 16344  0001EE  20F4               	addwfc	prodh,w,c
 16345  0001F0  6EDA               	movwf	fsr2h,c
 16346  0001F2  0102               	movlb	2	; () banked
 16347  0001F4  AADF               	btfss	indf2,5,c
 16348  0001F6  D034               	goto	i2l202
 16349                           
 16350                           ; BSR set to: 2
 16351                           ;drv_mrf_miwi_89xa.c: 1399: {
 16352                           ;drv_mrf_miwi_89xa.c: 1401: for(i = 0; i < 2; i++)
 16353  0001F8  6A35               	clrf	high_isr@i,c
 16354  0001FA                     i2l7120:
 16355                           
 16356                           ;drv_mrf_miwi_89xa.c: 1402: {
 16357                           ;drv_mrf_miwi_89xa.c: 1403: ackPacket[i] = MACTxBuffer[i];
 16358  0001FA  0E00               	movlw	low _MACTxBuffer
 16359  0001FC  2435               	addwf	high_isr@i,w,c
 16360  0001FE  6ED9               	movwf	fsr2l,c
 16361  000200  6ADA               	clrf	fsr2h,c
 16362  000202  0E01               	movlw	high _MACTxBuffer
 16363  000204  22DA               	addwfc	fsr2h,f,c
 16364  000206  5035               	movf	high_isr@i,w,c
 16365  000208  0F2C               	addlw	low high_isr@ackPacket
 16366  00020A  6EE1               	movwf	fsr1l,c
 16367  00020C  6AE2               	clrf	fsr1h,c
 16368  00020E  CFDF FFE7          	movff	indf2,indf1
 16369  000212  2A35               	incf	high_isr@i,f,c
 16370  000214  0E01               	movlw	1
 16371  000216  6435               	cpfsgt	high_isr@i,c
 16372  000218  D7F0               	goto	i2l7120
 16373                           
 16374                           ;drv_mrf_miwi_89xa.c: 1404: }
 16375                           ;drv_mrf_miwi_89xa.c: 1405: MACTxBuffer[0] = 0x02 | 0x04;
 16376  00021A  0E06               	movlw	6
 16377  00021C  0101               	movlb	1	; () banked
 16378  00021E  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 16379                           
 16380                           ; BSR set to: 1
 16381                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 16382  000220  5034               	movf	high_isr@BankIndex,w,c
 16383  000222  0D34               	mullw	52
 16384  000224  0E02               	movlw	low (_RxPacket+2)
 16385  000226  24F3               	addwf	prodl,w,c
 16386  000228  6ED9               	movwf	fsr2l,c
 16387  00022A  0E02               	movlw	high (_RxPacket+2)
 16388  00022C  20F4               	addwfc	prodh,w,c
 16389  00022E  6EDA               	movwf	fsr2h,c
 16390  000230  50DF               	movf	indf2,w,c
 16391  000232  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 16392                           
 16393                           ; BSR set to: 1
 16394                           ;drv_mrf_miwi_89xa.c: 1407: INTCON3bits.INT3IF = 0;
 16395  000234  94F0               	bcf	intcon3,2,c	;volatile
 16396                           
 16397                           ; BSR set to: 1
 16398                           ;drv_mrf_miwi_89xa.c: 1408: TxPacket(2, 0);
 16399  000236  6A0B               	clrf	i2TxPacket@CCA,c
 16400  000238  0E02               	movlw	2
 16401  00023A  ECA8  F08A         	call	i2_TxPacket
 16402                           
 16403                           ;drv_mrf_miwi_89xa.c: 1411: for(i = 0; i < 2; i++)
 16404  00023E  6A35               	clrf	high_isr@i,c
 16405  000240                     i2l7140:
 16406                           
 16407                           ;drv_mrf_miwi_89xa.c: 1412: {
 16408                           ;drv_mrf_miwi_89xa.c: 1413: MACTxBuffer[i] = ackPacket[i];
 16409  000240  5035               	movf	high_isr@i,w,c
 16410  000242  0F2C               	addlw	low high_isr@ackPacket
 16411  000244  6ED9               	movwf	fsr2l,c
 16412  000246  6ADA               	clrf	fsr2h,c
 16413  000248  0E00               	movlw	low _MACTxBuffer
 16414  00024A  2435               	addwf	high_isr@i,w,c
 16415  00024C  6EE1               	movwf	fsr1l,c
 16416  00024E  6AE2               	clrf	fsr1h,c
 16417  000250  0E01               	movlw	high _MACTxBuffer
 16418  000252  22E2               	addwfc	fsr1h,f,c
 16419  000254  CFDF FFE7          	movff	indf2,indf1
 16420  000258  2A35               	incf	high_isr@i,f,c
 16421  00025A  0E01               	movlw	1
 16422  00025C  6435               	cpfsgt	high_isr@i,c
 16423  00025E  D7F0               	goto	i2l7140
 16424  000260                     i2l202:
 16425                           
 16426                           ;drv_mrf_miwi_89xa.c: 1414: }
 16427                           ;drv_mrf_miwi_89xa.c: 1415: }
 16428                           ;drv_mrf_miwi_89xa.c: 1419: for(i = 0; i < 5; i++)
 16429  000260  6A35               	clrf	high_isr@i,c
 16430  000262                     i2l7150:
 16431                           
 16432                           ;drv_mrf_miwi_89xa.c: 1420: {
 16433                           ;drv_mrf_miwi_89xa.c: 1421: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 16434  000262  5035               	movf	high_isr@i,w,c
 16435  000264  0D06               	mullw	6
 16436  000266  0E32               	movlw	low _AckInfo
 16437  000268  24F3               	addwf	prodl,w,c
 16438  00026A  6ED9               	movwf	fsr2l,c
 16439  00026C  0E01               	movlw	high _AckInfo
 16440  00026E  20F4               	addwfc	prodh,w,c
 16441  000270  6EDA               	movwf	fsr2h,c
 16442  000272  50DF               	movf	indf2,w,c
 16443  000274  E026               	bz	i2l7156
 16444  000276  5034               	movf	high_isr@BankIndex,w,c
 16445  000278  0D34               	mullw	52
 16446  00027A  0E02               	movlw	low (_RxPacket+2)
 16447  00027C  24F3               	addwf	prodl,w,c
 16448  00027E  6ED9               	movwf	fsr2l,c
 16449  000280  0E02               	movlw	high (_RxPacket+2)
 16450  000282  20F4               	addwfc	prodh,w,c
 16451  000284  6EDA               	movwf	fsr2h,c
 16452  000286  5035               	movf	high_isr@i,w,c
 16453  000288  0D06               	mullw	6
 16454  00028A  0E33               	movlw	low (_AckInfo+1)
 16455  00028C  24F3               	addwf	prodl,w,c
 16456  00028E  6EE1               	movwf	fsr1l,c
 16457  000290  0E01               	movlw	high (_AckInfo+1)
 16458  000292  20F4               	addwfc	prodh,w,c
 16459  000294  6EE2               	movwf	fsr1h,c
 16460  000296  50DE               	movf	postinc2,w,c
 16461  000298  18E6               	xorwf	postinc1,w,c
 16462  00029A  E113               	bnz	i2l7156
 16463                           
 16464                           ;drv_mrf_miwi_89xa.c: 1422: {
 16465                           ;drv_mrf_miwi_89xa.c: 1423: AckInfo[i].startTick = MiWi_TickGet();
 16466  00029C  EC4F  F091         	call	i2_MiWi_TickGet	;wreg free
 16467  0002A0  5035               	movf	high_isr@i,w,c
 16468  0002A2  0D06               	mullw	6
 16469  0002A4  0E34               	movlw	low (_AckInfo+2)
 16470  0002A6  24F3               	addwf	prodl,w,c
 16471  0002A8  6ED9               	movwf	fsr2l,c
 16472  0002AA  0E01               	movlw	high (_AckInfo+2)
 16473  0002AC  20F4               	addwfc	prodh,w,c
 16474  0002AE  6EDA               	movwf	fsr2h,c
 16475  0002B0  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 16476  0002B4  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 16477  0002B8  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 16478  0002BC  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 16479                           
 16480                           ;drv_mrf_miwi_89xa.c: 1424: break;
 16481  0002C0  D012               	goto	i2l7166
 16482  0002C2                     i2l7156:
 16483                           
 16484                           ;drv_mrf_miwi_89xa.c: 1425: }
 16485                           ;drv_mrf_miwi_89xa.c: 1426: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 16486  0002C2  2832               	incf	high_isr@ackInfoIndex,w,c
 16487  0002C4  E10C               	bnz	i2l7162
 16488  0002C6  5035               	movf	high_isr@i,w,c
 16489  0002C8  0D06               	mullw	6
 16490  0002CA  0E32               	movlw	low _AckInfo
 16491  0002CC  24F3               	addwf	prodl,w,c
 16492  0002CE  6ED9               	movwf	fsr2l,c
 16493  0002D0  0E01               	movlw	high _AckInfo
 16494  0002D2  20F4               	addwfc	prodh,w,c
 16495  0002D4  6EDA               	movwf	fsr2h,c
 16496  0002D6  50DF               	movf	indf2,w,c
 16497  0002D8  E102               	bnz	i2l7162
 16498                           
 16499                           ;drv_mrf_miwi_89xa.c: 1427: {
 16500                           ;drv_mrf_miwi_89xa.c: 1428: ackInfoIndex = i;
 16501  0002DA  C035  F032         	movff	high_isr@i,high_isr@ackInfoIndex
 16502  0002DE                     i2l7162:
 16503  0002DE  2A35               	incf	high_isr@i,f,c
 16504  0002E0  0E04               	movlw	4
 16505  0002E2  6435               	cpfsgt	high_isr@i,c
 16506  0002E4  D7BE               	goto	i2l7150
 16507  0002E6                     i2l7166:
 16508                           
 16509                           ;drv_mrf_miwi_89xa.c: 1429: }
 16510                           ;drv_mrf_miwi_89xa.c: 1430: }
 16511                           ;drv_mrf_miwi_89xa.c: 1432: if( i >= 5 )
 16512  0002E6  0E04               	movlw	4
 16513  0002E8  6435               	cpfsgt	high_isr@i,c
 16514  0002EA  D043               	goto	i2l7182
 16515                           
 16516                           ;drv_mrf_miwi_89xa.c: 1433: {
 16517                           ;drv_mrf_miwi_89xa.c: 1434: if( ackInfoIndex < 5 )
 16518  0002EC  0E05               	movlw	5
 16519  0002EE  6032               	cpfslt	high_isr@ackInfoIndex,c
 16520  0002F0  D02E               	goto	i2l7176
 16521                           
 16522                           ;drv_mrf_miwi_89xa.c: 1435: {
 16523                           ;drv_mrf_miwi_89xa.c: 1436: AckInfo[ackInfoIndex].Valid = 1;
 16524  0002F2  5032               	movf	high_isr@ackInfoIndex,w,c
 16525  0002F4  0D06               	mullw	6
 16526  0002F6  0E32               	movlw	low _AckInfo
 16527  0002F8  24F3               	addwf	prodl,w,c
 16528  0002FA  6ED9               	movwf	fsr2l,c
 16529  0002FC  0E01               	movlw	high _AckInfo
 16530  0002FE  20F4               	addwfc	prodh,w,c
 16531  000300  6EDA               	movwf	fsr2h,c
 16532  000302  0E01               	movlw	1
 16533  000304  6EDF               	movwf	indf2,c
 16534                           
 16535                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 16536  000306  5034               	movf	high_isr@BankIndex,w,c
 16537  000308  0D34               	mullw	52
 16538  00030A  0E02               	movlw	low (_RxPacket+2)
 16539  00030C  24F3               	addwf	prodl,w,c
 16540  00030E  6ED9               	movwf	fsr2l,c
 16541  000310  0E02               	movlw	high (_RxPacket+2)
 16542  000312  20F4               	addwfc	prodh,w,c
 16543  000314  6EDA               	movwf	fsr2h,c
 16544  000316  5032               	movf	high_isr@ackInfoIndex,w,c
 16545  000318  0D06               	mullw	6
 16546  00031A  0E33               	movlw	low (_AckInfo+1)
 16547  00031C  24F3               	addwf	prodl,w,c
 16548  00031E  6EE1               	movwf	fsr1l,c
 16549  000320  0E01               	movlw	high (_AckInfo+1)
 16550  000322  20F4               	addwfc	prodh,w,c
 16551  000324  6EE2               	movwf	fsr1h,c
 16552  000326  CFDF FFE7          	movff	indf2,indf1
 16553                           
 16554                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 16555  00032A  EC4F  F091         	call	i2_MiWi_TickGet	;wreg free
 16556  00032E  5032               	movf	high_isr@ackInfoIndex,w,c
 16557  000330  0D06               	mullw	6
 16558  000332  0E34               	movlw	low (_AckInfo+2)
 16559  000334  24F3               	addwf	prodl,w,c
 16560  000336  6ED9               	movwf	fsr2l,c
 16561  000338  0E01               	movlw	high (_AckInfo+2)
 16562  00033A  20F4               	addwfc	prodh,w,c
 16563  00033C  6EDA               	movwf	fsr2h,c
 16564  00033E  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 16565  000342  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 16566  000346  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 16567  00034A  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 16568  00034E                     i2l7176:
 16569                           
 16570                           ;drv_mrf_miwi_89xa.c: 1439: }
 16571                           ;drv_mrf_miwi_89xa.c: 1442: RxPacket[BankIndex].flags.bits.Valid = 1;
 16572  00034E  5034               	movf	high_isr@BankIndex,w,c
 16573  000350  0D34               	mullw	52
 16574  000352  0E00               	movlw	low _RxPacket
 16575  000354  24F3               	addwf	prodl,w,c
 16576  000356  6ED9               	movwf	fsr2l,c
 16577  000358  0E02               	movlw	high _RxPacket
 16578  00035A  20F4               	addwfc	prodh,w,c
 16579  00035C  6EDA               	movwf	fsr2h,c
 16580  00035E  0102               	movlb	2	; () banked
 16581  000360  80DF               	bsf	indf2,0,c
 16582  000362  D007               	goto	i2l7182
 16583  000364                     i2l7178:
 16584  000364  5029               	movf	high_isr@counter,w,c
 16585  000366  102A               	iorwf	high_isr@counter+1,w,c
 16586  000368  E004               	bz	i2l7182
 16587  00036A  D6A5               	goto	i2l7060
 16588  00036C                     i2l7180:
 16589                           
 16590                           ;drv_mrf_miwi_89xa.c: 1457: else
 16591                           ;drv_mrf_miwi_89xa.c: 1458: {
 16592                           ;drv_mrf_miwi_89xa.c: 1460: IRQ1_Received = 1;
 16593  00036C  0E01               	movlw	1
 16594  00036E  0100               	movlb	0	; () banked
 16595  000370  6FCC               	movwf	_IRQ1_Received& (0+255),b	;volatile
 16596  000372                     i2l7182:
 16597                           
 16598                           ;drv_mrf_miwi_89xa.c: 1464: INTCON3bits.INT3IF = 0;
 16599  000372  94F0               	bcf	intcon3,2,c	;volatile
 16600                           
 16601                           ;drv_mrf_miwi_89xa.c: 1466: __nop();
 16602  000374  F000               	nop	
 16603  000376                     i2l7186:
 16604                           
 16605                           ;drv_mrf_miwi_89xa.c: 1467: }
 16606                           ;drv_mrf_miwi_89xa.c: 1487: if(PIR1bits.TMR1IF)
 16607  000376  B09E               	btfsc	3998,0,c	;volatile
 16608                           
 16609                           ;drv_mrf_miwi_89xa.c: 1488: {
 16610                           ;drv_mrf_miwi_89xa.c: 1489: if(PIE1bits.TMR1IE)
 16611  000378  A09D               	btfss	3997,0,c	;volatile
 16612  00037A  D006               	goto	i2l7198
 16613                           
 16614                           ;drv_mrf_miwi_89xa.c: 1490: {
 16615                           ;drv_mrf_miwi_89xa.c: 1492: PIR1bits.TMR1IF = 0;
 16616  00037C  909E               	bcf	3998,0,c	;volatile
 16617                           
 16618                           ;drv_mrf_miwi_89xa.c: 1493: timerExtension1++;
 16619  00037E  2A39               	incf	_timerExtension1,f,c	;volatile
 16620                           
 16621                           ;drv_mrf_miwi_89xa.c: 1494: if(timerExtension1 == 0)
 16622  000380  5039               	movf	_timerExtension1,w,c	;volatile
 16623  000382  E102               	bnz	i2l7198
 16624                           
 16625                           ;drv_mrf_miwi_89xa.c: 1495: {
 16626                           ;drv_mrf_miwi_89xa.c: 1496: timerExtension2++;
 16627  000384  0100               	movlb	0	; () banked
 16628  000386  2BDD               	incf	_timerExtension2& (0+255),f,b	;volatile
 16629  000388                     i2l7198:
 16630                           
 16631                           ;drv_mrf_miwi_89xa.c: 1497: }
 16632                           ;drv_mrf_miwi_89xa.c: 1498: }
 16633                           ;drv_mrf_miwi_89xa.c: 1499: }
 16634                           ;drv_mrf_miwi_89xa.c: 1501: UserInterruptHandler();
 16635  000388  EC8B  F095         	call	_UserInterruptHandler	;wreg free
 16636  00038C  C028  FFF4         	movff	??_high_isr+9,prodh
 16637  000390  C027  FFF3         	movff	??_high_isr+8,prodl
 16638  000394  C026  FFDA         	movff	??_high_isr+7,fsr2h
 16639  000398  C025  FFD9         	movff	??_high_isr+6,fsr2l
 16640  00039C  C024  FFE2         	movff	??_high_isr+5,fsr1h
 16641  0003A0  C023  FFE1         	movff	??_high_isr+4,fsr1l
 16642  0003A4  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16643  0003A6  0011               	retfie		f
 16644  0003A8                     __end_of_high_isr:
 16645                           	opt stack 0
 16646                           tblptru	equ	0xFF8
 16647                           tblptrh	equ	0xFF7
 16648                           tblptrl	equ	0xFF6
 16649                           tablat	equ	0xFF5
 16650                           prodh	equ	0xFF4
 16651                           prodl	equ	0xFF3
 16652                           intcon	equ	0xFF2
 16653                           intcon2	equ	0xFF1
 16654                           intcon3	equ	0xFF0
 16655                           postinc0	equ	0xFEE
 16656                           wreg	equ	0xFE8
 16657                           indf1	equ	0xFE7
 16658                           postinc1	equ	0xFE6
 16659                           postdec1	equ	0xFE5
 16660                           fsr1h	equ	0xFE2
 16661                           fsr1l	equ	0xFE1
 16662                           indf2	equ	0xFDF
 16663                           postinc2	equ	0xFDE
 16664                           postdec2	equ	0xFDD
 16665                           fsr2h	equ	0xFDA
 16666                           fsr2l	equ	0xFD9
 16667                           status	equ	0xFD8
 16668                           
 16669 ;; *************** function i2_TxPacket *****************
 16670 ;; Defined at:
 16671 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  TxPacketLen     1    wreg     unsigned char 
 16674 ;;  CCA             1   10[COMRAM] unsigned char 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;  TxPacketLen     1   15[COMRAM] unsigned char 
 16677 ;;  TxPacket        4   21[COMRAM] struct _MIWI_TICK
 16678 ;;  TxPacket        4   17[COMRAM] struct _MIWI_TICK
 16679 ;;  TxPacket        1   29[COMRAM] unsigned char 
 16680 ;;  TxPacket        1   28[COMRAM] unsigned char 
 16681 ;;  TxPacket        1   27[COMRAM] unsigned char 
 16682 ;;  TxPacket        1   26[COMRAM] unsigned char 
 16683 ;;  TxPacket        1   25[COMRAM] unsigned char 
 16684 ;;  TxPacket        1   16[COMRAM] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      unsigned char 
 16687 ;; Registers used:
 16688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16689 ;; Tracked objects:
 16690 ;;		On entry : F/1
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16694 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16695 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16696 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16697 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16698 ;;Total ram usage:       20 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:    3
 16701 ;; This function calls:
 16702 ;;		i2_DELAY_10us
 16703 ;;		i2_MiWi_TickGet
 16704 ;;		i2_RegisterRead
 16705 ;;		i2_RegisterSet
 16706 ;;		i2_SetRFMode
 16707 ;;		i2_WriteFIFO
 16708 ;; This function is called by:
 16709 ;;		_high_isr
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text80
 16714  011550                     __ptext80:
 16715                           	opt stack 0
 16716  011550                     i2_TxPacket:
 16717                           	opt stack 15
 16718                           
 16719                           ;incstack = 0
 16720                           ;i2TxPacket@TxPacketLen stored from wreg
 16721  011550  6E10               	movwf	i2TxPacket@TxPacketLen,c
 16722                           
 16723                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 16724                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 16725                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 16726                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 16727                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 16728                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 16729  011552  0E03               	movlw	3
 16730  011554  6E1B               	movwf	i2TxPacket@reTry,c
 16731                           
 16732                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 16733  011556  D084               	goto	i2l7006
 16734  011558                     i2l82:
 16735                           
 16736                           ;drv_mrf_miwi_89xa.c: 305: {
 16737                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 16738                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 16739  011558  6A1C               	clrf	i2TxPacket@allowedTxFailure,c
 16740  01155A                     i2l83:
 16741                           
 16742                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 16743  01155A  0100               	movlb	0	; () banked
 16744  01155C  6BDA               	clrf	_hasAck& (0+255),b	;volatile
 16745                           
 16746                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 16747  01155E  6A1A               	clrf	i2TxPacket@CCARetries,c
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 16751  011560  500B               	movf	i2TxPacket@CCA,w,c
 16752  011562  E019               	bz	i2l84
 16753  011564                     i2l6948:
 16754                           
 16755                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 16756  011564  0E28               	movlw	40
 16757  011566  ECDA  F093         	call	i2_RegisterRead
 16758  01156A  6E1D               	movwf	i2TxPacket@rssival,c
 16759                           
 16760                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 16761  01156C  90D8               	bcf	status,0,c
 16762  01156E  321D               	rrcf	i2TxPacket@rssival,f,c
 16763                           
 16764                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 16765  011570  0E41               	movlw	65
 16766  011572  641D               	cpfsgt	i2TxPacket@rssival,c
 16767  011574  D010               	goto	i2l84
 16768                           
 16769                           ;drv_mrf_miwi_89xa.c: 326: {
 16770                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 16771  011576  2A1A               	incf	i2TxPacket@CCARetries,f,c
 16772  011578  041A               	decf	i2TxPacket@CCARetries,w,c
 16773  01157A  6E0C               	movwf	??i2_TxPacket& (0+255),c
 16774  01157C  0E04               	movlw	4
 16775  01157E  640C               	cpfsgt	??i2_TxPacket,c
 16776  011580  D001               	goto	i2l6958
 16777  011582  0C04               	retlw	4
 16778  011584                     i2l6958:
 16779                           
 16780                           ;drv_mrf_miwi_89xa.c: 331: }
 16781                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 16782  011584  0E01               	movlw	1
 16783  011586  6E01               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 16784  011588  0E00               	movlw	0
 16785  01158A  6A02               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 16786  01158C  6A03               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 16787  01158E  6A04               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 16788  011590  EC8A  F095         	call	i2_DELAY_10us	;wreg free
 16789                           
 16790                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 16791  011594  D7E7               	goto	i2l6948
 16792  011596                     i2l84:
 16793                           
 16794                           ;drv_mrf_miwi_89xa.c: 334: }
 16795                           ;drv_mrf_miwi_89xa.c: 335: }
 16796                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
 16797  011596  9AF0               	bcf	intcon3,5,c	;volatile
 16798                           
 16799                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 16800  011598  0E20               	movlw	32
 16801  01159A  EC8E  F090         	call	i2_SetRFMode
 16802                           
 16803                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 16804  01159E  0E1A               	movlw	26
 16805  0115A0  6E03               	movwf	i2RegisterSet@setting+1,c
 16806  0115A2  0EC9               	movlw	201
 16807  0115A4  6E02               	movwf	i2RegisterSet@setting,c
 16808  0115A6  EC90  F094         	call	i2_RegisterSet	;wreg free
 16809                           
 16810                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 16811  0115AA  5010               	movf	i2TxPacket@TxPacketLen,w,c
 16812  0115AC  ECC6  F094         	call	i2_WriteFIFO
 16813                           
 16814                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 16815  0115B0  6A1E               	clrf	i2TxPacket@i,c
 16816  0115B2  D00A               	goto	i2l6972
 16817  0115B4                     i2l6968:
 16818                           
 16819                           ;drv_mrf_miwi_89xa.c: 347: {
 16820                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 16821  0115B4  0E00               	movlw	low _MACTxBuffer
 16822  0115B6  241E               	addwf	i2TxPacket@i,w,c
 16823  0115B8  6ED9               	movwf	fsr2l,c
 16824  0115BA  6ADA               	clrf	fsr2h,c
 16825  0115BC  0E01               	movlw	high _MACTxBuffer
 16826  0115BE  22DA               	addwfc	fsr2h,f,c
 16827  0115C0  50DF               	movf	indf2,w,c
 16828  0115C2  ECC6  F094         	call	i2_WriteFIFO
 16829  0115C6  2A1E               	incf	i2TxPacket@i,f,c
 16830  0115C8                     i2l6972:
 16831  0115C8  5010               	movf	i2TxPacket@TxPacketLen,w,c
 16832  0115CA  5C1E               	subwf	i2TxPacket@i,w,c
 16833  0115CC  E3F3               	bnc	i2l6968
 16834                           
 16835                           ;drv_mrf_miwi_89xa.c: 349: }
 16836                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 16837  0115CE  0E80               	movlw	128
 16838  0115D0  EC8E  F090         	call	i2_SetRFMode
 16839                           
 16840                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
 16841  0115D4  8AF0               	bsf	intcon3,5,c	;volatile
 16842  0115D6                     i2l6978:
 16843  0115D6  0100               	movlb	0	; () banked
 16844  0115D8  51CC               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 16845  0115DA  E102               	bnz	i2l96
 16846                           
 16847                           ; BSR set to: 0
 16848  0115DC  A4F0               	btfss	intcon3,2,c	;volatile
 16849  0115DE  D7FB               	goto	i2l6978
 16850  0115E0                     i2l96:
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;drv_mrf_miwi_89xa.c: 358: };
 16854                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 16855  0115E0  6BCC               	clrf	_IRQ1_Received& (0+255),b	;volatile
 16856                           
 16857                           ; BSR set to: 0
 16858                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 16859  0115E2  0E20               	movlw	32
 16860  0115E4  EC8E  F090         	call	i2_SetRFMode
 16861                           
 16862                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 16863  0115E8  0E60               	movlw	96
 16864  0115EA  EC8E  F090         	call	i2_SetRFMode
 16865                           
 16866                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 16867  0115EE  0101               	movlb	1	; () banked
 16868  0115F0  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 16869  0115F2  D00E               	goto	i2l6992
 16870                           
 16871                           ; BSR set to: 1
 16872                           ;drv_mrf_miwi_89xa.c: 368: {
 16873                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 16874  0115F4  C101  F038         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 16878  0115F8  EC4F  F091         	call	i2_MiWi_TickGet	;wreg free
 16879  0115FC  C001  F012         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 16880  011600  C002  F013         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 16881  011604  C003  F014         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 16882  011608  C004  F015         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 16883  01160C                     i2l6990:
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;drv_mrf_miwi_89xa.c: 372: {
 16887                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 16888  01160C  51DA               	movf	_hasAck& (0+255),w,b	;volatile
 16889  01160E  E003               	bz	i2l6994
 16890  011610                     i2l6992:
 16891                           
 16892                           ;drv_mrf_miwi_89xa.c: 374: {
 16893                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 16894  011610  0E01               	movlw	1
 16895  011612  6E11               	movwf	i2TxPacket@status,c
 16896                           
 16897                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 16898  011614  0C01               	retlw	1
 16899  011616                     i2l6994:
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;drv_mrf_miwi_89xa.c: 377: }
 16903                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 16904  011616  EC4F  F091         	call	i2_MiWi_TickGet	;wreg free
 16905  01161A  C001  F016         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 16906  01161E  C002  F017         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 16907  011622  C003  F018         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 16908  011626  C004  F019         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(10000000)/32)/20 )
 16912  01162A  5012               	movf	i2TxPacket@t1,w,c
 16913  01162C  5C16               	subwf	i2TxPacket@t2,w,c
 16914  01162E  6E0C               	movwf	??i2_TxPacket& (0+255),c
 16915  011630  5013               	movf	i2TxPacket@t1+1,w,c
 16916  011632  5817               	subwfb	i2TxPacket@t2+1,w,c
 16917  011634  6E0D               	movwf	(??i2_TxPacket+1)& (0+255),c
 16918  011636  5014               	movf	i2TxPacket@t1+2,w,c
 16919  011638  5818               	subwfb	i2TxPacket@t2+2,w,c
 16920  01163A  6E0E               	movwf	(??i2_TxPacket+2)& (0+255),c
 16921  01163C  5015               	movf	i2TxPacket@t1+3,w,c
 16922  01163E  5819               	subwfb	i2TxPacket@t2+3,w,c
 16923  011640  6E0F               	movwf	(??i2_TxPacket+3)& (0+255),c
 16924  011642  500F               	movf	??i2_TxPacket+3,w,c
 16925  011644  100E               	iorwf	??i2_TxPacket+2,w,c
 16926  011646  E105               	bnz	i2u564_40
 16927  011648  0E0A               	movlw	10
 16928  01164A  5C0C               	subwf	??i2_TxPacket,w,c
 16929  01164C  0E3D               	movlw	61
 16930  01164E  580D               	subwfb	??i2_TxPacket+1,w,c
 16931  011650  E3DD               	bnc	i2l6990
 16932  011652                     i2u564_40:
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;drv_mrf_miwi_89xa.c: 382: }
 16936                           ;drv_mrf_miwi_89xa.c: 383: }
 16937                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 16938  011652  2A1C               	incf	i2TxPacket@allowedTxFailure,f,c
 16939  011654  041C               	decf	i2TxPacket@allowedTxFailure,w,c
 16940  011656  6E0C               	movwf	??i2_TxPacket& (0+255),c
 16941  011658  0E04               	movlw	4
 16942  01165A  600C               	cpfslt	??i2_TxPacket,c
 16943  01165C  D001               	goto	i2l7006
 16944  01165E  D77D               	goto	i2l83
 16945  011660                     i2l7006:
 16946  011660  061B               	decf	i2TxPacket@reTry,f,c
 16947  011662  281B               	incf	i2TxPacket@reTry,w,c
 16948  011664  E001 D778          	bnz	i2l82
 16949                           
 16950                           ;drv_mrf_miwi_89xa.c: 394: }
 16951                           ;drv_mrf_miwi_89xa.c: 395: }
 16952                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 16953  011668  6A11               	clrf	i2TxPacket@status,c
 16954  01166A  0012               	return		;funcret
 16955  01166C                     __end_ofi2_TxPacket:
 16956                           	opt stack 0
 16957                           tblptru	equ	0xFF8
 16958                           tblptrh	equ	0xFF7
 16959                           tblptrl	equ	0xFF6
 16960                           tablat	equ	0xFF5
 16961                           prodh	equ	0xFF4
 16962                           prodl	equ	0xFF3
 16963                           intcon	equ	0xFF2
 16964                           intcon2	equ	0xFF1
 16965                           intcon3	equ	0xFF0
 16966                           postinc0	equ	0xFEE
 16967                           wreg	equ	0xFE8
 16968                           indf1	equ	0xFE7
 16969                           postinc1	equ	0xFE6
 16970                           postdec1	equ	0xFE5
 16971                           fsr1h	equ	0xFE2
 16972                           fsr1l	equ	0xFE1
 16973                           indf2	equ	0xFDF
 16974                           postinc2	equ	0xFDE
 16975                           postdec2	equ	0xFDD
 16976                           fsr2h	equ	0xFDA
 16977                           fsr2l	equ	0xFD9
 16978                           status	equ	0xFD8
 16979                           
 16980 ;; *************** function i2_WriteFIFO *****************
 16981 ;; Defined at:
 16982 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;  Data            1    wreg     unsigned char 
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;  Data            1    1[COMRAM] unsigned char 
 16987 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 16988 ;; Return value:  Size  Location     Type
 16989 ;;                  1    wreg      void 
 16990 ;; Registers used:
 16991 ;;		wreg, status,2, cstack
 16992 ;; Tracked objects:
 16993 ;;		On entry : 0/0
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17001 ;;Total ram usage:        2 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; Hardware stack levels required when called:    1
 17004 ;; This function calls:
 17005 ;;		i2_SPIPut
 17006 ;; This function is called by:
 17007 ;;		i2_TxPacket
 17008 ;; This function uses a non-reentrant model
 17009 ;;
 17010                           
 17011                           	psect	text81
 17012  01298C                     __ptext81:
 17013                           	opt stack 0
 17014  01298C                     i2_WriteFIFO:
 17015                           	opt stack 16
 17016                           
 17017                           ;incstack = 0
 17018                           ;i2WriteFIFO@Data stored from wreg
 17019  01298C  6E02               	movwf	i2WriteFIFO@Data,c
 17020                           
 17021                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
 17022  01298E  0E00               	movlw	0
 17023  012990  BAF0               	btfsc	intcon3,5,c	;volatile
 17024  012992  0E01               	movlw	1
 17025  012994  6E03               	movwf	i2WriteFIFO@IRQ1select,c
 17026                           
 17027                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
 17028  012996  9AF0               	bcf	intcon3,5,c	;volatile
 17029                           
 17030                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 17031  012998  948B               	bcf	3979,2,c	;volatile
 17032                           
 17033                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 17034  01299A  5002               	movf	i2WriteFIFO@Data,w,c
 17035  01299C  EC20  F095         	call	i2_SPIPut
 17036                           
 17037                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 17038  0129A0  848B               	bsf	3979,2,c	;volatile
 17039                           
 17040                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
 17041  0129A2  B003               	btfsc	i2WriteFIFO@IRQ1select,0,c
 17042  0129A4  D002               	bra	i2u547_45
 17043  0129A6  9AF0               	bcf	intcon3,5,c	;volatile
 17044  0129A8  D001               	bra	i2u547_46
 17045  0129AA                     i2u547_45:
 17046  0129AA  8AF0               	bsf	intcon3,5,c	;volatile
 17047  0129AC                     i2u547_46:
 17048  0129AC  0012               	return		;funcret
 17049  0129AE                     __end_ofi2_WriteFIFO:
 17050                           	opt stack 0
 17051                           tblptru	equ	0xFF8
 17052                           tblptrh	equ	0xFF7
 17053                           tblptrl	equ	0xFF6
 17054                           tablat	equ	0xFF5
 17055                           prodh	equ	0xFF4
 17056                           prodl	equ	0xFF3
 17057                           intcon	equ	0xFF2
 17058                           intcon2	equ	0xFF1
 17059                           intcon3	equ	0xFF0
 17060                           postinc0	equ	0xFEE
 17061                           wreg	equ	0xFE8
 17062                           indf1	equ	0xFE7
 17063                           postinc1	equ	0xFE6
 17064                           postdec1	equ	0xFE5
 17065                           fsr1h	equ	0xFE2
 17066                           fsr1l	equ	0xFE1
 17067                           indf2	equ	0xFDF
 17068                           postinc2	equ	0xFDE
 17069                           postdec2	equ	0xFDD
 17070                           fsr2h	equ	0xFDA
 17071                           fsr2l	equ	0xFD9
 17072                           status	equ	0xFD8
 17073                           
 17074 ;; *************** function i2_SetRFMode *****************
 17075 ;; Defined at:
 17076 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17077 ;; Parameters:    Size  Location     Type
 17078 ;;  mode            1    wreg     unsigned char 
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;  mode            1    4[COMRAM] unsigned char 
 17081 ;; Return value:  Size  Location     Type
 17082 ;;                  1    wreg      void 
 17083 ;; Registers used:
 17084 ;;		wreg, status,2, status,0, cstack
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17094 ;;Total ram usage:        1 bytes
 17095 ;; Hardware stack levels used:    1
 17096 ;; Hardware stack levels required when called:    2
 17097 ;; This function calls:
 17098 ;;		i2_RegisterSet
 17099 ;; This function is called by:
 17100 ;;		i2_TxPacket
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text82
 17105  01211C                     __ptext82:
 17106                           	opt stack 0
 17107  01211C                     i2_SetRFMode:
 17108                           	opt stack 15
 17109                           
 17110                           ;incstack = 0
 17111                           ;i2SetRFMode@mode stored from wreg
 17112  01211C  6E05               	movwf	i2SetRFMode@mode,c
 17113                           
 17114                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 17115  01211E  D027               	goto	i2l6748
 17116  012120                     i2l6726:
 17117                           
 17118                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 17119  012120  6A03               	clrf	i2RegisterSet@setting+1,c
 17120  012122  0E8E               	movlw	142
 17121  012124  6E02               	movwf	i2RegisterSet@setting,c
 17122  012126  EC90  F094         	call	i2_RegisterSet	;wreg free
 17123                           
 17124                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 17125  01212A  0E80               	movlw	128
 17126  01212C  6E36               	movwf	_RF_Mode,c
 17127                           
 17128                           ;drv_mrf_miwi_89xa.c: 673: break;
 17129  01212E  0C80               	retlw	128
 17130  012130                     i2l6730:
 17131                           
 17132                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 17133  012130  6A03               	clrf	i2RegisterSet@setting+1,c
 17134  012132  0E6E               	movlw	110
 17135  012134  6E02               	movwf	i2RegisterSet@setting,c
 17136  012136  EC90  F094         	call	i2_RegisterSet	;wreg free
 17137                           
 17138                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 17139  01213A  0E60               	movlw	96
 17140  01213C  6E36               	movwf	_RF_Mode,c
 17141                           
 17142                           ;drv_mrf_miwi_89xa.c: 677: break;
 17143  01213E  0C60               	retlw	96
 17144  012140                     i2l6734:
 17145                           
 17146                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 17147  012140  6A03               	clrf	i2RegisterSet@setting+1,c
 17148  012142  0E4E               	movlw	78
 17149  012144  6E02               	movwf	i2RegisterSet@setting,c
 17150  012146  EC90  F094         	call	i2_RegisterSet	;wreg free
 17151                           
 17152                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 17153  01214A  0E40               	movlw	64
 17154  01214C  6E36               	movwf	_RF_Mode,c
 17155                           
 17156                           ;drv_mrf_miwi_89xa.c: 681: break;
 17157  01214E  0C40               	retlw	64
 17158  012150                     i2l6738:
 17159                           
 17160                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 17161  012150  6A03               	clrf	i2RegisterSet@setting+1,c
 17162  012152  0E2E               	movlw	46
 17163  012154  6E02               	movwf	i2RegisterSet@setting,c
 17164  012156  EC90  F094         	call	i2_RegisterSet	;wreg free
 17165                           
 17166                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 17167  01215A  0E20               	movlw	32
 17168  01215C  6E36               	movwf	_RF_Mode,c
 17169                           
 17170                           ;drv_mrf_miwi_89xa.c: 685: break;
 17171  01215E  0C20               	retlw	32
 17172  012160                     i2l6742:
 17173                           
 17174                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 17175  012160  6A03               	clrf	i2RegisterSet@setting+1,c
 17176  012162  0E0E               	movlw	14
 17177  012164  6E02               	movwf	i2RegisterSet@setting,c
 17178  012166  EC90  F094         	call	i2_RegisterSet	;wreg free
 17179                           
 17180                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 17181  01216A  6A36               	clrf	_RF_Mode,c
 17182                           
 17183                           ;drv_mrf_miwi_89xa.c: 689: break;
 17184  01216C  0012               	return	
 17185  01216E                     i2l6748:
 17186  01216E  5005               	movf	i2SetRFMode@mode,w,c
 17187                           
 17188                           ; Switch size 1, requested type "speed"
 17189                           ; Number of cases is 5, Range of values is 0 to 128
 17190                           ; switch strategies available:
 17191                           ; Name         Instructions Cycles
 17192                           ; simple_byte           16     9 (average)
 17193                           ;	Chosen strategy is simple_byte
 17194  012170  E0F7               	bz	i2l6742
 17195  012172  0A20               	xorlw	32	; case 32
 17196  012174  E0ED               	bz	i2l6738
 17197  012176  0A60               	xorlw	96	; case 64
 17198  012178  E0E3               	bz	i2l6734
 17199  01217A  0A20               	xorlw	32	; case 96
 17200  01217C  E0D9               	bz	i2l6730
 17201  01217E  0AE0               	xorlw	224	; case 128
 17202  012180  E0CF               	bz	i2l6726
 17203  012182  0012               	return		;funcret
 17204  012184                     __end_ofi2_SetRFMode:
 17205                           	opt stack 0
 17206                           tblptru	equ	0xFF8
 17207                           tblptrh	equ	0xFF7
 17208                           tblptrl	equ	0xFF6
 17209                           tablat	equ	0xFF5
 17210                           prodh	equ	0xFF4
 17211                           prodl	equ	0xFF3
 17212                           intcon	equ	0xFF2
 17213                           intcon2	equ	0xFF1
 17214                           intcon3	equ	0xFF0
 17215                           postinc0	equ	0xFEE
 17216                           wreg	equ	0xFE8
 17217                           indf1	equ	0xFE7
 17218                           postinc1	equ	0xFE6
 17219                           postdec1	equ	0xFE5
 17220                           fsr1h	equ	0xFE2
 17221                           fsr1l	equ	0xFE1
 17222                           indf2	equ	0xFDF
 17223                           postinc2	equ	0xFDE
 17224                           postdec2	equ	0xFDD
 17225                           fsr2h	equ	0xFDA
 17226                           fsr2l	equ	0xFD9
 17227                           status	equ	0xFD8
 17228                           
 17229 ;; *************** function i2_RegisterSet *****************
 17230 ;; Defined at:
 17231 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;  setting         2    1[COMRAM] unsigned int 
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      void 
 17238 ;; Registers used:
 17239 ;;		wreg, status,2, cstack
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;Total ram usage:        3 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    1
 17252 ;; This function calls:
 17253 ;;		i2_SPIPut
 17254 ;; This function is called by:
 17255 ;;		i2_TxPacket
 17256 ;;		i2_SetRFMode
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           	psect	text83
 17261  012920                     __ptext83:
 17262                           	opt stack 0
 17263  012920                     i2_RegisterSet:
 17264                           	opt stack 15
 17265                           
 17266                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
 17267                           
 17268                           ;incstack = 0
 17269  012920  0E00               	movlw	0
 17270  012922  BAF0               	btfsc	intcon3,5,c	;volatile
 17271  012924  0E01               	movlw	1
 17272  012926  6E04               	movwf	i2RegisterSet@IRQ1select,c
 17273                           
 17274                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
 17275  012928  9AF0               	bcf	intcon3,5,c	;volatile
 17276                           
 17277                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE3 = 0;
 17278  01292A  968D               	bcf	3981,3,c	;volatile
 17279                           
 17280                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 17281  01292C  5003               	movf	i2RegisterSet@setting+1,w,c
 17282  01292E  EC20  F095         	call	i2_SPIPut
 17283                           
 17284                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 17285  012932  5002               	movf	i2RegisterSet@setting,w,c
 17286  012934  EC20  F095         	call	i2_SPIPut
 17287                           
 17288                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE3 = 1;
 17289  012938  868D               	bsf	3981,3,c	;volatile
 17290                           
 17291                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
 17292  01293A  B004               	btfsc	i2RegisterSet@IRQ1select,0,c
 17293  01293C  D002               	bra	i2u508_45
 17294  01293E  9AF0               	bcf	intcon3,5,c	;volatile
 17295  012940  D001               	bra	i2u508_46
 17296  012942                     i2u508_45:
 17297  012942  8AF0               	bsf	intcon3,5,c	;volatile
 17298  012944                     i2u508_46:
 17299  012944  0012               	return		;funcret
 17300  012946                     __end_ofi2_RegisterSet:
 17301                           	opt stack 0
 17302                           tblptru	equ	0xFF8
 17303                           tblptrh	equ	0xFF7
 17304                           tblptrl	equ	0xFF6
 17305                           tablat	equ	0xFF5
 17306                           prodh	equ	0xFF4
 17307                           prodl	equ	0xFF3
 17308                           intcon	equ	0xFF2
 17309                           intcon2	equ	0xFF1
 17310                           intcon3	equ	0xFF0
 17311                           postinc0	equ	0xFEE
 17312                           wreg	equ	0xFE8
 17313                           indf1	equ	0xFE7
 17314                           postinc1	equ	0xFE6
 17315                           postdec1	equ	0xFE5
 17316                           fsr1h	equ	0xFE2
 17317                           fsr1l	equ	0xFE1
 17318                           indf2	equ	0xFDF
 17319                           postinc2	equ	0xFDE
 17320                           postdec2	equ	0xFDD
 17321                           fsr2h	equ	0xFDA
 17322                           fsr2l	equ	0xFD9
 17323                           status	equ	0xFD8
 17324                           
 17325 ;; *************** function i2_RegisterRead *****************
 17326 ;; Defined at:
 17327 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17328 ;; Parameters:    Size  Location     Type
 17329 ;;  address         1    wreg     unsigned char 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;  address         1    1[COMRAM] unsigned char 
 17332 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 17333 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      unsigned char 
 17336 ;; Registers used:
 17337 ;;		wreg, status,2, status,0, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 0/0
 17340 ;;		On exit  : 0/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17347 ;;Total ram usage:        3 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:    2
 17350 ;; This function calls:
 17351 ;;		i2_SPIGet
 17352 ;;		i2_SPIPut
 17353 ;; This function is called by:
 17354 ;;		_high_isr
 17355 ;;		i2_TxPacket
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           	psect	text84
 17360  0127B4                     __ptext84:
 17361                           	opt stack 0
 17362  0127B4                     i2_RegisterRead:
 17363                           	opt stack 15
 17364                           
 17365                           ;incstack = 0
 17366                           ;i2RegisterRead@address stored from wreg
 17367  0127B4  6E02               	movwf	i2RegisterRead@address,c
 17368                           
 17369                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 17370                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
 17371  0127B6  0E00               	movlw	0
 17372  0127B8  BAF0               	btfsc	intcon3,5,c	;volatile
 17373  0127BA  0E01               	movlw	1
 17374  0127BC  6E04               	movwf	i2RegisterRead@IRQ1select,c
 17375                           
 17376                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
 17377  0127BE  9AF0               	bcf	intcon3,5,c	;volatile
 17378                           
 17379                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE3 = 0;
 17380  0127C0  968D               	bcf	3981,3,c	;volatile
 17381                           
 17382                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 17383  0127C2  8C02               	bsf	i2RegisterRead@address,6,c
 17384                           
 17385                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 17386  0127C4  5002               	movf	i2RegisterRead@address,w,c
 17387  0127C6  EC20  F095         	call	i2_SPIPut
 17388                           
 17389                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 17390  0127CA  EC77  F095         	call	i2_SPIGet	;wreg free
 17391  0127CE  6E03               	movwf	i2RegisterRead@value,c
 17392                           
 17393                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE3 = 1;
 17394  0127D0  868D               	bsf	3981,3,c	;volatile
 17395                           
 17396                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
 17397  0127D2  B004               	btfsc	i2RegisterRead@IRQ1select,0,c
 17398  0127D4  D002               	bra	i2u546_45
 17399  0127D6  9AF0               	bcf	intcon3,5,c	;volatile
 17400  0127D8  D001               	bra	i2u546_46
 17401  0127DA                     i2u546_45:
 17402  0127DA  8AF0               	bsf	intcon3,5,c	;volatile
 17403  0127DC                     i2u546_46:
 17404                           
 17405                           ;drv_mrf_miwi_89xa.c: 222: return value;
 17406  0127DC  5003               	movf	i2RegisterRead@value,w,c
 17407  0127DE  0012               	return		;funcret
 17408  0127E0                     __end_ofi2_RegisterRead:
 17409                           	opt stack 0
 17410                           tblptru	equ	0xFF8
 17411                           tblptrh	equ	0xFF7
 17412                           tblptrl	equ	0xFF6
 17413                           tablat	equ	0xFF5
 17414                           prodh	equ	0xFF4
 17415                           prodl	equ	0xFF3
 17416                           intcon	equ	0xFF2
 17417                           intcon2	equ	0xFF1
 17418                           intcon3	equ	0xFF0
 17419                           postinc0	equ	0xFEE
 17420                           wreg	equ	0xFE8
 17421                           indf1	equ	0xFE7
 17422                           postinc1	equ	0xFE6
 17423                           postdec1	equ	0xFE5
 17424                           fsr1h	equ	0xFE2
 17425                           fsr1l	equ	0xFE1
 17426                           indf2	equ	0xFDF
 17427                           postinc2	equ	0xFDE
 17428                           postdec2	equ	0xFDD
 17429                           fsr2h	equ	0xFDA
 17430                           fsr2l	equ	0xFD9
 17431                           status	equ	0xFD8
 17432                           
 17433 ;; *************** function i2_SPIGet *****************
 17434 ;; Defined at:
 17435 ;;		line 94 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;		None
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;		None
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      unsigned char 
 17442 ;; Registers used:
 17443 ;;		wreg, status,2, cstack
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17453 ;;Total ram usage:        0 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    1
 17456 ;; This function calls:
 17457 ;;		i2_SPIPut
 17458 ;; This function is called by:
 17459 ;;		_high_isr
 17460 ;;		i2_RegisterRead
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text85
 17465  012AEE                     __ptext85:
 17466                           	opt stack 0
 17467  012AEE                     i2_SPIGet:
 17468                           	opt stack 15
 17469                           
 17470                           ;spi.c: 115: SPIPut(0x00);
 17471                           
 17472                           ;incstack = 0
 17473  012AEE  0E00               	movlw	0
 17474  012AF0  EC20  F095         	call	i2_SPIPut
 17475                           
 17476                           ;spi.c: 116: return SSP1BUF;
 17477  012AF4  50C9               	movf	4041,w,c	;volatile
 17478  012AF6  0012               	return		;funcret
 17479  012AF8                     __end_ofi2_SPIGet:
 17480                           	opt stack 0
 17481                           tblptru	equ	0xFF8
 17482                           tblptrh	equ	0xFF7
 17483                           tblptrl	equ	0xFF6
 17484                           tablat	equ	0xFF5
 17485                           prodh	equ	0xFF4
 17486                           prodl	equ	0xFF3
 17487                           intcon	equ	0xFF2
 17488                           intcon2	equ	0xFF1
 17489                           intcon3	equ	0xFF0
 17490                           postinc0	equ	0xFEE
 17491                           wreg	equ	0xFE8
 17492                           indf1	equ	0xFE7
 17493                           postinc1	equ	0xFE6
 17494                           postdec1	equ	0xFE5
 17495                           fsr1h	equ	0xFE2
 17496                           fsr1l	equ	0xFE1
 17497                           indf2	equ	0xFDF
 17498                           postinc2	equ	0xFDE
 17499                           postdec2	equ	0xFDD
 17500                           fsr2h	equ	0xFDA
 17501                           fsr2l	equ	0xFD9
 17502                           status	equ	0xFD8
 17503                           
 17504 ;; *************** function i2_SPIPut *****************
 17505 ;; Defined at:
 17506 ;;		line 45 in file "../src/system_config/pic18exp_pic18f87j11_89xa/spi.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;  v               1    wreg     unsigned char 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;  v               1    0[COMRAM] unsigned char 
 17511 ;;  SPIPut          1    0        unsigned char 
 17512 ;; Return value:  Size  Location     Type
 17513 ;;                  1    wreg      void 
 17514 ;; Registers used:
 17515 ;;		wreg
 17516 ;; Tracked objects:
 17517 ;;		On entry : 0/0
 17518 ;;		On exit  : 0/0
 17519 ;;		Unchanged: 0/0
 17520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17525 ;;Total ram usage:        1 bytes
 17526 ;; Hardware stack levels used:    1
 17527 ;; This function calls:
 17528 ;;		Nothing
 17529 ;; This function is called by:
 17530 ;;		i2_RegisterSet
 17531 ;;		i2_RegisterRead
 17532 ;;		i2_WriteFIFO
 17533 ;;		i2_SPIGet
 17534 ;; This function uses a non-reentrant model
 17535 ;;
 17536                           
 17537                           	psect	text86
 17538  012A40                     __ptext86:
 17539                           	opt stack 0
 17540  012A40                     i2_SPIPut:
 17541                           	opt stack 16
 17542                           
 17543                           ;incstack = 0
 17544                           ;i2SPIPut@v stored from wreg
 17545  012A40  6E01               	movwf	i2SPIPut@v,c
 17546                           
 17547                           ;spi.c: 47: uint8_t i;
 17548                           ;spi.c: 63: PIR1bits.SSP1IF = 0;
 17549  012A42  969E               	bcf	3998,3,c	;volatile
 17550                           
 17551                           ;spi.c: 64: i = SSP1BUF;
 17552  012A44  50C9               	movf	4041,w,c	;volatile
 17553  012A46                     i2l714:
 17554                           
 17555                           ;spi.c: 67: {
 17556                           ;spi.c: 68: SSP1CON1bits.WCOL = 0;
 17557  012A46  9EC6               	bcf	4038,7,c	;volatile
 17558                           
 17559                           ;spi.c: 69: SSP1BUF = v;
 17560  012A48  C001  FFC9         	movff	i2SPIPut@v,4041	;volatile
 17561                           
 17562                           ;spi.c: 70: } while( SSP1CON1bits.WCOL );
 17563  012A4C  BEC6               	btfsc	4038,7,c	;volatile
 17564  012A4E  D7FB               	goto	i2l714
 17565  012A50                     i2l716:
 17566  012A50  A69E               	btfss	3998,3,c	;volatile
 17567  012A52  D7FE               	goto	i2l716
 17568                           
 17569                           ;spi.c: 74: PIR1bits.SSP1IF = 0;
 17570  012A54  969E               	bcf	3998,3,c	;volatile
 17571  012A56  0012               	return		;funcret
 17572  012A58                     __end_ofi2_SPIPut:
 17573                           	opt stack 0
 17574                           tblptru	equ	0xFF8
 17575                           tblptrh	equ	0xFF7
 17576                           tblptrl	equ	0xFF6
 17577                           tablat	equ	0xFF5
 17578                           prodh	equ	0xFF4
 17579                           prodl	equ	0xFF3
 17580                           intcon	equ	0xFF2
 17581                           intcon2	equ	0xFF1
 17582                           intcon3	equ	0xFF0
 17583                           postinc0	equ	0xFEE
 17584                           wreg	equ	0xFE8
 17585                           indf1	equ	0xFE7
 17586                           postinc1	equ	0xFE6
 17587                           postdec1	equ	0xFE5
 17588                           fsr1h	equ	0xFE2
 17589                           fsr1l	equ	0xFE1
 17590                           indf2	equ	0xFDF
 17591                           postinc2	equ	0xFDE
 17592                           postdec2	equ	0xFDD
 17593                           fsr2h	equ	0xFDA
 17594                           fsr2l	equ	0xFD9
 17595                           status	equ	0xFD8
 17596                           
 17597 ;; *************** function i2_MiWi_TickGet *****************
 17598 ;; Defined at:
 17599 ;;		line 106 in file "../src/system_config/pic18exp_pic18f87j11_89xa/symbol.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 17604 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 17605 ;;  MiWi_TickGet    1    4[COMRAM] unsigned char 
 17606 ;; Return value:  Size  Location     Type
 17607 ;;                  4    0[COMRAM] struct _MIWI_TICK
 17608 ;; Registers used:
 17609 ;;		wreg, status,2, status,0
 17610 ;; Tracked objects:
 17611 ;;		On entry : 0/2
 17612 ;;		On exit  : F/0
 17613 ;;		Unchanged: 0/0
 17614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17616 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17618 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17619 ;;Total ram usage:       10 bytes
 17620 ;; Hardware stack levels used:    1
 17621 ;; This function calls:
 17622 ;;		Nothing
 17623 ;; This function is called by:
 17624 ;;		_high_isr
 17625 ;;		i2_TxPacket
 17626 ;; This function uses a non-reentrant model
 17627 ;;
 17628                           
 17629                           	psect	text87
 17630  01229E                     __ptext87:
 17631                           	opt stack 0
 17632  01229E                     i2_MiWi_TickGet:
 17633                           	opt stack 17
 17634                           
 17635                           ;symbol.c: 108: MIWI_TICK currentTime;
 17636                           ;symbol.c: 109: uint8_t IntFlag1;
 17637                           ;symbol.c: 110: uint8_t IntFlag2;
 17638                           ;symbol.c: 113: currentTime.byte.b2 = 0;
 17639                           
 17640                           ;incstack = 0
 17641  01229E  6A09               	clrf	i2MiWi_TickGet@currentTime+2,c
 17642                           
 17643                           ;symbol.c: 114: currentTime.byte.b3 = 0;
 17644  0122A0  6A0A               	clrf	i2MiWi_TickGet@currentTime+3,c
 17645                           
 17646                           ;symbol.c: 117: PIE1bits.TMR1IE = 0;
 17647  0122A2  909D               	bcf	3997,0,c	;volatile
 17648  0122A4                     i2l6764:
 17649                           
 17650                           ;symbol.c: 120: {
 17651                           ;symbol.c: 121: IntFlag1 = PIR1bits.TMR1IF;
 17652  0122A4  0E00               	movlw	0
 17653  0122A6  B09E               	btfsc	3998,0,c	;volatile
 17654  0122A8  0E01               	movlw	1
 17655  0122AA  6E06               	movwf	i2MiWi_TickGet@IntFlag1,c
 17656                           
 17657                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 17658  0122AC  CFCE F007          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 17659                           
 17660                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 17661  0122B0  CFCF F008          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 17662                           
 17663                           ;symbol.c: 124: IntFlag2 = PIR1bits.TMR1IF;
 17664  0122B4  0E00               	movlw	0
 17665  0122B6  B09E               	btfsc	3998,0,c	;volatile
 17666  0122B8  0E01               	movlw	1
 17667  0122BA  6E05               	movwf	i2MiWi_TickGet@IntFlag2,c
 17668                           
 17669                           ;symbol.c: 125: } while(IntFlag1 != IntFlag2);
 17670  0122BC  5005               	movf	i2MiWi_TickGet@IntFlag2,w,c
 17671  0122BE  1806               	xorwf	i2MiWi_TickGet@IntFlag1,w,c
 17672  0122C0  E1F1               	bnz	i2l6764
 17673                           
 17674                           ;symbol.c: 127: if( IntFlag1 > 0 )
 17675  0122C2  5006               	movf	i2MiWi_TickGet@IntFlag1,w,c
 17676  0122C4  E006               	bz	i2l6782
 17677                           
 17678                           ;symbol.c: 128: {
 17679                           ;symbol.c: 129: PIR1bits.TMR1IF = 0;
 17680  0122C6  909E               	bcf	3998,0,c	;volatile
 17681                           
 17682                           ;symbol.c: 130: timerExtension1++;
 17683  0122C8  2A39               	incf	_timerExtension1,f,c	;volatile
 17684                           
 17685                           ;symbol.c: 131: if(timerExtension1 == 0)
 17686  0122CA  5039               	movf	_timerExtension1,w,c	;volatile
 17687  0122CC  E102               	bnz	i2l6782
 17688                           
 17689                           ;symbol.c: 132: {
 17690                           ;symbol.c: 133: timerExtension2++;
 17691  0122CE  0100               	movlb	0	; () banked
 17692  0122D0  2BDD               	incf	_timerExtension2& (0+255),f,b	;volatile
 17693  0122D2                     i2l6782:
 17694                           
 17695                           ;symbol.c: 134: }
 17696                           ;symbol.c: 135: }
 17697                           ;symbol.c: 137: currentTime.byte.b2 += timerExtension1;
 17698  0122D2  5039               	movf	_timerExtension1,w,c	;volatile
 17699  0122D4  2609               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 17700                           
 17701                           ;symbol.c: 138: currentTime.byte.b3 += timerExtension2;
 17702  0122D6  0100               	movlb	0	; () banked
 17703  0122D8  51DD               	movf	_timerExtension2& (0+255),w,b	;volatile
 17704  0122DA  260A               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;symbol.c: 141: PIE1bits.TMR1IE = 1;
 17708  0122DC  809D               	bsf	3997,0,c	;volatile
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;symbol.c: 143: return currentTime;
 17712  0122DE  C007  F001         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 17713  0122E2  C008  F002         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 17714  0122E6  C009  F003         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 17715  0122EA  C00A  F004         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 17716                           
 17717                           ; BSR set to: 0
 17718  0122EE  0012               	return		;funcret
 17719  0122F0                     __end_ofi2_MiWi_TickGet:
 17720                           	opt stack 0
 17721                           tblptru	equ	0xFF8
 17722                           tblptrh	equ	0xFF7
 17723                           tblptrl	equ	0xFF6
 17724                           tablat	equ	0xFF5
 17725                           prodh	equ	0xFF4
 17726                           prodl	equ	0xFF3
 17727                           intcon	equ	0xFF2
 17728                           intcon2	equ	0xFF1
 17729                           intcon3	equ	0xFF0
 17730                           postinc0	equ	0xFEE
 17731                           wreg	equ	0xFE8
 17732                           indf1	equ	0xFE7
 17733                           postinc1	equ	0xFE6
 17734                           postdec1	equ	0xFE5
 17735                           fsr1h	equ	0xFE2
 17736                           fsr1l	equ	0xFE1
 17737                           indf2	equ	0xFDF
 17738                           postinc2	equ	0xFDE
 17739                           postdec2	equ	0xFDD
 17740                           fsr2h	equ	0xFDA
 17741                           fsr2l	equ	0xFD9
 17742                           status	equ	0xFD8
 17743                           
 17744 ;; *************** function i2_DELAY_10us *****************
 17745 ;; Defined at:
 17746 ;;		line 46 in file "../src/system_config/pic18exp_pic18f87j11_89xa/delay.c"
 17747 ;; Parameters:    Size  Location     Type
 17748 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 17749 ;; Auto vars:     Size  Location     Type
 17750 ;;  DELAY_10us      4    0        volatile long 
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  1    wreg      void 
 17753 ;; Registers used:
 17754 ;;		None
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17761 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17764 ;;Total ram usage:        8 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; This function calls:
 17767 ;;		Nothing
 17768 ;; This function is called by:
 17769 ;;		i2_TxPacket
 17770 ;; This function uses a non-reentrant model
 17771 ;;
 17772                           
 17773                           	psect	text88
 17774  012B14                     __ptext88:
 17775                           	opt stack 0
 17776  012B14                     i2_DELAY_10us:
 17777                           	opt stack 17
 17778                           
 17779                           ;delay.c: 52: {
 17780                           ;delay.c: 58: }
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;incstack = 0
 17784  012B14  0012               	return		;funcret
 17785  012B16                     __end_ofi2_DELAY_10us:
 17786                           	opt stack 0
 17787                           tblptru	equ	0xFF8
 17788                           tblptrh	equ	0xFF7
 17789                           tblptrl	equ	0xFF6
 17790                           tablat	equ	0xFF5
 17791                           prodh	equ	0xFF4
 17792                           prodl	equ	0xFF3
 17793                           intcon	equ	0xFF2
 17794                           intcon2	equ	0xFF1
 17795                           intcon3	equ	0xFF0
 17796                           postinc0	equ	0xFEE
 17797                           wreg	equ	0xFE8
 17798                           indf1	equ	0xFE7
 17799                           postinc1	equ	0xFE6
 17800                           postdec1	equ	0xFE5
 17801                           fsr1h	equ	0xFE2
 17802                           fsr1l	equ	0xFE1
 17803                           indf2	equ	0xFDF
 17804                           postinc2	equ	0xFDE
 17805                           postdec2	equ	0xFDD
 17806                           fsr2h	equ	0xFDA
 17807                           fsr2l	equ	0xFD9
 17808                           status	equ	0xFD8
 17809                           
 17810 ;; *************** function _UserInterruptHandler *****************
 17811 ;; Defined at:
 17812 ;;		line 160 in file "../src/system_config/pic18exp_pic18f87j11_89xa/system.c"
 17813 ;; Parameters:    Size  Location     Type
 17814 ;;		None
 17815 ;; Auto vars:     Size  Location     Type
 17816 ;;		None
 17817 ;; Return value:  Size  Location     Type
 17818 ;;                  1    wreg      void 
 17819 ;; Registers used:
 17820 ;;		None
 17821 ;; Tracked objects:
 17822 ;;		On entry : 0/0
 17823 ;;		On exit  : 0/0
 17824 ;;		Unchanged: 0/0
 17825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17830 ;;Total ram usage:        0 bytes
 17831 ;; Hardware stack levels used:    1
 17832 ;; This function calls:
 17833 ;;		Nothing
 17834 ;; This function is called by:
 17835 ;;		_high_isr
 17836 ;; This function uses a non-reentrant model
 17837 ;;
 17838                           
 17839                           	psect	text89
 17840  012B16                     __ptext89:
 17841                           	opt stack 0
 17842  012B16                     _UserInterruptHandler:
 17843                           	opt stack 18
 17844                           
 17845                           ;incstack = 0
 17846  012B16  0012               	return		;funcret
 17847  012B18                     __end_of_UserInterruptHandler:
 17848                           	opt stack 0
 17849                           tblptru	equ	0xFF8
 17850                           tblptrh	equ	0xFF7
 17851                           tblptrl	equ	0xFF6
 17852                           tablat	equ	0xFF5
 17853                           prodh	equ	0xFF4
 17854                           prodl	equ	0xFF3
 17855                           intcon	equ	0xFF2
 17856                           intcon2	equ	0xFF1
 17857                           intcon3	equ	0xFF0
 17858                           postinc0	equ	0xFEE
 17859                           wreg	equ	0xFE8
 17860                           indf1	equ	0xFE7
 17861                           postinc1	equ	0xFE6
 17862                           postdec1	equ	0xFE5
 17863                           fsr1h	equ	0xFE2
 17864                           fsr1l	equ	0xFE1
 17865                           indf2	equ	0xFDF
 17866                           postinc2	equ	0xFDE
 17867                           postdec2	equ	0xFDD
 17868                           fsr2h	equ	0xFDA
 17869                           fsr2l	equ	0xFD9
 17870                           status	equ	0xFD8
 17871                           tblptru	equ	0xFF8
 17872                           tblptrh	equ	0xFF7
 17873                           tblptrl	equ	0xFF6
 17874                           tablat	equ	0xFF5
 17875                           prodh	equ	0xFF4
 17876                           prodl	equ	0xFF3
 17877                           intcon	equ	0xFF2
 17878                           intcon2	equ	0xFF1
 17879                           intcon3	equ	0xFF0
 17880                           postinc0	equ	0xFEE
 17881                           wreg	equ	0xFE8
 17882                           indf1	equ	0xFE7
 17883                           postinc1	equ	0xFE6
 17884                           postdec1	equ	0xFE5
 17885                           fsr1h	equ	0xFE2
 17886                           fsr1l	equ	0xFE1
 17887                           indf2	equ	0xFDF
 17888                           postinc2	equ	0xFDE
 17889                           postdec2	equ	0xFDD
 17890                           fsr2h	equ	0xFDA
 17891                           fsr2l	equ	0xFD9
 17892                           status	equ	0xFD8
 17893                           
 17894                           	psect	rparam
 17895  0000                     tblptru	equ	0xFF8
 17896                           tblptrh	equ	0xFF7
 17897                           tblptrl	equ	0xFF6
 17898                           tablat	equ	0xFF5
 17899                           prodh	equ	0xFF4
 17900                           prodl	equ	0xFF3
 17901                           intcon	equ	0xFF2
 17902                           intcon2	equ	0xFF1
 17903                           intcon3	equ	0xFF0
 17904                           postinc0	equ	0xFEE
 17905                           wreg	equ	0xFE8
 17906                           indf1	equ	0xFE7
 17907                           postinc1	equ	0xFE6
 17908                           postdec1	equ	0xFE5
 17909                           fsr1h	equ	0xFE2
 17910                           fsr1l	equ	0xFE1
 17911                           indf2	equ	0xFDF
 17912                           postinc2	equ	0xFDE
 17913                           postdec2	equ	0xFDD
 17914                           fsr2h	equ	0xFDA
 17915                           fsr2l	equ	0xFD9
 17916                           status	equ	0xFD8
 17917                           
 17918                           	psect	temp
 17919  000058                     btemp:
 17920                           	opt stack 0
 17921  000058                     	ds	1
 17922  0000                     int$flags	set	btemp
 17923                           tblptru	equ	0xFF8
 17924                           tblptrh	equ	0xFF7
 17925                           tblptrl	equ	0xFF6
 17926                           tablat	equ	0xFF5
 17927                           prodh	equ	0xFF4
 17928                           prodl	equ	0xFF3
 17929                           intcon	equ	0xFF2
 17930                           intcon2	equ	0xFF1
 17931                           intcon3	equ	0xFF0
 17932                           postinc0	equ	0xFEE
 17933                           wreg	equ	0xFE8
 17934                           indf1	equ	0xFE7
 17935                           postinc1	equ	0xFE6
 17936                           postdec1	equ	0xFE5
 17937                           fsr1h	equ	0xFE2
 17938                           fsr1l	equ	0xFE1
 17939                           indf2	equ	0xFDF
 17940                           postinc2	equ	0xFDE
 17941                           postdec2	equ	0xFDD
 17942                           fsr2h	equ	0xFDA
 17943                           fsr2l	equ	0xFD9
 17944                           status	equ	0xFD8


Data Sizes:
    Strings     996
    Constant    350
    Data        27
    BSS         363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      87
    BANK0           160     78     151
    BANK1           256      0     179
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3252	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_45(CODE[17]), STR_44(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_43(CODE[21]), STR_42(CODE[16]), STR_41(CODE[22]), STR_40(CODE[16]), 
		 -> STR_29(CODE[30]), STR_26(CODE[32]), STR_16(CODE[31]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_43(CODE[21]), STR_40(CODE[16]), STR_29(CODE[30]), STR_26(CODE[32]), 
		 -> STR_16(CODE[31]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Read@dest	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    CONSOLE_PutString@str	PTR unsigned char  size(2) Largest target is 66
		 -> STR_39(CODE[19]), STR_38(CODE[46]), STR_37(CODE[24]), STR_36(CODE[3]), 
		 -> STR_35(CODE[7]), STR_34(CODE[26]), STR_33(CODE[28]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[29]), STR_28(CODE[3]), STR_27(CODE[30]), 
		 -> STR_25(CODE[5]), STR_24(CODE[60]), STR_23(CODE[66]), STR_22(CODE[66]), 
		 -> STR_21(CODE[62]), STR_20(CODE[64]), STR_19(CODE[23]), STR_18(CODE[31]), 
		 -> STR_17(CODE[60]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), 
		 -> STR_10(CODE[14]), STR_9(CODE[50]), STR_8(CODE[3]), STR_7(CODE[5]), 
		 -> STR_6(CODE[3]), STR_5(CODE[14]), STR_4(CODE[48]), STR_3(CODE[12]), 
		 -> STR_2(CODE[19]), STR_1(CODE[10]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 50
		 -> ConnectionTable(BANK1[50]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 50
		 -> ConnectionTable(BANK1[50]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK1[50]), NULL(NULL[0]), RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK1[50]), NULL(NULL[0]), RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S826$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BANK2[104]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    S826$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BANK2[104]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), nvmConnectionTable(BANK0[2]), nvmConnMode(BANK0[2]), 
		 -> nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 50
		 -> conn_size(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), ConnectionTable(BANK1[50]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 50
		 -> conn_size(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), ConnectionTable(BANK1[50]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(1) Largest target is 30
		 -> TxBuffer(COMRAM[30]), 

    S293$DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK1[50]), NULL(NULL[0]), RxPacket(BANK2[104]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 104
		 -> ConnectionTable(BANK1[50]), NULL(NULL[0]), RxPacket(BANK2[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S38$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S307$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BANK2[104]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 

    S307$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BANK2[104]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[50]), RxPacket(BANK2[104]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _main in BANK0

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _LCDInitPortB->_SPIPut
    _LCDInitPortA->_SPIPut
    _Run_Demo->_run_p2p_demo
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _DemoOutput_HandleMessage->_CONSOLE_PutString
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _MiApp_BroadcastPacket->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMRead->_SPIPut
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _MiApp_SetChannel->_NVMWrite
    _MiMAC_SetChannel->_SetRFMode
    _EEPROM_Read->_SPIPut
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->_SPIPut
    _SPIGet->_SPIPut
    _DumpConnection->_CONSOLE_PrintDec
    _CONSOLE_PrintHex->_CONSOLE_Put
    _DemoOutput_ChannelError->_CONSOLE_PrintDec
    _DemoOutput_Channel->_LCDDisplay
    _CONSOLE_PrintDec->___lbdiv
    ___lbdiv->___lbmod
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_d_write
    _LCD_Update->_LCD_i_write
    _LCD_i_write->_DELAY_ms
    _LCD_d_write->_DELAY_ms
    _LCD_Erase->_DELAY_ms
    _LCDInitWrite->_LCDWritePortA
    _LCDInitWrite->_LCDWritePortB
    _LCDWritePortB->_SPIPut
    _LCDWritePortA->_SPIPut
    _CONSOLE_PutString->_CONSOLE_Put

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  202299
                                             77 BANK0      1     1      0
                 _CONSOLE_Initialize
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     13    13      0   15140
                                             52 BANK0     13    13      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1717
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    1717
                           _DELAY_ms
                       _LCDInitPortA
                       _LCDInitPortB
                         _LCDInitSPI
                       _LCDInitWrite
                      _LCDWritePortA
 ---------------------------------------------------------------------------------
 (3) _LCDInitSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortB                                         1     1      0      45
                                              1 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _LCDInitPortA                                         1     1      0      45
                                              1 BANK0      1     1      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0   86541
                       _run_p2p_demo
 ---------------------------------------------------------------------------------
 (2) _run_p2p_demo                                        11    11      0   86541
                                             58 BANK0     11    11      0
                      _ButtonPressed
                           _DELAY_ms
             _DemoOutput_Instruction
             _DemoOutput_UnicastFail
              _DemoOutput_UpdateTxRx
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
            _MiApp_UnicastConnection
                  _Process_RxMessage
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    0     0      0   32624
                           _DELAY_ms
           _DemoOutput_HandleMessage
             _DemoOutput_Instruction
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   10772
                                             49 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   10461
                                             47 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_HandleMessage                             3     3      0    3364
                                              4 BANK0      3     3      0
                   _CONSOLE_PrintHex
                        _CONSOLE_Put
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastConnection                              2     1      1    7288
                                             52 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (4) _MiApp_UnicastAddress                                 4     0      4    7133
                                             48 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0    6844
                                             48 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UnicastFail                               0     0      0   16272
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     267
                                             10 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      2     2      0   82605
                                             75 BANK0      2     2      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                     _DumpConnection
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     421
                                             10 BANK0      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   4     4      0   21334
                                             17 BANK0      4     4      0
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
                        _EEPROM_Read
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
                            _NVMRead
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     1      6    1226
                                              1 BANK0      7     1      6
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1147
                                              5 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    1134
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           3     1      2    4499
                                             14 BANK0      3     1      2
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    6424
                                             10 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3003
                                              5 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          3     0      3     913
                                              1 BANK0      3     0      3
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (2) _MiApp_EstablishConnection                           18    17      1   24446
                                             58 BANK0     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   17084
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            20    20      0   17084
                                             48 BANK0     10    10      0
                      _AddConnection
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                           _NVMWrite
                         _SendPacket
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          10     6      4    6822
                                             38 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                     8     3      5    4556
                                             30 BANK0      8     3      5
                           _TxPacket
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            20    19      1    3835
                                             10 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            2     2      0      67
                                              1 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            1     1      0    1435
                                              4 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         3     1      2    1413
                                              1 BANK0      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         3     3      0     113
                                              1 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _DELAY_10us                                           8     4      4     158
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0     647
                                             10 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        10     6      4     221
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    4676
                                             10 BANK0      7     7      0
                           _NVMWrite
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     668
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    3421
                                             10 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             9     3      6    3377
                                              1 BANK0      9     3      6
                           _MacroNop
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      22
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DumpConnection                                       5     5      0    4865
                                             11 BANK0      5     5      0
                   _CONSOLE_PrintDec
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PrintHex                                     2     2      0     135
                                              1 BANK0      2     2      0
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_Instruction                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0    4102
                                             11 BANK0      1     1      0
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   17547
                                             52 BANK0      2     1      1
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _CONSOLE_PrintDec                                     3     3      0     987
                                              8 BANK0      3     3      0
                        _CONSOLE_Put
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     515
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     340
                                              4 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   16272
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   13179
                                             47 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    5105
                                             12 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     337
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     337
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     696
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0    3300
                                             15 BANK0      1     1      0
                        _LCD_d_write
                        _LCD_i_write
 ---------------------------------------------------------------------------------
 (4) _LCD_i_write                                          1     1      0    1560
                                             14 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (4) _LCD_d_write                                          1     1      0    1560
                                             14 BANK0      1     1      0
                           _DELAY_ms
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    1923
                           _DELAY_ms
                       _LCDInitWrite
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     363
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCDInitWrite                                         1     1      0     156
                                              3 BANK0      1     1      0
                      _LCDWritePortA
                      _LCDWritePortB
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortB                                        2     2      0      67
                                              1 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _LCDWritePortA                                        2     2      0      67
                                              1 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _DELAY_ms                                            14    12      2    1404
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (5) _CONSOLE_PutString                                    3     1      2    3093
                                              1 BANK0      3     1      2
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (6) _CONSOLE_Put                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONSOLE_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           23    23      0    3006
                                             30 COMRAM    23    23      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (13) i2_TxPacket                                         20    19      1    1274
                                             10 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (14) i2_WriteFIFO                                         2     2      0      67
                                              1 COMRAM     2     2      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (14) i2_SetRFMode                                         1     1      0     267
                                              4 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (15) i2_RegisterSet                                       3     1      2     245
                                              1 COMRAM     3     1      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (14) i2_RegisterRead                                      3     3      0     113
                                              1 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_SPIGet                                            0     0      0      22
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_SPIPut                                            2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_MiWi_TickGet                                     10     6      4     201
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (14) i2_DELAY_10us                                        8     4      4      95
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONSOLE_Initialize
   _DemoOutput_Greeting
     _CONSOLE_PutString
       _CONSOLE_Put
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _CONSOLE_Put
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCDInitWrite
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _memset
         _LCD_Update
           _LCD_d_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
           _LCD_i_write
             _DELAY_ms
             _LCDWritePortA
               _SPIPut
             _LCDWritePortB
               _SPIPut
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _CONSOLE_Put
     _DemoOutput_Instruction
     _DumpConnection
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _Total_Connections
             _isSameAddress
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPIGet
               _SPIPut
             _SPIPut
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
           _isSameAddress
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_ProtocolInit
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _CONSOLE_Put
       _EEPROM_Read
         _SPIGet
           _SPIPut
         _SPIPut
       _InitSymbolTimer
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
         _NVMWrite
           _MacroNop
           _SPIGet
             _SPIPut
           _SPIPut
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPIGet
           _SPIPut
         _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMWrite
         _MacroNop
         _SPIGet
           _SPIPut
         _SPIPut
     _MiApp_StartConnection
       _MiWi_TickGet
   _Run_Demo
     _run_p2p_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_Instruction
       _DemoOutput_UnicastFail
         _CONSOLE_PutString
           _CONSOLE_Put
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCDInitWrite
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _memset
           _LCD_Update
             _LCD_d_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
             _LCD_i_write
               _DELAY_ms
               _LCDWritePortA
                 _SPIPut
               _LCDWritePortB
                 _SPIPut
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_HandleMessage
           _CONSOLE_PrintHex
             _CONSOLE_Put
           _CONSOLE_Put
           _CONSOLE_PutString
             _CONSOLE_Put
         _DemoOutput_Instruction
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
               _DELAY_ms
               _LCDInitWrite
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _memset
             _LCD_Update
               _LCD_d_write
                 _DELAY_ms
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
               _LCD_i_write
                 _DELAY_ms
                 _LCDWritePortA
                   _SPIPut
                 _LCDWritePortB
                   _SPIPut
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _Total_Connections
               _isSameAddress
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPIGet
                 _SPIPut
               _SPIPut
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             _isSameAddress
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _LCDInitPortA
         _SPIPut
       _LCDInitPortB
         _SPIPut
       _LCDInitSPI
       _LCDInitWrite
         _LCDWritePortA
           _SPIPut
         _LCDWritePortB
           _SPIPut
       _LCDWritePortA
         _SPIPut
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDInitWrite
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _memset
       _LCD_Update
         _LCD_d_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
         _LCD_i_write
           _DELAY_ms
           _LCDWritePortA
             _SPIPut
           _LCDWritePortB
             _SPIPut
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _MiWi_TickGet

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B3       7       69.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      57       1       92.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     209      12        0.0%
DATA                 0      0     209       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 22:52:56 2016

                                 i2_TxPacket 1550                       _PUSH_BUTTON_press_time 00C0  
                                          _i 00DB                                 _run_p2p_demo 0D8A  
                             _LCD_Initialize 1F5E                            _Process_RxMessage 26CE  
                       ?_MiMAC_DiscardPacket 0001                               ?_isSameAddress 0060  
                              ?_LCDInitPortA 0001                                ?_LCDInitPortB 0001  
                                         _DE FB3B                                           l82 1432  
                                         l83 1434                                           l84 146E  
                                         l96 14C0                                ?_LCDInitWrite 0001  
                                ?_LCD_Update 0001                          ___wmul@multiplicand 0062  
                        MiApp_ProtocolInit@i 0074                           ?_Process_RxMessage 0001  
                               NVMRead@count 0065                                   _MiMAC_Init 19F4  
                            _P2PCapacityInfo 00D0                                          l144 17F4  
                                        l145 1828                                          l163 1288  
                                        l139 17AE                                          l411 0AAC  
                                        l157 1200                                          l423 0B7E  
                                        l344 2826                                          l615 191A  
                                        l616 190A                                          l529 1336  
                                        l377 0B6E                                          l714 2A2E  
                                        l716 2A38                                          l549 248C  
                             ?i2_RegisterSet 0002                                          l582 2AC4  
                                        l399 09A8                                          l479 170C  
                                        l596 1EC2                                          l855 199A  
                                        l874 1D08                                          l967 0D9C  
                            ??_AddConnection 006A                                  LCDDisplay@i 0093  
                                        prod 000FF3                                          wreg 000FE8  
                        ??_Process_RxMessage 009A                          __size_of_DELAY_10us 0002  
                                i2_WriteFIFO 298C                                NVMInit@result 0065  
          __end_of_MiApp_EstablishConnection 177C               __size_of_MiApp_StartConnection 001A  
              __end_of_MiApp_StartConnection 2A26                                 ?_LCD_d_write 0001  
                          _Total_Connections 280A                                         l1034 1FE6  
                                       l1141 048E                                         l1133 03F6  
                                       l1029 1CE2                                         l1142 0492  
                                       l1160 0576                                         l1144 04B2  
                                       l1090 018C                                         l1139 0468  
                                       l1075 0182                                         l1059 001E  
                                       l1156 0610                                         l1076 0144  
                                       l1093 01C6                                         l1094 01CA  
                                       l5000 2358                                         l5010 2376  
                                       l5002 235C                                         l5020 241A  
                                       l5022 241E                                         l5200 1DF2  
                                       l5120 131E                                         l6000 1A12  
                                       l5026 2430                                         l5018 2412  
                                       l6010 1A2E                                         l5204 1E0A  
                                       l5132 132C                                         l5124 1326  
                                       l5116 1314                                         l5108 12D4  
                                       l5060 1202                                         l5036 114C  
                                       l1589 2380                                         l5222 1E4A  
                                       l5206 1E1C                                         l5310 01D0  
                                       l5142 133C                                         l5134 1330  
                                       l5070 1252                                         l5046 11F2  
                                       l1599 243A                                         l5224 1E5C  
                                       l5304 01B2                                         l4600 208C  
                                       l6104 266A                                         l5218 1E32  
                                       l5330 022C                                         l5314 01E0  
                                       l5322 0208                                         l5242 0028  
                                       l4610 22F8                                         l6042 226E  
                                       l5412 0382                                         l5340 025A  
                                       l5332 023E                                         l5316 01F0  
                                       l5260 0078                                         l5244 002C  
                                       l5252 003A                                         l5236 0006  
                                       l5156 13B8                                         l5076 128C  
                                       l5510 05BC                                         l5422 03BA  
                                       l5414 0394                                         l5326 021C  
                                       l5246 0030                                         l6126 1E92  
                                       l4606 209A                                         l4702 1542  
                                       l6310 1108                                         l6302 1056  
                                       l5520 05FC                                         l5504 0586  
                                       l5440 042C                                         l5336 024C  
                                       l5344 0260                                         l5248 0034  
                                       l5088 12C0                                         l4704 154C  
                                       l6080 277E                                         l6048 2288  
                                       l5434 03FA                                         l5418 03A8  
                                       l5370 02F0                                         l5362 02DE  
                                       l5346 029E                                         l4642 143C  
                                       l6402 173A                                         l6074 276C  
                                       l6242 0F8E                                         l5508 05B6  
                                       l5460 04C2                                         l5428 03D0  
                                       l5292 016A                                         l5276 0102  
                                       l5268 00D8                                         l4628 2324  
                                       l5604 084E                                         l6412 1764  
                                       l6308 10BA                                         l5542 06F6  
                                       l5534 0696                                         l5526 0612  
                                       l5470 0500                                         l5454 04AC  
                                       l5446 046C                                         l5382 031E  
                                       l5358 02CC                                         l5294 0186  
                                       l6510 0D24                                         l4654 145C  
                                       l5606 0860                                         l6342 2A18  
                                       l6190 1D2C                                         l5552 072A  
                                       l5528 0656                                         l5544 0708  
                                       l5384 0322                                         l5368 02EC  
                                       l5560 0762                                         l5296 018A  
                                       l5288 0148                                         l6504 0CE0  
                                       l6432 0B9C                                         l4840 1C4C  
                                       l4592 206C                                         l4584 204C  
                                       l4664 1492                                         l5608 0866  
                                       l6416 1770                                         l6256 0FB2  
                                       l6336 2A10                                         l7216 2986  
                                       l5538 06BE                                         l5298 0190  
                                       l6522 0D3C                                         l6530 0D7E  
                                       l6442 0BC6                                         l4826 1C18  
                                       l4690 14F8                                         l4674 14B6  
                                       l4762 17C4                                         l6290 102A  
                                       l6610 0DA0                                         l5548 0716  
                                       l5476 0514                                         l5484 0534  
                                       l5396 0350                                         l6508 0D18  
                                       l4596 207C                                         l4588 205C  
                                       l4668 14A8                                         l4780 182C  
                                       l4772 17FC                                         l4748 1784  
                                       l5740 0A5E                                         l5732 0A46  
                                       l5716 09BA                                         l5628 0884  
                                       l6284 0FDA                                         l5900 195C  
                                       l6604 0D94                                         l5494 055A  
                                       l5398 0354                                         l5558 0746  
                                       l6462 0C40                                         l4870 27AA  
                                       l4686 14EC                                         l5750 0A96  
                                       l5742 0A7A                                         l5646 08B8  
                                       l5574 07CE                                         l6366 16AA  
                                       l6358 1680                                         l5822 1A9C  
                                       l6198 1D66                                         l5488 053E  
                                       l6464 0C4C                                         l4848 280E  
                                       l4864 278A                                         l4688 14F0  
                                       l4768 17E4                                         l5728 0A3C  
                                       l5656 08C8                                         l5664 08E4  
                                       l5920 19C4                                         l6640 0E9A  
                                       l6632 0E14                              ?i2_RegisterRead 0001  
                                       l6458 0C08                                         l4786 1848  
                                       l4778 1818                                         l5674 0932  
                                       l5594 0834                                         l5914 199C  
                                       l4972 284E                                         l6492 0CB4  
                                       l6476 0C64                                         l6484 0CA6  
                                       l5924 19D6                                         l6628 0E08  
                                       l4982 2A04                                         l5950 2590  
                                       l5942 257C                                         l4798 1BD0  
                                       l5774 0B3A                                         l5766 0AC6  
                                       l5758 0AB2                                         l5694 096C  
                                       l5678 093A                                         l5782 0B46  
                                       l6910 1CE0                                         l4968 283E  
                                       l5944 2580                                         l5784 0B70  
                                       l5848 2742                                         l5928 19EC  
                                       l6672 0F10                                         l5794 28FC  
                                       l5938 2576                                         l5954 2598  
                                       l5970 287E                                         l5962 2868  
                                       l6586 21B4                                         l6690 0F68  
                                       l6674 0F14                                         l6658 0EB2  
                                       l6682 0F30                                         l5796 2902  
                                       l5884 23F2                                         l6692 0F6A  
                                       l4998 2350                                         l6934 202A  
                                       l6926 2000                                         l5894 193C  
                                       l6694 0F6E                                         l6936 203C  
                                       l6688 0F66                                         l5898 1950  
                                       l6698 0F78                                         l6896 1CB4  
                                       STR_1 FFE0                                         STR_2 FF4F  
                                       STR_3 FFD4                                         STR_4 FD97  
                                       STR_5 FFC6                                         STR_6 FFD1  
                                       STR_7 FFCF                                         STR_8 FFFC  
                                       STR_9 FD95                                         _LATA 000F89  
                                       _LATB 000F8A                                         _LATC 000F8B  
                                       _LATD 000F8C                                         u3035 2806  
                                       u3036 2808                                         u3045 2696  
                                       u3046 2698                                         u3055 28D0  
                                       u3056 28D2                                         u3225 2636  
                                       u3226 2638                                         u3170 1534  
                                       u3250 178E                                         u3235 2602  
                     __size_of_ButtonPressed 0084                                         u3236 2604  
                                       u5005 2728                                         u5006 272A  
                                       u5015 26CA                                         u4160 045E  
                                       u3520 11E0                                         u4400 07B2  
                                       u5016 26CC                                         u3268 1792  
                                       u3700 1B54                                         u5060 1D64  
                                       u3365 1C5C                                         u3366 1C5E  
                                       u4360 072A                                         u4440 080A  
                                       u5170 16E8                                         u4435 07F8  
                                       u5155 1120                                         u3740 1B88  
                                       u5156 1124                                         u3725 1B6E  
                                       u4437 07FC                                         u3726 1B72  
                                       u3718 1B58                                         u3735 1B7A  
                                       u3736 1B7E                                         u3680 1B3C  
                                       u4465 0824                                         u4458 080E  
                                       u4467 0828                                         u3758 1B8C  
                                       u3698 1B40                    DemoOutput_Channel@channel 0095  
                                       u4945 229A                                         i2l82 1558  
                                       u4946 229C                                         i2l83 155A  
                                       i2l84 1596                                         i2l96 15E0  
                               ?_LCD_i_write 0001                    CONSOLE_PrintHex@PRINT_VAR 0061  
                  freezer_feature@switch_val 00A0                                         _MiWi FABD  
                         ?_Total_Connections 0001                    MiApp_StartConnection@Mode 006F  
                 MiMAC_SetChannel@offsetFreq 0065                                         _main 296A  
                            __end_of_NVMInit 211C                              __end_of_NVMRead 229E  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       indf1 000FE7                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                                       btemp 0058                           __size_of_LCD_Erase 0028  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 03A8                             __end_of_DELAY_ms 192C  
                               _sprintf$3252 0080                                 _sprintf$3245 007C  
                               _sprintf$3246 007E                          ??_Total_Connections 0060  
                     __end_of_LCD_Initialize 1FD8                    __end_of_Process_RxMessage 26FE  
                             _InitConfigRegs FB7D                                 high_isr@bAck 0030  
                            ?_DumpConnection 0001                                 ___param_bank 000010  
                      ??_MiMAC_DiscardPacket 0060                               NVMRead@oldRFIE 0067  
                             ??_LCDInitPortA 0061                               ??_LCDInitPortB 0061  
                             ??_LCDInitWrite 0063                             __end_of_P2PTasks 0B84  
               __end_of_MiApp_DiscardMessage 2B08                                        ?_main 0001  
                            __end_of___lbdiv 259C                                        STR_10 FFC6  
                                      STR_11 FFD1                                        STR_12 FFCF  
                                      STR_20 FC9F                MiApp_EstablishConnection@Mode 009A  
                                      STR_13 FFFC                                        STR_21 FCDF  
                                      STR_14 FF95                                        STR_30 FE8F  
                                      STR_22 FC5D                                        STR_31 FFFC  
                                      STR_15 FF84                                        STR_23 FC1B  
                                      STR_32 FFEA                                        STR_40 FFB6  
                                      STR_16 FE15                                        STR_24 FD1D  
                                      STR_25 FFFA                                        STR_41 FF11  
                                      STR_33 FEAC                                        STR_17 FD59  
                                      STR_42 FFA6                                        STR_34 FEC8  
                                      STR_18 FE34                                        STR_26 FDF5  
                                      STR_35 FFF3                                        STR_43 FF27  
                                      STR_19 FEFA                                        STR_27 FE53  
                                      STR_28 FFFC                                        STR_36 FFDD  
                                      STR_44 FF62                                        STR_45 FF73  
                                      STR_37 FEE2                                        STR_29 FE71  
                                      STR_38 FDC7                                        STR_39 FF3C  
                            __end_of___lbmod 2886                                        _T1CON 000FCD  
                                LCD_Update@i 006F                      ?_DemoOutput_Instruction 0001  
                            __end_of___lwdiv 238A                              __end_of___lwmod 2444  
                                      i2l202 0260                                        i2l183 0096  
                                      i2l192 0156                                        i2l176 0078  
                                      i2l178 00AC                                        i2l189 00D0  
                                      i2l714 2A46                                        i2l716 2A50  
                                      _RCSTA 000FAC                     __size_of_InitSymbolTimer 0012  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                                        _SPBRG 000FB0  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRISD 000F95  
                                      _TXREG 000FAE                                        _TXSTA 000FAD  
                           SendPacket@tParam 008D                             __end_ofi2_SPIGet 2AF8  
                              _LCDWritePortA 2606                                _LCDWritePortB 25D2  
                     ?_DemoOutput_UpdateTxRx 0091                            high_isr@BankIndex 0034  
                           __end_ofi2_SPIPut 2A58                    __end_of_Total_Connections 2834  
                                      _RxNum 00D5                                        _TxNum 00D7  
                     i2MiWi_TickGet@IntFlag1 0006                       i2MiWi_TickGet@IntFlag2 0005  
                        __size_of_LCDDisplay 003E                __size_of_MiApp_ConnectionMode 003A  
                       freezer_feature@tick1 0098                         freezer_feature@tick2 009C  
                            __end_of_dpowers FC13                          __size_of_LCDInitSPI 0008  
                           SendPacket@status 008B                __size_of_MiApp_UnicastAddress 0014  
                            __end_of_isdigit 2A0C                             __end_of_NVMWrite 1C60  
                           __end_of_NVMalloc 275A                                        tablat 000FF5  
                             ButtonPressed@t 006E                          __size_of_LCD_Update 0080  
                                      status 000FD8                              __end_of_sprintf 076E  
                            ___lbdiv@divisor 0064                              ___lbdiv@counter 0066  
                     __end_of_InitConfigRegs FBBD                                ?i2_DELAY_10us 0001  
                  __size_of_MiMAC_SetChannel 009C                         __size_of_EEPROM_Read 002E  
                __end_of_DemoOutput_Greeting 1DE8            __size_of_DemoOutput_HandleMessage 00C8  
                            ?_LCD_Initialize 0001                                 __end_of_MiWi FB3B  
                            __initialization 1EE4                    ?_DemoOutput_HandleMessage 0001  
                            ??_isSameAddress 0064                                  ?i2_TxPacket 000B  
                  __size_of_MiMAC_SendPacket 00E0                             __end_of_MacroNop 2B10  
                               __end_of_main 298C                             _CONSOLE_PrintDec 1E68  
                           _CONSOLE_PrintHex 24BA                               TxPacket@status 007B  
                              _ButtonPressed 1CE4                              ??i2_RegisterSet 0004  
     MiApp_UnicastConnection@ConnectionIndex 0095               __end_of_DemoOutput_Instruction 2B14  
                              ??_RegisterSet 0063                            high_isr@PacketLen 0033  
                                     ??_main 00AD                                  ?_MiMAC_Init 006E  
                    _DemoOutput_ChannelError 2946                                __activetblptr 000003  
                               NVMWrite@addr 0063                            __end_of_LCD_Erase 28AE  
                       __end_of_MiWi_TickGet 2340                                _IRQ1_Received 00CC  
                             ?_LCDWritePortA 0001                               ?_LCDWritePortB 0001  
                    MiApp_SetChannel@channel 006A                             __end_of_TxPacket 1550  
                           __end_of_Run_Demo 2B0C            MiApp_ProtocolInit@bNetworkFreezer 0071  
                       __size_of_CONSOLE_Put 000C                         _MiMAC_ReceivedPacket 114A  
                            i2SetRFMode@mode 0005                                   _SendPacket 1B2C  
                                  ??_NVMInit 0065                                    ??_NVMRead 0067  
                                     _ANCON0 000FC1                                       _ANCON1 000FC2  
                   ?_MiApp_UnicastConnection 0094                                       _MACSeq 00CE  
                             __CFG_WDTEN$OFF 000000                                       i2l7006 1660  
                                     i2l7102 0184                                       i2l7110 01D0  
                                     i2l7030 004E                                       i2l7120 01FA  
                                     i2l7112 01E2                                       i2l7050 008E  
                                     i2l7042 007A                                       i2l7140 0240  
                                     i2l7108 01CE                                       i2l7060 00B6  
                                     i2l7150 0262                                       i2l7038 006C  
                                     i2l7162 02DE                                       i2l7156 02C2  
                                     i2l7092 0126                                       i2l7180 036C  
                                     i2l7166 02E6                                       i2l7182 0372  
                                     i2l7176 034E                                       i2l7096 012E  
                                     i2l6730 2130                                       i2l7178 0364  
                                     i2l7186 0376                                       i2l6742 2160  
                                     i2l6734 2140                                       i2l6726 2120  
                                     i2l7198 0388                                       i2l6738 2150  
                                     i2l6764 22A4                                       i2l6748 216E  
                                     i2l6782 22D2                                       i2l6972 15C8  
                                     i2l6948 1564                                       i2l6990 160C  
                                     i2l6958 1584                                       i2l6992 1610  
                                     i2l6968 15B4                                       i2l6994 1616  
                                     i2l6978 15D6                                       _OSCCON 000FD3  
                             __CFG_WDTPS$128 000000                                       _PVALUE FBBD  
                                     _SVALUE FBDD                                       _SPIGet 2AE4  
                                     _SPIPut 2A26              MiApp_StartConnection@ChannelMap 006B  
                    i2RegisterSet@IRQ1select 0004                         __size_of_LCDTRXCount 003E  
                             ??i2_DELAY_10us 0005                __size_of_UserInterruptHandler 0002  
                               ??_DELAY_10us 0064                      ?_DemoOutput_UnicastFail 0001  
                              LCDInitWrite@v 0063                                   TxPacket@t1 006F  
                                 TxPacket@t2 0073                           __size_of_SetRFMode 006C  
                             P2PTasks@status 0098                               __CFG_XINST$OFF 000000  
                                     _TxData 00D6                   __size_of_Process_RxMessage 0030  
                 __end_of_CONSOLE_Initialize 2AA4                             __end_of_high_isr 03A8  
                       CONSOLE_PutString@str 0061                                       ___wmul 28D4  
                    ??_MiApp_BroadcastPacket 0090                                    ??___lbdiv 0065  
                             ?_ButtonPressed 0001                                    ??___lbmod 0061  
                                     _hasAck 00DA                     __size_of_freezer_feature 0084  
                  __size_of_MiApp_SetChannel 0032                                    ??___lwdiv 0064  
                                  ??___lwmod 006B                                       _memset 2834  
                                     clear_0 1F2A                                       clear_1 1F36  
                                     clear_2 1F42                                       clear_3 1F4E  
                                     _nvmEdc 00E4                                 NVMalloc@size 0060  
                          high_isr@ackPacket 002C                                    ??_isdigit 0060  
                             LCDDisplay@text 008F                                 __mediumconst FABC  
                      ?_MiMAC_ReceivedPacket 0001                  __size_of_DemoOutput_Channel 0064  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 002A                                       tblptru 000FF8  
                ??_MiApp_EstablishConnection 009B                                    ?_DELAY_ms 0060  
                               LCD_d_write@v 006E                           __end_of_DELAY_10us 2B12  
                                 _TxSynCount 00D8                          __end_of_RegisterSet 280A  
                              ?_RegisterRead 0001                          __size_ofi2_TxPacket 011C  
                                  ??_sprintf 0078                            _ReceivedBankIndex 00D4  
                           ___lbdiv@dividend 0065                            ??_InitSymbolTimer 0060  
                       __end_of_LCDInitPortA 272C                         __end_of_LCDInitPortB 26CE  
                               ?i2_SetRFMode 0001                         __end_of_LCDInitWrite 25D2  
                            __CFG_FOSC$HSPLL 000000                            _SYSTEM_Initialize 21E8  
                                  ?_P2PTasks 0001                              ___lbmod@divisor 0060  
                       _MiApp_DiscardMessage 2B00                          _PUSH_BUTTON_pressed 00D2  
                       __size_of_LCD_d_write 003C                                   __accesstop 0060  
                         __size_of_WriteFIFO 0026                      __end_of__initialization 1F54  
                            ___lbmod@counter 0062               __end_of_DemoOutput_UnicastFail 29CE  
                                  P2PTasks@i 0099                         __size_of_LCD_i_write 003A  
                               LCD_i_write@v 006E              MiMAC_ReceivedPacket@currentTick 0072  
                         ?_SYSTEM_Initialize 0001                          __size_of_MiMAC_Init 009C  
                              ___rparam_used 000001                               _chk_sel_status 00ED  
                           _LatestConnection 00CD                                 ??_LCDDisplay 0093  
                            NVMWrite@oldRFIE 0068                                 ??_LCDInitSPI 0060  
                          high_isr@fifo_stat 002B                               __pcstackCOMRAM 0001  
                                  ?i2_SPIGet 0001                      CONSOLE_PrintDec@toPrint 006A  
                                  ?i2_SPIPut 0001                                 __pidataBANK0 2ACE  
                               __pidataBANK1 2AA4                          ??_SYSTEM_Initialize 006E  
                      i2RegisterRead@address 0002                     __size_of_Initialize_Demo 006E  
                  ??_DemoOutput_ChannelError 006B                                 ??_LCD_Update 006F  
                                 __end_of_DE FB7D                             ___lbdiv@quotient 0067  
                                  ?_NVMWrite 0061                                    ?_NVMalloc 0060  
                            ??_LCDWritePortA 0061                              ??_LCDWritePortB 0061  
                            TxPacket@rssival 007A                            _CONSOLE_PutString 28FA  
                            _ConnectionTable 0150                             ??i2_RegisterRead 0002  
            __end_of_MiApp_UnicastConnection 2566                           ?_CONSOLE_PutString 0061  
                          __end_of_SetRFMode 20B2                                 ?i2_WriteFIFO 0001  
                                 ??_DELAY_ms 0062                               ??_RegisterRead 0061  
                                ?_SendPacket 0086                           __end_of_LCDDisplay 2406  
                  __end_of_SYSTEM_Initialize 224A                                 sprintf@width 008A  
                         __end_of_LCDInitSPI 2B00                        isSameAddress@Address1 0060  
                      isSameAddress@Address2 0062                                    ?_MacroNop 0001  
                                 __pbssBANK0 00AE                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                        ?_MiApp_DiscardMessage 0001  
                        ??_CONSOLE_PutString 0063                                   ??_P2PTasks 0090  
                __size_of_MiApp_ProtocolInit 01C2                                NVMWrite@count 0065  
                           ??_DumpConnection 006B                                      ?_SPIGet 0001  
                                    ?_SPIPut 0001                           RegisterSet@setting 0061  
                         __end_of_LCD_Update 1E68                    SendPacket@SecurityEnabled 0089  
                             isSameAddress@i 0066                   MiApp_BroadcastPacket@SecEn 0090  
                        i2RegisterRead@value 0003                             _MiMAC_SetChannel 1A90  
                  _MiApp_EstablishConnection 166C                              ??_ButtonPressed 006A  
                                  ?_TxPacket 006A                             _MiMAC_SendPacket 177C  
                                 ??i2_SPIGet 0002                                   ??i2_SPIPut 0001  
                                  ?_Run_Demo 0001                                      ?___wmul 0060  
                      __size_of_MiWi_TickGet 0050                                      ?_memset 0060  
                  __end_of_CONSOLE_PutString 2920                                      SPIPut@v 0060  
                                 ??_NVMWrite 0067                                   ??_NVMalloc 0063  
                          __end_of_WriteFIFO 28D4                      ??_DemoOutput_UpdateTxRx 0092  
                                _RegisterSet 27E0                            ??_freezer_feature 0094  
                     ??_MiMAC_ReceivedPacket 006A                                      _LCDText 0182  
                       __end_ofi2_DELAY_10us 2B16                        i2WriteFIFO@IRQ1select 0003  
                      __end_of_AddConnection 1428                                      _SSP1BUF 000FC9  
                                    _NVMInit 20B2                                      _NVMRead 224A  
                   __end_of_CONSOLE_PrintDec 1EE4                                      _RF_Mode 0036  
           __end_of_DemoOutput_HandleMessage 19F4                                      _AckInfo 0132  
                   __end_of_CONSOLE_PrintHex 24F4                                    ?_high_isr 0001  
                                    _RSSIVal 0037                                   ??_MacroNop 0060  
                      _MiApp_StartConnection 2A0C                             ??_LCD_Initialize 006E  
                AddConnection@connectionSlot 006F                              _timerExtension1 0039  
                            _timerExtension2 00DD                                  TxPacket@CCA 006A  
                   MiApp_ConnectionMode@Mode 006B                              __size_of_SPIGet 000A  
                           _AdditionalNodeID 00EC                              __size_of_SPIPut 001A  
                __end_of_MiMAC_DiscardPacket 29EE                              P2PTasks@tmpTick 0094  
                                 DELAY_ms@ms 0060                                 _MiWi_TickGet 22F0  
                                    __Hparam 0000                                      __Lparam 0000  
               __end_of_MiApp_ConnectionMode 24BA                                 ??i2_TxPacket 000C  
                                 ??_TxPacket 006B                 __end_of_MiApp_UnicastAddress 2A6C  
                                 ??_Run_Demo 00A5                      __size_ofi2_MiWi_TickGet 0052  
                                    ___lbdiv 2566                                      ___lbmod 285E  
                            __size_of___wmul 0026                             _MiApp_SetChannel 263A  
                        __size_of_SendPacket 009A                                      ___lwdiv 2340  
                                    ___lwmod 2406                                      __pcinit 1EE4  
                            __size_of_memset 002A               DemoOutput_ChannelError@channel 006B  
                                    __ramtop 1000                                      __ptext0 296A  
                                    __ptext1 1C60                                 ??_MiMAC_Init 0070  
                                    __ptext2 21E8                                      __ptext3 1F5E  
                                    __ptext4 2AF8                                      __ptext5 269E  
                                    __ptext6 26FE                                      __ptext7 2B08  
                                    __ptext8 0D8A                                      __ptext9 26CE  
                          __end_of_hexpowers FC1B                                    _T1CONbits 000FCD  
                                    _dpowers FC09                Initialize_Demo@freezer_enable 00AB  
                   ??_MiApp_MessageAvailable 009A                                      _isdigit 29EE  
                    CONSOLE_PrintHex@toPrint 0062                            ??_Initialize_Demo 00AB  
                              _myLongAddress 00EE                        __size_of_LCDInitPortA 002E  
                      __size_of_LCDInitPortB 0030                       DemoOutput_Channel@Step 0094  
                      __size_of_LCDInitWrite 0036                       RegisterRead@IRQ1select 0063  
                       LCDWritePortA@preRFIE 0062                                    _P2PStatus 00D1  
                                  _LCD_Erase 2886                                  _MyindexinPC 00CF  
                       LCDWritePortB@preRFIE 0062                   __size_of_SYSTEM_Initialize 0062  
                                    _sprintf 0000                       ??_MiApp_DiscardMessage 0060  
                                 ??_high_isr 001F                           __end_ofi2_TxPacket 166C  
                       end_of_initialization 1F54                            __end_of_octpowers FC09  
                                  i2SPIPut@v 0001                                ??_EEPROM_Read 0064  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066                MiMAC_SendPacket@MACPayloadLen 0082  
                       __size_ofi2_SetRFMode 0068                              LCDDisplay@delay 0092  
          i2DELAY_10us@tenMicroSecondCounter 0001              DELAY_10us@tenMicroSecondCounter 0060  
                                 _nvmMyPANID 00E6                              LCDDisplay@value 0091  
                         __end_of_MiMAC_Init 1A90                 MiApp_UnicastConnection@SecEn 0094  
           __size_of_MiApp_UnicastConnection 0038                      MiMAC_SetChannel@channel 0067  
                                _TxSynCount2 00D9                                      postdec1 000FE5  
                                    postdec2 000FDD                         __end_of_RegisterRead 269E  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                        __end_of_isSameAddress 27B4  
       DELAY_ms@cyclesRequiredForEntireDelay 006A                          RegisterRead@address 0061  
             __size_of_MiApp_BroadcastPacket 0014                                 _LCDInitPortA 26FE  
                               _LCDInitPortB 269E                                WriteFIFO@Data 0061  
              __end_of_MiApp_BroadcastPacket 2A80                                 _LCDInitWrite 259C  
                 __size_of_CONSOLE_PutString 0026                 __size_of_DemoOutput_Greeting 0080  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                            _InitSymbolTimer 2A80                             NVMalloc@location 0062  
                      __end_ofi2_RegisterSet 2946                 __end_of_UserInterruptHandler 2B18  
                              ??_CONSOLE_Put 0060                           _CONSOLE_Initialize 2A92  
                           ___lbmod@dividend 0061                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISDbits 000F95                                    _TRISEbits 000F96  
                                  _TRISFbits 000F97                                   ?_LCD_Erase 0001  
                       MiWi_TickGet@IntFlag1 0065                         MiWi_TickGet@IntFlag2 0064  
                    MiMAC_SendPacket@TxIndex 0084                                  NVMRead@addr 0063  
                       __size_ofi2_WriteFIFO 0022                                  NVMRead@dest 0061  
                        ?_CONSOLE_Initialize 0001                       ?_MiApp_StartConnection 006A  
                          __size_of_DELAY_ms 00D0                                ??_LCDTRXCount 0090  
                                ___lbmod@rem 0063                   MiMAC_SendPacket@transParam 007E  
                   _DemoOutput_HandleMessage 192C                    MiApp_UnicastAddress@SecEn 0093  
                                  _TXSTAbits 000FAD                               __end_of_PVALUE FBDD  
                          __size_of_P2PTasks 0416                               __end_of_SVALUE FBFD  
                             __end_of_SPIGet 2AEE                               __end_of_SPIPut 2A40  
                        __end_of_EEPROM_Read 2788                                ?_run_p2p_demo 0001  
                        DumpConnection@index 006D                         ??_CONSOLE_Initialize 0060  
                             __end_of___wmul 28FA                            __size_ofi2_SPIGet 000A  
                      __size_ofi2_DELAY_10us 0002                            __size_ofi2_SPIPut 0018  
         __size_of_MiApp_EstablishConnection 0110                               __end_of_memset 285E  
                 __end_of_DemoOutput_Channel 21E8                            __size_of_NVMWrite 009A  
            __size_of_MiApp_MessageAvailable 000A             MiMAC_ReceivedPacket@PayloadIndex 0076  
                   __end_of_MiMAC_SetChannel 1B2C                            __size_of_NVMalloc 002E  
                        start_initialization 1EE4                                TxPacket@reTry 0078  
                        WriteFIFO@IRQ1select 0062                     __end_of_MiMAC_SendPacket 185C  
                               ??_SendPacket 008A                         _MiApp_ConnectionMode 2480  
                         TxPacket@CCARetries 0077                   i2TxPacket@allowedTxFailure 001C  
                            high_isr@counter 0029                                ??_LCD_d_write 006E  
                       _MiApp_UnicastAddress 2A58                          __end_of_CONSOLE_Put 2ACE  
                                  _SetRFMode 2046                                ??_LCD_i_write 006E  
                          __size_of_MacroNop 0004                                     ??_SPIGet 0061  
                                   ??_SPIPut 0060                               _currentChannel 00EB  
                               i2_DELAY_10us 2B14                                    TxPacket@i 007D  
                        __end_of_LCDTRXCount 23C8  MiApp_EstablishConnection@connectionInterval 00A5  
                   ??_DemoOutput_Instruction 0060                               ??_run_p2p_demo 009A  
                  run_p2p_demo@PressedButton 00A1                              _freezer_feature 1C60  
                    __end_of_InitSymbolTimer 2A92                               i2_MiWi_TickGet 229E  
                                   ??___wmul 0064            MiApp_UnicastAddress@PermanentAddr 0092  
                                __pdataBANK0 00EC                                  __pdataBANK1 01A3  
                          __size_of_TxPacket 0128                           __end_of_SendPacket 1BC6  
                                   ??_memset 0066                            __size_of_Run_Demo 0004  
                               ?_RegisterSet 0061                            RegisterRead@value 0062  
             __size_of_DemoOutput_UpdateTxRx 000E                        __end_of_LCDWritePortA 263A  
                    MiWi_TickGet@currentTime 0066                        __end_of_LCDWritePortB 2606  
              __end_of_DemoOutput_UpdateTxRx 2AC2                                  __pbssCOMRAM 0036  
                                  _WriteFIFO 28AE                                __pcstackBANK0 0060  
                      ?_MiApp_ConnectionMode 0001                          SendPacket@Broadcast 008C  
                                ??_LCD_Erase 006E       MiApp_UnicastAddress@DestinationAddress 0090  
                      ?_MiApp_UnicastAddress 0090                                 _isdigit$3476 0061  
                                   ?_NVMInit 0001                   __end_of_MiApp_ProtocolInit 114A  
                                   ?_NVMRead 0061                               NVMWrite@source 0061  
                 MiApp_EstablishConnection@i 00AA                     __end_of_MiApp_SetChannel 266C  
                          ?_CONSOLE_PrintDec 0001                                   ?_SetRFMode 0001  
                          ?_CONSOLE_PrintHex 0001                                  MiMAC_Init@i 0070  
                          __size_of_high_isr 03A0                           ??_CONSOLE_PrintDec 0068  
                                sprintf@flag 008D                           ??_CONSOLE_PrintHex 0061  
                                _EEPROM_Read 275A                                  sprintf@prec 0089  
                        __end_of_LCD_d_write 2480                        __size_of_RegisterRead 0032  
                     _MiApp_MessageAvailable 2ADA                         _UserInterruptHandler 2B16  
                     __end_ofi2_MiWi_TickGet 22F0                          __end_of_LCD_i_write 252E  
                          MiMAC_SendPacket@i 0085                             ___lwdiv@dividend 0060  
                    _MiApp_UnicastConnection 252E                     ?_DemoOutput_ChannelError 0001  
                                  __pintcode 0008                                __pmediumconst FABC  
                            _Initialize_Demo 1FD8                        __end_of_ButtonPressed 1D68  
                                   ?___lbdiv 0064                                     ?___lbmod 0060  
                                   ?___lwdiv 0060                                     ?___lwmod 0067  
                                  _conn_size 00EA                                  _CONSOLE_Put 2AC2  
                                   ?_isdigit 0001                                   ?_WriteFIFO 0001  
              __size_of_MiMAC_ReceivedPacket 0182                                     _DELAY_ms 185C  
                        AddConnection@status 006E                                    _hexpowers FC13  
                   ??_DemoOutput_UnicastFail 0094                             ___lwdiv@quotient 0064  
                                   ?_sprintf 006C                          NVMWrite@PageCounter 0069  
                               _RegisterRead 266C                                  _LCDTRXCount 238A  
                                   _P2PTasks 076E                          _DemoOutput_Greeting 1D68  
                    __end_of_freezer_feature 1CE4                               ___wmul@product 0064  
                    __size_ofi2_RegisterRead 002C                                     _LATAbits 000F89  
                       i2RegisterSet@setting 0002                                     _LATCbits 000F8B  
                                   _LATDbits 000F8C                                     _LATEbits 000F8D  
                                   _LATFbits 000F8E                        ?_UserInterruptHandler 0001  
                                  _octpowers FBFD                                     _PIE1bits 000F9D  
                 DemoOutput_UpdateTxRx@RxNum 0091                   DemoOutput_UpdateTxRx@TxNum 0092  
                            ?i2_MiWi_TickGet 0001                                     _PIR1bits 000F9E  
                                   i2u508_45 2942                                     i2u508_46 2944  
                                   i2u546_45 27DA                                     i2u546_46 27DC  
                                   i2u547_45 29AA                                     i2u547_46 29AC  
                                   i2u564_40 1652                                    _rxMessage 00AE  
                         _nvmConnectionTable 00E0                          high_isr@RxPacketPtr 0031  
                                   i2_SPIGet 2AEE              __size_of_DemoOutput_Instruction 0002  
                                   i2_SPIPut 2A40                             ?_InitSymbolTimer 0001  
                                   _SSP1CON1 000FC6                       __size_of_AddConnection 015C  
                                   _SSP1STAT 000FC7                 __size_of_MiMAC_DiscardPacket 0020  
                    __size_of_DumpConnection 0206     MiApp_EstablishConnection@ActiveScanIndex 0001  
          MiApp_StartConnection@ScanDuration 006A                                  _MACRxPacket 00B8  
                       ?_DemoOutput_Greeting 0001                                     _RSSILock 00D3  
                                   _NVMWrite 1BC6                                  _MACTxBuffer 0100  
                              SetRFMode@mode 0064                                     _NVMalloc 272C  
                          ___wmul@multiplier 0060                               _CharacterArray 01A3  
                                  high_isr@i 0035                        i2TxPacket@TxPacketLen 0010  
                     ??_MiApp_ConnectionMode 006A                           main@freezer_enable 00AD  
                     ??_MiApp_UnicastAddress 0094                      ??_MiApp_StartConnection 006F  
                        SendPacket@isCommand 0088                         high_isr@ackInfoIndex 0032  
                 ??_DemoOutput_HandleMessage 0064                         __end_of_run_p2p_demo 0F88  
                             _nextEEPosition 00CA       DELAY_10us@cyclesRequiredForEntireDelay 0064  
                                   _ConnMode 00F6                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0               MiApp_EstablishConnection@retry 00A0  
                                _LCD_d_write 2444                                    copy_data0 1EF8  
                                  copy_data1 1F18                                ??i2_SetRFMode 0005  
                                ??_SetRFMode 0064                                     _MacroNop 2B0C  
                           __size_of_NVMInit 006A                             __size_of_NVMRead 0054  
                                _LCD_i_write 24F4                __size_of_MiApp_DiscardMessage 0008  
                                   _TxMACSeq 0038              __end_of_DemoOutput_ChannelError 296A  
                  ??_MiApp_UnicastConnection 0095                      __end_of_Initialize_Demo 2046  
                                 _DELAY_10us 2B10                                     __Hrparam 0000  
                                   _RxPacket 0200                                     _TxBuffer 003A  
                               _nvmDelayTick 00C4                                     __Lrparam 0000  
                         CONSOLE_PutString@c 0063                                     _TxPacket 1428  
                                   _Run_Demo 2B08                           Total_Connections@i 0061  
                    __size_of_LCD_Initialize 007A                        MiMAC_ReceivedPacket@i 0077  
                           __size_of___lbdiv 0036                             __size_of___lbmod 0028  
                      ??_DemoOutput_Greeting 0094                             __size_of___lwdiv 004A  
                           __size_of___lwmod 003E                     i2RegisterRead@IRQ1select 0004  
                     run_p2p_demo@switch_val 00A3                        _MiApp_BroadcastPacket 2A6C  
                                 sprintf@idx 0082                                   sprintf@len 0084  
                                 sprintf@val 0087                         __size_of_RegisterSet 002A  
                              ??i2_WriteFIFO 0002                                  ??_WriteFIFO 0061  
                           __size_of_isdigit 001E                            ?_MiMAC_SetChannel 0065  
                            ___lwdiv@divisor 0062                       _DemoOutput_Instruction 2B12  
                            ___lwdiv@counter 0066                                     __ptext10 2AB4  
                                   __ptext11 238A                                     __ptext20 0F88  
                                   __ptext12 192C                                     __ptext21 224A  
                                   __ptext13 252E                                     __ptext30 2ADA  
                                   __ptext22 20B2                                     __ptext14 2A58  
                                   __ptext31 076E                                     __ptext23 272C  
                                   __ptext15 2A6C                                     __ptext40 114A  
                                   __ptext32 1B2C                                     __ptext24 19F4  
                                   __ptext16 29AE                                     __ptext41 22F0  
                                   __ptext33 177C                                     __ptext25 263A  
                                   __ptext17 1CE4                                     __ptext50 2B0C  
                                   __ptext42 12CC                                     __ptext34 1428  
                                   __ptext26 1A90                                     __ptext18 1FD8  
                                   __ptext51 0B84                                     __ptext43 2788  
                                   __ptext35 28AE                                     __ptext27 2A80  
                                   __ptext19 2A0C                                     __ptext60 23C8  
                                   __ptext52 24BA                                     __ptext44 280A  
                                   __ptext36 2046                                     __ptext28 275A  
                                   __ptext61 0000                                     __ptext53 2B12  
                                   __ptext45 2B00                                     __ptext37 27E0  
                                   __ptext29 166C                                     __ptext70 2834  
                                   __ptext62 29EE                                     __ptext54 2946  
                                   __ptext46 29CE                                     __ptext38 266C  
                                   __ptext71 259C                                     __ptext63 28D4  
                                   __ptext55 2184                                     __ptext47 2480  
                                   __ptext39 2B10                                     __ptext80 1550  
                                   __ptext72 25D2                                     __ptext64 2406  
                                   __ptext56 1E68                                     __ptext48 1BC6  
                                   __ptext81 298C                                     __ptext73 2606  
                                   __ptext65 2340                                     __ptext57 285E  
                                   __ptext49 2AE4                                     __ptext82 211C  
                                   __ptext74 2A26                                     __ptext66 1DE8  
                                   __ptext58 2566                                     __ptext83 2920  
                                   __ptext75 185C                                     __ptext67 24F4  
                                   __ptext59 1D68                                     __ptext84 27B4  
                                   __ptext76 28FA                                     __ptext68 2444  
                                   __ptext85 2AEE                                     __ptext77 2AC2  
                                   __ptext69 2886                                     __ptext86 2A40  
                                   __ptext78 2A92                                     __ptext87 229E  
                                   __ptext88 2B14                                     __ptext89 2B16  
                               _SSP1CON1bits 000FC6                                _AddConnection 12CC  
                   TxPacket@allowedTxFailure 0079                           ??_MiMAC_SetChannel 0066  
                          ?_MiMAC_SendPacket 007E              __size_of_DemoOutput_UnicastFail 0020  
                                   _high_isr 0008                             __size_of_sprintf 076E  
                            DumpConnection@i 006F                              DumpConnection@j 006E  
                     __size_of_isSameAddress 002C                           ??_MiMAC_SendPacket 0083  
                           Initialize_Demo@i 00AC                           _DemoOutput_Channel 2184  
                     ??_UserInterruptHandler 0001                                __size_of_main 0022  
                           ?_freezer_feature 0001                       __size_ofi2_RegisterSet 0026  
                        __end_ofi2_SetRFMode 2184                          ?_DemoOutput_Channel 0094  
                                 _LCDDisplay 23C8                                     _temp_bit 00DC  
                                 _LCDInitSPI 2AF8                        run_p2p_demo@select_ed 00A4  
                                   int$flags 0058                           LCDTRXCount@rxCount 008F  
                MiApp_EstablishConnection@t1 00A1                  MiApp_EstablishConnection@t2 00A6  
                         LCDTRXCount@txCount 0090                  __size_of_CONSOLE_Initialize 0012  
                                 _LCD_Update 1DE8                   MiMAC_SendPacket@MACPayload 0081  
                      run_p2p_demo@update_ed 00A2                                   _INTCONbits 000FF2  
                             AddConnection@i 0070                         ??_DemoOutput_Channel 0095  
                            i2WriteFIFO@Data 0002                                 CONSOLE_Put@c 0060  
                             ?_AddConnection 0001                  ButtonPressed@tickDifference 006A  
                                   isdigit@c 0062                                     memset@p1 0060  
                        LCDInitPortA@preRFIE 0061                                  _nvmConnMode 00DE  
                     Total_Connections@count 0060                  MiApp_ProtocolInit@initValue 0072  
                        LCDInitPortB@preRFIE 0061                                     intlevel2 0000  
                          ?_MiApp_SetChannel 0001                                    sprintf@ap 0086  
                                  sprintf@cp 0083                                    sprintf@sp 006C  
                    ?_MiApp_MessageAvailable 0001                          __end_ofi2_WriteFIFO 29AE  
                             i2_RegisterRead 27B4                             ___lwmod@dividend 0067  
                               ?_EEPROM_Read 0061                           ??_MiApp_SetChannel 006A  
                           ?_Initialize_Demo 0001                                ?_MiWi_TickGet 0060  
                  DemoOutput_HandleMessage@i 0066                                  ?_DELAY_10us 0060  
                             LCDWritePortA@v 0061                               LCDWritePortB@v 0061  
                         _MiApp_ProtocolInit 0F88                 SendPacket@DestinationAddress 0086  
                     _DemoOutput_UnicastFail 29AE                                _MACInitParams 00C8  
                        MiMAC_Init@initValue 006E                    __size_of_CONSOLE_PrintDec 007C  
                  __size_of_CONSOLE_PrintHex 003A                               _DumpConnection 0B84  
                              _isSameAddress 2788                          ?_MiApp_ProtocolInit 0001  
                     ?_MiApp_BroadcastPacket 0001                                     sprintf@c 008C  
                                   sprintf@f 006E                        __size_of_run_p2p_demo 01FE  
                               ?_CONSOLE_Put 0001                                i2_RegisterSet 2920  
           __size_of_DemoOutput_ChannelError 0024                              ___lwmod@divisor 0069  
 MiApp_EstablishConnection@tmpConnectionMode 009F                              ___lwmod@counter 006B  
                          i2TxPacket@rssival 001D                          TxPacket@TxPacketLen 007C  
                 ?_MiApp_EstablishConnection 009A                        _DemoOutput_UpdateTxRx 2AB4  
                       i2TxPacket@CCARetries 001A                                   _WDTCONbits 000FC0  
             __end_of_MiApp_MessageAvailable 2AE4                       __end_ofi2_RegisterRead 27E0  
                        _MiMAC_DiscardPacket 29CE                                  i2_SetRFMode 211C  
                         _nvmOutFrameCounter 00E8                            _nvmCurrentChannel 00E2  
                       ??_MiApp_ProtocolInit 0071                             i2TxPacket@status 0011  
                               ?_LCDTRXCount 008F                             ??i2_MiWi_TickGet 0005  
                           EEPROM_Read@count 0063                              i2TxPacket@reTry 001B  
                             ??_MiWi_TickGet 0064                              EEPROM_Read@addr 0062  
                              i2TxPacket@CCA 000B                    i2MiWi_TickGet@currentTime 0007  
                            EEPROM_Read@dest 0061                        RegisterSet@IRQ1select 0063  
               __end_of_MiMAC_ReceivedPacket 12CC                                 i2TxPacket@t1 0012  
                               i2TxPacket@t2 0016                                  ?_LCDDisplay 008F  
                     __size_of_LCDWritePortA 0034                       __size_of_LCDWritePortB 0034  
                                i2TxPacket@i 001E                       __end_of_DumpConnection 0D8A  
                                ?_LCDInitSPI 0001  
