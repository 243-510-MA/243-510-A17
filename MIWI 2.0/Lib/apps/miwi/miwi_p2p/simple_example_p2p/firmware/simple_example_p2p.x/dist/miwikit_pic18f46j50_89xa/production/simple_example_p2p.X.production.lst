

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 22:33:43 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105  0000                     
   106                           	psect	idataCOMRAM
   107  002C92                     __pidataCOMRAM:
   108                           	opt stack 0
   109                           
   110                           ;initializer for _myLongAddress
   111  002C92  01                 	db	1
   112  002C93  77                 	db	119
   113  002C94  66                 	db	102
   114  002C95  55                 	db	85
   115  002C96  44                 	db	68
   116  002C97  33                 	db	51
   117  002C98  22                 	db	34
   118  002C99  11                 	db	17
   119                           
   120                           	psect	idataBANK0
   121  002CA8                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _AdditionalNodeID
   125  002CA8  01                 	db	1
   126                           
   127                           ;initializer for _chk_sel_status
   128  002CA9  01                 	db	1
   129                           
   130                           ;initializer for _ConnMode
   131  002CAA  03                 	db	3
   132                           
   133                           	psect	mediumconst
   134  00FCBE                     __pmediumconst:
   135                           	opt stack 0
   136  00FCBE  00                 	db	0
   137  00FCBF                     _MiWi:
   138                           	opt stack 0
   139  00FCBF  20                 	db	32
   140  00FCC0  B2                 	db	178
   141  00FCC1  20                 	db	32
   142  00FCC2  20                 	db	32
   143  00FCC3  20                 	db	32
   144  00FCC4  B2                 	db	178
   145  00FCC5  20                 	db	32
   146  00FCC6  20                 	db	32
   147  00FCC7  B2                 	db	178
   148  00FCC8  20                 	db	32
   149  00FCC9  B2                 	db	178
   150  00FCCA  20                 	db	32
   151  00FCCB  20                 	db	32
   152  00FCCC  20                 	db	32
   153  00FCCD  20                 	db	32
   154  00FCCE  20                 	db	32
   155  00FCCF  B2                 	db	178
   156  00FCD0  20                 	db	32
   157  00FCD1  B2                 	db	178
   158  00FCD2  0D                 	db	13
   159  00FCD3  0A                 	db	10
   160  00FCD4  B2                 	db	178
   161  00FCD5  20                 	db	32
   162  00FCD6  B2                 	db	178
   163  00FCD7  20                 	db	32
   164  00FCD8  B2                 	db	178
   165  00FCD9  20                 	db	32
   166  00FCDA  B2                 	db	178
   167  00FCDB  20                 	db	32
   168  00FCDC  20                 	db	32
   169  00FCDD  20                 	db	32
   170  00FCDE  B2                 	db	178
   171  00FCDF  20                 	db	32
   172  00FCE0  20                 	db	32
   173  00FCE1  B2                 	db	178
   174  00FCE2  20                 	db	32
   175  00FCE3  20                 	db	32
   176  00FCE4  B2                 	db	178
   177  00FCE5  20                 	db	32
   178  00FCE6  20                 	db	32
   179  00FCE7  0D                 	db	13
   180  00FCE8  0A                 	db	10
   181  00FCE9  B2                 	db	178
   182  00FCEA  20                 	db	32
   183  00FCEB  20                 	db	32
   184  00FCEC  B2                 	db	178
   185  00FCED  20                 	db	32
   186  00FCEE  20                 	db	32
   187  00FCEF  B2                 	db	178
   188  00FCF0  20                 	db	32
   189  00FCF1  B2                 	db	178
   190  00FCF2  20                 	db	32
   191  00FCF3  B2                 	db	178
   192  00FCF4  20                 	db	32
   193  00FCF5  20                 	db	32
   194  00FCF6  B2                 	db	178
   195  00FCF7  20                 	db	32
   196  00FCF8  20                 	db	32
   197  00FCF9  B2                 	db	178
   198  00FCFA  20                 	db	32
   199  00FCFB  B2                 	db	178
   200  00FCFC  0D                 	db	13
   201  00FCFD  0A                 	db	10
   202  00FCFE  B2                 	db	178
   203  00FCFF  20                 	db	32
   204  00FD00  20                 	db	32
   205  00FD01  B2                 	db	178
   206  00FD02  20                 	db	32
   207  00FD03  20                 	db	32
   208  00FD04  B2                 	db	178
   209  00FD05  20                 	db	32
   210  00FD06  B2                 	db	178
   211  00FD07  20                 	db	32
   212  00FD08  20                 	db	32
   213  00FD09  B2                 	db	178
   214  00FD0A  20                 	db	32
   215  00FD0B  B2                 	db	178
   216  00FD0C  20                 	db	32
   217  00FD0D  B2                 	db	178
   218  00FD0E  20                 	db	32
   219  00FD0F  20                 	db	32
   220  00FD10  B2                 	db	178
   221  00FD11  0D                 	db	13
   222  00FD12  0A                 	db	10
   223  00FD13  B2                 	db	178
   224  00FD14  20                 	db	32
   225  00FD15  20                 	db	32
   226  00FD16  B2                 	db	178
   227  00FD17  20                 	db	32
   228  00FD18  20                 	db	32
   229  00FD19  B2                 	db	178
   230  00FD1A  20                 	db	32
   231  00FD1B  B2                 	db	178
   232  00FD1C  20                 	db	32
   233  00FD1D  20                 	db	32
   234  00FD1E  20                 	db	32
   235  00FD1F  B2                 	db	178
   236  00FD20  20                 	db	32
   237  00FD21  B2                 	db	178
   238  00FD22  20                 	db	32
   239  00FD23  20                 	db	32
   240  00FD24  20                 	db	32
   241  00FD25  B2                 	db	178
   242  00FD26  0D                 	db	13
   243  00FD27  0A                 	db	10
   244  00FD28  20                 	db	32
   245  00FD29  20                 	db	32
   246  00FD2A  20                 	db	32
   247  00FD2B  20                 	db	32
   248  00FD2C  20                 	db	32
   249  00FD2D  20                 	db	32
   250  00FD2E  20                 	db	32
   251  00FD2F  20                 	db	32
   252  00FD30  20                 	db	32
   253  00FD31  20                 	db	32
   254  00FD32  20                 	db	32
   255  00FD33  20                 	db	32
   256  00FD34  20                 	db	32
   257  00FD35  20                 	db	32
   258  00FD36  20                 	db	32
   259  00FD37  20                 	db	32
   260  00FD38  20                 	db	32
   261  00FD39  20                 	db	32
   262  00FD3A  20                 	db	32
   263  00FD3B  0D                 	db	13
   264  00FD3C  0A                 	db	10
   265  00FD3D                     __end_of_MiWi:
   266                           	opt stack 0
   267  00FD3D                     _DE:
   268                           	opt stack 0
   269  00FD3D  B2                 	db	178
   270  00FD3E  B2                 	db	178
   271  00FD3F  B2                 	db	178
   272  00FD40  20                 	db	32
   273  00FD41  20                 	db	32
   274  00FD42  B2                 	db	178
   275  00FD43  B2                 	db	178
   276  00FD44  B2                 	db	178
   277  00FD45  B2                 	db	178
   278  00FD46  0D                 	db	13
   279  00FD47  0A                 	db	10
   280  00FD48  B2                 	db	178
   281  00FD49  20                 	db	32
   282  00FD4A  20                 	db	32
   283  00FD4B  B2                 	db	178
   284  00FD4C  20                 	db	32
   285  00FD4D  B2                 	db	178
   286  00FD4E  20                 	db	32
   287  00FD4F  20                 	db	32
   288  00FD50  20                 	db	32
   289  00FD51  0D                 	db	13
   290  00FD52  0A                 	db	10
   291  00FD53  B2                 	db	178
   292  00FD54  20                 	db	32
   293  00FD55  20                 	db	32
   294  00FD56  B2                 	db	178
   295  00FD57  20                 	db	32
   296  00FD58  B2                 	db	178
   297  00FD59  B2                 	db	178
   298  00FD5A  B2                 	db	178
   299  00FD5B  B2                 	db	178
   300  00FD5C  0D                 	db	13
   301  00FD5D  0A                 	db	10
   302  00FD5E  B2                 	db	178
   303  00FD5F  20                 	db	32
   304  00FD60  20                 	db	32
   305  00FD61  B2                 	db	178
   306  00FD62  20                 	db	32
   307  00FD63  B2                 	db	178
   308  00FD64  20                 	db	32
   309  00FD65  20                 	db	32
   310  00FD66  20                 	db	32
   311  00FD67  0D                 	db	13
   312  00FD68  0A                 	db	10
   313  00FD69  B2                 	db	178
   314  00FD6A  B2                 	db	178
   315  00FD6B  B2                 	db	178
   316  00FD6C  20                 	db	32
   317  00FD6D  20                 	db	32
   318  00FD6E  B2                 	db	178
   319  00FD6F  B2                 	db	178
   320  00FD70  B2                 	db	178
   321  00FD71  B2                 	db	178
   322  00FD72  0D                 	db	13
   323  00FD73  0A                 	db	10
   324  00FD74  20                 	db	32
   325  00FD75  20                 	db	32
   326  00FD76  20                 	db	32
   327  00FD77  20                 	db	32
   328  00FD78  20                 	db	32
   329  00FD79  20                 	db	32
   330  00FD7A  20                 	db	32
   331  00FD7B  20                 	db	32
   332  00FD7C  20                 	db	32
   333  00FD7D  0D                 	db	13
   334  00FD7E  0A                 	db	10
   335  00FD7F                     __end_of_DE:
   336                           	opt stack 0
   337  00FD7F                     _InitConfigRegs:
   338                           	opt stack 0
   339  00FD7F  002E               	dw	46
   340  00FD81  0284               	dw	644
   341  00FD83  0409               	dw	1033
   342  00FD85  0609               	dw	1545
   343  00FD87  080C               	dw	2060
   344  00FD89  0AC1               	dw	2753
   345  00FD8B  0C77               	dw	3191
   346  00FD8D  0E64               	dw	3684
   347  00FD8F  1032               	dw	4146
   348  00FD91  1200               	dw	4608
   349  00FD93  1400               	dw	5120
   350  00FD95  1600               	dw	5632
   351  00FD97  1838               	dw	6200
   352  00FD99  1AC8               	dw	6856
   353  00FD9B  1C0D               	dw	7181
   354  00FD9D  1E00               	dw	7680
   355  00FD9F  2072               	dw	8306
   356  00FDA1  2238               	dw	8760
   357  00FDA3  2438               	dw	9272
   358  00FDA5  2607               	dw	9735
   359  00FDA7  2800               	dw	10240
   360  00FDA9  2A00               	dw	10752
   361  00FDAB  2C69               	dw	11369
   362  00FDAD  2E81               	dw	11905
   363  00FDAF  307E               	dw	12414
   364  00FDB1  3296               	dw	12950
   365  00FDB3  34F8               	dw	13560
   366  00FDB5  3688               	dw	13960
   367  00FDB7  3840               	dw	14400
   368  00FDB9  3A00               	dw	14848
   369  00FDBB  3CE8               	dw	15592
   370  00FDBD  3E00               	dw	15872
   371  00FDBF                     __end_of_InitConfigRegs:
   372                           	opt stack 0
   373  00FDBF                     _PVALUE:
   374                           	opt stack 0
   375  00FDBF  54                 	db	84
   376  00FDC0  54                 	db	84
   377  00FDC1  54                 	db	84
   378  00FDC2  54                 	db	84
   379  00FDC3  54                 	db	84
   380  00FDC4  54                 	db	84
   381  00FDC5  54                 	db	84
   382  00FDC6  54                 	db	84
   383  00FDC7  54                 	db	84
   384  00FDC8  54                 	db	84
   385  00FDC9  54                 	db	84
   386  00FDCA  54                 	db	84
   387  00FDCB  54                 	db	84
   388  00FDCC  54                 	db	84
   389  00FDCD  55                 	db	85
   390  00FDCE  55                 	db	85
   391  00FDCF  55                 	db	85
   392  00FDD0  55                 	db	85
   393  00FDD1  55                 	db	85
   394  00FDD2  55                 	db	85
   395  00FDD3  55                 	db	85
   396  00FDD4  55                 	db	85
   397  00FDD5  55                 	db	85
   398  00FDD6  55                 	db	85
   399  00FDD7  55                 	db	85
   400  00FDD8  55                 	db	85
   401  00FDD9  55                 	db	85
   402  00FDDA  55                 	db	85
   403  00FDDB  55                 	db	85
   404  00FDDC  55                 	db	85
   405  00FDDD  55                 	db	85
   406  00FDDE  55                 	db	85
   407  00FDDF                     __end_of_PVALUE:
   408                           	opt stack 0
   409  00FDDF                     _SVALUE:
   410                           	opt stack 0
   411  00FDDF  2D                 	db	45
   412  00FDE0  30                 	db	48
   413  00FDE1  33                 	db	51
   414  00FDE2  35                 	db	53
   415  00FDE3  38                 	db	56
   416  00FDE4  3B                 	db	59
   417  00FDE5  3E                 	db	62
   418  00FDE6  41                 	db	65
   419  00FDE7  43                 	db	67
   420  00FDE8  46                 	db	70
   421  00FDE9  49                 	db	73
   422  00FDEA  4C                 	db	76
   423  00FDEB  4F                 	db	79
   424  00FDEC  51                 	db	81
   425  00FDED  09                 	db	9
   426  00FDEE  0C                 	db	12
   427  00FDEF  0F                 	db	15
   428  00FDF0  12                 	db	18
   429  00FDF1  15                 	db	21
   430  00FDF2  17                 	db	23
   431  00FDF3  1A                 	db	26
   432  00FDF4  1D                 	db	29
   433  00FDF5  20                 	db	32
   434  00FDF6  23                 	db	35
   435  00FDF7  25                 	db	37
   436  00FDF8  28                 	db	40
   437  00FDF9  2B                 	db	43
   438  00FDFA  2E                 	db	46
   439  00FDFB  31                 	db	49
   440  00FDFC  33                 	db	51
   441  00FDFD  36                 	db	54
   442  00FDFE  39                 	db	57
   443  00FDFF                     __end_of_SVALUE:
   444                           	opt stack 0
   445  00FDFF                     _octpowers:
   446                           	opt stack 0
   447  00FDFF  0001               	dw	1
   448  00FE01  0008               	dw	8
   449  00FE03  0040               	dw	64
   450  00FE05  0200               	dw	512
   451  00FE07  1000               	dw	4096
   452  00FE09  8000               	dw	32768
   453  00FE0B                     __end_of_octpowers:
   454                           	opt stack 0
   455  00FE0B                     _dpowers:
   456                           	opt stack 0
   457  00FE0B  0001               	dw	1
   458  00FE0D  000A               	dw	10
   459  00FE0F  0064               	dw	100
   460  00FE11  03E8               	dw	1000
   461  00FE13  2710               	dw	10000
   462  00FE15                     __end_of_dpowers:
   463                           	opt stack 0
   464  00FE15                     _hexpowers:
   465                           	opt stack 0
   466  00FE15  0001               	dw	1
   467  00FE17  0010               	dw	16
   468  00FE19  0100               	dw	256
   469  00FE1B  1000               	dw	4096
   470  00FE1D                     __end_of_hexpowers:
   471                           	opt stack 0
   472  0000                     _PPSCONbits	set	3839
   473  0000                     _RPINR1	set	3815
   474  0000                     _RPINR21	set	3835
   475  0000                     _RPOR19	set	3801
   476  0000                     _RPOR21	set	3803
   477  0000                     _ANCON0	set	3912
   478  0000                     _ANCON1	set	3913
   479  0000                     _EECON2	set	4007
   480  0000                     _INTCON2bits	set	4081
   481  0000                     _INTCON3bits	set	4080
   482  0000                     _INTCONbits	set	4082
   483  0000                     _LATAbits	set	3977
   484  0000                     _LATCbits	set	3979
   485  0000                     _LATDbits	set	3980
   486  0000                     _LATEbits	set	3981
   487  0000                     _OSCCON	set	4051
   488  0000                     _OSCTUNEbits	set	3995
   489  0000                     _PIE1bits	set	3997
   490  0000                     _PIR1bits	set	3998
   491  0000                     _PIR3bits	set	4004
   492  0000                     _PORTBbits	set	3969
   493  0000                     _SSP1BUF	set	4041
   494  0000                     _SSP1CON1	set	4038
   495  0000                     _SSP1CON1bits	set	4038
   496  0000                     _SSP1STAT	set	4039
   497  0000                     _SSP2BUF	set	3957
   498  0000                     _SSP2CON1	set	3954
   499  0000                     _SSP2CON1bits	set	3954
   500  0000                     _SSP2STAT	set	3955
   501  0000                     _T1CON	set	4045
   502  0000                     _T1CONbits	set	4045
   503  0000                     _TMR0L	set	4054
   504  0000                     _TMR1H	set	4047
   505  0000                     _TMR1L	set	4046
   506  0000                     _TRISAbits	set	3986
   507  0000                     _TRISBbits	set	3987
   508  0000                     _TRISCbits	set	3988
   509  0000                     _TRISDbits	set	3989
   510  0000                     _TRISEbits	set	3990
   511  0000                     _WDTCONbits	set	4032
   512  00FE1D                     STR_8:
   513  00FE1D  0D                 	db	13
   514  00FE1E  0A                 	db	10
   515  00FE1F  0D                 	db	13
   516  00FE20  0A                 	db	10
   517  00FE21  43                 	db	67	;'C'
   518  00FE22  6F                 	db	111	;'o'
   519  00FE23  6E                 	db	110	;'n'
   520  00FE24  6E                 	db	110	;'n'
   521  00FE25  65                 	db	101	;'e'
   522  00FE26  63                 	db	99	;'c'
   523  00FE27  74                 	db	116	;'t'
   524  00FE28  69                 	db	105	;'i'
   525  00FE29  6F                 	db	111	;'o'
   526  00FE2A  6E                 	db	110	;'n'
   527  00FE2B  20                 	db	32
   528  00FE2C  20                 	db	32
   529  00FE2D  20                 	db	32
   530  00FE2E  20                 	db	32
   531  00FE2F  20                 	db	32
   532  00FE30  50                 	db	80	;'P'
   533  00FE31  65                 	db	101	;'e'
   534  00FE32  65                 	db	101	;'e'
   535  00FE33  72                 	db	114	;'r'
   536  00FE34  4C                 	db	76	;'L'
   537  00FE35  6F                 	db	111	;'o'
   538  00FE36  6E                 	db	110	;'n'
   539  00FE37  67                 	db	103	;'g'
   540  00FE38  41                 	db	65	;'A'
   541  00FE39  64                 	db	100	;'d'
   542  00FE3A  64                 	db	100	;'d'
   543  00FE3B  72                 	db	114	;'r'
   544  00FE3C  65                 	db	101	;'e'
   545  00FE3D  73                 	db	115	;'s'
   546  00FE3E  73                 	db	115	;'s'
   547  00FE3F  20                 	db	32
   548  00FE40  20                 	db	32
   549  00FE41  20                 	db	32
   550  00FE42  20                 	db	32
   551  00FE43  20                 	db	32
   552  00FE44  50                 	db	80	;'P'
   553  00FE45  65                 	db	101	;'e'
   554  00FE46  65                 	db	101	;'e'
   555  00FE47  72                 	db	114	;'r'
   556  00FE48  49                 	db	73	;'I'
   557  00FE49  6E                 	db	110	;'n'
   558  00FE4A  66                 	db	102	;'f'
   559  00FE4B  6F                 	db	111	;'o'
   560  00FE4C  0D                 	db	13
   561  00FE4D  0A                 	db	10
   562  00FE4E  00                 	db	0
   563  00FE4F                     STR_18:
   564  00FE4F  43                 	db	67	;'C'
   565  00FE50  6F                 	db	111	;'o'
   566  00FE51  6E                 	db	110	;'n'
   567  00FE52  6E                 	db	110	;'n'
   568  00FE53  65                 	db	101	;'e'
   569  00FE54  63                 	db	99	;'c'
   570  00FE55  74                 	db	116	;'t'
   571  00FE56  69                 	db	105	;'i'
   572  00FE57  6E                 	db	110	;'n'
   573  00FE58  67                 	db	103	;'g'
   574  00FE59  20                 	db	32
   575  00FE5A  50                 	db	80	;'P'
   576  00FE5B  65                 	db	101	;'e'
   577  00FE5C  65                 	db	101	;'e'
   578  00FE5D  72                 	db	114	;'r'
   579  00FE5E  20                 	db	32
   580  00FE5F  20                 	db	32
   581  00FE60  6F                 	db	111	;'o'
   582  00FE61  6E                 	db	110	;'n'
   583  00FE62  20                 	db	32
   584  00FE63  43                 	db	67	;'C'
   585  00FE64  68                 	db	104	;'h'
   586  00FE65  61                 	db	97	;'a'
   587  00FE66  6E                 	db	110	;'n'
   588  00FE67  6E                 	db	110	;'n'
   589  00FE68  65                 	db	101	;'e'
   590  00FE69  6C                 	db	108	;'l'
   591  00FE6A  20                 	db	32
   592  00FE6B  25                 	db	37
   593  00FE6C  64                 	db	100	;'d'
   594  00FE6D  20                 	db	32
   595  00FE6E  00                 	db	0
   596  00FE6F                     STR_16:
   597  00FE6F  53                 	db	83	;'S'
   598  00FE70  69                 	db	105	;'i'
   599  00FE71  6D                 	db	109	;'m'
   600  00FE72  70                 	db	112	;'p'
   601  00FE73  6C                 	db	108	;'l'
   602  00FE74  65                 	db	101	;'e'
   603  00FE75  20                 	db	32
   604  00FE76  50                 	db	80	;'P'
   605  00FE77  32                 	db	50	;'2'
   606  00FE78  50                 	db	80	;'P'
   607  00FE79  20                 	db	32
   608  00FE7A  44                 	db	68	;'D'
   609  00FE7B  65                 	db	101	;'e'
   610  00FE7C  6D                 	db	109	;'m'
   611  00FE7D  6F                 	db	111	;'o'
   612  00FE7E  20                 	db	32
   613  00FE7F  20                 	db	32
   614  00FE80  4D                 	db	77	;'M'
   615  00FE81  52                 	db	82	;'R'
   616  00FE82  46                 	db	70	;'F'
   617  00FE83  38                 	db	56	;'8'
   618  00FE84  39                 	db	57	;'9'
   619  00FE85  58                 	db	88	;'X'
   620  00FE86  41                 	db	65	;'A'
   621  00FE87  20                 	db	32
   622  00FE88  4E                 	db	78	;'N'
   623  00FE89  6F                 	db	111	;'o'
   624  00FE8A  64                 	db	100	;'d'
   625  00FE8B  65                 	db	101	;'e'
   626  00FE8C  20                 	db	32
   627  00FE8D  00                 	db	0
   628  00FE8E                     STR_19:
   629  00FE8E  43                 	db	67	;'C'
   630  00FE8F  6F                 	db	111	;'o'
   631  00FE90  6E                 	db	110	;'n'
   632  00FE91  6E                 	db	110	;'n'
   633  00FE92  65                 	db	101	;'e'
   634  00FE93  63                 	db	99	;'c'
   635  00FE94  74                 	db	116	;'t'
   636  00FE95  65                 	db	101	;'e'
   637  00FE96  64                 	db	100	;'d'
   638  00FE97  20                 	db	32
   639  00FE98  50                 	db	80	;'P'
   640  00FE99  65                 	db	101	;'e'
   641  00FE9A  65                 	db	101	;'e'
   642  00FE9B  72                 	db	114	;'r'
   643  00FE9C  20                 	db	32
   644  00FE9D  20                 	db	32
   645  00FE9E  6F                 	db	111	;'o'
   646  00FE9F  6E                 	db	110	;'n'
   647  00FEA0  20                 	db	32
   648  00FEA1  43                 	db	67	;'C'
   649  00FEA2  68                 	db	104	;'h'
   650  00FEA3  61                 	db	97	;'a'
   651  00FEA4  6E                 	db	110	;'n'
   652  00FEA5  6E                 	db	110	;'n'
   653  00FEA6  65                 	db	101	;'e'
   654  00FEA7  6C                 	db	108	;'l'
   655  00FEA8  20                 	db	32
   656  00FEA9  25                 	db	37
   657  00FEAA  64                 	db	100	;'d'
   658  00FEAB  00                 	db	0
   659  00FEAC                     STR_20:
   660  00FEAC  53                 	db	83	;'S'
   661  00FEAD  57                 	db	87	;'W'
   662  00FEAE  31                 	db	49	;'1'
   663  00FEAF  3A                 	db	58	;':'
   664  00FEB0  20                 	db	32
   665  00FEB1  42                 	db	66	;'B'
   666  00FEB2  72                 	db	114	;'r'
   667  00FEB3  6F                 	db	111	;'o'
   668  00FEB4  61                 	db	97	;'a'
   669  00FEB5  64                 	db	100	;'d'
   670  00FEB6  63                 	db	99	;'c'
   671  00FEB7  61                 	db	97	;'a'
   672  00FEB8  73                 	db	115	;'s'
   673  00FEB9  74                 	db	116	;'t'
   674  00FEBA  20                 	db	32
   675  00FEBB  20                 	db	32
   676  00FEBC  53                 	db	83	;'S'
   677  00FEBD  57                 	db	87	;'W'
   678  00FEBE  32                 	db	50	;'2'
   679  00FEBF  3A                 	db	58	;':'
   680  00FEC0  20                 	db	32
   681  00FEC1  55                 	db	85	;'U'
   682  00FEC2  6E                 	db	110	;'n'
   683  00FEC3  69                 	db	105	;'i'
   684  00FEC4  63                 	db	99	;'c'
   685  00FEC5  61                 	db	97	;'a'
   686  00FEC6  73                 	db	115	;'s'
   687  00FEC7  74                 	db	116	;'t'
   688  00FEC8  00                 	db	0
   689  00FEC9  42                 	db	66	;'B'
   690  00FECA  72                 	db	114	;'r'
   691  00FECB  6F                 	db	111	;'o'
   692  00FECC  61                 	db	97	;'a'
   693  00FECD  64                 	db	100	;'d'
   694  00FECE  63                 	db	99	;'c'
   695  00FECF  61                 	db	97	;'a'
   696  00FED0  73                 	db	115	;'s'
   697  00FED1  74                 	db	116	;'t'
   698  00FED2  20                 	db	32
   699  00FED3  50                 	db	80	;'P'
   700  00FED4  61                 	db	97	;'a'
   701  00FED5  63                 	db	99	;'c'
   702  00FED6  6B                 	db	107	;'k'
   703  00FED7  65                 	db	101	;'e'
   704  00FED8  74                 	db	116	;'t'
   705  00FED9  20                 	db	32
   706  00FEDA  77                 	db	119	;'w'
   707  00FEDB  69                 	db	105	;'i'
   708  00FEDC  74                 	db	116	;'t'
   709  00FEDD  68                 	db	104	;'h'
   710  00FEDE  20                 	db	32
   711  00FEDF  52                 	db	82	;'R'
   712  00FEE0  53                 	db	83	;'S'
   713  00FEE1  53                 	db	83	;'S'
   714  00FEE2  49                 	db	73	;'I'
   715  00FEE3  20                 	db	32
   716  00FEE4  00                 	db	0
   717  00FEE5  53                 	db	83	;'S'
   718  00FEE6  57                 	db	87	;'W'
   719  00FEE7  31                 	db	49	;'1'
   720  00FEE8  3A                 	db	58	;':'
   721  00FEE9  4E                 	db	78	;'N'
   722  00FEEA  65                 	db	101	;'e'
   723  00FEEB  77                 	db	119	;'w'
   724  00FEEC  20                 	db	32
   725  00FEED  4E                 	db	78	;'N'
   726  00FEEE  65                 	db	101	;'e'
   727  00FEEF  74                 	db	116	;'t'
   728  00FEF0  77                 	db	119	;'w'
   729  00FEF1  6F                 	db	111	;'o'
   730  00FEF2  72                 	db	114	;'r'
   731  00FEF3  6B                 	db	107	;'k'
   732  00FEF4  20                 	db	32
   733  00FEF5  53                 	db	83	;'S'
   734  00FEF6  57                 	db	87	;'W'
   735  00FEF7  32                 	db	50	;'2'
   736  00FEF8  3A                 	db	58	;':'
   737  00FEF9  46                 	db	70	;'F'
   738  00FEFA  72                 	db	114	;'r'
   739  00FEFB  65                 	db	101	;'e'
   740  00FEFC  65                 	db	101	;'e'
   741  00FEFD  7A                 	db	122	;'z'
   742  00FEFE  65                 	db	101	;'e'
   743  00FEFF  72                 	db	114	;'r'
   744  00FF00  00                 	db	0
   745  00FF01  55                 	db	85	;'U'
   746  00FF02  6E                 	db	110	;'n'
   747  00FF03  69                 	db	105	;'i'
   748  00FF04  63                 	db	99	;'c'
   749  00FF05  61                 	db	97	;'a'
   750  00FF06  73                 	db	115	;'s'
   751  00FF07  74                 	db	116	;'t'
   752  00FF08  20                 	db	32
   753  00FF09  50                 	db	80	;'P'
   754  00FF0A  61                 	db	97	;'a'
   755  00FF0B  63                 	db	99	;'c'
   756  00FF0C  6B                 	db	107	;'k'
   757  00FF0D  65                 	db	101	;'e'
   758  00FF0E  74                 	db	116	;'t'
   759  00FF0F  20                 	db	32
   760  00FF10  77                 	db	119	;'w'
   761  00FF11  69                 	db	105	;'i'
   762  00FF12  74                 	db	116	;'t'
   763  00FF13  68                 	db	104	;'h'
   764  00FF14  20                 	db	32
   765  00FF15  52                 	db	82	;'R'
   766  00FF16  53                 	db	83	;'S'
   767  00FF17  53                 	db	83	;'S'
   768  00FF18  49                 	db	73	;'I'
   769  00FF19  20                 	db	32
   770  00FF1A  00                 	db	0
   771  00FF1B                     STR_27:
   772  00FF1B  52                 	db	82	;'R'
   773  00FF1C  42                 	db	66	;'B'
   774  00FF1D  30                 	db	48	;'0'
   775  00FF1E  3A                 	db	58	;':'
   776  00FF1F  25                 	db	37
   777  00FF20  30                 	db	48	;'0'
   778  00FF21  32                 	db	50	;'2'
   779  00FF22  64                 	db	100	;'d'
   780  00FF23  2D                 	db	45
   781  00FF24  25                 	db	37
   782  00FF25  30                 	db	48	;'0'
   783  00FF26  32                 	db	50	;'2'
   784  00FF27  78                 	db	120	;'x'
   785  00FF28  25                 	db	37
   786  00FF29  30                 	db	48	;'0'
   787  00FF2A  32                 	db	50	;'2'
   788  00FF2B  78                 	db	120	;'x'
   789  00FF2C  25                 	db	37
   790  00FF2D  30                 	db	48	;'0'
   791  00FF2E  32                 	db	50	;'2'
   792  00FF2F  78                 	db	120	;'x'
   793  00FF30  00                 	db	0
   794  00FF31                     STR_29:
   795  00FF31  52                 	db	82	;'R'
   796  00FF32  65                 	db	101	;'e'
   797  00FF33  73                 	db	115	;'s'
   798  00FF34  74                 	db	116	;'t'
   799  00FF35  6F                 	db	111	;'o'
   800  00FF36  72                 	db	114	;'r'
   801  00FF37  69                 	db	105	;'i'
   802  00FF38  6E                 	db	110	;'n'
   803  00FF39  67                 	db	103	;'g'
   804  00FF3A  20                 	db	32
   805  00FF3B  4E                 	db	78	;'N'
   806  00FF3C  65                 	db	101	;'e'
   807  00FF3D  74                 	db	116	;'t'
   808  00FF3E  77                 	db	119	;'w'
   809  00FF3F  6F                 	db	111	;'o'
   810  00FF40  72                 	db	114	;'r'
   811  00FF41  6B                 	db	107	;'k'
   812  00FF42  20                 	db	32
   813  00FF43  21                 	db	33
   814  00FF44  21                 	db	33
   815  00FF45  00                 	db	0
   816  00FF46  0D                 	db	13
   817  00FF47  0A                 	db	10
   818  00FF48  0D                 	db	13
   819  00FF49  0A                 	db	10
   820  00FF4A  4D                 	db	77	;'M'
   821  00FF4B  79                 	db	121	;'y'
   822  00FF4C  20                 	db	32
   823  00FF4D  41                 	db	65	;'A'
   824  00FF4E  64                 	db	100	;'d'
   825  00FF4F  64                 	db	100	;'d'
   826  00FF50  72                 	db	114	;'r'
   827  00FF51  65                 	db	101	;'e'
   828  00FF52  73                 	db	115	;'s'
   829  00FF53  73                 	db	115	;'s'
   830  00FF54  3A                 	db	58	;':'
   831  00FF55  20                 	db	32
   832  00FF56  30                 	db	48	;'0'
   833  00FF57  78                 	db	120	;'x'
   834  00FF58  00                 	db	0
   835  00FF59                     STR_30:
   836  00FF59  30                 	db	48	;'0'
   837  00FF5A  31                 	db	49	;'1'
   838  00FF5B  32                 	db	50	;'2'
   839  00FF5C  33                 	db	51	;'3'
   840  00FF5D  34                 	db	52	;'4'
   841  00FF5E  35                 	db	53	;'5'
   842  00FF5F  36                 	db	54	;'6'
   843  00FF60  37                 	db	55	;'7'
   844  00FF61  38                 	db	56	;'8'
   845  00FF62  39                 	db	57	;'9'
   846  00FF63  41                 	db	65	;'A'
   847  00FF64  42                 	db	66	;'B'
   848  00FF65  43                 	db	67	;'C'
   849  00FF66  44                 	db	68	;'D'
   850  00FF67  45                 	db	69	;'E'
   851  00FF68  46                 	db	70	;'F'
   852  00FF69  00                 	db	0
   853  00FF6A                     STR_31:
   854  00FF6A  30                 	db	48	;'0'
   855  00FF6B  31                 	db	49	;'1'
   856  00FF6C  32                 	db	50	;'2'
   857  00FF6D  33                 	db	51	;'3'
   858  00FF6E  34                 	db	52	;'4'
   859  00FF6F  35                 	db	53	;'5'
   860  00FF70  36                 	db	54	;'6'
   861  00FF71  37                 	db	55	;'7'
   862  00FF72  38                 	db	56	;'8'
   863  00FF73  39                 	db	57	;'9'
   864  00FF74  61                 	db	97	;'a'
   865  00FF75  62                 	db	98	;'b'
   866  00FF76  63                 	db	99	;'c'
   867  00FF77  64                 	db	100	;'d'
   868  00FF78  65                 	db	101	;'e'
   869  00FF79  66                 	db	102	;'f'
   870  00FF7A  00                 	db	0
   871  00FF7B                     STR_15:
   872  00FF7B  52                 	db	82	;'R'
   873  00FF7C  58                 	db	88	;'X'
   874  00FF7D  20                 	db	32
   875  00FF7E  4D                 	db	77	;'M'
   876  00FF7F  65                 	db	101	;'e'
   877  00FF80  73                 	db	115	;'s'
   878  00FF81  73                 	db	115	;'s'
   879  00FF82  61                 	db	97	;'a'
   880  00FF83  67                 	db	103	;'g'
   881  00FF84  65                 	db	101	;'e'
   882  00FF85  73                 	db	115	;'s'
   883  00FF86  3A                 	db	58	;':'
   884  00FF87  20                 	db	32
   885  00FF88  25                 	db	37
   886  00FF89  33                 	db	51	;'3'
   887  00FF8A  64                 	db	100	;'d'
   888  00FF8B  00                 	db	0
   889  00FF8C                     STR_14:
   890  00FF8C  54                 	db	84	;'T'
   891  00FF8D  58                 	db	88	;'X'
   892  00FF8E  20                 	db	32
   893  00FF8F  4D                 	db	77	;'M'
   894  00FF90  65                 	db	101	;'e'
   895  00FF91  73                 	db	115	;'s'
   896  00FF92  73                 	db	115	;'s'
   897  00FF93  61                 	db	97	;'a'
   898  00FF94  67                 	db	103	;'g'
   899  00FF95  65                 	db	101	;'e'
   900  00FF96  73                 	db	115	;'s'
   901  00FF97  3A                 	db	58	;':'
   902  00FF98  20                 	db	32
   903  00FF99  25                 	db	37
   904  00FF9A  33                 	db	51	;'3'
   905  00FF9B  64                 	db	100	;'d'
   906  00FF9C  00                 	db	0
   907  00FF9D                     STR_28:
   908  00FF9D  52                 	db	82	;'R'
   909  00FF9E  42                 	db	66	;'B'
   910  00FF9F  32                 	db	50	;'2'
   911  00FFA0  3A                 	db	58	;':'
   912  00FFA1  20                 	db	32
   913  00FFA2  43                 	db	67	;'C'
   914  00FFA3  68                 	db	104	;'h'
   915  00FFA4  6E                 	db	110	;'n'
   916  00FFA5  67                 	db	103	;'g'
   917  00FFA6  65                 	db	101	;'e'
   918  00FFA7  20                 	db	32
   919  00FFA8  6E                 	db	110	;'n'
   920  00FFA9  6F                 	db	111	;'o'
   921  00FFAA  64                 	db	100	;'d'
   922  00FFAB  65                 	db	101	;'e'
   923  00FFAC  00                 	db	0
   924  00FFAD                     STR_26:
   925  00FFAD  20                 	db	32
   926  00FFAE  55                 	db	85	;'U'
   927  00FFAF  6E                 	db	110	;'n'
   928  00FFB0  69                 	db	105	;'i'
   929  00FFB1  63                 	db	99	;'c'
   930  00FFB2  61                 	db	97	;'a'
   931  00FFB3  73                 	db	115	;'s'
   932  00FFB4  74                 	db	116	;'t'
   933  00FFB5  20                 	db	32
   934  00FFB6  46                 	db	70	;'F'
   935  00FFB7  61                 	db	97	;'a'
   936  00FFB8  69                 	db	105	;'i'
   937  00FFB9  6C                 	db	108	;'l'
   938  00FFBA  65                 	db	101	;'e'
   939  00FFBB  64                 	db	100	;'d'
   940  00FFBC  00                 	db	0
   941  00FFBD  0D                 	db	13
   942  00FFBE  0A                 	db	10
   943  00FFBF  53                 	db	83	;'S'
   944  00FFC0  63                 	db	99	;'c'
   945  00FFC1  61                 	db	97	;'a'
   946  00FFC2  6E                 	db	110	;'n'
   947  00FFC3  20                 	db	32
   948  00FFC4  43                 	db	67	;'C'
   949  00FFC5  68                 	db	104	;'h'
   950  00FFC6  61                 	db	97	;'a'
   951  00FFC7  6E                 	db	110	;'n'
   952  00FFC8  6E                 	db	110	;'n'
   953  00FFC9  65                 	db	101	;'e'
   954  00FFCA  6C                 	db	108	;'l'
   955  00FFCB  20                 	db	32
   956  00FFCC  00                 	db	0
   957  00FFCD                     STR_4:
   958  00FFCD  20                 	db	32
   959  00FFCE  20                 	db	32
   960  00FFCF  20                 	db	32
   961  00FFD0  20                 	db	32
   962  00FFD1  20                 	db	32
   963  00FFD2  20                 	db	32
   964  00FFD3  20                 	db	32
   965  00FFD4  20                 	db	32
   966  00FFD5  20                 	db	32
   967  00FFD6  20                 	db	32
   968  00FFD7  20                 	db	32
   969  00FFD8  20                 	db	32
   970  00FFD9  20                 	db	32
   971  00FFDA  00                 	db	0
   972  00FFDB                     STR_2:
   973  00FFDB  20                 	db	32
   974  00FFDC  20                 	db	32
   975  00FFDD  43                 	db	67	;'C'
   976  00FFDE  68                 	db	104	;'h'
   977  00FFDF  61                 	db	97	;'a'
   978  00FFE0  6E                 	db	110	;'n'
   979  00FFE1  6E                 	db	110	;'n'
   980  00FFE2  65                 	db	101	;'e'
   981  00FFE3  6C                 	db	108	;'l'
   982  00FFE4  3A                 	db	58	;':'
   983  00FFE5  20                 	db	32
   984  00FFE6  00                 	db	0
   985  00FFE7  53                 	db	83	;'S'
   986  00FFE8  65                 	db	101	;'e'
   987  00FFE9  63                 	db	99	;'c'
   988  00FFEA  75                 	db	117	;'u'
   989  00FFEB  72                 	db	114	;'r'
   990  00FFEC  65                 	db	101	;'e'
   991  00FFED  64                 	db	100	;'d'
   992  00FFEE  20                 	db	32
   993  00FFEF  00                 	db	0
   994  00FFF0  20                 	db	32
   995  00FFF1  66                 	db	102	;'f'
   996  00FFF2  72                 	db	114	;'r'
   997  00FFF3  6F                 	db	111	;'o'
   998  00FFF4  6D                 	db	109	;'m'
   999  00FFF5  20                 	db	32
  1000  00FFF6  00                 	db	0
  1001  0000                     
  1002                           ; #config settings
  1003  00FFF7  00                 	db	0	; dummy byte at the end
  1004  0000                     
  1005                           	psect	cinit
  1006  002084                     __pcinit:
  1007                           	opt stack 0
  1008  002084                     start_initialization:
  1009                           	opt stack 0
  1010  002084                     __initialization:
  1011                           	opt stack 0
  1012                           
  1013                           ; Initialize objects allocated to BANK0 (3 bytes)
  1014                           ; load TBLPTR registers with __pidataBANK0
  1015  002084  0EA8               	movlw	low __pidataBANK0
  1016  002086  6EF6               	movwf	tblptrl,c
  1017  002088  0E2C               	movlw	high __pidataBANK0
  1018  00208A  6EF7               	movwf	tblptrh,c
  1019  00208C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1020  00208E  6EF8               	movwf	tblptru,c
  1021  002090  0009               	tblrd		*+	;fetch initializer
  1022  002092  CFF5 F0F2          	movff	tablat,__pdataBANK0
  1023  002096  0009               	tblrd		*+	;fetch initializer
  1024  002098  CFF5 F0F3          	movff	tablat,__pdataBANK0+1
  1025  00209C  0009               	tblrd		*+	;fetch initializer
  1026  00209E  CFF5 F0F4          	movff	tablat,__pdataBANK0+2
  1027                           
  1028                           ; Initialize objects allocated to COMRAM (8 bytes)
  1029                           ; load TBLPTR registers with __pidataCOMRAM
  1030  0020A2  0E92               	movlw	low __pidataCOMRAM
  1031  0020A4  6EF6               	movwf	tblptrl,c
  1032  0020A6  0E2C               	movlw	high __pidataCOMRAM
  1033  0020A8  6EF7               	movwf	tblptrh,c
  1034  0020AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1035  0020AC  6EF8               	movwf	tblptru,c
  1036  0020AE  EE00  F03C         	lfsr	0,__pdataCOMRAM
  1037  0020B2  EE10 F008          	lfsr	1,8
  1038  0020B6                     copy_data0:
  1039  0020B6  0009               	tblrd		*+
  1040  0020B8  CFF5 FFEE          	movff	tablat,postinc0
  1041  0020BC  50E5               	movf	postdec1,w,c
  1042  0020BE  50E1               	movf	fsr1l,w,c
  1043  0020C0  E1FA               	bnz	copy_data0
  1044                           
  1045                           ; Clear objects allocated to BIGRAM (300 bytes)
  1046  0020C2  EE02  F049         	lfsr	0,__pbssBIGRAM
  1047  0020C6  EE11 F02C          	lfsr	1,300
  1048  0020CA                     clear_0:
  1049  0020CA  6AEE               	clrf	postinc0,c
  1050  0020CC  50E5               	movf	postdec1,w,c
  1051  0020CE  50E1               	movf	fsr1l,w,c
  1052  0020D0  E1FC               	bnz	clear_0
  1053  0020D2  50E2               	movf	fsr1h,w,c
  1054  0020D4  E1FA               	bnz	clear_0
  1055                           
  1056                           ; Clear objects allocated to BANK2 (60 bytes)
  1057  0020D6  EE02  F000         	lfsr	0,__pbssBANK2
  1058  0020DA  0E3C               	movlw	60
  1059  0020DC                     clear_1:
  1060  0020DC  6AEE               	clrf	postinc0,c
  1061  0020DE  06E8               	decf	wreg,f,c
  1062  0020E0  E1FD               	bnz	clear_1
  1063                           
  1064                           ; Clear objects allocated to BANK1 (247 bytes)
  1065  0020E2  EE01  F000         	lfsr	0,__pbssBANK1
  1066  0020E6  0EF7               	movlw	247
  1067  0020E8                     clear_2:
  1068  0020E8  6AEE               	clrf	postinc0,c
  1069  0020EA  06E8               	decf	wreg,f,c
  1070  0020EC  E1FD               	bnz	clear_2
  1071                           
  1072                           ; Clear objects allocated to BANK0 (64 bytes)
  1073  0020EE  EE00  F0B2         	lfsr	0,__pbssBANK0
  1074  0020F2  0E40               	movlw	64
  1075  0020F4                     clear_3:
  1076  0020F4  6AEE               	clrf	postinc0,c
  1077  0020F6  06E8               	decf	wreg,f,c
  1078  0020F8  E1FD               	bnz	clear_3
  1079                           
  1080                           ; Clear objects allocated to COMRAM (3 bytes)
  1081  0020FA  6A46               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1082  0020FC  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1083  0020FE  6A44               	clrf	__pbssCOMRAM& (0+255),c
  1084  002100                     end_of_initialization:
  1085                           	opt stack 0
  1086  002100                     __end_of__initialization:
  1087                           	opt stack 0
  1088  002100  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1089  002102  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1090  002104  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1091  002106  6EF8               	movwf	tblptru,c
  1092  002108  0100               	movlb	0
  1093  00210A  EF82  F015         	goto	_main	;jump to C main() function
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec1	equ	0xFE5
  1101                           fsr1h	equ	0xFE2
  1102                           fsr1l	equ	0xFE1
  1103                           
  1104                           	psect	bssCOMRAM
  1105  000044                     __pbssCOMRAM:
  1106                           	opt stack 0
  1107  000044                     _RSSIVal:
  1108                           	opt stack 0
  1109  000044                     	ds	1
  1110  000045                     _TxMACSeq:
  1111                           	opt stack 0
  1112  000045                     	ds	1
  1113  000046                     _timerExtension1:
  1114                           	opt stack 0
  1115  000046                     	ds	1
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           postdec1	equ	0xFE5
  1123                           fsr1h	equ	0xFE2
  1124                           fsr1l	equ	0xFE1
  1125                           
  1126                           	psect	dataCOMRAM
  1127  00003C                     __pdataCOMRAM:
  1128                           	opt stack 0
  1129  00003C                     _myLongAddress:
  1130                           	opt stack 0
  1131  00003C                     	ds	8
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           fsr1h	equ	0xFE2
  1140                           fsr1l	equ	0xFE1
  1141                           
  1142                           	psect	bssBANK0
  1143  0000B2                     __pbssBANK0:
  1144                           	opt stack 0
  1145  0000B2                     _rxMessage:
  1146                           	opt stack 0
  1147  0000B2                     	ds	10
  1148  0000BC                     _MACRxPacket:
  1149                           	opt stack 0
  1150  0000BC                     	ds	8
  1151  0000C4                     _PUSH_BUTTON_press_time:
  1152                           	opt stack 0
  1153  0000C4                     	ds	4
  1154  0000C8                     _nvmDelayTick:
  1155                           	opt stack 0
  1156  0000C8                     	ds	4
  1157  0000CC                     _MACInitParams:
  1158                           	opt stack 0
  1159  0000CC                     	ds	2
  1160  0000CE                     _nextEEPosition:
  1161                           	opt stack 0
  1162  0000CE                     	ds	2
  1163  0000D0                     _ActiveScanResultIndex:
  1164                           	opt stack 0
  1165  0000D0                     	ds	1
  1166  0000D1                     _IRQ1_Received:
  1167                           	opt stack 0
  1168  0000D1                     	ds	1
  1169  0000D2                     _LatestConnection:
  1170                           	opt stack 0
  1171  0000D2                     	ds	1
  1172  0000D3                     _MACSeq:
  1173                           	opt stack 0
  1174  0000D3                     	ds	1
  1175  0000D4                     _MyindexinPC:
  1176                           	opt stack 0
  1177  0000D4                     	ds	1
  1178  0000D5                     _P2PCapacityInfo:
  1179                           	opt stack 0
  1180  0000D5                     	ds	1
  1181  0000D6                     _P2PStatus:
  1182                           	opt stack 0
  1183  0000D6                     	ds	1
  1184  0000D7                     _PUSH_BUTTON_pressed:
  1185                           	opt stack 0
  1186  0000D7                     	ds	1
  1187  0000D8                     _RF_Mode:
  1188                           	opt stack 0
  1189  0000D8                     	ds	1
  1190  0000D9                     _RSSILock:
  1191                           	opt stack 0
  1192  0000D9                     	ds	1
  1193  0000DA                     _ReceivedBankIndex:
  1194                           	opt stack 0
  1195  0000DA                     	ds	1
  1196  0000DB                     _RxNum:
  1197                           	opt stack 0
  1198  0000DB                     	ds	1
  1199  0000DC                     _TxData:
  1200                           	opt stack 0
  1201  0000DC                     	ds	1
  1202  0000DD                     _TxNum:
  1203                           	opt stack 0
  1204  0000DD                     	ds	1
  1205  0000DE                     _TxSynCount:
  1206                           	opt stack 0
  1207  0000DE                     	ds	1
  1208  0000DF                     _TxSynCount2:
  1209                           	opt stack 0
  1210  0000DF                     	ds	1
  1211  0000E0                     _hasAck:
  1212                           	opt stack 0
  1213  0000E0                     	ds	1
  1214  0000E1                     _i:
  1215                           	opt stack 0
  1216  0000E1                     	ds	1
  1217  0000E2                     _temp_bit:
  1218                           	opt stack 0
  1219  0000E2                     	ds	1
  1220  0000E3                     _timerExtension2:
  1221                           	opt stack 0
  1222  0000E3                     	ds	1
  1223  0000E4                     _nvmConnMode:
  1224                           	opt stack 0
  1225  0000E4                     	ds	2
  1226  0000E6                     _nvmConnectionTable:
  1227                           	opt stack 0
  1228  0000E6                     	ds	2
  1229  0000E8                     _nvmCurrentChannel:
  1230                           	opt stack 0
  1231  0000E8                     	ds	2
  1232  0000EA                     _nvmEdc:
  1233                           	opt stack 0
  1234  0000EA                     	ds	2
  1235  0000EC                     _nvmMyPANID:
  1236                           	opt stack 0
  1237  0000EC                     	ds	2
  1238  0000EE                     _nvmOutFrameCounter:
  1239                           	opt stack 0
  1240  0000EE                     	ds	2
  1241  0000F0                     _conn_size:
  1242                           	opt stack 0
  1243  0000F0                     	ds	1
  1244  0000F1                     _currentChannel:
  1245                           	opt stack 0
  1246  0000F1                     	ds	1
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           postdec1	equ	0xFE5
  1254                           fsr1h	equ	0xFE2
  1255                           fsr1l	equ	0xFE1
  1256                           
  1257                           	psect	dataBANK0
  1258  0000F2                     __pdataBANK0:
  1259                           	opt stack 0
  1260  0000F2                     _AdditionalNodeID:
  1261                           	opt stack 0
  1262  0000F2                     	ds	1
  1263  0000F3                     _chk_sel_status:
  1264                           	opt stack 0
  1265  0000F3                     	ds	1
  1266  0000F4                     _ConnMode:
  1267                           	opt stack 0
  1268  0000F4                     	ds	1
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1h	equ	0xFE2
  1277                           fsr1l	equ	0xFE1
  1278                           
  1279                           	psect	bssBANK1
  1280  000100                     __pbssBANK1:
  1281                           	opt stack 0
  1282  000100                     _MACTxBuffer:
  1283                           	opt stack 0
  1284  000100                     	ds	50
  1285  000132                     _AckInfo:
  1286                           	opt stack 0
  1287  000132                     	ds	30
  1288  000150                     _RxPacket:
  1289                           	opt stack 0
  1290  000150                     	ds	104
  1291  0001B8                     _LCDText:
  1292                           	opt stack 0
  1293  0001B8                     	ds	33
  1294  0001D9                     _TxBuffer:
  1295                           	opt stack 0
  1296  0001D9                     	ds	30
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           postdec1	equ	0xFE5
  1304                           fsr1h	equ	0xFE2
  1305                           fsr1l	equ	0xFE1
  1306                           
  1307                           	psect	bssBANK2
  1308  000200                     __pbssBANK2:
  1309                           	opt stack 0
  1310  000200                     _ActiveScanResults:
  1311                           	opt stack 0
  1312  000200                     	ds	60
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           
  1323                           	psect	bssBIGRAM
  1324  000249                     __pbssBIGRAM:
  1325                           	opt stack 0
  1326  000249                     _ConnectionTable:
  1327                           	opt stack 0
  1328  000249                     	ds	300
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1h	equ	0xFE2
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339                           	psect	cstackBANK2
  1340  00023C                     __pcstackBANK2:
  1341                           	opt stack 0
  1342  00023C                     MiApp_EstablishConnection@tmpConnectionMode:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x0
  1346  00023C                     	ds	1
  1347  00023D                     MiApp_EstablishConnection@retry:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x1
  1351  00023D                     	ds	1
  1352  00023E                     MiApp_EstablishConnection@connectionInterval:
  1353                           	opt stack 0
  1354                           
  1355                           ; 1 bytes @ 0x2
  1356  00023E                     	ds	1
  1357  00023F                     MiApp_EstablishConnection@t1:
  1358                           	opt stack 0
  1359                           
  1360                           ; 4 bytes @ 0x3
  1361  00023F                     	ds	4
  1362  000243                     MiApp_EstablishConnection@t2:
  1363                           	opt stack 0
  1364                           
  1365                           ; 4 bytes @ 0x7
  1366  000243                     	ds	4
  1367  000247                     MiApp_EstablishConnection@ActiveScanIndex:
  1368                           	opt stack 0
  1369                           
  1370                           ; 1 bytes @ 0xB
  1371  000247                     	ds	1
  1372  000248                     MiApp_EstablishConnection@i:
  1373                           	opt stack 0
  1374                           
  1375                           ; 1 bytes @ 0xC
  1376  000248                     	ds	1
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           postdec1	equ	0xFE5
  1384                           fsr1h	equ	0xFE2
  1385                           fsr1l	equ	0xFE1
  1386                           
  1387                           	psect	cstackBANK1
  1388  0001F7                     __pcstackBANK1:
  1389                           	opt stack 0
  1390  0001F7                     run_p2p_demo@PressedButton:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x0
  1394  0001F7                     	ds	1
  1395  0001F8                     run_p2p_demo@update_ed:
  1396                           	opt stack 0
  1397                           
  1398                           ; 1 bytes @ 0x1
  1399  0001F8                     	ds	1
  1400  0001F9                     run_p2p_demo@switch_val:
  1401                           	opt stack 0
  1402                           
  1403                           ; 1 bytes @ 0x2
  1404  0001F9                     	ds	1
  1405  0001FA                     run_p2p_demo@select_ed:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x3
  1409  0001FA                     	ds	1
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1h	equ	0xFE2
  1418                           fsr1l	equ	0xFE1
  1419                           
  1420                           	psect	cstackBANK0
  1421  000060                     __pcstackBANK0:
  1422                           	opt stack 0
  1423  000060                     i1SPIPut@v:
  1424                           	opt stack 0
  1425                           
  1426                           ; 1 bytes @ 0x0
  1427  000060                     	ds	1
  1428  000061                     i1RegisterRead@address:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x1
  1432  000061                     	ds	1
  1433  000062                     i1RegisterRead@value:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x2
  1437  000062                     	ds	1
  1438  000063                     i1RegisterRead@IRQ1select:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x3
  1442  000063                     	ds	1
  1443  000064                     i1RegisterRead@IRQ0select:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x4
  1447  000064                     	ds	1
  1448  000065                     ??_low_isr:
  1449                           
  1450                           ; 1 bytes @ 0x5
  1451  000065                     	ds	4
  1452  000069                     ??_isdigit:
  1453  000069                     ?___wmul:
  1454                           	opt stack 0
  1455  000069                     ?___lwdiv:
  1456                           	opt stack 0
  1457  000069                     ?_MiWi_TickGet:
  1458                           	opt stack 0
  1459  000069                     Total_Connections@count:
  1460                           	opt stack 0
  1461  000069                     SPIPut@v:
  1462                           	opt stack 0
  1463  000069                     SPIPut2@v:
  1464                           	opt stack 0
  1465  000069                     ___lbmod@divisor:
  1466                           	opt stack 0
  1467  000069                     NVMalloc@size:
  1468                           	opt stack 0
  1469  000069                     isSameAddress@Address1:
  1470                           	opt stack 0
  1471  000069                     DELAY_ms@ms:
  1472                           	opt stack 0
  1473  000069                     ___wmul@multiplier:
  1474                           	opt stack 0
  1475  000069                     ___lwdiv@dividend:
  1476                           	opt stack 0
  1477  000069                     memset@p1:
  1478                           	opt stack 0
  1479  000069                     DELAY_10us@tenMicroSecondCounter:
  1480                           	opt stack 0
  1481                           
  1482                           ; 4 bytes @ 0x9
  1483  000069                     	ds	1
  1484  00006A                     RegisterRead@address:
  1485                           	opt stack 0
  1486  00006A                     WriteFIFO@Data:
  1487                           	opt stack 0
  1488  00006A                     Total_Connections@i:
  1489                           	opt stack 0
  1490  00006A                     LCDWriteCmd@data:
  1491                           	opt stack 0
  1492  00006A                     LCDWriteData@data:
  1493                           	opt stack 0
  1494  00006A                     _isdigit$3148:
  1495                           	opt stack 0
  1496  00006A                     ___lbmod@dividend:
  1497                           	opt stack 0
  1498  00006A                     RegisterSet@setting:
  1499                           	opt stack 0
  1500  00006A                     EEPROM_Read@dest:
  1501                           	opt stack 0
  1502  00006A                     EEPROM_Write@dest:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0xA
  1506  00006A                     	ds	1
  1507  00006B                     ??_DELAY_ms:
  1508  00006B                     RegisterRead@value:
  1509                           	opt stack 0
  1510  00006B                     WriteFIFO@IRQ1select:
  1511                           	opt stack 0
  1512  00006B                     NVMalloc@location:
  1513                           	opt stack 0
  1514  00006B                     LCD_Update@i:
  1515                           	opt stack 0
  1516  00006B                     isdigit@c:
  1517                           	opt stack 0
  1518  00006B                     ___lbmod@counter:
  1519                           	opt stack 0
  1520  00006B                     isSameAddress@Address2:
  1521                           	opt stack 0
  1522  00006B                     ___wmul@multiplicand:
  1523                           	opt stack 0
  1524  00006B                     ___lwdiv@divisor:
  1525                           	opt stack 0
  1526  00006B                     memset@c:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0xB
  1530  00006B                     	ds	1
  1531  00006C                     ??_NVMalloc:
  1532  00006C                     RegisterSet@IRQ1select:
  1533                           	opt stack 0
  1534  00006C                     RegisterRead@IRQ1select:
  1535                           	opt stack 0
  1536  00006C                     WriteFIFO@IRQ0select:
  1537                           	opt stack 0
  1538  00006C                     EEPROM_Read@addr:
  1539                           	opt stack 0
  1540  00006C                     EEPROM_Write@addr:
  1541                           	opt stack 0
  1542  00006C                     ___lbmod@rem:
  1543                           	opt stack 0
  1544                           
  1545                           ; 1 bytes @ 0xC
  1546  00006C                     	ds	1
  1547  00006D                     ??_DELAY_10us:
  1548  00006D                     ??_MiWi_TickGet:
  1549  00006D                     RegisterSet@IRQ0select:
  1550                           	opt stack 0
  1551  00006D                     RegisterRead@IRQ0select:
  1552                           	opt stack 0
  1553  00006D                     EEPROM_Read@count:
  1554                           	opt stack 0
  1555  00006D                     EEPROM_Write@count:
  1556                           	opt stack 0
  1557  00006D                     ___lwdiv@counter:
  1558                           	opt stack 0
  1559  00006D                     ___wmul@product:
  1560                           	opt stack 0
  1561  00006D                     memset@n:
  1562                           	opt stack 0
  1563                           
  1564                           ; 2 bytes @ 0xD
  1565  00006D                     	ds	1
  1566  00006E                     ??_EEPROM_Write:
  1567  00006E                     SetRFMode@mode:
  1568                           	opt stack 0
  1569  00006E                     NVMInit@result:
  1570                           	opt stack 0
  1571  00006E                     MiWi_TickGet@failureCounter:
  1572                           	opt stack 0
  1573  00006E                     ___lwdiv@quotient:
  1574                           	opt stack 0
  1575                           
  1576                           ; 2 bytes @ 0xE
  1577  00006E                     	ds	1
  1578  00006F                     MiMAC_SetChannel@offsetFreq:
  1579                           	opt stack 0
  1580  00006F                     isSameAddress@i:
  1581                           	opt stack 0
  1582  00006F                     EEPROM_Write@oldRFIE:
  1583                           	opt stack 0
  1584  00006F                     memset@p:
  1585                           	opt stack 0
  1586  00006F                     MiWi_TickGet@currentTime:
  1587                           	opt stack 0
  1588                           
  1589                           ; 4 bytes @ 0xF
  1590  00006F                     	ds	1
  1591  000070                     ??_MiMAC_SetChannel:
  1592  000070                     ?___lwmod:
  1593                           	opt stack 0
  1594  000070                     EEPROM_Write@PageCounter:
  1595                           	opt stack 0
  1596  000070                     ___lwmod@dividend:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x10
  1600  000070                     	ds	1
  1601  000071                     ??_AddConnection:
  1602  000071                     ??_MiApp_ConnectionMode:
  1603  000071                     MiMAC_SetChannel@channel:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x11
  1607  000071                     	ds	1
  1608  000072                     MiApp_SetChannel@channel:
  1609                           	opt stack 0
  1610  000072                     MiApp_ConnectionMode@Mode:
  1611                           	opt stack 0
  1612  000072                     ___lwmod@divisor:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x12
  1616  000072                     	ds	1
  1617  000073                     ??_MiMAC_ReceivedPacket:
  1618  000073                     MiApp_StartConnection@ScanDuration:
  1619                           	opt stack 0
  1620  000073                     DELAY_ms@cyclesRequiredForEntireDelay:
  1621                           	opt stack 0
  1622  000073                     ButtonPressed@tickDifference:
  1623                           	opt stack 0
  1624                           
  1625                           ; 4 bytes @ 0x13
  1626  000073                     	ds	1
  1627  000074                     ___lwmod@counter:
  1628                           	opt stack 0
  1629  000074                     MiApp_StartConnection@ChannelMap:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x14
  1633  000074                     	ds	1
  1634  000075                     ?_sprintf:
  1635                           	opt stack 0
  1636  000075                     AddConnection@status:
  1637                           	opt stack 0
  1638  000075                     sprintf@sp:
  1639                           	opt stack 0
  1640  000075                     DELAY_10us@cyclesRequiredForEntireDelay:
  1641                           	opt stack 0
  1642                           
  1643                           ; 4 bytes @ 0x15
  1644  000075                     	ds	1
  1645  000076                     AddConnection@connectionSlot:
  1646                           	opt stack 0
  1647                           
  1648                           ; 1 bytes @ 0x16
  1649  000076                     	ds	1
  1650  000077                     AddConnection@i:
  1651                           	opt stack 0
  1652  000077                     MiMAC_Init@initValue:
  1653                           	opt stack 0
  1654  000077                     sprintf@f:
  1655                           	opt stack 0
  1656  000077                     ButtonPressed@t:
  1657                           	opt stack 0
  1658                           
  1659                           ; 4 bytes @ 0x17
  1660  000077                     	ds	1
  1661  000078                     MiApp_StartConnection@Mode:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x18
  1665  000078                     	ds	1
  1666  000079                     TxPacket@CCA:
  1667                           	opt stack 0
  1668  000079                     MiMAC_Init@i:
  1669                           	opt stack 0
  1670                           
  1671                           ; 1 bytes @ 0x19
  1672  000079                     	ds	1
  1673  00007A                     ??_TxPacket:
  1674  00007A                     ??_MiApp_ProtocolInit:
  1675                           
  1676                           ; 1 bytes @ 0x1A
  1677  00007A                     	ds	1
  1678  00007B                     MiApp_ProtocolInit@bNetworkFreezer:
  1679                           	opt stack 0
  1680  00007B                     MiMAC_ReceivedPacket@currentTick:
  1681                           	opt stack 0
  1682                           
  1683                           ; 4 bytes @ 0x1B
  1684  00007B                     	ds	1
  1685  00007C                     MiApp_ProtocolInit@initValue:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x1C
  1689  00007C                     	ds	2
  1690  00007E                     MiApp_ProtocolInit@i:
  1691                           	opt stack 0
  1692  00007E                     TxPacket@t1:
  1693                           	opt stack 0
  1694                           
  1695                           ; 4 bytes @ 0x1E
  1696  00007E                     	ds	1
  1697  00007F                     MiMAC_ReceivedPacket@PayloadIndex:
  1698                           	opt stack 0
  1699                           
  1700                           ; 1 bytes @ 0x1F
  1701  00007F                     	ds	1
  1702  000080                     MiMAC_ReceivedPacket@i:
  1703                           	opt stack 0
  1704                           
  1705                           ; 1 bytes @ 0x20
  1706  000080                     	ds	1
  1707  000081                     ??_sprintf:
  1708                           
  1709                           ; 1 bytes @ 0x21
  1710  000081                     	ds	1
  1711  000082                     TxPacket@t2:
  1712                           	opt stack 0
  1713                           
  1714                           ; 4 bytes @ 0x22
  1715  000082                     	ds	3
  1716  000085                     sprintf@idx:
  1717                           	opt stack 0
  1718                           
  1719                           ; 1 bytes @ 0x25
  1720  000085                     	ds	1
  1721  000086                     TxPacket@CCARetries:
  1722                           	opt stack 0
  1723  000086                     _sprintf$2917:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x26
  1727  000086                     	ds	1
  1728  000087                     TxPacket@reTry:
  1729                           	opt stack 0
  1730                           
  1731                           ; 1 bytes @ 0x27
  1732  000087                     	ds	1
  1733  000088                     TxPacket@allowedTxFailure:
  1734                           	opt stack 0
  1735  000088                     _sprintf$2918:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x28
  1739  000088                     	ds	1
  1740  000089                     TxPacket@rssival:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x29
  1744  000089                     	ds	1
  1745  00008A                     TxPacket@TxPacketLen:
  1746                           	opt stack 0
  1747  00008A                     _sprintf$2924:
  1748                           	opt stack 0
  1749                           
  1750                           ; 2 bytes @ 0x2A
  1751  00008A                     	ds	1
  1752  00008B                     TxPacket@status:
  1753                           	opt stack 0
  1754                           
  1755                           ; 1 bytes @ 0x2B
  1756  00008B                     	ds	1
  1757  00008C                     TxPacket@i:
  1758                           	opt stack 0
  1759  00008C                     sprintf@cp:
  1760                           	opt stack 0
  1761                           
  1762                           ; 1 bytes @ 0x2C
  1763  00008C                     	ds	1
  1764  00008D                     sprintf@len:
  1765                           	opt stack 0
  1766  00008D                     MiMAC_SendPacket@transParam:
  1767                           	opt stack 0
  1768                           
  1769                           ; 3 bytes @ 0x2D
  1770  00008D                     	ds	2
  1771  00008F                     sprintf@ap:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x2F
  1775  00008F                     	ds	1
  1776  000090                     MiMAC_SendPacket@MACPayload:
  1777                           	opt stack 0
  1778  000090                     sprintf@val:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x30
  1782  000090                     	ds	2
  1783  000092                     MiMAC_SendPacket@MACPayloadLen:
  1784                           	opt stack 0
  1785  000092                     sprintf@prec:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x32
  1789  000092                     	ds	1
  1790  000093                     ??_MiMAC_SendPacket:
  1791  000093                     sprintf@width:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0x33
  1795  000093                     	ds	1
  1796  000094                     MiMAC_SendPacket@TxIndex:
  1797                           	opt stack 0
  1798                           
  1799                           ; 1 bytes @ 0x34
  1800  000094                     	ds	1
  1801  000095                     MiMAC_SendPacket@i:
  1802                           	opt stack 0
  1803  000095                     sprintf@c:
  1804                           	opt stack 0
  1805                           
  1806                           ; 1 bytes @ 0x35
  1807  000095                     	ds	1
  1808  000096                     SendPacket@DestinationAddress:
  1809                           	opt stack 0
  1810  000096                     sprintf@flag:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x36
  1814  000096                     	ds	2
  1815  000098                     SendPacket@isCommand:
  1816                           	opt stack 0
  1817  000098                     LCDTRXCount@rxCount:
  1818                           	opt stack 0
  1819  000098                     LCDDisplay@text:
  1820                           	opt stack 0
  1821                           
  1822                           ; 2 bytes @ 0x38
  1823  000098                     	ds	1
  1824  000099                     SendPacket@SecurityEnabled:
  1825                           	opt stack 0
  1826  000099                     LCDTRXCount@txCount:
  1827                           	opt stack 0
  1828                           
  1829                           ; 1 bytes @ 0x39
  1830  000099                     	ds	1
  1831  00009A                     ??_SendPacket:
  1832  00009A                     LCDDisplay@value:
  1833                           	opt stack 0
  1834  00009A                     DemoOutput_UpdateTxRx@RxNum:
  1835                           	opt stack 0
  1836                           
  1837                           ; 1 bytes @ 0x3A
  1838  00009A                     	ds	1
  1839  00009B                     SendPacket@status:
  1840                           	opt stack 0
  1841  00009B                     LCDDisplay@delay:
  1842                           	opt stack 0
  1843  00009B                     DemoOutput_UpdateTxRx@TxNum:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0x3B
  1847  00009B                     	ds	1
  1848  00009C                     SendPacket@Broadcast:
  1849                           	opt stack 0
  1850  00009C                     LCDDisplay@i:
  1851                           	opt stack 0
  1852                           
  1853                           ; 1 bytes @ 0x3C
  1854  00009C                     	ds	1
  1855  00009D                     ??_freezer_feature:
  1856  00009D                     DemoOutput_Channel@Step:
  1857                           	opt stack 0
  1858  00009D                     SendPacket@tParam:
  1859                           	opt stack 0
  1860                           
  1861                           ; 3 bytes @ 0x3D
  1862  00009D                     	ds	1
  1863  00009E                     DemoOutput_Channel@channel:
  1864                           	opt stack 0
  1865                           
  1866                           ; 1 bytes @ 0x3E
  1867  00009E                     	ds	2
  1868  0000A0                     ??_P2PTasks:
  1869  0000A0                     MiApp_BroadcastPacket@SecEn:
  1870                           	opt stack 0
  1871  0000A0                     MiApp_UnicastAddress@DestinationAddress:
  1872                           	opt stack 0
  1873                           
  1874                           ; 2 bytes @ 0x40
  1875  0000A0                     	ds	1
  1876  0000A1                     freezer_feature@tick1:
  1877                           	opt stack 0
  1878                           
  1879                           ; 4 bytes @ 0x41
  1880  0000A1                     	ds	1
  1881  0000A2                     MiApp_UnicastAddress@PermanentAddr:
  1882                           	opt stack 0
  1883                           
  1884                           ; 1 bytes @ 0x42
  1885  0000A2                     	ds	1
  1886  0000A3                     MiApp_UnicastAddress@SecEn:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x43
  1890  0000A3                     	ds	1
  1891  0000A4                     MiApp_UnicastConnection@SecEn:
  1892                           	opt stack 0
  1893  0000A4                     P2PTasks@tmpTick:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x44
  1897  0000A4                     	ds	1
  1898  0000A5                     MiApp_UnicastConnection@ConnectionIndex:
  1899                           	opt stack 0
  1900  0000A5                     freezer_feature@tick2:
  1901                           	opt stack 0
  1902                           
  1903                           ; 4 bytes @ 0x45
  1904  0000A5                     	ds	3
  1905  0000A8                     P2PTasks@status:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0x48
  1909  0000A8                     	ds	1
  1910  0000A9                     P2PTasks@i:
  1911                           	opt stack 0
  1912  0000A9                     freezer_feature@switch_val:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x49
  1916  0000A9                     	ds	1
  1917  0000AA                     ??_run_p2p_demo:
  1918  0000AA                     MiApp_EstablishConnection@Mode:
  1919                           	opt stack 0
  1920                           
  1921                           ; 1 bytes @ 0x4A
  1922  0000AA                     	ds	1
  1923  0000AB                     ??_MiApp_EstablishConnection:
  1924                           
  1925                           ; 1 bytes @ 0x4B
  1926  0000AB                     	ds	4
  1927  0000AF                     Initialize_Demo@freezer_enable:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x4F
  1931  0000AF                     	ds	1
  1932  0000B0                     Initialize_Demo@i:
  1933                           	opt stack 0
  1934                           
  1935                           ; 1 bytes @ 0x50
  1936  0000B0                     	ds	1
  1937  0000B1                     main@freezer_enable:
  1938                           	opt stack 0
  1939                           
  1940                           ; 1 bytes @ 0x51
  1941  0000B1                     	ds	1
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           postdec1	equ	0xFE5
  1949                           fsr1h	equ	0xFE2
  1950                           fsr1l	equ	0xFE1
  1951                           
  1952                           	psect	cstackCOMRAM
  1953  000001                     __pcstackCOMRAM:
  1954                           	opt stack 0
  1955  000001                     ?i2_MiWi_TickGet:
  1956                           	opt stack 0
  1957  000001                     i2SPIPut@v:
  1958                           	opt stack 0
  1959  000001                     i2DELAY_10us@tenMicroSecondCounter:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x0
  1963  000001                     	ds	1
  1964  000002                     i2RegisterRead@address:
  1965                           	opt stack 0
  1966  000002                     i2WriteFIFO@Data:
  1967                           	opt stack 0
  1968  000002                     i2RegisterSet@setting:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x1
  1972  000002                     	ds	1
  1973  000003                     i2RegisterRead@value:
  1974                           	opt stack 0
  1975  000003                     i2WriteFIFO@IRQ1select:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x2
  1979  000003                     	ds	1
  1980  000004                     i2RegisterSet@IRQ1select:
  1981                           	opt stack 0
  1982  000004                     i2RegisterRead@IRQ1select:
  1983                           	opt stack 0
  1984  000004                     i2WriteFIFO@IRQ0select:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x3
  1988  000004                     	ds	1
  1989  000005                     ??i2_DELAY_10us:
  1990  000005                     ??i2_MiWi_TickGet:
  1991  000005                     i2RegisterSet@IRQ0select:
  1992                           	opt stack 0
  1993  000005                     i2RegisterRead@IRQ0select:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x4
  1997  000005                     	ds	1
  1998  000006                     i2SetRFMode@mode:
  1999                           	opt stack 0
  2000  000006                     i2MiWi_TickGet@failureCounter:
  2001                           	opt stack 0
  2002                           
  2003                           ; 1 bytes @ 0x5
  2004  000006                     	ds	1
  2005  000007                     i2MiWi_TickGet@currentTime:
  2006                           	opt stack 0
  2007                           
  2008                           ; 4 bytes @ 0x6
  2009  000007                     	ds	6
  2010  00000D                     i2DELAY_10us@cyclesRequiredForEntireDelay:
  2011                           	opt stack 0
  2012                           
  2013                           ; 4 bytes @ 0xC
  2014  00000D                     	ds	4
  2015  000011                     i2TxPacket@CCA:
  2016                           	opt stack 0
  2017                           
  2018                           ; 1 bytes @ 0x10
  2019  000011                     	ds	1
  2020  000012                     ??i2_TxPacket:
  2021                           
  2022                           ; 1 bytes @ 0x11
  2023  000012                     	ds	4
  2024  000016                     i2TxPacket@TxPacketLen:
  2025                           	opt stack 0
  2026                           
  2027                           ; 1 bytes @ 0x15
  2028  000016                     	ds	1
  2029  000017                     i2TxPacket@status:
  2030                           	opt stack 0
  2031                           
  2032                           ; 1 bytes @ 0x16
  2033  000017                     	ds	1
  2034  000018                     i2TxPacket@t1:
  2035                           	opt stack 0
  2036                           
  2037                           ; 4 bytes @ 0x17
  2038  000018                     	ds	4
  2039  00001C                     i2TxPacket@t2:
  2040                           	opt stack 0
  2041                           
  2042                           ; 4 bytes @ 0x1B
  2043  00001C                     	ds	4
  2044  000020                     i2TxPacket@CCARetries:
  2045                           	opt stack 0
  2046                           
  2047                           ; 1 bytes @ 0x1F
  2048  000020                     	ds	1
  2049  000021                     i2TxPacket@reTry:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x20
  2053  000021                     	ds	1
  2054  000022                     i2TxPacket@allowedTxFailure:
  2055                           	opt stack 0
  2056                           
  2057                           ; 1 bytes @ 0x21
  2058  000022                     	ds	1
  2059  000023                     i2TxPacket@rssival:
  2060                           	opt stack 0
  2061                           
  2062                           ; 1 bytes @ 0x22
  2063  000023                     	ds	1
  2064  000024                     i2TxPacket@i:
  2065                           	opt stack 0
  2066                           
  2067                           ; 1 bytes @ 0x23
  2068  000024                     	ds	1
  2069  000025                     ??_high_isr:
  2070                           
  2071                           ; 1 bytes @ 0x24
  2072  000025                     	ds	10
  2073  00002F                     high_isr@counter:
  2074                           	opt stack 0
  2075                           
  2076                           ; 2 bytes @ 0x2E
  2077  00002F                     	ds	2
  2078  000031                     high_isr@fifo_stat:
  2079                           	opt stack 0
  2080                           
  2081                           ; 1 bytes @ 0x30
  2082  000031                     	ds	1
  2083  000032                     high_isr@ackPacket:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0x31
  2087  000032                     	ds	4
  2088  000036                     high_isr@bAck:
  2089                           	opt stack 0
  2090                           
  2091                           ; 1 bytes @ 0x35
  2092  000036                     	ds	1
  2093  000037                     high_isr@RxPacketPtr:
  2094                           	opt stack 0
  2095                           
  2096                           ; 1 bytes @ 0x36
  2097  000037                     	ds	1
  2098  000038                     high_isr@ackInfoIndex:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x37
  2102  000038                     	ds	1
  2103  000039                     high_isr@PacketLen:
  2104                           	opt stack 0
  2105                           
  2106                           ; 1 bytes @ 0x38
  2107  000039                     	ds	1
  2108  00003A                     high_isr@BankIndex:
  2109                           	opt stack 0
  2110                           
  2111                           ; 1 bytes @ 0x39
  2112  00003A                     	ds	1
  2113  00003B                     high_isr@i:
  2114                           	opt stack 0
  2115                           
  2116                           ; 1 bytes @ 0x3A
  2117  00003B                     	ds	1
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           fsr1h	equ	0xFE2
  2126                           fsr1l	equ	0xFE1
  2127                           
  2128 ;;
  2129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2130 ;;
  2131 ;; *************** function _main *****************
  2132 ;; Defined at:
  2133 ;;		line 56 in file "../src/main.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  freezer_enab    1   81[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : E/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;Total ram usage:        1 bytes
  2152 ;; Hardware stack levels required when called:   20
  2153 ;; This function calls:
  2154 ;;		_DemoOutput_Greeting
  2155 ;;		_InitSymbolTimer
  2156 ;;		_Initialize_Demo
  2157 ;;		_Run_Demo
  2158 ;;		_SYSTEM_Initialize
  2159 ;;		_freezer_feature
  2160 ;; This function is called by:
  2161 ;;		Startup code after reset
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text0
  2166  002B04                     __ptext0:
  2167                           	opt stack 0
  2168  002B04                     _main:
  2169                           	opt stack 11
  2170                           
  2171                           ;main.c: 60: SYSTEM_Initialize();
  2172                           
  2173                           ;incstack = 0
  2174  002B04  EC0E  F00F         	call	_SYSTEM_Initialize	;wreg free
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;main.c: 66: InitSymbolTimer ();
  2178  002B08  EC21  F016         	call	_InitSymbolTimer	;wreg free
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 68: DemoOutput_Greeting();
  2182  002B0C  EC06  F016         	call	_DemoOutput_Greeting	;wreg free
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;main.c: 72: freezer_enable = freezer_feature();
  2186  002B10  EC0D  F011         	call	_freezer_feature	;wreg free
  2187  002B14  6FB1               	movwf	main@freezer_enable& (0+255),b
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 76: Initialize_Demo(freezer_enable);
  2191  002B16  51B1               	movf	main@freezer_enable& (0+255),w,b
  2192  002B18  EC3D  F012         	call	_Initialize_Demo
  2193  002B1C                     l10200:
  2194                           
  2195                           ;main.c: 78: {
  2196                           ;main.c: 80: Run_Demo();
  2197  002B1C  EC50  F016         	call	_Run_Demo	;wreg free
  2198  002B20  D7FD               	goto	l10200
  2199  002B22                     __end_of_main:
  2200                           	opt stack 0
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           
  2211 ;; *************** function _freezer_feature *****************
  2212 ;; Defined at:
  2213 ;;		line 69 in file "../src/task.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  tick2           4   69[BANK0 ] struct _MIWI_TICK
  2218 ;;  tick1           4   65[BANK0 ] struct _MIWI_TICK
  2219 ;;  switch_val      1   73[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : F/0
  2226 ;;		On exit  : F/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;Total ram usage:       13 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:   13
  2236 ;; This function calls:
  2237 ;;		_ButtonPressed
  2238 ;;		_DELAY_ms
  2239 ;;		_LCDDisplay
  2240 ;;		_MiWi_TickGet
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text1
  2247  00221A                     __ptext1:
  2248                           	opt stack 0
  2249  00221A                     _freezer_feature:
  2250                           	opt stack 17
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;task.c: 71: MIWI_TICK tick1, tick2;
  2254                           ;task.c: 72: uint8_t switch_val;
  2255                           ;task.c: 73: tick1 = MiWi_TickGet();
  2256                           
  2257                           ;incstack = 0
  2258  00221A  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  2259  00221E  C069  F0A1         	movff	?_MiWi_TickGet,freezer_feature@tick1
  2260  002222  C06A  F0A2         	movff	?_MiWi_TickGet+1,freezer_feature@tick1+1
  2261  002226  C06B  F0A3         	movff	?_MiWi_TickGet+2,freezer_feature@tick1+2
  2262  00222A  C06C  F0A4         	movff	?_MiWi_TickGet+3,freezer_feature@tick1+3
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;task.c: 75: {
  2266                           ;task.c: 76: tick2 = MiWi_TickGet();
  2267                           
  2268                           ;task.c: 74: while(1)
  2269  00222E  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  2270  002232  C069  F0A5         	movff	?_MiWi_TickGet,freezer_feature@tick2
  2271  002236  C06A  F0A6         	movff	?_MiWi_TickGet+1,freezer_feature@tick2+1
  2272  00223A  C06B  F0A7         	movff	?_MiWi_TickGet+2,freezer_feature@tick2+2
  2273  00223E  C06C  F0A8         	movff	?_MiWi_TickGet+3,freezer_feature@tick2+3
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;task.c: 77: if((tick2.Val - tick1.Val) > (((uint32_t)(16000000)/32) * 4))
  2277  002242  51A1               	movf	freezer_feature@tick1& (0+255),w,b
  2278  002244  5DA5               	subwf	freezer_feature@tick2& (0+255),w,b
  2279  002246  6F9D               	movwf	??_freezer_feature& (0+255),b
  2280  002248  51A2               	movf	(freezer_feature@tick1+1)& (0+255),w,b
  2281  00224A  59A6               	subwfb	(freezer_feature@tick2+1)& (0+255),w,b
  2282  00224C  6F9E               	movwf	(??_freezer_feature+1)& (0+255),b
  2283  00224E  51A3               	movf	(freezer_feature@tick1+2)& (0+255),w,b
  2284  002250  59A7               	subwfb	(freezer_feature@tick2+2)& (0+255),w,b
  2285  002252  6F9F               	movwf	(??_freezer_feature+2)& (0+255),b
  2286  002254  51A4               	movf	(freezer_feature@tick1+3)& (0+255),w,b
  2287  002256  59A8               	subwfb	(freezer_feature@tick2+3)& (0+255),w,b
  2288  002258  6FA0               	movwf	(??_freezer_feature+3)& (0+255),b
  2289  00225A  51A0               	movf	(??_freezer_feature+3)& (0+255),w,b
  2290  00225C  E11E               	bnz	l1035
  2291  00225E  0E81               	movlw	129
  2292  002260  5D9D               	subwf	??_freezer_feature& (0+255),w,b
  2293  002262  0E84               	movlw	132
  2294  002264  599E               	subwfb	(??_freezer_feature+1)& (0+255),w,b
  2295  002266  0E1E               	movlw	30
  2296  002268  599F               	subwfb	(??_freezer_feature+2)& (0+255),w,b
  2297  00226A  E301               	bnc	l10140
  2298  00226C  0012               	return	
  2299  00226E                     l10140:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;task.c: 79: switch_val = ButtonPressed ();
  2303  00226E  ECCB  F010         	call	_ButtonPressed	;wreg free
  2304  002272  6FA9               	movwf	freezer_feature@switch_val& (0+255),b
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;task.c: 80: if(switch_val == 2)
  2308  002274  0E02               	movlw	2
  2309  002276  19A9               	xorwf	freezer_feature@switch_val& (0+255),w,b
  2310  002278  E10F               	bnz	l10154
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;task.c: 81: {
  2314                           ;task.c: 82: LCDDisplay((char *)"Restoring Network !!", 0, 0);
  2315  00227A  0E31               	movlw	low STR_29
  2316  00227C  6F98               	movwf	LCDDisplay@text& (0+255),b
  2317  00227E  0EFF               	movlw	high STR_29
  2318  002280  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  2319  002282  6B9A               	clrf	LCDDisplay@value& (0+255),b
  2320  002284  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  2321  002286  ECC5  F013         	call	_LCDDisplay	;wreg free
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;task.c: 83: DELAY_ms(1000);
  2325  00228A  0E03               	movlw	3
  2326  00228C  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  2327  00228E  0EE8               	movlw	232
  2328  002290  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2329  002292  EC3E  F00E         	call	_DELAY_ms	;wreg free
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;task.c: 84: return 1;
  2333  002296  0C01               	retlw	1
  2334  002298                     l10154:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;task.c: 86: else
  2338                           ;task.c: 87: {
  2339                           ;task.c: 88: return 0;
  2340  002298  0E00               	movlw	0
  2341  00229A                     l1035:
  2342                           
  2343                           ; BSR set to: 0
  2344  00229A  0012               	return		;funcret
  2345  00229C                     __end_of_freezer_feature:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           postdec1	equ	0xFE5
  2354                           fsr1h	equ	0xFE2
  2355                           fsr1l	equ	0xFE1
  2356                           
  2357 ;; *************** function _SYSTEM_Initialize *****************
  2358 ;; Defined at:
  2359 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : F/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   12
  2380 ;; This function calls:
  2381 ;;		_LCD_Initialize
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text2
  2388  001E1C                     __ptext2:
  2389                           	opt stack 0
  2390  001E1C                     _SYSTEM_Initialize:
  2391                           	opt stack 18
  2392                           
  2393                           ;system.c: 52: OSCCON = 0x78;
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;incstack = 0
  2397  001E1C  0E78               	movlw	120
  2398  001E1E  6ED3               	movwf	4051,c	;volatile
  2399                           
  2400                           ;system.c: 53: OSCTUNEbits.PLLEN = 1;
  2401  001E20  8C9B               	bsf	3995,6,c	;volatile
  2402                           
  2403                           ;system.c: 54: WDTCONbits.SWDTEN = 0;
  2404  001E22  90C0               	bcf	4032,0,c	;volatile
  2405                           
  2406                           ;system.c: 60: EECON2 = 0x55;
  2407  001E24  0E55               	movlw	85
  2408  001E26  6EA7               	movwf	4007,c	;volatile
  2409                           
  2410                           ;system.c: 61: EECON2 = 0xAA;
  2411  001E28  0EAA               	movlw	170
  2412  001E2A  6EA7               	movwf	4007,c	;volatile
  2413                           
  2414                           ;system.c: 62: PPSCONbits.IOLOCK = 0;
  2415  001E2C  010E               	movlb	14	; () banked
  2416  001E2E  91FF               	bcf	255,0,b	;volatile
  2417                           
  2418                           ;system.c: 64: RPINR1 = 17;
  2419  001E30  0E11               	movlw	17
  2420  001E32  6FE7               	movwf	231,b	;volatile
  2421                           
  2422                           ;system.c: 65: RPINR21 = 23;
  2423  001E34  0E17               	movlw	23
  2424  001E36  6FFB               	movwf	251,b	;volatile
  2425                           
  2426                           ;system.c: 66: RPOR21 = 10;
  2427  001E38  0E0A               	movlw	10
  2428  001E3A  6FDB               	movwf	219,b	;volatile
  2429                           
  2430                           ;system.c: 67: RPOR19 = 9;
  2431  001E3C  0E09               	movlw	9
  2432  001E3E  6FD9               	movwf	217,b	;volatile
  2433                           
  2434                           ;system.c: 70: EECON2 = 0x55;
  2435  001E40  0E55               	movlw	85
  2436  001E42  6EA7               	movwf	4007,c	;volatile
  2437                           
  2438                           ;system.c: 71: EECON2 = 0xAA;
  2439  001E44  0EAA               	movlw	170
  2440  001E46  6EA7               	movwf	4007,c	;volatile
  2441                           
  2442                           ; BSR set to: 14
  2443                           ;system.c: 72: PPSCONbits.IOLOCK = 1;
  2444  001E48  81FF               	bsf	255,0,b	;volatile
  2445                           
  2446                           ;system.c: 77: ANCON0 = 0xFC;
  2447  001E4A  0EFC               	movlw	252
  2448  001E4C  010F               	movlb	15	; () banked
  2449  001E4E  6F48               	movwf	72,b	;volatile
  2450                           
  2451                           ;system.c: 78: ANCON1 = 0x1F;
  2452  001E50  0E1F               	movlw	31
  2453  001E52  6F49               	movwf	73,b	;volatile
  2454                           
  2455                           ; BSR set to: 15
  2456                           ;system.c: 83: LATCbits.LATC2 = 0;
  2457  001E54  948B               	bcf	3979,2,c	;volatile
  2458                           
  2459                           ; BSR set to: 15
  2460                           ;system.c: 84: LATAbits.LATA6 = 0;
  2461  001E56  9C89               	bcf	3977,6,c	;volatile
  2462                           
  2463                           ; BSR set to: 15
  2464                           ;system.c: 85: LATAbits.LATA7 = 0;
  2465  001E58  9E89               	bcf	3977,7,c	;volatile
  2466                           
  2467                           ; BSR set to: 15
  2468                           ;system.c: 86: TRISCbits.TRISC2 = 0;
  2469  001E5A  9494               	bcf	3988,2,c	;volatile
  2470                           
  2471                           ; BSR set to: 15
  2472                           ;system.c: 87: TRISAbits.TRISA6 = 0;
  2473  001E5C  9C92               	bcf	3986,6,c	;volatile
  2474                           
  2475                           ; BSR set to: 15
  2476                           ;system.c: 88: TRISAbits.TRISA7 = 0;
  2477  001E5E  9E92               	bcf	3986,7,c	;volatile
  2478                           
  2479                           ; BSR set to: 15
  2480                           ;system.c: 90: TRISBbits.TRISB1 = 1;
  2481  001E60  8293               	bsf	3987,1,c	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;system.c: 91: TRISBbits.TRISB2 = 1;
  2485  001E62  8493               	bsf	3987,2,c	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;system.c: 93: INTCON2bits.RBPU = 0;
  2489  001E64  9EF1               	bcf	intcon2,7,c	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;system.c: 98: TRISAbits.TRISA1 = 1;
  2493  001E66  8292               	bsf	3986,1,c	;volatile
  2494                           
  2495                           ; BSR set to: 15
  2496                           ;system.c: 99: TRISAbits.TRISA0 = 1;
  2497  001E68  8092               	bsf	3986,0,c	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;system.c: 108: LATAbits.LATA5 = 1;
  2501  001E6A  8A89               	bsf	3977,5,c	;volatile
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;system.c: 109: LATDbits.LATD1 = 1;
  2505  001E6C  828C               	bsf	3980,1,c	;volatile
  2506                           
  2507                           ; BSR set to: 15
  2508                           ;system.c: 111: TRISAbits.TRISA5 = 0;
  2509  001E6E  9A92               	bcf	3986,5,c	;volatile
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;system.c: 112: TRISDbits.TRISD1 = 0;
  2513  001E70  9295               	bcf	3989,1,c	;volatile
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;system.c: 114: TRISBbits.TRISB0 = 1;
  2517  001E72  8093               	bsf	3987,0,c	;volatile
  2518                           
  2519                           ; BSR set to: 15
  2520                           ;system.c: 115: TRISCbits.TRISC6 = 1;
  2521  001E74  8C94               	bsf	3988,6,c	;volatile
  2522                           
  2523                           ; BSR set to: 15
  2524                           ;system.c: 118: INTCON2bits.INTEDG1 = 1;
  2525  001E76  8AF1               	bsf	intcon2,5,c	;volatile
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;system.c: 121: INTCON2bits.INTEDG0 = 1;
  2529  001E78  8CF1               	bsf	intcon2,6,c	;volatile
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;system.c: 123: INTCONbits.INT0IF = 0;
  2533  001E7A  92F2               	bcf	intcon,1,c	;volatile
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;system.c: 124: INTCONbits.INT0IE = 1;
  2537  001E7C  88F2               	bsf	intcon,4,c	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;system.c: 125: INTCON3bits.INT1IF = 0;
  2541  001E7E  90F0               	bcf	intcon3,0,c	;volatile
  2542                           
  2543                           ; BSR set to: 15
  2544                           ;system.c: 126: INTCON3bits.INT1IE = 1;
  2545  001E80  86F0               	bsf	intcon3,3,c	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;system.c: 130: TRISBbits.TRISB5 = 1;
  2549  001E82  8A93               	bsf	3987,5,c	;volatile
  2550                           
  2551                           ; BSR set to: 15
  2552                           ;system.c: 131: TRISCbits.TRISC7 = 0;
  2553  001E84  9E94               	bcf	3988,7,c	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556                           ;system.c: 132: TRISBbits.TRISB4 = 0;
  2557  001E86  9893               	bcf	3987,4,c	;volatile
  2558                           
  2559                           ;system.c: 134: SSP1STAT = 0xC0;
  2560  001E88  0EC0               	movlw	192
  2561  001E8A  6EC7               	movwf	4039,c	;volatile
  2562                           
  2563                           ;system.c: 135: SSP1CON1 = 0x21;
  2564  001E8C  0E21               	movlw	33
  2565  001E8E  6EC6               	movwf	4038,c	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;system.c: 137: LATDbits.LATD0 = 0;
  2569  001E90  908C               	bcf	3980,0,c	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;system.c: 138: TRISDbits.TRISD0 = 1;
  2573  001E92  8095               	bsf	3989,0,c	;volatile
  2574                           
  2575                           ; BSR set to: 15
  2576                           ;system.c: 144: LATDbits.LATD5 = 1;
  2577  001E94  8A8C               	bsf	3980,5,c	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;system.c: 145: TRISDbits.TRISD5 = 0;
  2581  001E96  9A95               	bcf	3989,5,c	;volatile
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;system.c: 146: LATEbits.LATE2 = 1;
  2585  001E98  848D               	bsf	3981,2,c	;volatile
  2586                           
  2587                           ; BSR set to: 15
  2588                           ;system.c: 147: TRISEbits.TRISE2 = 0;
  2589  001E9A  9496               	bcf	3990,2,c	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;system.c: 153: LATEbits.LATE1 = 0;
  2593  001E9C  928D               	bcf	3981,1,c	;volatile
  2594                           
  2595                           ; BSR set to: 15
  2596                           ;system.c: 154: LATDbits.LATD7 = 1;
  2597  001E9E  8E8C               	bsf	3980,7,c	;volatile
  2598                           
  2599                           ; BSR set to: 15
  2600                           ;system.c: 155: LATDbits.LATD3 = 0;
  2601  001EA0  968C               	bcf	3980,3,c	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;system.c: 156: LATEbits.LATE0 = 0;
  2605  001EA2  908D               	bcf	3981,0,c	;volatile
  2606                           
  2607                           ; BSR set to: 15
  2608                           ;system.c: 157: TRISEbits.TRISE1 = 0;
  2609  001EA4  9296               	bcf	3990,1,c	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;system.c: 158: TRISDbits.TRISD7 = 0;
  2613  001EA6  9E95               	bcf	3989,7,c	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;system.c: 159: TRISDbits.TRISD3 = 0;
  2617  001EA8  9695               	bcf	3989,3,c	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;system.c: 160: TRISEbits.TRISE0 = 0;
  2621  001EAA  9096               	bcf	3990,0,c	;volatile
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;system.c: 165: TRISDbits.TRISD6 = 1;
  2625  001EAC  8C95               	bsf	3989,6,c	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;system.c: 166: TRISDbits.TRISD2 = 0;
  2629  001EAE  9495               	bcf	3989,2,c	;volatile
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;system.c: 167: TRISDbits.TRISD4 = 0;
  2633  001EB0  9895               	bcf	3989,4,c	;volatile
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;system.c: 169: SSP2STAT = 0x00;
  2637  001EB2  6A73               	clrf	3955,c	;volatile
  2638                           
  2639                           ;system.c: 170: SSP2CON1 = 0x31;
  2640  001EB4  0E31               	movlw	49
  2641  001EB6  6E72               	movwf	3954,c	;volatile
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;system.c: 172: PIR3bits.SSP2IF = 0;
  2645  001EB8  9EA4               	bcf	4004,7,c	;volatile
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;system.c: 174: LCD_Initialize();
  2649  001EBA  EC8E  F011         	call	_LCD_Initialize	;wreg free
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;system.c: 179: INTCONbits.GIEH = 1;
  2653  001EBE  8EF2               	bsf	intcon,7,c	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;system.c: 180: INTCONbits.GIEL = 1;
  2657  001EC0  8CF2               	bsf	intcon,6,c	;volatile
  2658                           
  2659                           ; BSR set to: 0
  2660  001EC2  0012               	return		;funcret
  2661  001EC4                     __end_of_SYSTEM_Initialize:
  2662                           	opt stack 0
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           intcon	equ	0xFF2
  2668                           intcon2	equ	0xFF1
  2669                           intcon3	equ	0xFF0
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           postdec1	equ	0xFE5
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           
  2676 ;; *************** function _LCD_Initialize *****************
  2677 ;; Defined at:
  2678 ;;		line 53 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : F/F
  2689 ;;		On exit  : F/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:   11
  2699 ;; This function calls:
  2700 ;;		_DELAY_ms
  2701 ;;		_LCDWriteCmd
  2702 ;; This function is called by:
  2703 ;;		_SYSTEM_Initialize
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text3
  2708  00231C                     __ptext3:
  2709                           	opt stack 0
  2710  00231C                     _LCD_Initialize:
  2711                           	opt stack 18
  2712                           
  2713                           ; BSR set to: 15
  2714                           ;lcd.c: 55: LATDbits.LATD7 = 1;
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;incstack = 0
  2718  00231C  8E8C               	bsf	3980,7,c	;volatile
  2719                           
  2720                           ;lcd.c: 56: LATEbits.LATE0 = 0;
  2721  00231E  908D               	bcf	3981,0,c	;volatile
  2722                           
  2723                           ; BSR set to: 15
  2724                           ;lcd.c: 57: DELAY_ms(8);
  2725  002320  0100               	movlb	0	; () banked
  2726  002322  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2727  002324  0E08               	movlw	8
  2728  002326  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2729  002328  EC3E  F00E         	call	_DELAY_ms	;wreg free
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;lcd.c: 58: LATEbits.LATE0 = 1;
  2733  00232C  808D               	bsf	3981,0,c	;volatile
  2734                           
  2735                           ;lcd.c: 59: DELAY_ms(80);
  2736  00232E  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2737  002330  0E50               	movlw	80
  2738  002332  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2739  002334  EC3E  F00E         	call	_DELAY_ms	;wreg free
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;lcd.c: 60: LCDWriteCmd(0x30);
  2743  002338  0E30               	movlw	48
  2744  00233A  EC18  F016         	call	_LCDWriteCmd
  2745                           
  2746                           ;lcd.c: 61: DELAY_ms(8);
  2747  00233E  0100               	movlb	0	; () banked
  2748  002340  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2749  002342  0E08               	movlw	8
  2750  002344  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2751  002346  EC3E  F00E         	call	_DELAY_ms	;wreg free
  2752                           
  2753                           ;lcd.c: 62: LCDWriteCmd(0x30);
  2754  00234A  0E30               	movlw	48
  2755  00234C  EC18  F016         	call	_LCDWriteCmd
  2756                           
  2757                           ;lcd.c: 63: LCDWriteCmd(0x30);
  2758  002350  0E30               	movlw	48
  2759  002352  EC18  F016         	call	_LCDWriteCmd
  2760                           
  2761                           ;lcd.c: 64: LCDWriteCmd(0x39);
  2762  002356  0E39               	movlw	57
  2763  002358  EC18  F016         	call	_LCDWriteCmd
  2764                           
  2765                           ;lcd.c: 65: LCDWriteCmd(0x14);
  2766  00235C  0E14               	movlw	20
  2767  00235E  EC18  F016         	call	_LCDWriteCmd
  2768                           
  2769                           ;lcd.c: 66: LCDWriteCmd(0x56);
  2770  002362  0E56               	movlw	86
  2771  002364  EC18  F016         	call	_LCDWriteCmd
  2772                           
  2773                           ;lcd.c: 67: LCDWriteCmd(0x6D);
  2774  002368  0E6D               	movlw	109
  2775  00236A  EC18  F016         	call	_LCDWriteCmd
  2776                           
  2777                           ;lcd.c: 69: LCDWriteCmd(0x70);
  2778  00236E  0E70               	movlw	112
  2779  002370  EC18  F016         	call	_LCDWriteCmd
  2780                           
  2781                           ;lcd.c: 70: LCDWriteCmd(0x0E);
  2782  002374  0E0E               	movlw	14
  2783  002376  EC18  F016         	call	_LCDWriteCmd
  2784                           
  2785                           ;lcd.c: 71: LCDWriteCmd(0x06);
  2786  00237A  0E06               	movlw	6
  2787  00237C  EC18  F016         	call	_LCDWriteCmd
  2788                           
  2789                           ;lcd.c: 72: LCDWriteCmd(0x01);
  2790  002380  0E01               	movlw	1
  2791  002382  EC18  F016         	call	_LCDWriteCmd
  2792                           
  2793                           ;lcd.c: 73: DELAY_ms(40);
  2794  002386  0100               	movlb	0	; () banked
  2795  002388  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2796  00238A  0E28               	movlw	40
  2797  00238C  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2798  00238E  EF3E  F00E         	goto	_DELAY_ms	;wreg free
  2799  002392                     __end_of_LCD_Initialize:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           intcon	equ	0xFF2
  2806                           intcon2	equ	0xFF1
  2807                           intcon3	equ	0xFF0
  2808                           postinc0	equ	0xFEE
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           
  2814 ;; *************** function _Run_Demo *****************
  2815 ;; Defined at:
  2816 ;;		line 245 in file "../src/task.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : E/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:   19
  2837 ;; This function calls:
  2838 ;;		_run_p2p_demo
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text4
  2845  002CA0                     __ptext4:
  2846                           	opt stack 0
  2847  002CA0                     _Run_Demo:
  2848                           	opt stack 11
  2849                           
  2850                           ;task.c: 249: run_p2p_demo();
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;incstack = 0
  2854  002CA0  EF3B  F008         	goto	_run_p2p_demo	;wreg free
  2855  002CA4                     __end_of_Run_Demo:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           intcon	equ	0xFF2
  2862                           intcon2	equ	0xFF1
  2863                           intcon3	equ	0xFF0
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           fsr1h	equ	0xFE2
  2868                           fsr1l	equ	0xFE1
  2869                           
  2870 ;; *************** function _run_p2p_demo *****************
  2871 ;; Defined at:
  2872 ;;		line 72 in file "../src/p2p_demo.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  switch_val      1    2[BANK1 ] unsigned char 
  2877 ;;  select_ed       1    3[BANK1 ] unsigned char 
  2878 ;;  update_ed       1    1[BANK1 ] unsigned char 
  2879 ;;  PressedButto    1    0[BANK1 ] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : E/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;Total ram usage:       11 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:   18
  2896 ;; This function calls:
  2897 ;;		_ButtonPressed
  2898 ;;		_DELAY_ms
  2899 ;;		_DemoOutput_Instruction
  2900 ;;		_DemoOutput_UnicastFail
  2901 ;;		_DemoOutput_UpdateTxRx
  2902 ;;		_LCD_Erase
  2903 ;;		_LCD_Update
  2904 ;;		_MiApp_BroadcastPacket
  2905 ;;		_MiApp_UnicastConnection
  2906 ;;		_Process_RxMessage
  2907 ;;		___lbmod
  2908 ;;		_sprintf
  2909 ;; This function is called by:
  2910 ;;		_Run_Demo
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text5
  2915  001076                     __ptext5:
  2916                           	opt stack 0
  2917  001076                     _run_p2p_demo:
  2918                           	opt stack 11
  2919                           
  2920                           ;p2p_demo.c: 75: if (Process_RxMessage())
  2921                           
  2922                           ;incstack = 0
  2923  001076  ECBD  F014         	call	_Process_RxMessage	;wreg free
  2924  00107A  0900               	iorlw	0
  2925  00107C  E001               	bz	l9926
  2926  00107E  0012               	return	
  2927  001080                     l9926:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;p2p_demo.c: 79: else
  2931                           ;p2p_demo.c: 80: {
  2932                           ;p2p_demo.c: 87: uint8_t PressedButton = ButtonPressed();
  2933  001080  ECCB  F010         	call	_ButtonPressed	;wreg free
  2934  001084  0101               	movlb	1	; () banked
  2935  001086  6FF7               	movwf	run_p2p_demo@PressedButton& (0+255),b
  2936                           
  2937                           ;p2p_demo.c: 88: switch( PressedButton )
  2938  001088  D101               	goto	l10024
  2939  00108A                     l975:
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;p2p_demo.c: 97: {TxData = 0;};
  2943  00108A  0100               	movlb	0	; () banked
  2944  00108C  6BDC               	clrf	_TxData& (0+255),b
  2945                           
  2946                           ;p2p_demo.c: 98: for(i = 0; i < 21; i++)
  2947  00108E  6BE1               	clrf	_i& (0+255),b
  2948  001090                     l9932:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;p2p_demo.c: 99: {
  2952                           ;p2p_demo.c: 101: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  2953  001090  0E06               	movlw	6
  2954  001092  6F69               	movwf	___lbmod@divisor& (0+255),b
  2955  001094  51DE               	movf	_TxSynCount& (0+255),w,b
  2956  001096  EC13  F015         	call	___lbmod
  2957  00109A  0D15               	mullw	21
  2958  00109C  0EBF               	movlw	low _MiWi
  2959  00109E  6FAA               	movwf	??_run_p2p_demo& (0+255),b
  2960  0010A0  0EFC               	movlw	high _MiWi
  2961  0010A2  6FAB               	movwf	(??_run_p2p_demo+1)& (0+255),b
  2962  0010A4  50F3               	movf	prodl,w,c
  2963  0010A6  27AA               	addwf	??_run_p2p_demo& (0+255),f,b
  2964  0010A8  50F4               	movf	prodh,w,c
  2965  0010AA  23AB               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  2966  0010AC  51E1               	movf	_i& (0+255),w,b
  2967  0010AE  27AA               	addwf	??_run_p2p_demo& (0+255),f,b
  2968  0010B0  0E00               	movlw	0
  2969  0010B2  23AB               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  2970  0010B4  C0AA  FFF6         	movff	??_run_p2p_demo,tblptrl
  2971  0010B8  C0AB  FFF7         	movff	??_run_p2p_demo+1,tblptrh
  2972  0010BC                     	if	0	;tblptru may be non-zero
  2973  0010BC                     	endif
  2974  0010BC                     	if	0	;tblptru may be non-zero
  2975  0010BC                     	endif
  2976  0010BC  0ED9               	movlw	low _TxBuffer
  2977  0010BE  25DC               	addwf	_TxData& (0+255),w,b
  2978  0010C0  6ED9               	movwf	fsr2l,c
  2979  0010C2  6ADA               	clrf	fsr2h,c
  2980  0010C4  0E01               	movlw	high _TxBuffer
  2981  0010C6  22DA               	addwfc	fsr2h,f,c
  2982  0010C8  0008               	tblrd		*
  2983  0010CA  CFF5 FFDF          	movff	tablat,indf2
  2984                           
  2985                           ; BSR set to: 0
  2986  0010CE  2BDC               	incf	_TxData& (0+255),f,b
  2987                           
  2988                           ; BSR set to: 0
  2989  0010D0  2BE1               	incf	_i& (0+255),f,b
  2990                           
  2991                           ; BSR set to: 0
  2992  0010D2  0E14               	movlw	20
  2993  0010D4  65E1               	cpfsgt	_i& (0+255),b
  2994  0010D6  D7DC               	goto	l9932
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;p2p_demo.c: 102: }
  2998                           ;p2p_demo.c: 103: TxSynCount++;
  2999  0010D8  2BDE               	incf	_TxSynCount& (0+255),f,b
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;p2p_demo.c: 112: MiApp_BroadcastPacket(0);
  3003  0010DA  0E00               	movlw	0
  3004  0010DC  ECEA  F015         	call	_MiApp_BroadcastPacket
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;p2p_demo.c: 121: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  3008  0010E0  C0DB  F09A         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3009  0010E4  2BDD               	incf	_TxNum& (0+255),f,b
  3010  0010E6  51DD               	movf	_TxNum& (0+255),w,b
  3011  0010E8  EC29  F016         	call	_DemoOutput_UpdateTxRx
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;p2p_demo.c: 122: DELAY_ms(1000);
  3015  0010EC  0E03               	movlw	3
  3016  0010EE  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3017  0010F0  0EE8               	movlw	232
  3018  0010F2  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3019  0010F4  EC3E  F00E         	call	_DELAY_ms	;wreg free
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;p2p_demo.c: 123: DemoOutput_Instruction();
  3023  0010F8  EFFD  F015         	goto	_DemoOutput_Instruction	;wreg free
  3024  0010FC                     l9950:
  3025                           
  3026                           ; BSR set to: 1
  3027                           ;p2p_demo.c: 127: chk_sel_status = 1;
  3028  0010FC  0E01               	movlw	1
  3029  0010FE  0100               	movlb	0	; () banked
  3030  001100  6FF3               	movwf	_chk_sel_status& (0+255),b
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;p2p_demo.c: 128: uint8_t select_ed =0;
  3034  001102  0101               	movlb	1	; () banked
  3035  001104  6BFA               	clrf	run_p2p_demo@select_ed& (0+255),b
  3036                           
  3037                           ;p2p_demo.c: 129: bool update_ed = 1;
  3038  001106  0E01               	movlw	1
  3039  001108  6FF8               	movwf	run_p2p_demo@update_ed& (0+255),b
  3040                           
  3041                           ;p2p_demo.c: 130: while(update_ed == 1)
  3042  00110A  D0BB               	goto	l10020
  3043  00110C                     l9954:
  3044                           
  3045                           ; BSR set to: 1
  3046                           ;p2p_demo.c: 131: {
  3047                           ;p2p_demo.c: 134: LCD_Erase();
  3048  00110C  EC27  F015         	call	_LCD_Erase	;wreg free
  3049                           
  3050                           ;p2p_demo.c: 135: LCD_Erase();
  3051  001110  EC27  F015         	call	_LCD_Erase	;wreg free
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;p2p_demo.c: 136: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",select_ed,Conn
      +                          ectionTable[select_ed].Address[0],
  3055                           ;p2p_demo.c: 137: ConnectionTable[select_ed].Address[1],ConnectionTable[select_ed].Addre
      +                          ss[2] );
  3056  001114  0EB8               	movlw	low _LCDText
  3057  001116  6F75               	movwf	sprintf@sp& (0+255),b
  3058  001118  0E01               	movlw	high _LCDText
  3059  00111A  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3060  00111C  0E1B               	movlw	low STR_27
  3061  00111E  6F77               	movwf	sprintf@f& (0+255),b
  3062  001120  0EFF               	movlw	high STR_27
  3063  001122  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3064  001124  C1FA  F079         	movff	run_p2p_demo@select_ed,?_sprintf+4
  3065  001128  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3066  00112A  0101               	movlb	1	; () banked
  3067  00112C  51FA               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3068  00112E  0D0A               	mullw	10
  3069  001130  0E49               	movlw	low _ConnectionTable
  3070  001132  24F3               	addwf	prodl,w,c
  3071  001134  6ED9               	movwf	fsr2l,c
  3072  001136  0E02               	movlw	high _ConnectionTable
  3073  001138  20F4               	addwfc	prodh,w,c
  3074  00113A  6EDA               	movwf	fsr2h,c
  3075  00113C  50DF               	movf	indf2,w,c
  3076  00113E  0100               	movlb	0	; () banked
  3077  001140  6F7B               	movwf	(?_sprintf+6)& (0+255),b
  3078  001142  6B7C               	clrf	(?_sprintf+7)& (0+255),b
  3079  001144  0101               	movlb	1	; () banked
  3080  001146  51FA               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3081  001148  0D0A               	mullw	10
  3082  00114A  0E4A               	movlw	low (_ConnectionTable+1)
  3083  00114C  24F3               	addwf	prodl,w,c
  3084  00114E  6ED9               	movwf	fsr2l,c
  3085  001150  0E02               	movlw	high (_ConnectionTable+1)
  3086  001152  20F4               	addwfc	prodh,w,c
  3087  001154  6EDA               	movwf	fsr2h,c
  3088  001156  50DF               	movf	indf2,w,c
  3089  001158  0100               	movlb	0	; () banked
  3090  00115A  6F7D               	movwf	(?_sprintf+8)& (0+255),b
  3091  00115C  6B7E               	clrf	(?_sprintf+9)& (0+255),b
  3092  00115E  0101               	movlb	1	; () banked
  3093  001160  51FA               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3094  001162  0D0A               	mullw	10
  3095  001164  0E4B               	movlw	low (_ConnectionTable+2)
  3096  001166  24F3               	addwf	prodl,w,c
  3097  001168  6ED9               	movwf	fsr2l,c
  3098  00116A  0E02               	movlw	high (_ConnectionTable+2)
  3099  00116C  20F4               	addwfc	prodh,w,c
  3100  00116E  6EDA               	movwf	fsr2h,c
  3101  001170  50DF               	movf	indf2,w,c
  3102  001172  0100               	movlb	0	; () banked
  3103  001174  6F7F               	movwf	(?_sprintf+10)& (0+255),b
  3104  001176  6B80               	clrf	(?_sprintf+11)& (0+255),b
  3105  001178  EC2C  F000         	call	_sprintf	;wreg free
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;p2p_demo.c: 138: sprintf((char *)&(LCDText[16]), (char*)"RB2: Chnge node");
  3109  00117C  0EC8               	movlw	low (_LCDText+16)
  3110  00117E  6F75               	movwf	sprintf@sp& (0+255),b
  3111  001180  0E01               	movlw	high (_LCDText+16)
  3112  001182  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3113  001184  0E9D               	movlw	low STR_28
  3114  001186  6F77               	movwf	sprintf@f& (0+255),b
  3115  001188  0EFF               	movlw	high STR_28
  3116  00118A  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3117  00118C  EC2C  F000         	call	_sprintf	;wreg free
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;p2p_demo.c: 139: LCD_Update();
  3121  001190  EC4E  F011         	call	_LCD_Update	;wreg free
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;p2p_demo.c: 140: LCD_Update();
  3125  001194  EC4E  F011         	call	_LCD_Update	;wreg free
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;p2p_demo.c: 142: chk_sel_status = 1;
  3129  001198  0E01               	movlw	1
  3130  00119A  6FF3               	movwf	_chk_sel_status& (0+255),b
  3131                           
  3132                           ;p2p_demo.c: 144: while(chk_sel_status)
  3133  00119C  D06F               	goto	l10018
  3134  00119E                     l9966:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;p2p_demo.c: 145: {
  3138                           ;p2p_demo.c: 146: uint8_t switch_val = ButtonPressed();
  3139  00119E  ECCB  F010         	call	_ButtonPressed	;wreg free
  3140  0011A2  0101               	movlb	1	; () banked
  3141  0011A4  6FF9               	movwf	run_p2p_demo@switch_val& (0+255),b
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;p2p_demo.c: 148: Process_RxMessage();
  3145  0011A6  ECBD  F014         	call	_Process_RxMessage	;wreg free
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;p2p_demo.c: 149: if(switch_val == 1)
  3149  0011AA  0101               	movlb	1	; () banked
  3150  0011AC  05F9               	decf	run_p2p_demo@switch_val& (0+255),w,b
  3151  0011AE  E145               	bnz	l10008
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;p2p_demo.c: 150: {
  3155                           ;p2p_demo.c: 151: update_ed = 0;
  3156  0011B0  6BF8               	clrf	run_p2p_demo@update_ed& (0+255),b
  3157                           
  3158                           ;p2p_demo.c: 152: chk_sel_status = 0;
  3159  0011B2  0100               	movlb	0	; () banked
  3160  0011B4  6BF3               	clrf	_chk_sel_status& (0+255),b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;p2p_demo.c: 154: TxSynCount2++;
  3164  0011B6  2BDF               	incf	_TxSynCount2& (0+255),f,b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;p2p_demo.c: 155: {TxData = 0;};
  3168  0011B8  6BDC               	clrf	_TxData& (0+255),b
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;p2p_demo.c: 156: for(i = 0; i < 11; i++)
  3172  0011BA  6BE1               	clrf	_i& (0+255),b
  3173  0011BC                     l9984:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;p2p_demo.c: 157: {
  3177                           ;p2p_demo.c: 159: TxBuffer[TxData++] = DE[(TxSynCount2%6)][i];
  3178  0011BC  0E06               	movlw	6
  3179  0011BE  6F69               	movwf	___lbmod@divisor& (0+255),b
  3180  0011C0  51DF               	movf	_TxSynCount2& (0+255),w,b
  3181  0011C2  EC13  F015         	call	___lbmod
  3182  0011C6  0D0B               	mullw	11
  3183  0011C8  0E3D               	movlw	low _DE
  3184  0011CA  6FAA               	movwf	??_run_p2p_demo& (0+255),b
  3185  0011CC  0EFD               	movlw	high _DE
  3186  0011CE  6FAB               	movwf	(??_run_p2p_demo+1)& (0+255),b
  3187  0011D0  50F3               	movf	prodl,w,c
  3188  0011D2  27AA               	addwf	??_run_p2p_demo& (0+255),f,b
  3189  0011D4  50F4               	movf	prodh,w,c
  3190  0011D6  23AB               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3191  0011D8  51E1               	movf	_i& (0+255),w,b
  3192  0011DA  27AA               	addwf	??_run_p2p_demo& (0+255),f,b
  3193  0011DC  0E00               	movlw	0
  3194  0011DE  23AB               	addwfc	(??_run_p2p_demo+1)& (0+255),f,b
  3195  0011E0  C0AA  FFF6         	movff	??_run_p2p_demo,tblptrl
  3196  0011E4  C0AB  FFF7         	movff	??_run_p2p_demo+1,tblptrh
  3197  0011E8                     	if	0	;tblptru may be non-zero
  3198  0011E8                     	endif
  3199  0011E8                     	if	0	;tblptru may be non-zero
  3200  0011E8                     	endif
  3201  0011E8  0ED9               	movlw	low _TxBuffer
  3202  0011EA  25DC               	addwf	_TxData& (0+255),w,b
  3203  0011EC  6ED9               	movwf	fsr2l,c
  3204  0011EE  6ADA               	clrf	fsr2h,c
  3205  0011F0  0E01               	movlw	high _TxBuffer
  3206  0011F2  22DA               	addwfc	fsr2h,f,c
  3207  0011F4  0008               	tblrd		*
  3208  0011F6  CFF5 FFDF          	movff	tablat,indf2
  3209                           
  3210                           ; BSR set to: 0
  3211  0011FA  2BDC               	incf	_TxData& (0+255),f,b
  3212                           
  3213                           ; BSR set to: 0
  3214  0011FC  2BE1               	incf	_i& (0+255),f,b
  3215                           
  3216                           ; BSR set to: 0
  3217  0011FE  0E0A               	movlw	10
  3218  001200  65E1               	cpfsgt	_i& (0+255),b
  3219  001202  D7DC               	goto	l9984
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;p2p_demo.c: 160: }
  3223                           ;p2p_demo.c: 161: TxSynCount2++;
  3224  001204  2BDF               	incf	_TxSynCount2& (0+255),f,b
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;p2p_demo.c: 162: if( MiApp_UnicastConnection(select_ed, 1) == 0 )
  3228  001206  0E01               	movlw	1
  3229  001208  6FA4               	movwf	MiApp_UnicastConnection@SecEn& (0+255),b
  3230  00120A  0101               	movlb	1	; () banked
  3231  00120C  51FA               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3232  00120E  EC59  F014         	call	_MiApp_UnicastConnection
  3233  001212  0900               	iorlw	0
  3234  001214  E103               	bnz	l9998
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;p2p_demo.c: 163: {
  3238                           ;p2p_demo.c: 164: DemoOutput_UnicastFail();
  3239  001216  ECF4  F015         	call	_DemoOutput_UnicastFail	;wreg free
  3240                           
  3241                           ;p2p_demo.c: 165: }
  3242  00121A  D001               	goto	l10000
  3243  00121C                     l9998:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;p2p_demo.c: 166: else
  3247                           ;p2p_demo.c: 167: {
  3248                           ;p2p_demo.c: 169: TxNum++;
  3249  00121C  2BDD               	incf	_TxNum& (0+255),f,b
  3250  00121E                     l10000:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;p2p_demo.c: 170: }
  3254                           ;p2p_demo.c: 172: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3255  00121E  C0DB  F09A         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3256  001222  51DD               	movf	_TxNum& (0+255),w,b
  3257  001224  EC29  F016         	call	_DemoOutput_UpdateTxRx
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;p2p_demo.c: 173: DELAY_ms(1000);
  3261  001228  0E03               	movlw	3
  3262  00122A  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3263  00122C  0EE8               	movlw	232
  3264  00122E  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3265  001230  EC3E  F00E         	call	_DELAY_ms	;wreg free
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;p2p_demo.c: 174: DemoOutput_Instruction();
  3269  001234  ECFD  F015         	call	_DemoOutput_Instruction	;wreg free
  3270                           
  3271                           ;p2p_demo.c: 176: break;
  3272  001238  D024               	goto	l10020
  3273  00123A                     l10008:
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;p2p_demo.c: 179: else if(switch_val == 2)
  3277  00123A  0E02               	movlw	2
  3278  00123C  19F9               	xorwf	run_p2p_demo@switch_val& (0+255),w,b
  3279  00123E  E11E               	bnz	l10018
  3280                           
  3281                           ; BSR set to: 1
  3282                           ;p2p_demo.c: 180: {
  3283                           ;p2p_demo.c: 181: if (select_ed > conn_size-2)
  3284  001240  51FA               	movf	run_p2p_demo@select_ed& (0+255),w,b
  3285  001242  0100               	movlb	0	; () banked
  3286  001244  6FAA               	movwf	??_run_p2p_demo& (0+255),b
  3287  001246  6BAB               	clrf	(??_run_p2p_demo+1)& (0+255),b
  3288  001248  0EFE               	movlw	254
  3289  00124A  6FAC               	movwf	(??_run_p2p_demo+2)& (0+255),b
  3290  00124C  69AD               	setf	(??_run_p2p_demo+3)& (0+255),b
  3291  00124E  51F0               	movf	_conn_size& (0+255),w,b
  3292  001250  6FAE               	movwf	(??_run_p2p_demo+4)& (0+255),b
  3293  001252  6BAF               	clrf	(??_run_p2p_demo+5)& (0+255),b
  3294  001254  51AC               	movf	(??_run_p2p_demo+2)& (0+255),w,b
  3295  001256  27AE               	addwf	(??_run_p2p_demo+4)& (0+255),f,b
  3296  001258  51AD               	movf	(??_run_p2p_demo+3)& (0+255),w,b
  3297  00125A  23AF               	addwfc	(??_run_p2p_demo+5)& (0+255),f,b
  3298  00125C  51AA               	movf	??_run_p2p_demo& (0+255),w,b
  3299  00125E  5DAE               	subwf	(??_run_p2p_demo+4)& (0+255),w,b
  3300  001260  51AF               	movf	(??_run_p2p_demo+5)& (0+255),w,b
  3301  001262  0A80               	xorlw	128
  3302  001264  6FB0               	movwf	(??_run_p2p_demo+6)& (0+255),b
  3303  001266  51AB               	movf	(??_run_p2p_demo+1)& (0+255),w,b
  3304  001268  0A80               	xorlw	128
  3305  00126A  59B0               	subwfb	(??_run_p2p_demo+6)& (0+255),w,b
  3306  00126C  E203               	bc	l10014
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;p2p_demo.c: 182: {
  3310                           ;p2p_demo.c: 184: select_ed = 0;
  3311  00126E  0101               	movlb	1	; () banked
  3312  001270  6BFA               	clrf	run_p2p_demo@select_ed& (0+255),b
  3313                           
  3314                           ;p2p_demo.c: 185: }
  3315  001272  D002               	goto	l10016
  3316  001274                     l10014:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;p2p_demo.c: 186: else
  3320                           ;p2p_demo.c: 187: {
  3321                           ;p2p_demo.c: 189: select_ed = select_ed+1;
  3322  001274  0101               	movlb	1	; () banked
  3323  001276  2BFA               	incf	run_p2p_demo@select_ed& (0+255),f,b
  3324  001278                     l10016:
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;p2p_demo.c: 190: }
  3328                           ;p2p_demo.c: 191: chk_sel_status = 0;
  3329  001278  0100               	movlb	0	; () banked
  3330  00127A  6BF3               	clrf	_chk_sel_status& (0+255),b
  3331  00127C                     l10018:
  3332  00127C  0100               	movlb	0	; () banked
  3333  00127E  51F3               	movf	_chk_sel_status& (0+255),w,b
  3334  001280  E18E               	bnz	l9966
  3335  001282                     l10020:
  3336  001282  0101               	movlb	1	; () banked
  3337  001284  05F8               	decf	run_p2p_demo@update_ed& (0+255),w,b
  3338  001286  E101 D741          	bz	l9954
  3339  00128A  0012               	return	
  3340  00128C                     l10024:
  3341                           
  3342                           ; BSR set to: 1
  3343  00128C  51F7               	movf	run_p2p_demo@PressedButton& (0+255),w,b
  3344                           
  3345                           ; Switch size 1, requested type "speed"
  3346                           ; Number of cases is 2, Range of values is 1 to 2
  3347                           ; switch strategies available:
  3348                           ; Name         Instructions Cycles
  3349                           ; simple_byte            7     4 (average)
  3350                           ;	Chosen strategy is simple_byte
  3351  00128E  0A01               	xorlw	1	; case 1
  3352  001290  E101 D6FB          	bz	l975
  3353  001294  0A03               	xorlw	3	; case 2
  3354  001296  E101 D731          	bz	l9950
  3355  00129A  0012               	return		;funcret
  3356  00129C                     __end_of_run_p2p_demo:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           intcon2	equ	0xFF1
  3366                           intcon3	equ	0xFF0
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           postdec1	equ	0xFE5
  3370                           fsr1h	equ	0xFE2
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           
  3376 ;; *************** function ___lbmod *****************
  3377 ;; Defined at:
  3378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  dividend        1    wreg     unsigned char 
  3381 ;;  divisor         1    9[BANK0 ] unsigned char 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  dividend        1   10[BANK0 ] unsigned char 
  3384 ;;  rem             1   12[BANK0 ] unsigned char 
  3385 ;;  counter         1   11[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      unsigned char 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : F/0
  3392 ;;		On exit  : F/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;Total ram usage:        4 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    9
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_run_p2p_demo
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text6
  3410  002A26                     __ptext6:
  3411                           	opt stack 0
  3412  002A26                     ___lbmod:
  3413                           	opt stack 19
  3414                           
  3415                           ;incstack = 0
  3416                           ;___lbmod@dividend stored from wreg
  3417  002A26  6F6A               	movwf	___lbmod@dividend& (0+255),b
  3418  002A28  0E08               	movlw	8
  3419  002A2A  0100               	movlb	0	; () banked
  3420  002A2C  6F6B               	movwf	___lbmod@counter& (0+255),b
  3421                           
  3422                           ; BSR set to: 0
  3423  002A2E  6B6C               	clrf	___lbmod@rem& (0+255),b
  3424  002A30                     l9694:
  3425                           
  3426                           ; BSR set to: 0
  3427  002A30  90D8               	bcf	status,0,c
  3428  002A32  356A               	rlcf	___lbmod@dividend& (0+255),w,b
  3429  002A34  356C               	rlcf	___lbmod@rem& (0+255),w,b
  3430  002A36  6F6C               	movwf	___lbmod@rem& (0+255),b
  3431                           
  3432                           ; BSR set to: 0
  3433  002A38  90D8               	bcf	status,0,c
  3434  002A3A  376A               	rlcf	___lbmod@dividend& (0+255),f,b
  3435                           
  3436                           ; BSR set to: 0
  3437  002A3C  5169               	movf	___lbmod@divisor& (0+255),w,b
  3438  002A3E  5D6C               	subwf	___lbmod@rem& (0+255),w,b
  3439  002A40  E302               	bnc	l9702
  3440                           
  3441                           ; BSR set to: 0
  3442  002A42  5169               	movf	___lbmod@divisor& (0+255),w,b
  3443  002A44  5F6C               	subwf	___lbmod@rem& (0+255),f,b
  3444  002A46                     l9702:
  3445                           
  3446                           ; BSR set to: 0
  3447  002A46  2F6B               	decfsz	___lbmod@counter& (0+255),f,b
  3448  002A48  D7F3               	goto	l9694
  3449                           
  3450                           ; BSR set to: 0
  3451  002A4A  516C               	movf	___lbmod@rem& (0+255),w,b
  3452                           
  3453                           ; BSR set to: 0
  3454  002A4C  0012               	return		;funcret
  3455  002A4E                     __end_of___lbmod:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           intcon	equ	0xFF2
  3464                           intcon2	equ	0xFF1
  3465                           intcon3	equ	0xFF0
  3466                           postinc0	equ	0xFEE
  3467                           wreg	equ	0xFE8
  3468                           postdec1	equ	0xFE5
  3469                           fsr1h	equ	0xFE2
  3470                           fsr1l	equ	0xFE1
  3471                           indf2	equ	0xFDF
  3472                           fsr2h	equ	0xFDA
  3473                           fsr2l	equ	0xFD9
  3474                           status	equ	0xFD8
  3475                           
  3476 ;; *************** function _Process_RxMessage *****************
  3477 ;; Defined at:
  3478 ;;		line 39 in file "../src/p2p_demo.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      unsigned char 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : F/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:   17
  3499 ;; This function calls:
  3500 ;;		_DELAY_ms
  3501 ;;		_DemoOutput_Instruction
  3502 ;;		_DemoOutput_UpdateTxRx
  3503 ;;		_MiApp_DiscardMessage
  3504 ;;		_MiApp_MessageAvailable
  3505 ;; This function is called by:
  3506 ;;		_run_p2p_demo
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text7
  3511  00297A                     __ptext7:
  3512                           	opt stack 0
  3513  00297A                     _Process_RxMessage:
  3514                           	opt stack 11
  3515                           
  3516                           ;p2p_demo.c: 47: if( MiApp_MessageAvailable() )
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;incstack = 0
  3520  00297A  EC30  F016         	call	_MiApp_MessageAvailable	;wreg free
  3521  00297E  0900               	iorlw	0
  3522  002980  B4D8               	btfsc	status,2,c
  3523  002982  0012               	return	
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;p2p_demo.c: 48: {
  3527                           ;p2p_demo.c: 57: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  3528  002984  2BDB               	incf	_RxNum& (0+255),f,b
  3529  002986  C0DB  F09A         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3530  00298A  51DD               	movf	_TxNum& (0+255),w,b
  3531  00298C  EC29  F016         	call	_DemoOutput_UpdateTxRx
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;p2p_demo.c: 59: LATAbits.LATA7 ^= 1;
  3535  002990  7E89               	btg	3977,7,c	;volatile
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;p2p_demo.c: 60: DELAY_ms(2000);
  3539  002992  0E07               	movlw	7
  3540  002994  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3541  002996  0ED0               	movlw	208
  3542  002998  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3543  00299A  EC3E  F00E         	call	_DELAY_ms	;wreg free
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;p2p_demo.c: 61: DemoOutput_Instruction();
  3547  00299E  ECFD  F015         	call	_DemoOutput_Instruction	;wreg free
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;p2p_demo.c: 68: MiApp_DiscardMessage();
  3551  0029A2  EF4D  F016         	goto	_MiApp_DiscardMessage	;wreg free
  3552  0029A6                     __end_of_Process_RxMessage:
  3553                           	opt stack 0
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           prodh	equ	0xFF4
  3559                           prodl	equ	0xFF3
  3560                           intcon	equ	0xFF2
  3561                           intcon2	equ	0xFF1
  3562                           intcon3	equ	0xFF0
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           postdec1	equ	0xFE5
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           indf2	equ	0xFDF
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           
  3573 ;; *************** function _DemoOutput_UpdateTxRx *****************
  3574 ;; Defined at:
  3575 ;;		line 280 in file "../src/demo_ouput.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  TxNum           1    wreg     unsigned char 
  3578 ;;  RxNum           1   58[BANK0 ] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  TxNum           1   59[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : F/0
  3587 ;;		On exit  : F/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3590 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:   13
  3597 ;; This function calls:
  3598 ;;		_LCDTRXCount
  3599 ;; This function is called by:
  3600 ;;		_Process_RxMessage
  3601 ;;		_run_p2p_demo
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text8
  3606  002C52                     __ptext8:
  3607                           	opt stack 0
  3608  002C52                     _DemoOutput_UpdateTxRx:
  3609                           	opt stack 14
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;incstack = 0
  3613                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  3614  002C52  6F9B               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  3615                           
  3616                           ;demo_ouput.c: 282: LCDTRXCount(TxNum, RxNum);
  3617  002C54  C09A  F098         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  3618  002C58  0100               	movlb	0	; () banked
  3619  002C5A  519B               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  3620  002C5C  EFA6  F013         	goto	_LCDTRXCount
  3621  002C60                     __end_of_DemoOutput_UpdateTxRx:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           intcon	equ	0xFF2
  3630                           intcon2	equ	0xFF1
  3631                           intcon3	equ	0xFF0
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           postdec1	equ	0xFE5
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _LCDTRXCount *****************
  3643 ;; Defined at:
  3644 ;;		line 186 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  txCount         1    wreg     unsigned char 
  3647 ;;  rxCount         1   56[BANK0 ] unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  txCount         1   57[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : F/0
  3656 ;;		On exit  : F/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3659 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;Total ram usage:        2 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:   12
  3666 ;; This function calls:
  3667 ;;		_LCD_Erase
  3668 ;;		_LCD_Update
  3669 ;;		_sprintf
  3670 ;; This function is called by:
  3671 ;;		_DemoOutput_UpdateTxRx
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text9
  3676  00274C                     __ptext9:
  3677                           	opt stack 0
  3678  00274C                     _LCDTRXCount:
  3679                           	opt stack 14
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683                           ;LCDTRXCount@txCount stored from wreg
  3684  00274C  6F99               	movwf	LCDTRXCount@txCount& (0+255),b
  3685                           
  3686                           ;lcd.c: 188: LCD_Erase();
  3687  00274E  EC27  F015         	call	_LCD_Erase	;wreg free
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;lcd.c: 189: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  3691  002752  0EB8               	movlw	low _LCDText
  3692  002754  6F75               	movwf	sprintf@sp& (0+255),b
  3693  002756  0E01               	movlw	high _LCDText
  3694  002758  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3695  00275A  0E8C               	movlw	low STR_14
  3696  00275C  6F77               	movwf	sprintf@f& (0+255),b
  3697  00275E  0EFF               	movlw	high STR_14
  3698  002760  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3699  002762  C099  F079         	movff	LCDTRXCount@txCount,?_sprintf+4
  3700  002766  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3701  002768  EC2C  F000         	call	_sprintf	;wreg free
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;lcd.c: 190: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  3705  00276C  0EC8               	movlw	low (_LCDText+16)
  3706  00276E  6F75               	movwf	sprintf@sp& (0+255),b
  3707  002770  0E01               	movlw	high (_LCDText+16)
  3708  002772  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3709  002774  0E7B               	movlw	low STR_15
  3710  002776  6F77               	movwf	sprintf@f& (0+255),b
  3711  002778  0EFF               	movlw	high STR_15
  3712  00277A  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3713  00277C  C098  F079         	movff	LCDTRXCount@rxCount,?_sprintf+4
  3714  002780  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3715  002782  EC2C  F000         	call	_sprintf	;wreg free
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;lcd.c: 191: LCD_Update();
  3719  002786  EF4E  F011         	goto	_LCD_Update	;wreg free
  3720  00278A                     __end_of_LCDTRXCount:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           intcon2	equ	0xFF1
  3730                           intcon3	equ	0xFF0
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postdec1	equ	0xFE5
  3734                           fsr1h	equ	0xFE2
  3735                           fsr1l	equ	0xFE1
  3736                           indf2	equ	0xFDF
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _MiApp_UnicastConnection *****************
  3742 ;; Defined at:
  3743 ;;		line 1780 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  ConnectionIn    1    wreg     unsigned char 
  3746 ;;  SecEn           1   68[BANK0 ] unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  ConnectionIn    1   69[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      unsigned char 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : F/1
  3755 ;;		On exit  : F/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3758 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;Total ram usage:        2 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:   16
  3765 ;; This function calls:
  3766 ;;		_MiApp_UnicastAddress
  3767 ;; This function is called by:
  3768 ;;		_run_p2p_demo
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text10
  3773  0028B2                     __ptext10:
  3774                           	opt stack 0
  3775  0028B2                     _MiApp_UnicastConnection:
  3776                           	opt stack 12
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;incstack = 0
  3780                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  3781  0028B2  0100               	movlb	0	; () banked
  3782  0028B4  6FA5               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  3783                           
  3784                           ;miwi_p2p.c: 1783: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  3785  0028B6  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  3786  0028B8  0D0A               	mullw	10
  3787  0028BA  0E51               	movlw	low (_ConnectionTable+8)
  3788  0028BC  24F3               	addwf	prodl,w,c
  3789  0028BE  6ED9               	movwf	fsr2l,c
  3790  0028C0  0E02               	movlw	high (_ConnectionTable+8)
  3791  0028C2  20F4               	addwfc	prodh,w,c
  3792  0028C4  6EDA               	movwf	fsr2h,c
  3793  0028C6  AEDF               	btfss	indf2,7,c
  3794  0028C8  0C00               	retlw	0
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;miwi_p2p.c: 1784: {
  3798                           ;miwi_p2p.c: 1817: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  3799  0028CA  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  3800  0028CC  0D0A               	mullw	10
  3801  0028CE  0E49               	movlw	low _ConnectionTable
  3802  0028D0  24F3               	addwf	prodl,w,c
  3803  0028D2  6FA0               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  3804  0028D4  0E02               	movlw	high _ConnectionTable
  3805  0028D6  20F4               	addwfc	prodh,w,c
  3806  0028D8  6FA1               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  3807  0028DA  0E01               	movlw	1
  3808  0028DC  6FA2               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  3809  0028DE  C0A4  F0A3         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  3810  0028E2  EFE0  F015         	goto	_MiApp_UnicastAddress	;wreg free
  3811  0028E6                     __end_of_MiApp_UnicastConnection:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           intcon2	equ	0xFF1
  3821                           intcon3	equ	0xFF0
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           postdec1	equ	0xFE5
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _MiApp_UnicastAddress *****************
  3833 ;; Defined at:
  3834 ;;		line 1859 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  DestinationA    2   64[BANK0 ] PTR unsigned char 
  3837 ;;		 -> ConnectionTable(300), 
  3838 ;;  PermanentAdd    1   66[BANK0 ] unsigned char 
  3839 ;;  SecEn           1   67[BANK0 ] unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : F/0
  3848 ;;		On exit  : F/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3851 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3854 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;Total ram usage:        4 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   15
  3858 ;; This function calls:
  3859 ;;		_SendPacket
  3860 ;; This function is called by:
  3861 ;;		_MiApp_UnicastConnection
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text11
  3866  002BC0                     __ptext11:
  3867                           	opt stack 0
  3868  002BC0                     _MiApp_UnicastAddress:
  3869                           	opt stack 12
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;miwi_p2p.c: 1892: return SendPacket(0, DestinationAddress, 0, SecEn);
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;incstack = 0
  3876  002BC0  C0A0  F096         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  3877  002BC4  C0A1  F097         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  3878  002BC8  0E00               	movlw	0
  3879  002BCA  6B98               	clrf	SendPacket@isCommand& (0+255),b
  3880  002BCC  C0A3  F099         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  3881  002BD0  EF62  F00F         	goto	_SendPacket
  3882  002BD4                     __end_of_MiApp_UnicastAddress:
  3883                           	opt stack 0
  3884                           tblptru	equ	0xFF8
  3885                           tblptrh	equ	0xFF7
  3886                           tblptrl	equ	0xFF6
  3887                           tablat	equ	0xFF5
  3888                           prodh	equ	0xFF4
  3889                           prodl	equ	0xFF3
  3890                           intcon	equ	0xFF2
  3891                           intcon2	equ	0xFF1
  3892                           intcon3	equ	0xFF0
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           indf2	equ	0xFDF
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _MiApp_BroadcastPacket *****************
  3904 ;; Defined at:
  3905 ;;		line 1709 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  SecEn           1    wreg     unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  SecEn           1   64[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      unsigned char 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : F/0
  3916 ;;		On exit  : F/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:   15
  3926 ;; This function calls:
  3927 ;;		_SendPacket
  3928 ;; This function is called by:
  3929 ;;		_run_p2p_demo
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text12
  3934  002BD4                     __ptext12:
  3935                           	opt stack 0
  3936  002BD4                     _MiApp_BroadcastPacket:
  3937                           	opt stack 13
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;incstack = 0
  3941                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  3942  002BD4  6FA0               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  3943                           
  3944                           ;miwi_p2p.c: 1739: return SendPacket(1, (0), 0, SecEn);
  3945                           ;	Return value of _MiApp_BroadcastPacket is never used
  3946  002BD6  0100               	movlb	0	; () banked
  3947  002BD8  6B96               	clrf	SendPacket@DestinationAddress& (0+255),b
  3948  002BDA  6B97               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  3949  002BDC  6B98               	clrf	SendPacket@isCommand& (0+255),b
  3950  002BDE  C0A0  F099         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  3951  002BE2  0E01               	movlw	1
  3952  002BE4  EF62  F00F         	goto	_SendPacket
  3953  002BE8                     __end_of_MiApp_BroadcastPacket:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           intcon2	equ	0xFF1
  3963                           intcon3	equ	0xFF0
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _DemoOutput_UnicastFail *****************
  3975 ;; Defined at:
  3976 ;;		line 294 in file "../src/demo_ouput.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : F/0
  3987 ;;		On exit  : F/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:   13
  3997 ;; This function calls:
  3998 ;;		_LCDDisplay
  3999 ;; This function is called by:
  4000 ;;		_run_p2p_demo
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text13
  4005  002BE8                     __ptext13:
  4006                           	opt stack 0
  4007  002BE8                     _DemoOutput_UnicastFail:
  4008                           	opt stack 15
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;demo_ouput.c: 299: LCDDisplay((char *)" Unicast Failed", 0, 1);
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;incstack = 0
  4015  002BE8  0EAD               	movlw	low STR_26
  4016  002BEA  6F98               	movwf	LCDDisplay@text& (0+255),b
  4017  002BEC  0EFF               	movlw	high STR_26
  4018  002BEE  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  4019  002BF0  6B9A               	clrf	LCDDisplay@value& (0+255),b
  4020  002BF2  0E01               	movlw	1
  4021  002BF4  6F9B               	movwf	LCDDisplay@delay& (0+255),b
  4022  002BF6  EFC5  F013         	goto	_LCDDisplay	;wreg free
  4023  002BFA                     __end_of_DemoOutput_UnicastFail:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           intcon2	equ	0xFF1
  4033                           intcon3	equ	0xFF0
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           postdec1	equ	0xFE5
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           fsr2h	equ	0xFDA
  4041                           fsr2l	equ	0xFD9
  4042                           status	equ	0xFD8
  4043                           
  4044 ;; *************** function _ButtonPressed *****************
  4045 ;; Defined at:
  4046 ;;		line 359 in file "../src/demo_ouput.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  t               4   23[BANK0 ] struct _MIWI_TICK
  4051 ;;  tickDifferen    4   19[BANK0 ] struct _MIWI_TICK
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : E/0
  4058 ;;		On exit  : F/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;Total ram usage:        8 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:   10
  4068 ;; This function calls:
  4069 ;;		_MiWi_TickGet
  4070 ;; This function is called by:
  4071 ;;		_run_p2p_demo
  4072 ;;		_freezer_feature
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text14
  4077  002196                     __ptext14:
  4078                           	opt stack 0
  4079  002196                     _ButtonPressed:
  4080                           	opt stack 19
  4081                           
  4082                           ;demo_ouput.c: 361: MIWI_TICK tickDifference;
  4083                           ;demo_ouput.c: 363: if(PORTBbits.RB1 == 0)
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;incstack = 0
  4087  002196  B281               	btfsc	3969,1,c	;volatile
  4088  002198  D010               	goto	l886
  4089                           
  4090                           ;demo_ouput.c: 364: {
  4091                           ;demo_ouput.c: 366: if(PUSH_BUTTON_pressed == 0)
  4092  00219A  0100               	movlb	0	; () banked
  4093  00219C  51D7               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4094  00219E  E13C               	bnz	l9674
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;demo_ouput.c: 367: {
  4098                           ;demo_ouput.c: 368: PUSH_BUTTON_pressed = 1;
  4099  0021A0  0E01               	movlw	1
  4100  0021A2  6FD7               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;demo_ouput.c: 369: PUSH_BUTTON_press_time = MiWi_TickGet();
  4104  0021A4  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  4105  0021A8  C069  F0C4         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4106  0021AC  C06A  F0C5         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4107  0021B0  C06B  F0C6         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4108  0021B4  C06C  F0C7         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;demo_ouput.c: 370: return 1;
  4112  0021B8  0C01               	retlw	1
  4113  0021BA                     l886:
  4114                           
  4115                           ;demo_ouput.c: 373: else if(PORTBbits.RB2 == 0)
  4116  0021BA  B481               	btfsc	3969,2,c	;volatile
  4117  0021BC  D010               	goto	l9666
  4118                           
  4119                           ;demo_ouput.c: 374: {
  4120                           ;demo_ouput.c: 376: if(PUSH_BUTTON_pressed == 0)
  4121  0021BE  0100               	movlb	0	; () banked
  4122  0021C0  51D7               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4123  0021C2  E12A               	bnz	l9674
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;demo_ouput.c: 377: {
  4127                           ;demo_ouput.c: 378: PUSH_BUTTON_pressed = 1;
  4128  0021C4  0E01               	movlw	1
  4129  0021C6  6FD7               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;demo_ouput.c: 379: PUSH_BUTTON_press_time = MiWi_TickGet();
  4133  0021C8  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  4134  0021CC  C069  F0C4         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4135  0021D0  C06A  F0C5         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4136  0021D4  C06B  F0C6         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4137  0021D8  C06C  F0C7         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;demo_ouput.c: 380: return 2;
  4141  0021DC  0C02               	retlw	2
  4142  0021DE                     l9666:
  4143                           
  4144                           ;demo_ouput.c: 383: else
  4145                           ;demo_ouput.c: 384: {
  4146                           ;demo_ouput.c: 386: MIWI_TICK t = MiWi_TickGet();
  4147  0021DE  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  4148  0021E2  C069  F077         	movff	?_MiWi_TickGet,ButtonPressed@t
  4149  0021E6  C06A  F078         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4150  0021EA  C06B  F079         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4151  0021EE  C06C  F07A         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;demo_ouput.c: 389: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4155  0021F2  51C4               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4156  0021F4  5D77               	subwf	ButtonPressed@t& (0+255),w,b
  4157  0021F6  6F73               	movwf	ButtonPressed@tickDifference& (0+255),b
  4158  0021F8  51C5               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4159  0021FA  5978               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  4160  0021FC  6F74               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  4161  0021FE  51C6               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4162  002200  5979               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  4163  002202  6F75               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  4164  002204  51C7               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4165  002206  597A               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  4166  002208  6F76               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;demo_ouput.c: 392: if(tickDifference.Val > 0x00003FFF)
  4170  00220A  5176               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  4171  00220C  1175               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  4172  00220E  E103               	bnz	u9650
  4173  002210  0E40               	movlw	64
  4174  002212  5D74               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  4175  002214  E301               	bnc	l9674
  4176  002216                     u9650:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;demo_ouput.c: 393: {
  4180                           ;demo_ouput.c: 394: PUSH_BUTTON_pressed = 0;
  4181  002216  6BD7               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  4182  002218                     l9674:
  4183                           
  4184                           ; BSR set to: 0
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;demo_ouput.c: 395: }
  4188                           ;demo_ouput.c: 396: }
  4189                           ;demo_ouput.c: 398: return 0;
  4190  002218  0C00               	retlw	0	;funcret
  4191  00221A                     __end_of_ButtonPressed:
  4192                           	opt stack 0
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           intcon2	equ	0xFF1
  4201                           intcon3	equ	0xFF0
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           postdec1	equ	0xFE5
  4205                           fsr1h	equ	0xFE2
  4206                           fsr1l	equ	0xFE1
  4207                           indf2	equ	0xFDF
  4208                           fsr2h	equ	0xFDA
  4209                           fsr2l	equ	0xFD9
  4210                           status	equ	0xFD8
  4211                           
  4212 ;; *************** function _Initialize_Demo *****************
  4213 ;; Defined at:
  4214 ;;		line 96 in file "../src/task.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  freezer_enab    1    wreg     unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  freezer_enab    1   79[BANK0 ] unsigned char 
  4219 ;;  i               1   80[BANK0 ] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : F/0
  4226 ;;		On exit  : F/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;Total ram usage:        2 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:   18
  4236 ;; This function calls:
  4237 ;;		_DemoOutput_Channel
  4238 ;;		_DemoOutput_ChannelError
  4239 ;;		_DemoOutput_Instruction
  4240 ;;		_MiApp_ConnectionMode
  4241 ;;		_MiApp_EstablishConnection
  4242 ;;		_MiApp_ProtocolInit
  4243 ;;		_MiApp_SetChannel
  4244 ;;		_MiApp_StartConnection
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text15
  4251  00247A                     __ptext15:
  4252                           	opt stack 0
  4253  00247A                     _Initialize_Demo:
  4254                           	opt stack 12
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;incstack = 0
  4258                           ;Initialize_Demo@freezer_enable stored from wreg
  4259  00247A  6FAF               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  4260                           
  4261                           ;task.c: 98: uint8_t i;
  4262                           ;task.c: 100: if (freezer_enable)
  4263  00247C  0100               	movlb	0	; () banked
  4264  00247E  51AF               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  4265  002480  E005               	bz	l1040
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;task.c: 101: {
  4269                           ;task.c: 112: MiApp_ProtocolInit(1);
  4270  002482  0E01               	movlw	1
  4271  002484  EC4E  F009         	call	_MiApp_ProtocolInit
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;task.c: 114: DemoOutput_Instruction();
  4275  002488  EFFD  F015         	goto	_DemoOutput_Instruction	;wreg free
  4276  00248C                     l1040:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;task.c: 120: else
  4280                           ;task.c: 121: {
  4281                           ;task.c: 122: LATAbits.LATA6 = 0;
  4282  00248C  9C89               	bcf	3977,6,c	;volatile
  4283                           
  4284                           ;task.c: 123: LATAbits.LATA7 = 0;
  4285  00248E  9E89               	bcf	3977,7,c	;volatile
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;task.c: 135: MiApp_ProtocolInit(0);
  4289  002490  0E00               	movlw	0
  4290  002492  EC4E  F009         	call	_MiApp_ProtocolInit
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;task.c: 138: if( MiApp_SetChannel(myChannel) == 0 )
  4294  002496  0E19               	movlw	25
  4295  002498  ECE9  F014         	call	_MiApp_SetChannel
  4296  00249C  0900               	iorlw	0
  4297  00249E  E103               	bnz	l10170
  4298                           
  4299                           ;task.c: 139: {
  4300                           ;task.c: 140: DemoOutput_ChannelError(myChannel);
  4301  0024A0  0E19               	movlw	25
  4302  0024A2  EC56  F016         	call	_DemoOutput_ChannelError
  4303  0024A6                     l10170:
  4304                           
  4305                           ;task.c: 141: }
  4306                           ;task.c: 152: MiApp_ConnectionMode(0x00);
  4307  0024A6  0E00               	movlw	0
  4308  0024A8  EC73  F014         	call	_MiApp_ConnectionMode
  4309                           
  4310                           ;task.c: 153: DemoOutput_Channel(myChannel, 0);
  4311  0024AC  0E00               	movlw	0
  4312  0024AE  0100               	movlb	0	; () banked
  4313  0024B0  6F9D               	movwf	DemoOutput_Channel@Step& (0+255),b
  4314  0024B2  0E19               	movlw	25
  4315  0024B4  EC60  F015         	call	_DemoOutput_Channel
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;task.c: 167: i = MiApp_EstablishConnection(0xFF, 0x00);
  4319  0024B8  6BAA               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4320  0024BA  0EFF               	movlw	255
  4321  0024BC  EC12  F00A         	call	_MiApp_EstablishConnection
  4322  0024C0  6FB0               	movwf	Initialize_Demo@i& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;task.c: 172: if( i != 0xFF )
  4326  0024C2  29B0               	incf	Initialize_Demo@i& (0+255),w,b
  4327  0024C4  E006               	bz	l10180
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;task.c: 173: {
  4331                           ;task.c: 174: DemoOutput_Channel(myChannel, 1);
  4332  0024C6  0E01               	movlw	1
  4333  0024C8  6F9D               	movwf	DemoOutput_Channel@Step& (0+255),b
  4334  0024CA  0E19               	movlw	25
  4335  0024CC  EC60  F015         	call	_DemoOutput_Channel
  4336                           
  4337                           ;task.c: 178: }
  4338  0024D0  D009               	goto	l10182
  4339  0024D2                     l10180:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;task.c: 179: else
  4343                           ;task.c: 180: {
  4344                           ;task.c: 211: MiApp_StartConnection(0x00, 10, 0);
  4345  0024D2  0E0A               	movlw	10
  4346  0024D4  6F73               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  4347  0024D6  0E00               	movlw	0
  4348  0024D8  6B74               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  4349  0024DA  6B75               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  4350  0024DC  6B76               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  4351  0024DE  6B77               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  4352  0024E0  ECA0  F015         	call	_MiApp_StartConnection
  4353  0024E4                     l10182:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;task.c: 215: }
  4357                           ;task.c: 234: LATAbits.LATA6 = 1;
  4358  0024E4  8C89               	bsf	3977,6,c	;volatile
  4359  0024E6  EFFD  F015         	goto	_DemoOutput_Instruction
  4360  0024EA                     __end_of_Initialize_Demo:
  4361                           	opt stack 0
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           prodh	equ	0xFF4
  4367                           prodl	equ	0xFF3
  4368                           intcon	equ	0xFF2
  4369                           intcon2	equ	0xFF1
  4370                           intcon3	equ	0xFF0
  4371                           postinc0	equ	0xFEE
  4372                           wreg	equ	0xFE8
  4373                           postdec1	equ	0xFE5
  4374                           fsr1h	equ	0xFE2
  4375                           fsr1l	equ	0xFE1
  4376                           indf2	equ	0xFDF
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _MiApp_StartConnection *****************
  4382 ;; Defined at:
  4383 ;;		line 2160 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  Mode            1    wreg     unsigned char 
  4386 ;;  ScanDuration    1   19[BANK0 ] unsigned char 
  4387 ;;  ChannelMap      4   20[BANK0 ] unsigned long 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  Mode            1   24[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : F/0
  4396 ;;		On exit  : F/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4399 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;Total ram usage:        6 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:   10
  4406 ;; This function calls:
  4407 ;;		_MiWi_TickGet
  4408 ;; This function is called by:
  4409 ;;		_Initialize_Demo
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text16
  4414  002B40                     __ptext16:
  4415                           	opt stack 0
  4416  002B40                     _MiApp_StartConnection:
  4417                           	opt stack 19
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;incstack = 0
  4421                           ;MiApp_StartConnection@Mode stored from wreg
  4422  002B40  6F78               	movwf	MiApp_StartConnection@Mode& (0+255),b
  4423                           
  4424                           ;miwi_p2p.c: 2162: switch(Mode)
  4425  002B42  D004               	goto	l9810
  4426  002B44                     l9804:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;miwi_p2p.c: 2180: tick1 = MiWi_TickGet();
  4430  002B44  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  4431                           
  4432                           ;miwi_p2p.c: 2181: tick4 = MiWi_TickGet();
  4433  002B48  EFAB  F012         	goto	_MiWi_TickGet	;wreg free
  4434  002B4C                     l9810:
  4435  002B4C  0100               	movlb	0	; () banked
  4436  002B4E  5178               	movf	MiApp_StartConnection@Mode& (0+255),w,b
  4437                           
  4438                           ; Switch size 1, requested type "speed"
  4439                           ; Number of cases is 3, Range of values is 0 to 2
  4440                           ; switch strategies available:
  4441                           ; Name         Instructions Cycles
  4442                           ; simple_byte           10     6 (average)
  4443                           ;	Chosen strategy is simple_byte
  4444  002B50  E0F9               	bz	l9804
  4445  002B52  0A01               	xorlw	1	; case 1
  4446  002B54  A4D8               	btfss	status,2,c
  4447  002B56  0A03               	xorlw	3	; case 2
  4448  002B58  0012               	return	
  4449  002B5A                     __end_of_MiApp_StartConnection:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           intcon2	equ	0xFF1
  4459                           intcon3	equ	0xFF0
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           postdec1	equ	0xFE5
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _MiApp_ProtocolInit *****************
  4471 ;; Defined at:
  4472 ;;		line 1122 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  bNetworkFree    1    wreg     unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  bNetworkFree    1   27[BANK0 ] unsigned char 
  4477 ;;  initValue       2   28[BANK0 ] struct .
  4478 ;;  i               1   30[BANK0 ] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : F/0
  4485 ;;		On exit  : F/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;Total ram usage:        5 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:   14
  4495 ;; This function calls:
  4496 ;;		_EEPROM_Read
  4497 ;;		_EEPROM_Write
  4498 ;;		_InitSymbolTimer
  4499 ;;		_MiApp_SetChannel
  4500 ;;		_MiMAC_Init
  4501 ;;		_NVMInit
  4502 ;; This function is called by:
  4503 ;;		_Initialize_Demo
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text17
  4508  00129C                     __ptext17:
  4509                           	opt stack 0
  4510  00129C                     _MiApp_ProtocolInit:
  4511                           	opt stack 15
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;incstack = 0
  4515                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  4516  00129C  6F7B               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  4517                           
  4518                           ;miwi_p2p.c: 1131: {
  4519                           ;miwi_p2p.c: 1132: for(i = 0; i < 3; i++)
  4520  00129E  0100               	movlb	0	; () banked
  4521  0012A0  6B7E               	clrf	MiApp_ProtocolInit@i& (0+255),b
  4522  0012A2                     l9714:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;miwi_p2p.c: 1133: {
  4526                           ;miwi_p2p.c: 1134: EEPROM_Read(&(myLongAddress[8-1-i]), 0xFA+i, 1);
  4527  0012A2  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4528  0012A4  0843               	sublw	low (_myLongAddress+7)
  4529  0012A6  6F7A               	movwf	??_MiApp_ProtocolInit& (0+255),b
  4530  0012A8  C07A  F06A         	movff	??_MiApp_ProtocolInit,EEPROM_Read@dest
  4531  0012AC  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  4532  0012AE  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4533  0012B0  0FFA               	addlw	250
  4534  0012B2  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4535  0012B4  0E01               	movlw	1
  4536  0012B6  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4537  0012B8  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4538                           
  4539                           ; BSR set to: 0
  4540  0012BC  2B7E               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  4541                           
  4542                           ; BSR set to: 0
  4543  0012BE  0E02               	movlw	2
  4544  0012C0  657E               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  4545  0012C2  D7EF               	goto	l9714
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;miwi_p2p.c: 1137: if( 8 > 7 )
  4549  0012C4  6840               	setf	_myLongAddress+4,c
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;miwi_p2p.c: 1138: {
  4553                           ;miwi_p2p.c: 1139: myLongAddress[3] = 0xFE;
  4554  0012C6  0EFE               	movlw	254
  4555  0012C8  6E3F               	movwf	_myLongAddress+3,c
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;miwi_p2p.c: 1140: }
  4559                           ;miwi_p2p.c: 1141: for(i = 0; i < 3; i++)
  4560  0012CA  6B7E               	clrf	MiApp_ProtocolInit@i& (0+255),b
  4561  0012CC                     l9728:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;miwi_p2p.c: 1142: {
  4565                           ;miwi_p2p.c: 1143: EEPROM_Read(&(myLongAddress[2-i]), 0xFA+3+i, 1);
  4566  0012CC  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4567  0012CE  083E               	sublw	low (_myLongAddress+2)
  4568  0012D0  6F7A               	movwf	??_MiApp_ProtocolInit& (0+255),b
  4569  0012D2  C07A  F06A         	movff	??_MiApp_ProtocolInit,EEPROM_Read@dest
  4570  0012D6  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  4571  0012D8  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4572  0012DA  0FFD               	addlw	253
  4573  0012DC  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4574  0012DE  0E01               	movlw	1
  4575  0012E0  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4576  0012E2  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4577                           
  4578                           ; BSR set to: 0
  4579  0012E6  2B7E               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  4580                           
  4581                           ; BSR set to: 0
  4582  0012E8  0E02               	movlw	2
  4583  0012EA  657E               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  4584  0012EC  D7EF               	goto	l9728
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;miwi_p2p.c: 1151: }
  4588                           ;miwi_p2p.c: 1152: }
  4589                           ;miwi_p2p.c: 1158: NVMInit();
  4590  0012EE  EC75  F012         	call	_NVMInit	;wreg free
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;miwi_p2p.c: 1162: P2PStatus.Val = 0;
  4594  0012F2  6BD6               	clrf	_P2PStatus& (0+255),b	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;miwi_p2p.c: 1164: if (!bNetworkFreezer)
  4598  0012F4  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  4599  0012F6  E129               	bnz	l9762
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;miwi_p2p.c: 1165: {
  4603                           ;miwi_p2p.c: 1166: for(i = 0; i < 30; i++)
  4604  0012F8  6B7E               	clrf	MiApp_ProtocolInit@i& (0+255),b
  4605  0012FA                     l9756:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;miwi_p2p.c: 1167: {
  4609                           ;miwi_p2p.c: 1168: ConnectionTable[i].status.Val = 0;
  4610  0012FA  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4611  0012FC  0D0A               	mullw	10
  4612  0012FE  0E51               	movlw	low (_ConnectionTable+8)
  4613  001300  24F3               	addwf	prodl,w,c
  4614  001302  6ED9               	movwf	fsr2l,c
  4615  001304  0E02               	movlw	high (_ConnectionTable+8)
  4616  001306  20F4               	addwfc	prodh,w,c
  4617  001308  6EDA               	movwf	fsr2h,c
  4618  00130A  6ADF               	clrf	indf2,c
  4619                           
  4620                           ;miwi_p2p.c: 1169: ConnectionTable[i].Address[0] = 0x00;
  4621  00130C  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4622  00130E  0D0A               	mullw	10
  4623  001310  0E49               	movlw	low _ConnectionTable
  4624  001312  24F3               	addwf	prodl,w,c
  4625  001314  6ED9               	movwf	fsr2l,c
  4626  001316  0E02               	movlw	high _ConnectionTable
  4627  001318  20F4               	addwfc	prodh,w,c
  4628  00131A  6EDA               	movwf	fsr2h,c
  4629  00131C  6ADF               	clrf	indf2,c
  4630                           
  4631                           ;miwi_p2p.c: 1170: ConnectionTable[i].Address[1] = 0x00;
  4632  00131E  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4633  001320  0D0A               	mullw	10
  4634  001322  0E4A               	movlw	low (_ConnectionTable+1)
  4635  001324  24F3               	addwf	prodl,w,c
  4636  001326  6ED9               	movwf	fsr2l,c
  4637  001328  0E02               	movlw	high (_ConnectionTable+1)
  4638  00132A  20F4               	addwfc	prodh,w,c
  4639  00132C  6EDA               	movwf	fsr2h,c
  4640  00132E  6ADF               	clrf	indf2,c
  4641                           
  4642                           ;miwi_p2p.c: 1171: ConnectionTable[i].Address[2] = 0x00;
  4643  001330  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  4644  001332  0D0A               	mullw	10
  4645  001334  0E4B               	movlw	low (_ConnectionTable+2)
  4646  001336  24F3               	addwf	prodl,w,c
  4647  001338  6ED9               	movwf	fsr2l,c
  4648  00133A  0E02               	movlw	high (_ConnectionTable+2)
  4649  00133C  20F4               	addwfc	prodh,w,c
  4650  00133E  6EDA               	movwf	fsr2h,c
  4651  001340  6ADF               	clrf	indf2,c
  4652                           
  4653                           ; BSR set to: 0
  4654  001342  2B7E               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  4655                           
  4656                           ; BSR set to: 0
  4657  001344  0E1D               	movlw	29
  4658  001346  657E               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  4659  001348  D7D8               	goto	l9756
  4660  00134A                     l9762:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;miwi_p2p.c: 1176: }
  4664                           ;miwi_p2p.c: 1177: }
  4665                           ;miwi_p2p.c: 1179: InitSymbolTimer();
  4666  00134A  EC21  F016         	call	_InitSymbolTimer	;wreg free
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;miwi_p2p.c: 1181: TxData = 0;
  4670  00134E  6BDC               	clrf	_TxData& (0+255),b
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;miwi_p2p.c: 1198: if( bNetworkFreezer )
  4674  001350  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  4675  001352  E02A               	bz	l9776
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;miwi_p2p.c: 1199: {
  4679                           ;miwi_p2p.c: 1200: EEPROM_Read( (uint8_t *)&currentChannel, 0x02, 1);
  4680  001354  0EF1               	movlw	low _currentChannel
  4681  001356  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  4682  001358  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  4683  00135A  0E02               	movlw	2
  4684  00135C  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4685  00135E  0E01               	movlw	1
  4686  001360  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4687  001362  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;miwi_p2p.c: 1201: if( currentChannel >= 32 )
  4691  001366  0E1F               	movlw	31
  4692  001368  65F1               	cpfsgt	_currentChannel& (0+255),b
  4693  00136A  D001               	goto	l9774
  4694  00136C  0C1F               	retlw	31
  4695  00136E                     l9774:
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;miwi_p2p.c: 1204: }
  4699                           ;miwi_p2p.c: 1209: EEPROM_Read( (uint8_t *)&ConnMode,0x03, 1);
  4700  00136E  0EF4               	movlw	low _ConnMode
  4701  001370  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  4702  001372  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  4703  001374  0E03               	movlw	3
  4704  001376  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4705  001378  0E01               	movlw	1
  4706  00137A  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4707  00137C  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4708                           
  4709                           ;miwi_p2p.c: 1210: EEPROM_Read( (uint8_t *)ConnectionTable, 0x04, (uint16_t)30 * sizeof(
      +                          CONNECTION_ENTRY));
  4710  001380  0E49               	movlw	low _ConnectionTable
  4711  001382  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  4712  001384  0E02               	movlw	high _ConnectionTable
  4713  001386  6F6B               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  4714  001388  0E04               	movlw	4
  4715  00138A  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4716  00138C  0E2C               	movlw	44
  4717  00138E  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4718  001390  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4719                           
  4720                           ;miwi_p2p.c: 1216: EEPROM_Read( (uint8_t *)&conn_size, 0xBA, 1);
  4721  001394  0EF0               	movlw	low _conn_size
  4722  001396  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  4723  001398  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  4724  00139A  0EBA               	movlw	186
  4725  00139C  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  4726  00139E  0E01               	movlw	1
  4727  0013A0  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  4728  0013A2  EC8D  F014         	call	_EEPROM_Read	;wreg free
  4729                           
  4730                           ;miwi_p2p.c: 1227: }
  4731  0013A6  D01E               	goto	l9778
  4732  0013A8                     l9776:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;miwi_p2p.c: 1228: else
  4736                           ;miwi_p2p.c: 1229: {
  4737                           ;miwi_p2p.c: 1234: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  4738  0013A8  0EF1               	movlw	low _currentChannel
  4739  0013AA  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  4740  0013AC  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  4741  0013AE  0E02               	movlw	2
  4742  0013B0  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  4743  0013B2  0E01               	movlw	1
  4744  0013B4  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  4745  0013B6  EC87  F010         	call	_EEPROM_Write	;wreg free
  4746                           
  4747                           ;miwi_p2p.c: 1235: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
  4748  0013BA  0EF4               	movlw	low _ConnMode
  4749  0013BC  0100               	movlb	0	; () banked
  4750  0013BE  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  4751  0013C0  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  4752  0013C2  0E03               	movlw	3
  4753  0013C4  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  4754  0013C6  0E01               	movlw	1
  4755  0013C8  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  4756  0013CA  EC87  F010         	call	_EEPROM_Write	;wreg free
  4757                           
  4758                           ;miwi_p2p.c: 1236: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)30 * sizeof(C
      +                          ONNECTION_ENTRY));
  4759  0013CE  0E49               	movlw	low _ConnectionTable
  4760  0013D0  0100               	movlb	0	; () banked
  4761  0013D2  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  4762  0013D4  0E02               	movlw	high _ConnectionTable
  4763  0013D6  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  4764  0013D8  0E04               	movlw	4
  4765  0013DA  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  4766  0013DC  0E2C               	movlw	44
  4767  0013DE  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  4768  0013E0  EC87  F010         	call	_EEPROM_Write	;wreg free
  4769  0013E4                     l9778:
  4770                           
  4771                           ;miwi_p2p.c: 1237: }
  4772                           ;miwi_p2p.c: 1244: initValue.PAddress = myLongAddress;
  4773  0013E4  0E3C               	movlw	low _myLongAddress
  4774  0013E6  0100               	movlb	0	; () banked
  4775  0013E8  6F7D               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;miwi_p2p.c: 1245: initValue.actionFlags.bits.CCAEnable = 1;
  4779  0013EA  837C               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;miwi_p2p.c: 1246: initValue.actionFlags.bits.PAddrLength = 8;
  4783  0013EC  517C               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  4784  0013EE  0B87               	andlw	-121
  4785  0013F0  0940               	iorlw	64
  4786  0013F2  6F7C               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;miwi_p2p.c: 1247: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  4790  0013F4  B17B               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  4791  0013F6  D002               	bra	u9745
  4792  0013F8  957C               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  4793  0013FA  D002               	bra	u9746
  4794  0013FC                     u9745:
  4795  0013FC  0100               	movlb	0	; () banked
  4796  0013FE  857C               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  4797  001400                     u9746:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;miwi_p2p.c: 1248: initValue.actionFlags.bits.RepeaterMode = 0;
  4801  001400  917C               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;miwi_p2p.c: 1250: MiMAC_Init(initValue);
  4805  001402  C07C  F077         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  4806  001406  C07D  F078         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  4807  00140A  ECB1  F00F         	call	_MiMAC_Init	;wreg free
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;miwi_p2p.c: 1259: MiApp_SetChannel(currentChannel);
  4811  00140E  51F1               	movf	_currentChannel& (0+255),w,b
  4812  001410  ECE9  F014         	call	_MiApp_SetChannel
  4813                           
  4814                           ;miwi_p2p.c: 1270: P2PCapacityInfo = 0;
  4815  001414  0100               	movlb	0	; () banked
  4816  001416  6BD5               	clrf	_P2PCapacityInfo& (0+255),b
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;miwi_p2p.c: 1272: P2PCapacityInfo |= 0x01;
  4820  001418  81D5               	bsf	_P2PCapacityInfo& (0+255),0,b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;miwi_p2p.c: 1277: P2PCapacityInfo |= (ConnMode << 4);
  4824  00141A  39F4               	swapf	_ConnMode& (0+255),w,b
  4825  00141C  0BF0               	andlw	240
  4826  00141E  13D5               	iorwf	_P2PCapacityInfo& (0+255),f,b
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;miwi_p2p.c: 1279: INTCON3bits.INT1IE = 1;
  4830  001420  86F0               	bsf	intcon3,3,c	;volatile
  4831                           
  4832                           ; BSR set to: 0
  4833  001422  0012               	return		;funcret
  4834  001424                     __end_of_MiApp_ProtocolInit:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           intcon2	equ	0xFF1
  4844                           intcon3	equ	0xFF0
  4845                           postinc0	equ	0xFEE
  4846                           wreg	equ	0xFE8
  4847                           postdec1	equ	0xFE5
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           fsr2h	equ	0xFDA
  4852                           fsr2l	equ	0xFD9
  4853                           status	equ	0xFD8
  4854                           
  4855 ;; *************** function _NVMInit *****************
  4856 ;; Defined at:
  4857 ;;		line 707 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  result          1   14[BANK0 ] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      unsigned char 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : F/0
  4868 ;;		On exit  : F/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;Total ram usage:        1 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:   10
  4878 ;; This function calls:
  4879 ;;		_NVMalloc
  4880 ;; This function is called by:
  4881 ;;		_MiApp_ProtocolInit
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text18
  4886  0024EA                     __ptext18:
  4887                           	opt stack 0
  4888  0024EA                     _NVMInit:
  4889                           	opt stack 18
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;miwi_nvm.c: 709: bool result = 1;
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;incstack = 0
  4896  0024EA  0E01               	movlw	1
  4897  0024EC  6F6E               	movwf	NVMInit@result& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;miwi_nvm.c: 711: nextEEPosition = 0;
  4901  0024EE  6BCE               	clrf	_nextEEPosition& (0+255),b
  4902  0024F0  6BCF               	clrf	(_nextEEPosition+1)& (0+255),b
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;miwi_nvm.c: 713: result &= NVMalloc(2, &nvmMyPANID);
  4906  0024F2  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  4907  0024F4  0E02               	movlw	2
  4908  0024F6  6F69               	movwf	NVMalloc@size& (0+255),b
  4909  0024F8  0EEC               	movlw	low _nvmMyPANID
  4910  0024FA  6F6B               	movwf	NVMalloc@location& (0+255),b
  4911  0024FC  ECA6  F014         	call	_NVMalloc	;wreg free
  4912  002500  176E               	andwf	NVMInit@result& (0+255),f,b
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;miwi_nvm.c: 714: result &= NVMalloc(1, &nvmCurrentChannel);
  4916  002502  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  4917  002504  0E01               	movlw	1
  4918  002506  6F69               	movwf	NVMalloc@size& (0+255),b
  4919  002508  0EE8               	movlw	low _nvmCurrentChannel
  4920  00250A  6F6B               	movwf	NVMalloc@location& (0+255),b
  4921  00250C  ECA6  F014         	call	_NVMalloc	;wreg free
  4922  002510  176E               	andwf	NVMInit@result& (0+255),f,b
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;miwi_nvm.c: 715: result &= NVMalloc(1, &nvmConnMode);
  4926  002512  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  4927  002514  0E01               	movlw	1
  4928  002516  6F69               	movwf	NVMalloc@size& (0+255),b
  4929  002518  0EE4               	movlw	low _nvmConnMode
  4930  00251A  6F6B               	movwf	NVMalloc@location& (0+255),b
  4931  00251C  ECA6  F014         	call	_NVMalloc	;wreg free
  4932  002520  176E               	andwf	NVMInit@result& (0+255),f,b
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;miwi_nvm.c: 716: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 30, &nvmConnectionTable)
      +                          ;
  4936  002522  0E01               	movlw	1
  4937  002524  6F6A               	movwf	(NVMalloc@size+1)& (0+255),b
  4938  002526  0E2C               	movlw	44
  4939  002528  6F69               	movwf	NVMalloc@size& (0+255),b
  4940  00252A  0EE6               	movlw	low _nvmConnectionTable
  4941  00252C  6F6B               	movwf	NVMalloc@location& (0+255),b
  4942  00252E  ECA6  F014         	call	_NVMalloc	;wreg free
  4943  002532  176E               	andwf	NVMInit@result& (0+255),f,b
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;miwi_nvm.c: 717: result &= NVMalloc(4, &nvmOutFrameCounter);
  4947  002534  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  4948  002536  0E04               	movlw	4
  4949  002538  6F69               	movwf	NVMalloc@size& (0+255),b
  4950  00253A  0EEE               	movlw	low _nvmOutFrameCounter
  4951  00253C  6F6B               	movwf	NVMalloc@location& (0+255),b
  4952  00253E  ECA6  F014         	call	_NVMalloc	;wreg free
  4953  002542  176E               	andwf	NVMInit@result& (0+255),f,b
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;miwi_nvm.c: 718: result &= NVMalloc(1,&nvmEdc);
  4957  002544  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  4958  002546  0E01               	movlw	1
  4959  002548  6F69               	movwf	NVMalloc@size& (0+255),b
  4960  00254A  0EEA               	movlw	low _nvmEdc
  4961  00254C  6F6B               	movwf	NVMalloc@location& (0+255),b
  4962  00254E  ECA6  F014         	call	_NVMalloc	;wreg free
  4963  002552  176E               	andwf	NVMInit@result& (0+255),f,b
  4964                           
  4965                           ; BSR set to: 0
  4966  002554  0012               	return		;funcret
  4967  002556                     __end_of_NVMInit:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           intcon2	equ	0xFF1
  4977                           intcon3	equ	0xFF0
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           postdec1	equ	0xFE5
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _NVMalloc *****************
  4989 ;; Defined at:
  4990 ;;		line 692 in file "../../../../../../framework/miwi/src/miwi_nvm.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  size            2    9[BANK0 ] unsigned int 
  4993 ;;  location        1   11[BANK0 ] PTR unsigned int 
  4994 ;;		 -> nvmEdc(2), nvmOutFrameCounter(2), nvmConnectionTable(2), nvmConnMode(2), 
  4995 ;;		 -> nvmCurrentChannel(2), nvmMyPANID(2), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      unsigned char 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : F/0
  5004 ;;		On exit  : F/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5007 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;Total ram usage:        5 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    9
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_NVMInit
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text19
  5022  00294C                     __ptext19:
  5023                           	opt stack 0
  5024  00294C                     _NVMalloc:
  5025                           	opt stack 18
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;miwi_nvm.c: 696: if ((nextEEPosition + size) > 32768)
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;incstack = 0
  5032  00294C  5169               	movf	NVMalloc@size& (0+255),w,b
  5033  00294E  25CE               	addwf	_nextEEPosition& (0+255),w,b
  5034  002950  6F6C               	movwf	??_NVMalloc& (0+255),b
  5035  002952  516A               	movf	(NVMalloc@size+1)& (0+255),w,b
  5036  002954  21CF               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  5037  002956  6F6D               	movwf	(??_NVMalloc+1)& (0+255),b
  5038  002958  056C               	decf	??_NVMalloc& (0+255),w,b
  5039  00295A  0E80               	movlw	128
  5040  00295C  596D               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  5041  00295E  E301               	bnc	l5562
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;miwi_nvm.c: 697: {
  5045                           ;miwi_nvm.c: 698: return 0;
  5046  002960  0C00               	retlw	0
  5047  002962                     l5562:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;miwi_nvm.c: 699: }
  5051                           ;miwi_nvm.c: 701: *location = nextEEPosition;
  5052  002962  516B               	movf	NVMalloc@location& (0+255),w,b
  5053  002964  6ED9               	movwf	fsr2l,c
  5054  002966  6ADA               	clrf	fsr2h,c
  5055  002968  C0CE  FFDE         	movff	_nextEEPosition,postinc2
  5056  00296C  C0CF  FFDD         	movff	_nextEEPosition+1,postdec2
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;miwi_nvm.c: 702: nextEEPosition += size;
  5060  002970  5169               	movf	NVMalloc@size& (0+255),w,b
  5061  002972  27CE               	addwf	_nextEEPosition& (0+255),f,b
  5062  002974  516A               	movf	(NVMalloc@size+1)& (0+255),w,b
  5063  002976  23CF               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  5064                           
  5065                           ; BSR set to: 0
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;miwi_nvm.c: 703: return 1;
  5069  002978  0C01               	retlw	1	;funcret
  5070  00297A                     __end_of_NVMalloc:
  5071                           	opt stack 0
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           intcon	equ	0xFF2
  5079                           intcon2	equ	0xFF1
  5080                           intcon3	equ	0xFF0
  5081                           postinc0	equ	0xFEE
  5082                           wreg	equ	0xFE8
  5083                           postdec1	equ	0xFE5
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           indf2	equ	0xFDF
  5087                           postinc2	equ	0xFDE
  5088                           postdec2	equ	0xFDD
  5089                           fsr2h	equ	0xFDA
  5090                           fsr2l	equ	0xFD9
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _MiMAC_Init *****************
  5094 ;; Defined at:
  5095 ;;		line 579 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  initValue       2   23[BANK0 ] struct .
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  i               1   25[BANK0 ] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      unsigned char 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : F/0
  5106 ;;		On exit  : F/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5113 ;;Total ram usage:        3 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:   12
  5116 ;; This function calls:
  5117 ;;		_DELAY_ms
  5118 ;;		_RegisterSet
  5119 ;;		_SetRFMode
  5120 ;; This function is called by:
  5121 ;;		_MiApp_ProtocolInit
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text20
  5126  001F62                     __ptext20:
  5127                           	opt stack 0
  5128  001F62                     _MiMAC_Init:
  5129                           	opt stack 16
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  5133                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;incstack = 0
  5137  001F62  C077  F0CC         	movff	MiMAC_Init@initValue,_MACInitParams
  5138  001F66  C078  F0CD         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  5142  001F6A  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  5143  001F6C  0E14               	movlw	20
  5144  001F6E  6F69               	movwf	DELAY_ms@ms& (0+255),b
  5145  001F70  EC3E  F00E         	call	_DELAY_ms	;wreg free
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;drv_mrf_miwi_89xa.c: 586: LATDbits.LATD1 = 1;
  5149  001F74  828C               	bsf	3980,1,c	;volatile
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;drv_mrf_miwi_89xa.c: 587: LATAbits.LATA5 = 1;
  5153  001F76  8A89               	bsf	3977,5,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  5157  001F78  CFD6 F0D3          	movff	4054,_MACSeq	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  5161  001F7C  69DA               	setf	_ReceivedBankIndex& (0+255),b
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  5165  001F7E  6B79               	clrf	MiMAC_Init@i& (0+255),b
  5166  001F80                     l9566:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;drv_mrf_miwi_89xa.c: 594: {
  5170                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  5171  001F80  5179               	movf	MiMAC_Init@i& (0+255),w,b
  5172  001F82  0D34               	mullw	52
  5173  001F84  0E50               	movlw	low _RxPacket
  5174  001F86  24F3               	addwf	prodl,w,c
  5175  001F88  6ED9               	movwf	fsr2l,c
  5176  001F8A  0E01               	movlw	high _RxPacket
  5177  001F8C  20F4               	addwfc	prodh,w,c
  5178  001F8E  6EDA               	movwf	fsr2h,c
  5179  001F90  6ADF               	clrf	indf2,c
  5180                           
  5181                           ; BSR set to: 0
  5182  001F92  2B79               	incf	MiMAC_Init@i& (0+255),f,b
  5183                           
  5184                           ; BSR set to: 0
  5185  001F94  0E01               	movlw	1
  5186  001F96  6579               	cpfsgt	MiMAC_Init@i& (0+255),b
  5187  001F98  D7F3               	goto	l9566
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;drv_mrf_miwi_89xa.c: 596: }
  5191                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  5192  001F9A  6B79               	clrf	MiMAC_Init@i& (0+255),b
  5193  001F9C                     l9576:
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;drv_mrf_miwi_89xa.c: 631: {
  5197                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  5198  001F9C  5179               	movf	MiMAC_Init@i& (0+255),w,b
  5199  001F9E  0D02               	mullw	2
  5200  001FA0  0E7F               	movlw	low _InitConfigRegs
  5201  001FA2  24F3               	addwf	prodl,w,c
  5202  001FA4  6EF6               	movwf	tblptrl,c
  5203  001FA6  0EFD               	movlw	high _InitConfigRegs
  5204  001FA8  20F4               	addwfc	prodh,w,c
  5205  001FAA  6EF7               	movwf	tblptrh,c
  5206  001FAC                     	if	0	;There are less than 3 active tblptr bytes
  5207  001FAC                     	endif
  5208  001FAC  0009               	tblrd		*+
  5209  001FAE  CFF5 F06A          	movff	tablat,RegisterSet@setting
  5210  001FB2  000A               	tblrd		*-
  5211  001FB4  CFF5 F06B          	movff	tablat,RegisterSet@setting+1
  5212  001FB8  EC66  F013         	call	_RegisterSet	;wreg free
  5213  001FBC  0100               	movlb	0	; () banked
  5214  001FBE  2B79               	incf	MiMAC_Init@i& (0+255),f,b
  5215                           
  5216                           ; BSR set to: 0
  5217  001FC0  0E1F               	movlw	31
  5218  001FC2  6579               	cpfsgt	MiMAC_Init@i& (0+255),b
  5219  001FC4  D7EB               	goto	l9576
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;drv_mrf_miwi_89xa.c: 633: }
  5223                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  5224  001FC6  0E20               	movlw	32
  5225  001FC8  ECC9  F011         	call	_SetRFMode
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  5229  001FCC  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  5230  001FCE  0E4E               	movlw	78
  5231  001FD0  6F6A               	movwf	RegisterSet@setting& (0+255),b
  5232  001FD2  EC66  F013         	call	_RegisterSet	;wreg free
  5233                           
  5234                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  5235  001FD6  0E40               	movlw	64
  5236  001FD8  ECC9  F011         	call	_SetRFMode
  5237                           
  5238                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  5239  001FDC  0E1C               	movlw	28
  5240  001FDE  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  5241  001FE0  0E0F               	movlw	15
  5242  001FE2  6F6A               	movwf	RegisterSet@setting& (0+255),b
  5243  001FE4  EC66  F013         	call	_RegisterSet	;wreg free
  5244                           
  5245                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  5246  001FE8  0E60               	movlw	96
  5247  001FEA  ECC9  F011         	call	_SetRFMode
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IF = 0;
  5251  001FEE  92F2               	bcf	intcon,1,c	;volatile
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;drv_mrf_miwi_89xa.c: 645: INTCONbits.INT0IE = 1;
  5255  001FF0  88F2               	bsf	intcon,4,c	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IF = 0;
  5259  001FF2  90F0               	bcf	intcon3,0,c	;volatile
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT1IE = 1;
  5263  001FF4  86F0               	bsf	intcon3,3,c	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266  001FF6  0012               	return		;funcret
  5267  001FF8                     __end_of_MiMAC_Init:
  5268                           	opt stack 0
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           intcon2	equ	0xFF1
  5277                           intcon3	equ	0xFF0
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           postdec1	equ	0xFE5
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           indf2	equ	0xFDF
  5284                           postinc2	equ	0xFDE
  5285                           postdec2	equ	0xFDD
  5286                           fsr2h	equ	0xFDA
  5287                           fsr2l	equ	0xFD9
  5288                           status	equ	0xFD8
  5289                           
  5290 ;; *************** function _InitSymbolTimer *****************
  5291 ;; Defined at:
  5292 ;;		line 59 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2
  5301 ;; Tracked objects:
  5302 ;;		On entry : F/0
  5303 ;;		On exit  : F/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    9
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_MiApp_ProtocolInit
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text21
  5322  002C42                     __ptext21:
  5323                           	opt stack 0
  5324  002C42                     _InitSymbolTimer:
  5325                           	opt stack 19
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;symbol.c: 62: T1CON = 0b00111000;
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;incstack = 0
  5332  002C42  0E38               	movlw	56
  5333  002C44  6ECD               	movwf	4045,c	;volatile
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
  5337  002C46  909E               	bcf	3998,0,c	;volatile
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
  5341  002C48  809D               	bsf	3997,0,c	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
  5345  002C4A  80CD               	bsf	4045,0,c	;volatile
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;symbol.c: 73: timerExtension1 = 0;
  5349  002C4C  6A46               	clrf	_timerExtension1,c	;volatile
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;symbol.c: 74: timerExtension2 = 0;
  5353  002C4E  6BE3               	clrf	_timerExtension2& (0+255),b	;volatile
  5354                           
  5355                           ; BSR set to: 0
  5356  002C50  0012               	return		;funcret
  5357  002C52                     __end_of_InitSymbolTimer:
  5358                           	opt stack 0
  5359                           tblptru	equ	0xFF8
  5360                           tblptrh	equ	0xFF7
  5361                           tblptrl	equ	0xFF6
  5362                           tablat	equ	0xFF5
  5363                           prodh	equ	0xFF4
  5364                           prodl	equ	0xFF3
  5365                           intcon	equ	0xFF2
  5366                           intcon2	equ	0xFF1
  5367                           intcon3	equ	0xFF0
  5368                           postinc0	equ	0xFEE
  5369                           wreg	equ	0xFE8
  5370                           postdec1	equ	0xFE5
  5371                           fsr1h	equ	0xFE2
  5372                           fsr1l	equ	0xFE1
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function _EEPROM_Read *****************
  5381 ;; Defined at:
  5382 ;;		line 57 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  dest            2   10[BANK0 ] PTR unsigned char 
  5385 ;;		 -> conn_size(1), myLongAddress(8), ConnMode(1), currentChannel(1), 
  5386 ;;		 -> ConnectionTable(300), 
  5387 ;;  addr            1   12[BANK0 ] unsigned char 
  5388 ;;  count           1   13[BANK0 ] unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : F/0
  5397 ;;		On exit  : F/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;Total ram usage:        4 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   11
  5407 ;; This function calls:
  5408 ;;		_SPIGet2
  5409 ;;		_SPIPut2
  5410 ;; This function is called by:
  5411 ;;		_MiApp_ProtocolInit
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text22
  5416  00291A                     __ptext22:
  5417                           	opt stack 0
  5418  00291A                     _EEPROM_Read:
  5419                           	opt stack 17
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;eeprom.c: 59: LATDbits.LATD5 = 0;
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;incstack = 0
  5426  00291A  9A8C               	bcf	3980,5,c	;volatile
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;eeprom.c: 60: SPIPut2(0x03);
  5430  00291C  0E03               	movlw	3
  5431  00291E  ECBA  F015         	call	_SPIPut2
  5432                           
  5433                           ;eeprom.c: 61: SPIPut2(addr);
  5434  002922  0100               	movlb	0	; () banked
  5435  002924  516C               	movf	EEPROM_Read@addr& (0+255),w,b
  5436  002926  ECBA  F015         	call	_SPIPut2
  5437                           
  5438                           ;eeprom.c: 62: while( count )
  5439  00292A  D00B               	goto	l9612
  5440  00292C                     l9606:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;eeprom.c: 63: {
  5444                           ;eeprom.c: 64: *dest++ = SPIGet2();
  5445  00292C  EC3A  F016         	call	_SPIGet2	;wreg free
  5446  002930  C06A  FFD9         	movff	EEPROM_Read@dest,fsr2l
  5447  002934  C06B  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  5448  002938  6EDF               	movwf	indf2,c
  5449  00293A  0100               	movlb	0	; () banked
  5450  00293C  4B6A               	infsnz	EEPROM_Read@dest& (0+255),f,b
  5451  00293E  2B6B               	incf	(EEPROM_Read@dest+1)& (0+255),f,b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;eeprom.c: 65: count--;
  5455  002940  076D               	decf	EEPROM_Read@count& (0+255),f,b
  5456  002942                     l9612:
  5457  002942  0100               	movlb	0	; () banked
  5458  002944  516D               	movf	EEPROM_Read@count& (0+255),w,b
  5459  002946  E1F2               	bnz	l9606
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;eeprom.c: 66: }
  5463                           ;eeprom.c: 67: LATDbits.LATD5 = 1;
  5464  002948  8A8C               	bsf	3980,5,c	;volatile
  5465                           
  5466                           ; BSR set to: 0
  5467  00294A  0012               	return		;funcret
  5468  00294C                     __end_of_EEPROM_Read:
  5469                           	opt stack 0
  5470                           tblptru	equ	0xFF8
  5471                           tblptrh	equ	0xFF7
  5472                           tblptrl	equ	0xFF6
  5473                           tablat	equ	0xFF5
  5474                           prodh	equ	0xFF4
  5475                           prodl	equ	0xFF3
  5476                           intcon	equ	0xFF2
  5477                           intcon2	equ	0xFF1
  5478                           intcon3	equ	0xFF0
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _MiApp_EstablishConnection *****************
  5492 ;; Defined at:
  5493 ;;		line 2276 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  ActiveScanIn    1    wreg     unsigned char 
  5496 ;;  Mode            1   74[BANK0 ] unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  ActiveScanIn    1   11[BANK2 ] unsigned char 
  5499 ;;  i               1   12[BANK2 ] unsigned char 
  5500 ;;  t2              4    7[BANK2 ] struct _MIWI_TICK
  5501 ;;  t1              4    3[BANK2 ] struct _MIWI_TICK
  5502 ;;  connectionIn    1    2[BANK2 ] unsigned char 
  5503 ;;  retry           1    1[BANK2 ] unsigned char 
  5504 ;;  tmpConnectio    1    0[BANK2 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      unsigned char 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : F/0
  5511 ;;		On exit  : F/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5514 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5515 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5517 ;;      Totals:         0       5       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5518 ;;Total ram usage:       18 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:   17
  5521 ;; This function calls:
  5522 ;;		_MiApp_DiscardMessage
  5523 ;;		_MiApp_MessageAvailable
  5524 ;;		_MiApp_SetChannel
  5525 ;;		_MiWi_TickGet
  5526 ;;		_SendPacket
  5527 ;; This function is called by:
  5528 ;;		_Initialize_Demo
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text23
  5533  001424                     __ptext23:
  5534                           	opt stack 0
  5535  001424                     _MiApp_EstablishConnection:
  5536                           	opt stack 12
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;incstack = 0
  5540                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
  5541  001424  0102               	movlb	2	; () banked
  5542  001426  6F47               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
  5543                           
  5544                           ;miwi_p2p.c: 2278: uint8_t tmpConnectionMode = ConnMode;
  5545  001428  C0F4  F23C         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  5546                           
  5547                           ;miwi_p2p.c: 2279: uint8_t retry = 3;
  5548  00142C  0E03               	movlw	3
  5549  00142E  6F3D               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  5550                           
  5551                           ; BSR set to: 2
  5552                           ;miwi_p2p.c: 2280: uint8_t connectionInterval = 0;
  5553  001430  6B3E               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  5554                           
  5555                           ; BSR set to: 2
  5556                           ;miwi_p2p.c: 2281: MIWI_TICK t1, t2;
  5557                           ;miwi_p2p.c: 2282: tick1 = MiWi_TickGet();
  5558  001432  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;miwi_p2p.c: 2283: if( Mode == 0x01 )
  5562  001436  05AA               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  5563  001438  E101               	bnz	l9826
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;miwi_p2p.c: 2284: {
  5567                           ;miwi_p2p.c: 2285: return 0xFF;
  5568  00143A  0CFF               	retlw	255
  5569  00143C                     l9826:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;miwi_p2p.c: 2286: }
  5573                           ;miwi_p2p.c: 2288: t1 = MiWi_TickGet();
  5574  00143C  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  5575  001440  C069  F23F         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  5576  001444  C06A  F240         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  5577  001448  C06B  F241         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  5578  00144C  C06C  F242         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;miwi_p2p.c: 2290: t1.Val -= (((uint32_t)(16000000)/32));
  5582  001450  0E20               	movlw	32
  5583  001452  0102               	movlb	2	; () banked
  5584  001454  5F3F               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  5585  001456  0EA1               	movlw	161
  5586  001458  5B40               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  5587  00145A  0E07               	movlw	7
  5588  00145C  5B41               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  5589  00145E  0E00               	movlw	0
  5590  001460  5B42               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  5591                           
  5592                           ; BSR set to: 2
  5593                           ;miwi_p2p.c: 2291: ConnMode = 0x00;
  5594  001462  0100               	movlb	0	; () banked
  5595  001464  6BF4               	clrf	_ConnMode& (0+255),b
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 1;
  5599  001466  89D6               	bsf	_P2PStatus& (0+255),4,b	;volatile
  5600                           
  5601                           ;miwi_p2p.c: 2293: while( P2PStatus.bits.SearchConnection )
  5602  001468  D098               	goto	l9890
  5603  00146A                     l9834:
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;miwi_p2p.c: 2294: {
  5607                           ;miwi_p2p.c: 2295: t2 = MiWi_TickGet();
  5608  00146A  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  5609  00146E  C069  F243         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  5610  001472  C06A  F244         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  5611  001476  C06B  F245         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  5612  00147A  C06C  F246         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;miwi_p2p.c: 2296: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
  5616  00147E  0102               	movlb	2	; () banked
  5617  001480  513F               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  5618  001482  5D43               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  5619  001484  0100               	movlb	0	; () banked
  5620  001486  6FAB               	movwf	??_MiApp_EstablishConnection& (0+255),b
  5621  001488  0102               	movlb	2	; () banked
  5622  00148A  5140               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  5623  00148C  5944               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  5624  00148E  0100               	movlb	0	; () banked
  5625  001490  6FAC               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  5626  001492  0102               	movlb	2	; () banked
  5627  001494  5141               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  5628  001496  5945               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  5629  001498  0100               	movlb	0	; () banked
  5630  00149A  6FAD               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  5631  00149C  0102               	movlb	2	; () banked
  5632  00149E  5142               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  5633  0014A0  5946               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  5634  0014A2  0100               	movlb	0	; () banked
  5635  0014A4  6FAE               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  5636  0014A6  51AE               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  5637  0014A8  E107               	bnz	u9760
  5638  0014AA  0E21               	movlw	33
  5639  0014AC  5DAB               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  5640  0014AE  0EA1               	movlw	161
  5641  0014B0  59AC               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  5642  0014B2  0E07               	movlw	7
  5643  0014B4  59AD               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  5644  0014B6  E36B               	bnc	l9886
  5645  0014B8                     u9760:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;miwi_p2p.c: 2297: {
  5649                           ;miwi_p2p.c: 2298: t1.Val = t2.Val;
  5650  0014B8  C243  F23F         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  5651  0014BC  C244  F240         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  5652  0014C0  C245  F241         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  5653  0014C4  C246  F242         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;miwi_p2p.c: 2300: if( connectionInterval-- > 0 )
  5657  0014C8  0102               	movlb	2	; () banked
  5658  0014CA  073E               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  5659  0014CC  293E               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  5660  0014CE  E165               	bnz	l9890
  5661                           
  5662                           ; BSR set to: 2
  5663                           ;miwi_p2p.c: 2303: }
  5664                           ;miwi_p2p.c: 2304: connectionInterval = 2-1;
  5665  0014D0  0E01               	movlw	1
  5666  0014D2  6F3E               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  5667                           
  5668                           ; BSR set to: 2
  5669                           ;miwi_p2p.c: 2305: if( retry-- == 0 )
  5670  0014D4  073D               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  5671  0014D6  293D               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  5672  0014D8  E103               	bnz	l496
  5673                           
  5674                           ; BSR set to: 2
  5675                           ;miwi_p2p.c: 2306: {
  5676                           ;miwi_p2p.c: 2308: P2PStatus.bits.SearchConnection = 0;
  5677  0014DA  0100               	movlb	0	; () banked
  5678  0014DC  99D6               	bcf	_P2PStatus& (0+255),4,b	;volatile
  5679  0014DE  0CFF               	retlw	255
  5680  0014E0                     l496:
  5681                           
  5682                           ; BSR set to: 2
  5683                           ;miwi_p2p.c: 2310: }
  5684                           ;miwi_p2p.c: 2311: {TxData = 0;};
  5685  0014E0  0100               	movlb	0	; () banked
  5686  0014E2  6BDC               	clrf	_TxData& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;miwi_p2p.c: 2312: TxBuffer[TxData++] = 0x81;
  5690  0014E4  0ED9               	movlw	low _TxBuffer
  5691  0014E6  25DC               	addwf	_TxData& (0+255),w,b
  5692  0014E8  6ED9               	movwf	fsr2l,c
  5693  0014EA  6ADA               	clrf	fsr2h,c
  5694  0014EC  0E01               	movlw	high _TxBuffer
  5695  0014EE  22DA               	addwfc	fsr2h,f,c
  5696  0014F0  0E81               	movlw	129
  5697  0014F2  6EDF               	movwf	indf2,c
  5698                           
  5699                           ; BSR set to: 0
  5700  0014F4  2BDC               	incf	_TxData& (0+255),f,b
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;miwi_p2p.c: 2313: TxBuffer[TxData++] = currentChannel;
  5704  0014F6  0ED9               	movlw	low _TxBuffer
  5705  0014F8  25DC               	addwf	_TxData& (0+255),w,b
  5706  0014FA  6ED9               	movwf	fsr2l,c
  5707  0014FC  6ADA               	clrf	fsr2h,c
  5708  0014FE  0E01               	movlw	high _TxBuffer
  5709  001500  22DA               	addwfc	fsr2h,f,c
  5710  001502  C0F1  FFDF         	movff	_currentChannel,indf2
  5711  001506  2BDC               	incf	_TxData& (0+255),f,b
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;miwi_p2p.c: 2314: TxBuffer[TxData++] = P2PCapacityInfo;
  5715  001508  0ED9               	movlw	low _TxBuffer
  5716  00150A  25DC               	addwf	_TxData& (0+255),w,b
  5717  00150C  6ED9               	movwf	fsr2l,c
  5718  00150E  6ADA               	clrf	fsr2h,c
  5719  001510  0E01               	movlw	high _TxBuffer
  5720  001512  22DA               	addwfc	fsr2h,f,c
  5721  001514  C0D5  FFDF         	movff	_P2PCapacityInfo,indf2
  5722                           
  5723                           ; BSR set to: 0
  5724  001518  2BDC               	incf	_TxData& (0+255),f,b
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;miwi_p2p.c: 2321: {
  5728                           ;miwi_p2p.c: 2322: uint8_t i;
  5729                           ;miwi_p2p.c: 2324: for(i = 0; i < 1; i++)
  5730  00151A  0102               	movlb	2	; () banked
  5731  00151C  6B48               	clrf	MiApp_EstablishConnection@i& (0+255),b
  5732  00151E                     l9870:
  5733                           
  5734                           ; BSR set to: 2
  5735                           ;miwi_p2p.c: 2325: {
  5736                           ;miwi_p2p.c: 2326: TxBuffer[TxData++] = AdditionalNodeID[i];
  5737  00151E  5148               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  5738  001520  0FF2               	addlw	low _AdditionalNodeID
  5739  001522  6ED9               	movwf	fsr2l,c
  5740  001524  6ADA               	clrf	fsr2h,c
  5741  001526  0ED9               	movlw	low _TxBuffer
  5742  001528  0100               	movlb	0	; () banked
  5743  00152A  25DC               	addwf	_TxData& (0+255),w,b
  5744  00152C  6EE1               	movwf	fsr1l,c
  5745  00152E  6AE2               	clrf	fsr1h,c
  5746  001530  0E01               	movlw	high _TxBuffer
  5747  001532  22E2               	addwfc	fsr1h,f,c
  5748  001534  CFDF FFE7          	movff	indf2,indf1
  5749                           
  5750                           ; BSR set to: 0
  5751  001538  2BDC               	incf	_TxData& (0+255),f,b
  5752                           
  5753                           ; BSR set to: 0
  5754  00153A  0102               	movlb	2	; () banked
  5755  00153C  2B48               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  5756                           
  5757                           ; BSR set to: 2
  5758  00153E  5148               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  5759  001540  E0EE               	bz	l9870
  5760                           
  5761                           ; BSR set to: 2
  5762                           ;miwi_p2p.c: 2327: }
  5763                           ;miwi_p2p.c: 2328: }
  5764                           ;miwi_p2p.c: 2347: if( ActiveScanIndex == 0xFF )
  5765  001542  2947               	incf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
  5766  001544  E109               	bnz	l9882
  5767                           
  5768                           ; BSR set to: 2
  5769                           ;miwi_p2p.c: 2348: {
  5770                           ;miwi_p2p.c: 2349: SendPacket(1, (0), 1, 0);
  5771  001546  0100               	movlb	0	; () banked
  5772  001548  6B96               	clrf	SendPacket@DestinationAddress& (0+255),b
  5773  00154A  6B97               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  5774  00154C  0E01               	movlw	1
  5775  00154E  6F98               	movwf	SendPacket@isCommand& (0+255),b
  5776  001550  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  5777  001552  EC62  F00F         	call	_SendPacket
  5778                           
  5779                           ;miwi_p2p.c: 2350: }
  5780  001556  D01B               	goto	l9886
  5781  001558                     l9882:
  5782                           
  5783                           ; BSR set to: 2
  5784                           ;miwi_p2p.c: 2351: else
  5785                           ;miwi_p2p.c: 2352: {
  5786                           ;miwi_p2p.c: 2353: MiApp_SetChannel( ActiveScanResults[ActiveScanIndex].Channel );
  5787  001558  5147               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
  5788  00155A  0D0F               	mullw	15
  5789  00155C  0E00               	movlw	low _ActiveScanResults
  5790  00155E  24F3               	addwf	prodl,w,c
  5791  001560  6ED9               	movwf	fsr2l,c
  5792  001562  0E02               	movlw	high _ActiveScanResults
  5793  001564  20F4               	addwfc	prodh,w,c
  5794  001566  6EDA               	movwf	fsr2h,c
  5795  001568  50DF               	movf	indf2,w,c
  5796  00156A  ECE9  F014         	call	_MiApp_SetChannel
  5797                           
  5798                           ;miwi_p2p.c: 2354: SendPacket(0, ActiveScanResults[ActiveScanIndex].Address, 1, 0);
  5799  00156E  0102               	movlb	2	; () banked
  5800  001570  5147               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
  5801  001572  0D0F               	mullw	15
  5802  001574  0E01               	movlw	low (_ActiveScanResults+1)
  5803  001576  24F3               	addwf	prodl,w,c
  5804  001578  0100               	movlb	0	; () banked
  5805  00157A  6F96               	movwf	SendPacket@DestinationAddress& (0+255),b
  5806  00157C  0E02               	movlw	high (_ActiveScanResults+1)
  5807  00157E  20F4               	addwfc	prodh,w,c
  5808  001580  6F97               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  5809  001582  0E01               	movlw	1
  5810  001584  6F98               	movwf	SendPacket@isCommand& (0+255),b
  5811  001586  0E00               	movlw	0
  5812  001588  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  5813  00158A  EC62  F00F         	call	_SendPacket
  5814  00158E                     l9886:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;miwi_p2p.c: 2355: }
  5818                           ;miwi_p2p.c: 2360: }
  5819                           ;miwi_p2p.c: 2362: if( MiApp_MessageAvailable())
  5820  00158E  EC30  F016         	call	_MiApp_MessageAvailable	;wreg free
  5821  001592  0900               	iorlw	0
  5822  001594  E002               	bz	l9890
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;miwi_p2p.c: 2363: {
  5826                           ;miwi_p2p.c: 2364: MiApp_DiscardMessage();
  5827  001596  EC4D  F016         	call	_MiApp_DiscardMessage	;wreg free
  5828  00159A                     l9890:
  5829  00159A  0100               	movlb	0	; () banked
  5830  00159C  B9D6               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  5831  00159E  D765               	goto	l9834
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;miwi_p2p.c: 2365: }
  5835                           ;miwi_p2p.c: 2367: }
  5836                           ;miwi_p2p.c: 2369: ConnMode = tmpConnectionMode;
  5837  0015A0  C23C  F0F4         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;miwi_p2p.c: 2374: return LatestConnection;
  5841  0015A4  51D2               	movf	_LatestConnection& (0+255),w,b
  5842                           
  5843                           ; BSR set to: 0
  5844  0015A6  0012               	return		;funcret
  5845  0015A8                     __end_of_MiApp_EstablishConnection:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           intcon	equ	0xFF2
  5854                           intcon2	equ	0xFF1
  5855                           intcon3	equ	0xFF0
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           indf1	equ	0xFE7
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           indf2	equ	0xFDF
  5863                           postinc2	equ	0xFDE
  5864                           postdec2	equ	0xFDD
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _MiApp_SetChannel *****************
  5870 ;; Defined at:
  5871 ;;		line 2392 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  channel         1    wreg     unsigned char 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  channel         1   18[BANK0 ] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      unsigned char 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : D/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:        1 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:   13
  5892 ;; This function calls:
  5893 ;;		_EEPROM_Write
  5894 ;;		_MiMAC_SetChannel
  5895 ;; This function is called by:
  5896 ;;		_MiApp_ProtocolInit
  5897 ;;		_MiApp_EstablishConnection
  5898 ;;		_Initialize_Demo
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text24
  5903  0029D2                     __ptext24:
  5904                           	opt stack 0
  5905  0029D2                     _MiApp_SetChannel:
  5906                           	opt stack 16
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;incstack = 0
  5910                           ;MiApp_SetChannel@channel stored from wreg
  5911  0029D2  0100               	movlb	0	; () banked
  5912  0029D4  6F72               	movwf	MiApp_SetChannel@channel& (0+255),b
  5913                           
  5914                           ;miwi_p2p.c: 2394: if( MiMAC_SetChannel(channel, 0) )
  5915  0029D6  6B6F               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  5916  0029D8  5172               	movf	MiApp_SetChannel@channel& (0+255),w,b
  5917  0029DA  ECFC  F00F         	call	_MiMAC_SetChannel
  5918  0029DE  0900               	iorlw	0
  5919  0029E0  E00C               	bz	l9624
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;miwi_p2p.c: 2395: {
  5923                           ;miwi_p2p.c: 2396: currentChannel = channel;
  5924  0029E2  C072  F0F1         	movff	MiApp_SetChannel@channel,_currentChannel
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;miwi_p2p.c: 2398: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  5928  0029E6  0EF1               	movlw	low _currentChannel
  5929  0029E8  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  5930  0029EA  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5931  0029EC  0E02               	movlw	2
  5932  0029EE  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  5933  0029F0  0E01               	movlw	1
  5934  0029F2  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  5935  0029F4  EC87  F010         	call	_EEPROM_Write	;wreg free
  5936                           
  5937                           ;miwi_p2p.c: 2400: return 1;
  5938  0029F8  0C01               	retlw	1
  5939  0029FA                     l9624:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;miwi_p2p.c: 2401: }
  5943                           ;miwi_p2p.c: 2402: return 0;
  5944  0029FA  0C00               	retlw	0	;funcret
  5945  0029FC                     __end_of_MiApp_SetChannel:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           intcon2	equ	0xFF1
  5955                           intcon3	equ	0xFF0
  5956                           postinc0	equ	0xFEE
  5957                           wreg	equ	0xFE8
  5958                           indf1	equ	0xFE7
  5959                           postdec1	equ	0xFE5
  5960                           fsr1h	equ	0xFE2
  5961                           fsr1l	equ	0xFE1
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           fsr2h	equ	0xFDA
  5966                           fsr2l	equ	0xFD9
  5967                           status	equ	0xFD8
  5968                           
  5969 ;; *************** function _MiMAC_SetChannel *****************
  5970 ;; Defined at:
  5971 ;;		line 484 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  channel         1    wreg     unsigned char 
  5974 ;;  offsetFreq      1   15[BANK0 ] unsigned char 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  channel         1   17[BANK0 ] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      unsigned char 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : F/0
  5983 ;;		On exit  : F/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5986 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;Total ram usage:        3 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   12
  5993 ;; This function calls:
  5994 ;;		_RegisterSet
  5995 ;;		_SetRFMode
  5996 ;; This function is called by:
  5997 ;;		_MiApp_SetChannel
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text25
  6002  001FF8                     __ptext25:
  6003                           	opt stack 0
  6004  001FF8                     _MiMAC_SetChannel:
  6005                           	opt stack 16
  6006                           
  6007                           ;incstack = 0
  6008                           ;MiMAC_SetChannel@channel stored from wreg
  6009  001FF8  6F71               	movwf	MiMAC_SetChannel@channel& (0+255),b
  6010                           
  6011                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  6012  001FFA  0E1F               	movlw	31
  6013  001FFC  0100               	movlb	0	; () banked
  6014  001FFE  6571               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  6015  002000  D001               	goto	l9510
  6016  002002  0C00               	retlw	0
  6017  002004                     l9510:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;drv_mrf_miwi_89xa.c: 489: }
  6021                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  6022  002004  0E0C               	movlw	12
  6023  002006  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  6024  002008  0E64               	movlw	100
  6025  00200A  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6026  00200C  EC66  F013         	call	_RegisterSet	;wreg free
  6027                           
  6028                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  6029  002010  0EBF               	movlw	low _PVALUE
  6030  002012  0100               	movlb	0	; () banked
  6031  002014  2571               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6032  002016  6EF6               	movwf	tblptrl,c
  6033  002018  6AF7               	clrf	tblptrh,c
  6034  00201A  0EFD               	movlw	high _PVALUE
  6035  00201C  22F7               	addwfc	tblptrh,f,c
  6036  00201E                     	if	0	;There are less than 3 active tblptr bytes
  6037  00201E                     	endif
  6038  00201E  0008               	tblrd		*
  6039  002020  CFF5 F070          	movff	tablat,??_MiMAC_SetChannel
  6040  002024  0E00               	movlw	0
  6041  002026  1170               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6042  002028  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6043  00202A  0E0E               	movlw	14
  6044  00202C  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  6045  00202E  EC66  F013         	call	_RegisterSet	;wreg free
  6046                           
  6047                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  6048  002032  0EDF               	movlw	low _SVALUE
  6049  002034  0100               	movlb	0	; () banked
  6050  002036  2571               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6051  002038  6EF6               	movwf	tblptrl,c
  6052  00203A  6AF7               	clrf	tblptrh,c
  6053  00203C  0EFD               	movlw	high _SVALUE
  6054  00203E  22F7               	addwfc	tblptrh,f,c
  6055  002040                     	if	0	;There are less than 3 active tblptr bytes
  6056  002040                     	endif
  6057  002040  0008               	tblrd		*
  6058  002042  CFF5 F070          	movff	tablat,??_MiMAC_SetChannel
  6059  002046  0E00               	movlw	0
  6060  002048  1170               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6061  00204A  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6062  00204C  0E10               	movlw	16
  6063  00204E  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  6064  002050  EC66  F013         	call	_RegisterSet	;wreg free
  6065                           
  6066                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  6067  002054  0E20               	movlw	32
  6068  002056  ECC9  F011         	call	_SetRFMode
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  6072  00205A  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  6073  00205C  0E4E               	movlw	78
  6074  00205E  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6075  002060  EC66  F013         	call	_RegisterSet	;wreg free
  6076                           
  6077                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  6078  002064  0E40               	movlw	64
  6079  002066  ECC9  F011         	call	_SetRFMode
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6083  00206A  0E1C               	movlw	28
  6084  00206C  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  6085  00206E  0E0F               	movlw	15
  6086  002070  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6087  002072  EC66  F013         	call	_RegisterSet	;wreg free
  6088                           
  6089                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  6090  002076  0E20               	movlw	32
  6091  002078  ECC9  F011         	call	_SetRFMode
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  6095  00207C  0E60               	movlw	96
  6096  00207E  ECC9  F011         	call	_SetRFMode
  6097                           
  6098                           ; BSR set to: 0
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  6102  002082  0C01               	retlw	1	;funcret
  6103  002084                     __end_of_MiMAC_SetChannel:
  6104                           	opt stack 0
  6105                           tblptru	equ	0xFF8
  6106                           tblptrh	equ	0xFF7
  6107                           tblptrl	equ	0xFF6
  6108                           tablat	equ	0xFF5
  6109                           prodh	equ	0xFF4
  6110                           prodl	equ	0xFF3
  6111                           intcon	equ	0xFF2
  6112                           intcon2	equ	0xFF1
  6113                           intcon3	equ	0xFF0
  6114                           postinc0	equ	0xFEE
  6115                           wreg	equ	0xFE8
  6116                           indf1	equ	0xFE7
  6117                           postdec1	equ	0xFE5
  6118                           fsr1h	equ	0xFE2
  6119                           fsr1l	equ	0xFE1
  6120                           indf2	equ	0xFDF
  6121                           postinc2	equ	0xFDE
  6122                           postdec2	equ	0xFDD
  6123                           fsr2h	equ	0xFDA
  6124                           fsr2l	equ	0xFD9
  6125                           status	equ	0xFD8
  6126                           
  6127 ;; *************** function _MiApp_MessageAvailable *****************
  6128 ;; Defined at:
  6129 ;;		line 2406 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      unsigned char 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : F/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:   16
  6150 ;; This function calls:
  6151 ;;		_P2PTasks
  6152 ;; This function is called by:
  6153 ;;		_MiApp_EstablishConnection
  6154 ;;		_Process_RxMessage
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text26
  6159  002C60                     __ptext26:
  6160                           	opt stack 0
  6161  002C60                     _MiApp_MessageAvailable:
  6162                           	opt stack 11
  6163                           
  6164                           ;miwi_p2p.c: 2408: P2PTasks();
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;incstack = 0
  6168  002C60  ECB9  F003         	call	_P2PTasks	;wreg free
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;miwi_p2p.c: 2410: return P2PStatus.bits.RxHasUserData;
  6172  002C64  B7D6               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6173  002C66  0C01               	retlw	1
  6174                           
  6175                           ; BSR set to: 0
  6176  002C68  0C00               	retlw	0	;funcret
  6177  002C6A                     __end_of_MiApp_MessageAvailable:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           intcon2	equ	0xFF1
  6187                           intcon3	equ	0xFF0
  6188                           postinc0	equ	0xFEE
  6189                           wreg	equ	0xFE8
  6190                           indf1	equ	0xFE7
  6191                           postdec1	equ	0xFE5
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           postdec2	equ	0xFDD
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _P2PTasks *****************
  6202 ;; Defined at:
  6203 ;;		line 350 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  status          1   72[BANK0 ] unsigned char 
  6208 ;;  FW_Stat         1    0        unsigned char 
  6209 ;;  tmpTick         4   68[BANK0 ] struct _MIWI_TICK
  6210 ;;  tick3           4    0        struct _MIWI_TICK
  6211 ;;  tick2           4    0        struct _MIWI_TICK
  6212 ;;  i               1   73[BANK0 ] unsigned char 
  6213 ;;  broadcast_st    1    0        unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : F/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;Total ram usage:       10 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:   15
  6230 ;; This function calls:
  6231 ;;		_AddConnection
  6232 ;;		_EEPROM_Write
  6233 ;;		_MiMAC_DiscardPacket
  6234 ;;		_MiMAC_ReceivedPacket
  6235 ;;		_MiWi_TickGet
  6236 ;;		_SendPacket
  6237 ;;		_isSameAddress
  6238 ;; This function is called by:
  6239 ;;		_MiApp_MessageAvailable
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text27
  6244  000772                     __ptext27:
  6245                           	opt stack 0
  6246  000772                     _P2PTasks:
  6247                           	opt stack 11
  6248                           
  6249                           ;miwi_p2p.c: 352: uint8_t i;
  6250                           ;miwi_p2p.c: 353: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6251                           ;miwi_p2p.c: 354: bool broadcast_status;
  6252                           ;miwi_p2p.c: 427: if( P2PStatus.bits.SaveConnection )
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;incstack = 0
  6256  000772  0100               	movlb	0	; () banked
  6257  000774  A3D6               	btfss	_P2PStatus& (0+255),1,b	;volatile
  6258  000776  D02A               	goto	l9214
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;miwi_p2p.c: 428: {
  6262                           ;miwi_p2p.c: 429: tmpTick = MiWi_TickGet();
  6263  000778  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  6264  00077C  C069  F0A4         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6265  000780  C06A  F0A5         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6266  000784  C06B  F0A6         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6267  000788  C06C  F0A7         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;miwi_p2p.c: 430: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(16000000)/32)) )
  6271  00078C  51C8               	movf	_nvmDelayTick& (0+255),w,b
  6272  00078E  5DA4               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6273  000790  6FA0               	movwf	??_P2PTasks& (0+255),b
  6274  000792  51C9               	movf	(_nvmDelayTick+1)& (0+255),w,b
  6275  000794  59A5               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6276  000796  6FA1               	movwf	(??_P2PTasks+1)& (0+255),b
  6277  000798  51CA               	movf	(_nvmDelayTick+2)& (0+255),w,b
  6278  00079A  59A6               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6279  00079C  6FA2               	movwf	(??_P2PTasks+2)& (0+255),b
  6280  00079E  51CB               	movf	(_nvmDelayTick+3)& (0+255),w,b
  6281  0007A0  59A7               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6282  0007A2  6FA3               	movwf	(??_P2PTasks+3)& (0+255),b
  6283  0007A4  51A3               	movf	(??_P2PTasks+3)& (0+255),w,b
  6284  0007A6  E107               	bnz	u9120
  6285  0007A8  0E21               	movlw	33
  6286  0007AA  5DA0               	subwf	??_P2PTasks& (0+255),w,b
  6287  0007AC  0EA1               	movlw	161
  6288  0007AE  59A1               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6289  0007B0  0E07               	movlw	7
  6290  0007B2  59A2               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6291  0007B4  E30B               	bnc	l9214
  6292  0007B6                     u9120:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;miwi_p2p.c: 431: {
  6296                           ;miwi_p2p.c: 432: P2PStatus.bits.SaveConnection = 0;
  6297  0007B6  93D6               	bcf	_P2PStatus& (0+255),1,b	;volatile
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;miwi_p2p.c: 433: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)30 * sizeof(CO
      +                          NNECTION_ENTRY));
  6301  0007B8  0E49               	movlw	low _ConnectionTable
  6302  0007BA  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  6303  0007BC  0E02               	movlw	high _ConnectionTable
  6304  0007BE  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  6305  0007C0  0E04               	movlw	4
  6306  0007C2  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  6307  0007C4  0E2C               	movlw	44
  6308  0007C6  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  6309  0007C8  EC87  F010         	call	_EEPROM_Write	;wreg free
  6310  0007CC                     l9214:
  6311                           
  6312                           ;miwi_p2p.c: 435: }
  6313                           ;miwi_p2p.c: 436: }
  6314                           ;miwi_p2p.c: 453: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  6315  0007CC  0100               	movlb	0	; () banked
  6316  0007CE  B7D6               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6317  0007D0  0012               	return	
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;miwi_p2p.c: 454: {
  6321                           ;miwi_p2p.c: 455: bool FW_Stat = 0;
  6322  0007D2  ECD4  F00A         	call	_MiMAC_ReceivedPacket	;wreg free
  6323  0007D6  0900               	iorlw	0
  6324  0007D8  B4D8               	btfsc	status,2,c
  6325  0007DA  0012               	return	
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;miwi_p2p.c: 456: rxMessage.flags.Val = 0;
  6329  0007DC  6BB2               	clrf	_rxMessage& (0+255),b
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;miwi_p2p.c: 459: temp_bit = MACRxPacket.flags.bits.broadcast;
  6333  0007DE  0E00               	movlw	0
  6334  0007E0  B5BC               	btfsc	_MACRxPacket& (0+255),2,b
  6335  0007E2  0E01               	movlw	1
  6336  0007E4  6FE2               	movwf	_temp_bit& (0+255),b
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;miwi_p2p.c: 460: rxMessage.flags.bits.broadcast = temp_bit;
  6340  0007E6  19B2               	xorwf	_rxMessage& (0+255),w,b
  6341  0007E8  0BFC               	andlw	-4
  6342  0007EA  19E2               	xorwf	_temp_bit& (0+255),w,b
  6343  0007EC  6FB2               	movwf	_rxMessage& (0+255),b
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  6347  0007EE  A7BC               	btfss	_MACRxPacket& (0+255),3,b
  6348  0007F0  D002               	bra	u9155
  6349  0007F2  87B2               	bsf	_rxMessage& (0+255),3,b
  6350  0007F4  D002               	bra	u9157
  6351  0007F6                     u9155:
  6352  0007F6  0100               	movlb	0	; () banked
  6353  0007F8  97B2               	bcf	_rxMessage& (0+255),3,b
  6354  0007FA                     u9157:
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  6358  0007FA  51BC               	movf	_MACRxPacket& (0+255),w,b
  6359  0007FC  0B03               	andlw	3
  6360  0007FE  06E8               	decf	wreg,f,c
  6361  000800  E103               	bnz	u9160
  6362  000802  6BA0               	clrf	??_P2PTasks& (0+255),b
  6363  000804  2BA0               	incf	??_P2PTasks& (0+255),f,b
  6364  000806  D002               	goto	u9178
  6365  000808                     u9160:
  6366  000808  0100               	movlb	0	; () banked
  6367  00080A  6BA0               	clrf	??_P2PTasks& (0+255),b
  6368  00080C                     u9178:
  6369  00080C  3BA0               	swapf	??_P2PTasks& (0+255),f,b
  6370  00080E  47A0               	rlncf	??_P2PTasks& (0+255),f,b
  6371  000810  51B2               	movf	_rxMessage& (0+255),w,b
  6372  000812  19A0               	xorwf	??_P2PTasks& (0+255),w,b
  6373  000814  0BDF               	andlw	-33
  6374  000816  19A0               	xorwf	??_P2PTasks& (0+255),w,b
  6375  000818  6FB2               	movwf	_rxMessage& (0+255),b
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  6379  00081A  AFBC               	btfss	_MACRxPacket& (0+255),7,b
  6380  00081C  D002               	bra	u9185
  6381  00081E  8DB2               	bsf	_rxMessage& (0+255),6,b
  6382  000820  D002               	bra	u9187
  6383  000822                     u9185:
  6384  000822  0100               	movlb	0	; () banked
  6385  000824  9DB2               	bcf	_rxMessage& (0+255),6,b
  6386  000826                     u9187:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  6390  000826  AFBC               	btfss	_MACRxPacket& (0+255),7,b
  6391  000828  D004               	goto	l9234
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;miwi_p2p.c: 466: {
  6395                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  6396  00082A  C0BD  F0B5         	movff	_MACRxPacket+1,_rxMessage+3
  6397  00082E  C0BE  F0B6         	movff	_MACRxPacket+2,_rxMessage+4
  6398  000832                     l9234:
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;miwi_p2p.c: 468: }
  6402                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  6403  000832  C0C1  F0B9         	movff	_MACRxPacket+5,_rxMessage+7
  6404                           
  6405                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  6406  000836  C0BF  F0B7         	movff	_MACRxPacket+3,_rxMessage+5
  6407  00083A  C0C0  F0B8         	movff	_MACRxPacket+4,_rxMessage+6
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  6411  00083E  C0C3  F0BB         	movff	_MACRxPacket+7,_rxMessage+9
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  6415  000842  C0C2  F0BA         	movff	_MACRxPacket+6,_rxMessage+8
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  6419  000846  ABB2               	btfss	_rxMessage& (0+255),5,b
  6420  000848  D238               	goto	l384
  6421  00084A  D221               	goto	l9466
  6422  00084C                     
  6423                           ; BSR set to: 0
  6424                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
  6425  00084C  EE20 F001          	lfsr	2,1
  6426  000850  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  6427  000852  26D9               	addwf	fsr2l,f,c
  6428  000854  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  6429  000856  22DA               	addwfc	fsr2h,f,c
  6430  000858  51F1               	movf	_currentChannel& (0+255),w,b
  6431  00085A  18DE               	xorwf	postinc2,w,c
  6432  00085C  E003               	bz	l9248
  6433  00085E                     l9246:
  6434                           
  6435                           ;miwi_p2p.c: 514: {
  6436                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
  6437  00085E  EC72  F015         	call	_MiMAC_DiscardPacket	;wreg free
  6438                           
  6439                           ;miwi_p2p.c: 516: break;
  6440  000862  D22C               	goto	l9468
  6441  000864                     l9248:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;miwi_p2p.c: 517: }
  6445                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
  6446  000864  0E03               	movlw	3
  6447  000866  19F4               	xorwf	_ConnMode& (0+255),w,b
  6448  000868  E0FA               	bz	l9246
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;miwi_p2p.c: 525: }
  6452                           ;miwi_p2p.c: 537: {
  6453                           ;miwi_p2p.c: 540: status = AddConnection();
  6454  00086A  EC95  F00B         	call	_AddConnection	;wreg free
  6455  00086E  6FA8               	movwf	P2PTasks@status& (0+255),b
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;miwi_p2p.c: 541: }
  6459                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  6460  000870  05F4               	decf	_ConnMode& (0+255),w,b
  6461  000872  E107               	bnz	l9268
  6462                           
  6463                           ; BSR set to: 0
  6464  000874  05A8               	decf	P2PTasks@status& (0+255),w,b
  6465  000876  E005               	bz	l9268
  6466                           
  6467                           ; BSR set to: 0
  6468  000878  0E02               	movlw	2
  6469  00087A  19A8               	xorwf	P2PTasks@status& (0+255),w,b
  6470  00087C  E002               	bz	l9268
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;miwi_p2p.c: 559: {
  6474                           ;miwi_p2p.c: 560: status = 0xF3;
  6475  00087E  0EF3               	movlw	243
  6476  000880  6FA8               	movwf	P2PTasks@status& (0+255),b
  6477  000882                     l9268:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;miwi_p2p.c: 568: }
  6481                           ;miwi_p2p.c: 572: {TxData = 0;};
  6482  000882  6BDC               	clrf	_TxData& (0+255),b
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
  6486  000884  0ED9               	movlw	low _TxBuffer
  6487  000886  25DC               	addwf	_TxData& (0+255),w,b
  6488  000888  6ED9               	movwf	fsr2l,c
  6489  00088A  6ADA               	clrf	fsr2h,c
  6490  00088C  0E01               	movlw	high _TxBuffer
  6491  00088E  22DA               	addwfc	fsr2h,f,c
  6492  000890  0E91               	movlw	145
  6493  000892  6EDF               	movwf	indf2,c
  6494                           
  6495                           ; BSR set to: 0
  6496  000894  2BDC               	incf	_TxData& (0+255),f,b
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
  6500  000896  0ED9               	movlw	low _TxBuffer
  6501  000898  25DC               	addwf	_TxData& (0+255),w,b
  6502  00089A  6ED9               	movwf	fsr2l,c
  6503  00089C  6ADA               	clrf	fsr2h,c
  6504  00089E  0E01               	movlw	high _TxBuffer
  6505  0008A0  22DA               	addwfc	fsr2h,f,c
  6506  0008A2  C0A8  FFDF         	movff	P2PTasks@status,indf2
  6507                           
  6508                           ; BSR set to: 0
  6509  0008A6  2BDC               	incf	_TxData& (0+255),f,b
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
  6513  0008A8  0ED9               	movlw	low _TxBuffer
  6514  0008AA  25DC               	addwf	_TxData& (0+255),w,b
  6515  0008AC  6ED9               	movwf	fsr2l,c
  6516  0008AE  6ADA               	clrf	fsr2h,c
  6517  0008B0  0E01               	movlw	high _TxBuffer
  6518  0008B2  22DA               	addwfc	fsr2h,f,c
  6519  0008B4  C0D4  FFDF         	movff	_MyindexinPC,indf2
  6520                           
  6521                           ; BSR set to: 0
  6522  0008B8  2BDC               	incf	_TxData& (0+255),f,b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;miwi_p2p.c: 576: if( status == 0x00 ||
  6526                           ;miwi_p2p.c: 577: status == 0x01 )
  6527  0008BA  51A8               	movf	P2PTasks@status& (0+255),w,b
  6528  0008BC  E002               	bz	l9286
  6529                           
  6530                           ; BSR set to: 0
  6531  0008BE  05A8               	decf	P2PTasks@status& (0+255),w,b
  6532  0008C0  E11A               	bnz	l9304
  6533  0008C2                     l9286:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;miwi_p2p.c: 578: {
  6537                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
  6538  0008C2  0ED9               	movlw	low _TxBuffer
  6539  0008C4  25DC               	addwf	_TxData& (0+255),w,b
  6540  0008C6  6ED9               	movwf	fsr2l,c
  6541  0008C8  6ADA               	clrf	fsr2h,c
  6542  0008CA  0E01               	movlw	high _TxBuffer
  6543  0008CC  22DA               	addwfc	fsr2h,f,c
  6544  0008CE  C0D5  FFDF         	movff	_P2PCapacityInfo,indf2
  6545                           
  6546                           ; BSR set to: 0
  6547  0008D2  2BDC               	incf	_TxData& (0+255),f,b
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
  6551  0008D4  6BA9               	clrf	P2PTasks@i& (0+255),b
  6552  0008D6                     l9296:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;miwi_p2p.c: 582: {
  6556                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
  6557  0008D6  51A9               	movf	P2PTasks@i& (0+255),w,b
  6558  0008D8  0FF2               	addlw	low _AdditionalNodeID
  6559  0008DA  6ED9               	movwf	fsr2l,c
  6560  0008DC  6ADA               	clrf	fsr2h,c
  6561  0008DE  0ED9               	movlw	low _TxBuffer
  6562  0008E0  25DC               	addwf	_TxData& (0+255),w,b
  6563  0008E2  6EE1               	movwf	fsr1l,c
  6564  0008E4  6AE2               	clrf	fsr1h,c
  6565  0008E6  0E01               	movlw	high _TxBuffer
  6566  0008E8  22E2               	addwfc	fsr1h,f,c
  6567  0008EA  CFDF FFE7          	movff	indf2,indf1
  6568                           
  6569                           ; BSR set to: 0
  6570  0008EE  2BDC               	incf	_TxData& (0+255),f,b
  6571                           
  6572                           ; BSR set to: 0
  6573  0008F0  2BA9               	incf	P2PTasks@i& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576  0008F2  51A9               	movf	P2PTasks@i& (0+255),w,b
  6577  0008F4  E0F0               	bz	l9296
  6578  0008F6                     l9304:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;miwi_p2p.c: 584: }
  6582                           ;miwi_p2p.c: 586: }
  6583                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
  6584  0008F6  EC72  F015         	call	_MiMAC_DiscardPacket	;wreg free
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;miwi_p2p.c: 602: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  6588  0008FA  C0B5  F096         	movff	_rxMessage+3,SendPacket@DestinationAddress
  6589  0008FE  C0B6  F097         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  6590  000902  0E01               	movlw	1
  6591  000904  6F98               	movwf	SendPacket@isCommand& (0+255),b
  6592  000906  0E00               	movlw	0
  6593  000908  B7B2               	btfsc	_rxMessage& (0+255),3,b
  6594  00090A  0E01               	movlw	1
  6595  00090C  6F99               	movwf	SendPacket@SecurityEnabled& (0+255),b
  6596  00090E  0E00               	movlw	0
  6597  000910  EC62  F00F         	call	_SendPacket
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;miwi_p2p.c: 610: if( status == 0x00 )
  6601  000914  51A8               	movf	P2PTasks@status& (0+255),w,b
  6602  000916  E1A3               	bnz	l9246
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;miwi_p2p.c: 611: {
  6606                           ;miwi_p2p.c: 612: EEPROM_Write((uint8_t *)&(ConnectionTable[LatestConnection]), 0x04+((u
      +                          int16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  6607  000918  51D2               	movf	_LatestConnection& (0+255),w,b
  6608  00091A  0D0A               	mullw	10
  6609  00091C  0E49               	movlw	low _ConnectionTable
  6610  00091E  24F3               	addwf	prodl,w,c
  6611  000920  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  6612  000922  0E02               	movlw	high _ConnectionTable
  6613  000924  20F4               	addwfc	prodh,w,c
  6614  000926  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  6615  000928  51D2               	movf	_LatestConnection& (0+255),w,b
  6616  00092A  0D0A               	mullw	10
  6617  00092C  50F3               	movf	prodl,w,c
  6618  00092E  0F04               	addlw	4
  6619  000930  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  6620  000932  0E0A               	movlw	10
  6621  000934  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  6622  000936  EC87  F010         	call	_EEPROM_Write	;wreg free
  6623                           
  6624                           ;miwi_p2p.c: 613: }
  6625  00093A  D1C0               	goto	l9468
  6626  00093C                     l9314:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;miwi_p2p.c: 631: {
  6630                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  6631  00093C  0E02               	movlw	2
  6632  00093E  65F4               	cpfsgt	_ConnMode& (0+255),b
  6633  000940  D001               	goto	l9318
  6634  000942  D78D               	goto	l9246
  6635  000944                     l9318:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;miwi_p2p.c: 636: }
  6639                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  6640  000944  EE20 F001          	lfsr	2,1
  6641  000948  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  6642  00094A  26D9               	addwf	fsr2l,f,c
  6643  00094C  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  6644  00094E  22DA               	addwfc	fsr2h,f,c
  6645  000950  51F1               	movf	_currentChannel& (0+255),w,b
  6646  000952  18DE               	xorwf	postinc2,w,c
  6647  000954  E184               	bnz	l9246
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;miwi_p2p.c: 641: }
  6651                           ;miwi_p2p.c: 643: {TxData = 0;};
  6652  000956  6BDC               	clrf	_TxData& (0+255),b
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  6656  000958  0ED9               	movlw	low _TxBuffer
  6657  00095A  25DC               	addwf	_TxData& (0+255),w,b
  6658  00095C  6ED9               	movwf	fsr2l,c
  6659  00095E  6ADA               	clrf	fsr2h,c
  6660  000960  0E01               	movlw	high _TxBuffer
  6661  000962  22DA               	addwfc	fsr2h,f,c
  6662  000964  0E97               	movlw	151
  6663  000966  6EDF               	movwf	indf2,c
  6664                           
  6665                           ; BSR set to: 0
  6666  000968  2BDC               	incf	_TxData& (0+255),f,b
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  6670  00096A  0ED9               	movlw	low _TxBuffer
  6671  00096C  25DC               	addwf	_TxData& (0+255),w,b
  6672  00096E  6ED9               	movwf	fsr2l,c
  6673  000970  6ADA               	clrf	fsr2h,c
  6674  000972  0E01               	movlw	high _TxBuffer
  6675  000974  22DA               	addwfc	fsr2h,f,c
  6676  000976  C0D5  FFDF         	movff	_P2PCapacityInfo,indf2
  6677  00097A  2BDC               	incf	_TxData& (0+255),f,b
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  6681  00097C  6BA9               	clrf	P2PTasks@i& (0+255),b
  6682  00097E                     l9334:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;miwi_p2p.c: 648: {
  6686                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  6687  00097E  51A9               	movf	P2PTasks@i& (0+255),w,b
  6688  000980  0FF2               	addlw	low _AdditionalNodeID
  6689  000982  6ED9               	movwf	fsr2l,c
  6690  000984  6ADA               	clrf	fsr2h,c
  6691  000986  0ED9               	movlw	low _TxBuffer
  6692  000988  25DC               	addwf	_TxData& (0+255),w,b
  6693  00098A  6EE1               	movwf	fsr1l,c
  6694  00098C  6AE2               	clrf	fsr1h,c
  6695  00098E  0E01               	movlw	high _TxBuffer
  6696  000990  22E2               	addwfc	fsr1h,f,c
  6697  000992  CFDF FFE7          	movff	indf2,indf1
  6698                           
  6699                           ; BSR set to: 0
  6700  000996  2BDC               	incf	_TxData& (0+255),f,b
  6701                           
  6702                           ; BSR set to: 0
  6703  000998  2BA9               	incf	P2PTasks@i& (0+255),f,b
  6704                           
  6705                           ; BSR set to: 0
  6706  00099A  51A9               	movf	P2PTasks@i& (0+255),w,b
  6707  00099C  E0F0               	bz	l9334
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;miwi_p2p.c: 650: }
  6711                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  6712  00099E  EC72  F015         	call	_MiMAC_DiscardPacket	;wreg free
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;miwi_p2p.c: 665: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  6716  0009A2  C0B5  F096         	movff	_rxMessage+3,SendPacket@DestinationAddress
  6717  0009A6  C0B6  F097         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  6718  0009AA  0E01               	movlw	1
  6719  0009AC  6F98               	movwf	SendPacket@isCommand& (0+255),b
  6720  0009AE  0E00               	movlw	0
  6721  0009B0  B7B2               	btfsc	_rxMessage& (0+255),3,b
  6722  0009B2  0E01               	movlw	1
  6723  0009B4  6F99               	movwf	SendPacket@SecurityEnabled& (0+255),b
  6724  0009B6  0E00               	movlw	0
  6725  0009B8  EC62  F00F         	call	_SendPacket
  6726                           
  6727                           ;miwi_p2p.c: 668: }
  6728                           ;miwi_p2p.c: 669: break;
  6729  0009BC  D17F               	goto	l9468
  6730  0009BE                     l406:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;miwi_p2p.c: 677: {
  6734                           ;miwi_p2p.c: 678: {TxData = 0;};
  6735  0009BE  6BDC               	clrf	_TxData& (0+255),b
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  6739  0009C0  0ED9               	movlw	low _TxBuffer
  6740  0009C2  25DC               	addwf	_TxData& (0+255),w,b
  6741  0009C4  6ED9               	movwf	fsr2l,c
  6742  0009C6  6ADA               	clrf	fsr2h,c
  6743  0009C8  0E01               	movlw	high _TxBuffer
  6744  0009CA  22DA               	addwfc	fsr2h,f,c
  6745  0009CC  0E92               	movlw	146
  6746  0009CE  6EDF               	movwf	indf2,c
  6747                           
  6748                           ; BSR set to: 0
  6749  0009D0  2BDC               	incf	_TxData& (0+255),f,b
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;miwi_p2p.c: 681: for(i = 0; i < 30; i++)
  6753  0009D2  6BA9               	clrf	P2PTasks@i& (0+255),b
  6754  0009D4                     l9356:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;miwi_p2p.c: 682: {
  6758                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  6759  0009D4  51A9               	movf	P2PTasks@i& (0+255),w,b
  6760  0009D6  0D0A               	mullw	10
  6761  0009D8  0E51               	movlw	low (_ConnectionTable+8)
  6762  0009DA  24F3               	addwf	prodl,w,c
  6763  0009DC  6ED9               	movwf	fsr2l,c
  6764  0009DE  0E02               	movlw	high (_ConnectionTable+8)
  6765  0009E0  20F4               	addwfc	prodh,w,c
  6766  0009E2  6EDA               	movwf	fsr2h,c
  6767  0009E4  AEDF               	btfss	indf2,7,c
  6768  0009E6  D034               	goto	l9368
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;miwi_p2p.c: 685: {
  6772                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  6773  0009E8  C0B5  F069         	movff	_rxMessage+3,isSameAddress@Address1
  6774  0009EC  C0B6  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
  6775  0009F0  51A9               	movf	P2PTasks@i& (0+255),w,b
  6776  0009F2  0D0A               	mullw	10
  6777  0009F4  0E49               	movlw	low _ConnectionTable
  6778  0009F6  24F3               	addwf	prodl,w,c
  6779  0009F8  6F6B               	movwf	isSameAddress@Address2& (0+255),b
  6780  0009FA  0E02               	movlw	high _ConnectionTable
  6781  0009FC  20F4               	addwfc	prodh,w,c
  6782  0009FE  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
  6783  000A00  ECD3  F014         	call	_isSameAddress	;wreg free
  6784  000A04  0900               	iorlw	0
  6785  000A06  E024               	bz	l9368
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;miwi_p2p.c: 688: {
  6789                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  6790  000A08  51A9               	movf	P2PTasks@i& (0+255),w,b
  6791  000A0A  0D0A               	mullw	10
  6792  000A0C  0E51               	movlw	low (_ConnectionTable+8)
  6793  000A0E  24F3               	addwf	prodl,w,c
  6794  000A10  6ED9               	movwf	fsr2l,c
  6795  000A12  0E02               	movlw	high (_ConnectionTable+8)
  6796  000A14  20F4               	addwfc	prodh,w,c
  6797  000A16  6EDA               	movwf	fsr2h,c
  6798  000A18  6ADF               	clrf	indf2,c
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;miwi_p2p.c: 693: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  6802  000A1A  51A9               	movf	P2PTasks@i& (0+255),w,b
  6803  000A1C  0D0A               	mullw	10
  6804  000A1E  0E49               	movlw	low _ConnectionTable
  6805  000A20  24F3               	addwf	prodl,w,c
  6806  000A22  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  6807  000A24  0E02               	movlw	high _ConnectionTable
  6808  000A26  20F4               	addwfc	prodh,w,c
  6809  000A28  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  6810  000A2A  51A9               	movf	P2PTasks@i& (0+255),w,b
  6811  000A2C  0D0A               	mullw	10
  6812  000A2E  50F3               	movf	prodl,w,c
  6813  000A30  0F04               	addlw	4
  6814  000A32  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  6815  000A34  0E0A               	movlw	10
  6816  000A36  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  6817  000A38  EC87  F010         	call	_EEPROM_Write	;wreg free
  6818                           
  6819                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  6820  000A3C  0ED9               	movlw	low _TxBuffer
  6821  000A3E  0100               	movlb	0	; () banked
  6822  000A40  25DC               	addwf	_TxData& (0+255),w,b
  6823  000A42  6ED9               	movwf	fsr2l,c
  6824  000A44  6ADA               	clrf	fsr2h,c
  6825  000A46  0E01               	movlw	high _TxBuffer
  6826  000A48  22DA               	addwfc	fsr2h,f,c
  6827  000A4A  6ADF               	clrf	indf2,c
  6828                           
  6829                           ; BSR set to: 0
  6830  000A4C  2BDC               	incf	_TxData& (0+255),f,b
  6831                           
  6832                           ;miwi_p2p.c: 697: break;
  6833  000A4E  D004               	goto	l9372
  6834  000A50                     l9368:
  6835                           
  6836                           ; BSR set to: 0
  6837  000A50  2BA9               	incf	P2PTasks@i& (0+255),f,b
  6838                           
  6839                           ; BSR set to: 0
  6840  000A52  0E1D               	movlw	29
  6841  000A54  65A9               	cpfsgt	P2PTasks@i& (0+255),b
  6842  000A56  D7BE               	goto	l9356
  6843  000A58                     l9372:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;miwi_p2p.c: 698: }
  6847                           ;miwi_p2p.c: 699: }
  6848                           ;miwi_p2p.c: 700: }
  6849                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  6850  000A58  EC72  F015         	call	_MiMAC_DiscardPacket	;wreg free
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;miwi_p2p.c: 704: if( i == 30 )
  6854  000A5C  0E1E               	movlw	30
  6855  000A5E  19A9               	xorwf	P2PTasks@i& (0+255),w,b
  6856  000A60  E109               	bnz	l9380
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;miwi_p2p.c: 705: {
  6860                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  6861  000A62  0ED9               	movlw	low _TxBuffer
  6862  000A64  25DC               	addwf	_TxData& (0+255),w,b
  6863  000A66  6ED9               	movwf	fsr2l,c
  6864  000A68  6ADA               	clrf	fsr2h,c
  6865  000A6A  0E01               	movlw	high _TxBuffer
  6866  000A6C  22DA               	addwfc	fsr2h,f,c
  6867  000A6E  0EF0               	movlw	240
  6868  000A70  6EDF               	movwf	indf2,c
  6869                           
  6870                           ; BSR set to: 0
  6871  000A72  2BDC               	incf	_TxData& (0+255),f,b
  6872  000A74                     l9380:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;miwi_p2p.c: 708: }
  6876                           ;miwi_p2p.c: 719: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  6877  000A74  C0B5  F096         	movff	_rxMessage+3,SendPacket@DestinationAddress
  6878  000A78  C0B6  F097         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  6879  000A7C  0E01               	movlw	1
  6880  000A7E  6F98               	movwf	SendPacket@isCommand& (0+255),b
  6881  000A80  0E00               	movlw	0
  6882  000A82  B7B2               	btfsc	_rxMessage& (0+255),3,b
  6883  000A84  0E01               	movlw	1
  6884  000A86  6F99               	movwf	SendPacket@SecurityEnabled& (0+255),b
  6885  000A88  0E00               	movlw	0
  6886  000A8A  EC62  F00F         	call	_SendPacket
  6887                           
  6888                           ;miwi_p2p.c: 723: }
  6889                           ;miwi_p2p.c: 724: break;
  6890  000A8E  D116               	goto	l9468
  6891  000A90                     l9382:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;miwi_p2p.c: 732: case 0x01:
  6895                           ;miwi_p2p.c: 746: AddConnection();
  6896  000A90  EC95  F00B         	call	_AddConnection	;wreg free
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  6900  000A94  83D6               	bsf	_P2PStatus& (0+255),1,b	;volatile
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  6904  000A96  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  6905  000A9A  C069  F0C8         	movff	?_MiWi_TickGet,_nvmDelayTick
  6906  000A9E  C06A  F0C9         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  6907  000AA2  C06B  F0CA         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  6908  000AA6  C06C  F0CB         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  6909                           
  6910                           ;miwi_p2p.c: 756: break;
  6911  000AAA  D6D9               	goto	l9246
  6912  000AAC                     l9390:
  6913                           
  6914                           ; BSR set to: 0
  6915  000AAC  EE20 F001          	lfsr	2,1
  6916  000AB0  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  6917  000AB2  26D9               	addwf	fsr2l,f,c
  6918  000AB4  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  6919  000AB6  22DA               	addwfc	fsr2h,f,c
  6920  000AB8  50DF               	movf	indf2,w,c
  6921                           
  6922                           ; Switch size 1, requested type "speed"
  6923                           ; Number of cases is 2, Range of values is 0 to 1
  6924                           ; switch strategies available:
  6925                           ; Name         Instructions Cycles
  6926                           ; simple_byte            7     4 (average)
  6927                           ;	Chosen strategy is simple_byte
  6928  000ABA  E0EA               	bz	l9382
  6929  000ABC  0A01               	xorlw	1	; case 1
  6930  000ABE  E0E8               	bz	l9382
  6931  000AC0  D6CE               	goto	l9246
  6932  000AC2                     l418:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;miwi_p2p.c: 766: {
  6936                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  6937  000AC2  ABD6               	btfss	_P2PStatus& (0+255),5,b	;volatile
  6938  000AC4  D002               	goto	l419
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;miwi_p2p.c: 768: {
  6942                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  6943  000AC6  9BD6               	bcf	_P2PStatus& (0+255),5,b	;volatile
  6944                           
  6945                           ;miwi_p2p.c: 770: }
  6946  000AC8  D6CA               	goto	l9246
  6947  000ACA                     l419:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;miwi_p2p.c: 772: else
  6951                           ;miwi_p2p.c: 773: {
  6952                           ;miwi_p2p.c: 774: i = 0;
  6953  000ACA  6BA9               	clrf	P2PTasks@i& (0+255),b
  6954                           
  6955                           ;miwi_p2p.c: 775: for(; i < ActiveScanResultIndex; i++)
  6956  000ACC  D01C               	goto	l9404
  6957  000ACE                     l9396:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;miwi_p2p.c: 776: {
  6961                           ;miwi_p2p.c: 777: if( (ActiveScanResults[i].Channel == currentChannel) &&
  6962                           ;miwi_p2p.c: 781: isSameAddress(ActiveScanResults[i].Address, rxMessage.SourceAddress)
  6963                           ;miwi_p2p.c: 782: )
  6964  000ACE  51A9               	movf	P2PTasks@i& (0+255),w,b
  6965  000AD0  0D0F               	mullw	15
  6966  000AD2  0E00               	movlw	low _ActiveScanResults
  6967  000AD4  24F3               	addwf	prodl,w,c
  6968  000AD6  6ED9               	movwf	fsr2l,c
  6969  000AD8  0E02               	movlw	high _ActiveScanResults
  6970  000ADA  20F4               	addwfc	prodh,w,c
  6971  000ADC  6EDA               	movwf	fsr2h,c
  6972  000ADE  51F1               	movf	_currentChannel& (0+255),w,b
  6973  000AE0  18DE               	xorwf	postinc2,w,c
  6974  000AE2  E110               	bnz	l9402
  6975                           
  6976                           ; BSR set to: 0
  6977  000AE4  51A9               	movf	P2PTasks@i& (0+255),w,b
  6978  000AE6  0D0F               	mullw	15
  6979  000AE8  0E01               	movlw	low (_ActiveScanResults+1)
  6980  000AEA  24F3               	addwf	prodl,w,c
  6981  000AEC  6F69               	movwf	isSameAddress@Address1& (0+255),b
  6982  000AEE  0E02               	movlw	high (_ActiveScanResults+1)
  6983  000AF0  20F4               	addwfc	prodh,w,c
  6984  000AF2  6F6A               	movwf	(isSameAddress@Address1+1)& (0+255),b
  6985  000AF4  C0B5  F06B         	movff	_rxMessage+3,isSameAddress@Address2
  6986  000AF8  C0B6  F06C         	movff	_rxMessage+4,isSameAddress@Address2+1
  6987  000AFC  ECD3  F014         	call	_isSameAddress	;wreg free
  6988  000B00  0900               	iorlw	0
  6989  000B02  E104               	bnz	l9406
  6990  000B04                     l9402:
  6991                           
  6992                           ; BSR set to: 0
  6993  000B04  2BA9               	incf	P2PTasks@i& (0+255),f,b
  6994  000B06                     l9404:
  6995                           
  6996                           ; BSR set to: 0
  6997  000B06  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  6998  000B08  5DA9               	subwf	P2PTasks@i& (0+255),w,b
  6999  000B0A  E3E1               	bnc	l9396
  7000  000B0C                     l9406:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;miwi_p2p.c: 785: }
  7004                           ;miwi_p2p.c: 786: }
  7005                           ;miwi_p2p.c: 787: if( i == ActiveScanResultIndex && (i < 4))
  7006  000B0C  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7007  000B0E  19A9               	xorwf	P2PTasks@i& (0+255),w,b
  7008  000B10  E001 D6A5          	bnz	l9246
  7009                           
  7010                           ; BSR set to: 0
  7011  000B14  0E04               	movlw	4
  7012  000B16  61A9               	cpfslt	P2PTasks@i& (0+255),b
  7013  000B18  D6A2               	goto	l9246
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;miwi_p2p.c: 788: {
  7017                           ;miwi_p2p.c: 789: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
  7018  000B1A  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7019  000B1C  0D0F               	mullw	15
  7020  000B1E  0E00               	movlw	low _ActiveScanResults
  7021  000B20  24F3               	addwf	prodl,w,c
  7022  000B22  6ED9               	movwf	fsr2l,c
  7023  000B24  0E02               	movlw	high _ActiveScanResults
  7024  000B26  20F4               	addwfc	prodh,w,c
  7025  000B28  6EDA               	movwf	fsr2h,c
  7026  000B2A  C0F1  FFDF         	movff	_currentChannel,indf2
  7027                           
  7028                           ;miwi_p2p.c: 790: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.PacketR
      +                          SSI;
  7029  000B2E  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7030  000B30  0D0F               	mullw	15
  7031  000B32  0E0B               	movlw	low (_ActiveScanResults+11)
  7032  000B34  24F3               	addwf	prodl,w,c
  7033  000B36  6ED9               	movwf	fsr2l,c
  7034  000B38  0E02               	movlw	high (_ActiveScanResults+11)
  7035  000B3A  20F4               	addwfc	prodh,w,c
  7036  000B3C  6EDA               	movwf	fsr2h,c
  7037  000B3E  C0BA  FFDF         	movff	_rxMessage+8,indf2
  7038                           
  7039                           ;miwi_p2p.c: 791: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.PacketLQ
      +                          I;
  7040  000B42  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7041  000B44  0D0F               	mullw	15
  7042  000B46  0E0C               	movlw	low (_ActiveScanResults+12)
  7043  000B48  24F3               	addwf	prodl,w,c
  7044  000B4A  6ED9               	movwf	fsr2l,c
  7045  000B4C  0E02               	movlw	high (_ActiveScanResults+12)
  7046  000B4E  20F4               	addwfc	prodh,w,c
  7047  000B50  6EDA               	movwf	fsr2h,c
  7048  000B52  C0BB  FFDF         	movff	_rxMessage+9,indf2
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;miwi_p2p.c: 795: for(i = 0; i < 8; i++)
  7052  000B56  6BA9               	clrf	P2PTasks@i& (0+255),b
  7053  000B58                     l9418:
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;miwi_p2p.c: 796: {
  7057                           ;miwi_p2p.c: 797: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Source
      +                          Address[i];
  7058  000B58  51A9               	movf	P2PTasks@i& (0+255),w,b
  7059  000B5A  25B5               	addwf	(_rxMessage+3)& (0+255),w,b
  7060  000B5C  6ED9               	movwf	fsr2l,c
  7061  000B5E  0E00               	movlw	0
  7062  000B60  21B6               	addwfc	(_rxMessage+4)& (0+255),w,b
  7063  000B62  6EDA               	movwf	fsr2h,c
  7064  000B64  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7065  000B66  0D0F               	mullw	15
  7066  000B68  0E00               	movlw	low _ActiveScanResults
  7067  000B6A  6FA0               	movwf	??_P2PTasks& (0+255),b
  7068  000B6C  0E02               	movlw	high _ActiveScanResults
  7069  000B6E  6FA1               	movwf	(??_P2PTasks+1)& (0+255),b
  7070  000B70  2BA0               	incf	??_P2PTasks& (0+255),f,b
  7071  000B72  0E00               	movlw	0
  7072  000B74  23A1               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  7073  000B76  50F3               	movf	prodl,w,c
  7074  000B78  27A0               	addwf	??_P2PTasks& (0+255),f,b
  7075  000B7A  50F4               	movf	prodh,w,c
  7076  000B7C  23A1               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  7077  000B7E  51A9               	movf	P2PTasks@i& (0+255),w,b
  7078  000B80  25A0               	addwf	??_P2PTasks& (0+255),w,b
  7079  000B82  6EE1               	movwf	fsr1l,c
  7080  000B84  0E00               	movlw	0
  7081  000B86  21A1               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  7082  000B88  6EE2               	movwf	fsr1h,c
  7083  000B8A  CFDF FFE7          	movff	indf2,indf1
  7084                           
  7085                           ; BSR set to: 0
  7086  000B8E  2BA9               	incf	P2PTasks@i& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 0
  7089  000B90  0E07               	movlw	7
  7090  000B92  65A9               	cpfsgt	P2PTasks@i& (0+255),b
  7091  000B94  D7E1               	goto	l9418
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;miwi_p2p.c: 798: }
  7095                           ;miwi_p2p.c: 799: ActiveScanResults[ActiveScanResultIndex].Capability.Val = rxMessage.Pa
      +                          yload[1];
  7096  000B96  EE20 F001          	lfsr	2,1
  7097  000B9A  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  7098  000B9C  26D9               	addwf	fsr2l,f,c
  7099  000B9E  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  7100  000BA0  22DA               	addwfc	fsr2h,f,c
  7101  000BA2  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7102  000BA4  0D0F               	mullw	15
  7103  000BA6  0E0D               	movlw	low (_ActiveScanResults+13)
  7104  000BA8  24F3               	addwf	prodl,w,c
  7105  000BAA  6EE1               	movwf	fsr1l,c
  7106  000BAC  0E02               	movlw	high (_ActiveScanResults+13)
  7107  000BAE  20F4               	addwfc	prodh,w,c
  7108  000BB0  6EE2               	movwf	fsr1h,c
  7109  000BB2  CFDF FFE7          	movff	indf2,indf1
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;miwi_p2p.c: 801: for(i = 0; i < 1; i++)
  7113  000BB6  6BA9               	clrf	P2PTasks@i& (0+255),b
  7114  000BB8                     l9432:
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;miwi_p2p.c: 802: {
  7118                           ;miwi_p2p.c: 803: ActiveScanResults[ActiveScanResultIndex].PeerInfo[i] = rxMessage.Paylo
      +                          ad[2+i];
  7119  000BB8  51A9               	movf	P2PTasks@i& (0+255),w,b
  7120  000BBA  25B7               	addwf	(_rxMessage+5)& (0+255),w,b
  7121  000BBC  6FA0               	movwf	??_P2PTasks& (0+255),b
  7122  000BBE  0E00               	movlw	0
  7123  000BC0  21B8               	addwfc	(_rxMessage+6)& (0+255),w,b
  7124  000BC2  6FA1               	movwf	(??_P2PTasks+1)& (0+255),b
  7125  000BC4  0E02               	movlw	2
  7126  000BC6  25A0               	addwf	??_P2PTasks& (0+255),w,b
  7127  000BC8  6ED9               	movwf	fsr2l,c
  7128  000BCA  0E00               	movlw	0
  7129  000BCC  21A1               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  7130  000BCE  6EDA               	movwf	fsr2h,c
  7131  000BD0  51D0               	movf	_ActiveScanResultIndex& (0+255),w,b
  7132  000BD2  0D0F               	mullw	15
  7133  000BD4  0E00               	movlw	low _ActiveScanResults
  7134  000BD6  6FA2               	movwf	(??_P2PTasks+2)& (0+255),b
  7135  000BD8  0E02               	movlw	high _ActiveScanResults
  7136  000BDA  6FA3               	movwf	(??_P2PTasks+3)& (0+255),b
  7137  000BDC  0E0E               	movlw	14
  7138  000BDE  27A2               	addwf	(??_P2PTasks+2)& (0+255),f,b
  7139  000BE0  0E00               	movlw	0
  7140  000BE2  23A3               	addwfc	(??_P2PTasks+3)& (0+255),f,b
  7141  000BE4  50F3               	movf	prodl,w,c
  7142  000BE6  27A2               	addwf	(??_P2PTasks+2)& (0+255),f,b
  7143  000BE8  50F4               	movf	prodh,w,c
  7144  000BEA  23A3               	addwfc	(??_P2PTasks+3)& (0+255),f,b
  7145  000BEC  51A9               	movf	P2PTasks@i& (0+255),w,b
  7146  000BEE  25A2               	addwf	(??_P2PTasks+2)& (0+255),w,b
  7147  000BF0  6EE1               	movwf	fsr1l,c
  7148  000BF2  0E00               	movlw	0
  7149  000BF4  21A3               	addwfc	(??_P2PTasks+3)& (0+255),w,b
  7150  000BF6  6EE2               	movwf	fsr1h,c
  7151  000BF8  CFDF FFE7          	movff	indf2,indf1
  7152                           
  7153                           ; BSR set to: 0
  7154  000BFC  2BA9               	incf	P2PTasks@i& (0+255),f,b
  7155                           
  7156                           ; BSR set to: 0
  7157  000BFE  51A9               	movf	P2PTasks@i& (0+255),w,b
  7158  000C00  E0DB               	bz	l9432
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;miwi_p2p.c: 804: }
  7162                           ;miwi_p2p.c: 806: ActiveScanResultIndex++;
  7163  000C02  2BD0               	incf	_ActiveScanResultIndex& (0+255),f,b
  7164  000C04  D62C               	goto	l9246
  7165  000C06                     l9442:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;miwi_p2p.c: 817: {
  7169                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7170  000C06  EE20 F001          	lfsr	2,1
  7171  000C0A  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  7172  000C0C  26D9               	addwf	fsr2l,f,c
  7173  000C0E  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  7174  000C10  22DA               	addwfc	fsr2h,f,c
  7175  000C12  50DF               	movf	indf2,w,c
  7176  000C14  E001 D623          	bnz	l9246
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;miwi_p2p.c: 819: {
  7180                           ;miwi_p2p.c: 820: for(i = 0; i < 30; i++)
  7181  000C18  6BA9               	clrf	P2PTasks@i& (0+255),b
  7182  000C1A                     l9450:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;miwi_p2p.c: 821: {
  7186                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7187  000C1A  51A9               	movf	P2PTasks@i& (0+255),w,b
  7188  000C1C  0D0A               	mullw	10
  7189  000C1E  0E51               	movlw	low (_ConnectionTable+8)
  7190  000C20  24F3               	addwf	prodl,w,c
  7191  000C22  6ED9               	movwf	fsr2l,c
  7192  000C24  0E02               	movlw	high (_ConnectionTable+8)
  7193  000C26  20F4               	addwfc	prodh,w,c
  7194  000C28  6EDA               	movwf	fsr2h,c
  7195  000C2A  AEDF               	btfss	indf2,7,c
  7196  000C2C  D02B               	goto	l9458
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;miwi_p2p.c: 824: {
  7200                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7201  000C2E  C0B5  F069         	movff	_rxMessage+3,isSameAddress@Address1
  7202  000C32  C0B6  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
  7203  000C36  51A9               	movf	P2PTasks@i& (0+255),w,b
  7204  000C38  0D0A               	mullw	10
  7205  000C3A  0E49               	movlw	low _ConnectionTable
  7206  000C3C  24F3               	addwf	prodl,w,c
  7207  000C3E  6F6B               	movwf	isSameAddress@Address2& (0+255),b
  7208  000C40  0E02               	movlw	high _ConnectionTable
  7209  000C42  20F4               	addwfc	prodh,w,c
  7210  000C44  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7211  000C46  ECD3  F014         	call	_isSameAddress	;wreg free
  7212  000C4A  0900               	iorlw	0
  7213  000C4C  E01B               	bz	l9458
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;miwi_p2p.c: 827: {
  7217                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7218  000C4E  51A9               	movf	P2PTasks@i& (0+255),w,b
  7219  000C50  0D0A               	mullw	10
  7220  000C52  0E51               	movlw	low (_ConnectionTable+8)
  7221  000C54  24F3               	addwf	prodl,w,c
  7222  000C56  6ED9               	movwf	fsr2l,c
  7223  000C58  0E02               	movlw	high (_ConnectionTable+8)
  7224  000C5A  20F4               	addwfc	prodh,w,c
  7225  000C5C  6EDA               	movwf	fsr2h,c
  7226  000C5E  6ADF               	clrf	indf2,c
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;miwi_p2p.c: 831: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7230  000C60  51A9               	movf	P2PTasks@i& (0+255),w,b
  7231  000C62  0D0A               	mullw	10
  7232  000C64  0E49               	movlw	low _ConnectionTable
  7233  000C66  24F3               	addwf	prodl,w,c
  7234  000C68  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  7235  000C6A  0E02               	movlw	high _ConnectionTable
  7236  000C6C  20F4               	addwfc	prodh,w,c
  7237  000C6E  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7238  000C70  51A9               	movf	P2PTasks@i& (0+255),w,b
  7239  000C72  0D0A               	mullw	10
  7240  000C74  50F3               	movf	prodl,w,c
  7241  000C76  0F04               	addlw	4
  7242  000C78  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  7243  000C7A  0E0A               	movlw	10
  7244  000C7C  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  7245  000C7E  EC87  F010         	call	_EEPROM_Write	;wreg free
  7246                           
  7247                           ;miwi_p2p.c: 833: break;
  7248  000C82  D5ED               	goto	l9246
  7249  000C84                     l9458:
  7250                           
  7251                           ; BSR set to: 0
  7252  000C84  2BA9               	incf	P2PTasks@i& (0+255),f,b
  7253                           
  7254                           ; BSR set to: 0
  7255  000C86  0E1D               	movlw	29
  7256  000C88  65A9               	cpfsgt	P2PTasks@i& (0+255),b
  7257  000C8A  D7C7               	goto	l9450
  7258  000C8C  D5E8               	goto	l9246
  7259  000C8E                     l9466:
  7260                           
  7261                           ; BSR set to: 0
  7262  000C8E  C0B7  FFD9         	movff	_rxMessage+5,fsr2l
  7263  000C92  C0B8  FFDA         	movff	_rxMessage+6,fsr2h
  7264  000C96  50DF               	movf	indf2,w,c
  7265                           
  7266                           ; Switch size 1, requested type "speed"
  7267                           ; Number of cases is 6, Range of values is 129 to 151
  7268                           ; switch strategies available:
  7269                           ; Name         Instructions Cycles
  7270                           ; simple_byte           19    10 (average)
  7271                           ;	Chosen strategy is simple_byte
  7272  000C98  0A81               	xorlw	129	; case 129
  7273  000C9A  E101 D5D7          	bz	l9244
  7274  000C9E  0A03               	xorlw	3	; case 130
  7275  000CA0  E101 D68D          	bz	l406
  7276  000CA4  0A05               	xorlw	5	; case 135
  7277  000CA6  E101 D649          	bz	l9314
  7278  000CAA  0A16               	xorlw	22	; case 145
  7279  000CAC  E101 D6FE          	bz	l9390
  7280  000CB0  0A03               	xorlw	3	; case 146
  7281  000CB2  E0A9               	bz	l9442
  7282  000CB4  0A05               	xorlw	5	; case 151
  7283  000CB6  E101 D704          	bz	l418
  7284  000CBA                     l384:
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;miwi_p2p.c: 1101: else
  7288                           ;miwi_p2p.c: 1102: {
  7289                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  7290  000CBA  87D6               	bsf	_P2PStatus& (0+255),3,b	;volatile
  7291  000CBC                     l9468:
  7292                           
  7293                           ;miwi_p2p.c: 1104: }
  7294                           ;miwi_p2p.c: 1112: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  7295  000CBC  0100               	movlb	0	; () banked
  7296  000CBE  51B9               	movf	(_rxMessage+7)& (0+255),w,b
  7297  000CC0  E004               	bz	l440
  7298                           
  7299                           ; BSR set to: 0
  7300  000CC2  B9D6               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7301  000CC4  D002               	goto	l440
  7302                           
  7303                           ; BSR set to: 0
  7304  000CC6  ABD6               	btfss	_P2PStatus& (0+255),5,b	;volatile
  7305  000CC8  0012               	return	
  7306  000CCA                     l440:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;miwi_p2p.c: 1113: {
  7310                           ;miwi_p2p.c: 1114: P2PStatus.bits.RxHasUserData = 0;
  7311  000CCA  97D6               	bcf	_P2PStatus& (0+255),3,b	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;miwi_p2p.c: 1115: MiMAC_DiscardPacket();
  7315  000CCC  EF72  F015         	goto	_MiMAC_DiscardPacket	;wreg free
  7316  000CD0                     __end_of_P2PTasks:
  7317                           	opt stack 0
  7318                           tblptru	equ	0xFF8
  7319                           tblptrh	equ	0xFF7
  7320                           tblptrl	equ	0xFF6
  7321                           tablat	equ	0xFF5
  7322                           prodh	equ	0xFF4
  7323                           prodl	equ	0xFF3
  7324                           intcon	equ	0xFF2
  7325                           intcon2	equ	0xFF1
  7326                           intcon3	equ	0xFF0
  7327                           postinc0	equ	0xFEE
  7328                           wreg	equ	0xFE8
  7329                           indf1	equ	0xFE7
  7330                           postdec1	equ	0xFE5
  7331                           fsr1h	equ	0xFE2
  7332                           fsr1l	equ	0xFE1
  7333                           indf2	equ	0xFDF
  7334                           postinc2	equ	0xFDE
  7335                           postdec2	equ	0xFDD
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function _SendPacket *****************
  7341 ;; Defined at:
  7342 ;;		line 1627 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  Broadcast       1    wreg     unsigned char 
  7345 ;;  DestinationA    2   54[BANK0 ] PTR unsigned char 
  7346 ;;		 -> ActiveScanResults(60), ConnectionTable(300), NULL(0), RxPacket.Payload(50), 
  7347 ;;		 -> RxPacket(104), 
  7348 ;;  isCommand       1   56[BANK0 ] unsigned char 
  7349 ;;  SecurityEnab    1   57[BANK0 ] unsigned char 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  Broadcast       1   60[BANK0 ] unsigned char 
  7352 ;;  tParam          3   61[BANK0 ] struct .
  7353 ;;  status          1   59[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      unsigned char 
  7356 ;; Registers used:
  7357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : F/0
  7360 ;;		On exit  : F/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;Total ram usage:       10 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:   14
  7370 ;; This function calls:
  7371 ;;		_MiMAC_SendPacket
  7372 ;; This function is called by:
  7373 ;;		_P2PTasks
  7374 ;;		_MiApp_BroadcastPacket
  7375 ;;		_MiApp_UnicastAddress
  7376 ;;		_MiApp_EstablishConnection
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text28
  7381  001EC4                     __ptext28:
  7382                           	opt stack 0
  7383  001EC4                     _SendPacket:
  7384                           	opt stack 11
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;incstack = 0
  7388                           ;SendPacket@Broadcast stored from wreg
  7389  001EC4  6F9C               	movwf	SendPacket@Broadcast& (0+255),b
  7390                           
  7391                           ;miwi_p2p.c: 1633: MAC_TRANS_PARAM tParam;
  7392                           ;miwi_p2p.c: 1634: bool status;
  7393                           ;miwi_p2p.c: 1636: tParam.flags.Val = 0;
  7394  001EC6  0100               	movlb	0	; () banked
  7395  001EC8  6B9D               	clrf	SendPacket@tParam& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;miwi_p2p.c: 1637: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  7399  001ECA  5198               	movf	SendPacket@isCommand& (0+255),w,b
  7400  001ECC  E003               	bz	u8410
  7401  001ECE  6B9A               	clrf	??_SendPacket& (0+255),b
  7402  001ED0  2B9A               	incf	??_SendPacket& (0+255),f,b
  7403  001ED2  D002               	goto	u8428
  7404  001ED4                     u8410:
  7405  001ED4  0100               	movlb	0	; () banked
  7406  001ED6  6B9A               	clrf	??_SendPacket& (0+255),b
  7407  001ED8                     u8428:
  7408  001ED8  519D               	movf	SendPacket@tParam& (0+255),w,b
  7409  001EDA  199A               	xorwf	??_SendPacket& (0+255),w,b
  7410  001EDC  0BFC               	andlw	-4
  7411  001EDE  199A               	xorwf	??_SendPacket& (0+255),w,b
  7412  001EE0  6F9D               	movwf	SendPacket@tParam& (0+255),b
  7413                           
  7414                           ;miwi_p2p.c: 1638: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  7415  001EE2  519C               	movf	SendPacket@Broadcast& (0+255),w,b
  7416  001EE4  E103               	bnz	u8430
  7417  001EE6  6B9A               	clrf	??_SendPacket& (0+255),b
  7418  001EE8  2B9A               	incf	??_SendPacket& (0+255),f,b
  7419  001EEA  D002               	goto	u8448
  7420  001EEC                     u8430:
  7421  001EEC  0100               	movlb	0	; () banked
  7422  001EEE  6B9A               	clrf	??_SendPacket& (0+255),b
  7423  001EF0                     u8448:
  7424  001EF0  3B9A               	swapf	??_SendPacket& (0+255),f,b
  7425  001EF2  479A               	rlncf	??_SendPacket& (0+255),f,b
  7426  001EF4  519D               	movf	SendPacket@tParam& (0+255),w,b
  7427  001EF6  199A               	xorwf	??_SendPacket& (0+255),w,b
  7428  001EF8  0BDF               	andlw	-33
  7429  001EFA  199A               	xorwf	??_SendPacket& (0+255),w,b
  7430  001EFC  6F9D               	movwf	SendPacket@tParam& (0+255),b
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;miwi_p2p.c: 1639: tParam.flags.bits.broadcast = Broadcast;
  7434  001EFE  B19C               	btfsc	SendPacket@Broadcast& (0+255),0,b
  7435  001F00  D002               	bra	u8455
  7436  001F02  959D               	bcf	SendPacket@tParam& (0+255),2,b
  7437  001F04  D002               	bra	u8456
  7438  001F06                     u8455:
  7439  001F06  0100               	movlb	0	; () banked
  7440  001F08  859D               	bsf	SendPacket@tParam& (0+255),2,b
  7441  001F0A                     u8456:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;miwi_p2p.c: 1640: tParam.flags.bits.secEn = SecurityEnabled;
  7445  001F0A  B199               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
  7446  001F0C  D002               	bra	u8465
  7447  001F0E  979D               	bcf	SendPacket@tParam& (0+255),3,b
  7448  001F10  D002               	bra	u8466
  7449  001F12                     u8465:
  7450  001F12  0100               	movlb	0	; () banked
  7451  001F14  879D               	bsf	SendPacket@tParam& (0+255),3,b
  7452  001F16                     u8466:
  7453                           
  7454                           ;miwi_p2p.c: 1649: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
  7455  001F16  519C               	movf	SendPacket@Broadcast& (0+255),w,b
  7456  001F18  E103               	bnz	u8470
  7457  001F1A  6B9A               	clrf	??_SendPacket& (0+255),b
  7458  001F1C  2B9A               	incf	??_SendPacket& (0+255),f,b
  7459  001F1E  D002               	goto	u8488
  7460  001F20                     u8470:
  7461  001F20  0100               	movlb	0	; () banked
  7462  001F22  6B9A               	clrf	??_SendPacket& (0+255),b
  7463  001F24                     u8488:
  7464  001F24  3B9A               	swapf	??_SendPacket& (0+255),f,b
  7465  001F26  479A               	rlncf	??_SendPacket& (0+255),f,b
  7466  001F28  479A               	rlncf	??_SendPacket& (0+255),f,b
  7467  001F2A  519D               	movf	SendPacket@tParam& (0+255),w,b
  7468  001F2C  199A               	xorwf	??_SendPacket& (0+255),w,b
  7469  001F2E  0BBF               	andlw	-65
  7470  001F30  199A               	xorwf	??_SendPacket& (0+255),w,b
  7471  001F32  6F9D               	movwf	SendPacket@tParam& (0+255),b
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;miwi_p2p.c: 1662: tParam.flags.bits.sourcePrsnt = 1;
  7475  001F34  8F9D               	bsf	SendPacket@tParam& (0+255),7,b
  7476                           
  7477                           ;miwi_p2p.c: 1665: tParam.DestAddress = DestinationAddress;
  7478  001F36  C096  F09E         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
  7479  001F3A  C097  F09F         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;miwi_p2p.c: 1671: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
  7483  001F3E  C09D  F08D         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
  7484  001F42  C09E  F08E         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
  7485  001F46  C09F  F08F         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
  7486  001F4A  0ED9               	movlw	low _TxBuffer
  7487  001F4C  6F90               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
  7488  001F4E  0E01               	movlw	high _TxBuffer
  7489  001F50  6F91               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
  7490  001F52  C0DC  F092         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
  7491  001F56  EC63  F00D         	call	_MiMAC_SendPacket	;wreg free
  7492  001F5A  6F9B               	movwf	SendPacket@status& (0+255),b
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;miwi_p2p.c: 1672: TxData = 0;
  7496  001F5C  6BDC               	clrf	_TxData& (0+255),b
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;miwi_p2p.c: 1674: return status;
  7500  001F5E  519B               	movf	SendPacket@status& (0+255),w,b
  7501                           
  7502                           ; BSR set to: 0
  7503  001F60  0012               	return		;funcret
  7504  001F62                     __end_of_SendPacket:
  7505                           	opt stack 0
  7506                           tblptru	equ	0xFF8
  7507                           tblptrh	equ	0xFF7
  7508                           tblptrl	equ	0xFF6
  7509                           tablat	equ	0xFF5
  7510                           prodh	equ	0xFF4
  7511                           prodl	equ	0xFF3
  7512                           intcon	equ	0xFF2
  7513                           intcon2	equ	0xFF1
  7514                           intcon3	equ	0xFF0
  7515                           postinc0	equ	0xFEE
  7516                           wreg	equ	0xFE8
  7517                           indf1	equ	0xFE7
  7518                           postdec1	equ	0xFE5
  7519                           fsr1h	equ	0xFE2
  7520                           fsr1l	equ	0xFE1
  7521                           indf2	equ	0xFDF
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           fsr2h	equ	0xFDA
  7525                           fsr2l	equ	0xFD9
  7526                           status	equ	0xFD8
  7527                           
  7528 ;; *************** function _MiMAC_SendPacket *****************
  7529 ;; Defined at:
  7530 ;;		line 728 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  transParam      3   45[BANK0 ] struct .
  7533 ;;  MACPayload      2   48[BANK0 ] PTR unsigned char 
  7534 ;;		 -> TxBuffer(30), 
  7535 ;;  MACPayloadLe    1   50[BANK0 ] unsigned char 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  i               1   53[BANK0 ] unsigned char 
  7538 ;;  TxIndex         1   52[BANK0 ] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      unsigned char 
  7541 ;; Registers used:
  7542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : F/0
  7545 ;;		On exit  : F/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7548 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7551 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7552 ;;Total ram usage:        9 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:   13
  7555 ;; This function calls:
  7556 ;;		_TxPacket
  7557 ;; This function is called by:
  7558 ;;		_SendPacket
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text29
  7563  001AC6                     __ptext29:
  7564                           	opt stack 0
  7565  001AC6                     _MiMAC_SendPacket:
  7566                           	opt stack 11
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
  7570                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
  7571                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 30 )
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;incstack = 0
  7575  001AC6  0E1E               	movlw	30
  7576  001AC8  6592               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
  7577  001ACA  D001               	goto	l8464
  7578  001ACC  0C00               	retlw	0
  7579  001ACE                     l8464:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;drv_mrf_miwi_89xa.c: 738: }
  7583                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
  7584  001ACE  B58D               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
  7585  001AD0  D003               	goto	u7970
  7586  001AD2  6B93               	clrf	??_MiMAC_SendPacket& (0+255),b
  7587  001AD4  2B93               	incf	??_MiMAC_SendPacket& (0+255),f,b
  7588  001AD6  D002               	goto	u7988
  7589  001AD8                     u7970:
  7590  001AD8  0100               	movlb	0	; () banked
  7591  001ADA  6B93               	clrf	??_MiMAC_SendPacket& (0+255),b
  7592  001ADC                     u7988:
  7593  001ADC  3B93               	swapf	??_MiMAC_SendPacket& (0+255),f,b
  7594  001ADE  4793               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  7595  001AE0  4793               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  7596  001AE2  518D               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  7597  001AE4  1993               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  7598  001AE6  0BBF               	andlw	-65
  7599  001AE8  1993               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  7600  001AEA  6F8D               	movwf	MiMAC_SendPacket@transParam& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
  7604  001AEC  8F8D               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  7605                           
  7606                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
  7607  001AEE  518D               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  7608  001AF0  0B03               	andlw	3
  7609  001AF2  06E8               	decf	wreg,f,c
  7610  001AF4  E101               	bnz	l141
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;drv_mrf_miwi_89xa.c: 751: {
  7614                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
  7615  001AF6  8F8D               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  7616  001AF8                     l141:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;drv_mrf_miwi_89xa.c: 753: }
  7620                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
  7621  001AF8  C08D  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
  7622                           
  7623                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
  7624  001AFC  C0D3  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
  7625                           
  7626                           ; BSR set to: 0
  7627  001B00  2BD3               	incf	_MACSeq& (0+255),f,b
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
  7631  001B02  0E02               	movlw	2
  7632  001B04  6F94               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
  7636  001B06  AD8D               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
  7637  001B08  D01A               	goto	l146
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;drv_mrf_miwi_89xa.c: 762: {
  7641                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  7642  001B0A  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  7643  001B0C  D010               	goto	l8484
  7644  001B0E                     l8478:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;drv_mrf_miwi_89xa.c: 764: {
  7648                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
  7649  001B0E  5195               	movf	MiMAC_SendPacket@i& (0+255),w,b
  7650  001B10  258E               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
  7651  001B12  6ED9               	movwf	fsr2l,c
  7652  001B14  0E00               	movlw	0
  7653  001B16  218F               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
  7654  001B18  6EDA               	movwf	fsr2h,c
  7655  001B1A  0E00               	movlw	low _MACTxBuffer
  7656  001B1C  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  7657  001B1E  6EE1               	movwf	fsr1l,c
  7658  001B20  6AE2               	clrf	fsr1h,c
  7659  001B22  0E01               	movlw	high _MACTxBuffer
  7660  001B24  22E2               	addwfc	fsr1h,f,c
  7661  001B26  CFDF FFE7          	movff	indf2,indf1
  7662                           
  7663                           ; BSR set to: 0
  7664  001B2A  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  7665                           
  7666                           ; BSR set to: 0
  7667  001B2C  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  7668  001B2E                     l8484:
  7669                           
  7670                           ; BSR set to: 0
  7671  001B2E  31CC               	rrcf	_MACInitParams& (0+255),w,b
  7672  001B30  32E8               	rrcf	wreg,f,c
  7673  001B32  32E8               	rrcf	wreg,f,c
  7674  001B34  0B0F               	andlw	15
  7675  001B36  6F93               	movwf	??_MiMAC_SendPacket& (0+255),b
  7676  001B38  5193               	movf	??_MiMAC_SendPacket& (0+255),w,b
  7677  001B3A  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  7678  001B3C  E3E8               	bnc	l8478
  7679  001B3E                     l146:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;drv_mrf_miwi_89xa.c: 771: }
  7683                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
  7684  001B3E  AF8D               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
  7685  001B40  D018               	goto	l147
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;drv_mrf_miwi_89xa.c: 774: {
  7689                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  7690  001B42  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  7691  001B44  D00E               	goto	l8494
  7692  001B46                     l8488:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;drv_mrf_miwi_89xa.c: 776: {
  7696                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
  7697  001B46  51CD               	movf	(_MACInitParams+1)& (0+255),w,b
  7698  001B48  2595               	addwf	MiMAC_SendPacket@i& (0+255),w,b
  7699  001B4A  6ED9               	movwf	fsr2l,c
  7700  001B4C  6ADA               	clrf	fsr2h,c
  7701  001B4E  0E00               	movlw	low _MACTxBuffer
  7702  001B50  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  7703  001B52  6EE1               	movwf	fsr1l,c
  7704  001B54  6AE2               	clrf	fsr1h,c
  7705  001B56  0E01               	movlw	high _MACTxBuffer
  7706  001B58  22E2               	addwfc	fsr1h,f,c
  7707  001B5A  CFDF FFE7          	movff	indf2,indf1
  7708                           
  7709                           ; BSR set to: 0
  7710  001B5E  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  7711                           
  7712                           ; BSR set to: 0
  7713  001B60  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  7714  001B62                     l8494:
  7715                           
  7716                           ; BSR set to: 0
  7717  001B62  31CC               	rrcf	_MACInitParams& (0+255),w,b
  7718  001B64  32E8               	rrcf	wreg,f,c
  7719  001B66  32E8               	rrcf	wreg,f,c
  7720  001B68  0B0F               	andlw	15
  7721  001B6A  6F93               	movwf	??_MiMAC_SendPacket& (0+255),b
  7722  001B6C  5193               	movf	??_MiMAC_SendPacket& (0+255),w,b
  7723  001B6E  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  7724  001B70  E3EA               	bnc	l8488
  7725  001B72                     l147:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;drv_mrf_miwi_89xa.c: 778: }
  7729                           ;drv_mrf_miwi_89xa.c: 780: }
  7730                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
  7731  001B72  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  7732  001B74  D010               	goto	l8502
  7733  001B76                     l8496:
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;drv_mrf_miwi_89xa.c: 842: {
  7737                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
  7738  001B76  5195               	movf	MiMAC_SendPacket@i& (0+255),w,b
  7739  001B78  2590               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
  7740  001B7A  6ED9               	movwf	fsr2l,c
  7741  001B7C  0E00               	movlw	0
  7742  001B7E  2191               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
  7743  001B80  6EDA               	movwf	fsr2h,c
  7744  001B82  0E00               	movlw	low _MACTxBuffer
  7745  001B84  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  7746  001B86  6EE1               	movwf	fsr1l,c
  7747  001B88  6AE2               	clrf	fsr1h,c
  7748  001B8A  0E01               	movlw	high _MACTxBuffer
  7749  001B8C  22E2               	addwfc	fsr1h,f,c
  7750  001B8E  CFDF FFE7          	movff	indf2,indf1
  7751                           
  7752                           ; BSR set to: 0
  7753  001B92  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  7754                           
  7755                           ; BSR set to: 0
  7756  001B94  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  7757  001B96                     l8502:
  7758                           
  7759                           ; BSR set to: 0
  7760  001B96  5192               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
  7761  001B98  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  7762  001B9A  E3ED               	bnc	l8496
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;drv_mrf_miwi_89xa.c: 844: }
  7766                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
  7767  001B9C  0E00               	movlw	0
  7768  001B9E  B3CC               	btfsc	_MACInitParams& (0+255),1,b
  7769  001BA0  0E01               	movlw	1
  7770  001BA2  6F79               	movwf	TxPacket@CCA& (0+255),b
  7771  001BA4  5194               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  7772  001BA6  EF41  F00C         	goto	_TxPacket
  7773  001BAA                     __end_of_MiMAC_SendPacket:
  7774                           	opt stack 0
  7775                           tblptru	equ	0xFF8
  7776                           tblptrh	equ	0xFF7
  7777                           tblptrl	equ	0xFF6
  7778                           tablat	equ	0xFF5
  7779                           prodh	equ	0xFF4
  7780                           prodl	equ	0xFF3
  7781                           intcon	equ	0xFF2
  7782                           intcon2	equ	0xFF1
  7783                           intcon3	equ	0xFF0
  7784                           postinc0	equ	0xFEE
  7785                           wreg	equ	0xFE8
  7786                           indf1	equ	0xFE7
  7787                           postdec1	equ	0xFE5
  7788                           fsr1h	equ	0xFE2
  7789                           fsr1l	equ	0xFE1
  7790                           indf2	equ	0xFDF
  7791                           postinc2	equ	0xFDE
  7792                           postdec2	equ	0xFDD
  7793                           fsr2h	equ	0xFDA
  7794                           fsr2l	equ	0xFD9
  7795                           status	equ	0xFD8
  7796                           
  7797 ;; *************** function _TxPacket *****************
  7798 ;; Defined at:
  7799 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  TxPacketLen     1    wreg     unsigned char 
  7802 ;;  CCA             1   25[BANK0 ] unsigned char 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  TxPacketLen     1   42[BANK0 ] unsigned char 
  7805 ;;  allowedTxFai    1   40[BANK0 ] unsigned char 
  7806 ;;  t2              4   34[BANK0 ] struct _MIWI_TICK
  7807 ;;  t1              4   30[BANK0 ] struct _MIWI_TICK
  7808 ;;  i               1   44[BANK0 ] unsigned char 
  7809 ;;  status          1   43[BANK0 ] unsigned char 
  7810 ;;  rssival         1   41[BANK0 ] unsigned char 
  7811 ;;  reTry           1   39[BANK0 ] unsigned char 
  7812 ;;  CCARetries      1   38[BANK0 ] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      unsigned char 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : F/0
  7819 ;;		On exit  : F/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7822 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;Total ram usage:       20 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:   12
  7829 ;; This function calls:
  7830 ;;		_DELAY_10us
  7831 ;;		_MiWi_TickGet
  7832 ;;		_RegisterRead
  7833 ;;		_RegisterSet
  7834 ;;		_SetRFMode
  7835 ;;		_WriteFIFO
  7836 ;; This function is called by:
  7837 ;;		_MiMAC_SendPacket
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text30
  7842  001882                     __ptext30:
  7843                           	opt stack 0
  7844  001882                     _TxPacket:
  7845                           	opt stack 11
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;incstack = 0
  7849                           ;TxPacket@TxPacketLen stored from wreg
  7850  001882  6F8A               	movwf	TxPacket@TxPacketLen& (0+255),b
  7851                           
  7852                           ;drv_mrf_miwi_89xa.c: 290: bool status;
  7853                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
  7854                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
  7855                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
  7856                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
  7857                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
  7858  001884  0E03               	movlw	3
  7859  001886  0100               	movlb	0	; () banked
  7860  001888  6F87               	movwf	TxPacket@reTry& (0+255),b
  7861                           
  7862                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
  7863  00188A  D087               	goto	l8430
  7864  00188C                     l84:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;drv_mrf_miwi_89xa.c: 305: {
  7868                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
  7869                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
  7870  00188C  6B88               	clrf	TxPacket@allowedTxFailure& (0+255),b
  7871  00188E                     l85:
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
  7875  00188E  6BE0               	clrf	_hasAck& (0+255),b	;volatile
  7876                           
  7877                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
  7878  001890  6B86               	clrf	TxPacket@CCARetries& (0+255),b
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
  7882  001892  5179               	movf	TxPacket@CCA& (0+255),w,b
  7883  001894  E018               	bz	l86
  7884  001896                     l8368:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
  7888  001896  0E28               	movlw	40
  7889  001898  EC1E  F013         	call	_RegisterRead
  7890  00189C  6F89               	movwf	TxPacket@rssival& (0+255),b
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
  7894  00189E  90D8               	bcf	status,0,c
  7895  0018A0  3389               	rrcf	TxPacket@rssival& (0+255),f,b
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
  7899  0018A2  0E41               	movlw	65
  7900  0018A4  6589               	cpfsgt	TxPacket@rssival& (0+255),b
  7901  0018A6  D00F               	goto	l86
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;drv_mrf_miwi_89xa.c: 326: {
  7905                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
  7906  0018A8  2B86               	incf	TxPacket@CCARetries& (0+255),f,b
  7907  0018AA  0586               	decf	TxPacket@CCARetries& (0+255),w,b
  7908  0018AC  6F7A               	movwf	??_TxPacket& (0+255),b
  7909  0018AE  0E04               	movlw	4
  7910  0018B0  657A               	cpfsgt	??_TxPacket& (0+255),b
  7911  0018B2  D001               	goto	l8380
  7912  0018B4  0C00               	retlw	0
  7913  0018B6                     l8380:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;drv_mrf_miwi_89xa.c: 331: }
  7917                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
  7918  0018B6  0E01               	movlw	1
  7919  0018B8  6F69               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
  7920  0018BA  6B6A               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
  7921  0018BC  6B6B               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
  7922  0018BE  6B6C               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
  7923  0018C0  ECD5  F00D         	call	_DELAY_10us	;wreg free
  7924                           
  7925                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
  7926  0018C4  D7E8               	goto	l8368
  7927  0018C6                     l86:
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;drv_mrf_miwi_89xa.c: 334: }
  7931                           ;drv_mrf_miwi_89xa.c: 335: }
  7932                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
  7933  0018C6  98F2               	bcf	intcon,4,c	;volatile
  7934                           
  7935                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
  7936  0018C8  96F0               	bcf	intcon3,3,c	;volatile
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
  7940  0018CA  0E20               	movlw	32
  7941  0018CC  ECC9  F011         	call	_SetRFMode
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
  7945  0018D0  0E1A               	movlw	26
  7946  0018D2  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  7947  0018D4  0EC9               	movlw	201
  7948  0018D6  6F6A               	movwf	RegisterSet@setting& (0+255),b
  7949  0018D8  EC66  F013         	call	_RegisterSet	;wreg free
  7950                           
  7951                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
  7952  0018DC  0100               	movlb	0	; () banked
  7953  0018DE  518A               	movf	TxPacket@TxPacketLen& (0+255),w,b
  7954  0018E0  EC03  F014         	call	_WriteFIFO
  7955                           
  7956                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
  7957  0018E4  0100               	movlb	0	; () banked
  7958  0018E6  6B8C               	clrf	TxPacket@i& (0+255),b
  7959  0018E8  D00B               	goto	l8394
  7960  0018EA                     l8390:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;drv_mrf_miwi_89xa.c: 347: {
  7964                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
  7965  0018EA  0E00               	movlw	low _MACTxBuffer
  7966  0018EC  258C               	addwf	TxPacket@i& (0+255),w,b
  7967  0018EE  6ED9               	movwf	fsr2l,c
  7968  0018F0  6ADA               	clrf	fsr2h,c
  7969  0018F2  0E01               	movlw	high _MACTxBuffer
  7970  0018F4  22DA               	addwfc	fsr2h,f,c
  7971  0018F6  50DF               	movf	indf2,w,c
  7972  0018F8  EC03  F014         	call	_WriteFIFO
  7973  0018FC  0100               	movlb	0	; () banked
  7974  0018FE  2B8C               	incf	TxPacket@i& (0+255),f,b
  7975  001900                     l8394:
  7976                           
  7977                           ; BSR set to: 0
  7978  001900  518A               	movf	TxPacket@TxPacketLen& (0+255),w,b
  7979  001902  5D8C               	subwf	TxPacket@i& (0+255),w,b
  7980  001904  E3F2               	bnc	l8390
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;drv_mrf_miwi_89xa.c: 349: }
  7984                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
  7985  001906  0E80               	movlw	128
  7986  001908  ECC9  F011         	call	_SetRFMode
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
  7990  00190C  88F2               	bsf	intcon,4,c	;volatile
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
  7994  00190E  86F0               	bsf	intcon3,3,c	;volatile
  7995  001910                     l8402:
  7996                           
  7997                           ; BSR set to: 0
  7998  001910  51D1               	movf	_IRQ1_Received& (0+255),w,b	;volatile
  7999  001912  E102               	bnz	l98
  8000                           
  8001                           ; BSR set to: 0
  8002  001914  A0F0               	btfss	intcon3,0,c	;volatile
  8003  001916  D7FC               	goto	l8402
  8004  001918                     l98:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;drv_mrf_miwi_89xa.c: 358: };
  8008                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
  8009  001918  6BD1               	clrf	_IRQ1_Received& (0+255),b	;volatile
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
  8013  00191A  0E20               	movlw	32
  8014  00191C  ECC9  F011         	call	_SetRFMode
  8015                           
  8016                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
  8017  001920  0E60               	movlw	96
  8018  001922  ECC9  F011         	call	_SetRFMode
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
  8022  001926  0101               	movlb	1	; () banked
  8023  001928  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
  8024  00192A  D00E               	goto	l8416
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;drv_mrf_miwi_89xa.c: 368: {
  8028                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
  8029  00192C  C101  F045         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
  8033  001930  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  8034  001934  C069  F07E         	movff	?_MiWi_TickGet,TxPacket@t1
  8035  001938  C06A  F07F         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
  8036  00193C  C06B  F080         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
  8037  001940  C06C  F081         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
  8038  001944                     l8414:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;drv_mrf_miwi_89xa.c: 372: {
  8042                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
  8043  001944  51E0               	movf	_hasAck& (0+255),w,b	;volatile
  8044  001946  E004               	bz	l8418
  8045  001948                     l8416:
  8046                           
  8047                           ;drv_mrf_miwi_89xa.c: 374: {
  8048                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
  8049  001948  0E01               	movlw	1
  8050  00194A  0100               	movlb	0	; () banked
  8051  00194C  6F8B               	movwf	TxPacket@status& (0+255),b
  8052                           
  8053                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
  8054  00194E  D02A               	goto	l8432
  8055  001950                     l8418:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;drv_mrf_miwi_89xa.c: 377: }
  8059                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
  8060  001950  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  8061  001954  C069  F082         	movff	?_MiWi_TickGet,TxPacket@t2
  8062  001958  C06A  F083         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
  8063  00195C  C06B  F084         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
  8064  001960  C06C  F085         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
  8068  001964  517E               	movf	TxPacket@t1& (0+255),w,b
  8069  001966  5D82               	subwf	TxPacket@t2& (0+255),w,b
  8070  001968  6F7A               	movwf	??_TxPacket& (0+255),b
  8071  00196A  517F               	movf	(TxPacket@t1+1)& (0+255),w,b
  8072  00196C  5983               	subwfb	(TxPacket@t2+1)& (0+255),w,b
  8073  00196E  6F7B               	movwf	(??_TxPacket+1)& (0+255),b
  8074  001970  5180               	movf	(TxPacket@t1+2)& (0+255),w,b
  8075  001972  5984               	subwfb	(TxPacket@t2+2)& (0+255),w,b
  8076  001974  6F7C               	movwf	(??_TxPacket+2)& (0+255),b
  8077  001976  5181               	movf	(TxPacket@t1+3)& (0+255),w,b
  8078  001978  5985               	subwfb	(TxPacket@t2+3)& (0+255),w,b
  8079  00197A  6F7D               	movwf	(??_TxPacket+3)& (0+255),b
  8080  00197C  517D               	movf	(??_TxPacket+3)& (0+255),w,b
  8081  00197E  117C               	iorwf	(??_TxPacket+2)& (0+255),w,b
  8082  001980  E105               	bnz	u7910
  8083  001982  0EA9               	movlw	169
  8084  001984  5D7A               	subwf	??_TxPacket& (0+255),w,b
  8085  001986  0E61               	movlw	97
  8086  001988  597B               	subwfb	(??_TxPacket+1)& (0+255),w,b
  8087  00198A  E3DC               	bnc	l8414
  8088  00198C                     u7910:
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;drv_mrf_miwi_89xa.c: 382: }
  8092                           ;drv_mrf_miwi_89xa.c: 383: }
  8093                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
  8094  00198C  2B88               	incf	TxPacket@allowedTxFailure& (0+255),f,b
  8095  00198E  0588               	decf	TxPacket@allowedTxFailure& (0+255),w,b
  8096  001990  6F7A               	movwf	??_TxPacket& (0+255),b
  8097  001992  0E04               	movlw	4
  8098  001994  617A               	cpfslt	??_TxPacket& (0+255),b
  8099  001996  D001               	goto	l8430
  8100  001998  D77A               	goto	l85
  8101  00199A                     l8430:
  8102                           
  8103                           ; BSR set to: 0
  8104  00199A  0787               	decf	TxPacket@reTry& (0+255),f,b
  8105  00199C  2987               	incf	TxPacket@reTry& (0+255),w,b
  8106  00199E  E001 D775          	bnz	l84
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;drv_mrf_miwi_89xa.c: 394: }
  8110                           ;drv_mrf_miwi_89xa.c: 395: }
  8111                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
  8112  0019A2  6B8B               	clrf	TxPacket@status& (0+255),b
  8113  0019A4                     l8432:
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;drv_mrf_miwi_89xa.c: 399: return status;
  8117  0019A4  518B               	movf	TxPacket@status& (0+255),w,b
  8118                           
  8119                           ; BSR set to: 0
  8120  0019A6  0012               	return		;funcret
  8121  0019A8                     __end_of_TxPacket:
  8122                           	opt stack 0
  8123                           tblptru	equ	0xFF8
  8124                           tblptrh	equ	0xFF7
  8125                           tblptrl	equ	0xFF6
  8126                           tablat	equ	0xFF5
  8127                           prodh	equ	0xFF4
  8128                           prodl	equ	0xFF3
  8129                           intcon	equ	0xFF2
  8130                           intcon2	equ	0xFF1
  8131                           intcon3	equ	0xFF0
  8132                           postinc0	equ	0xFEE
  8133                           wreg	equ	0xFE8
  8134                           indf1	equ	0xFE7
  8135                           postdec1	equ	0xFE5
  8136                           fsr1h	equ	0xFE2
  8137                           fsr1l	equ	0xFE1
  8138                           indf2	equ	0xFDF
  8139                           postinc2	equ	0xFDE
  8140                           postdec2	equ	0xFDD
  8141                           fsr2h	equ	0xFDA
  8142                           fsr2l	equ	0xFD9
  8143                           status	equ	0xFD8
  8144                           
  8145 ;; *************** function _WriteFIFO *****************
  8146 ;; Defined at:
  8147 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  Data            1    wreg     unsigned char 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  Data            1   10[BANK0 ] unsigned char 
  8152 ;;  IRQ0select      1   12[BANK0 ] unsigned char 
  8153 ;;  IRQ1select      1   11[BANK0 ] unsigned char 
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : F/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;Total ram usage:        3 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:   10
  8170 ;; This function calls:
  8171 ;;		_SPIPut
  8172 ;; This function is called by:
  8173 ;;		_TxPacket
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text31
  8178  002806                     __ptext31:
  8179                           	opt stack 0
  8180  002806                     _WriteFIFO:
  8181                           	opt stack 12
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;incstack = 0
  8185                           ;WriteFIFO@Data stored from wreg
  8186  002806  6F6A               	movwf	WriteFIFO@Data& (0+255),b
  8187                           
  8188                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
  8189  002808  0E00               	movlw	0
  8190  00280A  B6F0               	btfsc	intcon3,3,c	;volatile
  8191  00280C  0E01               	movlw	1
  8192  00280E  0100               	movlb	0	; () banked
  8193  002810  6F6B               	movwf	WriteFIFO@IRQ1select& (0+255),b
  8194                           
  8195                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
  8196  002812  0E00               	movlw	0
  8197  002814  B8F2               	btfsc	intcon,4,c	;volatile
  8198  002816  0E01               	movlw	1
  8199  002818  6F6C               	movwf	WriteFIFO@IRQ0select& (0+255),b
  8200                           
  8201                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
  8202  00281A  98F2               	bcf	intcon,4,c	;volatile
  8203                           
  8204                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
  8205  00281C  96F0               	bcf	intcon3,3,c	;volatile
  8206                           
  8207                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
  8208  00281E  9A89               	bcf	3977,5,c	;volatile
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
  8212  002820  516A               	movf	WriteFIFO@Data& (0+255),w,b
  8213  002822  ECAD  F015         	call	_SPIPut
  8214                           
  8215                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
  8216  002826  8A89               	bsf	3977,5,c	;volatile
  8217                           
  8218                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
  8219  002828  0100               	movlb	0	; () banked
  8220  00282A  B16B               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
  8221  00282C  D002               	bra	u7735
  8222  00282E  96F0               	bcf	intcon3,3,c	;volatile
  8223  002830  D001               	bra	u7736
  8224  002832                     u7735:
  8225  002832  86F0               	bsf	intcon3,3,c	;volatile
  8226  002834                     u7736:
  8227                           
  8228                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
  8229  002834  0100               	movlb	0	; () banked
  8230  002836  B16C               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
  8231  002838  D002               	bra	u7745
  8232  00283A  98F2               	bcf	intcon,4,c	;volatile
  8233  00283C  D001               	bra	u7746
  8234  00283E                     u7745:
  8235  00283E  88F2               	bsf	intcon,4,c	;volatile
  8236  002840                     u7746:
  8237  002840  0012               	return		;funcret
  8238  002842                     __end_of_WriteFIFO:
  8239                           	opt stack 0
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           intcon2	equ	0xFF1
  8248                           intcon3	equ	0xFF0
  8249                           postinc0	equ	0xFEE
  8250                           wreg	equ	0xFE8
  8251                           indf1	equ	0xFE7
  8252                           postdec1	equ	0xFE5
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           indf2	equ	0xFDF
  8256                           postinc2	equ	0xFDE
  8257                           postdec2	equ	0xFDD
  8258                           fsr2h	equ	0xFDA
  8259                           fsr2l	equ	0xFD9
  8260                           status	equ	0xFD8
  8261                           
  8262 ;; *************** function _SetRFMode *****************
  8263 ;; Defined at:
  8264 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  mode            1    wreg     unsigned char 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  mode            1   14[BANK0 ] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : F/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;Total ram usage:        1 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:   11
  8285 ;; This function calls:
  8286 ;;		_RegisterSet
  8287 ;; This function is called by:
  8288 ;;		_TxPacket
  8289 ;;		_MiMAC_SetChannel
  8290 ;;		_MiMAC_Init
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text32
  8295  002392                     __ptext32:
  8296                           	opt stack 0
  8297  002392                     _SetRFMode:
  8298                           	opt stack 11
  8299                           
  8300                           ;incstack = 0
  8301                           ;SetRFMode@mode stored from wreg
  8302  002392  0100               	movlb	0	; () banked
  8303  002394  6F6E               	movwf	SetRFMode@mode& (0+255),b
  8304                           
  8305                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
  8306  002396  D02C               	goto	l8334
  8307  002398                     l8312:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
  8311  002398  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8312  00239A  0E8E               	movlw	142
  8313  00239C  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8314  00239E  EC66  F013         	call	_RegisterSet	;wreg free
  8315                           
  8316                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
  8317  0023A2  0E80               	movlw	128
  8318  0023A4  0100               	movlb	0	; () banked
  8319  0023A6  6FD8               	movwf	_RF_Mode& (0+255),b
  8320                           
  8321                           ;drv_mrf_miwi_89xa.c: 673: break;
  8322  0023A8  0C80               	retlw	128
  8323  0023AA                     l8316:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
  8327  0023AA  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8328  0023AC  0E6E               	movlw	110
  8329  0023AE  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8330  0023B0  EC66  F013         	call	_RegisterSet	;wreg free
  8331                           
  8332                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
  8333  0023B4  0E60               	movlw	96
  8334  0023B6  0100               	movlb	0	; () banked
  8335  0023B8  6FD8               	movwf	_RF_Mode& (0+255),b
  8336                           
  8337                           ;drv_mrf_miwi_89xa.c: 677: break;
  8338  0023BA  0C60               	retlw	96
  8339  0023BC                     l8320:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
  8343  0023BC  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8344  0023BE  0E4E               	movlw	78
  8345  0023C0  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8346  0023C2  EC66  F013         	call	_RegisterSet	;wreg free
  8347                           
  8348                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
  8349  0023C6  0E40               	movlw	64
  8350  0023C8  0100               	movlb	0	; () banked
  8351  0023CA  6FD8               	movwf	_RF_Mode& (0+255),b
  8352                           
  8353                           ;drv_mrf_miwi_89xa.c: 681: break;
  8354  0023CC  0C40               	retlw	64
  8355  0023CE                     l8324:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
  8359  0023CE  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8360  0023D0  0E2E               	movlw	46
  8361  0023D2  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8362  0023D4  EC66  F013         	call	_RegisterSet	;wreg free
  8363                           
  8364                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
  8365  0023D8  0E20               	movlw	32
  8366  0023DA  0100               	movlb	0	; () banked
  8367  0023DC  6FD8               	movwf	_RF_Mode& (0+255),b
  8368                           
  8369                           ;drv_mrf_miwi_89xa.c: 685: break;
  8370  0023DE  0C20               	retlw	32
  8371  0023E0                     l8328:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
  8375  0023E0  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8376  0023E2  0E0E               	movlw	14
  8377  0023E4  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8378  0023E6  EC66  F013         	call	_RegisterSet	;wreg free
  8379                           
  8380                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
  8381  0023EA  0100               	movlb	0	; () banked
  8382  0023EC  6BD8               	clrf	_RF_Mode& (0+255),b
  8383                           
  8384                           ;drv_mrf_miwi_89xa.c: 689: break;
  8385  0023EE  0012               	return	
  8386  0023F0                     l8334:
  8387  0023F0  0100               	movlb	0	; () banked
  8388  0023F2  516E               	movf	SetRFMode@mode& (0+255),w,b
  8389                           
  8390                           ; Switch size 1, requested type "speed"
  8391                           ; Number of cases is 5, Range of values is 0 to 128
  8392                           ; switch strategies available:
  8393                           ; Name         Instructions Cycles
  8394                           ; simple_byte           16     9 (average)
  8395                           ;	Chosen strategy is simple_byte
  8396  0023F4  E0F5               	bz	l8328
  8397  0023F6  0A20               	xorlw	32	; case 32
  8398  0023F8  E0EA               	bz	l8324
  8399  0023FA  0A60               	xorlw	96	; case 64
  8400  0023FC  E0DF               	bz	l8320
  8401  0023FE  0A20               	xorlw	32	; case 96
  8402  002400  E0D4               	bz	l8316
  8403  002402  0AE0               	xorlw	224	; case 128
  8404  002404  E0C9               	bz	l8312
  8405                           
  8406                           ; BSR set to: 0
  8407  002406  0012               	return		;funcret
  8408  002408                     __end_of_SetRFMode:
  8409                           	opt stack 0
  8410                           tblptru	equ	0xFF8
  8411                           tblptrh	equ	0xFF7
  8412                           tblptrl	equ	0xFF6
  8413                           tablat	equ	0xFF5
  8414                           prodh	equ	0xFF4
  8415                           prodl	equ	0xFF3
  8416                           intcon	equ	0xFF2
  8417                           intcon2	equ	0xFF1
  8418                           intcon3	equ	0xFF0
  8419                           postinc0	equ	0xFEE
  8420                           wreg	equ	0xFE8
  8421                           indf1	equ	0xFE7
  8422                           postdec1	equ	0xFE5
  8423                           fsr1h	equ	0xFE2
  8424                           fsr1l	equ	0xFE1
  8425                           indf2	equ	0xFDF
  8426                           postinc2	equ	0xFDE
  8427                           postdec2	equ	0xFDD
  8428                           fsr2h	equ	0xFDA
  8429                           fsr2l	equ	0xFD9
  8430                           status	equ	0xFD8
  8431                           
  8432 ;; *************** function _RegisterSet *****************
  8433 ;; Defined at:
  8434 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  setting         2   10[BANK0 ] unsigned int 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  IRQ0select      1   13[BANK0 ] unsigned char 
  8439 ;;  IRQ1select      1   12[BANK0 ] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : F/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;Total ram usage:        4 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:   10
  8456 ;; This function calls:
  8457 ;;		_SPIPut
  8458 ;; This function is called by:
  8459 ;;		_TxPacket
  8460 ;;		_MiMAC_SetChannel
  8461 ;;		_MiMAC_Init
  8462 ;;		_SetRFMode
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text33
  8467  0026CC                     __ptext33:
  8468                           	opt stack 0
  8469  0026CC                     _RegisterSet:
  8470                           	opt stack 11
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;incstack = 0
  8477  0026CC  0E00               	movlw	0
  8478  0026CE  B6F0               	btfsc	intcon3,3,c	;volatile
  8479  0026D0  0E01               	movlw	1
  8480  0026D2  6F6C               	movwf	RegisterSet@IRQ1select& (0+255),b
  8481                           
  8482                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
  8483  0026D4  0E00               	movlw	0
  8484  0026D6  B8F2               	btfsc	intcon,4,c	;volatile
  8485  0026D8  0E01               	movlw	1
  8486  0026DA  6F6D               	movwf	RegisterSet@IRQ0select& (0+255),b
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
  8490  0026DC  98F2               	bcf	intcon,4,c	;volatile
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
  8494  0026DE  96F0               	bcf	intcon3,3,c	;volatile
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
  8498  0026E0  928C               	bcf	3980,1,c	;volatile
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
  8502  0026E2  516B               	movf	(RegisterSet@setting+1)& (0+255),w,b
  8503  0026E4  ECAD  F015         	call	_SPIPut
  8504                           
  8505                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
  8506  0026E8  0100               	movlb	0	; () banked
  8507  0026EA  516A               	movf	RegisterSet@setting& (0+255),w,b
  8508  0026EC  ECAD  F015         	call	_SPIPut
  8509                           
  8510                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
  8511  0026F0  828C               	bsf	3980,1,c	;volatile
  8512                           
  8513                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
  8514  0026F2  0100               	movlb	0	; () banked
  8515  0026F4  B16C               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
  8516  0026F6  D002               	bra	u7695
  8517  0026F8  96F0               	bcf	intcon3,3,c	;volatile
  8518  0026FA  D001               	bra	u7696
  8519  0026FC                     u7695:
  8520  0026FC  86F0               	bsf	intcon3,3,c	;volatile
  8521  0026FE                     u7696:
  8522                           
  8523                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
  8524  0026FE  0100               	movlb	0	; () banked
  8525  002700  B16D               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
  8526  002702  D002               	bra	u7705
  8527  002704  98F2               	bcf	intcon,4,c	;volatile
  8528  002706  D001               	bra	u7706
  8529  002708                     u7705:
  8530  002708  88F2               	bsf	intcon,4,c	;volatile
  8531  00270A                     u7706:
  8532  00270A  0012               	return		;funcret
  8533  00270C                     __end_of_RegisterSet:
  8534                           	opt stack 0
  8535                           tblptru	equ	0xFF8
  8536                           tblptrh	equ	0xFF7
  8537                           tblptrl	equ	0xFF6
  8538                           tablat	equ	0xFF5
  8539                           prodh	equ	0xFF4
  8540                           prodl	equ	0xFF3
  8541                           intcon	equ	0xFF2
  8542                           intcon2	equ	0xFF1
  8543                           intcon3	equ	0xFF0
  8544                           postinc0	equ	0xFEE
  8545                           wreg	equ	0xFE8
  8546                           indf1	equ	0xFE7
  8547                           postdec1	equ	0xFE5
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           postdec2	equ	0xFDD
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function _RegisterRead *****************
  8558 ;; Defined at:
  8559 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  address         1    wreg     unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  address         1   10[BANK0 ] unsigned char 
  8564 ;;  IRQ0select      1   13[BANK0 ] unsigned char 
  8565 ;;  IRQ1select      1   12[BANK0 ] unsigned char 
  8566 ;;  value           1   11[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, status,0, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : F/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;Total ram usage:        4 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:   11
  8583 ;; This function calls:
  8584 ;;		_SPIGet
  8585 ;;		_SPIPut
  8586 ;; This function is called by:
  8587 ;;		_TxPacket
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text34
  8592  00263C                     __ptext34:
  8593                           	opt stack 0
  8594  00263C                     _RegisterRead:
  8595                           	opt stack 11
  8596                           
  8597                           ;incstack = 0
  8598                           ;RegisterRead@address stored from wreg
  8599  00263C  0100               	movlb	0	; () banked
  8600  00263E  6F6A               	movwf	RegisterRead@address& (0+255),b
  8601                           
  8602                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
  8603                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
  8604  002640  0E00               	movlw	0
  8605  002642  B6F0               	btfsc	intcon3,3,c	;volatile
  8606  002644  0E01               	movlw	1
  8607  002646  6F6C               	movwf	RegisterRead@IRQ1select& (0+255),b
  8608                           
  8609                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
  8610  002648  0E00               	movlw	0
  8611  00264A  B8F2               	btfsc	intcon,4,c	;volatile
  8612  00264C  0E01               	movlw	1
  8613  00264E  6F6D               	movwf	RegisterRead@IRQ0select& (0+255),b
  8614                           
  8615                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
  8616  002650  98F2               	bcf	intcon,4,c	;volatile
  8617                           
  8618                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
  8619  002652  96F0               	bcf	intcon3,3,c	;volatile
  8620                           
  8621                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
  8622  002654  928C               	bcf	3980,1,c	;volatile
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
  8626  002656  8D6A               	bsf	RegisterRead@address& (0+255),6,b
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
  8630  002658  516A               	movf	RegisterRead@address& (0+255),w,b
  8631  00265A  ECAD  F015         	call	_SPIPut
  8632                           
  8633                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
  8634  00265E  EC35  F016         	call	_SPIGet	;wreg free
  8635  002662  0100               	movlb	0	; () banked
  8636  002664  6F6B               	movwf	RegisterRead@value& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
  8640  002666  828C               	bsf	3980,1,c	;volatile
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
  8644  002668  B16C               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
  8645  00266A  D002               	bra	u7715
  8646  00266C  96F0               	bcf	intcon3,3,c	;volatile
  8647  00266E  D001               	bra	u7716
  8648  002670                     u7715:
  8649  002670  86F0               	bsf	intcon3,3,c	;volatile
  8650  002672                     u7716:
  8651                           
  8652                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
  8653  002672  0100               	movlb	0	; () banked
  8654  002674  B16D               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
  8655  002676  D002               	bra	u7725
  8656  002678  98F2               	bcf	intcon,4,c	;volatile
  8657  00267A  D001               	bra	u7726
  8658  00267C                     u7725:
  8659  00267C  88F2               	bsf	intcon,4,c	;volatile
  8660  00267E                     u7726:
  8661                           
  8662                           ;drv_mrf_miwi_89xa.c: 222: return value;
  8663  00267E  0100               	movlb	0	; () banked
  8664  002680  516B               	movf	RegisterRead@value& (0+255),w,b
  8665                           
  8666                           ; BSR set to: 0
  8667  002682  0012               	return		;funcret
  8668  002684                     __end_of_RegisterRead:
  8669                           	opt stack 0
  8670                           tblptru	equ	0xFF8
  8671                           tblptrh	equ	0xFF7
  8672                           tblptrl	equ	0xFF6
  8673                           tablat	equ	0xFF5
  8674                           prodh	equ	0xFF4
  8675                           prodl	equ	0xFF3
  8676                           intcon	equ	0xFF2
  8677                           intcon2	equ	0xFF1
  8678                           intcon3	equ	0xFF0
  8679                           postinc0	equ	0xFEE
  8680                           wreg	equ	0xFE8
  8681                           indf1	equ	0xFE7
  8682                           postdec1	equ	0xFE5
  8683                           fsr1h	equ	0xFE2
  8684                           fsr1l	equ	0xFE1
  8685                           indf2	equ	0xFDF
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692 ;; *************** function _SPIGet *****************
  8693 ;; Defined at:
  8694 ;;		line 102 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      unsigned char 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        0 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:   10
  8715 ;; This function calls:
  8716 ;;		_SPIPut
  8717 ;; This function is called by:
  8718 ;;		_RegisterRead
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text35
  8723  002C6A                     __ptext35:
  8724                           	opt stack 0
  8725  002C6A                     _SPIGet:
  8726                           	opt stack 11
  8727                           
  8728                           ;spi.c: 123: SPIPut(0x00);
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;incstack = 0
  8732  002C6A  0E00               	movlw	0
  8733  002C6C  ECAD  F015         	call	_SPIPut
  8734                           
  8735                           ;spi.c: 124: return SSP1BUF;
  8736  002C70  50C9               	movf	4041,w,c	;volatile
  8737  002C72  0012               	return		;funcret
  8738  002C74                     __end_of_SPIGet:
  8739                           	opt stack 0
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           intcon2	equ	0xFF1
  8748                           intcon3	equ	0xFF0
  8749                           postinc0	equ	0xFEE
  8750                           wreg	equ	0xFE8
  8751                           indf1	equ	0xFE7
  8752                           postdec1	equ	0xFE5
  8753                           fsr1h	equ	0xFE2
  8754                           fsr1l	equ	0xFE1
  8755                           indf2	equ	0xFDF
  8756                           postinc2	equ	0xFDE
  8757                           postdec2	equ	0xFDD
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function _SPIPut *****************
  8763 ;; Defined at:
  8764 ;;		line 45 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  v               1    wreg     unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  v               1    9[BANK0 ] unsigned char 
  8769 ;;  i               1    0        unsigned char 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;Total ram usage:        1 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    9
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_RegisterSet
  8790 ;;		_RegisterRead
  8791 ;;		_WriteFIFO
  8792 ;;		_SPIGet
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text36
  8797  002B5A                     __ptext36:
  8798                           	opt stack 0
  8799  002B5A                     _SPIPut:
  8800                           	opt stack 12
  8801                           
  8802                           ;incstack = 0
  8803                           ;SPIPut@v stored from wreg
  8804  002B5A  0100               	movlb	0	; () banked
  8805  002B5C  6F69               	movwf	SPIPut@v& (0+255),b
  8806                           
  8807                           ;spi.c: 64: {
  8808                           ;spi.c: 66: uint8_t i;
  8809                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
  8810  002B5E  969E               	bcf	3998,3,c	;volatile
  8811                           
  8812                           ;spi.c: 70: i = SSP1BUF;
  8813  002B60  50C9               	movf	4041,w,c	;volatile
  8814  002B62                     l714:
  8815                           
  8816                           ;spi.c: 73: {
  8817                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
  8818  002B62  9EC6               	bcf	4038,7,c	;volatile
  8819                           
  8820                           ;spi.c: 75: SSP1BUF = v;
  8821  002B64  C069  FFC9         	movff	SPIPut@v,4041	;volatile
  8822                           
  8823                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
  8824  002B68  BEC6               	btfsc	4038,7,c	;volatile
  8825  002B6A  D7FB               	goto	l714
  8826  002B6C                     l716:
  8827  002B6C  A69E               	btfss	3998,3,c	;volatile
  8828  002B6E  D7FE               	goto	l716
  8829                           
  8830                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
  8831  002B70  969E               	bcf	3998,3,c	;volatile
  8832  002B72  0012               	return		;funcret
  8833  002B74                     __end_of_SPIPut:
  8834                           	opt stack 0
  8835                           tblptru	equ	0xFF8
  8836                           tblptrh	equ	0xFF7
  8837                           tblptrl	equ	0xFF6
  8838                           tablat	equ	0xFF5
  8839                           prodh	equ	0xFF4
  8840                           prodl	equ	0xFF3
  8841                           intcon	equ	0xFF2
  8842                           intcon2	equ	0xFF1
  8843                           intcon3	equ	0xFF0
  8844                           postinc0	equ	0xFEE
  8845                           wreg	equ	0xFE8
  8846                           indf1	equ	0xFE7
  8847                           postdec1	equ	0xFE5
  8848                           fsr1h	equ	0xFE2
  8849                           fsr1l	equ	0xFE1
  8850                           indf2	equ	0xFDF
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           fsr2h	equ	0xFDA
  8854                           fsr2l	equ	0xFD9
  8855                           status	equ	0xFD8
  8856                           
  8857 ;; *************** function _DELAY_10us *****************
  8858 ;; Defined at:
  8859 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  tenMicroSeco    4    9[BANK0 ] unsigned long 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  cyclesRequir    4   21[BANK0 ] volatile long 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0, prodl, prodh
  8868 ;; Tracked objects:
  8869 ;;		On entry : F/0
  8870 ;;		On exit  : F/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;Total ram usage:       16 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    9
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_TxPacket
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text37
  8888  001BAA                     __ptext37:
  8889                           	opt stack 0
  8890  001BAA                     _DELAY_10us:
  8891                           	opt stack 13
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;delay.c: 60: else
  8895                           ;delay.c: 61: {
  8896                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
  8900                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
  8901                           
  8902                           ;incstack = 0
  8903  001BAA  C069  F06D         	movff	DELAY_10us@tenMicroSecondCounter,??_DELAY_10us
  8904  001BAE  C06A  F06E         	movff	DELAY_10us@tenMicroSecondCounter+1,??_DELAY_10us+1
  8905  001BB2  C06B  F06F         	movff	DELAY_10us@tenMicroSecondCounter+2,??_DELAY_10us+2
  8906  001BB6  C06C  F070         	movff	DELAY_10us@tenMicroSecondCounter+3,??_DELAY_10us+3
  8907  001BBA  0E28               	movlw	40
  8908  001BBC  036D               	mulwf	??_DELAY_10us& (0+255),b
  8909  001BBE  CFF3 F071          	movff	prodl,??_DELAY_10us+4
  8910  001BC2  CFF4 F072          	movff	prodh,??_DELAY_10us+5
  8911  001BC6  6B73               	clrf	(??_DELAY_10us+6)& (0+255),b
  8912  001BC8  6B74               	clrf	(??_DELAY_10us+7)& (0+255),b
  8913  001BCA  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
  8914  001BCC  50F3               	movf	prodl,w,c
  8915  001BCE  2772               	addwf	(??_DELAY_10us+5)& (0+255),f,b
  8916  001BD0  50F4               	movf	prodh,w,c
  8917  001BD2  2373               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
  8918  001BD4  0E00               	movlw	0
  8919  001BD6  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
  8920  001BD8  036D               	mulwf	??_DELAY_10us& (0+255),b
  8921  001BDA  50F3               	movf	prodl,w,c
  8922  001BDC  2772               	addwf	(??_DELAY_10us+5)& (0+255),f,b
  8923  001BDE  50F4               	movf	prodh,w,c
  8924  001BE0  2373               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
  8925  001BE2  0E00               	movlw	0
  8926  001BE4  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
  8927  001BE6  0E28               	movlw	40
  8928  001BE8  036F               	mulwf	(??_DELAY_10us+2)& (0+255),b
  8929  001BEA  50F3               	movf	prodl,w,c
  8930  001BEC  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
  8931  001BEE  50F4               	movf	prodh,w,c
  8932  001BF0  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
  8933  001BF2  0E00               	movlw	0
  8934  001BF4  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
  8935  001BF6  50F3               	movf	prodl,w,c
  8936  001BF8  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
  8937  001BFA  50F4               	movf	prodh,w,c
  8938  001BFC  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
  8939  001BFE  0E00               	movlw	0
  8940  001C00  036D               	mulwf	??_DELAY_10us& (0+255),b
  8941  001C02  50F3               	movf	prodl,w,c
  8942  001C04  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
  8943  001C06  50F4               	movf	prodh,w,c
  8944  001C08  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
  8945  001C0A  0E28               	movlw	40
  8946  001C0C  0370               	mulwf	(??_DELAY_10us+3)& (0+255),b
  8947  001C0E  50F3               	movf	prodl,w,c
  8948  001C10  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
  8949  001C12  0E00               	movlw	0
  8950  001C14  036F               	mulwf	(??_DELAY_10us+2)& (0+255),b
  8951  001C16  50F3               	movf	prodl,w,c
  8952  001C18  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
  8953  001C1A  0E00               	movlw	0
  8954  001C1C  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
  8955  001C1E  50F3               	movf	prodl,w,c
  8956  001C20  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
  8957  001C22  0E00               	movlw	0
  8958  001C24  036D               	mulwf	??_DELAY_10us& (0+255),b
  8959  001C26  50F3               	movf	prodl,w,c
  8960  001C28  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
  8961  001C2A  C071  F075         	movff	??_DELAY_10us+4,DELAY_10us@cyclesRequiredForEntireDelay	;volatile
  8962  001C2E  C072  F076         	movff	??_DELAY_10us+5,DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
  8963  001C32  C073  F077         	movff	??_DELAY_10us+6,DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
  8964  001C36  C074  F078         	movff	??_DELAY_10us+7,DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
  8968  001C3A  0E51               	movlw	81
  8969  001C3C  2775               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
  8970  001C3E  0EFF               	movlw	255
  8971  001C40  2376               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
  8972  001C42  2377               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
  8973  001C44  2378               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
  8977  001C46  BF78               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
  8978  001C48  0CFF               	retlw	255
  8979  001C4A  5178               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
  8980  001C4C  1177               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
  8981  001C4E  1176               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
  8982  001C50  E10C               	bnz	l593
  8983  001C52  0E2E               	movlw	46
  8984  001C54  5D75               	subwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
  8985  001C56  E209               	bc	l593
  8986  001C58  0012               	return	
  8987  001C5A                     l594:
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;delay.c: 80: {
  8991                           ;delay.c: 81: __nop();
  8992  001C5A  F000               	nop	
  8993                           
  8994                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
  8995  001C5C  0ED6               	movlw	214
  8996  001C5E  0100               	movlb	0	; () banked
  8997  001C60  2775               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
  8998  001C62  0EFF               	movlw	255
  8999  001C64  2376               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
  9000  001C66  2377               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
  9001  001C68  2378               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
  9002  001C6A                     l593:
  9003                           
  9004                           ; BSR set to: 0
  9005  001C6A  BF78               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
  9006  001C6C  0012               	return	
  9007  001C6E  5178               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
  9008  001C70  1177               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
  9009  001C72  1176               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
  9010  001C74  E1F2               	bnz	l594
  9011  001C76  0575               	decf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
  9012  001C78  E2F0               	bc	l594
  9013                           
  9014                           ; BSR set to: 0
  9015  001C7A  0012               	return		;funcret
  9016  001C7C                     __end_of_DELAY_10us:
  9017                           	opt stack 0
  9018                           tblptru	equ	0xFF8
  9019                           tblptrh	equ	0xFF7
  9020                           tblptrl	equ	0xFF6
  9021                           tablat	equ	0xFF5
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           intcon	equ	0xFF2
  9025                           intcon2	equ	0xFF1
  9026                           intcon3	equ	0xFF0
  9027                           postinc0	equ	0xFEE
  9028                           wreg	equ	0xFE8
  9029                           indf1	equ	0xFE7
  9030                           postdec1	equ	0xFE5
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function _MiMAC_ReceivedPacket *****************
  9041 ;; Defined at:
  9042 ;;		line 851 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  PayloadIndex    1   31[BANK0 ] unsigned char 
  9047 ;;  j               1    0        unsigned char 
  9048 ;;  currentTick     4   27[BANK0 ] struct _MIWI_TICK
  9049 ;;  i               1   32[BANK0 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      unsigned char 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : F/0
  9056 ;;		On exit  : F/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;Total ram usage:       14 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   10
  9066 ;; This function calls:
  9067 ;;		_MiWi_TickGet
  9068 ;; This function is called by:
  9069 ;;		_P2PTasks
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text38
  9074  0015A8                     __ptext38:
  9075                           	opt stack 0
  9076  0015A8                     _MiMAC_ReceivedPacket:
  9077                           	opt stack 15
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
  9081                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
  9082                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;incstack = 0
  9086  0015A8  6B80               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9087  0015AA                     l8674:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;drv_mrf_miwi_89xa.c: 859: {
  9091                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
  9092  0015AA  ECAB  F012         	call	_MiWi_TickGet	;wreg free
  9093  0015AE  C069  F07B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
  9094  0015B2  C06A  F07C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
  9095  0015B6  C06B  F07D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
  9096  0015BA  C06C  F07E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
  9100                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
  9101  0015BE  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9102  0015C0  0D06               	mullw	6
  9103  0015C2  0E32               	movlw	low _AckInfo
  9104  0015C4  24F3               	addwf	prodl,w,c
  9105  0015C6  6ED9               	movwf	fsr2l,c
  9106  0015C8  0E01               	movlw	high _AckInfo
  9107  0015CA  20F4               	addwfc	prodh,w,c
  9108  0015CC  6EDA               	movwf	fsr2h,c
  9109  0015CE  50DF               	movf	indf2,w,c
  9110  0015D0  E03F               	bz	l8684
  9111                           
  9112                           ; BSR set to: 0
  9113  0015D2  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9114  0015D4  0D06               	mullw	6
  9115  0015D6  0E34               	movlw	low (_AckInfo+2)
  9116  0015D8  24F3               	addwf	prodl,w,c
  9117  0015DA  6ED9               	movwf	fsr2l,c
  9118  0015DC  0E01               	movlw	high (_AckInfo+2)
  9119  0015DE  20F4               	addwfc	prodh,w,c
  9120  0015E0  6EDA               	movwf	fsr2h,c
  9121  0015E2  517B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9122  0015E4  5CDE               	subwf	postinc2,w,c
  9123  0015E6  517C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9124  0015E8  58DE               	subwfb	postinc2,w,c
  9125  0015EA  517D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9126  0015EC  58DE               	subwfb	postinc2,w,c
  9127  0015EE  517E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9128  0015F0  58DE               	subwfb	postinc2,w,c
  9129  0015F2  E22E               	bc	l8684
  9130                           
  9131                           ; BSR set to: 0
  9132  0015F4  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9133  0015F6  0D06               	mullw	6
  9134  0015F8  0E34               	movlw	low (_AckInfo+2)
  9135  0015FA  24F3               	addwf	prodl,w,c
  9136  0015FC  6ED9               	movwf	fsr2l,c
  9137  0015FE  0E01               	movlw	high (_AckInfo+2)
  9138  001600  20F4               	addwfc	prodh,w,c
  9139  001602  6EDA               	movwf	fsr2h,c
  9140  001604  CFDE F073          	movff	postinc2,??_MiMAC_ReceivedPacket
  9141  001608  CFDE F074          	movff	postinc2,??_MiMAC_ReceivedPacket+1
  9142  00160C  CFDE F075          	movff	postinc2,??_MiMAC_ReceivedPacket+2
  9143  001610  CFDE F076          	movff	postinc2,??_MiMAC_ReceivedPacket+3
  9144  001614  5173               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9145  001616  5D7B               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9146  001618  6F77               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
  9147  00161A  5174               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9148  00161C  597C               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9149  00161E  6F78               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
  9150  001620  5175               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
  9151  001622  597D               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9152  001624  6F79               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
  9153  001626  5176               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
  9154  001628  597E               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9155  00162A  6F7A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
  9156  00162C  517A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
  9157  00162E  E107               	bnz	u8240
  9158  001630  0E21               	movlw	33
  9159  001632  5D77               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
  9160  001634  0EA1               	movlw	161
  9161  001636  5978               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
  9162  001638  0E07               	movlw	7
  9163  00163A  5979               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
  9164  00163C  E309               	bnc	l8684
  9165  00163E                     u8240:
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;drv_mrf_miwi_89xa.c: 863: {
  9169                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
  9170  00163E  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9171  001640  0D06               	mullw	6
  9172  001642  0E32               	movlw	low _AckInfo
  9173  001644  24F3               	addwf	prodl,w,c
  9174  001646  6ED9               	movwf	fsr2l,c
  9175  001648  0E01               	movlw	high _AckInfo
  9176  00164A  20F4               	addwfc	prodh,w,c
  9177  00164C  6EDA               	movwf	fsr2h,c
  9178  00164E  6ADF               	clrf	indf2,c
  9179  001650                     l8684:
  9180                           
  9181                           ; BSR set to: 0
  9182  001650  2B80               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9183                           
  9184                           ; BSR set to: 0
  9185  001652  0E04               	movlw	4
  9186  001654  6580               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9187  001656  D7A9               	goto	l8674
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;drv_mrf_miwi_89xa.c: 865: }
  9191                           ;drv_mrf_miwi_89xa.c: 866: }
  9192                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
  9193  001658  29DA               	incf	_ReceivedBankIndex& (0+255),w,b
  9194  00165A  E001               	bz	l159
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;drv_mrf_miwi_89xa.c: 870: {
  9198                           ;drv_mrf_miwi_89xa.c: 871: return 0;
  9199  00165C  0C00               	retlw	0
  9200  00165E                     l159:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;drv_mrf_miwi_89xa.c: 872: }
  9204                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
  9205  00165E  6B80               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9206  001660                     l8698:
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;drv_mrf_miwi_89xa.c: 875: {
  9210                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
  9211  001660  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9212  001662  0D34               	mullw	52
  9213  001664  0E50               	movlw	low _RxPacket
  9214  001666  24F3               	addwf	prodl,w,c
  9215  001668  6ED9               	movwf	fsr2l,c
  9216  00166A  0E01               	movlw	high _RxPacket
  9217  00166C  20F4               	addwfc	prodh,w,c
  9218  00166E  6EDA               	movwf	fsr2h,c
  9219  001670  A0DF               	btfss	indf2,0,c
  9220  001672  D055               	goto	l8726
  9221                           
  9222                           ; BSR set to: 1
  9223                           ;drv_mrf_miwi_89xa.c: 877: {
  9224                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
  9225                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
  9226                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
  9227  001674  0100               	movlb	0	; () banked
  9228  001676  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9229  001678  0D34               	mullw	52
  9230  00167A  0E51               	movlw	low (_RxPacket+1)
  9231  00167C  24F3               	addwf	prodl,w,c
  9232  00167E  6ED9               	movwf	fsr2l,c
  9233  001680  0E01               	movlw	high (_RxPacket+1)
  9234  001682  20F4               	addwfc	prodh,w,c
  9235  001684  6EDA               	movwf	fsr2h,c
  9236  001686  50DF               	movf	indf2,w,c
  9237  001688  6FBC               	movwf	_MACRxPacket& (0+255),b
  9238                           
  9239                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
  9240  00168A  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9241  00168C  0D34               	mullw	52
  9242  00168E  0E83               	movlw	low (_RxPacket+51)
  9243  001690  24F3               	addwf	prodl,w,c
  9244  001692  6ED9               	movwf	fsr2l,c
  9245  001694  0E01               	movlw	high (_RxPacket+51)
  9246  001696  20F4               	addwfc	prodh,w,c
  9247  001698  6EDA               	movwf	fsr2h,c
  9248  00169A  50DF               	movf	indf2,w,c
  9249  00169C  6FC1               	movwf	(_MACRxPacket+5)& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
  9253  00169E  0E02               	movlw	2
  9254  0016A0  6F7F               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
  9258  0016A2  ADBC               	btfss	_MACRxPacket& (0+255),6,b
  9259  0016A4  D005               	goto	l8708
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;drv_mrf_miwi_89xa.c: 886: {
  9263                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9264  0016A6  31CC               	rrcf	_MACInitParams& (0+255),w,b
  9265  0016A8  32E8               	rrcf	wreg,f,c
  9266  0016AA  32E8               	rrcf	wreg,f,c
  9267  0016AC  0B0F               	andlw	15
  9268  0016AE  277F               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9269  0016B0                     l8708:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;drv_mrf_miwi_89xa.c: 888: }
  9273                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
  9274  0016B0  AFBC               	btfss	_MACRxPacket& (0+255),7,b
  9275  0016B2  D019               	goto	l165
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;drv_mrf_miwi_89xa.c: 891: {
  9279                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
  9280  0016B4  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9281  0016B6  0D34               	mullw	52
  9282  0016B8  0E50               	movlw	low _RxPacket
  9283  0016BA  6F73               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9284  0016BC  0E01               	movlw	high _RxPacket
  9285  0016BE  6F74               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9286  0016C0  2B73               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9287  0016C2  0E00               	movlw	0
  9288  0016C4  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9289  0016C6  50F3               	movf	prodl,w,c
  9290  0016C8  2773               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9291  0016CA  50F4               	movf	prodh,w,c
  9292  0016CC  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9293  0016CE  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9294  0016D0  2573               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9295  0016D2  6FBD               	movwf	(_MACRxPacket+1)& (0+255),b
  9296  0016D4  0E00               	movlw	0
  9297  0016D6  2174               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9298  0016D8  6FBE               	movwf	(_MACRxPacket+2)& (0+255),b
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9302  0016DA  31CC               	rrcf	_MACInitParams& (0+255),w,b
  9303  0016DC  32E8               	rrcf	wreg,f,c
  9304  0016DE  32E8               	rrcf	wreg,f,c
  9305  0016E0  0B0F               	andlw	15
  9306  0016E2  277F               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9307                           
  9308                           ;drv_mrf_miwi_89xa.c: 894: }
  9309  0016E4  D002               	goto	l8714
  9310  0016E6                     l165:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;drv_mrf_miwi_89xa.c: 895: else
  9314                           ;drv_mrf_miwi_89xa.c: 896: {
  9315                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
  9316  0016E6  6BBD               	clrf	(_MACRxPacket+1)& (0+255),b
  9317  0016E8  6BBE               	clrf	(_MACRxPacket+2)& (0+255),b
  9318  0016EA                     l8714:
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;drv_mrf_miwi_89xa.c: 898: }
  9322                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
  9323  0016EA  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9324  0016EC  5FC1               	subwf	(_MACRxPacket+5)& (0+255),f,b
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
  9328  0016EE  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9329  0016F0  0D34               	mullw	52
  9330  0016F2  0E50               	movlw	low _RxPacket
  9331  0016F4  6F73               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9332  0016F6  0E01               	movlw	high _RxPacket
  9333  0016F8  6F74               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9334  0016FA  2B73               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9335  0016FC  0E00               	movlw	0
  9336  0016FE  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9337  001700  50F3               	movf	prodl,w,c
  9338  001702  2773               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9339  001704  50F4               	movf	prodh,w,c
  9340  001706  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9341  001708  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9342  00170A  2573               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9343  00170C  6FBF               	movwf	(_MACRxPacket+3)& (0+255),b
  9344  00170E  0E00               	movlw	0
  9345  001710  2174               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9346  001712  6FC0               	movwf	(_MACRxPacket+4)& (0+255),b
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
  9350  001714  C0D9  F0C2         	movff	_RSSILock,_MACRxPacket+6
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
  9354  001718  C080  F0DA         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
  9358  00171C  0C01               	retlw	1
  9359  00171E                     l8726:
  9360                           
  9361                           ; BSR set to: 1
  9362  00171E  0100               	movlb	0	; () banked
  9363  001720  2B80               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9364                           
  9365                           ; BSR set to: 0
  9366  001722  0E01               	movlw	1
  9367  001724  6580               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9368  001726  D79C               	goto	l8698
  9369  001728  0C00               	retlw	0
  9370  00172A                     __end_of_MiMAC_ReceivedPacket:
  9371                           	opt stack 0
  9372                           tblptru	equ	0xFF8
  9373                           tblptrh	equ	0xFF7
  9374                           tblptrl	equ	0xFF6
  9375                           tablat	equ	0xFF5
  9376                           prodh	equ	0xFF4
  9377                           prodl	equ	0xFF3
  9378                           intcon	equ	0xFF2
  9379                           intcon2	equ	0xFF1
  9380                           intcon3	equ	0xFF0
  9381                           postinc0	equ	0xFEE
  9382                           wreg	equ	0xFE8
  9383                           indf1	equ	0xFE7
  9384                           postdec1	equ	0xFE5
  9385                           fsr1h	equ	0xFE2
  9386                           fsr1l	equ	0xFE1
  9387                           indf2	equ	0xFDF
  9388                           postinc2	equ	0xFDE
  9389                           postdec2	equ	0xFDD
  9390                           fsr2h	equ	0xFDA
  9391                           fsr2l	equ	0xFD9
  9392                           status	equ	0xFD8
  9393                           
  9394 ;; *************** function _MiWi_TickGet *****************
  9395 ;; Defined at:
  9396 ;;		line 103 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  currentTime     4   15[BANK0 ] struct _MIWI_TICK
  9401 ;;  failureCount    1   14[BANK0 ] unsigned char 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  4    9[BANK0 ] struct _MIWI_TICK
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : F/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9414 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9415 ;;Total ram usage:       10 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    9
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_TxPacket
  9422 ;;		_MiMAC_ReceivedPacket
  9423 ;;		_P2PTasks
  9424 ;;		_MiApp_StartConnection
  9425 ;;		_MiApp_EstablishConnection
  9426 ;;		_ButtonPressed
  9427 ;;		_freezer_feature
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text39
  9432  002556                     __ptext39:
  9433                           	opt stack 0
  9434  002556                     _MiWi_TickGet:
  9435                           	opt stack 20
  9436                           
  9437                           ;symbol.c: 105: MIWI_TICK currentTime;
  9438                           ;symbol.c: 108: uint8_t failureCounter;
  9439                           ;symbol.c: 111: PIE1bits.TMR1IE = 0;
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;incstack = 0
  9443  002556  909D               	bcf	3997,0,c	;volatile
  9444                           
  9445                           ;symbol.c: 114: currentTime.byte.b2 = 0;
  9446  002558  0100               	movlb	0	; () banked
  9447  00255A  6B71               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
  9448                           
  9449                           ;symbol.c: 115: currentTime.byte.b3 = 0;
  9450  00255C  6B72               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
  9451                           
  9452                           ;symbol.c: 117: failureCounter = 0;
  9453  00255E  6B6E               	clrf	MiWi_TickGet@failureCounter& (0+255),b
  9454  002560                     l755:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;symbol.c: 120: {
  9458                           ;symbol.c: 121: currentTime.byte.b0 = TMR1L;
  9459  002560  CFCE F06F          	movff	4046,MiWi_TickGet@currentTime	;volatile
  9460                           
  9461                           ;symbol.c: 122: currentTime.byte.b1 = TMR1H;
  9462  002564  CFCF F070          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;symbol.c: 123: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
  9466  002568  296F               	incf	MiWi_TickGet@currentTime& (0+255),w,b
  9467  00256A  E108               	bnz	l758
  9468  00256C  2970               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
  9469  00256E  E106               	bnz	l758
  9470                           
  9471                           ; BSR set to: 0
  9472  002570  2B6E               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
  9473  002572  056E               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
  9474  002574  6F6D               	movwf	??_MiWi_TickGet& (0+255),b
  9475  002576  0E02               	movlw	2
  9476  002578  656D               	cpfsgt	??_MiWi_TickGet& (0+255),b
  9477  00257A  D7F2               	goto	l755
  9478  00257C                     l758:
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;symbol.c: 127: if(PIR1bits.TMR1IF)
  9482  00257C  A09E               	btfss	3998,0,c	;volatile
  9483  00257E  D004               	goto	l8348
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;symbol.c: 128: {
  9487                           ;symbol.c: 130: {
  9488                           ;symbol.c: 133: currentTime.byte.b2++;
  9489  002580  2B71               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;symbol.c: 134: if(timerExtension1 == 0xFF)
  9493  002582  2846               	incf	_timerExtension1,w,c	;volatile
  9494  002584  E101               	bnz	l8348
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;symbol.c: 135: {
  9498                           ;symbol.c: 136: currentTime.byte.b3++;
  9499  002586  2B72               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
  9500  002588                     l8348:
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;symbol.c: 137: }
  9504                           ;symbol.c: 138: }
  9505                           ;symbol.c: 139: }
  9506                           ;symbol.c: 142: currentTime.byte.b2 += timerExtension1;
  9507  002588  5046               	movf	_timerExtension1,w,c	;volatile
  9508  00258A  2771               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;symbol.c: 143: currentTime.byte.b3 += timerExtension2;
  9512  00258C  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
  9513  00258E  2772               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;symbol.c: 146: PIE1bits.TMR1IE = 1;
  9517  002590  809D               	bsf	3997,0,c	;volatile
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;symbol.c: 148: return currentTime;
  9521  002592  C06F  F069         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
  9522  002596  C070  F06A         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
  9523  00259A  C071  F06B         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
  9524  00259E  C072  F06C         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
  9525                           
  9526                           ; BSR set to: 0
  9527  0025A2  0012               	return		;funcret
  9528  0025A4                     __end_of_MiWi_TickGet:
  9529                           	opt stack 0
  9530                           tblptru	equ	0xFF8
  9531                           tblptrh	equ	0xFF7
  9532                           tblptrl	equ	0xFF6
  9533                           tablat	equ	0xFF5
  9534                           prodh	equ	0xFF4
  9535                           prodl	equ	0xFF3
  9536                           intcon	equ	0xFF2
  9537                           intcon2	equ	0xFF1
  9538                           intcon3	equ	0xFF0
  9539                           postinc0	equ	0xFEE
  9540                           wreg	equ	0xFE8
  9541                           indf1	equ	0xFE7
  9542                           postdec1	equ	0xFE5
  9543                           fsr1h	equ	0xFE2
  9544                           fsr1l	equ	0xFE1
  9545                           indf2	equ	0xFDF
  9546                           postinc2	equ	0xFDE
  9547                           postdec2	equ	0xFDD
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           
  9552 ;; *************** function _AddConnection *****************
  9553 ;; Defined at:
  9554 ;;		line 2535 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  i               1   23[BANK0 ] unsigned char 
  9559 ;;  connectionSl    1   22[BANK0 ] unsigned char 
  9560 ;;  status          1   21[BANK0 ] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      unsigned char 
  9563 ;; Registers used:
  9564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : E/0
  9567 ;;		On exit  : F/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9571 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9573 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;Total ram usage:        7 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:   12
  9577 ;; This function calls:
  9578 ;;		_EEPROM_Write
  9579 ;;		_Total_Connections
  9580 ;;		_isSameAddress
  9581 ;; This function is called by:
  9582 ;;		_P2PTasks
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text40
  9587  00172A                     __ptext40:
  9588                           	opt stack 0
  9589  00172A                     _AddConnection:
  9590                           	opt stack 13
  9591                           
  9592                           ;miwi_p2p.c: 2537: uint8_t i;
  9593                           ;miwi_p2p.c: 2538: uint8_t status = 0x00;
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;incstack = 0
  9597  00172A  0100               	movlb	0	; () banked
  9598  00172C  6B75               	clrf	AddConnection@status& (0+255),b
  9599                           
  9600                           ;miwi_p2p.c: 2539: uint8_t connectionSlot = 0xFF;
  9601  00172E  6976               	setf	AddConnection@connectionSlot& (0+255),b
  9602                           
  9603                           ; BSR set to: 0
  9604                           ;miwi_p2p.c: 2544: if( rxMessage.PayloadSize < 3 )
  9605  001730  0E03               	movlw	3
  9606  001732  61B9               	cpfslt	(_rxMessage+7)& (0+255),b
  9607  001734  D001               	goto	l539
  9608  001736  0C02               	retlw	2
  9609  001738                     l539:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;miwi_p2p.c: 2547: }
  9613                           ;miwi_p2p.c: 2551: for(i = 0; i < 30; i++)
  9614  001738  6B77               	clrf	AddConnection@i& (0+255),b
  9615  00173A                     l8752:
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;miwi_p2p.c: 2552: {
  9619                           ;miwi_p2p.c: 2554: if( ConnectionTable[i].status.bits.isValid )
  9620  00173A  5177               	movf	AddConnection@i& (0+255),w,b
  9621  00173C  0D0A               	mullw	10
  9622  00173E  0E51               	movlw	low (_ConnectionTable+8)
  9623  001740  24F3               	addwf	prodl,w,c
  9624  001742  6ED9               	movwf	fsr2l,c
  9625  001744  0E02               	movlw	high (_ConnectionTable+8)
  9626  001746  20F4               	addwfc	prodh,w,c
  9627  001748  6EDA               	movwf	fsr2h,c
  9628  00174A  AEDF               	btfss	indf2,7,c
  9629  00174C  D015               	goto	l8760
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;miwi_p2p.c: 2555: {
  9633                           ;miwi_p2p.c: 2557: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
  9634  00174E  C0B5  F069         	movff	_rxMessage+3,isSameAddress@Address1
  9635  001752  C0B6  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
  9636  001756  5177               	movf	AddConnection@i& (0+255),w,b
  9637  001758  0D0A               	mullw	10
  9638  00175A  0E49               	movlw	low _ConnectionTable
  9639  00175C  24F3               	addwf	prodl,w,c
  9640  00175E  6F6B               	movwf	isSameAddress@Address2& (0+255),b
  9641  001760  0E02               	movlw	high _ConnectionTable
  9642  001762  20F4               	addwfc	prodh,w,c
  9643  001764  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
  9644  001766  ECD3  F014         	call	_isSameAddress	;wreg free
  9645  00176A  0900               	iorlw	0
  9646  00176C  E009               	bz	l8764
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;miwi_p2p.c: 2558: {
  9650                           ;miwi_p2p.c: 2559: connectionSlot = i;
  9651  00176E  C077  F076         	movff	AddConnection@i,AddConnection@connectionSlot
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;miwi_p2p.c: 2560: status = 0x01;
  9655  001772  0E01               	movlw	1
  9656  001774  6F75               	movwf	AddConnection@status& (0+255),b
  9657                           
  9658                           ;miwi_p2p.c: 2561: break;
  9659  001776  D008               	goto	l8768
  9660  001778                     l8760:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;miwi_p2p.c: 2564: else if( connectionSlot == 0xFF )
  9664  001778  2976               	incf	AddConnection@connectionSlot& (0+255),w,b
  9665  00177A  E102               	bnz	l8764
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;miwi_p2p.c: 2565: {
  9669                           ;miwi_p2p.c: 2567: connectionSlot = i;
  9670  00177C  C077  F076         	movff	AddConnection@i,AddConnection@connectionSlot
  9671  001780                     l8764:
  9672                           
  9673                           ; BSR set to: 0
  9674  001780  2B77               	incf	AddConnection@i& (0+255),f,b
  9675                           
  9676                           ; BSR set to: 0
  9677  001782  0E1D               	movlw	29
  9678  001784  6577               	cpfsgt	AddConnection@i& (0+255),b
  9679  001786  D7D9               	goto	l8752
  9680  001788                     l8768:
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;miwi_p2p.c: 2568: }
  9684                           ;miwi_p2p.c: 2569: }
  9685                           ;miwi_p2p.c: 2571: if( connectionSlot == 0xFF )
  9686  001788  2976               	incf	AddConnection@connectionSlot& (0+255),w,b
  9687  00178A  E101               	bnz	l8776
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;miwi_p2p.c: 2572: {
  9691                           ;miwi_p2p.c: 2573: return 0xF1;
  9692  00178C  0CF1               	retlw	241
  9693  00178E                     l8776:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;miwi_p2p.c: 2575: else
  9697                           ;miwi_p2p.c: 2576: {
  9698                           ;miwi_p2p.c: 2577: if( ConnMode >= 0x01 )
  9699  00178E  51F4               	movf	_ConnMode& (0+255),w,b
  9700  001790  E003               	bz	l549
  9701  001792                     l8778:
  9702                           
  9703                           ;miwi_p2p.c: 2578: {
  9704                           ;miwi_p2p.c: 2579: return status;
  9705  001792  0100               	movlb	0	; () banked
  9706  001794  5175               	movf	AddConnection@status& (0+255),w,b
  9707  001796  0012               	return	
  9708  001798                     l549:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;miwi_p2p.c: 2580: }
  9712                           ;miwi_p2p.c: 2581: MyindexinPC = connectionSlot;
  9713  001798  C076  F0D4         	movff	AddConnection@connectionSlot,_MyindexinPC
  9714                           
  9715                           ;miwi_p2p.c: 2583: for(i = 0; i < 8; i++)
  9716  00179C  6B77               	clrf	AddConnection@i& (0+255),b
  9717  00179E                     l8786:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;miwi_p2p.c: 2584: {
  9721                           ;miwi_p2p.c: 2585: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
  9722  00179E  5177               	movf	AddConnection@i& (0+255),w,b
  9723  0017A0  25B5               	addwf	(_rxMessage+3)& (0+255),w,b
  9724  0017A2  6ED9               	movwf	fsr2l,c
  9725  0017A4  0E00               	movlw	0
  9726  0017A6  21B6               	addwfc	(_rxMessage+4)& (0+255),w,b
  9727  0017A8  6EDA               	movwf	fsr2h,c
  9728  0017AA  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
  9729  0017AC  0D0A               	mullw	10
  9730  0017AE  0E49               	movlw	low _ConnectionTable
  9731  0017B0  6F71               	movwf	??_AddConnection& (0+255),b
  9732  0017B2  0E02               	movlw	high _ConnectionTable
  9733  0017B4  6F72               	movwf	(??_AddConnection+1)& (0+255),b
  9734  0017B6  50F3               	movf	prodl,w,c
  9735  0017B8  2771               	addwf	??_AddConnection& (0+255),f,b
  9736  0017BA  50F4               	movf	prodh,w,c
  9737  0017BC  2372               	addwfc	(??_AddConnection+1)& (0+255),f,b
  9738  0017BE  5177               	movf	AddConnection@i& (0+255),w,b
  9739  0017C0  2571               	addwf	??_AddConnection& (0+255),w,b
  9740  0017C2  6EE1               	movwf	fsr1l,c
  9741  0017C4  0E00               	movlw	0
  9742  0017C6  2172               	addwfc	(??_AddConnection+1)& (0+255),w,b
  9743  0017C8  6EE2               	movwf	fsr1h,c
  9744  0017CA  CFDF FFE7          	movff	indf2,indf1
  9745                           
  9746                           ; BSR set to: 0
  9747  0017CE  2B77               	incf	AddConnection@i& (0+255),f,b
  9748                           
  9749                           ; BSR set to: 0
  9750  0017D0  0E07               	movlw	7
  9751  0017D2  6577               	cpfsgt	AddConnection@i& (0+255),b
  9752  0017D4  D7E4               	goto	l8786
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;miwi_p2p.c: 2586: }
  9756                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.isValid = 1;
  9757  0017D6  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
  9758  0017D8  0D0A               	mullw	10
  9759  0017DA  0E51               	movlw	low (_ConnectionTable+8)
  9760  0017DC  24F3               	addwf	prodl,w,c
  9761  0017DE  6ED9               	movwf	fsr2l,c
  9762  0017E0  0E02               	movlw	high (_ConnectionTable+8)
  9763  0017E2  20F4               	addwfc	prodh,w,c
  9764  0017E4  6EDA               	movwf	fsr2h,c
  9765  0017E6  8EDF               	bsf	indf2,7,c
  9766                           
  9767                           ;miwi_p2p.c: 2590: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
  9768  0017E8  EE20 F002          	lfsr	2,2
  9769  0017EC  51B7               	movf	(_rxMessage+5)& (0+255),w,b
  9770  0017EE  26D9               	addwf	fsr2l,f,c
  9771  0017F0  51B8               	movf	(_rxMessage+6)& (0+255),w,b
  9772  0017F2  22DA               	addwfc	fsr2h,f,c
  9773  0017F4  50DF               	movf	indf2,w,c
  9774  0017F6  6F71               	movwf	??_AddConnection& (0+255),b
  9775  0017F8  0E01               	movlw	1
  9776  0017FA  1771               	andwf	??_AddConnection& (0+255),f,b
  9777  0017FC  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
  9778  0017FE  0D0A               	mullw	10
  9779  001800  0E51               	movlw	low (_ConnectionTable+8)
  9780  001802  24F3               	addwf	prodl,w,c
  9781  001804  6ED9               	movwf	fsr2l,c
  9782  001806  0E02               	movlw	high (_ConnectionTable+8)
  9783  001808  20F4               	addwfc	prodh,w,c
  9784  00180A  6EDA               	movwf	fsr2h,c
  9785  00180C  50DF               	movf	223,w,c
  9786  00180E  1971               	xorwf	??_AddConnection& (0+255),w,b
  9787  001810  0BFE               	andlw	-2
  9788  001812  1971               	xorwf	??_AddConnection& (0+255),w,b
  9789  001814  6EDF               	movwf	223,c
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;miwi_p2p.c: 2594: for(i = 0; i < 1; i++)
  9793  001816  6B77               	clrf	AddConnection@i& (0+255),b
  9794  001818                     l8800:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;miwi_p2p.c: 2595: {
  9798                           ;miwi_p2p.c: 2596: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
  9799  001818  5177               	movf	AddConnection@i& (0+255),w,b
  9800  00181A  25B7               	addwf	(_rxMessage+5)& (0+255),w,b
  9801  00181C  6F71               	movwf	??_AddConnection& (0+255),b
  9802  00181E  0E00               	movlw	0
  9803  001820  21B8               	addwfc	(_rxMessage+6)& (0+255),w,b
  9804  001822  6F72               	movwf	(??_AddConnection+1)& (0+255),b
  9805  001824  0E03               	movlw	3
  9806  001826  2571               	addwf	??_AddConnection& (0+255),w,b
  9807  001828  6ED9               	movwf	fsr2l,c
  9808  00182A  0E00               	movlw	0
  9809  00182C  2172               	addwfc	(??_AddConnection+1)& (0+255),w,b
  9810  00182E  6EDA               	movwf	fsr2h,c
  9811  001830  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
  9812  001832  0D0A               	mullw	10
  9813  001834  0E49               	movlw	low _ConnectionTable
  9814  001836  6F73               	movwf	(??_AddConnection+2)& (0+255),b
  9815  001838  0E02               	movlw	high _ConnectionTable
  9816  00183A  6F74               	movwf	(??_AddConnection+3)& (0+255),b
  9817  00183C  0E09               	movlw	9
  9818  00183E  2773               	addwf	(??_AddConnection+2)& (0+255),f,b
  9819  001840  0E00               	movlw	0
  9820  001842  2374               	addwfc	(??_AddConnection+3)& (0+255),f,b
  9821  001844  50F3               	movf	prodl,w,c
  9822  001846  2773               	addwf	(??_AddConnection+2)& (0+255),f,b
  9823  001848  50F4               	movf	prodh,w,c
  9824  00184A  2374               	addwfc	(??_AddConnection+3)& (0+255),f,b
  9825  00184C  5177               	movf	AddConnection@i& (0+255),w,b
  9826  00184E  2573               	addwf	(??_AddConnection+2)& (0+255),w,b
  9827  001850  6EE1               	movwf	fsr1l,c
  9828  001852  0E00               	movlw	0
  9829  001854  2174               	addwfc	(??_AddConnection+3)& (0+255),w,b
  9830  001856  6EE2               	movwf	fsr1h,c
  9831  001858  CFDF FFE7          	movff	indf2,indf1
  9832                           
  9833                           ; BSR set to: 0
  9834  00185C  2B77               	incf	AddConnection@i& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837  00185E  5177               	movf	AddConnection@i& (0+255),w,b
  9838  001860  E0DB               	bz	l8800
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;miwi_p2p.c: 2597: }
  9842                           ;miwi_p2p.c: 2604: LatestConnection = connectionSlot;
  9843  001862  C076  F0D2         	movff	AddConnection@connectionSlot,_LatestConnection
  9844                           
  9845                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
  9846  001866  99D6               	bcf	_P2PStatus& (0+255),4,b	;volatile
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;miwi_p2p.c: 2606: }
  9850                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
  9851  001868  EC4E  F015         	call	_Total_Connections	;wreg free
  9852  00186C  6FF0               	movwf	_conn_size& (0+255),b
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;miwi_p2p.c: 2609: EEPROM_Write((uint8_t *)&conn_size, 0xBA, 1);
  9856  00186E  0EF0               	movlw	low _conn_size
  9857  001870  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  9858  001872  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  9859  001874  0EBA               	movlw	186
  9860  001876  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  9861  001878  0E01               	movlw	1
  9862  00187A  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  9863  00187C  EC87  F010         	call	_EEPROM_Write	;wreg free
  9864  001880  D788               	goto	l8778
  9865  001882                     __end_of_AddConnection:
  9866                           	opt stack 0
  9867                           tblptru	equ	0xFF8
  9868                           tblptrh	equ	0xFF7
  9869                           tblptrl	equ	0xFF6
  9870                           tablat	equ	0xFF5
  9871                           prodh	equ	0xFF4
  9872                           prodl	equ	0xFF3
  9873                           intcon	equ	0xFF2
  9874                           intcon2	equ	0xFF1
  9875                           intcon3	equ	0xFF0
  9876                           postinc0	equ	0xFEE
  9877                           wreg	equ	0xFE8
  9878                           indf1	equ	0xFE7
  9879                           postdec1	equ	0xFE5
  9880                           fsr1h	equ	0xFE2
  9881                           fsr1l	equ	0xFE1
  9882                           indf2	equ	0xFDF
  9883                           postinc2	equ	0xFDE
  9884                           postdec2	equ	0xFDD
  9885                           fsr2h	equ	0xFDA
  9886                           fsr2l	equ	0xFD9
  9887                           status	equ	0xFD8
  9888                           
  9889 ;; *************** function _isSameAddress *****************
  9890 ;; Defined at:
  9891 ;;		line 2144 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  Address1        2    9[BANK0 ] PTR unsigned char 
  9894 ;;		 -> ActiveScanResults(60), NULL(0), RxPacket.Payload(50), RxPacket(104), 
  9895 ;;  Address2        2   11[BANK0 ] PTR unsigned char 
  9896 ;;		 -> ConnectionTable(300), NULL(0), RxPacket.Payload(50), RxPacket(104), 
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;  i               1   15[BANK0 ] unsigned char 
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      unsigned char 
  9901 ;; Registers used:
  9902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : F/0
  9905 ;;		On exit  : F/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;Total ram usage:        7 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:    9
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_P2PTasks
  9919 ;;		_AddConnection
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text41
  9924  0029A6                     __ptext41:
  9925                           	opt stack 0
  9926  0029A6                     _isSameAddress:
  9927                           	opt stack 16
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;miwi_p2p.c: 2146: uint8_t i;
  9931                           ;miwi_p2p.c: 2148: for(i = 0; i < 8; i++)
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;incstack = 0
  9935  0029A6  6B6F               	clrf	isSameAddress@i& (0+255),b
  9936  0029A8                     l8578:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;miwi_p2p.c: 2149: {
  9940                           ;miwi_p2p.c: 2150: if( Address1[i] != Address2[i] )
  9941  0029A8  516F               	movf	isSameAddress@i& (0+255),w,b
  9942  0029AA  256B               	addwf	isSameAddress@Address2& (0+255),w,b
  9943  0029AC  6ED9               	movwf	fsr2l,c
  9944  0029AE  0E00               	movlw	0
  9945  0029B0  216C               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
  9946  0029B2  6EDA               	movwf	fsr2h,c
  9947  0029B4  516F               	movf	isSameAddress@i& (0+255),w,b
  9948  0029B6  2569               	addwf	isSameAddress@Address1& (0+255),w,b
  9949  0029B8  6EE1               	movwf	fsr1l,c
  9950  0029BA  0E00               	movlw	0
  9951  0029BC  216A               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
  9952  0029BE  6EE2               	movwf	fsr1h,c
  9953  0029C0  50DE               	movf	postinc2,w,c
  9954  0029C2  18E6               	xorwf	postinc1,w,c
  9955  0029C4  E001               	bz	l8584
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;miwi_p2p.c: 2151: {
  9959                           ;miwi_p2p.c: 2152: return 0;
  9960  0029C6  0C00               	retlw	0
  9961  0029C8                     l8584:
  9962                           
  9963                           ; BSR set to: 0
  9964  0029C8  2B6F               	incf	isSameAddress@i& (0+255),f,b
  9965                           
  9966                           ; BSR set to: 0
  9967  0029CA  0E07               	movlw	7
  9968  0029CC  656F               	cpfsgt	isSameAddress@i& (0+255),b
  9969  0029CE  D7EC               	goto	l8578
  9970  0029D0  0C01               	retlw	1
  9971  0029D2                     __end_of_isSameAddress:
  9972                           	opt stack 0
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           intcon2	equ	0xFF1
  9981                           intcon3	equ	0xFF0
  9982                           postinc0	equ	0xFEE
  9983                           wreg	equ	0xFE8
  9984                           indf1	equ	0xFE7
  9985                           postinc1	equ	0xFE6
  9986                           postdec1	equ	0xFE5
  9987                           fsr1h	equ	0xFE2
  9988                           fsr1l	equ	0xFE1
  9989                           indf2	equ	0xFDF
  9990                           postinc2	equ	0xFDE
  9991                           postdec2	equ	0xFDD
  9992                           fsr2h	equ	0xFDA
  9993                           fsr2l	equ	0xFD9
  9994                           status	equ	0xFD8
  9995                           
  9996 ;; *************** function _Total_Connections *****************
  9997 ;; Defined at:
  9998 ;;		line 66 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;		None
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  i               1   10[BANK0 ] unsigned char 
 10003 ;;  count           1    9[BANK0 ] unsigned char 
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      unsigned char 
 10006 ;; Registers used:
 10007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10008 ;; Tracked objects:
 10009 ;;		On entry : F/0
 10010 ;;		On exit  : F/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;Total ram usage:        2 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; Hardware stack levels required when called:    9
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		_AddConnection
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text42
 10028  002A9C                     __ptext42:
 10029                           	opt stack 0
 10030  002A9C                     _Total_Connections:
 10031                           	opt stack 15
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;miwi_p2p.c: 68: uint8_t count=0 , i;
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;incstack = 0
 10038  002A9C  6B69               	clrf	Total_Connections@count& (0+255),b
 10039                           
 10040                           ;miwi_p2p.c: 69: for (i=0;i<30;i++)
 10041  002A9E  6B6A               	clrf	Total_Connections@i& (0+255),b
 10042  002AA0                     l8514:
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;miwi_p2p.c: 70: {
 10046                           ;miwi_p2p.c: 77: if (ConnectionTable[i].status.bits.isValid)
 10047  002AA0  516A               	movf	Total_Connections@i& (0+255),w,b
 10048  002AA2  0D0A               	mullw	10
 10049  002AA4  0E51               	movlw	low (_ConnectionTable+8)
 10050  002AA6  24F3               	addwf	prodl,w,c
 10051  002AA8  6ED9               	movwf	fsr2l,c
 10052  002AAA  0E02               	movlw	high (_ConnectionTable+8)
 10053  002AAC  20F4               	addwfc	prodh,w,c
 10054  002AAE  6EDA               	movwf	fsr2h,c
 10055  002AB0  BEDF               	btfsc	indf2,7,c
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;miwi_p2p.c: 78: {
 10059                           ;miwi_p2p.c: 79: count++;
 10060  002AB2  2B69               	incf	Total_Connections@count& (0+255),f,b
 10061                           
 10062                           ; BSR set to: 0
 10063  002AB4  2B6A               	incf	Total_Connections@i& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066  002AB6  0E1D               	movlw	29
 10067  002AB8  656A               	cpfsgt	Total_Connections@i& (0+255),b
 10068  002ABA  D7F2               	goto	l8514
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;miwi_p2p.c: 80: }
 10072                           ;miwi_p2p.c: 82: }
 10073                           ;miwi_p2p.c: 83: return count;
 10074  002ABC  5169               	movf	Total_Connections@count& (0+255),w,b
 10075                           
 10076                           ; BSR set to: 0
 10077  002ABE  0012               	return		;funcret
 10078  002AC0                     __end_of_Total_Connections:
 10079                           	opt stack 0
 10080                           tblptru	equ	0xFF8
 10081                           tblptrh	equ	0xFF7
 10082                           tblptrl	equ	0xFF6
 10083                           tablat	equ	0xFF5
 10084                           prodh	equ	0xFF4
 10085                           prodl	equ	0xFF3
 10086                           intcon	equ	0xFF2
 10087                           intcon2	equ	0xFF1
 10088                           intcon3	equ	0xFF0
 10089                           postinc0	equ	0xFEE
 10090                           wreg	equ	0xFE8
 10091                           indf1	equ	0xFE7
 10092                           postinc1	equ	0xFE6
 10093                           postdec1	equ	0xFE5
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           indf2	equ	0xFDF
 10097                           postinc2	equ	0xFDE
 10098                           postdec2	equ	0xFDD
 10099                           fsr2h	equ	0xFDA
 10100                           fsr2l	equ	0xFD9
 10101                           status	equ	0xFD8
 10102                           
 10103 ;; *************** function _MiApp_DiscardMessage *****************
 10104 ;; Defined at:
 10105 ;;		line 2384 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10114 ;; Tracked objects:
 10115 ;;		On entry : F/0
 10116 ;;		On exit  : F/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10123 ;;Total ram usage:        0 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:   10
 10126 ;; This function calls:
 10127 ;;		_MiMAC_DiscardPacket
 10128 ;; This function is called by:
 10129 ;;		_MiApp_EstablishConnection
 10130 ;;		_Process_RxMessage
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text43
 10135  002C9A                     __ptext43:
 10136                           	opt stack 0
 10137  002C9A                     _MiApp_DiscardMessage:
 10138                           	opt stack 17
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;miwi_p2p.c: 2386: P2PStatus.bits.RxHasUserData = 0;
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;incstack = 0
 10145  002C9A  97D6               	bcf	_P2PStatus& (0+255),3,b	;volatile
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;miwi_p2p.c: 2387: MiMAC_DiscardPacket();
 10149  002C9C  EF72  F015         	goto	_MiMAC_DiscardPacket	;wreg free
 10150  002CA0                     __end_of_MiApp_DiscardMessage:
 10151                           	opt stack 0
 10152                           tblptru	equ	0xFF8
 10153                           tblptrh	equ	0xFF7
 10154                           tblptrl	equ	0xFF6
 10155                           tablat	equ	0xFF5
 10156                           prodh	equ	0xFF4
 10157                           prodl	equ	0xFF3
 10158                           intcon	equ	0xFF2
 10159                           intcon2	equ	0xFF1
 10160                           intcon3	equ	0xFF0
 10161                           postinc0	equ	0xFEE
 10162                           wreg	equ	0xFE8
 10163                           indf1	equ	0xFE7
 10164                           postinc1	equ	0xFE6
 10165                           postdec1	equ	0xFE5
 10166                           fsr1h	equ	0xFE2
 10167                           fsr1l	equ	0xFE1
 10168                           indf2	equ	0xFDF
 10169                           postinc2	equ	0xFDE
 10170                           postdec2	equ	0xFDD
 10171                           fsr2h	equ	0xFDA
 10172                           fsr2l	equ	0xFD9
 10173                           status	equ	0xFD8
 10174                           
 10175 ;; *************** function _MiMAC_DiscardPacket *****************
 10176 ;; Defined at:
 10177 ;;		line 1050 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;		None
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;		None
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  1    wreg      void 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/0
 10188 ;;		On exit  : F/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;Total ram usage:        0 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    9
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_P2PTasks
 10202 ;;		_MiApp_DiscardMessage
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text44
 10207  002AE4                     __ptext44:
 10208                           	opt stack 0
 10209  002AE4                     _MiMAC_DiscardPacket:
 10210                           	opt stack 16
 10211                           
 10212                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;incstack = 0
 10216  002AE4  0E02               	movlw	2
 10217  002AE6  0100               	movlb	0	; () banked
 10218  002AE8  61DA               	cpfslt	_ReceivedBankIndex& (0+255),b
 10219  002AEA  0C02               	retlw	2
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;drv_mrf_miwi_89xa.c: 1053: {
 10223                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 10224  002AEC  51DA               	movf	_ReceivedBankIndex& (0+255),w,b
 10225  002AEE  0D34               	mullw	52
 10226  002AF0  0E50               	movlw	low _RxPacket
 10227  002AF2  24F3               	addwf	prodl,w,c
 10228  002AF4  6ED9               	movwf	fsr2l,c
 10229  002AF6  0E01               	movlw	high _RxPacket
 10230  002AF8  20F4               	addwfc	prodh,w,c
 10231  002AFA  6EDA               	movwf	fsr2h,c
 10232  002AFC  0E00               	movlw	0
 10233  002AFE  6ADF               	clrf	indf2,c
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 10237  002B00  69DA               	setf	_ReceivedBankIndex& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240  002B02  0012               	return		;funcret
 10241  002B04                     __end_of_MiMAC_DiscardPacket:
 10242                           	opt stack 0
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodh	equ	0xFF4
 10248                           prodl	equ	0xFF3
 10249                           intcon	equ	0xFF2
 10250                           intcon2	equ	0xFF1
 10251                           intcon3	equ	0xFF0
 10252                           postinc0	equ	0xFEE
 10253                           wreg	equ	0xFE8
 10254                           indf1	equ	0xFE7
 10255                           postinc1	equ	0xFE6
 10256                           postdec1	equ	0xFE5
 10257                           fsr1h	equ	0xFE2
 10258                           fsr1l	equ	0xFE1
 10259                           indf2	equ	0xFDF
 10260                           postinc2	equ	0xFDE
 10261                           postdec2	equ	0xFDD
 10262                           fsr2h	equ	0xFDA
 10263                           fsr2l	equ	0xFD9
 10264                           status	equ	0xFD8
 10265                           
 10266 ;; *************** function _MiApp_ConnectionMode *****************
 10267 ;; Defined at:
 10268 ;;		line 3189 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  Mode            1    wreg     unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  Mode            1   18[BANK0 ] unsigned char 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;Total ram usage:        2 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:   12
 10289 ;; This function calls:
 10290 ;;		_EEPROM_Write
 10291 ;; This function is called by:
 10292 ;;		_Initialize_Demo
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text45
 10297  0028E6                     __ptext45:
 10298                           	opt stack 0
 10299  0028E6                     _MiApp_ConnectionMode:
 10300                           	opt stack 17
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;incstack = 0
 10304                           ;MiApp_ConnectionMode@Mode stored from wreg
 10305  0028E6  0100               	movlb	0	; () banked
 10306  0028E8  6F72               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 10307                           
 10308                           ;miwi_p2p.c: 3191: if( Mode > 3 )
 10309  0028EA  0E03               	movlw	3
 10310  0028EC  6572               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 10311  0028EE  D001               	goto	l583
 10312  0028F0  0C03               	retlw	3
 10313  0028F2                     l583:
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;miwi_p2p.c: 3194: }
 10317                           ;miwi_p2p.c: 3195: ConnMode = Mode;
 10318  0028F2  C072  F0F4         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;miwi_p2p.c: 3196: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 10322  0028F6  C0F4  F071         	movff	_ConnMode,??_MiApp_ConnectionMode
 10323  0028FA  3B71               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 10324  0028FC  0EF0               	movlw	240
 10325  0028FE  1771               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 10326  002900  51D5               	movf	_P2PCapacityInfo& (0+255),w,b
 10327  002902  0B0F               	andlw	15
 10328  002904  1171               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 10329  002906  6FD5               	movwf	_P2PCapacityInfo& (0+255),b
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;miwi_p2p.c: 3199: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
 10333  002908  0EF4               	movlw	low _ConnMode
 10334  00290A  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
 10335  00290C  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
 10336  00290E  0E03               	movlw	3
 10337  002910  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
 10338  002912  0E01               	movlw	1
 10339  002914  6F6D               	movwf	EEPROM_Write@count& (0+255),b
 10340  002916  EF87  F010         	goto	_EEPROM_Write	;wreg free
 10341  00291A                     __end_of_MiApp_ConnectionMode:
 10342                           	opt stack 0
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           intcon	equ	0xFF2
 10350                           intcon2	equ	0xFF1
 10351                           intcon3	equ	0xFF0
 10352                           postinc0	equ	0xFEE
 10353                           wreg	equ	0xFE8
 10354                           indf1	equ	0xFE7
 10355                           postinc1	equ	0xFE6
 10356                           postdec1	equ	0xFE5
 10357                           fsr1h	equ	0xFE2
 10358                           fsr1l	equ	0xFE1
 10359                           indf2	equ	0xFDF
 10360                           postinc2	equ	0xFDE
 10361                           postdec2	equ	0xFDD
 10362                           fsr2h	equ	0xFDA
 10363                           fsr2l	equ	0xFD9
 10364                           status	equ	0xFD8
 10365                           
 10366 ;; *************** function _EEPROM_Write *****************
 10367 ;; Defined at:
 10368 ;;		line 122 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  dest            2   10[BANK0 ] PTR unsigned char 
 10371 ;;		 -> conn_size(1), ConnMode(1), currentChannel(1), ConnectionTable(300), 
 10372 ;;  addr            1   12[BANK0 ] unsigned char 
 10373 ;;  count           1   13[BANK0 ] unsigned char 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  PageCounter     1   16[BANK0 ] unsigned char 
 10376 ;;  oldRFIE         1   15[BANK0 ] unsigned char 
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : F/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10386 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10389 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10390 ;;Total ram usage:        7 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:   11
 10393 ;; This function calls:
 10394 ;;		_MacroNop
 10395 ;;		_SPIGet2
 10396 ;;		_SPIPut2
 10397 ;; This function is called by:
 10398 ;;		_P2PTasks
 10399 ;;		_MiApp_ProtocolInit
 10400 ;;		_MiApp_SetChannel
 10401 ;;		_AddConnection
 10402 ;;		_MiApp_ConnectionMode
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text46
 10407  00210E                     __ptext46:
 10408                           	opt stack 0
 10409  00210E                     _EEPROM_Write:
 10410                           	opt stack 14
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;eeprom.c: 130: uint8_t oldRFIE = INTCON3bits.INT1IE;
 10414                           
 10415                           ; BSR set to: 0
 10416                           
 10417                           ;incstack = 0
 10418  00210E  0E00               	movlw	0
 10419  002110  B6F0               	btfsc	intcon3,3,c	;volatile
 10420  002112  0E01               	movlw	1
 10421  002114  6F6F               	movwf	EEPROM_Write@oldRFIE& (0+255),b
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;eeprom.c: 131: INTCON3bits.INT1IE = 0;
 10425  002116  96F0               	bcf	intcon3,3,c	;volatile
 10426  002118                     l8530:
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;eeprom.c: 137: {
 10430                           ;eeprom.c: 138: LATDbits.LATD5 = 0;
 10431  002118  9A8C               	bcf	3980,5,c	;volatile
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;eeprom.c: 139: SPIPut2(0x05);
 10435  00211A  0E05               	movlw	5
 10436  00211C  ECBA  F015         	call	_SPIPut2
 10437                           
 10438                           ;eeprom.c: 140: PageCounter = SPIGet2();
 10439  002120  EC3A  F016         	call	_SPIGet2	;wreg free
 10440  002124  0100               	movlb	0	; () banked
 10441  002126  6F70               	movwf	EEPROM_Write@PageCounter& (0+255),b
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;eeprom.c: 141: LATDbits.LATD5 = 1;
 10445  002128  8A8C               	bsf	3980,5,c	;volatile
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;eeprom.c: 142: MacroNop();
 10449  00212A  EC52  F016         	call	_MacroNop	;wreg free
 10450                           
 10451                           ;eeprom.c: 143: } while(PageCounter & 0x01 );
 10452  00212E  0100               	movlb	0	; () banked
 10453  002130  B170               	btfsc	EEPROM_Write@PageCounter& (0+255),0,b
 10454  002132  D7F2               	goto	l8530
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;eeprom.c: 145: LATDbits.LATD5 = 0;
 10458  002134  9A8C               	bcf	3980,5,c	;volatile
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;eeprom.c: 146: SPIPut2(0x06);
 10462  002136  0E06               	movlw	6
 10463  002138  ECBA  F015         	call	_SPIPut2
 10464                           
 10465                           ;eeprom.c: 147: LATDbits.LATD5 = 1;
 10466  00213C  8A8C               	bsf	3980,5,c	;volatile
 10467                           
 10468                           ;eeprom.c: 148: MacroNop();
 10469  00213E  EC52  F016         	call	_MacroNop	;wreg free
 10470                           
 10471                           ;eeprom.c: 149: LATDbits.LATD5 = 0;
 10472  002142  9A8C               	bcf	3980,5,c	;volatile
 10473                           
 10474                           ;eeprom.c: 151: SPIPut2(0x02);
 10475  002144  0E02               	movlw	2
 10476  002146  ECBA  F015         	call	_SPIPut2
 10477                           
 10478                           ;eeprom.c: 152: SPIPut2(addr);
 10479  00214A  0100               	movlb	0	; () banked
 10480  00214C  516C               	movf	EEPROM_Write@addr& (0+255),w,b
 10481  00214E  ECBA  F015         	call	_SPIPut2
 10482                           
 10483                           ;eeprom.c: 154: PageCounter = 0;
 10484  002152  0100               	movlb	0	; () banked
 10485  002154  6B70               	clrf	EEPROM_Write@PageCounter& (0+255),b
 10486                           
 10487                           ;eeprom.c: 155: while( count > 0 )
 10488  002156  D016               	goto	l8570
 10489  002158                     l8556:
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;eeprom.c: 156: {
 10493                           ;eeprom.c: 157: SPIPut2(*dest++);
 10494  002158  C06A  FFD9         	movff	EEPROM_Write@dest,fsr2l
 10495  00215C  C06B  FFDA         	movff	EEPROM_Write@dest+1,fsr2h
 10496  002160  50DF               	movf	indf2,w,c
 10497  002162  ECBA  F015         	call	_SPIPut2
 10498  002166  0100               	movlb	0	; () banked
 10499  002168  4B6A               	infsnz	EEPROM_Write@dest& (0+255),f,b
 10500  00216A  2B6B               	incf	(EEPROM_Write@dest+1)& (0+255),f,b
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;eeprom.c: 158: count--;
 10504  00216C  076D               	decf	EEPROM_Write@count& (0+255),f,b
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;eeprom.c: 159: PageCounter++;
 10508  00216E  2B70               	incf	EEPROM_Write@PageCounter& (0+255),f,b
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;eeprom.c: 160: if( ((addr + PageCounter) & (16-1)) == 0 )
 10512  002170  516C               	movf	EEPROM_Write@addr& (0+255),w,b
 10513  002172  2570               	addwf	EEPROM_Write@PageCounter& (0+255),w,b
 10514  002174  6F6E               	movwf	??_EEPROM_Write& (0+255),b
 10515  002176  0E0F               	movlw	15
 10516  002178  176E               	andwf	??_EEPROM_Write& (0+255),f,b
 10517  00217A  E104               	bnz	l8570
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;eeprom.c: 161: {
 10521                           ;eeprom.c: 162: LATDbits.LATD5 = 1;
 10522  00217C  8A8C               	bsf	3980,5,c	;volatile
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;eeprom.c: 163: addr += PageCounter;
 10526  00217E  5170               	movf	EEPROM_Write@PageCounter& (0+255),w,b
 10527  002180  276C               	addwf	EEPROM_Write@addr& (0+255),f,b
 10528                           
 10529                           ;eeprom.c: 164: goto EEPROM_NEXT_PAGE;
 10530  002182  D7CA               	goto	l8530
 10531  002184                     l8570:
 10532                           
 10533                           ; BSR set to: 0
 10534  002184  516D               	movf	EEPROM_Write@count& (0+255),w,b
 10535  002186  E1E8               	bnz	l8556
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;eeprom.c: 165: }
 10539                           ;eeprom.c: 166: }
 10540                           ;eeprom.c: 167: LATDbits.LATD5 = 1;
 10541  002188  8A8C               	bsf	3980,5,c	;volatile
 10542                           
 10543                           ;eeprom.c: 172: INTCON3bits.INT1IE = oldRFIE;
 10544  00218A  B16F               	btfsc	EEPROM_Write@oldRFIE& (0+255),0,b
 10545  00218C  D002               	bra	u8105
 10546  00218E  96F0               	bcf	intcon3,3,c	;volatile
 10547  002190  D001               	bra	u8106
 10548  002192                     u8105:
 10549  002192  86F0               	bsf	intcon3,3,c	;volatile
 10550  002194                     u8106:
 10551  002194  0012               	return		;funcret
 10552  002196                     __end_of_EEPROM_Write:
 10553                           	opt stack 0
 10554                           tblptru	equ	0xFF8
 10555                           tblptrh	equ	0xFF7
 10556                           tblptrl	equ	0xFF6
 10557                           tablat	equ	0xFF5
 10558                           prodh	equ	0xFF4
 10559                           prodl	equ	0xFF3
 10560                           intcon	equ	0xFF2
 10561                           intcon2	equ	0xFF1
 10562                           intcon3	equ	0xFF0
 10563                           postinc0	equ	0xFEE
 10564                           wreg	equ	0xFE8
 10565                           indf1	equ	0xFE7
 10566                           postinc1	equ	0xFE6
 10567                           postdec1	equ	0xFE5
 10568                           fsr1h	equ	0xFE2
 10569                           fsr1l	equ	0xFE1
 10570                           indf2	equ	0xFDF
 10571                           postinc2	equ	0xFDE
 10572                           postdec2	equ	0xFDD
 10573                           fsr2h	equ	0xFDA
 10574                           fsr2l	equ	0xFD9
 10575                           status	equ	0xFD8
 10576                           
 10577 ;; *************** function _SPIGet2 *****************
 10578 ;; Defined at:
 10579 ;;		line 210 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;		None
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      unsigned char 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:   10
 10600 ;; This function calls:
 10601 ;;		_SPIPut2
 10602 ;; This function is called by:
 10603 ;;		_EEPROM_Read
 10604 ;;		_EEPROM_Write
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text47
 10609  002C74                     __ptext47:
 10610                           	opt stack 0
 10611  002C74                     _SPIGet2:
 10612                           	opt stack 14
 10613                           
 10614                           ;spi.c: 230: SPIPut2(0x00);
 10615                           
 10616                           ;incstack = 0
 10617  002C74  0E00               	movlw	0
 10618  002C76  ECBA  F015         	call	_SPIPut2
 10619                           
 10620                           ;spi.c: 231: return SSP2BUF;
 10621  002C7A  5075               	movf	3957,w,c	;volatile
 10622  002C7C  0012               	return		;funcret
 10623  002C7E                     __end_of_SPIGet2:
 10624                           	opt stack 0
 10625                           tblptru	equ	0xFF8
 10626                           tblptrh	equ	0xFF7
 10627                           tblptrl	equ	0xFF6
 10628                           tablat	equ	0xFF5
 10629                           prodh	equ	0xFF4
 10630                           prodl	equ	0xFF3
 10631                           intcon	equ	0xFF2
 10632                           intcon2	equ	0xFF1
 10633                           intcon3	equ	0xFF0
 10634                           postinc0	equ	0xFEE
 10635                           wreg	equ	0xFE8
 10636                           indf1	equ	0xFE7
 10637                           postinc1	equ	0xFE6
 10638                           postdec1	equ	0xFE5
 10639                           fsr1h	equ	0xFE2
 10640                           fsr1l	equ	0xFE1
 10641                           indf2	equ	0xFDF
 10642                           postinc2	equ	0xFDE
 10643                           postdec2	equ	0xFDD
 10644                           fsr2h	equ	0xFDA
 10645                           fsr2l	equ	0xFD9
 10646                           status	equ	0xFD8
 10647                           
 10648 ;; *************** function _MacroNop *****************
 10649 ;; Defined at:
 10650 ;;		line 323 in file "../../../../../../framework/miwi/src/miwi_p2p.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;		None
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		None
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10668 ;;Total ram usage:        0 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    9
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_EEPROM_Write
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text48
 10679  002CA4                     __ptext48:
 10680                           	opt stack 0
 10681  002CA4                     _MacroNop:
 10682                           	opt stack 15
 10683                           
 10684                           ;miwi_p2p.c: 329: __nop();
 10685                           
 10686                           ;incstack = 0
 10687  002CA4  F000               	nop	
 10688  002CA6  0012               	return		;funcret
 10689  002CA8                     __end_of_MacroNop:
 10690                           	opt stack 0
 10691                           tblptru	equ	0xFF8
 10692                           tblptrh	equ	0xFF7
 10693                           tblptrl	equ	0xFF6
 10694                           tablat	equ	0xFF5
 10695                           prodh	equ	0xFF4
 10696                           prodl	equ	0xFF3
 10697                           intcon	equ	0xFF2
 10698                           intcon2	equ	0xFF1
 10699                           intcon3	equ	0xFF0
 10700                           postinc0	equ	0xFEE
 10701                           wreg	equ	0xFE8
 10702                           indf1	equ	0xFE7
 10703                           postinc1	equ	0xFE6
 10704                           postdec1	equ	0xFE5
 10705                           fsr1h	equ	0xFE2
 10706                           fsr1l	equ	0xFE1
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           postdec2	equ	0xFDD
 10710                           fsr2h	equ	0xFDA
 10711                           fsr2l	equ	0xFD9
 10712                           status	equ	0xFD8
 10713                           
 10714 ;; *************** function _DemoOutput_Instruction *****************
 10715 ;; Defined at:
 10716 ;;		line 224 in file "../src/demo_ouput.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : F/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:   13
 10737 ;; This function calls:
 10738 ;;		_LCDDisplay
 10739 ;; This function is called by:
 10740 ;;		_Process_RxMessage
 10741 ;;		_run_p2p_demo
 10742 ;;		_Initialize_Demo
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text49
 10747  002BFA                     __ptext49:
 10748                           	opt stack 0
 10749  002BFA                     _DemoOutput_Instruction:
 10750                           	opt stack 14
 10751                           
 10752                           ;demo_ouput.c: 233: LCDDisplay((char *)"SW1: Broadcast  SW2: Unicast", 0, 0);
 10753                           
 10754                           ;incstack = 0
 10755  002BFA  0EAC               	movlw	low STR_20
 10756  002BFC  0100               	movlb	0	; () banked
 10757  002BFE  6F98               	movwf	LCDDisplay@text& (0+255),b
 10758  002C00  0EFE               	movlw	high STR_20
 10759  002C02  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 10760  002C04  6B9A               	clrf	LCDDisplay@value& (0+255),b
 10761  002C06  6B9B               	clrf	LCDDisplay@delay& (0+255),b
 10762  002C08  EFC5  F013         	goto	_LCDDisplay	;wreg free
 10763  002C0C                     __end_of_DemoOutput_Instruction:
 10764                           	opt stack 0
 10765                           tblptru	equ	0xFF8
 10766                           tblptrh	equ	0xFF7
 10767                           tblptrl	equ	0xFF6
 10768                           tablat	equ	0xFF5
 10769                           prodh	equ	0xFF4
 10770                           prodl	equ	0xFF3
 10771                           intcon	equ	0xFF2
 10772                           intcon2	equ	0xFF1
 10773                           intcon3	equ	0xFF0
 10774                           postinc0	equ	0xFEE
 10775                           wreg	equ	0xFE8
 10776                           indf1	equ	0xFE7
 10777                           postinc1	equ	0xFE6
 10778                           postdec1	equ	0xFE5
 10779                           fsr1h	equ	0xFE2
 10780                           fsr1l	equ	0xFE1
 10781                           indf2	equ	0xFDF
 10782                           postinc2	equ	0xFDE
 10783                           postdec2	equ	0xFDD
 10784                           fsr2h	equ	0xFDA
 10785                           fsr2l	equ	0xFD9
 10786                           status	equ	0xFD8
 10787                           
 10788 ;; *************** function _DemoOutput_ChannelError *****************
 10789 ;; Defined at:
 10790 ;;		line 285 in file "../src/demo_ouput.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;  channel         1    wreg     unsigned char 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  channel         1    0[COMRAM] unsigned char 
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      void 
 10797 ;; Registers used:
 10798 ;;		wreg
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;Total ram usage:        0 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    9
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		_Initialize_Demo
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           	psect	text50
 10819  002CAC                     __ptext50:
 10820                           	opt stack 0
 10821  002CAC                     _DemoOutput_ChannelError:
 10822                           	opt stack 20
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;incstack = 0
 10826  002CAC  0012               	return		;funcret
 10827  002CAE                     __end_of_DemoOutput_ChannelError:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           prodh	equ	0xFF4
 10834                           prodl	equ	0xFF3
 10835                           intcon	equ	0xFF2
 10836                           intcon2	equ	0xFF1
 10837                           intcon3	equ	0xFF0
 10838                           postinc0	equ	0xFEE
 10839                           wreg	equ	0xFE8
 10840                           indf1	equ	0xFE7
 10841                           postinc1	equ	0xFE6
 10842                           postdec1	equ	0xFE5
 10843                           fsr1h	equ	0xFE2
 10844                           fsr1l	equ	0xFE1
 10845                           indf2	equ	0xFDF
 10846                           postinc2	equ	0xFDE
 10847                           postdec2	equ	0xFDD
 10848                           fsr2h	equ	0xFDA
 10849                           fsr2l	equ	0xFD9
 10850                           status	equ	0xFD8
 10851                           
 10852 ;; *************** function _DemoOutput_Channel *****************
 10853 ;; Defined at:
 10854 ;;		line 200 in file "../src/demo_ouput.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;  channel         1    wreg     unsigned char 
 10857 ;;  Step            1   61[BANK0 ] unsigned char 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  channel         1   62[BANK0 ] unsigned char 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : F/0
 10866 ;;		On exit  : F/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10869 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;Total ram usage:        2 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:   13
 10876 ;; This function calls:
 10877 ;;		_LCDDisplay
 10878 ;; This function is called by:
 10879 ;;		_Initialize_Demo
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           	psect	text51
 10884  002AC0                     __ptext51:
 10885                           	opt stack 0
 10886  002AC0                     _DemoOutput_Channel:
 10887                           	opt stack 16
 10888                           
 10889                           ;incstack = 0
 10890                           ;DemoOutput_Channel@channel stored from wreg
 10891  002AC0  6F9E               	movwf	DemoOutput_Channel@channel& (0+255),b
 10892                           
 10893                           ;demo_ouput.c: 202: if( Step == 0 )
 10894  002AC2  0100               	movlb	0	; () banked
 10895  002AC4  519D               	movf	DemoOutput_Channel@Step& (0+255),w,b
 10896  002AC6  E104               	bnz	l9920
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;demo_ouput.c: 203: {
 10900                           ;demo_ouput.c: 205: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 10901  002AC8  0E4F               	movlw	low STR_18
 10902  002ACA  6F98               	movwf	LCDDisplay@text& (0+255),b
 10903  002ACC  0EFE               	movlw	high STR_18
 10904  002ACE  D003               	goto	L9
 10905  002AD0                     l9920:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;demo_ouput.c: 212: else
 10909                           ;demo_ouput.c: 213: {
 10910                           ;demo_ouput.c: 215: LCDDisplay((char *)"Connected Peer  on Channel %d", channel, 1);
 10911  002AD0  0E8E               	movlw	low STR_19
 10912  002AD2  6F98               	movwf	LCDDisplay@text& (0+255),b
 10913  002AD4  0EFE               	movlw	high STR_19
 10914  002AD6                     L9:
 10915  002AD6  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 10916  002AD8  C09E  F09A         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 10917  002ADC  0E01               	movlw	1
 10918  002ADE  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 10919  002AE0  EFC5  F013         	goto	_LCDDisplay	;wreg free
 10920  002AE4                     __end_of_DemoOutput_Channel:
 10921                           	opt stack 0
 10922                           tblptru	equ	0xFF8
 10923                           tblptrh	equ	0xFF7
 10924                           tblptrl	equ	0xFF6
 10925                           tablat	equ	0xFF5
 10926                           prodh	equ	0xFF4
 10927                           prodl	equ	0xFF3
 10928                           intcon	equ	0xFF2
 10929                           intcon2	equ	0xFF1
 10930                           intcon3	equ	0xFF0
 10931                           postinc0	equ	0xFEE
 10932                           wreg	equ	0xFE8
 10933                           indf1	equ	0xFE7
 10934                           postinc1	equ	0xFE6
 10935                           postdec1	equ	0xFE5
 10936                           fsr1h	equ	0xFE2
 10937                           fsr1l	equ	0xFE1
 10938                           indf2	equ	0xFDF
 10939                           postinc2	equ	0xFDE
 10940                           postdec2	equ	0xFDD
 10941                           fsr2h	equ	0xFDA
 10942                           fsr2l	equ	0xFD9
 10943                           status	equ	0xFD8
 10944                           
 10945 ;; *************** function _DemoOutput_Greeting *****************
 10946 ;; Defined at:
 10947 ;;		line 63 in file "../src/demo_ouput.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      void 
 10954 ;; Registers used:
 10955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10956 ;; Tracked objects:
 10957 ;;		On entry : F/0
 10958 ;;		On exit  : F/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:   13
 10968 ;; This function calls:
 10969 ;;		_LCDDisplay
 10970 ;; This function is called by:
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text52
 10976  002C0C                     __ptext52:
 10977                           	opt stack 0
 10978  002C0C                     _DemoOutput_Greeting:
 10979                           	opt stack 17
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;demo_ouput.c: 106: LCDDisplay((char *)"Simple P2P Demo  MRF89XA Node ", 0, 1);
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;incstack = 0
 10986  002C0C  0E6F               	movlw	low STR_16
 10987  002C0E  6F98               	movwf	LCDDisplay@text& (0+255),b
 10988  002C10  0EFE               	movlw	high STR_16
 10989  002C12  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 10990  002C14  6B9A               	clrf	LCDDisplay@value& (0+255),b
 10991  002C16  0E01               	movlw	1
 10992  002C18  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 10993  002C1A  EFC5  F013         	goto	_LCDDisplay	;wreg free
 10994  002C1E                     __end_of_DemoOutput_Greeting:
 10995                           	opt stack 0
 10996                           tblptru	equ	0xFF8
 10997                           tblptrh	equ	0xFF7
 10998                           tblptrl	equ	0xFF6
 10999                           tablat	equ	0xFF5
 11000                           prodh	equ	0xFF4
 11001                           prodl	equ	0xFF3
 11002                           intcon	equ	0xFF2
 11003                           intcon2	equ	0xFF1
 11004                           intcon3	equ	0xFF0
 11005                           postinc0	equ	0xFEE
 11006                           wreg	equ	0xFE8
 11007                           indf1	equ	0xFE7
 11008                           postinc1	equ	0xFE6
 11009                           postdec1	equ	0xFE5
 11010                           fsr1h	equ	0xFE2
 11011                           fsr1l	equ	0xFE1
 11012                           indf2	equ	0xFDF
 11013                           postinc2	equ	0xFDE
 11014                           postdec2	equ	0xFDD
 11015                           fsr2h	equ	0xFDA
 11016                           fsr2l	equ	0xFD9
 11017                           status	equ	0xFD8
 11018                           
 11019 ;; *************** function _LCDDisplay *****************
 11020 ;; Defined at:
 11021 ;;		line 168 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  text            2   56[BANK0 ] PTR unsigned char 
 11024 ;;		 -> STR_29(21), STR_26(16), STR_20(29), STR_19(30), 
 11025 ;;		 -> STR_18(32), STR_17(28), STR_16(31), 
 11026 ;;  value           1   58[BANK0 ] unsigned char 
 11027 ;;  delay           1   59[BANK0 ] unsigned char 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  i               1   60[BANK0 ] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      void 
 11032 ;; Registers used:
 11033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : F/0
 11036 ;;		On exit  : F/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;Total ram usage:        5 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:   12
 11046 ;; This function calls:
 11047 ;;		_DELAY_ms
 11048 ;;		_LCD_Erase
 11049 ;;		_LCD_Update
 11050 ;;		_sprintf
 11051 ;; This function is called by:
 11052 ;;		_DemoOutput_Greeting
 11053 ;;		_DemoOutput_Channel
 11054 ;;		_DemoOutput_Instruction
 11055 ;;		_DemoOutput_UnicastFail
 11056 ;;		_freezer_feature
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           	psect	text53
 11061  00278A                     __ptext53:
 11062                           	opt stack 0
 11063  00278A                     _LCDDisplay:
 11064                           	opt stack 17
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;lcd.c: 170: LCD_Erase();
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;incstack = 0
 11071  00278A  EC27  F015         	call	_LCD_Erase	;wreg free
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;lcd.c: 171: sprintf((char *)LCDText, (char*)text, value);
 11075  00278E  0EB8               	movlw	low _LCDText
 11076  002790  6F75               	movwf	sprintf@sp& (0+255),b
 11077  002792  0E01               	movlw	high _LCDText
 11078  002794  6F76               	movwf	(sprintf@sp+1)& (0+255),b
 11079  002796  C098  F077         	movff	LCDDisplay@text,sprintf@f
 11080  00279A  C099  F078         	movff	LCDDisplay@text+1,sprintf@f+1
 11081  00279E  C09A  F079         	movff	LCDDisplay@value,?_sprintf+4
 11082  0027A2  6B7A               	clrf	(?_sprintf+5)& (0+255),b
 11083  0027A4  EC2C  F000         	call	_sprintf	;wreg free
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;lcd.c: 172: LCD_Update();
 11087  0027A8  EC4E  F011         	call	_LCD_Update	;wreg free
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;lcd.c: 175: if( delay )
 11091  0027AC  519B               	movf	LCDDisplay@delay& (0+255),w,b
 11092  0027AE  B4D8               	btfsc	status,2,c
 11093  0027B0  0012               	return	
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;lcd.c: 176: {
 11097                           ;lcd.c: 177: uint8_t i;
 11098                           ;lcd.c: 178: for(i = 0; i < 8; i++)
 11099  0027B2  6B9C               	clrf	LCDDisplay@i& (0+255),b
 11100  0027B4                     l9490:
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;lcd.c: 179: {
 11104                           ;lcd.c: 180: DELAY_ms(250);
 11105  0027B4  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
 11106  0027B6  0EFA               	movlw	250
 11107  0027B8  6F69               	movwf	DELAY_ms@ms& (0+255),b
 11108  0027BA  EC3E  F00E         	call	_DELAY_ms	;wreg free
 11109                           
 11110                           ; BSR set to: 0
 11111  0027BE  2B9C               	incf	LCDDisplay@i& (0+255),f,b
 11112                           
 11113                           ; BSR set to: 0
 11114  0027C0  0E07               	movlw	7
 11115  0027C2  659C               	cpfsgt	LCDDisplay@i& (0+255),b
 11116  0027C4  D7F7               	goto	l9490
 11117  0027C6  0C07               	retlw	7
 11118  0027C8                     __end_of_LCDDisplay:
 11119                           	opt stack 0
 11120                           tblptru	equ	0xFF8
 11121                           tblptrh	equ	0xFF7
 11122                           tblptrl	equ	0xFF6
 11123                           tablat	equ	0xFF5
 11124                           prodh	equ	0xFF4
 11125                           prodl	equ	0xFF3
 11126                           intcon	equ	0xFF2
 11127                           intcon2	equ	0xFF1
 11128                           intcon3	equ	0xFF0
 11129                           postinc0	equ	0xFEE
 11130                           wreg	equ	0xFE8
 11131                           indf1	equ	0xFE7
 11132                           postinc1	equ	0xFE6
 11133                           postdec1	equ	0xFE5
 11134                           fsr1h	equ	0xFE2
 11135                           fsr1l	equ	0xFE1
 11136                           indf2	equ	0xFDF
 11137                           postinc2	equ	0xFDE
 11138                           postdec2	equ	0xFDD
 11139                           fsr2h	equ	0xFDA
 11140                           fsr2l	equ	0xFD9
 11141                           status	equ	0xFD8
 11142                           
 11143 ;; *************** function _sprintf *****************
 11144 ;; Defined at:
 11145 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  sp              2   21[BANK0 ] PTR unsigned char 
 11148 ;;		 -> LCDText(33), 
 11149 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 11150 ;;		 -> STR_29(21), STR_28(16), STR_27(22), STR_26(16), 
 11151 ;;		 -> STR_20(29), STR_19(30), STR_18(32), STR_17(28), 
 11152 ;;		 -> STR_16(31), STR_15(17), STR_14(17), 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  idx             1   37[BANK0 ] unsigned char 
 11155 ;;  tmpval          4    0        struct .
 11156 ;;  flag            2   54[BANK0 ] unsigned short 
 11157 ;;  width           2   51[BANK0 ] int 
 11158 ;;  val             2   48[BANK0 ] unsigned int 
 11159 ;;  len             2   45[BANK0 ] unsigned int 
 11160 ;;  c               1   53[BANK0 ] char 
 11161 ;;  prec            1   50[BANK0 ] char 
 11162 ;;  ap              1   47[BANK0 ] PTR void [1]
 11163 ;;		 -> ?_sprintf(2), 
 11164 ;;  cp              1   44[BANK0 ] PTR const unsigned char 
 11165 ;;		 -> sprintf@c(1), 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  2   21[BANK0 ] int 
 11168 ;; Registers used:
 11169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : F/0
 11172 ;;		On exit  : F/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11175 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;Total ram usage:       35 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:   10
 11182 ;; This function calls:
 11183 ;;		___lwdiv
 11184 ;;		___lwmod
 11185 ;;		___wmul
 11186 ;;		_isdigit
 11187 ;; This function is called by:
 11188 ;;		_LCDDisplay
 11189 ;;		_LCDTRXCount
 11190 ;;		_run_p2p_demo
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text54
 11195  000058                     __ptext54:
 11196                           	opt stack 0
 11197  000058                     _sprintf:
 11198                           	opt stack 18
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;doprnt.c: 494: va_list ap;
 11202                           ;doprnt.c: 499: signed char c;
 11203                           ;doprnt.c: 501: int width;
 11204                           ;doprnt.c: 506: signed char prec;
 11205                           ;doprnt.c: 508: unsigned short flag;
 11206                           ;doprnt.c: 523: union {
 11207                           ;doprnt.c: 524: unsigned long vd;
 11208                           ;doprnt.c: 525: double integ;
 11209                           ;doprnt.c: 526: } tmpval;
 11210                           ;doprnt.c: 528: unsigned int val;
 11211                           ;doprnt.c: 529: unsigned len;
 11212                           ;doprnt.c: 530: const char * cp;
 11213                           ;doprnt.c: 533: *ap = __va_start();
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;incstack = 0
 11217  000058  0E79               	movlw	low (?_sprintf+4)
 11218  00005A  6F8F               	movwf	sprintf@ap& (0+255),b
 11219                           
 11220                           ;doprnt.c: 536: while(c = *f++) {
 11221  00005C  D378               	goto	l9198
 11222  00005E                     l8876:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;doprnt.c: 538: if(c != '%')
 11226  00005E  0E25               	movlw	37
 11227  000060  1995               	xorwf	sprintf@c& (0+255),w,b
 11228  000062  E009               	bz	l1065
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;doprnt.c: 540: {
 11232                           ;doprnt.c: 541: ((*sp++ = (c)));
 11233  000064  C075  FFD9         	movff	sprintf@sp,fsr2l
 11234  000068  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 11235  00006C  C095  FFDF         	movff	sprintf@c,indf2
 11236                           
 11237                           ; BSR set to: 0
 11238  000070  4B75               	infsnz	sprintf@sp& (0+255),f,b
 11239  000072  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 11240                           
 11241                           ;doprnt.c: 542: continue;
 11242  000074  D36C               	goto	l9198
 11243  000076                     l1065:
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;doprnt.c: 543: }
 11247                           ;doprnt.c: 546: width = 0;
 11248  000076  6B93               	clrf	sprintf@width& (0+255),b
 11249  000078  6B94               	clrf	(sprintf@width+1)& (0+255),b
 11250                           
 11251                           ;doprnt.c: 548: flag = 0;
 11252  00007A  6B96               	clrf	sprintf@flag& (0+255),b
 11253  00007C  6B97               	clrf	(sprintf@flag+1)& (0+255),b
 11254  00007E  D009               	goto	l8892
 11255  000080                     l8882:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;doprnt.c: 554: flag |= 0x08;
 11259  000080  8796               	bsf	sprintf@flag& (0+255),3,b
 11260  000082  D005               	goto	L1
 11261  000084                     l8884:
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;doprnt.c: 561: flag |= 0x01;
 11265  000084  8196               	bsf	sprintf@flag& (0+255),0,b
 11266  000086  D003               	goto	L1
 11267  000088                     l8886:
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;doprnt.c: 574: flag |= 0x800;
 11271  000088  8797               	bsf	(sprintf@flag+1)& (0+255),3,b
 11272  00008A  D001               	goto	L1
 11273  00008C                     l8888:
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;doprnt.c: 580: flag |= 0x04;
 11277  00008C  8596               	bsf	sprintf@flag& (0+255),2,b
 11278  00008E                     L1:
 11279                           
 11280                           ;doprnt.c: 581: f++;
 11281  00008E  4B77               	infsnz	sprintf@f& (0+255),f,b
 11282  000090  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11283  000092                     l8892:
 11284                           
 11285                           ; BSR set to: 0
 11286  000092  C077  FFF6         	movff	sprintf@f,tblptrl
 11287  000096  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11288  00009A                     	if	0	;tblptru may be non-zero
 11289  00009A                     	endif
 11290  00009A                     	if	0	;tblptru may be non-zero
 11291  00009A                     	endif
 11292  00009A  0008               	tblrd		*
 11293  00009C  50F5               	movf	tablat,w,c
 11294                           
 11295                           ; Switch size 1, requested type "speed"
 11296                           ; Number of cases is 4, Range of values is 32 to 48
 11297                           ; switch strategies available:
 11298                           ; Name         Instructions Cycles
 11299                           ; simple_byte           13     7 (average)
 11300                           ;	Chosen strategy is simple_byte
 11301  00009E  0A20               	xorlw	32	; case 32
 11302  0000A0  E0F1               	bz	l8884
 11303  0000A2  0A03               	xorlw	3	; case 35
 11304  0000A4  E0F1               	bz	l8886
 11305  0000A6  0A0E               	xorlw	14	; case 45
 11306  0000A8  E0EB               	bz	l8882
 11307  0000AA  0A1D               	xorlw	29	; case 48
 11308  0000AC  E0EF               	bz	l8888
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;doprnt.c: 593: if(flag & 0x08)
 11312  0000AE  B796               	btfsc	sprintf@flag& (0+255),3,b
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;doprnt.c: 594: flag &= ~0x04;
 11316  0000B0  9596               	bcf	sprintf@flag& (0+255),2,b
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11320  0000B2  C077  FFF6         	movff	sprintf@f,tblptrl
 11321  0000B6  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11322  0000BA                     	if	0	;tblptru may be non-zero
 11323  0000BA                     	endif
 11324  0000BA                     	if	0	;tblptru may be non-zero
 11325  0000BA                     	endif
 11326  0000BA  0008               	tblrd		*
 11327  0000BC  50F5               	movf	tablat,w,c
 11328  0000BE  EC91  F015         	call	_isdigit
 11329  0000C2  E32E               	bnc	l8908
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;doprnt.c: 598: width = 0;
 11333  0000C4  6B93               	clrf	sprintf@width& (0+255),b
 11334  0000C6  6B94               	clrf	(sprintf@width+1)& (0+255),b
 11335  0000C8                     l8900:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;doprnt.c: 600: width *= 10;
 11339  0000C8  C093  F069         	movff	sprintf@width,___wmul@multiplier
 11340  0000CC  C094  F06A         	movff	sprintf@width+1,___wmul@multiplier+1
 11341  0000D0  6B6C               	clrf	(___wmul@multiplicand+1)& (0+255),b
 11342  0000D2  0E0A               	movlw	10
 11343  0000D4  6F6B               	movwf	___wmul@multiplicand& (0+255),b
 11344  0000D6  EC3B  F015         	call	___wmul	;wreg free
 11345  0000DA  C069  F093         	movff	?___wmul,sprintf@width
 11346  0000DE  C06A  F094         	movff	?___wmul+1,sprintf@width+1
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;doprnt.c: 601: width += *f++ - '0';
 11350  0000E2  0ED0               	movlw	208
 11351  0000E4  6F81               	movwf	??_sprintf& (0+255),b
 11352  0000E6  6982               	setf	(??_sprintf+1)& (0+255),b
 11353  0000E8  C077  FFF6         	movff	sprintf@f,tblptrl
 11354  0000EC  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11355  0000F0                     	if	0	;tblptru may be non-zero
 11356  0000F0                     	endif
 11357  0000F0                     	if	0	;tblptru may be non-zero
 11358  0000F0                     	endif
 11359  0000F0  0008               	tblrd		*
 11360  0000F2  50F5               	movf	tablat,w,c
 11361  0000F4  6F83               	movwf	(??_sprintf+2)& (0+255),b
 11362  0000F6  6B84               	clrf	(??_sprintf+3)& (0+255),b
 11363  0000F8  5181               	movf	??_sprintf& (0+255),w,b
 11364  0000FA  2783               	addwf	(??_sprintf+2)& (0+255),f,b
 11365  0000FC  5182               	movf	(??_sprintf+1)& (0+255),w,b
 11366  0000FE  2384               	addwfc	(??_sprintf+3)& (0+255),f,b
 11367  000100  5183               	movf	(??_sprintf+2)& (0+255),w,b
 11368  000102  2793               	addwf	sprintf@width& (0+255),f,b
 11369  000104  5184               	movf	(??_sprintf+3)& (0+255),w,b
 11370  000106  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
 11371                           
 11372                           ; BSR set to: 0
 11373  000108  4B77               	infsnz	sprintf@f& (0+255),f,b
 11374  00010A  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11378  00010C  C077  FFF6         	movff	sprintf@f,tblptrl
 11379  000110  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11380  000114                     	if	0	;tblptru may be non-zero
 11381  000114                     	endif
 11382  000114                     	if	0	;tblptru may be non-zero
 11383  000114                     	endif
 11384  000114  0008               	tblrd		*
 11385  000116  50F5               	movf	tablat,w,c
 11386  000118  EC91  F015         	call	_isdigit
 11387  00011C  E314               	bnc	l8916
 11388  00011E  D7D4               	goto	l8900
 11389  000120                     l8908:
 11390                           
 11391                           ; BSR set to: 0
 11392  000120  C077  FFF6         	movff	sprintf@f,tblptrl
 11393  000124  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11394  000128                     	if	0	;tblptru may be non-zero
 11395  000128                     	endif
 11396  000128                     	if	0	;tblptru may be non-zero
 11397  000128                     	endif
 11398  000128  0008               	tblrd		*
 11399  00012A  50F5               	movf	tablat,w,c
 11400  00012C  0A2A               	xorlw	42
 11401  00012E  E10B               	bnz	l8916
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 11405  000130  518F               	movf	sprintf@ap& (0+255),w,b
 11406  000132  6ED9               	movwf	fsr2l,c
 11407  000134  6ADA               	clrf	fsr2h,c
 11408  000136  CFDE F093          	movff	postinc2,sprintf@width
 11409  00013A  CFDD F094          	movff	postdec2,sprintf@width+1
 11410                           
 11411                           ; BSR set to: 0
 11412  00013E  0E02               	movlw	2
 11413  000140  278F               	addwf	sprintf@ap& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;doprnt.c: 606: f++;
 11417  000142  4B77               	infsnz	sprintf@f& (0+255),f,b
 11418  000144  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11419  000146                     l8916:
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;doprnt.c: 608: }
 11423                           ;doprnt.c: 611: if(*f == '.') {
 11424  000146  C077  FFF6         	movff	sprintf@f,tblptrl
 11425  00014A  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11426  00014E                     	if	0	;tblptru may be non-zero
 11427  00014E                     	endif
 11428  00014E                     	if	0	;tblptru may be non-zero
 11429  00014E                     	endif
 11430  00014E  0008               	tblrd		*
 11431  000150  50F5               	movf	tablat,w,c
 11432  000152  0A2E               	xorlw	46
 11433  000154  E130               	bnz	l1081
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;doprnt.c: 612: flag |= 0x4000;
 11437  000156  8D97               	bsf	(sprintf@flag+1)& (0+255),6,b
 11438                           
 11439                           ;doprnt.c: 613: f++;
 11440  000158  4B77               	infsnz	sprintf@f& (0+255),f,b
 11441  00015A  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;doprnt.c: 615: if(*f == '*') {
 11445  00015C  C077  FFF6         	movff	sprintf@f,tblptrl
 11446  000160  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11447  000164                     	if	0	;tblptru may be non-zero
 11448  000164                     	endif
 11449  000164                     	if	0	;tblptru may be non-zero
 11450  000164                     	endif
 11451  000164  0008               	tblrd		*
 11452  000166  50F5               	movf	tablat,w,c
 11453  000168  0A2A               	xorlw	42
 11454  00016A  E10A               	bnz	l1082
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 11458  00016C  518F               	movf	sprintf@ap& (0+255),w,b
 11459  00016E  6ED9               	movwf	fsr2l,c
 11460  000170  6ADA               	clrf	fsr2h,c
 11461  000172  50DF               	movf	indf2,w,c
 11462  000174  6F92               	movwf	sprintf@prec& (0+255),b
 11463                           
 11464                           ; BSR set to: 0
 11465  000176  0E02               	movlw	2
 11466  000178  278F               	addwf	sprintf@ap& (0+255),f,b
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;doprnt.c: 617: f++;
 11470  00017A  4B77               	infsnz	sprintf@f& (0+255),f,b
 11471  00017C  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11472                           
 11473                           ;doprnt.c: 618: } else
 11474  00017E  D08A               	goto	l8984
 11475  000180                     l1082:
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;doprnt.c: 620: {
 11479                           ;doprnt.c: 621: prec = 0;
 11480  000180  6B92               	clrf	sprintf@prec& (0+255),b
 11481                           
 11482                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 11483  000182  D00F               	goto	l8932
 11484  000184                     l8928:
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 11488  000184  C077  FFF6         	movff	sprintf@f,tblptrl
 11489  000188  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11490  00018C                     	if	0	;tblptru may be non-zero
 11491  00018C                     	endif
 11492  00018C                     	if	0	;tblptru may be non-zero
 11493  00018C                     	endif
 11494  00018C  0008               	tblrd		*
 11495  00018E  CFF5 F081          	movff	tablat,??_sprintf
 11496  000192  5192               	movf	sprintf@prec& (0+255),w,b
 11497  000194  0D0A               	mullw	10
 11498  000196  50F3               	movf	prodl,w,c
 11499  000198  2581               	addwf	??_sprintf& (0+255),w,b
 11500  00019A  0FD0               	addlw	208
 11501  00019C  6F92               	movwf	sprintf@prec& (0+255),b
 11502                           
 11503                           ; BSR set to: 0
 11504  00019E  4B77               	infsnz	sprintf@f& (0+255),f,b
 11505  0001A0  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11506  0001A2                     l8932:
 11507                           
 11508                           ; BSR set to: 0
 11509  0001A2  C077  FFF6         	movff	sprintf@f,tblptrl
 11510  0001A6  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11511  0001AA                     	if	0	;tblptru may be non-zero
 11512  0001AA                     	endif
 11513  0001AA                     	if	0	;tblptru may be non-zero
 11514  0001AA                     	endif
 11515  0001AA  0008               	tblrd		*
 11516  0001AC  50F5               	movf	tablat,w,c
 11517  0001AE  EC91  F015         	call	_isdigit
 11518  0001B2  E370               	bnc	l8984
 11519  0001B4  D7E7               	goto	l8928
 11520  0001B6                     l1081:
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;doprnt.c: 626: prec = 0;
 11524  0001B6  6B92               	clrf	sprintf@prec& (0+255),b
 11525  0001B8  D06D               	goto	l8984
 11526  0001BA                     l8934:
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;doprnt.c: 691: flag |= 0x40;
 11530  0001BA  8D96               	bsf	sprintf@flag& (0+255),6,b
 11531                           
 11532                           ;doprnt.c: 693: break;
 11533  0001BC  D088               	goto	l8986
 11534  0001BE                     l8936:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;doprnt.c: 714: flag |= 0x20;
 11538  0001BE  8B96               	bsf	sprintf@flag& (0+255),5,b
 11539  0001C0                     l1096:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;doprnt.c: 721: flag |= 0x80;
 11543  0001C0  8F96               	bsf	sprintf@flag& (0+255),7,b
 11544                           
 11545                           ;doprnt.c: 723: break;
 11546  0001C2  D085               	goto	l8986
 11547  0001C4                     l8938:
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;doprnt.c: 753: if(prec && prec < len)
 11551  0001C4  5192               	movf	sprintf@prec& (0+255),w,b
 11552  0001C6  E00F               	bz	l8944
 11553                           
 11554                           ; BSR set to: 0
 11555  0001C8  C092  F081         	movff	sprintf@prec,??_sprintf
 11556  0001CC  6B82               	clrf	(??_sprintf+1)& (0+255),b
 11557  0001CE  BF81               	btfsc	??_sprintf& (0+255),7,b
 11558  0001D0  0782               	decf	(??_sprintf+1)& (0+255),f,b
 11559  0001D2  518D               	movf	sprintf@len& (0+255),w,b
 11560  0001D4  5D81               	subwf	??_sprintf& (0+255),w,b
 11561  0001D6  518E               	movf	(sprintf@len+1)& (0+255),w,b
 11562  0001D8  5982               	subwfb	(??_sprintf+1)& (0+255),w,b
 11563  0001DA  E205               	bc	l8944
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;doprnt.c: 754: len = prec;
 11567  0001DC  5192               	movf	sprintf@prec& (0+255),w,b
 11568  0001DE  6F8D               	movwf	sprintf@len& (0+255),b
 11569  0001E0  6B8E               	clrf	(sprintf@len+1)& (0+255),b
 11570  0001E2  BF8D               	btfsc	sprintf@len& (0+255),7,b
 11571  0001E4  078E               	decf	(sprintf@len+1)& (0+255),f,b
 11572  0001E6                     l8944:
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;doprnt.c: 757: if(width > len)
 11576  0001E6  5193               	movf	sprintf@width& (0+255),w,b
 11577  0001E8  5D8D               	subwf	sprintf@len& (0+255),w,b
 11578  0001EA  5194               	movf	(sprintf@width+1)& (0+255),w,b
 11579  0001EC  598E               	subwfb	(sprintf@len+1)& (0+255),w,b
 11580  0001EE  E205               	bc	l1099
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;doprnt.c: 758: width -= len;
 11584  0001F0  518D               	movf	sprintf@len& (0+255),w,b
 11585  0001F2  5F93               	subwf	sprintf@width& (0+255),f,b
 11586  0001F4  518E               	movf	(sprintf@len+1)& (0+255),w,b
 11587  0001F6  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 11588  0001F8  D002               	goto	l1100
 11589  0001FA                     l1099:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;doprnt.c: 759: else
 11593                           ;doprnt.c: 760: width = 0;
 11594  0001FA  6B93               	clrf	sprintf@width& (0+255),b
 11595  0001FC  6B94               	clrf	(sprintf@width+1)& (0+255),b
 11596  0001FE                     l1100:
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;doprnt.c: 762: if(!(flag & 0x08))
 11600  0001FE  B796               	btfsc	sprintf@flag& (0+255),3,b
 11601  000200  D01D               	goto	l8962
 11602  000202  D008               	goto	l8954
 11603  000204                     l8950:
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11607  000204  C075  FFD9         	movff	sprintf@sp,fsr2l
 11608  000208  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 11609  00020C  0E20               	movlw	32
 11610  00020E  6EDF               	movwf	indf2,c
 11611                           
 11612                           ; BSR set to: 0
 11613  000210  4B75               	infsnz	sprintf@sp& (0+255),f,b
 11614  000212  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 11615  000214                     l8954:
 11616                           
 11617                           ; BSR set to: 0
 11618  000214  0793               	decf	sprintf@width& (0+255),f,b
 11619  000216  A0D8               	btfss	status,0,c
 11620  000218  0794               	decf	(sprintf@width+1)& (0+255),f,b
 11621  00021A  2993               	incf	sprintf@width& (0+255),w,b
 11622  00021C  E1F3               	bnz	l8950
 11623  00021E  2994               	incf	(sprintf@width+1)& (0+255),w,b
 11624  000220  E00D               	bz	l8962
 11625  000222  D7F0               	goto	l8950
 11626  000224                     l8956:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11630  000224  518C               	movf	sprintf@cp& (0+255),w,b
 11631  000226  6ED9               	movwf	fsr2l,c
 11632  000228  6ADA               	clrf	fsr2h,c
 11633  00022A  C075  FFE1         	movff	sprintf@sp,fsr1l
 11634  00022E  C076  FFE2         	movff	sprintf@sp+1,fsr1h
 11635  000232  CFDF FFE7          	movff	indf2,indf1
 11636                           
 11637                           ; BSR set to: 0
 11638  000236  2B8C               	incf	sprintf@cp& (0+255),f,b
 11639                           
 11640                           ; BSR set to: 0
 11641  000238  4B75               	infsnz	sprintf@sp& (0+255),f,b
 11642  00023A  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 11643  00023C                     l8962:
 11644                           
 11645                           ; BSR set to: 0
 11646  00023C  078D               	decf	sprintf@len& (0+255),f,b
 11647  00023E  A0D8               	btfss	status,0,c
 11648  000240  078E               	decf	(sprintf@len+1)& (0+255),f,b
 11649  000242  298D               	incf	sprintf@len& (0+255),w,b
 11650  000244  E1EF               	bnz	l8956
 11651  000246  298E               	incf	(sprintf@len+1)& (0+255),w,b
 11652  000248  E1ED               	bnz	l8956
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;doprnt.c: 770: if(flag & 0x08)
 11656  00024A  A796               	btfss	sprintf@flag& (0+255),3,b
 11657  00024C  D280               	goto	l9198
 11658  00024E  D008               	goto	l8970
 11659  000250                     l8966:
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;doprnt.c: 772: ((*sp++ = (' ')));
 11663  000250  C075  FFD9         	movff	sprintf@sp,fsr2l
 11664  000254  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 11665  000258  0E20               	movlw	32
 11666  00025A  6EDF               	movwf	indf2,c
 11667                           
 11668                           ; BSR set to: 0
 11669  00025C  4B75               	infsnz	sprintf@sp& (0+255),f,b
 11670  00025E  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 11671  000260                     l8970:
 11672                           
 11673                           ; BSR set to: 0
 11674  000260  0793               	decf	sprintf@width& (0+255),f,b
 11675  000262  A0D8               	btfss	status,0,c
 11676  000264  0794               	decf	(sprintf@width+1)& (0+255),f,b
 11677  000266  2993               	incf	sprintf@width& (0+255),w,b
 11678  000268  E1F3               	bnz	l8966
 11679  00026A  2994               	incf	(sprintf@width+1)& (0+255),w,b
 11680  00026C  E101 D26F          	bz	l9198
 11681  000270  D7EF               	goto	l8966
 11682  000272                     l8972:
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 11686  000272  518F               	movf	sprintf@ap& (0+255),w,b
 11687  000274  6ED9               	movwf	fsr2l,c
 11688  000276  6ADA               	clrf	fsr2h,c
 11689  000278  50DF               	movf	indf2,w,c
 11690  00027A  6F95               	movwf	sprintf@c& (0+255),b
 11691                           
 11692                           ; BSR set to: 0
 11693  00027C  0E02               	movlw	2
 11694  00027E  278F               	addwf	sprintf@ap& (0+255),f,b
 11695  000280                     l8976:
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;doprnt.c: 805: cp = (char *)&c;
 11699  000280  0E95               	movlw	low sprintf@c
 11700  000282  6F8C               	movwf	sprintf@cp& (0+255),b
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;doprnt.c: 806: len = 1;
 11704  000284  0E00               	movlw	0
 11705  000286  6F8E               	movwf	(sprintf@len+1)& (0+255),b
 11706  000288  0E01               	movlw	1
 11707  00028A  6F8D               	movwf	sprintf@len& (0+255),b
 11708                           
 11709                           ;doprnt.c: 807: goto dostring;
 11710  00028C  D79B               	goto	l8938
 11711  00028E                     l8980:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;doprnt.c: 818: flag |= 0xC0;
 11715  00028E  0EC0               	movlw	192
 11716  000290  1396               	iorwf	sprintf@flag& (0+255),f,b
 11717                           
 11718                           ;doprnt.c: 819: break;
 11719  000292  D01D               	goto	l8986
 11720  000294                     l8984:
 11721                           
 11722                           ; BSR set to: 0
 11723  000294  C077  FFF6         	movff	sprintf@f,tblptrl
 11724  000298  C078  FFF7         	movff	sprintf@f+1,tblptrh
 11725  00029C  4B77               	infsnz	sprintf@f& (0+255),f,b
 11726  00029E  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 11727  0002A0                     	if	0	;tblptru may be non-zero
 11728  0002A0                     	endif
 11729  0002A0                     	if	0	;tblptru may be non-zero
 11730  0002A0                     	endif
 11731  0002A0  0008               	tblrd		*
 11732  0002A2  CFF5 F095          	movff	tablat,sprintf@c
 11733  0002A6  5195               	movf	sprintf@c& (0+255),w,b
 11734                           
 11735                           ; Switch size 1, requested type "speed"
 11736                           ; Number of cases is 8, Range of values is 0 to 120
 11737                           ; switch strategies available:
 11738                           ; Name         Instructions Cycles
 11739                           ; simple_byte           25    13 (average)
 11740                           ;	Chosen strategy is simple_byte
 11741  0002A8  E101 D25D          	bz	l9200
 11742  0002AC  0A58               	xorlw	88	; case 88
 11743  0002AE  E087               	bz	l8936
 11744  0002B0  0A3B               	xorlw	59	; case 99
 11745  0002B2  E0DF               	bz	l8972
 11746  0002B4  0A07               	xorlw	7	; case 100
 11747  0002B6  E00B               	bz	l8986
 11748  0002B8  0A0D               	xorlw	13	; case 105
 11749  0002BA  E009               	bz	l8986
 11750  0002BC  0A06               	xorlw	6	; case 111
 11751  0002BE  E101 D77C          	bz	l8934
 11752  0002C2  0A1A               	xorlw	26	; case 117
 11753  0002C4  E0E4               	bz	l8980
 11754  0002C6  0A0D               	xorlw	13	; case 120
 11755  0002C8  E101 D77A          	bz	l1096
 11756  0002CC  D7D9               	goto	l8976
 11757  0002CE                     l8986:
 11758                           
 11759                           ; BSR set to: 0
 11760                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11761  0002CE  C096  F081         	movff	sprintf@flag,??_sprintf
 11762  0002D2  0EC0               	movlw	192
 11763  0002D4  1781               	andwf	??_sprintf& (0+255),f,b
 11764  0002D6  E112               	bnz	l8998
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;doprnt.c: 1253: {
 11768                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11769  0002D8  518F               	movf	sprintf@ap& (0+255),w,b
 11770  0002DA  6ED9               	movwf	fsr2l,c
 11771  0002DC  6ADA               	clrf	fsr2h,c
 11772  0002DE  CFDE F090          	movff	postinc2,sprintf@val
 11773  0002E2  CFDD F091          	movff	postdec2,sprintf@val+1
 11774                           
 11775                           ; BSR set to: 0
 11776  0002E6  0E02               	movlw	2
 11777  0002E8  278F               	addwf	sprintf@ap& (0+255),f,b
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;doprnt.c: 1261: if((int)val < 0) {
 11781  0002EA  AF91               	btfss	(sprintf@val+1)& (0+255),7,b
 11782  0002EC  D010               	goto	l9002
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;doprnt.c: 1262: flag |= 0x03;
 11786  0002EE  0E03               	movlw	3
 11787  0002F0  1396               	iorwf	sprintf@flag& (0+255),f,b
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;doprnt.c: 1263: val = -val;
 11791  0002F2  6D90               	negf	sprintf@val& (0+255),b
 11792  0002F4  1F91               	comf	(sprintf@val+1)& (0+255),f,b
 11793  0002F6  B0D8               	btfsc	status,0,c
 11794  0002F8  2B91               	incf	(sprintf@val+1)& (0+255),f,b
 11795  0002FA  D009               	goto	l9002
 11796  0002FC                     l8998:
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;doprnt.c: 1268: else
 11800                           ;doprnt.c: 1273: {
 11801                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11802  0002FC  518F               	movf	sprintf@ap& (0+255),w,b
 11803  0002FE  6ED9               	movwf	fsr2l,c
 11804  000300  6ADA               	clrf	fsr2h,c
 11805  000302  CFDE F090          	movff	postinc2,sprintf@val
 11806  000306  CFDD F091          	movff	postdec2,sprintf@val+1
 11807                           
 11808                           ; BSR set to: 0
 11809  00030A  0E02               	movlw	2
 11810  00030C  278F               	addwf	sprintf@ap& (0+255),f,b
 11811  00030E                     l9002:
 11812                           
 11813                           ; BSR set to: 0
 11814                           ;doprnt.c: 1287: }
 11815                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11816  00030E  5192               	movf	sprintf@prec& (0+255),w,b
 11817  000310  E147               	bnz	l9052
 11818                           
 11819                           ; BSR set to: 0
 11820  000312  5190               	movf	sprintf@val& (0+255),w,b
 11821  000314  1191               	iorwf	(sprintf@val+1)& (0+255),w,b
 11822  000316  E144               	bnz	l9052
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;doprnt.c: 1291: prec++;
 11826  000318  2B92               	incf	sprintf@prec& (0+255),f,b
 11827  00031A  D042               	goto	l9052
 11828  00031C                     l9008:
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;doprnt.c: 1302: case 0xC0:
 11832                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11833  00031C  0E01               	movlw	1
 11834  00031E  6F95               	movwf	sprintf@c& (0+255),b
 11835  000320                     l9010:
 11836                           
 11837                           ; BSR set to: 0
 11838  000320  0E05               	movlw	5
 11839  000322  1995               	xorwf	sprintf@c& (0+255),w,b
 11840  000324  E046               	bz	l9054
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;doprnt.c: 1306: if(val < dpowers[c])
 11844  000326  5195               	movf	sprintf@c& (0+255),w,b
 11845  000328  0D02               	mullw	2
 11846  00032A  0E0B               	movlw	low _dpowers
 11847  00032C  24F3               	addwf	prodl,w,c
 11848  00032E  6EF6               	movwf	tblptrl,c
 11849  000330  0EFE               	movlw	high _dpowers
 11850  000332  20F4               	addwfc	prodh,w,c
 11851  000334  6EF7               	movwf	tblptrh,c
 11852  000336                     	if	0	;There are less than 3 active tblptr bytes
 11853  000336                     	endif
 11854  000336  0009               	tblrd		*+
 11855  000338  50F5               	movf	tablat,w,c
 11856  00033A  5D90               	subwf	sprintf@val& (0+255),w,b
 11857  00033C  0009               	tblrd		*+
 11858  00033E  50F5               	movf	tablat,w,c
 11859  000340  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 11860  000342  E337               	bnc	l9054
 11861                           
 11862                           ; BSR set to: 0
 11863  000344  2B95               	incf	sprintf@c& (0+255),f,b
 11864  000346  D7EC               	goto	l9010
 11865  000348                     l9022:
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11869  000348  0E01               	movlw	1
 11870  00034A  6F95               	movwf	sprintf@c& (0+255),b
 11871  00034C                     l9024:
 11872                           
 11873                           ; BSR set to: 0
 11874  00034C  0E04               	movlw	4
 11875  00034E  1995               	xorwf	sprintf@c& (0+255),w,b
 11876  000350  E030               	bz	l9054
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11880  000352  5195               	movf	sprintf@c& (0+255),w,b
 11881  000354  0D02               	mullw	2
 11882  000356  0E15               	movlw	low _hexpowers
 11883  000358  24F3               	addwf	prodl,w,c
 11884  00035A  6EF6               	movwf	tblptrl,c
 11885  00035C  0EFE               	movlw	high _hexpowers
 11886  00035E  20F4               	addwfc	prodh,w,c
 11887  000360  6EF7               	movwf	tblptrh,c
 11888  000362                     	if	0	;There are less than 3 active tblptr bytes
 11889  000362                     	endif
 11890  000362  0009               	tblrd		*+
 11891  000364  50F5               	movf	tablat,w,c
 11892  000366  5D90               	subwf	sprintf@val& (0+255),w,b
 11893  000368  0009               	tblrd		*+
 11894  00036A  50F5               	movf	tablat,w,c
 11895  00036C  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 11896  00036E  E321               	bnc	l9054
 11897                           
 11898                           ; BSR set to: 0
 11899  000370  2B95               	incf	sprintf@c& (0+255),f,b
 11900  000372  D7EC               	goto	l9024
 11901  000374                     l9036:
 11902                           
 11903                           ; BSR set to: 0
 11904                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 11905  000374  0E01               	movlw	1
 11906  000376  6F95               	movwf	sprintf@c& (0+255),b
 11907  000378                     l9038:
 11908                           
 11909                           ; BSR set to: 0
 11910  000378  0E06               	movlw	6
 11911  00037A  1995               	xorwf	sprintf@c& (0+255),w,b
 11912  00037C  E01A               	bz	l9054
 11913                           
 11914                           ; BSR set to: 0
 11915                           ;doprnt.c: 1329: if(val < octpowers[c])
 11916  00037E  5195               	movf	sprintf@c& (0+255),w,b
 11917  000380  0D02               	mullw	2
 11918  000382  0EFF               	movlw	low _octpowers
 11919  000384  24F3               	addwf	prodl,w,c
 11920  000386  6EF6               	movwf	tblptrl,c
 11921  000388  0EFD               	movlw	high _octpowers
 11922  00038A  20F4               	addwfc	prodh,w,c
 11923  00038C  6EF7               	movwf	tblptrh,c
 11924  00038E                     	if	0	;There are less than 3 active tblptr bytes
 11925  00038E                     	endif
 11926  00038E  0009               	tblrd		*+
 11927  000390  50F5               	movf	tablat,w,c
 11928  000392  5D90               	subwf	sprintf@val& (0+255),w,b
 11929  000394  0009               	tblrd		*+
 11930  000396  50F5               	movf	tablat,w,c
 11931  000398  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 11932  00039A  E30B               	bnc	l9054
 11933                           
 11934                           ; BSR set to: 0
 11935  00039C  2B95               	incf	sprintf@c& (0+255),f,b
 11936  00039E  D7EC               	goto	l9038
 11937  0003A0                     l9052:
 11938                           
 11939                           ; BSR set to: 0
 11940  0003A0  5196               	movf	sprintf@flag& (0+255),w,b
 11941  0003A2  0BC0               	andlw	192
 11942                           
 11943                           ; Switch size 1, requested type "speed"
 11944                           ; Number of cases is 4, Range of values is 0 to 192
 11945                           ; switch strategies available:
 11946                           ; Name         Instructions Cycles
 11947                           ; simple_byte           13     7 (average)
 11948                           ;	Chosen strategy is simple_byte
 11949  0003A4  E0BB               	bz	l9008
 11950  0003A6  0A40               	xorlw	64	; case 64
 11951  0003A8  E0E5               	bz	l9036
 11952  0003AA  0AC0               	xorlw	192	; case 128
 11953  0003AC  E0CD               	bz	l9022
 11954  0003AE  0A40               	xorlw	64	; case 192
 11955  0003B0  E0B5               	bz	l9008
 11956  0003B2                     l9054:
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;doprnt.c: 1339: if(c < prec)
 11960  0003B2  5195               	movf	sprintf@c& (0+255),w,b
 11961  0003B4  0A80               	xorlw	128
 11962  0003B6  6F81               	movwf	??_sprintf& (0+255),b
 11963  0003B8  5192               	movf	sprintf@prec& (0+255),w,b
 11964  0003BA  0A80               	xorlw	128
 11965  0003BC  5D81               	subwf	??_sprintf& (0+255),w,b
 11966  0003BE  E203               	bc	l9058
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;doprnt.c: 1340: c = prec;
 11970  0003C0  C092  F095         	movff	sprintf@prec,sprintf@c
 11971  0003C4  D009               	goto	l9062
 11972  0003C6                     l9058:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;doprnt.c: 1341: else if(prec < c)
 11976  0003C6  5192               	movf	sprintf@prec& (0+255),w,b
 11977  0003C8  0A80               	xorlw	128
 11978  0003CA  6F81               	movwf	??_sprintf& (0+255),b
 11979  0003CC  5195               	movf	sprintf@c& (0+255),w,b
 11980  0003CE  0A80               	xorlw	128
 11981  0003D0  5D81               	subwf	??_sprintf& (0+255),w,b
 11982  0003D2  E202               	bc	l9062
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;doprnt.c: 1342: prec = c;
 11986  0003D4  C095  F092         	movff	sprintf@c,sprintf@prec
 11987  0003D8                     l9062:
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11991  0003D8  5193               	movf	sprintf@width& (0+255),w,b
 11992  0003DA  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 11993  0003DC  E008               	bz	l9068
 11994                           
 11995                           ; BSR set to: 0
 11996  0003DE  C096  F081         	movff	sprintf@flag,??_sprintf
 11997  0003E2  0E03               	movlw	3
 11998  0003E4  1781               	andwf	??_sprintf& (0+255),f,b
 11999  0003E6  E003               	bz	l9068
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;doprnt.c: 1346: width--;
 12003  0003E8  0793               	decf	sprintf@width& (0+255),f,b
 12004  0003EA  A0D8               	btfss	status,0,c
 12005  0003EC  0794               	decf	(sprintf@width+1)& (0+255),f,b
 12006  0003EE                     l9068:
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;doprnt.c: 1348: if(flag & 0x4000) {
 12010  0003EE  AD97               	btfss	(sprintf@flag+1)& (0+255),6,b
 12011  0003F0  D013               	goto	l9074
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;doprnt.c: 1349: if(width > prec)
 12015  0003F2  0E80               	movlw	128
 12016  0003F4  BF92               	btfsc	sprintf@prec& (0+255),7,b
 12017  0003F6  0E7F               	movlw	127
 12018  0003F8  6F81               	movwf	??_sprintf& (0+255),b
 12019  0003FA  5193               	movf	sprintf@width& (0+255),w,b
 12020  0003FC  5D92               	subwf	sprintf@prec& (0+255),w,b
 12021  0003FE  5194               	movf	(sprintf@width+1)& (0+255),w,b
 12022  000400  0A80               	xorlw	128
 12023  000402  5981               	subwfb	??_sprintf& (0+255),w,b
 12024  000404  E207               	bc	l1139
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;doprnt.c: 1350: width -= prec;
 12028  000406  5192               	movf	sprintf@prec& (0+255),w,b
 12029  000408  5F93               	subwf	sprintf@width& (0+255),f,b
 12030  00040A  0E00               	movlw	0
 12031  00040C  BF92               	btfsc	sprintf@prec& (0+255),7,b
 12032  00040E  0EFF               	movlw	255
 12033  000410  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 12034  000412  D002               	goto	l9074
 12035  000414                     l1139:
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;doprnt.c: 1351: else
 12039                           ;doprnt.c: 1352: width = 0;
 12040  000414  6B93               	clrf	sprintf@width& (0+255),b
 12041  000416  6B94               	clrf	(sprintf@width+1)& (0+255),b
 12042  000418                     l9074:
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;doprnt.c: 1353: }
 12046                           ;doprnt.c: 1357: if((flag & (
 12047                           ;doprnt.c: 1359: 0x04|
 12048                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 12049  000418  0EC4               	movlw	196
 12050  00041A  6F81               	movwf	??_sprintf& (0+255),b
 12051  00041C  0E08               	movlw	8
 12052  00041E  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12053  000420  C096  F083         	movff	sprintf@flag,??_sprintf+2
 12054  000424  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 12055  000428  5181               	movf	??_sprintf& (0+255),w,b
 12056  00042A  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 12057  00042C  5182               	movf	(??_sprintf+1)& (0+255),w,b
 12058  00042E  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 12059  000430  0E40               	movlw	64
 12060  000432  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 12061  000434  E10A               	bnz	l9080
 12062  000436  0E08               	movlw	8
 12063  000438  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 12064  00043A  E107               	bnz	l9080
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;doprnt.c: 1362: if(width)
 12068  00043C  5193               	movf	sprintf@width& (0+255),w,b
 12069  00043E  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 12070  000440  E024               	bz	l9086
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;doprnt.c: 1363: width--;
 12074  000442  0793               	decf	sprintf@width& (0+255),f,b
 12075  000444  A0D8               	btfss	status,0,c
 12076  000446  0794               	decf	(sprintf@width+1)& (0+255),f,b
 12077  000448  D020               	goto	l9086
 12078  00044A                     l9080:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 12082  00044A  0EC0               	movlw	192
 12083  00044C  6F81               	movwf	??_sprintf& (0+255),b
 12084  00044E  0E08               	movlw	8
 12085  000450  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12086  000452  C096  F083         	movff	sprintf@flag,??_sprintf+2
 12087  000456  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 12088  00045A  5181               	movf	??_sprintf& (0+255),w,b
 12089  00045C  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 12090  00045E  5182               	movf	(??_sprintf+1)& (0+255),w,b
 12091  000460  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 12092  000462  0E80               	movlw	128
 12093  000464  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 12094  000466  E111               	bnz	l9086
 12095  000468  0E08               	movlw	8
 12096  00046A  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 12097  00046C  E10E               	bnz	l9086
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;doprnt.c: 1372: if(width > 2)
 12101  00046E  BF94               	btfsc	(sprintf@width+1)& (0+255),7,b
 12102  000470  D00A               	goto	l1145
 12103  000472  5194               	movf	(sprintf@width+1)& (0+255),w,b
 12104  000474  E103               	bnz	u8880
 12105  000476  0E03               	movlw	3
 12106  000478  5D93               	subwf	sprintf@width& (0+255),w,b
 12107  00047A  E305               	bnc	l1145
 12108  00047C                     u8880:
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;doprnt.c: 1373: width -= 2;
 12112  00047C  0EFE               	movlw	254
 12113  00047E  2793               	addwf	sprintf@width& (0+255),f,b
 12114  000480  0EFF               	movlw	255
 12115  000482  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
 12116  000484  D002               	goto	l9086
 12117  000486                     l1145:
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;doprnt.c: 1374: else
 12121                           ;doprnt.c: 1375: width = 0;
 12122  000486  6B93               	clrf	sprintf@width& (0+255),b
 12123  000488  6B94               	clrf	(sprintf@width+1)& (0+255),b
 12124  00048A                     l9086:
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;doprnt.c: 1376: }
 12128                           ;doprnt.c: 1381: if(width > c)
 12129  00048A  0E80               	movlw	128
 12130  00048C  BF95               	btfsc	sprintf@c& (0+255),7,b
 12131  00048E  0E7F               	movlw	127
 12132  000490  6F81               	movwf	??_sprintf& (0+255),b
 12133  000492  5193               	movf	sprintf@width& (0+255),w,b
 12134  000494  5D95               	subwf	sprintf@c& (0+255),w,b
 12135  000496  5194               	movf	(sprintf@width+1)& (0+255),w,b
 12136  000498  0A80               	xorlw	128
 12137  00049A  5981               	subwfb	??_sprintf& (0+255),w,b
 12138  00049C  E207               	bc	l1147
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;doprnt.c: 1382: width -= c;
 12142  00049E  5195               	movf	sprintf@c& (0+255),w,b
 12143  0004A0  5F93               	subwf	sprintf@width& (0+255),f,b
 12144  0004A2  0E00               	movlw	0
 12145  0004A4  BF95               	btfsc	sprintf@c& (0+255),7,b
 12146  0004A6  0EFF               	movlw	255
 12147  0004A8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 12148  0004AA  D002               	goto	l1148
 12149  0004AC                     l1147:
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;doprnt.c: 1383: else
 12153                           ;doprnt.c: 1384: width = 0;
 12154  0004AC  6B93               	clrf	sprintf@width& (0+255),b
 12155  0004AE  6B94               	clrf	(sprintf@width+1)& (0+255),b
 12156  0004B0                     l1148:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;doprnt.c: 1387: if(flag & 0x04) {
 12160  0004B0  A596               	btfss	sprintf@flag& (0+255),2,b
 12161  0004B2  D04F               	goto	l9124
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;doprnt.c: 1392: if(flag & 0x03)
 12165  0004B4  C096  F081         	movff	sprintf@flag,??_sprintf
 12166  0004B8  0E03               	movlw	3
 12167  0004BA  1781               	andwf	??_sprintf& (0+255),f,b
 12168  0004BC  E009               	bz	l1150
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12172  0004BE  C075  FFD9         	movff	sprintf@sp,fsr2l
 12173  0004C2  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12174  0004C6  0E2D               	movlw	45
 12175  0004C8  6EDF               	movwf	indf2,c
 12176  0004CA                     l9094:
 12177                           
 12178                           ; BSR set to: 0
 12179  0004CA  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12180  0004CC  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12181  0004CE  D031               	goto	l9116
 12182  0004D0                     l1150:
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;doprnt.c: 1396: else
 12186                           ;doprnt.c: 1399: if(flag & 0x01)
 12187  0004D0  A196               	btfss	sprintf@flag& (0+255),0,b
 12188  0004D2  D006               	goto	l9100
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 12192  0004D4  C075  FFD9         	movff	sprintf@sp,fsr2l
 12193  0004D8  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12194  0004DC  0E20               	movlw	32
 12195  0004DE  D7F4               	goto	L2
 12196  0004E0                     l9100:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 12200  0004E0  0EC0               	movlw	192
 12201  0004E2  6F81               	movwf	??_sprintf& (0+255),b
 12202  0004E4  0E08               	movlw	8
 12203  0004E6  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12204  0004E8  C096  F083         	movff	sprintf@flag,??_sprintf+2
 12205  0004EC  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 12206  0004F0  5181               	movf	??_sprintf& (0+255),w,b
 12207  0004F2  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 12208  0004F4  5182               	movf	(??_sprintf+1)& (0+255),w,b
 12209  0004F6  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 12210  0004F8  0E80               	movlw	128
 12211  0004FA  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 12212  0004FC  E11A               	bnz	l9116
 12213  0004FE  0E08               	movlw	8
 12214  000500  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 12215  000502  E117               	bnz	l9116
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 12219  000504  C075  FFD9         	movff	sprintf@sp,fsr2l
 12220  000508  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12221  00050C  0E30               	movlw	48
 12222  00050E  6EDF               	movwf	indf2,c
 12223                           
 12224                           ; BSR set to: 0
 12225  000510  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12226  000512  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 12230  000514  BB96               	btfsc	sprintf@flag& (0+255),5,b
 12231  000516  D003               	goto	l9110
 12232                           
 12233                           ; BSR set to: 0
 12234  000518  6B87               	clrf	(_sprintf$2917+1)& (0+255),b
 12235  00051A  0E78               	movlw	120
 12236  00051C  D002               	goto	L3
 12237  00051E                     l9110:
 12238                           
 12239                           ; BSR set to: 0
 12240  00051E  6B87               	clrf	(_sprintf$2917+1)& (0+255),b
 12241  000520  0E58               	movlw	88
 12242  000522                     L3:
 12243  000522  6F86               	movwf	_sprintf$2917& (0+255),b
 12244                           
 12245                           ; BSR set to: 0
 12246  000524  C075  FFD9         	movff	sprintf@sp,fsr2l
 12247  000528  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12248  00052C  C086  FFDF         	movff	_sprintf$2917,indf2
 12249  000530  D7CC               	goto	l9094
 12250  000532                     l9116:
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;doprnt.c: 1412: }
 12254                           ;doprnt.c: 1415: if(width)
 12255  000532  5193               	movf	sprintf@width& (0+255),w,b
 12256  000534  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 12257  000536  E101 D0F2          	bz	l9188
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12261  00053A  C075  FFD9         	movff	sprintf@sp,fsr2l
 12262  00053E  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12263  000542  0E30               	movlw	48
 12264  000544  6EDF               	movwf	indf2,c
 12265                           
 12266                           ; BSR set to: 0
 12267  000546  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12268  000548  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;doprnt.c: 1418: while(--width);
 12272  00054A  0793               	decf	sprintf@width& (0+255),f,b
 12273  00054C  A0D8               	btfss	status,0,c
 12274  00054E  0794               	decf	(sprintf@width+1)& (0+255),f,b
 12275  000550  D7F0               	goto	l9116
 12276  000552                     l9124:
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;doprnt.c: 1422: {
 12280                           ;doprnt.c: 1424: if(width
 12281                           ;doprnt.c: 1426: && !(flag & 0x08)
 12282                           ;doprnt.c: 1428: )
 12283  000552  5193               	movf	sprintf@width& (0+255),w,b
 12284  000554  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 12285  000556  E010               	bz	l9134
 12286                           
 12287                           ; BSR set to: 0
 12288  000558  B796               	btfsc	sprintf@flag& (0+255),3,b
 12289  00055A  D00E               	goto	l9134
 12290  00055C                     l9128:
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12294  00055C  C075  FFD9         	movff	sprintf@sp,fsr2l
 12295  000560  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12296  000564  0E20               	movlw	32
 12297  000566  6EDF               	movwf	indf2,c
 12298                           
 12299                           ; BSR set to: 0
 12300  000568  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12301  00056A  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;doprnt.c: 1431: while(--width);
 12305  00056C  0793               	decf	sprintf@width& (0+255),f,b
 12306  00056E  A0D8               	btfss	status,0,c
 12307  000570  0794               	decf	(sprintf@width+1)& (0+255),f,b
 12308  000572  5193               	movf	sprintf@width& (0+255),w,b
 12309  000574  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 12310  000576  E1F2               	bnz	l9128
 12311  000578                     l9134:
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;doprnt.c: 1438: if(flag & 0x03)
 12315  000578  C096  F081         	movff	sprintf@flag,??_sprintf
 12316  00057C  0E03               	movlw	3
 12317  00057E  1781               	andwf	??_sprintf& (0+255),f,b
 12318  000580  E009               	bz	l1166
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12322  000582  C075  FFD9         	movff	sprintf@sp,fsr2l
 12323  000586  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12324  00058A  0E2D               	movlw	45
 12325  00058C  6EDF               	movwf	indf2,c
 12326                           
 12327                           ; BSR set to: 0
 12328  00058E  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12329  000590  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12330  000592  D008               	goto	l9144
 12331  000594                     l1166:
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;doprnt.c: 1443: else if(flag & 0x01)
 12335  000594  A196               	btfss	sprintf@flag& (0+255),0,b
 12336  000596  D006               	goto	l9144
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 12340  000598  C075  FFD9         	movff	sprintf@sp,fsr2l
 12341  00059C  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12342  0005A0  0E20               	movlw	32
 12343  0005A2  D7F4               	goto	L4
 12344  0005A4                     l9144:
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 12348  0005A4  0EC0               	movlw	192
 12349  0005A6  6F81               	movwf	??_sprintf& (0+255),b
 12350  0005A8  0E08               	movlw	8
 12351  0005AA  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12352  0005AC  C096  F083         	movff	sprintf@flag,??_sprintf+2
 12353  0005B0  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 12354  0005B4  5181               	movf	??_sprintf& (0+255),w,b
 12355  0005B6  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 12356  0005B8  5182               	movf	(??_sprintf+1)& (0+255),w,b
 12357  0005BA  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 12358  0005BC  0E40               	movlw	64
 12359  0005BE  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 12360  0005C0  E10C               	bnz	l9150
 12361  0005C2  0E08               	movlw	8
 12362  0005C4  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 12363  0005C6  E109               	bnz	l9150
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 12367  0005C8  C075  FFD9         	movff	sprintf@sp,fsr2l
 12368  0005CC  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12369  0005D0  0E30               	movlw	48
 12370  0005D2  6EDF               	movwf	indf2,c
 12371  0005D4                     l9148:
 12372                           
 12373                           ; BSR set to: 0
 12374  0005D4  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12375  0005D6  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12376  0005D8  D0A2               	goto	l9188
 12377  0005DA                     l9150:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;doprnt.c: 1450: else
 12381                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 12382  0005DA  0EC0               	movlw	192
 12383  0005DC  6F81               	movwf	??_sprintf& (0+255),b
 12384  0005DE  0E08               	movlw	8
 12385  0005E0  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12386  0005E2  C096  F083         	movff	sprintf@flag,??_sprintf+2
 12387  0005E6  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 12388  0005EA  5181               	movf	??_sprintf& (0+255),w,b
 12389  0005EC  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 12390  0005EE  5182               	movf	(??_sprintf+1)& (0+255),w,b
 12391  0005F0  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 12392  0005F2  0E80               	movlw	128
 12393  0005F4  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 12394  0005F6  E11B               	bnz	l1162
 12395  0005F8  0E08               	movlw	8
 12396  0005FA  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 12397  0005FC  E001 D08F          	bnz	l9188
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 12401  000600  C075  FFD9         	movff	sprintf@sp,fsr2l
 12402  000604  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12403  000608  0E30               	movlw	48
 12404  00060A  6EDF               	movwf	indf2,c
 12405                           
 12406                           ; BSR set to: 0
 12407  00060C  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12408  00060E  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 12412  000610  BB96               	btfsc	sprintf@flag& (0+255),5,b
 12413  000612  D003               	goto	l9160
 12414                           
 12415                           ; BSR set to: 0
 12416  000614  6B89               	clrf	(_sprintf$2918+1)& (0+255),b
 12417  000616  0E78               	movlw	120
 12418  000618  D002               	goto	L5
 12419  00061A                     l9160:
 12420                           
 12421                           ; BSR set to: 0
 12422  00061A  6B89               	clrf	(_sprintf$2918+1)& (0+255),b
 12423  00061C  0E58               	movlw	88
 12424  00061E                     L5:
 12425  00061E  6F88               	movwf	_sprintf$2918& (0+255),b
 12426                           
 12427                           ; BSR set to: 0
 12428  000620  C075  FFD9         	movff	sprintf@sp,fsr2l
 12429  000624  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12430  000628  C088  FFDF         	movff	_sprintf$2918,indf2
 12431  00062C  D7D3               	goto	l9148
 12432  00062E                     l1162:
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;doprnt.c: 1466: }
 12436                           ;doprnt.c: 1469: }
 12437                           ;doprnt.c: 1474: while(prec--) {
 12438  00062E  D077               	goto	l9188
 12439  000630                     l9166:
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;doprnt.c: 1486: case 0xC0:
 12443                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12444  000630  5192               	movf	sprintf@prec& (0+255),w,b
 12445  000632  0D02               	mullw	2
 12446  000634  0E0B               	movlw	low _dpowers
 12447  000636  24F3               	addwf	prodl,w,c
 12448  000638  6EF6               	movwf	tblptrl,c
 12449  00063A  0EFE               	movlw	high _dpowers
 12450  00063C  20F4               	addwfc	prodh,w,c
 12451  00063E  6EF7               	movwf	tblptrh,c
 12452  000640                     	if	0	;There are less than 3 active tblptr bytes
 12453  000640                     	endif
 12454  000640  0009               	tblrd		*+
 12455  000642  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 12456  000646  000A               	tblrd		*-
 12457  000648  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 12458  00064C  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 12459  000650  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 12460  000654  ECF9  F012         	call	___lwdiv	;wreg free
 12461  000658  C069  F070         	movff	?___lwdiv,___lwmod@dividend
 12462  00065C  C06A  F071         	movff	?___lwdiv+1,___lwmod@dividend+1
 12463  000660  6B73               	clrf	(___lwmod@divisor+1)& (0+255),b
 12464  000662  0E0A               	movlw	10
 12465  000664  6F72               	movwf	___lwmod@divisor& (0+255),b
 12466  000666  ECE4  F013         	call	___lwmod	;wreg free
 12467  00066A  5170               	movf	?___lwmod& (0+255),w,b
 12468  00066C  D045               	goto	L6
 12469  00066E                     l9168:
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;doprnt.c: 1499: {
 12473                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 12474  00066E  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 12475  000672  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 12476  000676  5192               	movf	sprintf@prec& (0+255),w,b
 12477  000678  0D02               	mullw	2
 12478  00067A  0E15               	movlw	low _hexpowers
 12479  00067C  24F3               	addwf	prodl,w,c
 12480  00067E  6EF6               	movwf	tblptrl,c
 12481  000680  0EFE               	movlw	high _hexpowers
 12482  000682  20F4               	addwfc	prodh,w,c
 12483  000684  6EF7               	movwf	tblptrh,c
 12484  000686                     	if	0	;There are less than 3 active tblptr bytes
 12485  000686                     	endif
 12486  000686  0009               	tblrd		*+
 12487  000688  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 12488  00068C  000A               	tblrd		*-
 12489  00068E  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 12490  000692  ECF9  F012         	call	___lwdiv	;wreg free
 12491  000696  5169               	movf	?___lwdiv& (0+255),w,b
 12492  000698  0B0F               	andlw	15
 12493  00069A  6F85               	movwf	sprintf@idx& (0+255),b
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 12497  00069C  BB96               	btfsc	sprintf@flag& (0+255),5,b
 12498  00069E  D004               	goto	l9174
 12499                           
 12500                           ; BSR set to: 0
 12501  0006A0  0E6A               	movlw	low STR_31
 12502  0006A2  6F8A               	movwf	_sprintf$2924& (0+255),b
 12503  0006A4  0EFF               	movlw	high STR_31
 12504  0006A6  D003               	goto	L7
 12505  0006A8                     l9174:
 12506                           
 12507                           ; BSR set to: 0
 12508  0006A8  0E59               	movlw	low STR_30
 12509  0006AA  6F8A               	movwf	_sprintf$2924& (0+255),b
 12510  0006AC  0EFF               	movlw	high STR_30
 12511  0006AE                     L7:
 12512  0006AE  6F8B               	movwf	(_sprintf$2924+1)& (0+255),b
 12513                           
 12514                           ; BSR set to: 0
 12515  0006B0  5185               	movf	sprintf@idx& (0+255),w,b
 12516  0006B2  258A               	addwf	_sprintf$2924& (0+255),w,b
 12517  0006B4  6F81               	movwf	??_sprintf& (0+255),b
 12518  0006B6  0E00               	movlw	0
 12519  0006B8  218B               	addwfc	(_sprintf$2924+1)& (0+255),w,b
 12520  0006BA  6F82               	movwf	(??_sprintf+1)& (0+255),b
 12521  0006BC  C081  FFF6         	movff	??_sprintf,tblptrl
 12522  0006C0  C082  FFF7         	movff	??_sprintf+1,tblptrh
 12523  0006C4                     	if	0	;tblptru may be non-zero
 12524  0006C4                     	endif
 12525  0006C4                     	if	0	;tblptru may be non-zero
 12526  0006C4                     	endif
 12527  0006C4  0008               	tblrd		*
 12528  0006C6  CFF5 F095          	movff	tablat,sprintf@c
 12529                           
 12530                           ;doprnt.c: 1508: }
 12531                           ;doprnt.c: 1510: break;
 12532  0006CA  D022               	goto	l9184
 12533  0006CC                     l9178:
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 12537  0006CC  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 12538  0006D0  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 12539  0006D4  5192               	movf	sprintf@prec& (0+255),w,b
 12540  0006D6  0D02               	mullw	2
 12541  0006D8  0EFF               	movlw	low _octpowers
 12542  0006DA  24F3               	addwf	prodl,w,c
 12543  0006DC  6EF6               	movwf	tblptrl,c
 12544  0006DE  0EFD               	movlw	high _octpowers
 12545  0006E0  20F4               	addwfc	prodh,w,c
 12546  0006E2  6EF7               	movwf	tblptrh,c
 12547  0006E4                     	if	0	;There are less than 3 active tblptr bytes
 12548  0006E4                     	endif
 12549  0006E4  0009               	tblrd		*+
 12550  0006E6  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 12551  0006EA  000A               	tblrd		*-
 12552  0006EC  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 12553  0006F0  ECF9  F012         	call	___lwdiv	;wreg free
 12554  0006F4  5169               	movf	?___lwdiv& (0+255),w,b
 12555  0006F6  0B07               	andlw	7
 12556  0006F8                     L6:
 12557  0006F8  0F30               	addlw	48
 12558  0006FA  6F95               	movwf	sprintf@c& (0+255),b
 12559                           
 12560                           ;doprnt.c: 1520: break;
 12561  0006FC  D009               	goto	l9184
 12562  0006FE                     l9182:
 12563                           
 12564                           ; BSR set to: 0
 12565  0006FE  5196               	movf	sprintf@flag& (0+255),w,b
 12566  000700  0BC0               	andlw	192
 12567                           
 12568                           ; Switch size 1, requested type "speed"
 12569                           ; Number of cases is 4, Range of values is 0 to 192
 12570                           ; switch strategies available:
 12571                           ; Name         Instructions Cycles
 12572                           ; simple_byte           13     7 (average)
 12573                           ;	Chosen strategy is simple_byte
 12574  000702  E096               	bz	l9166
 12575  000704  0A40               	xorlw	64	; case 64
 12576  000706  E0E2               	bz	l9178
 12577  000708  0AC0               	xorlw	192	; case 128
 12578  00070A  E0B1               	bz	l9168
 12579  00070C  0A40               	xorlw	64	; case 192
 12580  00070E  E090               	bz	l9166
 12581  000710                     l9184:
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12585  000710  C075  FFD9         	movff	sprintf@sp,fsr2l
 12586  000714  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12587  000718  C095  FFDF         	movff	sprintf@c,indf2
 12588  00071C  D75B               	goto	l9148
 12589  00071E                     l9188:
 12590                           
 12591                           ; BSR set to: 0
 12592  00071E  0792               	decf	sprintf@prec& (0+255),f,b
 12593  000720  2992               	incf	sprintf@prec& (0+255),w,b
 12594  000722  E1ED               	bnz	l9182
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;doprnt.c: 1525: }
 12598                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 12599  000724  B796               	btfsc	sprintf@flag& (0+255),3,b
 12600                           
 12601                           ; BSR set to: 0
 12602  000726  BF94               	btfsc	(sprintf@width+1)& (0+255),7,b
 12603  000728  D012               	goto	l9198
 12604  00072A  5194               	movf	(sprintf@width+1)& (0+255),w,b
 12605  00072C  E102               	bnz	u9080
 12606  00072E  0593               	decf	sprintf@width& (0+255),w,b
 12607  000730  E30E               	bnc	l9198
 12608  000732                     u9080:
 12609  000732                     l9192:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 12613  000732  C075  FFD9         	movff	sprintf@sp,fsr2l
 12614  000736  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12615  00073A  0E20               	movlw	32
 12616  00073C  6EDF               	movwf	indf2,c
 12617                           
 12618                           ; BSR set to: 0
 12619  00073E  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12620  000740  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;doprnt.c: 1531: while(--width);
 12624  000742  0793               	decf	sprintf@width& (0+255),f,b
 12625  000744  A0D8               	btfss	status,0,c
 12626  000746  0794               	decf	(sprintf@width+1)& (0+255),f,b
 12627  000748  5193               	movf	sprintf@width& (0+255),w,b
 12628  00074A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 12629  00074C  E1F2               	bnz	l9192
 12630  00074E                     l9198:
 12631                           
 12632                           ; BSR set to: 0
 12633  00074E  C077  FFF6         	movff	sprintf@f,tblptrl
 12634  000752  C078  FFF7         	movff	sprintf@f+1,tblptrh
 12635  000756  4B77               	infsnz	sprintf@f& (0+255),f,b
 12636  000758  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 12637  00075A                     	if	0	;tblptru may be non-zero
 12638  00075A                     	endif
 12639  00075A                     	if	0	;tblptru may be non-zero
 12640  00075A                     	endif
 12641  00075A  0008               	tblrd		*
 12642  00075C  CFF5 F095          	movff	tablat,sprintf@c
 12643  000760  5195               	movf	sprintf@c& (0+255),w,b
 12644  000762  E001 D47C          	bnz	l8876
 12645  000766                     l9200:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;doprnt.c: 1538: *sp = 0;
 12649  000766  C075  FFD9         	movff	sprintf@sp,fsr2l
 12650  00076A  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12651  00076E  6ADF               	clrf	indf2,c
 12652                           
 12653                           ; BSR set to: 0
 12654  000770  0C00               	retlw	0	;funcret
 12655  000772                     __end_of_sprintf:
 12656                           	opt stack 0
 12657                           tblptru	equ	0xFF8
 12658                           tblptrh	equ	0xFF7
 12659                           tblptrl	equ	0xFF6
 12660                           tablat	equ	0xFF5
 12661                           prodh	equ	0xFF4
 12662                           prodl	equ	0xFF3
 12663                           intcon	equ	0xFF2
 12664                           intcon2	equ	0xFF1
 12665                           intcon3	equ	0xFF0
 12666                           postinc0	equ	0xFEE
 12667                           wreg	equ	0xFE8
 12668                           indf1	equ	0xFE7
 12669                           postinc1	equ	0xFE6
 12670                           postdec1	equ	0xFE5
 12671                           fsr1h	equ	0xFE2
 12672                           fsr1l	equ	0xFE1
 12673                           indf2	equ	0xFDF
 12674                           postinc2	equ	0xFDE
 12675                           postdec2	equ	0xFDD
 12676                           fsr2h	equ	0xFDA
 12677                           fsr2l	equ	0xFD9
 12678                           status	equ	0xFD8
 12679                           
 12680 ;; *************** function _isdigit *****************
 12681 ;; Defined at:
 12682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  c               1    wreg     unsigned char 
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;  c               1   11[BANK0 ] unsigned char 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;		None               void
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : F/0
 12693 ;;		On exit  : F/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12699 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12700 ;;Total ram usage:        3 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    9
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_sprintf
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text55
 12711  002B22                     __ptext55:
 12712                           	opt stack 0
 12713  002B22                     _isdigit:
 12714                           	opt stack 18
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;incstack = 0
 12718                           ;isdigit@c stored from wreg
 12719  002B22  6F6B               	movwf	isdigit@c& (0+255),b
 12720  002B24  0100               	movlb	0	; () banked
 12721  002B26  6B6A               	clrf	_isdigit$3148& (0+255),b
 12722                           
 12723                           ; BSR set to: 0
 12724  002B28  0E3A               	movlw	58
 12725  002B2A  616B               	cpfslt	isdigit@c& (0+255),b
 12726  002B2C  D005               	goto	l8620
 12727                           
 12728                           ; BSR set to: 0
 12729  002B2E  0E2F               	movlw	47
 12730  002B30  656B               	cpfsgt	isdigit@c& (0+255),b
 12731  002B32  D002               	goto	l8620
 12732                           
 12733                           ; BSR set to: 0
 12734  002B34  0E01               	movlw	1
 12735  002B36  6F6A               	movwf	_isdigit$3148& (0+255),b
 12736  002B38                     l8620:
 12737                           
 12738                           ; BSR set to: 0
 12739  002B38  C06A  F069         	movff	_isdigit$3148,??_isdigit
 12740  002B3C  3169               	rrcf	??_isdigit& (0+255),w,b
 12741                           
 12742                           ; BSR set to: 0
 12743  002B3E  0012               	return		;funcret
 12744  002B40                     __end_of_isdigit:
 12745                           	opt stack 0
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodh	equ	0xFF4
 12751                           prodl	equ	0xFF3
 12752                           intcon	equ	0xFF2
 12753                           intcon2	equ	0xFF1
 12754                           intcon3	equ	0xFF0
 12755                           postinc0	equ	0xFEE
 12756                           wreg	equ	0xFE8
 12757                           indf1	equ	0xFE7
 12758                           postinc1	equ	0xFE6
 12759                           postdec1	equ	0xFE5
 12760                           fsr1h	equ	0xFE2
 12761                           fsr1l	equ	0xFE1
 12762                           indf2	equ	0xFDF
 12763                           postinc2	equ	0xFDE
 12764                           postdec2	equ	0xFDD
 12765                           fsr2h	equ	0xFDA
 12766                           fsr2l	equ	0xFD9
 12767                           status	equ	0xFD8
 12768                           
 12769 ;; *************** function ___wmul *****************
 12770 ;; Defined at:
 12771 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;  multiplier      2    9[BANK0 ] unsigned int 
 12774 ;;  multiplicand    2   11[BANK0 ] unsigned int 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;  product         2   13[BANK0 ] unsigned int 
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  2    9[BANK0 ] unsigned int 
 12779 ;; Registers used:
 12780 ;;		wreg, status,2, status,0, prodl, prodh
 12781 ;; Tracked objects:
 12782 ;;		On entry : F/0
 12783 ;;		On exit  : F/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;Total ram usage:        6 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    9
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_sprintf
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text56
 12801  002A76                     __ptext56:
 12802                           	opt stack 0
 12803  002A76                     ___wmul:
 12804                           	opt stack 18
 12805                           
 12806                           ; BSR set to: 0
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;incstack = 0
 12810  002A76  5169               	movf	___wmul@multiplier& (0+255),w,b
 12811  002A78  036B               	mulwf	___wmul@multiplicand& (0+255),b
 12812  002A7A  CFF3 F06D          	movff	prodl,___wmul@product
 12813  002A7E  CFF4 F06E          	movff	prodh,___wmul@product+1
 12814  002A82  5169               	movf	___wmul@multiplier& (0+255),w,b
 12815  002A84  036C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12816  002A86  50F3               	movf	prodl,w,c
 12817  002A88  276E               	addwf	(___wmul@product+1)& (0+255),f,b
 12818  002A8A  516A               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12819  002A8C  036B               	mulwf	___wmul@multiplicand& (0+255),b
 12820  002A8E  50F3               	movf	prodl,w,c
 12821  002A90  276E               	addwf	(___wmul@product+1)& (0+255),f,b
 12822                           
 12823                           ; BSR set to: 0
 12824  002A92  C06D  F069         	movff	___wmul@product,?___wmul
 12825  002A96  C06E  F06A         	movff	___wmul@product+1,?___wmul+1
 12826                           
 12827                           ; BSR set to: 0
 12828  002A9A  0012               	return		;funcret
 12829  002A9C                     __end_of___wmul:
 12830                           	opt stack 0
 12831                           tblptru	equ	0xFF8
 12832                           tblptrh	equ	0xFF7
 12833                           tblptrl	equ	0xFF6
 12834                           tablat	equ	0xFF5
 12835                           prodh	equ	0xFF4
 12836                           prodl	equ	0xFF3
 12837                           intcon	equ	0xFF2
 12838                           intcon2	equ	0xFF1
 12839                           intcon3	equ	0xFF0
 12840                           postinc0	equ	0xFEE
 12841                           wreg	equ	0xFE8
 12842                           indf1	equ	0xFE7
 12843                           postinc1	equ	0xFE6
 12844                           postdec1	equ	0xFE5
 12845                           fsr1h	equ	0xFE2
 12846                           fsr1l	equ	0xFE1
 12847                           indf2	equ	0xFDF
 12848                           postinc2	equ	0xFDE
 12849                           postdec2	equ	0xFDD
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function ___lwmod *****************
 12855 ;; Defined at:
 12856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  dividend        2   16[BANK0 ] unsigned int 
 12859 ;;  divisor         2   18[BANK0 ] unsigned int 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;  counter         1   20[BANK0 ] unsigned char 
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  2   16[BANK0 ] unsigned int 
 12864 ;; Registers used:
 12865 ;;		wreg, status,2, status,0
 12866 ;; Tracked objects:
 12867 ;;		On entry : F/0
 12868 ;;		On exit  : F/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;Total ram usage:        5 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; Hardware stack levels required when called:    9
 12878 ;; This function calls:
 12879 ;;		Nothing
 12880 ;; This function is called by:
 12881 ;;		_sprintf
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text57
 12886  0027C8                     __ptext57:
 12887                           	opt stack 0
 12888  0027C8                     ___lwmod:
 12889                           	opt stack 18
 12890                           
 12891                           ; BSR set to: 0
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;incstack = 0
 12895  0027C8  5172               	movf	___lwmod@divisor& (0+255),w,b
 12896  0027CA  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12897  0027CC  E017               	bz	l1605
 12898                           
 12899                           ; BSR set to: 0
 12900  0027CE  0E01               	movlw	1
 12901  0027D0  6F74               	movwf	___lwmod@counter& (0+255),b
 12902  0027D2  D004               	goto	l8658
 12903  0027D4                     l8656:
 12904                           
 12905                           ; BSR set to: 0
 12906  0027D4  90D8               	bcf	status,0,c
 12907  0027D6  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 12908  0027D8  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12909  0027DA  2B74               	incf	___lwmod@counter& (0+255),f,b
 12910  0027DC                     l8658:
 12911                           
 12912                           ; BSR set to: 0
 12913  0027DC  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12914  0027DE  D7FA               	goto	l8656
 12915  0027E0                     l8660:
 12916                           
 12917                           ; BSR set to: 0
 12918  0027E0  5172               	movf	___lwmod@divisor& (0+255),w,b
 12919  0027E2  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 12920  0027E4  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12921  0027E6  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12922  0027E8  E304               	bnc	l8664
 12923                           
 12924                           ; BSR set to: 0
 12925  0027EA  5172               	movf	___lwmod@divisor& (0+255),w,b
 12926  0027EC  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 12927  0027EE  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12928  0027F0  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12929  0027F2                     l8664:
 12930                           
 12931                           ; BSR set to: 0
 12932  0027F2  90D8               	bcf	status,0,c
 12933  0027F4  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12934  0027F6  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 12935                           
 12936                           ; BSR set to: 0
 12937  0027F8  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 12938  0027FA  D7F2               	goto	l8660
 12939  0027FC                     l1605:
 12940                           
 12941                           ; BSR set to: 0
 12942  0027FC  C070  F070         	movff	___lwmod@dividend,?___lwmod
 12943  002800  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 12944                           
 12945                           ; BSR set to: 0
 12946  002804  0012               	return		;funcret
 12947  002806                     __end_of___lwmod:
 12948                           	opt stack 0
 12949                           tblptru	equ	0xFF8
 12950                           tblptrh	equ	0xFF7
 12951                           tblptrl	equ	0xFF6
 12952                           tablat	equ	0xFF5
 12953                           prodh	equ	0xFF4
 12954                           prodl	equ	0xFF3
 12955                           intcon	equ	0xFF2
 12956                           intcon2	equ	0xFF1
 12957                           intcon3	equ	0xFF0
 12958                           postinc0	equ	0xFEE
 12959                           wreg	equ	0xFE8
 12960                           indf1	equ	0xFE7
 12961                           postinc1	equ	0xFE6
 12962                           postdec1	equ	0xFE5
 12963                           fsr1h	equ	0xFE2
 12964                           fsr1l	equ	0xFE1
 12965                           indf2	equ	0xFDF
 12966                           postinc2	equ	0xFDE
 12967                           postdec2	equ	0xFDD
 12968                           fsr2h	equ	0xFDA
 12969                           fsr2l	equ	0xFD9
 12970                           status	equ	0xFD8
 12971                           
 12972 ;; *************** function ___lwdiv *****************
 12973 ;; Defined at:
 12974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;  dividend        2    9[BANK0 ] unsigned int 
 12977 ;;  divisor         2   11[BANK0 ] unsigned int 
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  quotient        2   14[BANK0 ] unsigned int 
 12980 ;;  counter         1   13[BANK0 ] unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  2    9[BANK0 ] unsigned int 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0
 12985 ;; Tracked objects:
 12986 ;;		On entry : F/0
 12987 ;;		On exit  : F/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12993 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12994 ;;Total ram usage:        7 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; Hardware stack levels required when called:    9
 12997 ;; This function calls:
 12998 ;;		Nothing
 12999 ;; This function is called by:
 13000 ;;		_sprintf
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text58
 13005  0025F2                     __ptext58:
 13006                           	opt stack 0
 13007  0025F2                     ___lwdiv:
 13008                           	opt stack 18
 13009                           
 13010                           ; BSR set to: 0
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;incstack = 0
 13014  0025F2  6B6E               	clrf	___lwdiv@quotient& (0+255),b
 13015  0025F4  6B6F               	clrf	(___lwdiv@quotient+1)& (0+255),b
 13016                           
 13017                           ; BSR set to: 0
 13018  0025F6  516B               	movf	___lwdiv@divisor& (0+255),w,b
 13019  0025F8  116C               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13020  0025FA  E01B               	bz	l1595
 13021                           
 13022                           ; BSR set to: 0
 13023  0025FC  0E01               	movlw	1
 13024  0025FE  6F6D               	movwf	___lwdiv@counter& (0+255),b
 13025  002600  D004               	goto	l8638
 13026  002602                     l8636:
 13027                           
 13028                           ; BSR set to: 0
 13029  002602  90D8               	bcf	status,0,c
 13030  002604  376B               	rlcf	___lwdiv@divisor& (0+255),f,b
 13031  002606  376C               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13032  002608  2B6D               	incf	___lwdiv@counter& (0+255),f,b
 13033  00260A                     l8638:
 13034                           
 13035                           ; BSR set to: 0
 13036  00260A  AF6C               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13037  00260C  D7FA               	goto	l8636
 13038  00260E                     l8640:
 13039                           
 13040                           ; BSR set to: 0
 13041  00260E  90D8               	bcf	status,0,c
 13042  002610  376E               	rlcf	___lwdiv@quotient& (0+255),f,b
 13043  002612  376F               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13044                           
 13045                           ; BSR set to: 0
 13046  002614  516B               	movf	___lwdiv@divisor& (0+255),w,b
 13047  002616  5D69               	subwf	___lwdiv@dividend& (0+255),w,b
 13048  002618  516C               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13049  00261A  596A               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13050  00261C  E305               	bnc	l8648
 13051                           
 13052                           ; BSR set to: 0
 13053  00261E  516B               	movf	___lwdiv@divisor& (0+255),w,b
 13054  002620  5F69               	subwf	___lwdiv@dividend& (0+255),f,b
 13055  002622  516C               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13056  002624  5B6A               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13057                           
 13058                           ; BSR set to: 0
 13059  002626  816E               	bsf	___lwdiv@quotient& (0+255),0,b
 13060  002628                     l8648:
 13061                           
 13062                           ; BSR set to: 0
 13063  002628  90D8               	bcf	status,0,c
 13064  00262A  336C               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13065  00262C  336B               	rrcf	___lwdiv@divisor& (0+255),f,b
 13066                           
 13067                           ; BSR set to: 0
 13068  00262E  2F6D               	decfsz	___lwdiv@counter& (0+255),f,b
 13069  002630  D7EE               	goto	l8640
 13070  002632                     l1595:
 13071                           
 13072                           ; BSR set to: 0
 13073  002632  C06E  F069         	movff	___lwdiv@quotient,?___lwdiv
 13074  002636  C06F  F06A         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13075                           
 13076                           ; BSR set to: 0
 13077  00263A  0012               	return		;funcret
 13078  00263C                     __end_of___lwdiv:
 13079                           	opt stack 0
 13080                           tblptru	equ	0xFF8
 13081                           tblptrh	equ	0xFF7
 13082                           tblptrl	equ	0xFF6
 13083                           tablat	equ	0xFF5
 13084                           prodh	equ	0xFF4
 13085                           prodl	equ	0xFF3
 13086                           intcon	equ	0xFF2
 13087                           intcon2	equ	0xFF1
 13088                           intcon3	equ	0xFF0
 13089                           postinc0	equ	0xFEE
 13090                           wreg	equ	0xFE8
 13091                           indf1	equ	0xFE7
 13092                           postinc1	equ	0xFE6
 13093                           postdec1	equ	0xFE5
 13094                           fsr1h	equ	0xFE2
 13095                           fsr1l	equ	0xFE1
 13096                           indf2	equ	0xFDF
 13097                           postinc2	equ	0xFDE
 13098                           postdec2	equ	0xFDD
 13099                           fsr2h	equ	0xFDA
 13100                           fsr2l	equ	0xFD9
 13101                           status	equ	0xFD8
 13102                           
 13103 ;; *************** function _LCD_Update *****************
 13104 ;; Defined at:
 13105 ;;		line 113 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;		None
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  i               1   11[BANK0 ] unsigned char 
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  1    wreg      void 
 13112 ;; Registers used:
 13113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13114 ;; Tracked objects:
 13115 ;;		On entry : F/0
 13116 ;;		On exit  : F/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13123 ;;Total ram usage:        1 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:   11
 13126 ;; This function calls:
 13127 ;;		_LCDWriteCmd
 13128 ;;		_LCDWriteData
 13129 ;; This function is called by:
 13130 ;;		_LCDDisplay
 13131 ;;		_LCDTRXCount
 13132 ;;		_run_p2p_demo
 13133 ;; This function uses a non-reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text59
 13137  00229C                     __ptext59:
 13138                           	opt stack 0
 13139  00229C                     _LCD_Update:
 13140                           	opt stack 17
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;lcd.c: 115: uint8_t i;
 13144                           ;lcd.c: 117: LCDWriteCmd(0x80 | 0x00);
 13145                           
 13146                           ; BSR set to: 0
 13147                           ;incstack = 0
 13148  00229C  0E80               	movlw	128
 13149  00229E  EC18  F016         	call	_LCDWriteCmd
 13150                           
 13151                           ;lcd.c: 119: for(i = 0; i < 16; i++)
 13152  0022A2  0100               	movlb	0	; () banked
 13153  0022A4  6B6B               	clrf	LCD_Update@i& (0+255),b
 13154  0022A6                     l8846:
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;lcd.c: 120: {
 13158                           ;lcd.c: 121: if( LCDText[i] == 0 )
 13159  0022A6  0EB8               	movlw	low _LCDText
 13160  0022A8  256B               	addwf	LCD_Update@i& (0+255),w,b
 13161  0022AA  6ED9               	movwf	fsr2l,c
 13162  0022AC  6ADA               	clrf	fsr2h,c
 13163  0022AE  0E01               	movlw	high _LCDText
 13164  0022B0  22DA               	addwfc	fsr2h,f,c
 13165  0022B2  50DF               	movf	indf2,w,c
 13166  0022B4  E104               	bnz	l8850
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;lcd.c: 122: {
 13170                           ;lcd.c: 123: LCDWriteData(' ');
 13171  0022B6  0E20               	movlw	32
 13172  0022B8  EC0F  F016         	call	_LCDWriteData
 13173                           
 13174                           ;lcd.c: 124: }
 13175  0022BC  D009               	goto	l8852
 13176  0022BE                     l8850:
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;lcd.c: 125: else
 13180                           ;lcd.c: 126: {
 13181                           ;lcd.c: 127: LCDWriteData(LCDText[i]);
 13182  0022BE  0EB8               	movlw	low _LCDText
 13183  0022C0  256B               	addwf	LCD_Update@i& (0+255),w,b
 13184  0022C2  6ED9               	movwf	fsr2l,c
 13185  0022C4  6ADA               	clrf	fsr2h,c
 13186  0022C6  0E01               	movlw	high _LCDText
 13187  0022C8  22DA               	addwfc	fsr2h,f,c
 13188  0022CA  50DF               	movf	indf2,w,c
 13189  0022CC  EC0F  F016         	call	_LCDWriteData
 13190  0022D0                     l8852:
 13191  0022D0  0100               	movlb	0	; () banked
 13192  0022D2  2B6B               	incf	LCD_Update@i& (0+255),f,b
 13193                           
 13194                           ; BSR set to: 0
 13195  0022D4  0E0F               	movlw	15
 13196  0022D6  656B               	cpfsgt	LCD_Update@i& (0+255),b
 13197  0022D8  D7E6               	goto	l8846
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;lcd.c: 128: }
 13201                           ;lcd.c: 129: }
 13202                           ;lcd.c: 131: LCDWriteCmd(0x80 | 0x40);
 13203  0022DA  0EC0               	movlw	192
 13204  0022DC  EC18  F016         	call	_LCDWriteCmd
 13205                           
 13206                           ;lcd.c: 133: for(i = 16; i < 32; i++)
 13207  0022E0  0E10               	movlw	16
 13208  0022E2  0100               	movlb	0	; () banked
 13209  0022E4  6F6B               	movwf	LCD_Update@i& (0+255),b
 13210  0022E6                     l8864:
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;lcd.c: 134: {
 13214                           ;lcd.c: 135: if( LCDText[i] == 0 )
 13215  0022E6  0EB8               	movlw	low _LCDText
 13216  0022E8  256B               	addwf	LCD_Update@i& (0+255),w,b
 13217  0022EA  6ED9               	movwf	fsr2l,c
 13218  0022EC  6ADA               	clrf	fsr2h,c
 13219  0022EE  0E01               	movlw	high _LCDText
 13220  0022F0  22DA               	addwfc	fsr2h,f,c
 13221  0022F2  50DF               	movf	indf2,w,c
 13222  0022F4  E104               	bnz	l8868
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;lcd.c: 136: {
 13226                           ;lcd.c: 137: LCDWriteData(' ');
 13227  0022F6  0E20               	movlw	32
 13228  0022F8  EC0F  F016         	call	_LCDWriteData
 13229                           
 13230                           ;lcd.c: 138: }
 13231  0022FC  D009               	goto	l8870
 13232  0022FE                     l8868:
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;lcd.c: 139: else
 13236                           ;lcd.c: 140: {
 13237                           ;lcd.c: 141: LCDWriteData(LCDText[i]);
 13238  0022FE  0EB8               	movlw	low _LCDText
 13239  002300  256B               	addwf	LCD_Update@i& (0+255),w,b
 13240  002302  6ED9               	movwf	fsr2l,c
 13241  002304  6ADA               	clrf	fsr2h,c
 13242  002306  0E01               	movlw	high _LCDText
 13243  002308  22DA               	addwfc	fsr2h,f,c
 13244  00230A  50DF               	movf	indf2,w,c
 13245  00230C  EC0F  F016         	call	_LCDWriteData
 13246  002310                     l8870:
 13247  002310  0100               	movlb	0	; () banked
 13248  002312  2B6B               	incf	LCD_Update@i& (0+255),f,b
 13249                           
 13250                           ; BSR set to: 0
 13251  002314  0E1F               	movlw	31
 13252  002316  656B               	cpfsgt	LCD_Update@i& (0+255),b
 13253  002318  D7E6               	goto	l8864
 13254  00231A  0C1F               	retlw	31
 13255  00231C                     __end_of_LCD_Update:
 13256                           	opt stack 0
 13257                           tblptru	equ	0xFF8
 13258                           tblptrh	equ	0xFF7
 13259                           tblptrl	equ	0xFF6
 13260                           tablat	equ	0xFF5
 13261                           prodh	equ	0xFF4
 13262                           prodl	equ	0xFF3
 13263                           intcon	equ	0xFF2
 13264                           intcon2	equ	0xFF1
 13265                           intcon3	equ	0xFF0
 13266                           postinc0	equ	0xFEE
 13267                           wreg	equ	0xFE8
 13268                           indf1	equ	0xFE7
 13269                           postinc1	equ	0xFE6
 13270                           postdec1	equ	0xFE5
 13271                           fsr1h	equ	0xFE2
 13272                           fsr1l	equ	0xFE1
 13273                           indf2	equ	0xFDF
 13274                           postinc2	equ	0xFDE
 13275                           postdec2	equ	0xFDD
 13276                           fsr2h	equ	0xFDA
 13277                           fsr2l	equ	0xFD9
 13278                           status	equ	0xFD8
 13279                           
 13280 ;; *************** function _LCDWriteData *****************
 13281 ;; Defined at:
 13282 ;;		line 42 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  data            1    wreg     unsigned char 
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;  data            1   10[BANK0 ] unsigned char 
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  1    wreg      void 
 13289 ;; Registers used:
 13290 ;;		wreg, status,2, cstack
 13291 ;; Tracked objects:
 13292 ;;		On entry : F/0
 13293 ;;		On exit  : 0/0
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;Total ram usage:        1 bytes
 13301 ;; Hardware stack levels used:    1
 13302 ;; Hardware stack levels required when called:   10
 13303 ;; This function calls:
 13304 ;;		_SPIPut2
 13305 ;; This function is called by:
 13306 ;;		_LCD_Update
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text60
 13311  002C1E                     __ptext60:
 13312                           	opt stack 0
 13313  002C1E                     _LCDWriteData:
 13314                           	opt stack 17
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;incstack = 0
 13318                           ;LCDWriteData@data stored from wreg
 13319  002C1E  6F6A               	movwf	LCDWriteData@data& (0+255),b
 13320                           
 13321                           ;lcd.c: 44: LATDbits.LATD7 = 0;
 13322  002C20  9E8C               	bcf	3980,7,c	;volatile
 13323                           
 13324                           ;lcd.c: 45: LATDbits.LATD3 = 1;
 13325  002C22  868C               	bsf	3980,3,c	;volatile
 13326                           
 13327                           ;lcd.c: 47: SPIPut2(data);
 13328  002C24  0100               	movlb	0	; () banked
 13329  002C26  516A               	movf	LCDWriteData@data& (0+255),w,b
 13330  002C28  ECBA  F015         	call	_SPIPut2
 13331                           
 13332                           ;lcd.c: 49: LATDbits.LATD7 = 1;
 13333  002C2C  8E8C               	bsf	3980,7,c	;volatile
 13334  002C2E  0012               	return		;funcret
 13335  002C30                     __end_of_LCDWriteData:
 13336                           	opt stack 0
 13337                           tblptru	equ	0xFF8
 13338                           tblptrh	equ	0xFF7
 13339                           tblptrl	equ	0xFF6
 13340                           tablat	equ	0xFF5
 13341                           prodh	equ	0xFF4
 13342                           prodl	equ	0xFF3
 13343                           intcon	equ	0xFF2
 13344                           intcon2	equ	0xFF1
 13345                           intcon3	equ	0xFF0
 13346                           postinc0	equ	0xFEE
 13347                           wreg	equ	0xFE8
 13348                           indf1	equ	0xFE7
 13349                           postinc1	equ	0xFE6
 13350                           postdec1	equ	0xFE5
 13351                           fsr1h	equ	0xFE2
 13352                           fsr1l	equ	0xFE1
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           postdec2	equ	0xFDD
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _LCD_Erase *****************
 13361 ;; Defined at:
 13362 ;;		line 92 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/1
 13373 ;;		On exit  : F/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13380 ;;Total ram usage:        0 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:   11
 13383 ;; This function calls:
 13384 ;;		_DELAY_ms
 13385 ;;		_LCDWriteCmd
 13386 ;;		_memset
 13387 ;; This function is called by:
 13388 ;;		_LCDDisplay
 13389 ;;		_LCDTRXCount
 13390 ;;		_run_p2p_demo
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text61
 13395  002A4E                     __ptext61:
 13396                           	opt stack 0
 13397  002A4E                     _LCD_Erase:
 13398                           	opt stack 17
 13399                           
 13400                           ;lcd.c: 95: LCDWriteCmd(0x01);;
 13401                           
 13402                           ;incstack = 0
 13403  002A4E  0E01               	movlw	1
 13404  002A50  EC18  F016         	call	_LCDWriteCmd
 13405                           
 13406                           ;lcd.c: 96: DELAY_ms(2);
 13407  002A54  0100               	movlb	0	; () banked
 13408  002A56  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
 13409  002A58  0E02               	movlw	2
 13410  002A5A  6F69               	movwf	DELAY_ms@ms& (0+255),b
 13411  002A5C  EC3E  F00E         	call	_DELAY_ms	;wreg free
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;lcd.c: 99: memset(LCDText, ' ', 32);
 13415  002A60  0EB8               	movlw	low _LCDText
 13416  002A62  6F69               	movwf	memset@p1& (0+255),b
 13417  002A64  0E01               	movlw	high _LCDText
 13418  002A66  6F6A               	movwf	(memset@p1+1)& (0+255),b
 13419  002A68  6B6C               	clrf	(memset@c+1)& (0+255),b
 13420  002A6A  0E20               	movlw	32
 13421  002A6C  6F6B               	movwf	memset@c& (0+255),b
 13422  002A6E  6B6E               	clrf	(memset@n+1)& (0+255),b
 13423  002A70  6F6D               	movwf	memset@n& (0+255),b
 13424  002A72  EFFE  F014         	goto	_memset	;wreg free
 13425  002A76                     __end_of_LCD_Erase:
 13426                           	opt stack 0
 13427                           tblptru	equ	0xFF8
 13428                           tblptrh	equ	0xFF7
 13429                           tblptrl	equ	0xFF6
 13430                           tablat	equ	0xFF5
 13431                           prodh	equ	0xFF4
 13432                           prodl	equ	0xFF3
 13433                           intcon	equ	0xFF2
 13434                           intcon2	equ	0xFF1
 13435                           intcon3	equ	0xFF0
 13436                           postinc0	equ	0xFEE
 13437                           wreg	equ	0xFE8
 13438                           indf1	equ	0xFE7
 13439                           postinc1	equ	0xFE6
 13440                           postdec1	equ	0xFE5
 13441                           fsr1h	equ	0xFE2
 13442                           fsr1l	equ	0xFE1
 13443                           indf2	equ	0xFDF
 13444                           postinc2	equ	0xFDE
 13445                           postdec2	equ	0xFDD
 13446                           fsr2h	equ	0xFDA
 13447                           fsr2l	equ	0xFD9
 13448                           status	equ	0xFD8
 13449                           
 13450 ;; *************** function _memset *****************
 13451 ;; Defined at:
 13452 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  p1              2    9[BANK0 ] PTR void 
 13455 ;;		 -> LCDText(33), 
 13456 ;;  c               2   11[BANK0 ] int 
 13457 ;;  n               2   13[BANK0 ] unsigned int 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  p               2   15[BANK0 ] PTR unsigned char 
 13460 ;;		 -> LCDText(33), 
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  2    9[BANK0 ] PTR void 
 13463 ;; Registers used:
 13464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13465 ;; Tracked objects:
 13466 ;;		On entry : F/0
 13467 ;;		On exit  : F/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13474 ;;Total ram usage:        8 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; Hardware stack levels required when called:    9
 13477 ;; This function calls:
 13478 ;;		Nothing
 13479 ;; This function is called by:
 13480 ;;		_LCD_Erase
 13481 ;; This function uses a non-reentrant model
 13482 ;;
 13483                           
 13484                           	psect	text62
 13485  0029FC                     __ptext62:
 13486                           	opt stack 0
 13487  0029FC                     _memset:
 13488                           	opt stack 18
 13489                           
 13490                           ; BSR set to: 0
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;incstack = 0
 13494  0029FC  C069  F06F         	movff	memset@p1,memset@p
 13495  002A00  C06A  F070         	movff	memset@p1+1,memset@p+1
 13496  002A04  D008               	goto	l8610
 13497  002A06                     l8606:
 13498                           
 13499                           ; BSR set to: 0
 13500  002A06  C06F  FFD9         	movff	memset@p,fsr2l
 13501  002A0A  C070  FFDA         	movff	memset@p+1,fsr2h
 13502  002A0E  C06B  FFDF         	movff	memset@c,indf2
 13503                           
 13504                           ; BSR set to: 0
 13505  002A12  4B6F               	infsnz	memset@p& (0+255),f,b
 13506  002A14  2B70               	incf	(memset@p+1)& (0+255),f,b
 13507  002A16                     l8610:
 13508                           
 13509                           ; BSR set to: 0
 13510  002A16  076D               	decf	memset@n& (0+255),f,b
 13511  002A18  A0D8               	btfss	status,0,c
 13512  002A1A  076E               	decf	(memset@n+1)& (0+255),f,b
 13513  002A1C  296D               	incf	memset@n& (0+255),w,b
 13514  002A1E  E1F3               	bnz	l8606
 13515  002A20  296E               	incf	(memset@n+1)& (0+255),w,b
 13516  002A22  E1F1               	bnz	l8606
 13517                           
 13518                           ; BSR set to: 0
 13519  002A24  0012               	return		;funcret
 13520  002A26                     __end_of_memset:
 13521                           	opt stack 0
 13522                           tblptru	equ	0xFF8
 13523                           tblptrh	equ	0xFF7
 13524                           tblptrl	equ	0xFF6
 13525                           tablat	equ	0xFF5
 13526                           prodh	equ	0xFF4
 13527                           prodl	equ	0xFF3
 13528                           intcon	equ	0xFF2
 13529                           intcon2	equ	0xFF1
 13530                           intcon3	equ	0xFF0
 13531                           postinc0	equ	0xFEE
 13532                           wreg	equ	0xFE8
 13533                           indf1	equ	0xFE7
 13534                           postinc1	equ	0xFE6
 13535                           postdec1	equ	0xFE5
 13536                           fsr1h	equ	0xFE2
 13537                           fsr1l	equ	0xFE1
 13538                           indf2	equ	0xFDF
 13539                           postinc2	equ	0xFDE
 13540                           postdec2	equ	0xFDD
 13541                           fsr2h	equ	0xFDA
 13542                           fsr2l	equ	0xFD9
 13543                           status	equ	0xFD8
 13544                           
 13545 ;; *************** function _LCDWriteCmd *****************
 13546 ;; Defined at:
 13547 ;;		line 31 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  data            1    wreg     unsigned char 
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;  data            1   10[BANK0 ] unsigned char 
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      void 
 13554 ;; Registers used:
 13555 ;;		wreg, status,2, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13565 ;;Total ram usage:        1 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:   10
 13568 ;; This function calls:
 13569 ;;		_SPIPut2
 13570 ;; This function is called by:
 13571 ;;		_LCD_Initialize
 13572 ;;		_LCD_Erase
 13573 ;;		_LCD_Update
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           	psect	text63
 13578  002C30                     __ptext63:
 13579                           	opt stack 0
 13580  002C30                     _LCDWriteCmd:
 13581                           	opt stack 17
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;incstack = 0
 13585                           ;LCDWriteCmd@data stored from wreg
 13586  002C30  0100               	movlb	0	; () banked
 13587  002C32  6F6A               	movwf	LCDWriteCmd@data& (0+255),b
 13588                           
 13589                           ;lcd.c: 33: LATDbits.LATD7 = 0;
 13590  002C34  9E8C               	bcf	3980,7,c	;volatile
 13591                           
 13592                           ;lcd.c: 34: LATDbits.LATD3 = 0;
 13593  002C36  968C               	bcf	3980,3,c	;volatile
 13594                           
 13595                           ;lcd.c: 36: SPIPut2(data);
 13596  002C38  516A               	movf	LCDWriteCmd@data& (0+255),w,b
 13597  002C3A  ECBA  F015         	call	_SPIPut2
 13598                           
 13599                           ;lcd.c: 38: LATDbits.LATD7 = 1;
 13600  002C3E  8E8C               	bsf	3980,7,c	;volatile
 13601  002C40  0012               	return		;funcret
 13602  002C42                     __end_of_LCDWriteCmd:
 13603                           	opt stack 0
 13604                           tblptru	equ	0xFF8
 13605                           tblptrh	equ	0xFF7
 13606                           tblptrl	equ	0xFF6
 13607                           tablat	equ	0xFF5
 13608                           prodh	equ	0xFF4
 13609                           prodl	equ	0xFF3
 13610                           intcon	equ	0xFF2
 13611                           intcon2	equ	0xFF1
 13612                           intcon3	equ	0xFF0
 13613                           postinc0	equ	0xFEE
 13614                           wreg	equ	0xFE8
 13615                           indf1	equ	0xFE7
 13616                           postinc1	equ	0xFE6
 13617                           postdec1	equ	0xFE5
 13618                           fsr1h	equ	0xFE2
 13619                           fsr1l	equ	0xFE1
 13620                           indf2	equ	0xFDF
 13621                           postinc2	equ	0xFDE
 13622                           postdec2	equ	0xFDD
 13623                           fsr2h	equ	0xFDA
 13624                           fsr2l	equ	0xFD9
 13625                           status	equ	0xFD8
 13626                           
 13627 ;; *************** function _SPIPut2 *****************
 13628 ;; Defined at:
 13629 ;;		line 144 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  v               1    wreg     unsigned char 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  v               1    9[BANK0 ] unsigned char 
 13634 ;;  i               1    0        unsigned char 
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  1    wreg      void 
 13637 ;; Registers used:
 13638 ;;		wreg
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13648 ;;Total ram usage:        1 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:    9
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_EEPROM_Read
 13655 ;;		_EEPROM_Write
 13656 ;;		_LCDWriteCmd
 13657 ;;		_LCDWriteData
 13658 ;;		_SPIGet2
 13659 ;; This function uses a non-reentrant model
 13660 ;;
 13661                           
 13662                           	psect	text64
 13663  002B74                     __ptext64:
 13664                           	opt stack 0
 13665  002B74                     _SPIPut2:
 13666                           	opt stack 17
 13667                           
 13668                           ;incstack = 0
 13669                           ;SPIPut2@v stored from wreg
 13670  002B74  0100               	movlb	0	; () banked
 13671  002B76  6F69               	movwf	SPIPut2@v& (0+255),b
 13672                           
 13673                           ;spi.c: 165: {
 13674                           ;spi.c: 166: uint8_t i;
 13675                           ;spi.c: 169: PIR3bits.SSP2IF = 0;
 13676  002B78  9EA4               	bcf	4004,7,c	;volatile
 13677                           
 13678                           ;spi.c: 170: i = SSP2BUF;
 13679  002B7A  5075               	movf	3957,w,c	;volatile
 13680  002B7C                     l725:
 13681                           
 13682                           ;spi.c: 173: {
 13683                           ;spi.c: 175: SSP2CON1bits.WCOL = 0;
 13684  002B7C  9E72               	bcf	3954,7,c	;volatile
 13685                           
 13686                           ;spi.c: 178: SSP2BUF = v;
 13687  002B7E  C069  FF75         	movff	SPIPut2@v,3957	;volatile
 13688                           
 13689                           ;spi.c: 181: } while( SSP2CON1bits.WCOL );
 13690  002B82  BE72               	btfsc	3954,7,c	;volatile
 13691  002B84  D7FB               	goto	l725
 13692  002B86                     l727:
 13693  002B86  AEA4               	btfss	4004,7,c	;volatile
 13694  002B88  D7FE               	goto	l727
 13695                           
 13696                           ;spi.c: 189: PIR3bits.SSP2IF = 0;
 13697  002B8A  9EA4               	bcf	4004,7,c	;volatile
 13698  002B8C  0012               	return		;funcret
 13699  002B8E                     __end_of_SPIPut2:
 13700                           	opt stack 0
 13701                           tblptru	equ	0xFF8
 13702                           tblptrh	equ	0xFF7
 13703                           tblptrl	equ	0xFF6
 13704                           tablat	equ	0xFF5
 13705                           prodh	equ	0xFF4
 13706                           prodl	equ	0xFF3
 13707                           intcon	equ	0xFF2
 13708                           intcon2	equ	0xFF1
 13709                           intcon3	equ	0xFF0
 13710                           postinc0	equ	0xFEE
 13711                           wreg	equ	0xFE8
 13712                           indf1	equ	0xFE7
 13713                           postinc1	equ	0xFE6
 13714                           postdec1	equ	0xFE5
 13715                           fsr1h	equ	0xFE2
 13716                           fsr1l	equ	0xFE1
 13717                           indf2	equ	0xFDF
 13718                           postinc2	equ	0xFDE
 13719                           postdec2	equ	0xFDD
 13720                           fsr2h	equ	0xFDA
 13721                           fsr2l	equ	0xFD9
 13722                           status	equ	0xFD8
 13723                           
 13724 ;; *************** function _DELAY_ms *****************
 13725 ;; Defined at:
 13726 ;;		line 108 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;  ms              2    9[BANK0 ] unsigned int 
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;  cyclesRequir    4   19[BANK0 ] long 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0, prodl, prodh
 13735 ;; Tracked objects:
 13736 ;;		On entry : F/0
 13737 ;;		On exit  : F/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13741 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13742 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13743 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13744 ;;Total ram usage:       14 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:    9
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_MiMAC_Init
 13751 ;;		_LCD_Initialize
 13752 ;;		_LCD_Erase
 13753 ;;		_LCDDisplay
 13754 ;;		_Process_RxMessage
 13755 ;;		_run_p2p_demo
 13756 ;;		_freezer_feature
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760                           	psect	text65
 13761  001C7C                     __ptext65:
 13762                           	opt stack 0
 13763  001C7C                     _DELAY_ms:
 13764                           	opt stack 18
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;delay.c: 115: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 13768                           
 13769                           ; BSR set to: 0
 13770                           
 13771                           ;incstack = 0
 13772  001C7C  5169               	movf	DELAY_ms@ms& (0+255),w,b
 13773  001C7E  6F6B               	movwf	??_DELAY_ms& (0+255),b
 13774  001C80  516A               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 13775  001C82  6F6C               	movwf	(??_DELAY_ms+1)& (0+255),b
 13776  001C84  6B6D               	clrf	(??_DELAY_ms+2)& (0+255),b
 13777  001C86  6B6E               	clrf	(??_DELAY_ms+3)& (0+255),b
 13778  001C88  0EA0               	movlw	160
 13779  001C8A  036B               	mulwf	??_DELAY_ms& (0+255),b
 13780  001C8C  CFF3 F06F          	movff	prodl,??_DELAY_ms+4
 13781  001C90  CFF4 F070          	movff	prodh,??_DELAY_ms+5
 13782  001C94  6B71               	clrf	(??_DELAY_ms+6)& (0+255),b
 13783  001C96  6B72               	clrf	(??_DELAY_ms+7)& (0+255),b
 13784  001C98  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 13785  001C9A  50F3               	movf	prodl,w,c
 13786  001C9C  2770               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 13787  001C9E  50F4               	movf	prodh,w,c
 13788  001CA0  2371               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 13789  001CA2  0E00               	movlw	0
 13790  001CA4  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 13791  001CA6  0E0F               	movlw	15
 13792  001CA8  036B               	mulwf	??_DELAY_ms& (0+255),b
 13793  001CAA  50F3               	movf	prodl,w,c
 13794  001CAC  2770               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 13795  001CAE  50F4               	movf	prodh,w,c
 13796  001CB0  2371               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 13797  001CB2  0E00               	movlw	0
 13798  001CB4  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 13799  001CB6  0EA0               	movlw	160
 13800  001CB8  036D               	mulwf	(??_DELAY_ms+2)& (0+255),b
 13801  001CBA  50F3               	movf	prodl,w,c
 13802  001CBC  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 13803  001CBE  50F4               	movf	prodh,w,c
 13804  001CC0  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 13805  001CC2  0E0F               	movlw	15
 13806  001CC4  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 13807  001CC6  50F3               	movf	prodl,w,c
 13808  001CC8  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 13809  001CCA  50F4               	movf	prodh,w,c
 13810  001CCC  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 13811  001CCE  0E00               	movlw	0
 13812  001CD0  036B               	mulwf	??_DELAY_ms& (0+255),b
 13813  001CD2  50F3               	movf	prodl,w,c
 13814  001CD4  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 13815  001CD6  50F4               	movf	prodh,w,c
 13816  001CD8  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 13817  001CDA  0EA0               	movlw	160
 13818  001CDC  036E               	mulwf	(??_DELAY_ms+3)& (0+255),b
 13819  001CDE  50F3               	movf	prodl,w,c
 13820  001CE0  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 13821  001CE2  0E0F               	movlw	15
 13822  001CE4  036D               	mulwf	(??_DELAY_ms+2)& (0+255),b
 13823  001CE6  50F3               	movf	prodl,w,c
 13824  001CE8  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 13825  001CEA  0E00               	movlw	0
 13826  001CEC  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 13827  001CEE  50F3               	movf	prodl,w,c
 13828  001CF0  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 13829  001CF2  0E00               	movlw	0
 13830  001CF4  036B               	mulwf	??_DELAY_ms& (0+255),b
 13831  001CF6  50F3               	movf	prodl,w,c
 13832  001CF8  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 13833  001CFA  C06F  F073         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 13834  001CFE  C070  F074         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 13835  001D02  C071  F075         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 13836  001D06  C072  F076         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 13840  001D0A  0E56               	movlw	86
 13841  001D0C  2773               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13842  001D0E  0EFF               	movlw	255
 13843  001D10  2374               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13844  001D12  2375               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13845  001D14  2376               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 13849  001D16  BF76               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13850  001D18  0CFF               	retlw	255
 13851  001D1A  5176               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13852  001D1C  1175               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13853  001D1E  1174               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13854  001D20  E10C               	bnz	l602
 13855  001D22  0EC4               	movlw	196
 13856  001D24  5D73               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13857  001D26  E209               	bc	l602
 13858  001D28  0012               	return	
 13859  001D2A                     l603:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;delay.c: 128: {
 13863                           ;delay.c: 129: __nop();
 13864  001D2A  F000               	nop	
 13865                           
 13866                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 13867  001D2C  0ED9               	movlw	217
 13868  001D2E  0100               	movlb	0	; () banked
 13869  001D30  2773               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13870  001D32  0EFF               	movlw	255
 13871  001D34  2374               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13872  001D36  2375               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13873  001D38  2376               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13874  001D3A                     l602:
 13875                           
 13876                           ; BSR set to: 0
 13877  001D3A  BF76               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13878  001D3C  0012               	return	
 13879  001D3E  5176               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13880  001D40  1175               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13881  001D42  1174               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13882  001D44  E1F2               	bnz	l603
 13883  001D46  0573               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13884  001D48  E2F0               	bc	l603
 13885                           
 13886                           ; BSR set to: 0
 13887  001D4A  0012               	return		;funcret
 13888  001D4C                     __end_of_DELAY_ms:
 13889                           	opt stack 0
 13890                           tblptru	equ	0xFF8
 13891                           tblptrh	equ	0xFF7
 13892                           tblptrl	equ	0xFF6
 13893                           tablat	equ	0xFF5
 13894                           prodh	equ	0xFF4
 13895                           prodl	equ	0xFF3
 13896                           intcon	equ	0xFF2
 13897                           intcon2	equ	0xFF1
 13898                           intcon3	equ	0xFF0
 13899                           postinc0	equ	0xFEE
 13900                           wreg	equ	0xFE8
 13901                           indf1	equ	0xFE7
 13902                           postinc1	equ	0xFE6
 13903                           postdec1	equ	0xFE5
 13904                           fsr1h	equ	0xFE2
 13905                           fsr1l	equ	0xFE1
 13906                           indf2	equ	0xFDF
 13907                           postinc2	equ	0xFDE
 13908                           postdec2	equ	0xFDD
 13909                           fsr2h	equ	0xFDA
 13910                           fsr2l	equ	0xFD9
 13911                           status	equ	0xFD8
 13912                           
 13913 ;; *************** function _low_isr *****************
 13914 ;; Defined at:
 13915 ;;		line 1210 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;		None
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;		None
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  1    wreg      void 
 13922 ;; Registers used:
 13923 ;;		wreg, status,2, status,0, cstack
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : F/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13933 ;;Total ram usage:        4 bytes
 13934 ;; Hardware stack levels used:    1
 13935 ;; Hardware stack levels required when called:    8
 13936 ;; This function calls:
 13937 ;;		i1_RegisterRead
 13938 ;; This function is called by:
 13939 ;;		Interrupt level 1
 13940 ;; This function uses a non-reentrant model
 13941 ;;
 13942                           
 13943                           	psect	intcodelo
 13944  000018                     __pintcodelo:
 13945                           	opt stack 0
 13946  000018                     _low_isr:
 13947                           	opt stack 11
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;incstack = 0
 13951  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13952  00001A  CFD8 F066          	movff	status,??_low_isr+1
 13953  00001E  CFE8 F067          	movff	wreg,??_low_isr+2
 13954  000022  CFE0 F068          	movff	bsr,??_low_isr+3
 13955                           
 13956                           ;drv_mrf_miwi_89xa.c: 1224: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 13957  000026  B2F2               	btfsc	intcon,1,c	;volatile
 13958  000028  A8F2               	btfss	intcon,4,c	;volatile
 13959  00002A  D001               	goto	i1l6480
 13960                           
 13961                           ;drv_mrf_miwi_89xa.c: 1225: INTCONbits.INT0IF = 0;
 13962  00002C  92F2               	bcf	intcon,1,c	;volatile
 13963  00002E                     i1l6480:
 13964                           
 13965                           ;drv_mrf_miwi_89xa.c: 1228: if(RF_Mode == 0x60)
 13966  00002E  0E60               	movlw	96
 13967  000030  0100               	movlb	0	; () banked
 13968  000032  19D8               	xorwf	_RF_Mode& (0+255),w,b
 13969  000034  E107               	bnz	i1l175
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;drv_mrf_miwi_89xa.c: 1229: {
 13973                           ;drv_mrf_miwi_89xa.c: 1230: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 13974  000036  0E28               	movlw	40
 13975  000038  EC42  F013         	call	i1_RegisterRead
 13976  00003C  6F65               	movwf	??_low_isr& (0+255),b
 13977  00003E  90D8               	bcf	status,0,c
 13978  000040  3165               	rrcf	??_low_isr& (0+255),w,b
 13979  000042  6E44               	movwf	_RSSIVal,c
 13980  000044                     i1l175:
 13981                           
 13982                           ; BSR set to: 0
 13983  000044  C068  FFE0         	movff	??_low_isr+3,bsr
 13984  000048  C067  FFE8         	movff	??_low_isr+2,wreg
 13985  00004C  C066  FFD8         	movff	??_low_isr+1,status
 13986  000050  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13987  000052  0010               	retfie	
 13988  000054                     __end_of_low_isr:
 13989                           	opt stack 0
 13990                           tblptru	equ	0xFF8
 13991                           tblptrh	equ	0xFF7
 13992                           tblptrl	equ	0xFF6
 13993                           tablat	equ	0xFF5
 13994                           prodh	equ	0xFF4
 13995                           prodl	equ	0xFF3
 13996                           intcon	equ	0xFF2
 13997                           intcon2	equ	0xFF1
 13998                           intcon3	equ	0xFF0
 13999                           postinc0	equ	0xFEE
 14000                           wreg	equ	0xFE8
 14001                           indf1	equ	0xFE7
 14002                           postinc1	equ	0xFE6
 14003                           postdec1	equ	0xFE5
 14004                           fsr1h	equ	0xFE2
 14005                           fsr1l	equ	0xFE1
 14006                           bsr	equ	0xFE0
 14007                           indf2	equ	0xFDF
 14008                           postinc2	equ	0xFDE
 14009                           postdec2	equ	0xFDD
 14010                           fsr2h	equ	0xFDA
 14011                           fsr2l	equ	0xFD9
 14012                           status	equ	0xFD8
 14013                           
 14014 ;; *************** function i1_RegisterRead *****************
 14015 ;; Defined at:
 14016 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  address         1    wreg     unsigned char 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;  address         1    1[BANK0 ] unsigned char 
 14021 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 14022 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 14023 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 14024 ;; Return value:  Size  Location     Type
 14025 ;;                  1    wreg      unsigned char 
 14026 ;; Registers used:
 14027 ;;		wreg, status,2, status,0, cstack
 14028 ;; Tracked objects:
 14029 ;;		On entry : F/0
 14030 ;;		On exit  : F/0
 14031 ;;		Unchanged: 0/0
 14032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14037 ;;Total ram usage:        4 bytes
 14038 ;; Hardware stack levels used:    1
 14039 ;; Hardware stack levels required when called:    7
 14040 ;; This function calls:
 14041 ;;		i1_SPIGet
 14042 ;;		i1_SPIPut
 14043 ;; This function is called by:
 14044 ;;		_low_isr
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text67
 14049  002684                     __ptext67:
 14050                           	opt stack 0
 14051  002684                     i1_RegisterRead:
 14052                           	opt stack 11
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;incstack = 0
 14056                           ;i1RegisterRead@address stored from wreg
 14057  002684  6F61               	movwf	i1RegisterRead@address& (0+255),b
 14058                           
 14059                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 14060                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 14061  002686  0E00               	movlw	0
 14062  002688  B6F0               	btfsc	intcon3,3,c	;volatile
 14063  00268A  0E01               	movlw	1
 14064  00268C  0100               	movlb	0	; () banked
 14065  00268E  6F63               	movwf	i1RegisterRead@IRQ1select& (0+255),b
 14066                           
 14067                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 14068  002690  0E00               	movlw	0
 14069  002692  B8F2               	btfsc	intcon,4,c	;volatile
 14070  002694  0E01               	movlw	1
 14071  002696  6F64               	movwf	i1RegisterRead@IRQ0select& (0+255),b
 14072                           
 14073                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 14074  002698  98F2               	bcf	intcon,4,c	;volatile
 14075                           
 14076                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 14077  00269A  96F0               	bcf	intcon3,3,c	;volatile
 14078                           
 14079                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 14080  00269C  928C               	bcf	3980,1,c	;volatile
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 14084  00269E  8D61               	bsf	i1RegisterRead@address& (0+255),6,b
 14085                           
 14086                           ; BSR set to: 0
 14087                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 14088  0026A0  5161               	movf	i1RegisterRead@address& (0+255),w,b
 14089  0026A2  ECC7  F015         	call	i1_SPIPut
 14090                           
 14091                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 14092  0026A6  EC3F  F016         	call	i1_SPIGet	;wreg free
 14093  0026AA  0100               	movlb	0	; () banked
 14094  0026AC  6F62               	movwf	i1RegisterRead@value& (0+255),b
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 14098  0026AE  828C               	bsf	3980,1,c	;volatile
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 14102  0026B0  B163               	btfsc	i1RegisterRead@IRQ1select& (0+255),0,b
 14103  0026B2  D002               	bra	i1u552_25
 14104  0026B4  96F0               	bcf	intcon3,3,c	;volatile
 14105  0026B6  D001               	bra	i1u552_26
 14106  0026B8                     i1u552_25:
 14107  0026B8  86F0               	bsf	intcon3,3,c	;volatile
 14108  0026BA                     i1u552_26:
 14109                           
 14110                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 14111  0026BA  0100               	movlb	0	; () banked
 14112  0026BC  B164               	btfsc	i1RegisterRead@IRQ0select& (0+255),0,b
 14113  0026BE  D002               	bra	i1u553_25
 14114  0026C0  98F2               	bcf	intcon,4,c	;volatile
 14115  0026C2  D001               	bra	i1u553_26
 14116  0026C4                     i1u553_25:
 14117  0026C4  88F2               	bsf	intcon,4,c	;volatile
 14118  0026C6                     i1u553_26:
 14119                           
 14120                           ;drv_mrf_miwi_89xa.c: 222: return value;
 14121  0026C6  0100               	movlb	0	; () banked
 14122  0026C8  5162               	movf	i1RegisterRead@value& (0+255),w,b
 14123                           
 14124                           ; BSR set to: 0
 14125  0026CA  0012               	return		;funcret
 14126  0026CC                     __end_ofi1_RegisterRead:
 14127                           	opt stack 0
 14128                           tblptru	equ	0xFF8
 14129                           tblptrh	equ	0xFF7
 14130                           tblptrl	equ	0xFF6
 14131                           tablat	equ	0xFF5
 14132                           prodh	equ	0xFF4
 14133                           prodl	equ	0xFF3
 14134                           intcon	equ	0xFF2
 14135                           intcon2	equ	0xFF1
 14136                           intcon3	equ	0xFF0
 14137                           postinc0	equ	0xFEE
 14138                           wreg	equ	0xFE8
 14139                           indf1	equ	0xFE7
 14140                           postinc1	equ	0xFE6
 14141                           postdec1	equ	0xFE5
 14142                           fsr1h	equ	0xFE2
 14143                           fsr1l	equ	0xFE1
 14144                           bsr	equ	0xFE0
 14145                           indf2	equ	0xFDF
 14146                           postinc2	equ	0xFDE
 14147                           postdec2	equ	0xFDD
 14148                           fsr2h	equ	0xFDA
 14149                           fsr2l	equ	0xFD9
 14150                           status	equ	0xFD8
 14151                           
 14152 ;; *************** function i1_SPIGet *****************
 14153 ;; Defined at:
 14154 ;;		line 102 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 14155 ;; Parameters:    Size  Location     Type
 14156 ;;		None
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;		None
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  1    wreg      unsigned char 
 14161 ;; Registers used:
 14162 ;;		wreg, status,2, cstack
 14163 ;; Tracked objects:
 14164 ;;		On entry : 0/0
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14172 ;;Total ram usage:        0 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:    6
 14175 ;; This function calls:
 14176 ;;		i1_SPIPut
 14177 ;; This function is called by:
 14178 ;;		i1_RegisterRead
 14179 ;; This function uses a non-reentrant model
 14180 ;;
 14181                           
 14182                           	psect	text68
 14183  002C7E                     __ptext68:
 14184                           	opt stack 0
 14185  002C7E                     i1_SPIGet:
 14186                           	opt stack 11
 14187                           
 14188                           ;spi.c: 123: SPIPut(0x00);
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;incstack = 0
 14192  002C7E  0E00               	movlw	0
 14193  002C80  ECC7  F015         	call	i1_SPIPut
 14194                           
 14195                           ;spi.c: 124: return SSP1BUF;
 14196  002C84  50C9               	movf	4041,w,c	;volatile
 14197  002C86  0012               	return		;funcret
 14198  002C88                     __end_ofi1_SPIGet:
 14199                           	opt stack 0
 14200                           tblptru	equ	0xFF8
 14201                           tblptrh	equ	0xFF7
 14202                           tblptrl	equ	0xFF6
 14203                           tablat	equ	0xFF5
 14204                           prodh	equ	0xFF4
 14205                           prodl	equ	0xFF3
 14206                           intcon	equ	0xFF2
 14207                           intcon2	equ	0xFF1
 14208                           intcon3	equ	0xFF0
 14209                           postinc0	equ	0xFEE
 14210                           wreg	equ	0xFE8
 14211                           indf1	equ	0xFE7
 14212                           postinc1	equ	0xFE6
 14213                           postdec1	equ	0xFE5
 14214                           fsr1h	equ	0xFE2
 14215                           fsr1l	equ	0xFE1
 14216                           bsr	equ	0xFE0
 14217                           indf2	equ	0xFDF
 14218                           postinc2	equ	0xFDE
 14219                           postdec2	equ	0xFDD
 14220                           fsr2h	equ	0xFDA
 14221                           fsr2l	equ	0xFD9
 14222                           status	equ	0xFD8
 14223                           
 14224 ;; *************** function i1_SPIPut *****************
 14225 ;; Defined at:
 14226 ;;		line 45 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;  v               1    wreg     unsigned char 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  v               1    0[BANK0 ] unsigned char 
 14231 ;;  SPIPut          1    0        unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		wreg
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14244 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;Total ram usage:        1 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    5
 14248 ;; This function calls:
 14249 ;;		Nothing
 14250 ;; This function is called by:
 14251 ;;		i1_RegisterRead
 14252 ;;		i1_SPIGet
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text69
 14257  002B8E                     __ptext69:
 14258                           	opt stack 0
 14259  002B8E                     i1_SPIPut:
 14260                           	opt stack 12
 14261                           
 14262                           ;incstack = 0
 14263                           ;i1SPIPut@v stored from wreg
 14264  002B8E  0100               	movlb	0	; () banked
 14265  002B90  6F60               	movwf	i1SPIPut@v& (0+255),b
 14266                           
 14267                           ;spi.c: 64: {
 14268                           ;spi.c: 66: uint8_t i;
 14269                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
 14270  002B92  969E               	bcf	3998,3,c	;volatile
 14271                           
 14272                           ;spi.c: 70: i = SSP1BUF;
 14273  002B94  50C9               	movf	4041,w,c	;volatile
 14274  002B96                     i1l714:
 14275                           
 14276                           ;spi.c: 73: {
 14277                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
 14278  002B96  9EC6               	bcf	4038,7,c	;volatile
 14279                           
 14280                           ;spi.c: 75: SSP1BUF = v;
 14281  002B98  C060  FFC9         	movff	i1SPIPut@v,4041	;volatile
 14282                           
 14283                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
 14284  002B9C  BEC6               	btfsc	4038,7,c	;volatile
 14285  002B9E  D7FB               	goto	i1l714
 14286  002BA0                     i1l716:
 14287  002BA0  A69E               	btfss	3998,3,c	;volatile
 14288  002BA2  D7FE               	goto	i1l716
 14289                           
 14290                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
 14291  002BA4  969E               	bcf	3998,3,c	;volatile
 14292  002BA6  0012               	return		;funcret
 14293  002BA8                     __end_ofi1_SPIPut:
 14294                           	opt stack 0
 14295                           tblptru	equ	0xFF8
 14296                           tblptrh	equ	0xFF7
 14297                           tblptrl	equ	0xFF6
 14298                           tablat	equ	0xFF5
 14299                           prodh	equ	0xFF4
 14300                           prodl	equ	0xFF3
 14301                           intcon	equ	0xFF2
 14302                           intcon2	equ	0xFF1
 14303                           intcon3	equ	0xFF0
 14304                           postinc0	equ	0xFEE
 14305                           wreg	equ	0xFE8
 14306                           indf1	equ	0xFE7
 14307                           postinc1	equ	0xFE6
 14308                           postdec1	equ	0xFE5
 14309                           fsr1h	equ	0xFE2
 14310                           fsr1l	equ	0xFE1
 14311                           bsr	equ	0xFE0
 14312                           indf2	equ	0xFDF
 14313                           postinc2	equ	0xFDE
 14314                           postdec2	equ	0xFDD
 14315                           fsr2h	equ	0xFDA
 14316                           fsr2l	equ	0xFD9
 14317                           status	equ	0xFD8
 14318                           
 14319 ;; *************** function _high_isr *****************
 14320 ;; Defined at:
 14321 ;;		line 1240 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;		None
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  ackInfoIndex    1   55[COMRAM] unsigned char 
 14326 ;;  i               1   58[COMRAM] unsigned char 
 14327 ;;  fifo_stat       1   48[COMRAM] unsigned char 
 14328 ;;  ackPacket       4   49[COMRAM] unsigned char [4]
 14329 ;;  counter         2   46[COMRAM] unsigned int 
 14330 ;;  BankIndex       1   57[COMRAM] unsigned char 
 14331 ;;  PacketLen       1   56[COMRAM] unsigned char 
 14332 ;;  RxPacketPtr     1   54[COMRAM] unsigned char 
 14333 ;;  bAck            1   53[COMRAM] unsigned char 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  1    wreg      void 
 14336 ;; Registers used:
 14337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14345 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14346 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14347 ;;Total ram usage:       23 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:    4
 14350 ;; This function calls:
 14351 ;;		_UserInterruptHandler
 14352 ;;		i2_MiWi_TickGet
 14353 ;;		i2_RegisterRead
 14354 ;;		i2_SPIGet
 14355 ;;		i2_TxPacket
 14356 ;; This function is called by:
 14357 ;;		Interrupt level 2
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	intcode
 14362  000008                     __pintcode:
 14363                           	opt stack 0
 14364  000008                     _high_isr:
 14365                           	opt stack 11
 14366                           
 14367                           ;incstack = 0
 14368  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14369  00000A  CFE1 F029          	movff	fsr1l,??_high_isr+4
 14370  00000E  CFE2 F02A          	movff	fsr1h,??_high_isr+5
 14371  000012  EF68  F006         	goto	int_func
 14372                           tblptru	equ	0xFF8
 14373                           tblptrh	equ	0xFF7
 14374                           tblptrl	equ	0xFF6
 14375                           tablat	equ	0xFF5
 14376                           prodh	equ	0xFF4
 14377                           prodl	equ	0xFF3
 14378                           intcon	equ	0xFF2
 14379                           intcon2	equ	0xFF1
 14380                           intcon3	equ	0xFF0
 14381                           postinc0	equ	0xFEE
 14382                           wreg	equ	0xFE8
 14383                           indf1	equ	0xFE7
 14384                           postinc1	equ	0xFE6
 14385                           postdec1	equ	0xFE5
 14386                           fsr1h	equ	0xFE2
 14387                           fsr1l	equ	0xFE1
 14388                           bsr	equ	0xFE0
 14389                           indf2	equ	0xFDF
 14390                           postinc2	equ	0xFDE
 14391                           postdec2	equ	0xFDD
 14392                           fsr2h	equ	0xFDA
 14393                           fsr2l	equ	0xFD9
 14394                           status	equ	0xFD8
 14395                           
 14396                           	psect	intcode_body
 14397  000CD0                     __pintcode_body:
 14398                           	opt stack 11
 14399  000CD0                     int_func:
 14400                           	opt stack 11
 14401  000CD0  CFD9 F02B          	movff	fsr2l,??_high_isr+6
 14402  000CD4  CFDA F02C          	movff	fsr2h,??_high_isr+7
 14403  000CD8  CFF3 F02D          	movff	prodl,??_high_isr+8
 14404  000CDC  CFF4 F02E          	movff	prodh,??_high_isr+9
 14405                           
 14406                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 14407  000CE0  B0F0               	btfsc	intcon3,0,c	;volatile
 14408  000CE2  A6F0               	btfss	intcon3,3,c	;volatile
 14409  000CE4  D1A0               	goto	i2l6660
 14410                           
 14411                           ;drv_mrf_miwi_89xa.c: 1256: {
 14412                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 14413  000CE6  0E60               	movlw	96
 14414  000CE8  0100               	movlb	0	; () banked
 14415  000CEA  19D8               	xorwf	_RF_Mode& (0+255),w,b
 14416  000CEC  E001 D197          	bnz	i2l6654
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;drv_mrf_miwi_89xa.c: 1258: {
 14420                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 14421                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 14422                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 14423                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 14424                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 14425                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 14426                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 14427  000CF0  C044  F0D9         	movff	_RSSIVal,_RSSILock
 14428                           
 14429                           ;drv_mrf_miwi_89xa.c: 1272: LATAbits.LATA5 = 0;
 14430  000CF4  9A89               	bcf	3977,5,c	;volatile
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;drv_mrf_miwi_89xa.c: 1273: PacketLen = SPIGet();
 14434  000CF6  EC44  F016         	call	i2_SPIGet	;wreg free
 14435  000CFA  6E39               	movwf	high_isr@PacketLen,c
 14436                           
 14437                           ;drv_mrf_miwi_89xa.c: 1274: LATAbits.LATA5 = 1;
 14438  000CFC  8A89               	bsf	3977,5,c	;volatile
 14439                           
 14440                           ;drv_mrf_miwi_89xa.c: 1277: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 14441  000CFE  6A3A               	clrf	high_isr@BankIndex,c
 14442  000D00                     i2l6504:
 14443                           
 14444                           ;drv_mrf_miwi_89xa.c: 1278: {
 14445                           ;drv_mrf_miwi_89xa.c: 1279: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 14446  000D00  503A               	movf	high_isr@BankIndex,w,c
 14447  000D02  0D34               	mullw	52
 14448  000D04  0E50               	movlw	low _RxPacket
 14449  000D06  24F3               	addwf	prodl,w,c
 14450  000D08  6ED9               	movwf	fsr2l,c
 14451  000D0A  0E01               	movlw	high _RxPacket
 14452  000D0C  20F4               	addwfc	prodh,w,c
 14453  000D0E  6EDA               	movwf	fsr2h,c
 14454  000D10  0101               	movlb	1	; () banked
 14455  000D12  A0DF               	btfss	indf2,0,c
 14456  000D14  D004               	goto	i2l6512
 14457                           
 14458                           ; BSR set to: 1
 14459  000D16  2A3A               	incf	high_isr@BankIndex,f,c
 14460                           
 14461                           ; BSR set to: 1
 14462  000D18  0E01               	movlw	1
 14463  000D1A  643A               	cpfsgt	high_isr@BankIndex,c
 14464  000D1C  D7F1               	goto	i2l6504
 14465  000D1E                     i2l6512:
 14466                           
 14467                           ; BSR set to: 1
 14468                           ;drv_mrf_miwi_89xa.c: 1282: }
 14469                           ;drv_mrf_miwi_89xa.c: 1283: }
 14470                           ;drv_mrf_miwi_89xa.c: 1286: if( PacketLen == 2 )
 14471  000D1E  0E02               	movlw	2
 14472  000D20  1839               	xorwf	high_isr@PacketLen,w,c
 14473  000D22  E103               	bnz	i2l183
 14474                           
 14475                           ; BSR set to: 1
 14476                           ;drv_mrf_miwi_89xa.c: 1287: {
 14477                           ;drv_mrf_miwi_89xa.c: 1288: bAck = 1;
 14478  000D24  0E01               	movlw	1
 14479  000D26  6E36               	movwf	high_isr@bAck,c
 14480                           
 14481                           ;drv_mrf_miwi_89xa.c: 1289: }
 14482  000D28  D001               	goto	i2l6516
 14483  000D2A                     i2l183:
 14484                           
 14485                           ; BSR set to: 1
 14486                           ;drv_mrf_miwi_89xa.c: 1290: else
 14487                           ;drv_mrf_miwi_89xa.c: 1291: {
 14488                           ;drv_mrf_miwi_89xa.c: 1292: bAck = 0;
 14489  000D2A  6A36               	clrf	high_isr@bAck,c
 14490  000D2C                     i2l6516:
 14491                           
 14492                           ; BSR set to: 1
 14493                           ;drv_mrf_miwi_89xa.c: 1293: }
 14494                           ;drv_mrf_miwi_89xa.c: 1296: if( PacketLen >= (30+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 14495  000D2C  0E32               	movlw	50
 14496  000D2E  6039               	cpfslt	high_isr@PacketLen,c
 14497  000D30  D007               	goto	i2l6524
 14498                           
 14499                           ; BSR set to: 1
 14500  000D32  5039               	movf	high_isr@PacketLen,w,c
 14501  000D34  E005               	bz	i2l6524
 14502                           
 14503                           ; BSR set to: 1
 14504  000D36  0E01               	movlw	1
 14505  000D38  643A               	cpfsgt	high_isr@BankIndex,c
 14506  000D3A  D011               	goto	i2l185
 14507                           
 14508                           ; BSR set to: 1
 14509  000D3C  5036               	movf	high_isr@bAck,w,c
 14510  000D3E  E10F               	bnz	i2l185
 14511  000D40                     i2l6524:
 14512                           
 14513                           ;drv_mrf_miwi_89xa.c: 1299: {
 14514                           ;drv_mrf_miwi_89xa.c: 1300: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 14515  000D40  0E1A               	movlw	26
 14516  000D42  EC86  F013         	call	i2_RegisterRead
 14517  000D46  D007               	goto	L8
 14518  000D48                     i2l190:
 14519                           
 14520                           ;drv_mrf_miwi_89xa.c: 1302: {
 14521                           ;drv_mrf_miwi_89xa.c: 1303: LATAbits.LATA5 = 0;
 14522  000D48  9A89               	bcf	3977,5,c	;volatile
 14523                           
 14524                           ;drv_mrf_miwi_89xa.c: 1304: SPIGet();
 14525  000D4A  EC44  F016         	call	i2_SPIGet	;wreg free
 14526                           
 14527                           ;drv_mrf_miwi_89xa.c: 1305: LATAbits.LATA5 = 1;
 14528  000D4E  8A89               	bsf	3977,5,c	;volatile
 14529                           
 14530                           ;drv_mrf_miwi_89xa.c: 1306: fifo_stat = RegisterRead(0x1A00>>8);
 14531  000D50  0E1A               	movlw	26
 14532  000D52  EC86  F013         	call	i2_RegisterRead
 14533  000D56                     L8:
 14534  000D56  6E31               	movwf	high_isr@fifo_stat,c
 14535  000D58  B231               	btfsc	high_isr@fifo_stat,1,c
 14536  000D5A  D7F6               	goto	i2l190
 14537  000D5C  D162               	goto	i2l6656
 14538  000D5E                     i2l185:
 14539                           
 14540                           ; BSR set to: 1
 14541                           ;drv_mrf_miwi_89xa.c: 1310: }
 14542                           ;drv_mrf_miwi_89xa.c: 1312: RxPacketPtr = 0;
 14543  000D5E  6A37               	clrf	high_isr@RxPacketPtr,c
 14544                           
 14545                           ;drv_mrf_miwi_89xa.c: 1313: counter = PacketLen;
 14546  000D60  C039  F02F         	movff	high_isr@PacketLen,high_isr@counter
 14547  000D64  6A30               	clrf	high_isr@counter+1,c
 14548                           
 14549                           ;drv_mrf_miwi_89xa.c: 1315: while(counter >= 1)
 14550  000D66  D157               	goto	i2l6652
 14551  000D68                     i2l6534:
 14552                           
 14553                           ;drv_mrf_miwi_89xa.c: 1318: if(1)
 14554  000D68  062F               	decf	high_isr@counter,f,c
 14555  000D6A  A0D8               	btfss	status,0,c
 14556  000D6C  0630               	decf	high_isr@counter+1,f,c
 14557                           
 14558                           ;drv_mrf_miwi_89xa.c: 1319: {
 14559                           ;drv_mrf_miwi_89xa.c: 1321: if( bAck )
 14560  000D6E  5036               	movf	high_isr@bAck,w,c
 14561  000D70  E008               	bz	i2l196
 14562                           
 14563                           ;drv_mrf_miwi_89xa.c: 1322: {
 14564                           ;drv_mrf_miwi_89xa.c: 1323: LATAbits.LATA5 = 0;
 14565  000D72  9A89               	bcf	3977,5,c	;volatile
 14566                           
 14567                           ;drv_mrf_miwi_89xa.c: 1324: ackPacket[RxPacketPtr++] = SPIGet();
 14568  000D74  5037               	movf	high_isr@RxPacketPtr,w,c
 14569  000D76  0F32               	addlw	low high_isr@ackPacket
 14570  000D78  6ED9               	movwf	fsr2l,c
 14571  000D7A  6ADA               	clrf	fsr2h,c
 14572  000D7C  EC44  F016         	call	i2_SPIGet	;wreg free
 14573  000D80  D016               	goto	L10
 14574  000D82                     i2l196:
 14575                           
 14576                           ;drv_mrf_miwi_89xa.c: 1328: else
 14577                           ;drv_mrf_miwi_89xa.c: 1329: {
 14578                           ;drv_mrf_miwi_89xa.c: 1330: LATAbits.LATA5 = 0;
 14579  000D82  9A89               	bcf	3977,5,c	;volatile
 14580                           
 14581                           ;drv_mrf_miwi_89xa.c: 1331: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 14582  000D84  503A               	movf	high_isr@BankIndex,w,c
 14583  000D86  0D34               	mullw	52
 14584  000D88  0E50               	movlw	low _RxPacket
 14585  000D8A  6E25               	movwf	??_high_isr& (0+255),c
 14586  000D8C  0E01               	movlw	high _RxPacket
 14587  000D8E  6E26               	movwf	(??_high_isr+1)& (0+255),c
 14588  000D90  2A25               	incf	??_high_isr,f,c
 14589  000D92  0E00               	movlw	0
 14590  000D94  2226               	addwfc	??_high_isr+1,f,c
 14591  000D96  50F3               	movf	prodl,w,c
 14592  000D98  2625               	addwf	??_high_isr,f,c
 14593  000D9A  50F4               	movf	prodh,w,c
 14594  000D9C  2226               	addwfc	??_high_isr+1,f,c
 14595  000D9E  5037               	movf	high_isr@RxPacketPtr,w,c
 14596  000DA0  2425               	addwf	??_high_isr,w,c
 14597  000DA2  6ED9               	movwf	fsr2l,c
 14598  000DA4  0E00               	movlw	0
 14599  000DA6  2026               	addwfc	??_high_isr+1,w,c
 14600  000DA8  6EDA               	movwf	fsr2h,c
 14601  000DAA  EC44  F016         	call	i2_SPIGet	;wreg free
 14602  000DAE                     L10:
 14603  000DAE  6EDF               	movwf	indf2,c
 14604  000DB0  2A37               	incf	high_isr@RxPacketPtr,f,c
 14605                           
 14606                           ;drv_mrf_miwi_89xa.c: 1332: LATAbits.LATA5 = 1;
 14607  000DB2  8A89               	bsf	3977,5,c	;volatile
 14608                           
 14609                           ;drv_mrf_miwi_89xa.c: 1333: }
 14610                           ;drv_mrf_miwi_89xa.c: 1336: if( RxPacketPtr >= PacketLen )
 14611  000DB4  5039               	movf	high_isr@PacketLen,w,c
 14612  000DB6  5C37               	subwf	high_isr@RxPacketPtr,w,c
 14613  000DB8  E201 D12D          	bnc	i2l6652
 14614                           
 14615                           ;drv_mrf_miwi_89xa.c: 1337: {
 14616                           ;drv_mrf_miwi_89xa.c: 1338: uint8_t i;
 14617                           ;drv_mrf_miwi_89xa.c: 1340: if( bAck )
 14618  000DBC  5036               	movf	high_isr@bAck,w,c
 14619  000DBE  E024               	bz	i2l199
 14620                           
 14621                           ;drv_mrf_miwi_89xa.c: 1341: {
 14622                           ;drv_mrf_miwi_89xa.c: 1343: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 14623  000DC0  5032               	movf	high_isr@ackPacket,w,c
 14624  000DC2  0B03               	andlw	3
 14625  000DC4  0A02               	xorlw	2
 14626  000DC6  E108               	bnz	i2l6566
 14627                           
 14628                           ;drv_mrf_miwi_89xa.c: 1344: {
 14629                           ;drv_mrf_miwi_89xa.c: 1345: if( ackPacket[1] == TxMACSeq )
 14630  000DC8  5045               	movf	_TxMACSeq,w,c
 14631  000DCA  1833               	xorwf	high_isr@ackPacket+1,w,c
 14632  000DCC  E001 D129          	bnz	i2l6656
 14633                           
 14634                           ;drv_mrf_miwi_89xa.c: 1346: {
 14635                           ;drv_mrf_miwi_89xa.c: 1347: hasAck = 1;
 14636  000DD0  0E01               	movlw	1
 14637  000DD2  0100               	movlb	0	; () banked
 14638  000DD4  6FE0               	movwf	_hasAck& (0+255),b	;volatile
 14639                           
 14640                           ;drv_mrf_miwi_89xa.c: 1350: goto RETURN_HERE;
 14641  000DD6  D125               	goto	i2l6656
 14642  000DD8                     i2l6566:
 14643                           
 14644                           ;drv_mrf_miwi_89xa.c: 1352: else
 14645                           ;drv_mrf_miwi_89xa.c: 1354: if( BankIndex >= 2 )
 14646  000DD8  0E01               	movlw	1
 14647  000DDA  643A               	cpfsgt	high_isr@BankIndex,c
 14648  000DDC  D001               	goto	i2l6570
 14649  000DDE  D7B0               	goto	i2l6524
 14650  000DE0                     i2l6570:
 14651                           
 14652                           ;drv_mrf_miwi_89xa.c: 1358: }
 14653                           ;drv_mrf_miwi_89xa.c: 1359: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 14654  000DE0  503A               	movf	high_isr@BankIndex,w,c
 14655  000DE2  0D34               	mullw	52
 14656  000DE4  0E51               	movlw	low (_RxPacket+1)
 14657  000DE6  24F3               	addwf	prodl,w,c
 14658  000DE8  6ED9               	movwf	fsr2l,c
 14659  000DEA  0E01               	movlw	high (_RxPacket+1)
 14660  000DEC  20F4               	addwfc	prodh,w,c
 14661  000DEE  6EDA               	movwf	fsr2h,c
 14662  000DF0  C032  FFDF         	movff	high_isr@ackPacket,indf2
 14663                           
 14664                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 14665  000DF4  503A               	movf	high_isr@BankIndex,w,c
 14666  000DF6  0D34               	mullw	52
 14667  000DF8  0E52               	movlw	low (_RxPacket+2)
 14668  000DFA  24F3               	addwf	prodl,w,c
 14669  000DFC  6ED9               	movwf	fsr2l,c
 14670  000DFE  0E01               	movlw	high (_RxPacket+2)
 14671  000E00  20F4               	addwfc	prodh,w,c
 14672  000E02  6EDA               	movwf	fsr2h,c
 14673  000E04  C033  FFDF         	movff	high_isr@ackPacket+1,indf2
 14674  000E08                     i2l199:
 14675                           
 14676                           ;drv_mrf_miwi_89xa.c: 1362: }
 14677                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].PayloadLen = PacketLen;
 14678  000E08  503A               	movf	high_isr@BankIndex,w,c
 14679  000E0A  0D34               	mullw	52
 14680  000E0C  0E83               	movlw	low (_RxPacket+51)
 14681  000E0E  24F3               	addwf	prodl,w,c
 14682  000E10  6ED9               	movwf	fsr2l,c
 14683  000E12  0E01               	movlw	high (_RxPacket+51)
 14684  000E14  20F4               	addwfc	prodh,w,c
 14685  000E16  6EDA               	movwf	fsr2h,c
 14686  000E18  C039  FFDF         	movff	high_isr@PacketLen,indf2
 14687                           
 14688                           ;drv_mrf_miwi_89xa.c: 1381: {
 14689                           ;drv_mrf_miwi_89xa.c: 1382: uint8_t ackInfoIndex = 0xFF;
 14690  000E1C  6838               	setf	high_isr@ackInfoIndex,c
 14691                           
 14692                           ;drv_mrf_miwi_89xa.c: 1384: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 14693  000E1E  503A               	movf	high_isr@BankIndex,w,c
 14694  000E20  0D34               	mullw	52
 14695  000E22  0E51               	movlw	low (_RxPacket+1)
 14696  000E24  24F3               	addwf	prodl,w,c
 14697  000E26  6ED9               	movwf	fsr2l,c
 14698  000E28  0E01               	movlw	high (_RxPacket+1)
 14699  000E2A  20F4               	addwfc	prodh,w,c
 14700  000E2C  6EDA               	movwf	fsr2h,c
 14701  000E2E  ACDF               	btfss	indf2,6,c
 14702  000E30  D031               	goto	i2l6586
 14703                           
 14704                           ; BSR set to: 1
 14705                           ;drv_mrf_miwi_89xa.c: 1385: {
 14706                           ;drv_mrf_miwi_89xa.c: 1386: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 14707  000E32  6A3B               	clrf	high_isr@i,c
 14708  000E34  D026               	goto	i2l6584
 14709  000E36                     i2l6576:
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;drv_mrf_miwi_89xa.c: 1387: {
 14713                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 14714  000E36  51CD               	movf	(_MACInitParams+1)& (0+255),w,b
 14715  000E38  243B               	addwf	high_isr@i,w,c
 14716  000E3A  6ED9               	movwf	fsr2l,c
 14717  000E3C  6ADA               	clrf	fsr2h,c
 14718  000E3E  503A               	movf	high_isr@BankIndex,w,c
 14719  000E40  0D34               	mullw	52
 14720  000E42  0E50               	movlw	low _RxPacket
 14721  000E44  6E26               	movwf	(??_high_isr+1)& (0+255),c
 14722  000E46  0E01               	movlw	high _RxPacket
 14723  000E48  6E27               	movwf	(??_high_isr+2)& (0+255),c
 14724  000E4A  0E03               	movlw	3
 14725  000E4C  2626               	addwf	??_high_isr+1,f,c
 14726  000E4E  0E00               	movlw	0
 14727  000E50  2227               	addwfc	??_high_isr+2,f,c
 14728  000E52  50F3               	movf	prodl,w,c
 14729  000E54  2626               	addwf	??_high_isr+1,f,c
 14730  000E56  50F4               	movf	prodh,w,c
 14731  000E58  2227               	addwfc	??_high_isr+2,f,c
 14732  000E5A  503B               	movf	high_isr@i,w,c
 14733  000E5C  2426               	addwf	??_high_isr+1,w,c
 14734  000E5E  6EE1               	movwf	fsr1l,c
 14735  000E60  0E00               	movlw	0
 14736  000E62  2027               	addwfc	??_high_isr+2,w,c
 14737  000E64  6EE2               	movwf	fsr1h,c
 14738  000E66  50DE               	movf	postinc2,w,c
 14739  000E68  18E6               	xorwf	postinc1,w,c
 14740  000E6A  E00A               	bz	i2l6582
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;drv_mrf_miwi_89xa.c: 1391: RxPacket[BankIndex].PayloadLen = 0;
 14744                           
 14745                           ; BSR set to: 0
 14746  000E6C  503A               	movf	high_isr@BankIndex,w,c
 14747  000E6E  0D34               	mullw	52
 14748  000E70  0E83               	movlw	low (_RxPacket+51)
 14749  000E72  24F3               	addwf	prodl,w,c
 14750  000E74  6ED9               	movwf	fsr2l,c
 14751  000E76  0E01               	movlw	high (_RxPacket+51)
 14752  000E78  20F4               	addwfc	prodh,w,c
 14753  000E7A  6EDA               	movwf	fsr2h,c
 14754  000E7C  6ADF               	clrf	indf2,c
 14755                           
 14756                           ;drv_mrf_miwi_89xa.c: 1392: goto IGNORE_HERE;
 14757  000E7E  D760               	goto	i2l6524
 14758  000E80                     i2l6582:
 14759                           
 14760                           ; BSR set to: 0
 14761  000E80  2A3B               	incf	high_isr@i,f,c
 14762  000E82                     i2l6584:
 14763  000E82  0100               	movlb	0	; () banked
 14764  000E84  31CC               	rrcf	_MACInitParams& (0+255),w,b
 14765  000E86  32E8               	rrcf	wreg,f,c
 14766  000E88  32E8               	rrcf	wreg,f,c
 14767  000E8A  0B0F               	andlw	15
 14768  000E8C  6E25               	movwf	??_high_isr& (0+255),c
 14769  000E8E  5025               	movf	??_high_isr,w,c
 14770  000E90  5C3B               	subwf	high_isr@i,w,c
 14771  000E92  E3D1               	bnc	i2l6576
 14772  000E94                     i2l6586:
 14773                           
 14774                           ;drv_mrf_miwi_89xa.c: 1393: }
 14775                           ;drv_mrf_miwi_89xa.c: 1394: }
 14776                           ;drv_mrf_miwi_89xa.c: 1395: }
 14777                           ;drv_mrf_miwi_89xa.c: 1398: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 14778  000E94  503A               	movf	high_isr@BankIndex,w,c
 14779  000E96  0D34               	mullw	52
 14780  000E98  0E51               	movlw	low (_RxPacket+1)
 14781  000E9A  24F3               	addwf	prodl,w,c
 14782  000E9C  6ED9               	movwf	fsr2l,c
 14783  000E9E  0E01               	movlw	high (_RxPacket+1)
 14784  000EA0  20F4               	addwfc	prodh,w,c
 14785  000EA2  6EDA               	movwf	fsr2h,c
 14786  000EA4  0101               	movlb	1	; () banked
 14787  000EA6  AADF               	btfss	indf2,5,c
 14788  000EA8  D034               	goto	i2l209
 14789                           
 14790                           ; BSR set to: 1
 14791                           ;drv_mrf_miwi_89xa.c: 1399: {
 14792                           ;drv_mrf_miwi_89xa.c: 1401: for(i = 0; i < 2; i++)
 14793  000EAA  6A3B               	clrf	high_isr@i,c
 14794  000EAC                     i2l6594:
 14795                           
 14796                           ;drv_mrf_miwi_89xa.c: 1402: {
 14797                           ;drv_mrf_miwi_89xa.c: 1403: ackPacket[i] = MACTxBuffer[i];
 14798  000EAC  0E00               	movlw	low _MACTxBuffer
 14799  000EAE  243B               	addwf	high_isr@i,w,c
 14800  000EB0  6ED9               	movwf	fsr2l,c
 14801  000EB2  6ADA               	clrf	fsr2h,c
 14802  000EB4  0E01               	movlw	high _MACTxBuffer
 14803  000EB6  22DA               	addwfc	fsr2h,f,c
 14804  000EB8  503B               	movf	high_isr@i,w,c
 14805  000EBA  0F32               	addlw	low high_isr@ackPacket
 14806  000EBC  6EE1               	movwf	fsr1l,c
 14807  000EBE  6AE2               	clrf	fsr1h,c
 14808  000EC0  CFDF FFE7          	movff	indf2,indf1
 14809  000EC4  2A3B               	incf	high_isr@i,f,c
 14810  000EC6  0E01               	movlw	1
 14811  000EC8  643B               	cpfsgt	high_isr@i,c
 14812  000ECA  D7F0               	goto	i2l6594
 14813                           
 14814                           ;drv_mrf_miwi_89xa.c: 1404: }
 14815                           ;drv_mrf_miwi_89xa.c: 1405: MACTxBuffer[0] = 0x02 | 0x04;
 14816  000ECC  0E06               	movlw	6
 14817  000ECE  0101               	movlb	1	; () banked
 14818  000ED0  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 14819                           
 14820                           ; BSR set to: 1
 14821                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 14822  000ED2  503A               	movf	high_isr@BankIndex,w,c
 14823  000ED4  0D34               	mullw	52
 14824  000ED6  0E52               	movlw	low (_RxPacket+2)
 14825  000ED8  24F3               	addwf	prodl,w,c
 14826  000EDA  6ED9               	movwf	fsr2l,c
 14827  000EDC  0E01               	movlw	high (_RxPacket+2)
 14828  000EDE  20F4               	addwfc	prodh,w,c
 14829  000EE0  6EDA               	movwf	fsr2h,c
 14830  000EE2  50DF               	movf	indf2,w,c
 14831  000EE4  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 14832                           
 14833                           ; BSR set to: 1
 14834                           ;drv_mrf_miwi_89xa.c: 1407: INTCON3bits.INT1IF = 0;
 14835  000EE6  90F0               	bcf	intcon3,0,c	;volatile
 14836                           
 14837                           ; BSR set to: 1
 14838                           ;drv_mrf_miwi_89xa.c: 1408: TxPacket(2, 0);
 14839  000EE8  6A11               	clrf	i2TxPacket@CCA,c
 14840  000EEA  0E02               	movlw	2
 14841  000EEC  ECD4  F00C         	call	i2_TxPacket
 14842                           
 14843                           ;drv_mrf_miwi_89xa.c: 1411: for(i = 0; i < 2; i++)
 14844  000EF0  6A3B               	clrf	high_isr@i,c
 14845  000EF2                     i2l6614:
 14846                           
 14847                           ;drv_mrf_miwi_89xa.c: 1412: {
 14848                           ;drv_mrf_miwi_89xa.c: 1413: MACTxBuffer[i] = ackPacket[i];
 14849  000EF2  503B               	movf	high_isr@i,w,c
 14850  000EF4  0F32               	addlw	low high_isr@ackPacket
 14851  000EF6  6ED9               	movwf	fsr2l,c
 14852  000EF8  6ADA               	clrf	fsr2h,c
 14853  000EFA  0E00               	movlw	low _MACTxBuffer
 14854  000EFC  243B               	addwf	high_isr@i,w,c
 14855  000EFE  6EE1               	movwf	fsr1l,c
 14856  000F00  6AE2               	clrf	fsr1h,c
 14857  000F02  0E01               	movlw	high _MACTxBuffer
 14858  000F04  22E2               	addwfc	fsr1h,f,c
 14859  000F06  CFDF FFE7          	movff	indf2,indf1
 14860  000F0A  2A3B               	incf	high_isr@i,f,c
 14861  000F0C  0E01               	movlw	1
 14862  000F0E  643B               	cpfsgt	high_isr@i,c
 14863  000F10  D7F0               	goto	i2l6614
 14864  000F12                     i2l209:
 14865                           
 14866                           ;drv_mrf_miwi_89xa.c: 1414: }
 14867                           ;drv_mrf_miwi_89xa.c: 1415: }
 14868                           ;drv_mrf_miwi_89xa.c: 1419: for(i = 0; i < 5; i++)
 14869  000F12  6A3B               	clrf	high_isr@i,c
 14870  000F14                     i2l6624:
 14871                           
 14872                           ;drv_mrf_miwi_89xa.c: 1420: {
 14873                           ;drv_mrf_miwi_89xa.c: 1421: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 14874  000F14  503B               	movf	high_isr@i,w,c
 14875  000F16  0D06               	mullw	6
 14876  000F18  0E32               	movlw	low _AckInfo
 14877  000F1A  24F3               	addwf	prodl,w,c
 14878  000F1C  6ED9               	movwf	fsr2l,c
 14879  000F1E  0E01               	movlw	high _AckInfo
 14880  000F20  20F4               	addwfc	prodh,w,c
 14881  000F22  6EDA               	movwf	fsr2h,c
 14882  000F24  50DF               	movf	indf2,w,c
 14883  000F26  E026               	bz	i2l6630
 14884  000F28  503A               	movf	high_isr@BankIndex,w,c
 14885  000F2A  0D34               	mullw	52
 14886  000F2C  0E52               	movlw	low (_RxPacket+2)
 14887  000F2E  24F3               	addwf	prodl,w,c
 14888  000F30  6ED9               	movwf	fsr2l,c
 14889  000F32  0E01               	movlw	high (_RxPacket+2)
 14890  000F34  20F4               	addwfc	prodh,w,c
 14891  000F36  6EDA               	movwf	fsr2h,c
 14892  000F38  503B               	movf	high_isr@i,w,c
 14893  000F3A  0D06               	mullw	6
 14894  000F3C  0E33               	movlw	low (_AckInfo+1)
 14895  000F3E  24F3               	addwf	prodl,w,c
 14896  000F40  6EE1               	movwf	fsr1l,c
 14897  000F42  0E01               	movlw	high (_AckInfo+1)
 14898  000F44  20F4               	addwfc	prodh,w,c
 14899  000F46  6EE2               	movwf	fsr1h,c
 14900  000F48  50DE               	movf	postinc2,w,c
 14901  000F4A  18E6               	xorwf	postinc1,w,c
 14902  000F4C  E113               	bnz	i2l6630
 14903                           
 14904                           ;drv_mrf_miwi_89xa.c: 1422: {
 14905                           ;drv_mrf_miwi_89xa.c: 1423: AckInfo[i].startTick = MiWi_TickGet();
 14906  000F4E  ECD2  F012         	call	i2_MiWi_TickGet	;wreg free
 14907  000F52  503B               	movf	high_isr@i,w,c
 14908  000F54  0D06               	mullw	6
 14909  000F56  0E34               	movlw	low (_AckInfo+2)
 14910  000F58  24F3               	addwf	prodl,w,c
 14911  000F5A  6ED9               	movwf	fsr2l,c
 14912  000F5C  0E01               	movlw	high (_AckInfo+2)
 14913  000F5E  20F4               	addwfc	prodh,w,c
 14914  000F60  6EDA               	movwf	fsr2h,c
 14915  000F62  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 14916  000F66  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 14917  000F6A  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 14918  000F6E  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 14919                           
 14920                           ;drv_mrf_miwi_89xa.c: 1424: break;
 14921  000F72  D012               	goto	i2l6640
 14922  000F74                     i2l6630:
 14923                           
 14924                           ;drv_mrf_miwi_89xa.c: 1425: }
 14925                           ;drv_mrf_miwi_89xa.c: 1426: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 14926  000F74  2838               	incf	high_isr@ackInfoIndex,w,c
 14927  000F76  E10C               	bnz	i2l6636
 14928  000F78  503B               	movf	high_isr@i,w,c
 14929  000F7A  0D06               	mullw	6
 14930  000F7C  0E32               	movlw	low _AckInfo
 14931  000F7E  24F3               	addwf	prodl,w,c
 14932  000F80  6ED9               	movwf	fsr2l,c
 14933  000F82  0E01               	movlw	high _AckInfo
 14934  000F84  20F4               	addwfc	prodh,w,c
 14935  000F86  6EDA               	movwf	fsr2h,c
 14936  000F88  50DF               	movf	indf2,w,c
 14937  000F8A  E102               	bnz	i2l6636
 14938                           
 14939                           ;drv_mrf_miwi_89xa.c: 1427: {
 14940                           ;drv_mrf_miwi_89xa.c: 1428: ackInfoIndex = i;
 14941  000F8C  C03B  F038         	movff	high_isr@i,high_isr@ackInfoIndex
 14942  000F90                     i2l6636:
 14943  000F90  2A3B               	incf	high_isr@i,f,c
 14944  000F92  0E04               	movlw	4
 14945  000F94  643B               	cpfsgt	high_isr@i,c
 14946  000F96  D7BE               	goto	i2l6624
 14947  000F98                     i2l6640:
 14948                           
 14949                           ;drv_mrf_miwi_89xa.c: 1429: }
 14950                           ;drv_mrf_miwi_89xa.c: 1430: }
 14951                           ;drv_mrf_miwi_89xa.c: 1432: if( i >= 5 )
 14952  000F98  0E04               	movlw	4
 14953  000F9A  643B               	cpfsgt	high_isr@i,c
 14954  000F9C  D042               	goto	i2l6656
 14955                           
 14956                           ;drv_mrf_miwi_89xa.c: 1433: {
 14957                           ;drv_mrf_miwi_89xa.c: 1434: if( ackInfoIndex < 5 )
 14958  000F9E  0E05               	movlw	5
 14959  000FA0  6038               	cpfslt	high_isr@ackInfoIndex,c
 14960  000FA2  D02E               	goto	i2l6650
 14961                           
 14962                           ;drv_mrf_miwi_89xa.c: 1435: {
 14963                           ;drv_mrf_miwi_89xa.c: 1436: AckInfo[ackInfoIndex].Valid = 1;
 14964  000FA4  5038               	movf	high_isr@ackInfoIndex,w,c
 14965  000FA6  0D06               	mullw	6
 14966  000FA8  0E32               	movlw	low _AckInfo
 14967  000FAA  24F3               	addwf	prodl,w,c
 14968  000FAC  6ED9               	movwf	fsr2l,c
 14969  000FAE  0E01               	movlw	high _AckInfo
 14970  000FB0  20F4               	addwfc	prodh,w,c
 14971  000FB2  6EDA               	movwf	fsr2h,c
 14972  000FB4  0E01               	movlw	1
 14973  000FB6  6EDF               	movwf	indf2,c
 14974                           
 14975                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 14976  000FB8  503A               	movf	high_isr@BankIndex,w,c
 14977  000FBA  0D34               	mullw	52
 14978  000FBC  0E52               	movlw	low (_RxPacket+2)
 14979  000FBE  24F3               	addwf	prodl,w,c
 14980  000FC0  6ED9               	movwf	fsr2l,c
 14981  000FC2  0E01               	movlw	high (_RxPacket+2)
 14982  000FC4  20F4               	addwfc	prodh,w,c
 14983  000FC6  6EDA               	movwf	fsr2h,c
 14984  000FC8  5038               	movf	high_isr@ackInfoIndex,w,c
 14985  000FCA  0D06               	mullw	6
 14986  000FCC  0E33               	movlw	low (_AckInfo+1)
 14987  000FCE  24F3               	addwf	prodl,w,c
 14988  000FD0  6EE1               	movwf	fsr1l,c
 14989  000FD2  0E01               	movlw	high (_AckInfo+1)
 14990  000FD4  20F4               	addwfc	prodh,w,c
 14991  000FD6  6EE2               	movwf	fsr1h,c
 14992  000FD8  CFDF FFE7          	movff	indf2,indf1
 14993                           
 14994                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 14995  000FDC  ECD2  F012         	call	i2_MiWi_TickGet	;wreg free
 14996  000FE0  5038               	movf	high_isr@ackInfoIndex,w,c
 14997  000FE2  0D06               	mullw	6
 14998  000FE4  0E34               	movlw	low (_AckInfo+2)
 14999  000FE6  24F3               	addwf	prodl,w,c
 15000  000FE8  6ED9               	movwf	fsr2l,c
 15001  000FEA  0E01               	movlw	high (_AckInfo+2)
 15002  000FEC  20F4               	addwfc	prodh,w,c
 15003  000FEE  6EDA               	movwf	fsr2h,c
 15004  000FF0  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 15005  000FF4  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 15006  000FF8  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 15007  000FFC  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 15008  001000                     i2l6650:
 15009                           
 15010                           ;drv_mrf_miwi_89xa.c: 1439: }
 15011                           ;drv_mrf_miwi_89xa.c: 1442: RxPacket[BankIndex].flags.bits.Valid = 1;
 15012  001000  503A               	movf	high_isr@BankIndex,w,c
 15013  001002  0D34               	mullw	52
 15014  001004  0E50               	movlw	low _RxPacket
 15015  001006  24F3               	addwf	prodl,w,c
 15016  001008  6ED9               	movwf	fsr2l,c
 15017  00100A  0E01               	movlw	high _RxPacket
 15018  00100C  20F4               	addwfc	prodh,w,c
 15019  00100E  6EDA               	movwf	fsr2h,c
 15020  001010  0101               	movlb	1	; () banked
 15021  001012  80DF               	bsf	indf2,0,c
 15022  001014  D006               	goto	i2l6656
 15023  001016                     i2l6652:
 15024  001016  502F               	movf	high_isr@counter,w,c
 15025  001018  1030               	iorwf	high_isr@counter+1,w,c
 15026  00101A  E003               	bz	i2l6656
 15027  00101C  D6A5               	goto	i2l6534
 15028  00101E                     i2l6654:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;drv_mrf_miwi_89xa.c: 1457: else
 15032                           ;drv_mrf_miwi_89xa.c: 1458: {
 15033                           ;drv_mrf_miwi_89xa.c: 1460: IRQ1_Received = 1;
 15034  00101E  0E01               	movlw	1
 15035  001020  6FD1               	movwf	_IRQ1_Received& (0+255),b	;volatile
 15036  001022                     i2l6656:
 15037                           
 15038                           ;drv_mrf_miwi_89xa.c: 1464: INTCON3bits.INT1IF = 0;
 15039  001022  90F0               	bcf	intcon3,0,c	;volatile
 15040                           
 15041                           ;drv_mrf_miwi_89xa.c: 1466: __nop();
 15042  001024  F000               	nop	
 15043  001026                     i2l6660:
 15044                           
 15045                           ;drv_mrf_miwi_89xa.c: 1467: }
 15046                           ;drv_mrf_miwi_89xa.c: 1471: {
 15047                           ;drv_mrf_miwi_89xa.c: 1472: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 15048  001026  B2F2               	btfsc	intcon,1,c	;volatile
 15049  001028  A8F2               	btfss	intcon,4,c	;volatile
 15050  00102A  D00C               	goto	i2l6670
 15051                           
 15052                           ;drv_mrf_miwi_89xa.c: 1473: {
 15053                           ;drv_mrf_miwi_89xa.c: 1474: INTCONbits.INT0IF = 0;
 15054  00102C  92F2               	bcf	intcon,1,c	;volatile
 15055                           
 15056                           ;drv_mrf_miwi_89xa.c: 1477: if(RF_Mode == 0x60)
 15057  00102E  0E60               	movlw	96
 15058  001030  0100               	movlb	0	; () banked
 15059  001032  19D8               	xorwf	_RF_Mode& (0+255),w,b
 15060  001034  E107               	bnz	i2l6670
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;drv_mrf_miwi_89xa.c: 1478: {
 15064                           ;drv_mrf_miwi_89xa.c: 1479: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 15065  001036  0E28               	movlw	40
 15066  001038  EC86  F013         	call	i2_RegisterRead
 15067  00103C  6E25               	movwf	??_high_isr& (0+255),c
 15068  00103E  90D8               	bcf	status,0,c
 15069  001040  3025               	rrcf	??_high_isr,w,c
 15070  001042  6E44               	movwf	_RSSIVal,c
 15071  001044                     i2l6670:
 15072                           
 15073                           ;drv_mrf_miwi_89xa.c: 1480: }
 15074                           ;drv_mrf_miwi_89xa.c: 1482: }
 15075                           ;drv_mrf_miwi_89xa.c: 1483: }
 15076                           ;drv_mrf_miwi_89xa.c: 1487: if(PIR1bits.TMR1IF)
 15077  001044  B09E               	btfsc	3998,0,c	;volatile
 15078                           
 15079                           ;drv_mrf_miwi_89xa.c: 1488: {
 15080                           ;drv_mrf_miwi_89xa.c: 1489: if(PIE1bits.TMR1IE)
 15081  001046  A09D               	btfss	3997,0,c	;volatile
 15082  001048  D006               	goto	i2l6682
 15083                           
 15084                           ;drv_mrf_miwi_89xa.c: 1490: {
 15085                           ;drv_mrf_miwi_89xa.c: 1492: PIR1bits.TMR1IF = 0;
 15086  00104A  909E               	bcf	3998,0,c	;volatile
 15087                           
 15088                           ;drv_mrf_miwi_89xa.c: 1493: timerExtension1++;
 15089  00104C  2A46               	incf	_timerExtension1,f,c	;volatile
 15090                           
 15091                           ;drv_mrf_miwi_89xa.c: 1494: if(timerExtension1 == 0)
 15092  00104E  5046               	movf	_timerExtension1,w,c	;volatile
 15093  001050  E102               	bnz	i2l6682
 15094                           
 15095                           ;drv_mrf_miwi_89xa.c: 1495: {
 15096                           ;drv_mrf_miwi_89xa.c: 1496: timerExtension2++;
 15097  001052  0100               	movlb	0	; () banked
 15098  001054  2BE3               	incf	_timerExtension2& (0+255),f,b	;volatile
 15099  001056                     i2l6682:
 15100                           
 15101                           ;drv_mrf_miwi_89xa.c: 1497: }
 15102                           ;drv_mrf_miwi_89xa.c: 1498: }
 15103                           ;drv_mrf_miwi_89xa.c: 1499: }
 15104                           ;drv_mrf_miwi_89xa.c: 1501: UserInterruptHandler();
 15105  001056  EC57  F016         	call	_UserInterruptHandler	;wreg free
 15106  00105A  C02E  FFF4         	movff	??_high_isr+9,prodh
 15107  00105E  C02D  FFF3         	movff	??_high_isr+8,prodl
 15108  001062  C02C  FFDA         	movff	??_high_isr+7,fsr2h
 15109  001066  C02B  FFD9         	movff	??_high_isr+6,fsr2l
 15110  00106A  C02A  FFE2         	movff	??_high_isr+5,fsr1h
 15111  00106E  C029  FFE1         	movff	??_high_isr+4,fsr1l
 15112  001072  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15113  001074  0011               	retfie		f
 15114  001076                     __end_of_high_isr:
 15115                           	opt stack 0
 15116                           tblptru	equ	0xFF8
 15117                           tblptrh	equ	0xFF7
 15118                           tblptrl	equ	0xFF6
 15119                           tablat	equ	0xFF5
 15120                           prodh	equ	0xFF4
 15121                           prodl	equ	0xFF3
 15122                           intcon	equ	0xFF2
 15123                           intcon2	equ	0xFF1
 15124                           intcon3	equ	0xFF0
 15125                           postinc0	equ	0xFEE
 15126                           wreg	equ	0xFE8
 15127                           indf1	equ	0xFE7
 15128                           postinc1	equ	0xFE6
 15129                           postdec1	equ	0xFE5
 15130                           fsr1h	equ	0xFE2
 15131                           fsr1l	equ	0xFE1
 15132                           bsr	equ	0xFE0
 15133                           indf2	equ	0xFDF
 15134                           postinc2	equ	0xFDE
 15135                           postdec2	equ	0xFDD
 15136                           fsr2h	equ	0xFDA
 15137                           fsr2l	equ	0xFD9
 15138                           status	equ	0xFD8
 15139                           
 15140 ;; *************** function i2_TxPacket *****************
 15141 ;; Defined at:
 15142 ;;		line 288 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15143 ;; Parameters:    Size  Location     Type
 15144 ;;  TxPacketLen     1    wreg     unsigned char 
 15145 ;;  CCA             1   16[COMRAM] unsigned char 
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;  TxPacketLen     1   21[COMRAM] unsigned char 
 15148 ;;  TxPacket        4   27[COMRAM] struct _MIWI_TICK
 15149 ;;  TxPacket        4   23[COMRAM] struct _MIWI_TICK
 15150 ;;  TxPacket        1   35[COMRAM] unsigned char 
 15151 ;;  TxPacket        1   34[COMRAM] unsigned char 
 15152 ;;  TxPacket        1   33[COMRAM] unsigned char 
 15153 ;;  TxPacket        1   32[COMRAM] unsigned char 
 15154 ;;  TxPacket        1   31[COMRAM] unsigned char 
 15155 ;;  TxPacket        1   22[COMRAM] unsigned char 
 15156 ;; Return value:  Size  Location     Type
 15157 ;;                  1    wreg      unsigned char 
 15158 ;; Registers used:
 15159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15160 ;; Tracked objects:
 15161 ;;		On entry : F/1
 15162 ;;		On exit  : 0/0
 15163 ;;		Unchanged: 0/0
 15164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15166 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15168 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15169 ;;Total ram usage:       20 bytes
 15170 ;; Hardware stack levels used:    1
 15171 ;; Hardware stack levels required when called:    3
 15172 ;; This function calls:
 15173 ;;		i2_DELAY_10us
 15174 ;;		i2_MiWi_TickGet
 15175 ;;		i2_RegisterRead
 15176 ;;		i2_RegisterSet
 15177 ;;		i2_SetRFMode
 15178 ;;		i2_WriteFIFO
 15179 ;; This function is called by:
 15180 ;;		_high_isr
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text71
 15185  0019A8                     __ptext71:
 15186                           	opt stack 0
 15187  0019A8                     i2_TxPacket:
 15188                           	opt stack 11
 15189                           
 15190                           ;incstack = 0
 15191                           ;i2TxPacket@TxPacketLen stored from wreg
 15192  0019A8  6E16               	movwf	i2TxPacket@TxPacketLen,c
 15193                           
 15194                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 15195                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 15196                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 15197                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 15198                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 15199                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 15200  0019AA  0E03               	movlw	3
 15201  0019AC  6E21               	movwf	i2TxPacket@reTry,c
 15202                           
 15203                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 15204  0019AE  D085               	goto	i2l6472
 15205  0019B0                     i2l84:
 15206                           
 15207                           ;drv_mrf_miwi_89xa.c: 305: {
 15208                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 15209                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 15210  0019B0  6A22               	clrf	i2TxPacket@allowedTxFailure,c
 15211  0019B2                     i2l85:
 15212                           
 15213                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 15214  0019B2  0100               	movlb	0	; () banked
 15215  0019B4  6BE0               	clrf	_hasAck& (0+255),b	;volatile
 15216                           
 15217                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 15218  0019B6  6A20               	clrf	i2TxPacket@CCARetries,c
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 15222  0019B8  5011               	movf	i2TxPacket@CCA,w,c
 15223  0019BA  E018               	bz	i2l86
 15224  0019BC                     i2l6412:
 15225                           
 15226                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 15227  0019BC  0E28               	movlw	40
 15228  0019BE  EC86  F013         	call	i2_RegisterRead
 15229  0019C2  6E23               	movwf	i2TxPacket@rssival,c
 15230                           
 15231                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 15232  0019C4  90D8               	bcf	status,0,c
 15233  0019C6  3223               	rrcf	i2TxPacket@rssival,f,c
 15234                           
 15235                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 15236  0019C8  0E41               	movlw	65
 15237  0019CA  6423               	cpfsgt	i2TxPacket@rssival,c
 15238  0019CC  D00F               	goto	i2l86
 15239                           
 15240                           ;drv_mrf_miwi_89xa.c: 326: {
 15241                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 15242  0019CE  2A20               	incf	i2TxPacket@CCARetries,f,c
 15243  0019D0  0420               	decf	i2TxPacket@CCARetries,w,c
 15244  0019D2  6E12               	movwf	??i2_TxPacket& (0+255),c
 15245  0019D4  0E04               	movlw	4
 15246  0019D6  6412               	cpfsgt	??i2_TxPacket,c
 15247  0019D8  D001               	goto	i2l6422
 15248  0019DA  0C04               	retlw	4
 15249  0019DC                     i2l6422:
 15250                           
 15251                           ;drv_mrf_miwi_89xa.c: 331: }
 15252                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 15253  0019DC  0E01               	movlw	1
 15254  0019DE  6E01               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 15255  0019E0  6A02               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 15256  0019E2  6A03               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 15257  0019E4  6A04               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 15258  0019E6  ECA6  F00E         	call	i2_DELAY_10us	;wreg free
 15259                           
 15260                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 15261  0019EA  D7E8               	goto	i2l6412
 15262  0019EC                     i2l86:
 15263                           
 15264                           ;drv_mrf_miwi_89xa.c: 334: }
 15265                           ;drv_mrf_miwi_89xa.c: 335: }
 15266                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
 15267  0019EC  98F2               	bcf	intcon,4,c	;volatile
 15268                           
 15269                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
 15270  0019EE  96F0               	bcf	intcon3,3,c	;volatile
 15271                           
 15272                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 15273  0019F0  0E20               	movlw	32
 15274  0019F2  EC04  F012         	call	i2_SetRFMode
 15275                           
 15276                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 15277  0019F6  0E1A               	movlw	26
 15278  0019F8  6E03               	movwf	i2RegisterSet@setting+1,c
 15279  0019FA  0EC9               	movlw	201
 15280  0019FC  6E02               	movwf	i2RegisterSet@setting,c
 15281  0019FE  EC21  F014         	call	i2_RegisterSet	;wreg free
 15282                           
 15283                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 15284  001A02  5016               	movf	i2TxPacket@TxPacketLen,w,c
 15285  001A04  EC3E  F014         	call	i2_WriteFIFO
 15286                           
 15287                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 15288  001A08  6A24               	clrf	i2TxPacket@i,c
 15289  001A0A  D00A               	goto	i2l6436
 15290  001A0C                     i2l6432:
 15291                           
 15292                           ;drv_mrf_miwi_89xa.c: 347: {
 15293                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 15294  001A0C  0E00               	movlw	low _MACTxBuffer
 15295  001A0E  2424               	addwf	i2TxPacket@i,w,c
 15296  001A10  6ED9               	movwf	fsr2l,c
 15297  001A12  6ADA               	clrf	fsr2h,c
 15298  001A14  0E01               	movlw	high _MACTxBuffer
 15299  001A16  22DA               	addwfc	fsr2h,f,c
 15300  001A18  50DF               	movf	indf2,w,c
 15301  001A1A  EC3E  F014         	call	i2_WriteFIFO
 15302  001A1E  2A24               	incf	i2TxPacket@i,f,c
 15303  001A20                     i2l6436:
 15304  001A20  5016               	movf	i2TxPacket@TxPacketLen,w,c
 15305  001A22  5C24               	subwf	i2TxPacket@i,w,c
 15306  001A24  E3F3               	bnc	i2l6432
 15307                           
 15308                           ;drv_mrf_miwi_89xa.c: 349: }
 15309                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 15310  001A26  0E80               	movlw	128
 15311  001A28  EC04  F012         	call	i2_SetRFMode
 15312                           
 15313                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
 15314  001A2C  88F2               	bsf	intcon,4,c	;volatile
 15315                           
 15316                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
 15317  001A2E  86F0               	bsf	intcon3,3,c	;volatile
 15318  001A30                     i2l6444:
 15319  001A30  0100               	movlb	0	; () banked
 15320  001A32  51D1               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 15321  001A34  E102               	bnz	i2l98
 15322                           
 15323                           ; BSR set to: 0
 15324  001A36  A0F0               	btfss	intcon3,0,c	;volatile
 15325  001A38  D7FB               	goto	i2l6444
 15326  001A3A                     i2l98:
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;drv_mrf_miwi_89xa.c: 358: };
 15330                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 15331  001A3A  6BD1               	clrf	_IRQ1_Received& (0+255),b	;volatile
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 15335  001A3C  0E20               	movlw	32
 15336  001A3E  EC04  F012         	call	i2_SetRFMode
 15337                           
 15338                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 15339  001A42  0E60               	movlw	96
 15340  001A44  EC04  F012         	call	i2_SetRFMode
 15341                           
 15342                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 15343  001A48  0101               	movlb	1	; () banked
 15344  001A4A  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 15345  001A4C  D00E               	goto	i2l6458
 15346                           
 15347                           ; BSR set to: 1
 15348                           ;drv_mrf_miwi_89xa.c: 368: {
 15349                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 15350  001A4E  C101  F045         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 15351                           
 15352                           ; BSR set to: 1
 15353                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 15354  001A52  ECD2  F012         	call	i2_MiWi_TickGet	;wreg free
 15355  001A56  C001  F018         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 15356  001A5A  C002  F019         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 15357  001A5E  C003  F01A         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 15358  001A62  C004  F01B         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 15359  001A66                     i2l6456:
 15360                           
 15361                           ; BSR set to: 0
 15362                           ;drv_mrf_miwi_89xa.c: 372: {
 15363                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 15364  001A66  51E0               	movf	_hasAck& (0+255),w,b	;volatile
 15365  001A68  E003               	bz	i2l6460
 15366  001A6A                     i2l6458:
 15367                           
 15368                           ;drv_mrf_miwi_89xa.c: 374: {
 15369                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 15370  001A6A  0E01               	movlw	1
 15371  001A6C  6E17               	movwf	i2TxPacket@status,c
 15372                           
 15373                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 15374  001A6E  0C01               	retlw	1
 15375  001A70                     i2l6460:
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;drv_mrf_miwi_89xa.c: 377: }
 15379                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 15380  001A70  ECD2  F012         	call	i2_MiWi_TickGet	;wreg free
 15381  001A74  C001  F01C         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 15382  001A78  C002  F01D         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 15383  001A7C  C003  F01E         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 15384  001A80  C004  F01F         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 15388  001A84  5018               	movf	i2TxPacket@t1,w,c
 15389  001A86  5C1C               	subwf	i2TxPacket@t2,w,c
 15390  001A88  6E12               	movwf	??i2_TxPacket& (0+255),c
 15391  001A8A  5019               	movf	i2TxPacket@t1+1,w,c
 15392  001A8C  581D               	subwfb	i2TxPacket@t2+1,w,c
 15393  001A8E  6E13               	movwf	(??i2_TxPacket+1)& (0+255),c
 15394  001A90  501A               	movf	i2TxPacket@t1+2,w,c
 15395  001A92  581E               	subwfb	i2TxPacket@t2+2,w,c
 15396  001A94  6E14               	movwf	(??i2_TxPacket+2)& (0+255),c
 15397  001A96  501B               	movf	i2TxPacket@t1+3,w,c
 15398  001A98  581F               	subwfb	i2TxPacket@t2+3,w,c
 15399  001A9A  6E15               	movwf	(??i2_TxPacket+3)& (0+255),c
 15400  001A9C  5015               	movf	??i2_TxPacket+3,w,c
 15401  001A9E  1014               	iorwf	??i2_TxPacket+2,w,c
 15402  001AA0  E105               	bnz	i2u562_40
 15403  001AA2  0EA9               	movlw	169
 15404  001AA4  5C12               	subwf	??i2_TxPacket,w,c
 15405  001AA6  0E61               	movlw	97
 15406  001AA8  5813               	subwfb	??i2_TxPacket+1,w,c
 15407  001AAA  E3DD               	bnc	i2l6456
 15408  001AAC                     i2u562_40:
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;drv_mrf_miwi_89xa.c: 382: }
 15412                           ;drv_mrf_miwi_89xa.c: 383: }
 15413                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 15414  001AAC  2A22               	incf	i2TxPacket@allowedTxFailure,f,c
 15415  001AAE  0422               	decf	i2TxPacket@allowedTxFailure,w,c
 15416  001AB0  6E12               	movwf	??i2_TxPacket& (0+255),c
 15417  001AB2  0E04               	movlw	4
 15418  001AB4  6012               	cpfslt	??i2_TxPacket,c
 15419  001AB6  D001               	goto	i2l6472
 15420  001AB8  D77C               	goto	i2l85
 15421  001ABA                     i2l6472:
 15422  001ABA  0621               	decf	i2TxPacket@reTry,f,c
 15423  001ABC  2821               	incf	i2TxPacket@reTry,w,c
 15424  001ABE  E001 D777          	bnz	i2l84
 15425                           
 15426                           ;drv_mrf_miwi_89xa.c: 394: }
 15427                           ;drv_mrf_miwi_89xa.c: 395: }
 15428                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 15429  001AC2  6A17               	clrf	i2TxPacket@status,c
 15430  001AC4  0012               	return		;funcret
 15431  001AC6                     __end_ofi2_TxPacket:
 15432                           	opt stack 0
 15433                           tblptru	equ	0xFF8
 15434                           tblptrh	equ	0xFF7
 15435                           tblptrl	equ	0xFF6
 15436                           tablat	equ	0xFF5
 15437                           prodh	equ	0xFF4
 15438                           prodl	equ	0xFF3
 15439                           intcon	equ	0xFF2
 15440                           intcon2	equ	0xFF1
 15441                           intcon3	equ	0xFF0
 15442                           postinc0	equ	0xFEE
 15443                           wreg	equ	0xFE8
 15444                           indf1	equ	0xFE7
 15445                           postinc1	equ	0xFE6
 15446                           postdec1	equ	0xFE5
 15447                           fsr1h	equ	0xFE2
 15448                           fsr1l	equ	0xFE1
 15449                           bsr	equ	0xFE0
 15450                           indf2	equ	0xFDF
 15451                           postinc2	equ	0xFDE
 15452                           postdec2	equ	0xFDD
 15453                           fsr2h	equ	0xFDA
 15454                           fsr2l	equ	0xFD9
 15455                           status	equ	0xFD8
 15456                           
 15457 ;; *************** function i2_WriteFIFO *****************
 15458 ;; Defined at:
 15459 ;;		line 244 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15460 ;; Parameters:    Size  Location     Type
 15461 ;;  Data            1    wreg     unsigned char 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;  Data            1    1[COMRAM] unsigned char 
 15464 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 15465 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  1    wreg      void 
 15468 ;; Registers used:
 15469 ;;		wreg, status,2, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : 0/0
 15472 ;;		On exit  : 0/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15476 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;Total ram usage:        3 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    1
 15482 ;; This function calls:
 15483 ;;		i2_SPIPut
 15484 ;; This function is called by:
 15485 ;;		i2_TxPacket
 15486 ;; This function uses a non-reentrant model
 15487 ;;
 15488                           
 15489                           	psect	text72
 15490  00287C                     __ptext72:
 15491                           	opt stack 0
 15492  00287C                     i2_WriteFIFO:
 15493                           	opt stack 12
 15494                           
 15495                           ;incstack = 0
 15496                           ;i2WriteFIFO@Data stored from wreg
 15497  00287C  6E02               	movwf	i2WriteFIFO@Data,c
 15498                           
 15499                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 15500  00287E  0E00               	movlw	0
 15501  002880  B6F0               	btfsc	intcon3,3,c	;volatile
 15502  002882  0E01               	movlw	1
 15503  002884  6E03               	movwf	i2WriteFIFO@IRQ1select,c
 15504                           
 15505                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 15506  002886  0E00               	movlw	0
 15507  002888  B8F2               	btfsc	intcon,4,c	;volatile
 15508  00288A  0E01               	movlw	1
 15509  00288C  6E04               	movwf	i2WriteFIFO@IRQ0select,c
 15510                           
 15511                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 15512  00288E  98F2               	bcf	intcon,4,c	;volatile
 15513                           
 15514                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 15515  002890  96F0               	bcf	intcon3,3,c	;volatile
 15516                           
 15517                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
 15518  002892  9A89               	bcf	3977,5,c	;volatile
 15519                           
 15520                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 15521  002894  5002               	movf	i2WriteFIFO@Data,w,c
 15522  002896  ECD4  F015         	call	i2_SPIPut
 15523                           
 15524                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
 15525  00289A  8A89               	bsf	3977,5,c	;volatile
 15526                           
 15527                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 15528  00289C  B003               	btfsc	i2WriteFIFO@IRQ1select,0,c
 15529  00289E  D002               	bra	i2u539_45
 15530  0028A0  96F0               	bcf	intcon3,3,c	;volatile
 15531  0028A2  D001               	bra	i2u539_46
 15532  0028A4                     i2u539_45:
 15533  0028A4  86F0               	bsf	intcon3,3,c	;volatile
 15534  0028A6                     i2u539_46:
 15535                           
 15536                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 15537  0028A6  B004               	btfsc	i2WriteFIFO@IRQ0select,0,c
 15538  0028A8  D002               	bra	i2u540_45
 15539  0028AA  98F2               	bcf	intcon,4,c	;volatile
 15540  0028AC  D001               	bra	i2u540_46
 15541  0028AE                     i2u540_45:
 15542  0028AE  88F2               	bsf	intcon,4,c	;volatile
 15543  0028B0                     i2u540_46:
 15544  0028B0  0012               	return		;funcret
 15545  0028B2                     __end_ofi2_WriteFIFO:
 15546                           	opt stack 0
 15547                           tblptru	equ	0xFF8
 15548                           tblptrh	equ	0xFF7
 15549                           tblptrl	equ	0xFF6
 15550                           tablat	equ	0xFF5
 15551                           prodh	equ	0xFF4
 15552                           prodl	equ	0xFF3
 15553                           intcon	equ	0xFF2
 15554                           intcon2	equ	0xFF1
 15555                           intcon3	equ	0xFF0
 15556                           postinc0	equ	0xFEE
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           postinc1	equ	0xFE6
 15560                           postdec1	equ	0xFE5
 15561                           fsr1h	equ	0xFE2
 15562                           fsr1l	equ	0xFE1
 15563                           bsr	equ	0xFE0
 15564                           indf2	equ	0xFDF
 15565                           postinc2	equ	0xFDE
 15566                           postdec2	equ	0xFDD
 15567                           fsr2h	equ	0xFDA
 15568                           fsr2l	equ	0xFD9
 15569                           status	equ	0xFD8
 15570                           
 15571 ;; *************** function i2_SetRFMode *****************
 15572 ;; Defined at:
 15573 ;;		line 667 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;  mode            1    wreg     unsigned char 
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;  mode            1    5[COMRAM] unsigned char 
 15578 ;; Return value:  Size  Location     Type
 15579 ;;                  1    wreg      void 
 15580 ;; Registers used:
 15581 ;;		wreg, status,2, status,0, cstack
 15582 ;; Tracked objects:
 15583 ;;		On entry : 0/0
 15584 ;;		On exit  : 0/0
 15585 ;;		Unchanged: 0/0
 15586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;Total ram usage:        1 bytes
 15592 ;; Hardware stack levels used:    1
 15593 ;; Hardware stack levels required when called:    2
 15594 ;; This function calls:
 15595 ;;		i2_RegisterSet
 15596 ;; This function is called by:
 15597 ;;		i2_TxPacket
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text73
 15602  002408                     __ptext73:
 15603                           	opt stack 0
 15604  002408                     i2_SetRFMode:
 15605                           	opt stack 11
 15606                           
 15607                           ;incstack = 0
 15608                           ;i2SetRFMode@mode stored from wreg
 15609  002408  6E06               	movwf	i2SetRFMode@mode,c
 15610                           
 15611                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 15612  00240A  D02C               	goto	i2l6184
 15613  00240C                     i2l6162:
 15614                           
 15615                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x80);
 15616  00240C  6A03               	clrf	i2RegisterSet@setting+1,c
 15617  00240E  0E8E               	movlw	142
 15618  002410  6E02               	movwf	i2RegisterSet@setting,c
 15619  002412  EC21  F014         	call	i2_RegisterSet	;wreg free
 15620                           
 15621                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 15622  002416  0E80               	movlw	128
 15623  002418  0100               	movlb	0	; () banked
 15624  00241A  6FD8               	movwf	_RF_Mode& (0+255),b
 15625                           
 15626                           ;drv_mrf_miwi_89xa.c: 673: break;
 15627  00241C  0C80               	retlw	128
 15628  00241E                     i2l6166:
 15629                           
 15630                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60);
 15631  00241E  6A03               	clrf	i2RegisterSet@setting+1,c
 15632  002420  0E6E               	movlw	110
 15633  002422  6E02               	movwf	i2RegisterSet@setting,c
 15634  002424  EC21  F014         	call	i2_RegisterSet	;wreg free
 15635                           
 15636                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 15637  002428  0E60               	movlw	96
 15638  00242A  0100               	movlb	0	; () banked
 15639  00242C  6FD8               	movwf	_RF_Mode& (0+255),b
 15640                           
 15641                           ;drv_mrf_miwi_89xa.c: 677: break;
 15642  00242E  0C60               	retlw	96
 15643  002430                     i2l6170:
 15644                           
 15645                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x40);
 15646  002430  6A03               	clrf	i2RegisterSet@setting+1,c
 15647  002432  0E4E               	movlw	78
 15648  002434  6E02               	movwf	i2RegisterSet@setting,c
 15649  002436  EC21  F014         	call	i2_RegisterSet	;wreg free
 15650                           
 15651                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 15652  00243A  0E40               	movlw	64
 15653  00243C  0100               	movlb	0	; () banked
 15654  00243E  6FD8               	movwf	_RF_Mode& (0+255),b
 15655                           
 15656                           ;drv_mrf_miwi_89xa.c: 681: break;
 15657  002440  0C40               	retlw	64
 15658  002442                     i2l6174:
 15659                           
 15660                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x20);
 15661  002442  6A03               	clrf	i2RegisterSet@setting+1,c
 15662  002444  0E2E               	movlw	46
 15663  002446  6E02               	movwf	i2RegisterSet@setting,c
 15664  002448  EC21  F014         	call	i2_RegisterSet	;wreg free
 15665                           
 15666                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 15667  00244C  0E20               	movlw	32
 15668  00244E  0100               	movlb	0	; () banked
 15669  002450  6FD8               	movwf	_RF_Mode& (0+255),b
 15670                           
 15671                           ;drv_mrf_miwi_89xa.c: 685: break;
 15672  002452  0C20               	retlw	32
 15673  002454                     i2l6178:
 15674                           
 15675                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x00);
 15676  002454  6A03               	clrf	i2RegisterSet@setting+1,c
 15677  002456  0E0E               	movlw	14
 15678  002458  6E02               	movwf	i2RegisterSet@setting,c
 15679  00245A  EC21  F014         	call	i2_RegisterSet	;wreg free
 15680                           
 15681                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 15682  00245E  0100               	movlb	0	; () banked
 15683  002460  6BD8               	clrf	_RF_Mode& (0+255),b
 15684                           
 15685                           ;drv_mrf_miwi_89xa.c: 689: break;
 15686  002462  0012               	return	
 15687  002464                     i2l6184:
 15688  002464  5006               	movf	i2SetRFMode@mode,w,c
 15689                           
 15690                           ; Switch size 1, requested type "speed"
 15691                           ; Number of cases is 5, Range of values is 0 to 128
 15692                           ; switch strategies available:
 15693                           ; Name         Instructions Cycles
 15694                           ; simple_byte           16     9 (average)
 15695                           ;	Chosen strategy is simple_byte
 15696  002466  E0F6               	bz	i2l6178
 15697  002468  0A20               	xorlw	32	; case 32
 15698  00246A  E0EB               	bz	i2l6174
 15699  00246C  0A60               	xorlw	96	; case 64
 15700  00246E  E0E0               	bz	i2l6170
 15701  002470  0A20               	xorlw	32	; case 96
 15702  002472  E0D5               	bz	i2l6166
 15703  002474  0AE0               	xorlw	224	; case 128
 15704  002476  E0CA               	bz	i2l6162
 15705  002478  0012               	return		;funcret
 15706  00247A                     __end_ofi2_SetRFMode:
 15707                           	opt stack 0
 15708                           tblptru	equ	0xFF8
 15709                           tblptrh	equ	0xFF7
 15710                           tblptrl	equ	0xFF6
 15711                           tablat	equ	0xFF5
 15712                           prodh	equ	0xFF4
 15713                           prodl	equ	0xFF3
 15714                           intcon	equ	0xFF2
 15715                           intcon2	equ	0xFF1
 15716                           intcon3	equ	0xFF0
 15717                           postinc0	equ	0xFEE
 15718                           wreg	equ	0xFE8
 15719                           indf1	equ	0xFE7
 15720                           postinc1	equ	0xFE6
 15721                           postdec1	equ	0xFE5
 15722                           fsr1h	equ	0xFE2
 15723                           fsr1l	equ	0xFE1
 15724                           bsr	equ	0xFE0
 15725                           indf2	equ	0xFDF
 15726                           postinc2	equ	0xFDE
 15727                           postdec2	equ	0xFDD
 15728                           fsr2h	equ	0xFDA
 15729                           fsr2l	equ	0xFD9
 15730                           status	equ	0xFD8
 15731                           
 15732 ;; *************** function i2_RegisterSet *****************
 15733 ;; Defined at:
 15734 ;;		line 164 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15735 ;; Parameters:    Size  Location     Type
 15736 ;;  setting         2    1[COMRAM] unsigned int 
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 15739 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 15740 ;; Return value:  Size  Location     Type
 15741 ;;                  1    wreg      void 
 15742 ;; Registers used:
 15743 ;;		wreg, status,2, cstack
 15744 ;; Tracked objects:
 15745 ;;		On entry : 0/0
 15746 ;;		On exit  : 0/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;Total ram usage:        4 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; Hardware stack levels required when called:    1
 15756 ;; This function calls:
 15757 ;;		i2_SPIPut
 15758 ;; This function is called by:
 15759 ;;		i2_TxPacket
 15760 ;;		i2_SetRFMode
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764                           	psect	text74
 15765  002842                     __ptext74:
 15766                           	opt stack 0
 15767  002842                     i2_RegisterSet:
 15768                           	opt stack 11
 15769                           
 15770                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 15771                           
 15772                           ;incstack = 0
 15773  002842  0E00               	movlw	0
 15774  002844  B6F0               	btfsc	intcon3,3,c	;volatile
 15775  002846  0E01               	movlw	1
 15776  002848  6E04               	movwf	i2RegisterSet@IRQ1select,c
 15777                           
 15778                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 15779  00284A  0E00               	movlw	0
 15780  00284C  B8F2               	btfsc	intcon,4,c	;volatile
 15781  00284E  0E01               	movlw	1
 15782  002850  6E05               	movwf	i2RegisterSet@IRQ0select,c
 15783                           
 15784                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 15785  002852  98F2               	bcf	intcon,4,c	;volatile
 15786                           
 15787                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 15788  002854  96F0               	bcf	intcon3,3,c	;volatile
 15789                           
 15790                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
 15791  002856  928C               	bcf	3980,1,c	;volatile
 15792                           
 15793                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 15794  002858  5003               	movf	i2RegisterSet@setting+1,w,c
 15795  00285A  ECD4  F015         	call	i2_SPIPut
 15796                           
 15797                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 15798  00285E  5002               	movf	i2RegisterSet@setting,w,c
 15799  002860  ECD4  F015         	call	i2_SPIPut
 15800                           
 15801                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
 15802  002864  828C               	bsf	3980,1,c	;volatile
 15803                           
 15804                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 15805  002866  B004               	btfsc	i2RegisterSet@IRQ1select,0,c
 15806  002868  D002               	bra	i2u507_45
 15807  00286A  96F0               	bcf	intcon3,3,c	;volatile
 15808  00286C  D001               	bra	i2u507_46
 15809  00286E                     i2u507_45:
 15810  00286E  86F0               	bsf	intcon3,3,c	;volatile
 15811  002870                     i2u507_46:
 15812                           
 15813                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 15814  002870  B005               	btfsc	i2RegisterSet@IRQ0select,0,c
 15815  002872  D002               	bra	i2u508_45
 15816  002874  98F2               	bcf	intcon,4,c	;volatile
 15817  002876  D001               	bra	i2u508_46
 15818  002878                     i2u508_45:
 15819  002878  88F2               	bsf	intcon,4,c	;volatile
 15820  00287A                     i2u508_46:
 15821  00287A  0012               	return		;funcret
 15822  00287C                     __end_ofi2_RegisterSet:
 15823                           	opt stack 0
 15824                           tblptru	equ	0xFF8
 15825                           tblptrh	equ	0xFF7
 15826                           tblptrl	equ	0xFF6
 15827                           tablat	equ	0xFF5
 15828                           prodh	equ	0xFF4
 15829                           prodl	equ	0xFF3
 15830                           intcon	equ	0xFF2
 15831                           intcon2	equ	0xFF1
 15832                           intcon3	equ	0xFF0
 15833                           postinc0	equ	0xFEE
 15834                           wreg	equ	0xFE8
 15835                           indf1	equ	0xFE7
 15836                           postinc1	equ	0xFE6
 15837                           postdec1	equ	0xFE5
 15838                           fsr1h	equ	0xFE2
 15839                           fsr1l	equ	0xFE1
 15840                           bsr	equ	0xFE0
 15841                           indf2	equ	0xFDF
 15842                           postinc2	equ	0xFDE
 15843                           postdec2	equ	0xFDD
 15844                           fsr2h	equ	0xFDA
 15845                           fsr2l	equ	0xFD9
 15846                           status	equ	0xFD8
 15847                           
 15848 ;; *************** function i2_RegisterRead *****************
 15849 ;; Defined at:
 15850 ;;		line 200 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;  address         1    wreg     unsigned char 
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;  address         1    1[COMRAM] unsigned char 
 15855 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 15856 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 15857 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 15858 ;; Return value:  Size  Location     Type
 15859 ;;                  1    wreg      unsigned char 
 15860 ;; Registers used:
 15861 ;;		wreg, status,2, status,0, cstack
 15862 ;; Tracked objects:
 15863 ;;		On entry : 0/1
 15864 ;;		On exit  : 0/0
 15865 ;;		Unchanged: 0/0
 15866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15868 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15871 ;;Total ram usage:        4 bytes
 15872 ;; Hardware stack levels used:    1
 15873 ;; Hardware stack levels required when called:    2
 15874 ;; This function calls:
 15875 ;;		i2_SPIGet
 15876 ;;		i2_SPIPut
 15877 ;; This function is called by:
 15878 ;;		_high_isr
 15879 ;;		i2_TxPacket
 15880 ;; This function uses a non-reentrant model
 15881 ;;
 15882                           
 15883                           	psect	text75
 15884  00270C                     __ptext75:
 15885                           	opt stack 0
 15886  00270C                     i2_RegisterRead:
 15887                           	opt stack 11
 15888                           
 15889                           ;incstack = 0
 15890                           ;i2RegisterRead@address stored from wreg
 15891  00270C  6E02               	movwf	i2RegisterRead@address,c
 15892                           
 15893                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 15894                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 15895  00270E  0E00               	movlw	0
 15896  002710  B6F0               	btfsc	intcon3,3,c	;volatile
 15897  002712  0E01               	movlw	1
 15898  002714  6E04               	movwf	i2RegisterRead@IRQ1select,c
 15899                           
 15900                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 15901  002716  0E00               	movlw	0
 15902  002718  B8F2               	btfsc	intcon,4,c	;volatile
 15903  00271A  0E01               	movlw	1
 15904  00271C  6E05               	movwf	i2RegisterRead@IRQ0select,c
 15905                           
 15906                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 15907  00271E  98F2               	bcf	intcon,4,c	;volatile
 15908                           
 15909                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 15910  002720  96F0               	bcf	intcon3,3,c	;volatile
 15911                           
 15912                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 15913  002722  928C               	bcf	3980,1,c	;volatile
 15914                           
 15915                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 15916  002724  8C02               	bsf	i2RegisterRead@address,6,c
 15917                           
 15918                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 15919  002726  5002               	movf	i2RegisterRead@address,w,c
 15920  002728  ECD4  F015         	call	i2_SPIPut
 15921                           
 15922                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 15923  00272C  EC44  F016         	call	i2_SPIGet	;wreg free
 15924  002730  6E03               	movwf	i2RegisterRead@value,c
 15925                           
 15926                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 15927  002732  828C               	bsf	3980,1,c	;volatile
 15928                           
 15929                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 15930  002734  B004               	btfsc	i2RegisterRead@IRQ1select,0,c
 15931  002736  D002               	bra	i2u537_45
 15932  002738  96F0               	bcf	intcon3,3,c	;volatile
 15933  00273A  D001               	bra	i2u537_46
 15934  00273C                     i2u537_45:
 15935  00273C  86F0               	bsf	intcon3,3,c	;volatile
 15936  00273E                     i2u537_46:
 15937                           
 15938                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 15939  00273E  B005               	btfsc	i2RegisterRead@IRQ0select,0,c
 15940  002740  D002               	bra	i2u538_45
 15941  002742  98F2               	bcf	intcon,4,c	;volatile
 15942  002744  D001               	bra	i2u538_46
 15943  002746                     i2u538_45:
 15944  002746  88F2               	bsf	intcon,4,c	;volatile
 15945  002748                     i2u538_46:
 15946                           
 15947                           ;drv_mrf_miwi_89xa.c: 222: return value;
 15948  002748  5003               	movf	i2RegisterRead@value,w,c
 15949  00274A  0012               	return		;funcret
 15950  00274C                     __end_ofi2_RegisterRead:
 15951                           	opt stack 0
 15952                           tblptru	equ	0xFF8
 15953                           tblptrh	equ	0xFF7
 15954                           tblptrl	equ	0xFF6
 15955                           tablat	equ	0xFF5
 15956                           prodh	equ	0xFF4
 15957                           prodl	equ	0xFF3
 15958                           intcon	equ	0xFF2
 15959                           intcon2	equ	0xFF1
 15960                           intcon3	equ	0xFF0
 15961                           postinc0	equ	0xFEE
 15962                           wreg	equ	0xFE8
 15963                           indf1	equ	0xFE7
 15964                           postinc1	equ	0xFE6
 15965                           postdec1	equ	0xFE5
 15966                           fsr1h	equ	0xFE2
 15967                           fsr1l	equ	0xFE1
 15968                           bsr	equ	0xFE0
 15969                           indf2	equ	0xFDF
 15970                           postinc2	equ	0xFDE
 15971                           postdec2	equ	0xFDD
 15972                           fsr2h	equ	0xFDA
 15973                           fsr2l	equ	0xFD9
 15974                           status	equ	0xFD8
 15975                           
 15976 ;; *************** function i2_SPIGet *****************
 15977 ;; Defined at:
 15978 ;;		line 102 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 15979 ;; Parameters:    Size  Location     Type
 15980 ;;		None
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;		None
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  1    wreg      unsigned char 
 15985 ;; Registers used:
 15986 ;;		wreg, status,2, cstack
 15987 ;; Tracked objects:
 15988 ;;		On entry : 0/0
 15989 ;;		On exit  : 0/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;Total ram usage:        0 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; Hardware stack levels required when called:    1
 15999 ;; This function calls:
 16000 ;;		i2_SPIPut
 16001 ;; This function is called by:
 16002 ;;		_high_isr
 16003 ;;		i2_RegisterRead
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text76
 16008  002C88                     __ptext76:
 16009                           	opt stack 0
 16010  002C88                     i2_SPIGet:
 16011                           	opt stack 11
 16012                           
 16013                           ;spi.c: 123: SPIPut(0x00);
 16014                           
 16015                           ;incstack = 0
 16016  002C88  0E00               	movlw	0
 16017  002C8A  ECD4  F015         	call	i2_SPIPut
 16018                           
 16019                           ;spi.c: 124: return SSP1BUF;
 16020  002C8E  50C9               	movf	4041,w,c	;volatile
 16021  002C90  0012               	return		;funcret
 16022  002C92                     __end_ofi2_SPIGet:
 16023                           	opt stack 0
 16024                           tblptru	equ	0xFF8
 16025                           tblptrh	equ	0xFF7
 16026                           tblptrl	equ	0xFF6
 16027                           tablat	equ	0xFF5
 16028                           prodh	equ	0xFF4
 16029                           prodl	equ	0xFF3
 16030                           intcon	equ	0xFF2
 16031                           intcon2	equ	0xFF1
 16032                           intcon3	equ	0xFF0
 16033                           postinc0	equ	0xFEE
 16034                           wreg	equ	0xFE8
 16035                           indf1	equ	0xFE7
 16036                           postinc1	equ	0xFE6
 16037                           postdec1	equ	0xFE5
 16038                           fsr1h	equ	0xFE2
 16039                           fsr1l	equ	0xFE1
 16040                           bsr	equ	0xFE0
 16041                           indf2	equ	0xFDF
 16042                           postinc2	equ	0xFDE
 16043                           postdec2	equ	0xFDD
 16044                           fsr2h	equ	0xFDA
 16045                           fsr2l	equ	0xFD9
 16046                           status	equ	0xFD8
 16047                           
 16048 ;; *************** function i2_SPIPut *****************
 16049 ;; Defined at:
 16050 ;;		line 45 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;  v               1    wreg     unsigned char 
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;  v               1    0[COMRAM] unsigned char 
 16055 ;;  SPIPut          1    0        unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      void 
 16058 ;; Registers used:
 16059 ;;		wreg
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;Total ram usage:        1 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; This function calls:
 16072 ;;		Nothing
 16073 ;; This function is called by:
 16074 ;;		i2_RegisterSet
 16075 ;;		i2_RegisterRead
 16076 ;;		i2_WriteFIFO
 16077 ;;		i2_SPIGet
 16078 ;; This function uses a non-reentrant model
 16079 ;;
 16080                           
 16081                           	psect	text77
 16082  002BA8                     __ptext77:
 16083                           	opt stack 0
 16084  002BA8                     i2_SPIPut:
 16085                           	opt stack 12
 16086                           
 16087                           ;incstack = 0
 16088                           ;i2SPIPut@v stored from wreg
 16089  002BA8  6E01               	movwf	i2SPIPut@v,c
 16090                           
 16091                           ;spi.c: 64: {
 16092                           ;spi.c: 66: uint8_t i;
 16093                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
 16094  002BAA  969E               	bcf	3998,3,c	;volatile
 16095                           
 16096                           ;spi.c: 70: i = SSP1BUF;
 16097  002BAC  50C9               	movf	4041,w,c	;volatile
 16098  002BAE                     i2l714:
 16099                           
 16100                           ;spi.c: 73: {
 16101                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
 16102  002BAE  9EC6               	bcf	4038,7,c	;volatile
 16103                           
 16104                           ;spi.c: 75: SSP1BUF = v;
 16105  002BB0  C001  FFC9         	movff	i2SPIPut@v,4041	;volatile
 16106                           
 16107                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
 16108  002BB4  BEC6               	btfsc	4038,7,c	;volatile
 16109  002BB6  D7FB               	goto	i2l714
 16110  002BB8                     i2l716:
 16111  002BB8  A69E               	btfss	3998,3,c	;volatile
 16112  002BBA  D7FE               	goto	i2l716
 16113                           
 16114                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
 16115  002BBC  969E               	bcf	3998,3,c	;volatile
 16116  002BBE  0012               	return		;funcret
 16117  002BC0                     __end_ofi2_SPIPut:
 16118                           	opt stack 0
 16119                           tblptru	equ	0xFF8
 16120                           tblptrh	equ	0xFF7
 16121                           tblptrl	equ	0xFF6
 16122                           tablat	equ	0xFF5
 16123                           prodh	equ	0xFF4
 16124                           prodl	equ	0xFF3
 16125                           intcon	equ	0xFF2
 16126                           intcon2	equ	0xFF1
 16127                           intcon3	equ	0xFF0
 16128                           postinc0	equ	0xFEE
 16129                           wreg	equ	0xFE8
 16130                           indf1	equ	0xFE7
 16131                           postinc1	equ	0xFE6
 16132                           postdec1	equ	0xFE5
 16133                           fsr1h	equ	0xFE2
 16134                           fsr1l	equ	0xFE1
 16135                           bsr	equ	0xFE0
 16136                           indf2	equ	0xFDF
 16137                           postinc2	equ	0xFDE
 16138                           postdec2	equ	0xFDD
 16139                           fsr2h	equ	0xFDA
 16140                           fsr2l	equ	0xFD9
 16141                           status	equ	0xFD8
 16142                           
 16143 ;; *************** function i2_MiWi_TickGet *****************
 16144 ;; Defined at:
 16145 ;;		line 103 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;		None
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 16150 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 16151 ;; Return value:  Size  Location     Type
 16152 ;;                  4    0[COMRAM] struct _MIWI_TICK
 16153 ;; Registers used:
 16154 ;;		wreg, status,2, status,0
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/1
 16157 ;;		On exit  : F/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16163 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16164 ;;Total ram usage:       10 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; This function calls:
 16167 ;;		Nothing
 16168 ;; This function is called by:
 16169 ;;		_high_isr
 16170 ;;		i2_TxPacket
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text78
 16175  0025A4                     __ptext78:
 16176                           	opt stack 0
 16177  0025A4                     i2_MiWi_TickGet:
 16178                           	opt stack 13
 16179                           
 16180                           ;symbol.c: 105: MIWI_TICK currentTime;
 16181                           ;symbol.c: 108: uint8_t failureCounter;
 16182                           ;symbol.c: 111: PIE1bits.TMR1IE = 0;
 16183                           
 16184                           ;incstack = 0
 16185  0025A4  909D               	bcf	3997,0,c	;volatile
 16186                           
 16187                           ;symbol.c: 114: currentTime.byte.b2 = 0;
 16188  0025A6  6A09               	clrf	i2MiWi_TickGet@currentTime+2,c
 16189                           
 16190                           ;symbol.c: 115: currentTime.byte.b3 = 0;
 16191  0025A8  6A0A               	clrf	i2MiWi_TickGet@currentTime+3,c
 16192                           
 16193                           ;symbol.c: 117: failureCounter = 0;
 16194  0025AA  6A06               	clrf	i2MiWi_TickGet@failureCounter,c
 16195  0025AC                     i2l755:
 16196                           
 16197                           ;symbol.c: 120: {
 16198                           ;symbol.c: 121: currentTime.byte.b0 = TMR1L;
 16199  0025AC  CFCE F007          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 16200                           
 16201                           ;symbol.c: 122: currentTime.byte.b1 = TMR1H;
 16202  0025B0  CFCF F008          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 16203                           
 16204                           ;symbol.c: 123: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 16205  0025B4  2807               	incf	i2MiWi_TickGet@currentTime,w,c
 16206  0025B6  E108               	bnz	i2l758
 16207  0025B8  2808               	incf	i2MiWi_TickGet@currentTime+1,w,c
 16208  0025BA  E106               	bnz	i2l758
 16209  0025BC  2A06               	incf	i2MiWi_TickGet@failureCounter,f,c
 16210  0025BE  0406               	decf	i2MiWi_TickGet@failureCounter,w,c
 16211  0025C0  6E05               	movwf	??i2_MiWi_TickGet& (0+255),c
 16212  0025C2  0E02               	movlw	2
 16213  0025C4  6405               	cpfsgt	??i2_MiWi_TickGet,c
 16214  0025C6  D7F2               	goto	i2l755
 16215  0025C8                     i2l758:
 16216                           
 16217                           ;symbol.c: 127: if(PIR1bits.TMR1IF)
 16218  0025C8  A09E               	btfss	3998,0,c	;volatile
 16219  0025CA  D004               	goto	i2l6218
 16220                           
 16221                           ;symbol.c: 128: {
 16222                           ;symbol.c: 130: {
 16223                           ;symbol.c: 133: currentTime.byte.b2++;
 16224  0025CC  2A09               	incf	i2MiWi_TickGet@currentTime+2,f,c
 16225                           
 16226                           ;symbol.c: 134: if(timerExtension1 == 0xFF)
 16227  0025CE  2846               	incf	_timerExtension1,w,c	;volatile
 16228  0025D0  E101               	bnz	i2l6218
 16229                           
 16230                           ;symbol.c: 135: {
 16231                           ;symbol.c: 136: currentTime.byte.b3++;
 16232  0025D2  2A0A               	incf	i2MiWi_TickGet@currentTime+3,f,c
 16233  0025D4                     i2l6218:
 16234                           
 16235                           ;symbol.c: 137: }
 16236                           ;symbol.c: 138: }
 16237                           ;symbol.c: 139: }
 16238                           ;symbol.c: 142: currentTime.byte.b2 += timerExtension1;
 16239  0025D4  5046               	movf	_timerExtension1,w,c	;volatile
 16240  0025D6  2609               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 16241                           
 16242                           ;symbol.c: 143: currentTime.byte.b3 += timerExtension2;
 16243  0025D8  0100               	movlb	0	; () banked
 16244  0025DA  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
 16245  0025DC  260A               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;symbol.c: 146: PIE1bits.TMR1IE = 1;
 16249  0025DE  809D               	bsf	3997,0,c	;volatile
 16250                           
 16251                           ; BSR set to: 0
 16252                           ;symbol.c: 148: return currentTime;
 16253  0025E0  C007  F001         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 16254  0025E4  C008  F002         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 16255  0025E8  C009  F003         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 16256  0025EC  C00A  F004         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 16257                           
 16258                           ; BSR set to: 0
 16259  0025F0  0012               	return		;funcret
 16260  0025F2                     __end_ofi2_MiWi_TickGet:
 16261                           	opt stack 0
 16262                           tblptru	equ	0xFF8
 16263                           tblptrh	equ	0xFF7
 16264                           tblptrl	equ	0xFF6
 16265                           tablat	equ	0xFF5
 16266                           prodh	equ	0xFF4
 16267                           prodl	equ	0xFF3
 16268                           intcon	equ	0xFF2
 16269                           intcon2	equ	0xFF1
 16270                           intcon3	equ	0xFF0
 16271                           postinc0	equ	0xFEE
 16272                           wreg	equ	0xFE8
 16273                           indf1	equ	0xFE7
 16274                           postinc1	equ	0xFE6
 16275                           postdec1	equ	0xFE5
 16276                           fsr1h	equ	0xFE2
 16277                           fsr1l	equ	0xFE1
 16278                           bsr	equ	0xFE0
 16279                           indf2	equ	0xFDF
 16280                           postinc2	equ	0xFDE
 16281                           postdec2	equ	0xFDD
 16282                           fsr2h	equ	0xFDA
 16283                           fsr2l	equ	0xFD9
 16284                           status	equ	0xFD8
 16285                           
 16286 ;; *************** function i2_DELAY_10us *****************
 16287 ;; Defined at:
 16288 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 16291 ;; Auto vars:     Size  Location     Type
 16292 ;;  DELAY_10us      4   12[COMRAM] volatile long 
 16293 ;; Return value:  Size  Location     Type
 16294 ;;                  1    wreg      void 
 16295 ;; Registers used:
 16296 ;;		wreg, status,2, status,0, prodl, prodh
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16304 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16305 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16306 ;;Total ram usage:       16 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; This function calls:
 16309 ;;		Nothing
 16310 ;; This function is called by:
 16311 ;;		i2_TxPacket
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           	psect	text79
 16316  001D4C                     __ptext79:
 16317                           	opt stack 0
 16318  001D4C                     i2_DELAY_10us:
 16319                           	opt stack 13
 16320                           
 16321                           ;delay.c: 60: else
 16322                           ;delay.c: 61: {
 16323                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
 16324                           
 16325                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
 16326                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
 16327                           
 16328                           ; BSR set to: 0
 16329                           ;incstack = 0
 16330  001D4C  C001  F005         	movff	i2DELAY_10us@tenMicroSecondCounter,??i2_DELAY_10us
 16331  001D50  C002  F006         	movff	i2DELAY_10us@tenMicroSecondCounter+1,??i2_DELAY_10us+1
 16332  001D54  C003  F007         	movff	i2DELAY_10us@tenMicroSecondCounter+2,??i2_DELAY_10us+2
 16333  001D58  C004  F008         	movff	i2DELAY_10us@tenMicroSecondCounter+3,??i2_DELAY_10us+3
 16334  001D5C  0E28               	movlw	40
 16335  001D5E  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 16336  001D60  CFF3 F009          	movff	prodl,??i2_DELAY_10us+4
 16337  001D64  CFF4 F00A          	movff	prodh,??i2_DELAY_10us+5
 16338  001D68  6A0B               	clrf	(??i2_DELAY_10us+6)& (0+255),c
 16339  001D6A  6A0C               	clrf	(??i2_DELAY_10us+7)& (0+255),c
 16340  001D6C  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 16341  001D6E  50F3               	movf	prodl,w,c
 16342  001D70  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 16343  001D72  50F4               	movf	prodh,w,c
 16344  001D74  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 16345  001D76  0E00               	movlw	0
 16346  001D78  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 16347  001D7A  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 16348  001D7C  50F3               	movf	prodl,w,c
 16349  001D7E  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 16350  001D80  50F4               	movf	prodh,w,c
 16351  001D82  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 16352  001D84  0E00               	movlw	0
 16353  001D86  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 16354  001D88  0E28               	movlw	40
 16355  001D8A  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 16356  001D8C  50F3               	movf	prodl,w,c
 16357  001D8E  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 16358  001D90  50F4               	movf	prodh,w,c
 16359  001D92  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 16360  001D94  0E00               	movlw	0
 16361  001D96  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 16362  001D98  50F3               	movf	prodl,w,c
 16363  001D9A  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 16364  001D9C  50F4               	movf	prodh,w,c
 16365  001D9E  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 16366  001DA0  0E00               	movlw	0
 16367  001DA2  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 16368  001DA4  50F3               	movf	prodl,w,c
 16369  001DA6  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 16370  001DA8  50F4               	movf	prodh,w,c
 16371  001DAA  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 16372  001DAC  0E28               	movlw	40
 16373  001DAE  0208               	mulwf	(??i2_DELAY_10us+3)& (0+255),c
 16374  001DB0  50F3               	movf	prodl,w,c
 16375  001DB2  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 16376  001DB4  0E00               	movlw	0
 16377  001DB6  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 16378  001DB8  50F3               	movf	prodl,w,c
 16379  001DBA  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 16380  001DBC  0E00               	movlw	0
 16381  001DBE  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 16382  001DC0  50F3               	movf	prodl,w,c
 16383  001DC2  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 16384  001DC4  0E00               	movlw	0
 16385  001DC6  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 16386  001DC8  50F3               	movf	prodl,w,c
 16387  001DCA  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 16388  001DCC  C009  F00D         	movff	??i2_DELAY_10us+4,i2DELAY_10us@cyclesRequiredForEntireDelay	;volatile
 16389  001DD0  C00A  F00E         	movff	??i2_DELAY_10us+5,i2DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
 16390  001DD4  C00B  F00F         	movff	??i2_DELAY_10us+6,i2DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
 16391  001DD8  C00C  F010         	movff	??i2_DELAY_10us+7,i2DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
 16392                           
 16393                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
 16394  001DDC  0E51               	movlw	81
 16395  001DDE  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 16396  001DE0  0EFF               	movlw	255
 16397  001DE2  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 16398  001DE4  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 16399  001DE6  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 16400                           
 16401                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
 16402  001DE8  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 16403  001DEA  0CFF               	retlw	255
 16404  001DEC  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 16405  001DEE  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 16406  001DF0  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 16407  001DF2  E10B               	bnz	i2l593
 16408  001DF4  0E2E               	movlw	46
 16409  001DF6  5C0D               	subwf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 16410  001DF8  E208               	bc	i2l593
 16411  001DFA  0012               	return	
 16412  001DFC                     i2l594:
 16413                           
 16414                           ;delay.c: 80: {
 16415                           ;delay.c: 81: __nop();
 16416  001DFC  F000               	nop	
 16417                           
 16418                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 16419  001DFE  0ED6               	movlw	214
 16420  001E00  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 16421  001E02  0EFF               	movlw	255
 16422  001E04  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 16423  001E06  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 16424  001E08  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 16425  001E0A                     i2l593:
 16426  001E0A  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 16427  001E0C  0012               	return	
 16428  001E0E  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 16429  001E10  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 16430  001E12  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 16431  001E14  E1F3               	bnz	i2l594
 16432  001E16  040D               	decf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 16433  001E18  E2F1               	bc	i2l594
 16434  001E1A  0012               	return		;funcret
 16435  001E1C                     __end_ofi2_DELAY_10us:
 16436                           	opt stack 0
 16437                           tblptru	equ	0xFF8
 16438                           tblptrh	equ	0xFF7
 16439                           tblptrl	equ	0xFF6
 16440                           tablat	equ	0xFF5
 16441                           prodh	equ	0xFF4
 16442                           prodl	equ	0xFF3
 16443                           intcon	equ	0xFF2
 16444                           intcon2	equ	0xFF1
 16445                           intcon3	equ	0xFF0
 16446                           postinc0	equ	0xFEE
 16447                           wreg	equ	0xFE8
 16448                           indf1	equ	0xFE7
 16449                           postinc1	equ	0xFE6
 16450                           postdec1	equ	0xFE5
 16451                           fsr1h	equ	0xFE2
 16452                           fsr1l	equ	0xFE1
 16453                           bsr	equ	0xFE0
 16454                           indf2	equ	0xFDF
 16455                           postinc2	equ	0xFDE
 16456                           postdec2	equ	0xFDD
 16457                           fsr2h	equ	0xFDA
 16458                           fsr2l	equ	0xFD9
 16459                           status	equ	0xFD8
 16460                           
 16461 ;; *************** function _UserInterruptHandler *****************
 16462 ;; Defined at:
 16463 ;;		line 196 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;		None
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;		None
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      void 
 16470 ;; Registers used:
 16471 ;;		None
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 0/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16481 ;;Total ram usage:        0 bytes
 16482 ;; Hardware stack levels used:    1
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		_high_isr
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text80
 16491  002CAE                     __ptext80:
 16492                           	opt stack 0
 16493  002CAE                     _UserInterruptHandler:
 16494                           	opt stack 14
 16495                           
 16496                           ;incstack = 0
 16497  002CAE  0012               	return		;funcret
 16498  002CB0                     __end_of_UserInterruptHandler:
 16499                           	opt stack 0
 16500                           tblptru	equ	0xFF8
 16501                           tblptrh	equ	0xFF7
 16502                           tblptrl	equ	0xFF6
 16503                           tablat	equ	0xFF5
 16504                           prodh	equ	0xFF4
 16505                           prodl	equ	0xFF3
 16506                           intcon	equ	0xFF2
 16507                           intcon2	equ	0xFF1
 16508                           intcon3	equ	0xFF0
 16509                           postinc0	equ	0xFEE
 16510                           wreg	equ	0xFE8
 16511                           indf1	equ	0xFE7
 16512                           postinc1	equ	0xFE6
 16513                           postdec1	equ	0xFE5
 16514                           fsr1h	equ	0xFE2
 16515                           fsr1l	equ	0xFE1
 16516                           bsr	equ	0xFE0
 16517                           indf2	equ	0xFDF
 16518                           postinc2	equ	0xFDE
 16519                           postdec2	equ	0xFDD
 16520                           fsr2h	equ	0xFDA
 16521                           fsr2l	equ	0xFD9
 16522                           status	equ	0xFD8
 16523                           tblptru	equ	0xFF8
 16524                           tblptrh	equ	0xFF7
 16525                           tblptrl	equ	0xFF6
 16526                           tablat	equ	0xFF5
 16527                           prodh	equ	0xFF4
 16528                           prodl	equ	0xFF3
 16529                           intcon	equ	0xFF2
 16530                           intcon2	equ	0xFF1
 16531                           intcon3	equ	0xFF0
 16532                           postinc0	equ	0xFEE
 16533                           wreg	equ	0xFE8
 16534                           indf1	equ	0xFE7
 16535                           postinc1	equ	0xFE6
 16536                           postdec1	equ	0xFE5
 16537                           fsr1h	equ	0xFE2
 16538                           fsr1l	equ	0xFE1
 16539                           bsr	equ	0xFE0
 16540                           indf2	equ	0xFDF
 16541                           postinc2	equ	0xFDE
 16542                           postdec2	equ	0xFDD
 16543                           fsr2h	equ	0xFDA
 16544                           fsr2l	equ	0xFD9
 16545                           status	equ	0xFD8
 16546                           
 16547                           	psect	rparam
 16548  0000                     tblptru	equ	0xFF8
 16549                           tblptrh	equ	0xFF7
 16550                           tblptrl	equ	0xFF6
 16551                           tablat	equ	0xFF5
 16552                           prodh	equ	0xFF4
 16553                           prodl	equ	0xFF3
 16554                           intcon	equ	0xFF2
 16555                           intcon2	equ	0xFF1
 16556                           intcon3	equ	0xFF0
 16557                           postinc0	equ	0xFEE
 16558                           wreg	equ	0xFE8
 16559                           indf1	equ	0xFE7
 16560                           postinc1	equ	0xFE6
 16561                           postdec1	equ	0xFE5
 16562                           fsr1h	equ	0xFE2
 16563                           fsr1l	equ	0xFE1
 16564                           bsr	equ	0xFE0
 16565                           indf2	equ	0xFDF
 16566                           postinc2	equ	0xFDE
 16567                           postdec2	equ	0xFDD
 16568                           fsr2h	equ	0xFDA
 16569                           fsr2l	equ	0xFD9
 16570                           status	equ	0xFD8
 16571                           
 16572                           	psect	temp
 16573  000047                     btemp:
 16574                           	opt stack 0
 16575  000047                     	ds	1
 16576  0000                     int$flags	set	btemp
 16577                           tblptru	equ	0xFF8
 16578                           tblptrh	equ	0xFF7
 16579                           tblptrl	equ	0xFF6
 16580                           tablat	equ	0xFF5
 16581                           prodh	equ	0xFF4
 16582                           prodl	equ	0xFF3
 16583                           intcon	equ	0xFF2
 16584                           intcon2	equ	0xFF1
 16585                           intcon3	equ	0xFF0
 16586                           postinc0	equ	0xFEE
 16587                           wreg	equ	0xFE8
 16588                           indf1	equ	0xFE7
 16589                           postinc1	equ	0xFE6
 16590                           postdec1	equ	0xFE5
 16591                           fsr1h	equ	0xFE2
 16592                           fsr1l	equ	0xFE1
 16593                           bsr	equ	0xFE0
 16594                           indf2	equ	0xFDF
 16595                           postinc2	equ	0xFDE
 16596                           postdec2	equ	0xFDD
 16597                           fsr2h	equ	0xFDA
 16598                           fsr2l	equ	0xFD9
 16599                           status	equ	0xFD8


Data Sizes:
    Strings     474
    Constant    350
    Data        11
    BSS         674
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      70
    BANK0           160     82     149
    BANK1           256      4     251
    BANK2           256     13      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$2924	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[17]), STR_30(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_29(CODE[21]), STR_28(CODE[16]), STR_27(CODE[22]), STR_26(CODE[16]), 
		 -> STR_20(CODE[29]), STR_19(CODE[30]), STR_18(CODE[32]), STR_17(CODE[28]), 
		 -> STR_16(CODE[31]), STR_15(CODE[17]), STR_14(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_29(CODE[21]), STR_26(CODE[16]), STR_20(CODE[29]), STR_19(CODE[30]), 
		 -> STR_18(CODE[32]), STR_17(CODE[28]), STR_16(CODE[31]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Write@dest	PTR unsigned char  size(2) Largest target is 300
		 -> conn_size(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), ConnectionTable(BIGRAM[300]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 300
		 -> conn_size(BANK0[1]), myLongAddress(COMRAM[8]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), 
		 -> ConnectionTable(BIGRAM[300]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 300
		 -> ConnectionTable(BIGRAM[300]), NULL(NULL[0]), RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 104
		 -> ActiveScanResults(BANK2[60]), NULL(NULL[0]), RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 300
		 -> ConnectionTable(BIGRAM[300]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 300
		 -> ActiveScanResults(BANK2[60]), ConnectionTable(BIGRAM[300]), NULL(NULL[0]), RxPacket.Payload(BANK1[50]), 
		 -> RxPacket(BANK1[104]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 300
		 -> ActiveScanResults(BANK2[60]), ConnectionTable(BIGRAM[300]), NULL(NULL[0]), RxPacket.Payload(BANK1[50]), 
		 -> RxPacket(BANK1[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(COMRAM[8]), 

    S838$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BANK1[104]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 

    S838$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BANK1[104]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), nvmConnectionTable(BANK0[2]), nvmConnMode(BANK0[2]), 
		 -> nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 30
		 -> TxBuffer(BANK1[30]), 

    S335$DestAddress	PTR unsigned char  size(2) Largest target is 300
		 -> ActiveScanResults(BANK2[60]), ConnectionTable(BIGRAM[300]), NULL(NULL[0]), RxPacket(BANK1[104]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 300
		 -> ActiveScanResults(BANK2[60]), ConnectionTable(BIGRAM[300]), NULL(NULL[0]), RxPacket(BANK1[104]), 

    initValue.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(COMRAM[8]), 

    S38$PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(COMRAM[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(1) Largest target is 8
		 -> myLongAddress(COMRAM[8]), 

    S349$Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket(BANK1[104]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 104
		 -> RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 

    S349$SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket(BANK1[104]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 104
		 -> NULL(NULL[0]), RxPacket.Payload(BANK1[50]), RxPacket(BANK1[104]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_DELAY_10us
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _main in BANK0

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _Run_Demo->_run_p2p_demo
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _MiApp_BroadcastPacket->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _EEPROM_Read->_SPIPut2
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_DELAY_10us
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _AddConnection->_EEPROM_Write
    _MiApp_ConnectionMode->_EEPROM_Write
    _EEPROM_Write->_SPIPut2
    _SPIGet2->_SPIPut2
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCDWriteCmd
    _LCD_Update->_LCDWriteData
    _LCDWriteData->_SPIPut2
    _LCD_Erase->_DELAY_ms
    _LCDWriteCmd->_SPIPut2

Critical Paths under _low_isr in BANK0

    _low_isr->i1_RegisterRead
    i1_RegisterRead->i1_SPIPut
    i1_SPIGet->i1_SPIPut

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_p2p_demo

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  271908
                                             81 BANK0      1     1      0
                _DemoOutput_Greeting
                    _InitSymbolTimer
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                     13    13      0   15933
                                             61 BANK0     13    13      0
                      _ButtonPressed
                           _DELAY_ms
                         _LCDDisplay
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1355
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    1355
                           _DELAY_ms
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  124556
                       _run_p2p_demo
 ---------------------------------------------------------------------------------
 (2) _run_p2p_demo                                        11    11      0  124556
                                             74 BANK0      7     7      0
                                              0 BANK1      4     4      0
                      _ButtonPressed
                           _DELAY_ms
             _DemoOutput_Instruction
             _DemoOutput_UnicastFail
              _DemoOutput_UpdateTxRx
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
            _MiApp_UnicastConnection
                  _Process_RxMessage
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     444
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    0     0      0   52697
                           _DELAY_ms
             _DemoOutput_Instruction
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1    9955
                                             58 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1    9508
                                             56 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastConnection                              2     1      1   11947
                                             68 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (4) _MiApp_UnicastAddress                                 4     0      4   11700
                                             64 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   11295
                                             64 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UnicastFail                               0     0      0   13250
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     682
                                             19 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      2     2      0  116760
                                             79 BANK0      2     2      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     870
                                             19 BANK0      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   5     5      0   25289
                                             26 BANK0      5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1147
                                             14 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    1134
                                              9 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           3     1      2    5790
                                             23 BANK0      3     1      2
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    3591
                                             10 BANK0      4     0      4
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (2) _MiApp_EstablishConnection                           18    17      1   49848
                                             74 BANK0      5     4      1
                                              0 BANK2     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    9061
                                             18 BANK0      1     1      0
                       _EEPROM_Write
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    4327
                                             15 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   28221
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            20    20      0   28221
                                             64 BANK0     10    10      0
                      _AddConnection
                       _EEPROM_Write
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                         _SendPacket
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          10     6      4   11253
                                             54 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                     9     3      6    7446
                                             45 BANK0      9     3      6
                           _TxPacket
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            20    19      1    6159
                                             25 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            3     3      0     180
                                             10 BANK0      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            1     1      0    2061
                                             14 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         4     2      2    2019
                                             10 BANK0      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         4     4      0     276
                                             10 BANK0      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      42
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIPut                                              2     2      0      42
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _DELAY_10us                                          16    12      4     265
                                              9 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0    1432
                                             19 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        10     6      4     586
                                              9 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    7148
                                             17 BANK0      7     7      0
                       _EEPROM_Write
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4    1232
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     192
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    4734
                                             17 BANK0      2     2      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (6) _EEPROM_Write                                         7     3      4    4650
                                             10 BANK0      7     3      4
                           _MacroNop
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (7) _SPIGet2                                              0     0      0      42
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_Instruction                               0     0      0   13250
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   13618
                                             61 BANK0      2     1      1
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   13250
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   13250
                                             56 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    6965
                                             21 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             16 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0     528
                                             11 BANK0      1     1      0
                        _LCDWriteCmd
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (4) _LCDWriteData                                         1     1      0      84
                                             10 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    1810
                           _DELAY_ms
                        _LCDWriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     455
                                              9 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCDWriteCmd                                          1     1      0      84
                                             10 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (5) _SPIPut2                                              2     2      0      42
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                            14    12      2    1271
                                              9 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _low_isr                                             4     4      0     136
                                              5 BANK0      4     4      0
                     i1_RegisterRead
 ---------------------------------------------------------------------------------
 (13) i1_RegisterRead                                      4     4      0     136
                                              1 BANK0      4     4      0
                           i1_SPIGet
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_SPIGet                                            0     0      0      22
                           i1_SPIPut
 ---------------------------------------------------------------------------------
 (14) i1_SPIPut                                            2     2      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _high_isr                                           23    23      0    3163
                                             36 COMRAM    23    23      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (17) i2_TxPacket                                         20    19      1    1387
                                             16 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (18) i2_WriteFIFO                                         3     3      0      90
                                              1 COMRAM     3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_SetRFMode                                         1     1      0     290
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (19) i2_RegisterSet                                       4     2      2     268
                                              1 COMRAM     4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_RegisterRead                                      4     4      0     136
                                              1 COMRAM     4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIGet                                            0     0      0      22
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIPut                                            2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_MiWi_TickGet                                     10     6      4     222
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (18) i2_DELAY_10us                                       16    12      4      95
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (17) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDWriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCDWriteCmd
           _SPIPut2
         _LCDWriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _InitSymbolTimer
   _Initialize_Demo
     _DemoOutput_Channel
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCDWriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCDWriteCmd
             _SPIPut2
           _LCDWriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _DemoOutput_Instruction
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCDWriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCDWriteCmd
             _SPIPut2
           _LCDWriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _MiApp_ConnectionMode
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
           _isSameAddress
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _InitSymbolTimer
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
       _NVMInit
         _NVMalloc
     _MiApp_SetChannel
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiApp_StartConnection
       _MiWi_TickGet
   _Run_Demo
     _run_p2p_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_Instruction
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCDWriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCDWriteCmd
               _SPIPut2
             _LCDWriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _DemoOutput_UnicastFail
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCDWriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCDWriteCmd
               _SPIPut2
             _LCDWriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCDWriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCDWriteCmd
               _SPIPut2
             _LCDWriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCD_Erase
         _DELAY_ms
         _LCDWriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCDWriteCmd
           _SPIPut2
         _LCDWriteData
           _SPIPut2
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_Instruction
           _LCDDisplay
             _DELAY_ms
             _LCD_Erase
               _DELAY_ms
               _LCDWriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCDWriteCmd
                 _SPIPut2
               _LCDWriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
               _DELAY_ms
               _LCDWriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCDWriteCmd
                 _SPIPut2
               _LCDWriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
             _isSameAddress
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _LCDWriteCmd
         _SPIPut2
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCDWriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCDWriteCmd
           _SPIPut2
         _LCDWriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _MiWi_TickGet

 _low_isr (ROOT)
   i1_RegisterRead
     i1_SPIGet
       i1_SPIPut
     i1_SPIPut

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     12C      35        7.9%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      D      49      10       28.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      FB       8       98.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      95       5       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      46       1       74.5%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21F       6        0.0%
DATA                 0      0     34B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 22:33:43 2016

                                 i2_TxPacket 19A8                       _PUSH_BUTTON_press_time 00C4  
                                          _i 00E1                                 _run_p2p_demo 1076  
                             _LCD_Initialize 231C                          EEPROM_Write@oldRFIE 006F  
                          _Process_RxMessage 297A                         ?_MiMAC_DiscardPacket 0001  
                             ?_isSameAddress 0069                                           _DE FD3D  
                                         l84 188C                                           l85 188E  
                                         l86 18C6                                           l98 1918  
                                ?_LCD_Update 0001                                           bsr 000FE0  
                        ___wmul@multiplicand 006B                          MiApp_ProtocolInit@i 007E  
                         ?_Process_RxMessage 0001                            _ActiveScanResults 0200  
                                 _MiMAC_Init 1F62                              _P2PCapacityInfo 00D5  
                                        l141 1AF8                                          l146 1B3E  
                                        l147 1B72                                          l165 16E6  
                                        l406 09BE                                          l159 165E  
                                        l440 0CCA                                          l602 1D3A  
                                        l418 0AC2                                          l603 1D2A  
                                        l419 0ACA                                          l384 0CBA  
                                        l714 2B62                                          l539 1738  
                                        l716 2B6C                                          l725 2B7C  
                                        l549 1798                               ?i2_RegisterSet 0002  
                                        l727 2B86                                          l583 28F2  
                                        l496 14E0                                          l593 1C6A  
                                        l594 1C5A                                          l755 2560  
                                        l758 257C                                          l886 21BA  
                                        l975 108A                              ??_AddConnection 0071  
                                LCDDisplay@i 009C                                          prod 000FF3  
                                        wreg 000FE8                          ??_Process_RxMessage 00AA  
                        __size_of_DELAY_10us 00D2                                  i2_WriteFIFO 287C  
                              NVMInit@result 006E            __end_of_MiApp_EstablishConnection 15A8  
             __size_of_MiApp_StartConnection 001A                                 ?_LCDWriteCmd 0001  
              __end_of_MiApp_StartConnection 2B5A                            _Total_Connections 2A9C  
                                       l1100 01FE                                         l1040 248C  
                                       l1035 229A                                         l1150 04D0  
                                       l1145 0486                                         l1081 01B6  
                                       l1065 0076                                         l1162 062E  
                                       l1082 0180                                         l1147 04AC  
                                       l1139 0414                                         l1148 04B0  
                                       l1166 0594                                         l1096 01C0  
                                       l1099 01FA                                         l1605 27FC  
                                       l1595 2632                                         l9010 0320  
                                       l9002 030E                                         l5562 2962  
                                       l9100 04E0                                         l9110 051E  
                                       l9022 0348                                         l9024 034C  
                                       l9008 031C                                         l9200 0766  
                                       l8320 23BC                                         l8312 2398  
                            ?i2_RegisterRead 0001                                         l8402 1910  
                                       l9116 0532                                         l9124 0552  
                                       l9036 0374                                         l9052 03A0  
                                       l8324 23CE                                         l8316 23AA  
                                       l9150 05DA                                         l9134 0578  
                                       l9062 03D8                                         l9038 0378  
                                       l9054 03B2                                         l8334 23F0  
                                       l8414 1944                                         l8430 199A  
                                       l8502 1B96                                         l9214 07CC  
                                       l9160 061A                                         l9144 05A4  
                                       l9128 055C                                         l9080 044A  
                                       l8328 23E0                                         l8432 19A4  
                                       l8416 1948                                         l9304 08F6  
                                       l8610 2A16                                         l9074 0418  
                                       l9058 03C6                                         l8530 2118  
                                       l8514 2AA0                                         l8418 1950  
                                       l9402 0B04                                         l9314 093C  
                                       l9234 0832                                         l8620 2B38  
                                       l9148 05D4                                         l9068 03EE  
                                       l8348 2588                                         l8380 18B6  
                                       l9404 0B06                                         l9244 084C  
                                       l8606 2A06                                         l9182 06FE  
                                       l9174 06A8                                         l9166 0630  
                                       l9094 04CA                                         l9086 048A  
                                       l8390 18EA                                         l9406 0B0C  
                                       l9334 097E                                         l9318 0944  
                                       l9246 085E                                         l9510 2004  
                                       l8640 260E                                         l9192 0732  
                                       l9168 066E                                         l9184 0710  
                                       l8800 1818                                         l8368 1896  
                                       l8464 1ACE                                         l9432 0BB8  
                                       l9248 0864                                         l9178 06CC  
                                       l8570 2184                                         l8714 16EA  
                                       l8394 1900                                         l9450 0C1A  
                                       l9442 0C06                                         l9418 0B58  
                                       l8636 2602                                         l8660 27E0  
                                       l9188 071E                                         l8900 00C8  
                                       l8556 2158                                         l8708 16B0  
                                       l8484 1B2E                                         l9380 0A74  
                                       l9372 0A58                                         l9356 09D4  
                                       l9268 0882                                         l9612 2942  
                                       l8638 260A                                         l9198 074E  
                                       l8726 171E                                         l8494 1B62  
                                       l8478 1B0E                                         l9390 0AAC  
                                       l9382 0A90                                         l9286 08C2  
                                       l9606 292C                                         l9702 2A46  
                                       l8648 2628                                         l8664 27F2  
                                       l8656 27D4                                         l8584 29C8  
                                       l8760 1778                                         l8752 173A  
                                       l8496 1B76                                         l8488 1B46  
                                       l9368 0A50                                         l9296 08D6  
                                       l9624 29FA                                         l8850 22BE  
                                       l8658 27DC                                         l9490 27B4  
                                       l8578 29A8                                         l8674 15AA  
                                       l9458 0C84                                         l9466 0C8E  
                                       l9714 12A2                                         l9810 2B4C  
                                       l8852 22D0                                         l8932 01A2  
                                       l8916 0146                                         l8908 0120  
                                       l8764 1780                                         l8684 1650  
                                       l9396 0ACE                                         l9468 0CBC  
                                       l9804 2B44                                         l8870 2310  
                                       l8846 22A6                                         l8950 0204  
                                       l8934 01BA                                         l9566 1F80  
                                       l8864 22E6                                         l8944 01E6  
                                       l8936 01BE                                         l8928 0184  
                                       l9920 2AD0                                         l8776 178E  
                                       l8768 1788                                         l9576 1F9C  
                                       l9728 12CC                                         l8970 0260  
                                       l8954 0214                                         l8962 023C  
                                       l8938 01C4                                         l8882 0080  
                                       l8786 179E                                         l8778 1792  
                                       l8698 1660                                         l9834 146A  
                                       l9826 143C                                         l9762 134A  
                                       l9666 21DE                                         l9674 2218  
                                       l8868 22FE                                         l8980 028E  
                                       l8972 0272                                         l8956 0224  
                                       l8884 0084                                         l8892 0092  
                                       l8876 005E                                         l9756 12FA  
                                       l9932 1090                                         l8966 0250  
                                       l8886 0088                                         l9870 151E  
                                       l9774 136E                                         l9694 2A30  
                                       l9950 10FC                                         l9926 1080  
                                       STR_1 FF46                                         l8976 0280  
                                       l8984 0294                                         l8888 008C  
                                       l9776 13A8                                         STR_2 FFDB  
                                       l8986 02CE                                         l9882 1558  
                                       l9890 159A                                         l9778 13E4  
                                       l9954 110C                                         STR_4 FFCD  
                                       l8998 02FC                                         l9886 158E  
                                       l9966 119E                                         STR_8 FE1D  
                                       l9984 11BC                                         l9998 121C  
                     __size_of_ButtonPressed 0084                                         u8105 2192  
                                       u8106 2194                    DemoOutput_Channel@channel 009E  
                                       u8240 163E                                         u9120 07B6  
                                       u8410 1ED4                                         i2l84 19B0  
                                       i2l85 19B2                                         i2l86 19EC  
                                       u8430 1EEC                                         u9080 0732  
                                       u9160 0808                                         u7705 2708  
                                       i2l98 1A3A                                         u7706 270A  
                                       u7715 2670                                         u9155 07F6  
                                       u7716 2672                                         u8428 1ED8  
                                       u7725 267C                                         u9157 07FA  
                                       u7726 267E                                         u7910 198C  
                                       u8470 1F20                                         u7735 2832  
                                       u8455 1F06                                         u7736 2834  
                                       u8456 1F0A                                         u8448 1EF0  
                                       u7745 283E                                         u8465 1F12  
                                       u9185 0822                                         u7746 2840  
                                       u8466 1F16                                         u9178 080C  
                                       u9187 0826                                         u7695 26FC  
                                       u7696 26FE                                         u8488 1F24  
                                       u7970 1AD8                                         u9650 2216  
                                       u8880 047C                                         u9760 14B8  
                                       u9745 13FC                                         u9746 1400  
                                       u7988 1ADC                    freezer_feature@switch_val 00A9  
                                       _MiWi FCBF                           ?_Total_Connections 0001  
                  MiApp_StartConnection@Mode 0078                   MiMAC_SetChannel@offsetFreq 006F  
                                       _main 2B04                              __end_of_SPIGet2 2C7E  
                            __end_of_NVMInit 2556                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                       fsr1l 000FE1                                         indf2 000FDF  
                                       fsr2l 000FD9                                         btemp 0047  
                            __end_of_SPIPut2 2B8E                           __size_of_LCD_Erase 0028  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 0054                             __end_of_DELAY_ms 1D4C  
                               _sprintf$2924 008A                                 _sprintf$2917 0086  
                               _sprintf$2918 0088                          ??_Total_Connections 0069  
                     __end_of_LCD_Initialize 2392                    __end_of_Process_RxMessage 29A6  
                             _InitConfigRegs FD7F                                 high_isr@bAck 0036  
                               ___param_bank 000010                        ??_MiMAC_DiscardPacket 0069  
                       __end_of_EEPROM_Write 2196                             __end_of_P2PTasks 0CD0  
                              ?_LCDWriteData 0001                 __end_of_MiApp_DiscardMessage 2CA0  
                              __CFG_PLLDIV$2 000000                                        l10000 121E  
                                      l10020 1282                                        l10014 1274  
                                      l10016 1278                                        l10008 123A  
                                      l10024 128C                                        l10200 2B1C  
                                      l10018 127C                                        l10140 226E  
                                      l10170 24A6                                        l10154 2298  
                                      l10180 24D2                                        l10182 24E4  
                                      ?_main 0001                                        STR_20 FEAC  
              MiApp_EstablishConnection@Mode 00AA                                        STR_21 FFE7  
                                      STR_13 FFBD                                        STR_14 FF8C  
                                      STR_30 FF59                                        STR_22 FEC9  
                                      STR_15 FF7B                                        STR_31 FF6A  
                                      STR_23 FF01                                        STR_24 FFF0  
                                      STR_16 FE6F                                        STR_17 FEE5  
                                      STR_26 FFAD                                        STR_18 FE4F  
                                      STR_27 FF1B                                        STR_19 FE8E  
                                      STR_28 FF9D                                        STR_29 FF31  
                            __end_of___lbmod 2A4E                                        _T1CON 000FCD  
                                LCD_Update@i 006B                      ?_DemoOutput_Instruction 0001  
                            __end_of___lwdiv 263C                                        i1l175 0044  
                            __end_of___lwmod 2806                                        i2l209 0F12  
                                      i1l714 2B96                                        i1l716 2BA0  
                                      i2l190 0D48                                        i2l183 0D2A  
                                      i2l185 0D5E                                        i2l196 0D82  
                                      i2l199 0E08                                        i2l714 2BAE  
                                      i2l716 2BB8                                        i2l593 1E0A  
                                      i2l594 1DFC                                        i2l755 25AC  
                                      i2l758 25C8                     __size_of_InitSymbolTimer 0010  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                             __end_ofi1_SPIGet 2C88  
                           SendPacket@tParam 009D                             __end_ofi1_SPIPut 2BA8  
                           __end_ofi2_SPIGet 2C92                       ?_DemoOutput_UpdateTxRx 009A  
                          high_isr@BankIndex 003A                             __end_ofi2_SPIPut 2BC0  
                  __end_of_Total_Connections 2AC0                                        _RxNum 00DB  
                                      _TxNum 00DD                          __size_of_LCDDisplay 003E  
              __size_of_MiApp_ConnectionMode 0034                         freezer_feature@tick1 00A1  
                       freezer_feature@tick2 00A5                              __end_of_dpowers FE15  
                           SendPacket@status 009B                __size_of_MiApp_UnicastAddress 0014  
                            __end_of_isdigit 2B40                              __end_of_low_isr 0054  
                           __end_of_NVMalloc 297A                                        tablat 000FF5  
                             ButtonPressed@t 0077                          __size_of_LCD_Update 0080  
                                      status 000FD8                              __end_of_sprintf 0772  
                           EEPROM_Write@addr 006C                       __end_of_InitConfigRegs FDBF  
                           EEPROM_Write@dest 006A                                ?i2_DELAY_10us 0001  
                  __size_of_MiMAC_SetChannel 008C                         __size_of_EEPROM_Read 0032  
                __end_of_DemoOutput_Greeting 2C1E                              ?_LCD_Initialize 0001  
                               __end_of_MiWi FD3D                              __initialization 2084  
                            ??_isSameAddress 006D                                  ?i2_TxPacket 0011  
                  __size_of_MiMAC_SendPacket 00E4                             __end_of_MacroNop 2CA8  
                               __end_of_main 2B22                               ??_LCDWriteData 006A  
                             TxPacket@status 008B                                _ButtonPressed 2196  
                            ??i2_RegisterSet 0004       MiApp_UnicastConnection@ConnectionIndex 00A5  
             __end_of_DemoOutput_Instruction 2C0C                     i1RegisterRead@IRQ0select 0064  
                   i1RegisterRead@IRQ1select 0063                                ??_RegisterSet 006C  
                          high_isr@PacketLen 0039                                       ??_main 00B1  
                                ?_MiMAC_Init 0077                      _DemoOutput_ChannelError 2CAC  
                              __activetblptr 000002                            __end_of_LCD_Erase 2A76  
                       __end_of_MiWi_TickGet 25A4                                _IRQ1_Received 00D1  
                           ??i1_RegisterRead 0061                      MiApp_SetChannel@channel 0072  
                           __end_of_TxPacket 19A8                             __end_of_Run_Demo 2CA4  
          MiApp_ProtocolInit@bNetworkFreezer 007B                         _MiMAC_ReceivedPacket 15A8  
                            i2SetRFMode@mode 0006                                   _SendPacket 1EC4  
                                  ??_SPIGet2 006A                                    ??_NVMInit 006E  
                                     _EECON2 000FA7                                       _ANCON0 000F48  
                                     _ANCON1 000F49                                    ??_SPIPut2 0069  
                   ?_MiApp_UnicastConnection 00A4                                       _MACSeq 00D3  
                             __CFG_WDTEN$OFF 000000                                       i1l6480 002E  
                                     i2l6218 25D4                                       i2l6170 2430  
                                     i2l6162 240C                                       i2l6412 19BC  
                                     i2l6174 2442                                       i2l6166 241E  
                                     i2l6422 19DC                                       i2l6184 2464  
                                     i2l6432 1A0C                                       i2l6512 0D1E  
                                     i2l6504 0D00                                       i2l6178 2454  
                                     i2l6460 1A70                                       i2l6444 1A30  
                                     i2l6436 1A20                                       i2l6524 0D40  
                                     i2l6516 0D2C                                       i2l6630 0F74  
                                     i2l6614 0EF2                                       i2l6534 0D68  
                                     i2l6456 1A66                                       i2l6472 1ABA  
                                     i2l6640 0F98                                       i2l6624 0F14  
                                     i2l6458 1A6A                                       i2l6650 1000  
                                     i2l6570 0DE0                                       i2l6636 0F90  
                                     i2l6652 1016                                       i2l6660 1026  
                                     i2l6670 1044                                       i2l6582 0E80  
                                     i2l6566 0DD8                                       i2l6654 101E  
                                     i2l6576 0E36                                       i2l6584 0E82  
                                     i2l6656 1022                                       i2l6682 1056  
                                     i2l6594 0EAC                                       i2l6586 0E94  
                                     _OSCCON 000FD3                                       _PVALUE FDBF  
                                     _RPOR21 000EDB                                       _RPINR1 000EE7  
                                     _RPOR19 000ED9                                       _SVALUE FDDF  
                                     _SPIGet 2C6A                                       _SPIPut 2B5A  
                    i2RegisterSet@IRQ0select 0005              MiApp_StartConnection@ChannelMap 0074  
                    i2RegisterSet@IRQ1select 0004                         __size_of_LCDTRXCount 003E  
                             ??i2_DELAY_10us 0005                __size_of_UserInterruptHandler 0002  
                               ??_DELAY_10us 006D                      ?_DemoOutput_UnicastFail 0001  
                                 TxPacket@t1 007E                                   TxPacket@t2 0082  
                         __size_of_SetRFMode 0076                               P2PTasks@status 00A8  
                             __CFG_XINST$OFF 000000                                       _TxData 00DC  
                 __size_of_Process_RxMessage 002C                             __end_of_high_isr 1076  
                                     ___wmul 2A76                      ??_MiApp_BroadcastPacket 00A0  
                             ?_ButtonPressed 0001                                    ??___lbmod 006A  
                                     _hasAck 00E0                     __size_of_freezer_feature 0082  
                  __size_of_MiApp_SetChannel 002A                                    ??___lwdiv 006D  
                                  ??___lwmod 0074                                       _memset 29FC  
                                     clear_0 20CA                                       clear_1 20DC  
                                     clear_2 20E8                                       clear_3 20F4  
                                     _nvmEdc 00EA                                 NVMalloc@size 0069  
                          high_isr@ackPacket 0032                                 __pdataCOMRAM 003C  
                                  ??_isdigit 0069                               LCDDisplay@text 0098  
                               __mediumconst FCBE                        ?_MiMAC_ReceivedPacket 0001  
                __size_of_DemoOutput_Channel 0024                                    ??_low_isr 0065  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 0024                                       tblptru 000FF8  
                ??_MiApp_EstablishConnection 00AB                                    ?_DELAY_ms 0069  
                         __end_of_DELAY_10us 1C7C                                   _TxSynCount 00DE  
                        __end_of_RegisterSet 270C                                ?_RegisterRead 0001  
                        __size_ofi2_TxPacket 011E                                    ??_sprintf 0081  
                          _ReceivedBankIndex 00DA                            ??_InitSymbolTimer 0069  
                               ?i2_SetRFMode 0001                         __size_of_LCDWriteCmd 0012  
                          _SYSTEM_Initialize 1E1C                                    ?_P2PTasks 0001  
                            ___lbmod@divisor 0069                         _MiApp_DiscardMessage 2C9A  
                        _PUSH_BUTTON_pressed 00D7                                   __accesstop 0060  
                         __size_of_WriteFIFO 003C                      __end_of__initialization 2100  
                            ___lbmod@counter 006B                            EEPROM_Write@count 006D  
             __end_of_DemoOutput_UnicastFail 2BFA                                    P2PTasks@i 00A9  
            MiMAC_ReceivedPacket@currentTick 007B                           ?_SYSTEM_Initialize 0001  
                        __size_of_MiMAC_Init 0096                                ___rparam_used 000001  
                             _chk_sel_status 00F3                             _LatestConnection 00D2  
                      __size_of_EEPROM_Write 0088                                 ??_LCDDisplay 009C  
                      _ActiveScanResultIndex 00D0                                    ?i1_SPIGet 0001  
                          high_isr@fifo_stat 0031                               __pcstackCOMRAM 0001  
                                  ?i1_SPIPut 0001                                    ?i2_SPIGet 0001  
                                  ?i2_SPIPut 0001                                 __pidataBANK0 2CA8  
                        ??_SYSTEM_Initialize 0077                        i2RegisterRead@address 0002  
                   __size_of_Initialize_Demo 0070                    ??_DemoOutput_ChannelError 0069  
                               ??_LCD_Update 006B                                   __end_of_DE FD7F  
                                  ?_NVMalloc 0069                              TxPacket@rssival 0089  
                            _ConnectionTable 0249                             ??i2_RegisterRead 0002  
            __end_of_MiApp_UnicastConnection 28E6                            __end_of_SetRFMode 2408  
                               ?i2_WriteFIFO 0001                                   ??_DELAY_ms 006B  
                             ??_RegisterRead 006A                                  ?_SendPacket 0096  
                         __end_of_LCDDisplay 27C8                    __end_of_SYSTEM_Initialize 1EC4  
                               sprintf@width 0093                        isSameAddress@Address1 0069  
                      isSameAddress@Address2 006B                                    ?_MacroNop 0001  
                       __end_of_LCDWriteData 2C30                                 _EEPROM_Write 210E  
                                 __pbssBANK0 00B2                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                        ?_MiApp_DiscardMessage 0001  
                                 ??_P2PTasks 00A0                  __size_of_MiApp_ProtocolInit 0188  
                                    ?_SPIGet 0001                                      ?_SPIPut 0001  
                         RegisterSet@setting 006A                           __end_of_LCD_Update 231C  
                  SendPacket@SecurityEnabled 0099                               isSameAddress@i 006F  
                 MiApp_BroadcastPacket@SecEn 00A0                          i2RegisterRead@value 0003  
                           _MiMAC_SetChannel 1FF8                    _MiApp_EstablishConnection 1424  
                            ??_ButtonPressed 0073                                   ??i1_SPIGet 0061  
                                  ?_TxPacket 0079                                   ??i1_SPIPut 0060  
                           _MiMAC_SendPacket 1AC6                                   ??i2_SPIGet 0002  
                                 ??i2_SPIPut 0001                                    ?_Run_Demo 0001  
                                    ?___wmul 0069                        __size_of_MiWi_TickGet 004E  
                                    ?_memset 0069                                      SPIPut@v 0069  
                                 ??_NVMalloc 006C                            __end_of_WriteFIFO 2842  
                    ??_DemoOutput_UpdateTxRx 009B                                  _RegisterSet 26CC  
                          ??_freezer_feature 009D                       ??_MiMAC_ReceivedPacket 0073  
                         __CFG_OSC$INTOSCPLL 000000                                      _LCDText 01B8  
                       __end_ofi2_DELAY_10us 1E1C                        i2WriteFIFO@IRQ0select 0004  
                      i2WriteFIFO@IRQ1select 0003                              __CFG_WDTPS$2048 000000  
                      __end_of_AddConnection 1882                                      _RPINR21 000EFB  
                                    _SSP1BUF 000FC9                                      _SSP2BUF 000F75  
                                    _SPIGet2 2C74                                      _NVMInit 24EA  
                                    _RF_Mode 00D8                                      _AckInfo 0132  
                                    _SPIPut2 2B74                                    ?_high_isr 0001  
                                    _RSSIVal 0044                                   ??_MacroNop 0069  
                      _MiApp_StartConnection 2B40                             ??_LCD_Initialize 0077  
                AddConnection@connectionSlot 0076                              _timerExtension1 0046  
                            _timerExtension2 00E3                                  TxPacket@CCA 0079  
                   MiApp_ConnectionMode@Mode 0072                              __size_of_SPIGet 000A  
                           _AdditionalNodeID 00F2                              __size_of_SPIPut 001A  
                __end_of_MiMAC_DiscardPacket 2B04                              P2PTasks@tmpTick 00A4  
                                 DELAY_ms@ms 0069                                 _MiWi_TickGet 2556  
                                    __Hparam 0000                                      __Lparam 0000  
               __end_of_MiApp_ConnectionMode 291A                                 ??i2_TxPacket 0012  
                                 ??_TxPacket 007A                 __end_of_MiApp_UnicastAddress 2BD4  
                                 ??_Run_Demo 00B1                      __size_ofi2_MiWi_TickGet 004E  
                                    ___lbmod 2A26                              __size_of___wmul 0026  
                           _MiApp_SetChannel 29D2                          __size_of_SendPacket 009E  
                                    ___lwdiv 25F2                                      ___lwmod 27C8  
                                    __pcinit 2084                              __size_of_memset 002A  
             DemoOutput_ChannelError@channel 0001                                      __ramtop 0F00  
                                    __ptext0 2B04                                      __ptext1 221A  
                               ??_MiMAC_Init 0079                                      __ptext2 1E1C  
                                    __ptext3 231C                                      __ptext4 2CA0  
                                    __ptext5 1076                                      __ptext6 2A26  
                                    __ptext7 297A                                      __ptext8 2C52  
                                    __ptext9 274C                            __end_of_hexpowers FE1D  
                                  _T1CONbits 000FCD                                      _dpowers FE0B  
              Initialize_Demo@freezer_enable 00AF                     ??_MiApp_MessageAvailable 00AA  
                                    _isdigit 2B22                            ??_Initialize_Demo 00AF  
                              _myLongAddress 003C                       DemoOutput_Channel@Step 009D  
                                    _low_isr 0018                       RegisterRead@IRQ0select 006D  
                     RegisterRead@IRQ1select 006C                                    _P2PStatus 00D6  
                                  _LCD_Erase 2A4E                                  _MyindexinPC 00D4  
                 __size_of_SYSTEM_Initialize 00A8                                      _sprintf 0058  
                     ??_MiApp_DiscardMessage 0069                                   ??_high_isr 0025  
                             __pintcode_body 0CD0                           __end_ofi2_TxPacket 1AC6  
                       end_of_initialization 2100                            __end_of_octpowers FE0B  
                                  i1SPIPut@v 0060                                    i2SPIPut@v 0001  
                              ??_EEPROM_Read 006E                                      memset@c 006B  
                                    memset@n 006D                                      memset@p 006F  
              MiMAC_SendPacket@MACPayloadLen 0092                                __Lmediumconst FCBE  
                                    int_func 0CD0                         __size_ofi2_SetRFMode 0072  
                            LCDDisplay@delay 009B            i2DELAY_10us@tenMicroSecondCounter 0001  
            DELAY_10us@tenMicroSecondCounter 0069                                   _nvmMyPANID 00EC  
                            LCDDisplay@value 009A                           __end_of_MiMAC_Init 1FF8  
               MiApp_UnicastConnection@SecEn 00A4             __size_of_MiApp_UnicastConnection 0034  
                    MiMAC_SetChannel@channel 0071                                  _TxSynCount2 00DF  
                                    postdec1 000FE5                                      postdec2 000FDD  
                       __end_of_RegisterRead 2684                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                      __end_of_isSameAddress 29D2         DELAY_ms@cyclesRequiredForEntireDelay 0073  
                        RegisterRead@address 006A               __size_of_MiApp_BroadcastPacket 0014  
                              WriteFIFO@Data 006A                __end_of_MiApp_BroadcastPacket 2BE8  
               __size_of_DemoOutput_Greeting 0012                                    _PORTBbits 000F81  
                            _InitSymbolTimer 2C42                             NVMalloc@location 006B  
                      __end_ofi2_RegisterSet 287C                 __end_of_UserInterruptHandler 2CB0  
                           ___lbmod@dividend 006A                        __size_of_LCDWriteData 0012  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISDbits 000F95  
                                  _TRISEbits 000F96                                   ?_LCD_Erase 0001  
                    MiMAC_SendPacket@TxIndex 0094                         __size_ofi2_WriteFIFO 0036  
                     ?_MiApp_StartConnection 0073                            __size_of_DELAY_ms 00D0  
                              ??_LCDTRXCount 0099                                  ___lbmod@rem 006C  
                 MiMAC_SendPacket@transParam 008D                    MiApp_UnicastAddress@SecEn 00A3  
                             __end_of_PVALUE FDDF                            __size_of_P2PTasks 055E  
                             __end_of_SVALUE FDFF                               __end_of_SPIGet 2C74  
                             __end_of_SPIPut 2B74                          __end_of_EEPROM_Read 294C  
                              ?_run_p2p_demo 0001                            __size_ofi1_SPIGet 000A  
                          __size_ofi1_SPIPut 001A                               __end_of___wmul 2A9C  
                               _LCDWriteData 2C1E                            __size_ofi2_SPIGet 000A  
                      __size_ofi2_DELAY_10us 00D0                            __size_ofi2_SPIPut 0018  
                              __pidataCOMRAM 2C92           __size_of_MiApp_EstablishConnection 0184  
                             __end_of_memset 2A26                   __end_of_DemoOutput_Channel 2AE4  
            __size_of_MiApp_MessageAvailable 000A             MiMAC_ReceivedPacket@PayloadIndex 007F  
                   __end_of_MiMAC_SetChannel 2084                            __size_of_NVMalloc 002E  
                        start_initialization 2084                          WriteFIFO@IRQ0select 006C  
                              TxPacket@reTry 0087                          WriteFIFO@IRQ1select 006B  
                   __end_of_MiMAC_SendPacket 1BAA                                 ??_SendPacket 009A  
                              ??_LCDWriteCmd 006A                         _MiApp_ConnectionMode 28E6  
                         TxPacket@CCARetries 0086                   i2TxPacket@allowedTxFailure 0022  
                            high_isr@counter 002F                         _MiApp_UnicastAddress 2BC0  
                                  _SetRFMode 2392                      EEPROM_Write@PageCounter 0070  
                    __size_ofi1_RegisterRead 0048                            __size_of_MacroNop 0004  
                                   ??_SPIGet 006A                                     ??_SPIPut 0069  
                             _currentChannel 00F1                                 i2_DELAY_10us 1D4C  
                                  TxPacket@i 008C                          __end_of_LCDTRXCount 278A  
MiApp_EstablishConnection@connectionInterval 023E                     ??_DemoOutput_Instruction 009D  
                             ??_run_p2p_demo 00AA                    run_p2p_demo@PressedButton 01F7  
                            _freezer_feature 221A                      __end_of_InitSymbolTimer 2C52  
                             i2_MiWi_TickGet 25A4                                     ??___wmul 006D  
          MiApp_UnicastAddress@PermanentAddr 00A2                                  __pdataBANK0 00F2  
                          __size_of_TxPacket 0126                           __end_of_SendPacket 1F62  
                                   ??_memset 006F                            __size_of_Run_Demo 0004  
                               ?_RegisterSet 006A                            RegisterRead@value 006B  
             __size_of_DemoOutput_UpdateTxRx 000E                                  __pbssBIGRAM 0249  
                    MiWi_TickGet@currentTime 006F                __end_of_DemoOutput_UpdateTxRx 2C60  
                                __pbssCOMRAM 0044                             LCDWriteData@data 006A  
                                  _WriteFIFO 2806                                __pcstackBANK0 0060  
                              __pcstackBANK1 01F7                                __pcstackBANK2 023C  
                      ?_MiApp_ConnectionMode 0001                          SendPacket@Broadcast 009C  
                                ??_LCD_Erase 0077       MiApp_UnicastAddress@DestinationAddress 00A0  
                      ?_MiApp_UnicastAddress 00A0                                 _isdigit$3148 006A  
                                   ?_SPIGet2 0001                                     ?_NVMInit 0001  
                 __end_of_MiApp_ProtocolInit 1424                                     ?_SPIPut2 0001  
                 MiApp_EstablishConnection@i 0248                     __end_of_MiApp_SetChannel 29FC  
                                 ?_SetRFMode 0001                                  MiMAC_Init@i 0079  
                          __size_of_high_isr 106E                                  sprintf@flag 0096  
                                _EEPROM_Read 291A                                  sprintf@prec 0092  
                        __end_of_LCDWriteCmd 2C42                        __size_of_RegisterRead 0048  
                     _MiApp_MessageAvailable 2C60                         _UserInterruptHandler 2CAE  
                     __end_ofi2_MiWi_TickGet 25F2                            MiMAC_SendPacket@i 0095  
                           ___lwdiv@dividend 0069                      _MiApp_UnicastConnection 28B2  
                   ?_DemoOutput_ChannelError 0001                                    __pintcode 0008  
                              __pmediumconst FCBE                              _Initialize_Demo 247A  
                      __end_of_ButtonPressed 221A                                     ?___lbmod 0069  
                                   ?___lwdiv 0069                                     ?___lwmod 0070  
                                __pintcodelo 0018                                    _conn_size 00F0  
                                   ?_isdigit 0001                                     SPIPut2@v 0069  
                                 ?_WriteFIFO 0001                                     ?_low_isr 0001  
              __size_of_MiMAC_ReceivedPacket 0182                                     _DELAY_ms 1C7C  
                        AddConnection@status 0075                                    _hexpowers FE15  
                   ??_DemoOutput_UnicastFail 009D                             ___lwdiv@quotient 006E  
                                   ?_sprintf 0075                                 _RegisterRead 263C  
                                _LCDTRXCount 274C                                     _P2PTasks 0772  
                        _DemoOutput_Greeting 2C0C                      __end_of_freezer_feature 229C  
                             ___wmul@product 006D                      __size_ofi2_RegisterRead 0040  
                                   _LATAbits 000F89                         i2RegisterSet@setting 0002  
                                   _LATCbits 000F8B                                     _LATDbits 000F8C  
                                   _LATEbits 000F8D                        ?_UserInterruptHandler 0001  
                                  _octpowers FDFF                                     _PIE1bits 000F9D  
                 DemoOutput_UpdateTxRx@RxNum 009A                   DemoOutput_UpdateTxRx@TxNum 009B  
                            ?i2_MiWi_TickGet 0001                                     i1u552_25 26B8  
                                   i1u552_26 26BA                                     i1u553_25 26C4  
                                   i1u553_26 26C6                                     _PIR1bits 000F9E  
                                   i2u507_45 286E                                     i2u507_46 2870  
                                   i2u508_45 2878                                     i2u540_45 28AE  
                                   i2u508_46 287A                                     i2u540_46 28B0  
                                   _PIR3bits 000FA4                                     i2u537_45 273C  
                                   i2u537_46 273E                                     i2u562_40 1AAC  
                                   i2u538_45 2746                                     i2u538_46 2748  
                                   i2u539_45 28A4                                     i2u539_46 28A6  
                                  _rxMessage 00B2                           _nvmConnectionTable 00E6  
                                   i1_SPIGet 2C7E                                     i1_SPIPut 2B8E  
                        high_isr@RxPacketPtr 0037                                     i2_SPIGet 2C88  
            __size_of_DemoOutput_Instruction 0012                                     i2_SPIPut 2BA8  
                           ?_InitSymbolTimer 0001                                     _SSP1CON1 000FC6  
                                   _SSP2CON1 000F72                       __size_of_AddConnection 0158  
                                   _SSP1STAT 000FC7                                     _SSP2STAT 000F73  
               __size_of_MiMAC_DiscardPacket 0020     MiApp_EstablishConnection@ActiveScanIndex 0247  
          MiApp_StartConnection@ScanDuration 0073                                  _MACRxPacket 00BC  
                       ?_DemoOutput_Greeting 0001                                     _RSSILock 00D9  
                                _MACTxBuffer 0100                                SetRFMode@mode 006E  
                                   _NVMalloc 294C                            ___wmul@multiplier 0069  
                                  high_isr@i 003B                        i2TxPacket@TxPacketLen 0016  
                     ??_MiApp_ConnectionMode 0071                           main@freezer_enable 00B1  
                     ??_MiApp_UnicastAddress 00A4                      ??_MiApp_StartConnection 0078  
                        SendPacket@isCommand 0098                         high_isr@ackInfoIndex 0038  
                       __end_of_run_p2p_demo 129C                               _nextEEPosition 00CE  
   i2DELAY_10us@cyclesRequiredForEntireDelay 000D       DELAY_10us@cyclesRequiredForEntireDelay 0075  
                                   _ConnMode 00F4                                  _LCDWriteCmd 2C30  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
             MiApp_EstablishConnection@retry 023D                                    copy_data0 20B6  
                              ??i2_SetRFMode 0006                                  ??_SetRFMode 006E  
                                   _MacroNop 2CA4                             __size_of_SPIGet2 000A  
                           __size_of_NVMInit 006C                             __size_of_SPIPut2 001A  
                             i1_RegisterRead 2684                __size_of_MiApp_DiscardMessage 0006  
                                   _TxMACSeq 0045              __end_of_DemoOutput_ChannelError 2CAE  
                  ??_MiApp_UnicastConnection 00A5                      __end_of_Initialize_Demo 24EA  
                                 _DELAY_10us 1BAA                                     __Hrparam 0000  
                                   _RxPacket 0150                                     _TxBuffer 01D9  
                               _nvmDelayTick 00C8                                     __Lrparam 0000  
                                   _TxPacket 1882                                     _Run_Demo 2CA0  
                         Total_Connections@i 006A                      __size_of_LCD_Initialize 0076  
                      MiMAC_ReceivedPacket@i 0080                             __size_of___lbmod 0028  
                      ??_DemoOutput_Greeting 009D                              LCDWriteCmd@data 006A  
                           __size_of___lwdiv 004A                             __size_of___lwmod 003E  
                   i2RegisterRead@IRQ0select 0005                     i2RegisterRead@IRQ1select 0004  
                     run_p2p_demo@switch_val 01F9                        _MiApp_BroadcastPacket 2BD4  
                                 sprintf@idx 0085                                   sprintf@len 008D  
                                 sprintf@val 0090                         __size_of_RegisterSet 0040  
                              ??i2_WriteFIFO 0002                                  ??_WriteFIFO 006A  
                           __size_of_isdigit 001E                            ?_MiMAC_SetChannel 006F  
                            ___lwdiv@divisor 006B                       _DemoOutput_Instruction 2BFA  
                            ___lwdiv@counter 006D                             __size_of_low_isr 003C  
                                   __ptext10 28B2                                     __ptext11 2BC0  
                                   __ptext20 1F62                                     __ptext12 2BD4  
                                   __ptext21 2C42                                     __ptext13 2BE8  
                                   __ptext30 1882                                     __ptext22 291A  
                                   __ptext14 2196                                     __ptext31 2806  
                                   __ptext23 1424                                     __ptext15 247A  
                                   __ptext40 172A                                     __ptext32 2392  
                                   __ptext24 29D2                                     __ptext16 2B40  
                                   __ptext41 29A6                                     __ptext33 26CC  
                                   __ptext25 1FF8                                     __ptext17 129C  
                                   __ptext50 2CAC                                     __ptext42 2A9C  
                                   __ptext34 263C                                     __ptext26 2C60  
                                   __ptext18 24EA                                     __ptext51 2AC0  
                                   __ptext43 2C9A                                     __ptext35 2C6A  
                                   __ptext27 0772                                     __ptext19 294C  
                                   __ptext60 2C1E                                     __ptext52 2C0C  
                                   __ptext44 2AE4                                     __ptext36 2B5A  
                                   __ptext28 1EC4                                     __ptext61 2A4E  
                                   __ptext53 278A                                     __ptext45 28E6  
                                   __ptext37 1BAA                                     __ptext29 1AC6  
                                   __ptext62 29FC                                     __ptext54 0058  
                                   __ptext46 210E                                     __ptext38 15A8  
                                   __ptext71 19A8                                     __ptext63 2C30  
                                   __ptext55 2B22                                     __ptext47 2C74  
                                   __ptext39 2556                                     __ptext80 2CAE  
                                   __ptext72 287C                                     __ptext64 2B74  
                                   __ptext56 2A76                                     __ptext48 2CA4  
                                   __ptext73 2408                                     __ptext65 1C7C  
                                   __ptext57 27C8                                     __ptext49 2BFA  
                                   __ptext74 2842                                     __ptext58 25F2  
                                   __ptext75 270C                                     __ptext67 2684  
                                   __ptext59 229C                                     __ptext76 2C88  
                                   __ptext68 2C7E                                     __ptext77 2BA8  
                                   __ptext69 2B8E                                     __ptext78 25A4  
                                   __ptext79 1D4C                                 _SSP1CON1bits 000FC6  
                              _AddConnection 172A                     TxPacket@allowedTxFailure 0088  
                         ??_MiMAC_SetChannel 0070                            ?_MiMAC_SendPacket 008D  
            __size_of_DemoOutput_UnicastFail 0012                       __end_ofi1_RegisterRead 26CC  
                                   _high_isr 0008                                 _SSP2CON1bits 000F72  
                              ?_EEPROM_Write 006A                             __size_of_sprintf 071A  
                     __size_of_isSameAddress 002C                           ??_MiMAC_SendPacket 0093  
                           Initialize_Demo@i 00B0                           _DemoOutput_Channel 2AC0  
                     ??_UserInterruptHandler 0001                                __size_of_main 001E  
                           ?_freezer_feature 0001                       __size_ofi2_RegisterSet 003A  
                        __end_ofi2_SetRFMode 247A                          ?_DemoOutput_Channel 009D  
                                 _LCDDisplay 278A                                     _temp_bit 00E2  
                      run_p2p_demo@select_ed 01FA                                     int$flags 0047  
                         LCDTRXCount@rxCount 0098                  MiApp_EstablishConnection@t1 023F  
                MiApp_EstablishConnection@t2 0243                 i2MiWi_TickGet@failureCounter 0006  
                         LCDTRXCount@txCount 0099                                   _LCD_Update 229C  
                 MiMAC_SendPacket@MACPayload 0090                        __CFG_CPUDIV$OSC3_PLL3 000000  
                      run_p2p_demo@update_ed 01F8                                  _OSCTUNEbits 000F9B  
                                 _INTCONbits 000FF2                               AddConnection@i 0077  
                       ??_DemoOutput_Channel 009E                              i2WriteFIFO@Data 0002  
                             ?_AddConnection 0001                  ButtonPressed@tickDifference 0073  
                                   isdigit@c 006B                                     memset@p1 0069  
                             ??_EEPROM_Write 006E                              ?i1_RegisterRead 0001  
                                _nvmConnMode 00E4                       Total_Connections@count 0069  
                MiApp_ProtocolInit@initValue 007C                                     intlevel1 0000  
                                   intlevel2 0000                            ?_MiApp_SetChannel 0001  
                                  sprintf@ap 008F                                    sprintf@cp 008C  
                                  sprintf@sp 0075                      ?_MiApp_MessageAvailable 0001  
                        __end_ofi2_WriteFIFO 28B2                               i2_RegisterRead 270C  
                           ___lwmod@dividend 0070                                 ?_EEPROM_Read 006A  
                         ??_MiApp_SetChannel 0072                             ?_Initialize_Demo 0001  
                              ?_MiWi_TickGet 0069                                  ?_DELAY_10us 0069  
                         _MiApp_ProtocolInit 129C                 SendPacket@DestinationAddress 0096  
                     _DemoOutput_UnicastFail 2BE8                                _MACInitParams 00CC  
                        MiMAC_Init@initValue 0077                        i1RegisterRead@address 0061  
                              _isSameAddress 29A6                          ?_MiApp_ProtocolInit 0001  
                 MiWi_TickGet@failureCounter 006E                       ?_MiApp_BroadcastPacket 0001  
                                   sprintf@c 0095                                     sprintf@f 0077  
                      __size_of_run_p2p_demo 0226                                i2_RegisterSet 2842  
                                 _PPSCONbits 000EFF             __size_of_DemoOutput_ChannelError 0002  
                            ___lwmod@divisor 0072   MiApp_EstablishConnection@tmpConnectionMode 023C  
                            ___lwmod@counter 0074                            i2TxPacket@rssival 0023  
                        TxPacket@TxPacketLen 008A                   ?_MiApp_EstablishConnection 00AA  
                      _DemoOutput_UpdateTxRx 2C52                         i2TxPacket@CCARetries 0020  
                                 _WDTCONbits 000FC0               __end_of_MiApp_MessageAvailable 2C6A  
                     __end_ofi2_RegisterRead 274C                          _MiMAC_DiscardPacket 2AE4  
                                i2_SetRFMode 2408                           _nvmOutFrameCounter 00EE  
                          _nvmCurrentChannel 00E8                         ??_MiApp_ProtocolInit 007A  
                           i2TxPacket@status 0017                                 ?_LCDTRXCount 0098  
                           ??i2_MiWi_TickGet 0005                             EEPROM_Read@count 006D  
                            i2TxPacket@reTry 0021                               ??_MiWi_TickGet 006D  
                        i1RegisterRead@value 0062                              EEPROM_Read@addr 006C  
                              i2TxPacket@CCA 0011                    i2MiWi_TickGet@currentTime 0007  
                            EEPROM_Read@dest 006A                        RegisterSet@IRQ0select 006D  
                      RegisterSet@IRQ1select 006C                 __end_of_MiMAC_ReceivedPacket 172A  
                               i2TxPacket@t1 0018                                 i2TxPacket@t2 001C  
                                ?_LCDDisplay 0098                                  i2TxPacket@i 0024  
